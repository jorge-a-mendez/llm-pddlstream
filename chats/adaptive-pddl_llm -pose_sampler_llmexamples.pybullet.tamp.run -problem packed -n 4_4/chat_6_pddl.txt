User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q2: object
           #q4: object
           #q6: object
           #t0: object
           #t11: object
           #t13: object
           #t2: object
           #t4: object
           #t6: object
           #t7: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v3: object
           v4: object
           v5: object
           v51: object
           v54: object
           v6: object
           v64: object
           v65: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom ~test-cfree-pose-pose-negative(v16, v25, v14, v20)
           Atom ~test-cfree-pose-pose-negative(v16, v22, v14, v20)
           Atom ~test-cfree-pose-pose-negative(v16, v22, v14, v24)
           Atom stackable(v14, v18)
           Atom atpose(v12, v13)
           Atom graspable(v14)
           Atom stackable(v16, v10)
           Atom graspable(v16)
           Atom ~test-cfree-pose-pose-negative(v16, v23, v14, v24)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom ~test-cfree-pose-pose-negative(v16, v22, v14, v26)
           Atom supported(v12, v13, v11)
           Atom handempty(v4)
           Atom bconf(v3)
           Atom atpose(v16, v17)
           Atom pose(v8, v9)
           Atom canmove()
           Atom pose(v12, v13)
           Atom controllable(v4)
           Atom stackable(v14, v10)
           Atom ~test-cfree-pose-pose-negative(v16, v25, v14, v24)
           Atom pose(v16, v17)
           Atom atpose(v8, v9)
           Atom stackable(v16, v18)
           Atom stackable(v8, v18)
           Atom stackable(v12, v10)
           Atom supported(v14, v15, v11)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom aconf(v6, v7)
           Atom atbconf(v3)
           Atom ~test-cfree-pose-pose-negative(v16, v23, v14, v20)
           Atom stackable(v12, v18)
           Atom ~test-cfree-pose-pose-negative(v16, v23, v14, v26)
           Atom graspable(v12)
           Atom arm(v6)
           Atom graspable(v8)
           Atom handempty(v6)
           Atom supported(v16, v17, v11)
           Atom ataconf(v4, v5)
           Atom stackable(v8, v10)
           Atom ~test-cfree-pose-pose-negative(v16, v25, v14, v26)
           Atom supported(v8, v9, v11)
           Atom ataconf(v6, v7)
           Atom grasp(v14, #g3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g2)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v8, v54)
           Atom supported(v8, v54, v18)
           Atom pose(v8, v51)
           Atom supported(v8, v51, v18)
           Atom pose(v12, v64)
           Atom supported(v12, v64, v18)
           Atom pose(v12, v65)
           Atom supported(v12, v65, v18)
           Atom pose(v12, v21)
           Atom supported(v12, v21, v18)
           Atom pose(v16, v25)
           Atom supported(v16, v25, v18)
           Atom pose(v16, v23)
           Atom supported(v16, v23, v18)
           Atom pose(v16, v22)
           Atom supported(v16, v22, v18)
           Atom pose(v14, v26)
           Atom supported(v14, v26, v18)
           Atom pose(v14, v20)
           Atom supported(v14, v20, v18)
           Atom pose(v14, v24)
           Atom supported(v14, v24, v18)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #g0)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, v13, #g2, #q2, #t2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v64, #g2, #o3, #o4)
           Atom kin(v4, v12, v21, #g2, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v8, v9, #g1, #q4, #t4)
           Atom kin(v4, v8, v19, #g1, #o3, #o4)
           Atom kin(v4, v8, v51, #g1, #o3, #o4)
           Atom kin(v4, v16, v22, #g0, #o3, #o4)
           Atom kin(v4, v16, v23, #g0, #o3, #o4)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v16, v17, #g0, #q0, #t0)
           Atom kin(v4, v14, v20, #g3, #o3, #o4)
           Atom kin(v4, v14, v24, #g3, #o3, #o4)
           Atom bconf(#q6)
           Atom atraj(#t6)
           Atom kin(v4, v14, v15, #g3, #q6, #t6)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q6, #o0, #q6)
           Atom btraj(#t13)
           Atom basemotion(v3, #t13, #q6)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q6, #o0, #q0)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q4)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom kin(v4, v16, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g3, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, v3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t11))
           ((move_base v3 #q6 #t13))
           ((move_base v3 #q0 #t7))
           ((move_base v3 #q2 #t9))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 v13 #g2 #q2 #t2))
           ((place v4 v12 v13 #g2 #q2 #t2))
           ((pick v4 v12 v21 #g2 #o3 #o4))
           ((place v4 v12 v21 #g2 #o3 #o4))
           ((pick v4 v12 v64 #g2 #o3 #o4))
           ((place v4 v12 v64 #g2 #o3 #o4))
           ((pick v4 v14 #o2 #g3 #o3 #o4))
           ((place v4 v14 #o2 #g3 #o3 #o4))
           ((pick v4 v14 v15 #g3 #q6 #t6))
           ((place v4 v14 v15 #g3 #q6 #t6))
           ((pick v4 v14 v20 #g3 #o3 #o4))
           ((place v4 v14 v20 #g3 #o3 #o4))
           ((pick v4 v14 v24 #g3 #o3 #o4))
           ((place v4 v14 v24 #g3 #o3 #o4))
           ((pick v4 v16 #o2 #g0 #o3 #o4))
           ((place v4 v16 #o2 #g0 #o3 #o4))
           ((pick v4 v16 v17 #g0 #q0 #t0))
           ((place v4 v16 v17 #g0 #q0 #t0))
           ((pick v4 v16 v22 #g0 #o3 #o4))
           ((place v4 v16 v22 #g0 #o3 #o4))
           ((pick v4 v16 v23 #g0 #o3 #o4))
           ((place v4 v16 v23 #g0 #o3 #o4))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 v19 #g1 #o3 #o4))
           ((place v4 v8 v19 #g1 #o3 #o4))
           ((pick v4 v8 v51 #g1 #o3 #o4))
           ((place v4 v8 v51 #g1 #o3 #o4))
           ((pick v4 v8 v9 #g1 #q4 #t4))
           ((place v4 v8 v9 #g1 #q4 #t4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains four graspable objects: `v8`, `v12`, `v14`, and `v16`. These objects are currently at various poses, specifically `v8` at `v9`, `v12` at `v13`, `v14` at `v15`, and `v16` at `v17`. All of these objects are initially supported by `v11`. There is one robot arm, `v4`, which is currently empty. The goal is to place all four objects (`v8`, `v12`, `v14`, and `v16`) on `v18`. To achieve this, the robot needs to pick up each object from its current location and place it on a pose associated with `v18`. The available `kin` and `pose` facts show potential target poses for each object on `v18`.
           
           The plan will involve a sequence of pick and place actions. For each object, the robot needs to first move its base to the configuration that allows it to grasp the object, then pick it, then move its base to the configuration that allows it to place the object on `v18`, and finally place it. The `basemotion` facts indicate how the robot can move between different base configurations.
           
           --Plan--:
           (move_base v3 #q2 #t9)
           (pick v4 v12 v13 #g2 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v12 v64 #g2 #o3 #o4)
           (move_base #o3 #q6 #o0)
           (pick v4 v14 v15 #g3 #q6 #t6)
           (move_base #q6 #o3 #o0)
           (place v4 v14 v20 #g3 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v16 v17 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v16 v22 #g0 #o3 #o4)
           (move_base #o3 #q4 #o0)
           (pick v4 v8 v9 #g1 #q4 #t4)
           (move_base #q4 #o3 #o0)
           (place v4 v8 v19 #g1 #o3 #o4)

