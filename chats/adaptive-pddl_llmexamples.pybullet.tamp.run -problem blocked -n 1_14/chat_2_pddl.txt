User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v12, v10)
           Atom graspable(v12)
           Atom controllable(v4)
           Atom stackable(v15, v10)
           Atom type(v8, v17)
           Atom ataconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom atpose(v15, v16)
           Atom stackable(v8, v18)
           Atom pose(v12, v13)
           Atom aconf(v4, v5)
           Atom graspable(v15)
           Atom atpose(v12, v13)
           Atom handempty(v6)
           Atom stackable(v8, v10)
           Atom arm(v4)
           Atom bconf(v3)
           Atom supported(v15, v16, v11)
           Atom pose(v15, v16)
           Atom aconf(v6, v7)
           Atom stackable(v12, v18)
           Atom handempty(v4)
           Atom type(v12, v17)
           Atom arm(v6)
           Atom supported(v8, v9, v11)
           Atom atbconf(v3)
           Atom canmove()
           Atom pose(v8, v9)
           Atom supported(v12, v13, v14)
           Atom atpose(v8, v9)
           Atom graspable(v8)
           Atom grasp(v12, #o1)
           Atom grasp(v8, #o1)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three graspable objects: `v12`, `v15`, and `v8`. The robot has two arms, `v4` and `v6`, but only `v4` is controllable. The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true. Looking at the initial state, `type(v12, v17)` is true, meaning `v12` can be considered `?green` for the axiom. Therefore, the plan needs to make `on(v12, v18)` true. Currently, `v12` is at `v13` and supported by `v14`. There are poses `(#o2)` for `v12` that are supported by `v18`. So the plan should involve picking up `v12` from its current pose `v13` and placing it on `v18` at pose `#o2`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)

