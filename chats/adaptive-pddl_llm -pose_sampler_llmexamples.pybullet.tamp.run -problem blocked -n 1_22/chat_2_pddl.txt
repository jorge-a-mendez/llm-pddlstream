User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom pose(v8, v9)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom supported(v12, v13, v14)
           Atom aconf(v4, v5)
           Atom atpose(v15, v16)
           Atom pose(v12, v13)
           Atom bconf(v3)
           Atom ataconf(v4, v5)
           Atom supported(v15, v16, v11)
           Atom type(v8, v17)
           Atom stackable(v8, v18)
           Atom handempty(v6)
           Atom atpose(v8, v9)
           Atom graspable(v15)
           Atom canmove()
           Atom handempty(v4)
           Atom pose(v15, v16)
           Atom atpose(v12, v13)
           Atom atbconf(v3)
           Atom ataconf(v6, v7)
           Atom arm(v4)
           Atom stackable(v12, v10)
           Atom graspable(v12)
           Atom graspable(v8)
           Atom controllable(v4)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom stackable(v15, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v8, #o1)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v15, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to satisfy `new-axiom@0()`, which is an axiom stating `on(?green, v18)` and `type(?green, v17)`. In the current state, `v12` is `type(?v12, v17)`. If we interpret `?green` as `v12`, then the goal becomes to achieve `on(v12, v18)`.
           Currently, `v12` is at `pose(v12, v13)` and supported on `v14` (i.e. `on(v12, v14)` is true, although `v14`'s type is not specified). It is also supported on `v18` at pose `#o2` and supported on `v10` at pose `#o2`. The initial state has `atpose(v12, v13)`. To achieve `on(v12, v18)`, we need to place `v12` at `pose(v12, #o2)` such that it is supported by `v18`.
           
           The current state has:
           - `atpose(v12, v13)`
           - `supported(v12, v13, v14)`
           - `pose(v12, #o2)`
           - `supported(v12, #o2, v18)`
           
           To reach the goal, we need to pick `v12` from its current pose `v13` and place it at pose `#o2` where it will be supported by `v18`. The robot arm `v4` is `handempty(v4)` and at `aconf(v4, v5)`. The robot base is at `atbconf(v3)`.
           
           1. **Pick `v12` from `v13`**: Use `pick(v4, v12, v13, #o1, #o3, #o4)`. This requires the robot base to be at `#o3`. The initial `atbconf` is `v3`. So, we need to move the base first.
           2. **Move base to `#o3`**: `move_base(v3, #o3, #o0)`.
           3. **Pick `v12`**: `pick(v4, v12, v13, #o1, #o3, #o4)`.
           4. **Place `v12` onto `v18` at `#o2`**: `place(v4, v12, #o2, #o1, #o3, #o4)`.
           
           Let's verify the preconditions for each step:
           
           *   **`move_base(v3, #o3, #o0)`**:
               *   `basemotion(v3, #o0, #o3)`: Given.
               *   `atbconf(v3)`: Given.
               *   `canmove()`: Given.
               *   This action is valid.
           
           *   **`pick(v4, v12, v13, #o1, #o3, #o4)`**: (After `move_base`)
               *   `kin(v4, v12, v13, #o1, #o3, #o4)`: Given.
               *   `atpose(v12, v13)`: Given in initial state.
               *   `handempty(v4)`: Given in initial state.
               *   `atbconf(#o3)`: Achieved by previous `move_base`.
               *   `NegatedAtom unsafeapproach(v12, v13, #o1)`: Not explicitly given as true, so assumed false.
               *   `NegatedAtom unsafeatraj(#o4)`: Not explicitly given as true, so assumed false.
               *   This action is valid.
           
           *   **`place(v4, v12, #o2, #o1, #o3, #o4)`**: (After `pick`)
               *   `kin(v4, v12, #o2, #o1, #o3, #o4)`: Given.
               *   `atgrasp(v4, v12, #o1)`: Achieved by `pick`.
               *   `atbconf(#o3)`: Maintained after `pick`.
               *   `NegatedAtom unsafepose(v12, #o2)`: Not explicitly given as true, so assumed false.
               *   `NegatedAtom unsafeapproach(v12, #o2, #o1)`: Not explicitly given as true, so assumed false.
               *   `NegatedAtom unsafeatraj(#o4)`: Not explicitly given as true, so assumed false.
               *   This action is valid.
           
           After `place(v4, v12, #o2, #o1, #o3, #o4)`, `atpose(v12, #o2)` becomes true. Since `supported(v12, #o2, v18)` is true in the initial state, `on(v12, v18)` will become true. With `type(v12, v17)` already true, the goal `new-axiom@0()` (i.e. `on(v12, v18)` and `type(v12, v17)`) is achieved.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)

