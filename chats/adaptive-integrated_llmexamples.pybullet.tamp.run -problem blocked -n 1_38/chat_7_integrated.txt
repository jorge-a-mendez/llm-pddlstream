User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #t4: object
           #t5: object
           #t6: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v13 is a pose with position (-4.331, -0.192, 0.801) and quaternion (0.0, 0.0, 1.0, -0.019).
           Object v16 is a pose with position (4.35, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v28 is a pose with position (4.549, -0.29, 0.802) and quaternion (0.0, 0.0, -0.638, 0.77).
           Object v3 is a base configuration with (x, y, theta) = (2.5, 0.0, 0.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.0)).
           Object v24 is a base configuration with (x, y, theta) = (4.501, -0.981, 0.609).
           Object v23 is a grasp with position (0.005, 0.0, -0.04) and quaternion (0.0, -0.0, 1.0, -0.0) relative to the target object.
           Object v33 is a base configuration with (x, y, theta) = (4.49, -1.136, 0.266).
           Object v35 is a pose with position (4.542, -0.181, 0.802) and quaternion (0.0, 0.0, 0.999, 0.048).
           Object v40 is a pose with position (4.566, -0.158, 0.802) and quaternion (0.0, 0.0, 0.289, 0.957).
           Object v31 is a base configuration with (x, y, theta) = (4.011, -0.998, -0.261).
           Object v20 is a grasp with position (0.005, 0.0, -0.04) and quaternion (0.0, 0.0, 0.707, 0.707) relative to the target object.
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.6)).
           Object v36 is a base configuration with (x, y, theta) = (4.569, -1.162, 1.208).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.577, -0.56), (4.653, -0.484)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.8, -0.6), (-4.2, 0.6)).
           Object v26 is a base configuration with (x, y, theta) = (3.906, -0.184, 0.471).
           Object v22 is a grasp with position (0.005, 0.0, -0.04) and quaternion (0.0, 0.0, 0.0, 1.0) relative to the target object.
           Object v29 is a base configuration with (x, y, theta) = (4.961, -1.202, -0.363).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.367, -0.228), (-4.295, -0.156)).
           Object v9 is a pose with position (4.5, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.315, 0.265), (4.385, 0.335)).
           Object v19 is a pose with position (4.68, -0.077, 0.802) and quaternion (0.0, 0.0, -0.354, 0.935).
           Object v21 is a grasp with position (0.005, 0.0, -0.04) and quaternion (0.0, 0.0, -0.707, 0.707) relative to the target object.
           Object v38 is a base configuration with (x, y, theta) = (3.782, -0.331, 0.373).
           Object v5 is an arm configuration with joint values (0.393, 0.333, 0.0, -1.522, 2.722, -1.219, -2.989).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v8, v9, v11)
           Atom stackable(v8, v18)
           Atom atpose(v12, v13)
           Atom aconf(v4, v5)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)
           Atom pose(v15, v16)
           Atom graspable(v15)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v10)
           Atom stackable(v8, v10)
           Atom atpose(v15, v16)
           Atom arm(v4)
           Atom type(v8, v17)
           Atom stackable(v15, v10)
           Atom canmove()
           Atom bconf(v3)
           Atom aconf(v6, v7)
           Atom type(v12, v17)
           Atom arm(v6)
           Atom atbconf(v3)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom supported(v15, v16, v11)
           Atom ataconf(v6, v7)
           Atom supported(v12, v13, v14)
           Atom handempty(v6)
           Atom handempty(v4)
           Atom graspable(v12)
           Atom stackable(v12, v18)
           Atom controllable(v4)
           Atom atpose(v8, v9)
           Atom pose(v8, v28)
           Atom supported(v8, v28, v18)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v8, v35)
           Atom supported(v8, v35, v18)
           Atom pose(v8, v40)
           Atom supported(v8, v40, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom grasp(v12, #o1)
           Atom grasp(v8, v23)
           Atom grasp(v8, v21)
           Atom grasp(v8, v20)
           Atom grasp(v8, v22)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v19, v22, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v8, v9, v22, #q3, #t6)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, v28, v22, #q2, #t4)
           Atom kin(v4, v8, v35, v22, #o3, #o4)
           Atom bconf(v29)
           Atom atraj(v30)
           Atom kin(v4, v8, v28, v20, v29, v30)
           Atom bconf(v36)
           Atom atraj(v37)
           Atom kin(v4, v8, v35, v20, v36, v37)
           Atom bconf(v33)
           Atom atraj(v34)
           Atom kin(v4, v8, v28, v21, v33, v34)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v21, v26, v27)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v23, v24, v25)
           Atom bconf(v38)
           Atom atraj(v39)
           Atom kin(v4, v8, v35, v23, v38, v39)
           Atom bconf(v31)
           Atom atraj(v32)
           Atom kin(v4, v8, v28, v23, v31, v32)
           Atom btraj(#o0)
           Atom basemotion(v31, #o0, v31)
           Atom basemotion(v3, #o0, v3)
           Atom basemotion(v31, #o0, v3)
           Atom basemotion(v3, #o0, v31)
           Atom basemotion(v3, #o0, v29)
           Atom basemotion(v29, #o0, v31)
           Atom basemotion(v31, #o0, v29)
           Atom basemotion(v29, #o0, v29)
           Atom basemotion(v29, #o0, v3)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v24, #o0, v29)
           Atom basemotion(v29, #o0, v24)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v31, #o0, v24)
           Atom basemotion(v24, #o0, v31)
           Atom basemotion(v24, #o0, v24)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v15, #o1)
           Atom basemotion(v31, #o0, v26)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v29, #o0, v26)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v26, #o0, v29)
           Atom basemotion(v26, #o0, v31)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v3, #o0, v26)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom basemotion(v33, #o0, v24)
           Atom basemotion(v3, #o0, v33)
           Atom basemotion(v24, #o0, v33)
           Atom basemotion(v33, #o0, v31)
           Atom basemotion(v33, #o0, v33)
           Atom basemotion(v31, #o0, v33)
           Atom basemotion(v33, #o0, v3)
           Atom basemotion(v33, #o0, v29)
           Atom basemotion(v29, #o0, v33)
           Atom basemotion(v33, #o0, v26)
           Atom basemotion(v26, #o0, v33)
           Atom basemotion(#q3, #o0, v31)
           Atom basemotion(v26, #o0, #q3)
           Atom basemotion(v24, #o0, #q3)
           Atom basemotion(#q3, #o0, v29)
           Atom basemotion(v29, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, v33)
           Atom basemotion(v33, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, v24)
           Atom basemotion(#q3, #o0, v26)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(v31, #o0, #q3)
           Atom basemotion(v33, #o0, #q2)
           Atom basemotion(#q2, #o0, v29)
           Atom basemotion(#q2, #o0, v33)
           Atom basemotion(v24, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, v24)
           Atom basemotion(v26, #o0, #q2)
           Atom basemotion(v31, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, v26)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q2, #o0, v31)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(v29, #o0, #q2)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom basemotion(#o3, #o0, v29)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(v33, #o0, #o3)
           Atom basemotion(#o3, #o0, v31)
           Atom basemotion(v29, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, v24)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(#o3, #o0, v33)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(v31, #o0, #o3)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v29 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #o3 v31 #o0))
           ((move_base #o3 v33 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v29 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 v31 #o0))
           ((move_base #q2 v33 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v24 #o0))
           ((move_base #q3 v26 #o0))
           ((move_base #q3 v29 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 v31 #o0))
           ((move_base #q3 v33 #o0))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q3 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v29 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v24 v31 #o0))
           ((move_base v24 v33 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q3 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v29 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v26 v31 #o0))
           ((move_base v26 v33 #o0))
           ((move_base v29 #o3 #o0))
           ((move_base v29 #q2 #o0))
           ((move_base v29 #q3 #o0))
           ((move_base v29 v24 #o0))
           ((move_base v29 v26 #o0))
           ((move_base v29 v29 #o0))
           ((move_base v29 v3 #o0))
           ((move_base v29 v31 #o0))
           ((move_base v29 v33 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v29 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 v31 #o0))
           ((move_base v3 v33 #o0))
           ((move_base v3 #q2 #t5))
           ((move_base v31 #o3 #o0))
           ((move_base v31 #q2 #o0))
           ((move_base v31 #q3 #o0))
           ((move_base v31 v24 #o0))
           ((move_base v31 v26 #o0))
           ((move_base v31 v29 #o0))
           ((move_base v31 v3 #o0))
           ((move_base v31 v31 #o0))
           ((move_base v31 v33 #o0))
           ((move_base v33 #o3 #o0))
           ((move_base v33 #q2 #o0))
           ((move_base v33 #q3 #o0))
           ((move_base v33 v24 #o0))
           ((move_base v33 v26 #o0))
           ((move_base v33 v29 #o0))
           ((move_base v33 v3 #o0))
           ((move_base v33 v31 #o0))
           ((move_base v33 v33 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v21 v26 v27))
           ((place v4 v8 v19 v21 v26 v27))
           ((pick v4 v8 v19 v22 #o3 #o4))
           ((place v4 v8 v19 v22 #o3 #o4))
           ((pick v4 v8 v19 v23 v24 v25))
           ((place v4 v8 v19 v23 v24 v25))
           ((pick v4 v8 v28 v20 v29 v30))
           ((place v4 v8 v28 v20 v29 v30))
           ((pick v4 v8 v28 v21 v33 v34))
           ((place v4 v8 v28 v21 v33 v34))
           ((pick v4 v8 v28 v22 #q2 #t4))
           ((place v4 v8 v28 v22 #q2 #t4))
           ((pick v4 v8 v28 v23 v31 v32))
           ((place v4 v8 v28 v23 v31 v32))
           ((pick v4 v8 v35 v22 #o3 #o4))
           ((place v4 v8 v35 v22 #o3 #o4))
           ((pick v4 v8 v9 v22 #q3 #t6))
           ((place v4 v8 v9 v22 #q3 #t6))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three graspable objects: `v8`, `v12`, and `v15`. `v8` is on `v11` at pose `v9`, `v12` is on `v14` at pose `v13`, and `v15` is on `v11` at pose `v16`. The goal is `on(green, v18)`. `v8` is of type `v17` (green). `v18` is a surface. Therefore, the goal is to place `v8` on `v18`.
           
           `v8` is currently at pose `v9` on surface `v11`. There are also several other known poses for `v8` on `v18`: `v28`, `v19`, `v35`, `v40`. The best option is to pick `v8` from its current pose `v9` and place it on one of the supported poses on `v18`. We will choose `v28` as the target pose. We also have arm `v4` and `v6`, both of which are handempty. We will use arm `v4`.
           
           The plan will be:
           1. Move the base to a configuration that allows picking `v8` from `v9`. The action `(pick v4 v8 v9 v22 #q3 #t6)` requires base configuration `#q3`. The current base configuration is `v3`. So, a `move_base` action is needed from `v3` to `#q3`.
           2. Pick `v8` using `v4` from `v9` with grasp `v22`.
           3. Move the base to a configuration that allows placing `v8` at `v28`. The action `(place v4 v8 v28 v22 #q2 #t4)` requires base configuration `#q2`. So, a `move_base` action is needed from `#q3` to `#q2`.
           4. Place `v8` using `v4` at `v28` with grasp `v22`.
           
           --Plan--:
           (move_base v3 #q3 #o0)
           (pick v4 v8 v9 v22 #q3 #t6)
           (move_base #q3 #q2 #o0)
           (place v4 v8 v28 v22 #q2 #t4)

