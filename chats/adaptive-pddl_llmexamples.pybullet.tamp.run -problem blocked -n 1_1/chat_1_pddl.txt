User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v12, v18)
           Atom controllable(v4)
           Atom atbconf(v3)
           Atom pose(v15, v16)
           Atom stackable(v8, v10)
           Atom atpose(v12, v13)
           Atom atpose(v15, v16)
           Atom arm(v4)
           Atom arm(v6)
           Atom ataconf(v6, v7)
           Atom supported(v12, v13, v14)
           Atom graspable(v15)
           Atom aconf(v4, v5)
           Atom handempty(v6)
           Atom atpose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom supported(v15, v16, v11)
           Atom aconf(v6, v7)
           Atom graspable(v12)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v10)
           Atom canmove()
           Atom type(v8, v17)
           Atom pose(v12, v13)
           Atom stackable(v15, v10)
           Atom stackable(v8, v18)
           Atom type(v12, v17)
           Atom bconf(v3)
           Atom graspable(v8)
           Atom grasp(v8, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom grasp(v12, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, some of which are stackable and graspable. There are two arms, `v4` and `v6`, both of which are handempty. The robot's base is at configuration `v3`. Objects `v12`, `v15`, and `v8` are at specific poses on various surfaces.
           
           The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true, where `?green` is a variable. Looking at the initial state, we have `type(v8, v17)` and `type(v12, v17)`. So, `?green` could be `v8` or `v12`. We also have `stackable(v8, v18)` and `stackable(v12, v18)`.
           
           The goal will be satisfied if we can achieve `on(v8, v18)` or `on(v12, v18)`.
           `on(?o, ?r)` is an axiom that means `supported(?o, ?p, ?r)` and `atpose(?o, ?p)`.
           
           Let's consider `on(v8, v18)`.
           We need `supported(v8, ?p, v18)` and `atpose(v8, ?p)`.
           From the initial state, we have `atpose(v8, v9)` and `supported(v8, v9, v11)`. We also have `supported(v8, #o2, v18)`.
           So if we can make `atpose(v8, #o2)` true, then `on(v8, v18)` will be true.
           Currently, `v8` is at `v9` on `v11`. We need to move it to `#o2` on `v18`.
           
           Let's consider `on(v12, v18)`.
           We need `supported(v12, ?p, v18)` and `atpose(v12, ?p)`.
           From the initial state, we have `atpose(v12, v13)` and `supported(v12, v13, v14)`. We also have `supported(v12, #o2, v18)`.
           So if we can make `atpose(v12, #o2)` true, then `on(v12, v18)` will be true.
           Currently, `v12` is at `v13` on `v14`. We need to move it to `#o2` on `v18`.
           
           The only available action instance is `(move_base v3 v3 #o0)`. This action doesn't change the pose of any object or the state of being held, cleaned, or cooked. It only moves the robot's base from `v3` to `v3`, which does not help achieve the goal of changing an object's location. There are no `pick` or `place` actions available that would allow us to move `v8` or `v12` to `v18`. Therefore, the goal is not achievable with the given action instances.
           
           No plan is possible.

