User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t13: object
           #t15: object
           #t16: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v1, v2)
           Atom objective(v18)
           Atom rock(v5)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom rover(v14)
           Atom conf(v14, v15)
           Atom objective(v19)
           Atom atconf(v14, v15)
           Atom conf(v12, v13)
           Atom objective(v20)
           Atom onboard(v10, v14)
           Atom type(v5, v6)
           Atom supports(v10, v11)
           Atom type(v4, v2)
           Atom atconf(v12, v13)
           Atom lander(v9)
           Atom camera(v10)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom type(v7, v6)
           Atom free(v12, v16)
           Atom rock(v8)
           Atom type(v3, v2)
           Atom type(v8, v6)
           Atom rock(v3)
           Atom rock(v4)
           Atom rock(v7)
           Atom mode(v11)
           Atom rover(v12)
           Atom rock(v1)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q14, #y6, v18)
           Atom imagerange(v12, #q14, v18)
           Atom conf(v12, #q14)
           Atom ray(#y6)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v14, #q11, v1)
           Atom conf(v14, #q11)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v14, #q12, v7)
           Atom conf(v14, #q12)
           Atom above(v14, #q9, v4)
           Atom conf(v14, #q9)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v14, #q3, #y2, v17)
           Atom imagerange(v14, #q3, v17)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom imagevisible(v12, #q16, #y8, v17)
           Atom imagerange(v12, #q16, v17)
           Atom conf(v12, #q16)
           Atom ray(#y8)
           Atom above(v12, #o5, v3)
           Atom above(v14, #q13, v3)
           Atom conf(v14, #q13)
           Atom imagevisible(v12, #q15, #y7, v20)
           Atom imagerange(v12, #q15, v20)
           Atom conf(v12, #q15)
           Atom ray(#y7)
           Atom imagevisible(v14, #q6, #y4, v20)
           Atom imagerange(v14, #q6, v20)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q8, v8)
           Atom conf(v14, #q8)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q5, v5)
           Atom conf(v12, #q5)
           Atom above(v14, #q10, v5)
           Atom conf(v14, #q10)
           Atom imagevisible(v12, #q17, #y9, v19)
           Atom imagerange(v12, #q17, v19)
           Atom conf(v12, #q17)
           Atom ray(#y9)
           Atom comvisible(v14, #q4, #y3, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, v15, #t36, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t3, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, v15, #t1, #q0)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #t31, #q2)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, v13, #t30, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q0, #t9, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q11, #t27, #q4)
           Atom motion(v14, #q4, #t21, #q11)
           Atom motion(v14, #q4, #t4, v15)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q0)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #t28, #q4)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, #q4, #t13, #q6)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q6, #t11, #q4)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #t29, #q4)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q4, #t34, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #t6, #q5)
           Atom motion(v12, #q5, #t15, #q2)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q2, #t8, #q5)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q2, #o2, #q16)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q5, #o2, #q16)
           Atom motion(v12, #q16, #t33, #q2)
           Atom motion(v12, #q16, #o2, #q5)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q8, #t24, #q4)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q4, #t18, #q8)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q0, #t22, #q3)
           Atom motion(v14, #q3, #t10, #q4)
           Atom motion(v14, #q3, #t23, #q6)
           Atom motion(v14, #q4, #t16, #q3)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, v15, #t2, #q3)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q4, #t19, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q9, #t25, #q4)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q14, #t37, #q15)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, #q15, #t35, #q16)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q15, #t32, #q2)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, v13, #t5, #q1)
           Atom motion(v12, #q2, #t7, #q1)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q16)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q16, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #t26, #q4)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q4, #t20, #q10)
           Atom motion(v12, #q17, #o2, #q14)
           Atom motion(v12, v13, #o2, #q17)
           Atom motion(v12, #q5, #o2, #q17)
           Atom motion(v12, #q2, #o2, #q17)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, #q17, #o2, #q16)
           Atom motion(v12, #q17, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q15)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, #q16, #t39, #q17)
           Atom motion(v12, #q17, #t38, #q2)
           Atom motion(v12, #q15, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q17)
           Atom motion(v12, #q17, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q17)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q16)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q16, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q15, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q5 v5 v16))
           ((sample_rock v14 #q10 v5 v16))
           ((sample_rock v14 #q11 v1 v16))
           ((sample_rock v14 #q12 v7 v16))
           ((sample_rock v14 #q13 v3 v16))
           ((sample_rock v14 #q8 v8 v16))
           ((sample_rock v14 #q9 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q16))
           ((move v12 #o5 #o2 #q17))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q16))
           ((move v12 #q1 #o2 #q17))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 #q17))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t31 #q2))
           ((move v12 #q14 #t37 #q15))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q17))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t32 #q2))
           ((move v12 #q15 #t35 #q16))
           ((move v12 #q16 #o2 #o5))
           ((move v12 #q16 #o2 #q1))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q5))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t33 #q2))
           ((move v12 #q16 #t39 #q17))
           ((move v12 #q17 #o2 #o5))
           ((move v12 #q17 #o2 #q1))
           ((move v12 #q17 #o2 #q14))
           ((move v12 #q17 #o2 #q15))
           ((move v12 #q17 #o2 #q16))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q5))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q17 #t38 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q16))
           ((move v12 #q2 #o2 #q17))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #t3 v13))
           ((move v12 #q2 #t7 #q1))
           ((move v12 #q2 #t8 #q5))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q16))
           ((move v12 #q5 #o2 #q17))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t15 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t30 #q14))
           ((move v12 v13 #t5 #q1))
           ((move v12 v13 #t6 #q5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t22 #q3))
           ((move v14 #q0 #t9 #q4))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t26 #q4))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t27 #q4))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t28 #q4))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t29 #q4))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t10 #q4))
           ((move v14 #q3 #t23 #q6))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #t13 #q6))
           ((move v14 #q4 #t16 #q3))
           ((move v14 #q4 #t18 #q8))
           ((move v14 #q4 #t19 #q9))
           ((move v14 #q4 #t20 #q10))
           ((move v14 #q4 #t21 #q11))
           ((move v14 #q4 #t34 #q13))
           ((move v14 #q4 #t4 v15))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t11 #q4))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t24 #q4))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t25 #q4))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((move v14 v15 #t2 #q3))
           ((move v14 v15 #t36 #q11))
           ((calibrate v12 #q14 #y6 v18 v10))
           ((calibrate v12 #q15 #y7 v20 v10))
           ((calibrate v12 #q16 #y8 v17 v10))
           ((calibrate v12 #q17 #y9 v19 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q3 #y2 v17 v10))
           ((calibrate v14 #q6 #y4 v20 v10))
           ((take_image v12 #q14 #y6 v18 v10 v11))
           ((take_image v12 #q15 #y7 v20 v10 v11))
           ((take_image v12 #q16 #y8 v17 v10 v11))
           ((take_image v12 #q17 #y9 v19 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q3 #y2 v17 v10 v11))
           ((take_image v14 #q6 #y4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y3 v9 v5))
           ((send_analysis v14 #q4 #y3 v9 v1))
           ((send_analysis v14 #q4 #y3 v9 v7))
           ((send_analysis v14 #q4 #y3 v9 v3))
           ((send_analysis v14 #q4 #y3 v9 v8))
           ((send_analysis v14 #q4 #y3 v9 v4))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v12 #q2 #y1 v9 v20 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v14 #q4 #y3 v9 v18 v11))
           ((send_image v14 #q4 #y3 v9 v17 v11))
           ((send_image v14 #q4 #y3 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `new-axiom@0()`, which is a complex axiom that requires several conditions to be met. Let's break down the conditions of `new-axiom@0()`:
           
           1.  `atconf(v12, v13)`: Rover `v12` is at configuration `v13`. This is true in the initial state.
           2.  `atconf(v14, v15)`: Rover `v14` is at configuration `v15`. This is true in the initial state.
           3.  `free(v12, v16)`: Storage `v16` on rover `v12` is free. This is true in the initial state.
           4.  `free(v14, v16)`: Storage `v16` on rover `v14` is free. This is true in the initial state.
           5.  `receivedimage(v17, v11)`: Image of objective `v17` (type `v11`) has been received.
           6.  `receivedimage(v18, v11)`: Image of objective `v18` (type `v11`) has been received.
           7.  `receivedimage(v19, v11)`: Image of objective `v19` (type `v11`) has been received.
           8.  `receivedimage(v20, v11)`: Image of objective `v20` (type `v11`) has been received.
           9.  `type(?stone, v2)`: There exists a rock of type `v2`.
           10. `receivedanalysis(?stone)`: An analysis of a rock of type `v2` has been received.
           11. `type(?soil, v6)`: There exists a rock of type `v6`.
           12. `receivedanalysis(?soil)`: An analysis of a rock of type `v6` has been received.
           
           Let's address the image requirements first:
           Objectives `v17`, `v18`, `v19`, `v20` all need to have their images received (mode `v11`).
           -   For `v17`: Rover `v14` can take an image at `#q3` using `#y2`, or `v12` at `#q16` using `#y8`.
           -   For `v18`: Rover `v14` can take an image at `#q0` using `#y0`, or `v12` at `#q14` using `#y6`.
           -   For `v19`: Rover `v12` can take an image at `#q17` using `#y9`.
           -   For `v20`: Rover `v14` can take an image at `#q6` using `#y4`, or `v12` at `#q15` using `#y7`.
           
           To simplify, let's aim to use rover `v14` for all its visible objectives (`v18`, `v17`, `v20`) and rover `v12` for `v19`. Rover `v14` is at `v15` initially. It needs to move to `#q0`, `#q3`, and `#q6` to take images. It also needs to move to `#q4` to send images. Rover `v12` is at `v13` initially. It needs to move to `#q17` to take an image, and to `#q2` to send images.
           
           For the analysis requirements:
           -   `type(?stone, v2)` and `receivedanalysis(?stone)`: Rocks `v1`, `v3`, `v4` are of type `v2`. We need to sample and send analysis for one of these.
           -   `type(?soil, v6)` and `receivedanalysis(?soil)`: Rocks `v5`, `v7`, `v8` are of type `v6`. We need to sample and send analysis for one of these.
           
           Let's use rover `v14` to analyze rocks of type `v6` and `v2`. For example, it can sample `v5` (type `v6`) at `#q10` and `v4` (type `v2`) at `#q9`. It would then send analysis from `#q4`.
           
           Let's plan the actions:
           
           **Rover V14 Plan:**
           
           1.  Move `v14` to `#q0`.
           2.  Calibrate `v10` for `v18`.
           3.  Take image of `v18`.
           4.  Move `v14` to `#q3`.
           5.  Calibrate `v10` for `v17`.
           6.  Take image of `v17`.
           7.  Move `v14` to `#q6`.
           8.  Calibrate `v10` for `v20`.
           9.  Take image of `v20`.
           10. Move `v14` to `#q10`.
           11. Sample rock `v5` (type `v6`).
           12. Move `v14` to `#q9`.
           13. Sample rock `v4` (type `v2`).
           14. Move `v14` to `#q4` to send data.
           15. Send image of `v18`.
           16. Send image of `v17`.
           17. Send image of `v20`.
           18. Send analysis of `v5`.
           19. Send analysis of `v4`.
           
           **Rover V12 Plan:**
           
           1.  Move `v12` to `#q17`.
           2.  Calibrate `v10` for `v19`.
           3.  Take image of `v19`.
           4.  Move `v12` to `#q2` to send data.
           5.  Send image of `v19`.
           
           This covers all image and analysis requirements. The initial free storage condition is met and remains met, as we only sample two rocks and the goal doesn't require dropping them. The `atconf` conditions are met by the initial state and then maintained by `move` actions.
           
           Let's refine the sequence of actions for `v14` to minimize movements between taking images and sampling rocks, then sending everything.
           
           1.  Move v14 from v15 to #q0.
           2.  Calibrate v10 for v18.
           3.  Take image of v18.
           4.  Move v14 from #q0 to #q3.
           5.  Calibrate v10 for v17.
           6.  Take image of v17.
           7.  Move v14 from #q3 to #q6.
           8.  Calibrate v10 for v20.
           9.  Take image of v20.
           10. Move v14 from #q6 to #q10.
           11. Sample rock v5.
           12. Move v14 from #q10 to #q9.
           13. Sample rock v4.
           14. Move v14 from #q9 to #q4.
           15. Send images (v18, v17, v20) and analyses (v5, v4).
           
           Then, for v12:
           1.  Move v12 from v13 to #q17.
           2.  Calibrate v10 for v19.
           3.  Take image of v19.
           4.  Move v12 from #q17 to #q2.
           5.  Send image of v19.
           
           This plan achieves all the goal predicates.
           
           --Plan--:
           (move v14 v15 #t1 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t22 #q3)
           (calibrate v14 #q3 #y2 v17 v10)
           (take_image v14 #q3 #y2 v17 v10 v11)
           (move v14 #q3 #t23 #q6)
           (calibrate v14 #q6 #y4 v20 v10)
           (take_image v14 #q6 #y4 v20 v10 v11)
           (move v14 #q6 #o2 #q10)
           (sample_rock v14 #q10 v5 v16)
           (move v14 #q10 #o2 #q9)
           (sample_rock v14 #q9 v4 v16)
           (move v14 #q9 #t25 #q4)
           (send_image v14 #q4 #y3 v9 v18 v11)
           (send_image v14 #q4 #y3 v9 v17 v11)
           (send_image v14 #q4 #y3 v9 v20 v11)
           (send_analysis v14 #q4 #y3 v9 v5)
           (send_analysis v14 #q4 #y3 v9 v4)
           (move v12 v13 #o2 #q17)
           (calibrate v12 #q17 #y9 v19 v10)
           (take_image v12 #q17 #y9 v19 v10 v11)
           (move v12 #q17 #t38 #q2)
           (send_image v12 #q2 #y1 v9 v19 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan was rejected because the final goal `new-axiom@0()` was not satisfied. Let's re-evaluate the components of `new-axiom@0()` and ensure all are met.
           
           The components of `new-axiom@0()` are:
           1.  `atconf(v12, v13)`: Rover `v12` at `v13`. (Initial state, and `move` actions will change this, but if `v12` is at `v13` at the end, this will be true. The actual requirement is that this is true *at some point* for the axiom, not necessarily at the final state. However, the problem statement says "goal expression" meaning it must be true at the *end* of the plan. This is a common interpretation issue. Given the axiom definition, it seems more like a set of facts that need to become true at some point for the axiom to fire.)
           2.  `atconf(v14, v15)`: Rover `v14` at `v15`. (Same as above)
           3.  `free(v12, v16)`: Storage `v16` on `v12` is free. (Initial state, and we are sampling rocks, so we need to ensure this is true. If we sample, `free` becomes `false` and `full` becomes `true`. If we sample, we need to drop to make it `free` again if the goal requires `free` at the *end*). The goal states `free(v12, v16)` and `free(v14, v16)`. This means we cannot leave the storage full after sampling. We *must* drop rocks after sampling if we are to satisfy `free`.
           4.  `free(v14, v16)`: Storage `v16` on `v14` is free. (Same as above)
           5.  `receivedimage(v17, v11)`
           6.  `receivedimage(v18, v11)`
           7.  `receivedimage(v19, v11)`
           8.  `receivedimage(v20, v11)`
           9.  `type(?stone, v2)` (This is a given fact: `type(v1, v2)`, `type(v3, v2)`, `type(v4, v2)`)
           10. `receivedanalysis(?stone)` (Need to sample one of `v1, v3, v4` and send its analysis)
           11. `type(?soil, v6)` (This is a given fact: `type(v5, v6)`, `type(v7, v6)`, `type(v8, v6)`)
           12. `receivedanalysis(?soil)` (Need to sample one of `v5, v7, v8` and send its analysis)
           
           My mistake in the previous plan was not realizing that `free(v12, v16)` and `free(v14, v16)` must be true at the *end* of the plan. This means after sampling, the rovers must drop the sampled rocks.
           
           Let's adjust the plan to include dropping rocks to satisfy the `free` predicate.
           
           **Revised Rover V14 Plan:**
           
           1.  Move `v14` from `v15` to `#q0`.
           2.  Calibrate `v10` for `v18`.
           3.  Take image of `v18`.
           4.  Move `v14` from `#q0` to `#q3`.
           5.  Calibrate `v10` for `v17`.
           6.  Take image of `v17`.
           7.  Move `v14` from `#q3` to `#q6`.
           8.  Calibrate `v10` for `v20`.
           9.  Take image of `v20`.
           10. Move `v14` from `#q6` to `#q10`.
           11. Sample rock `v5` (type `v6`). (Now `full(v14, v16)` and `analyzed(v14, v5)`)
           12. Move `v14` from `#q10` to `#q9`.
           13. Sample rock `v4` (type `v2`). (Now `full(v14, v16)` but `free` would be false if we didn't drop. Since `free` is required, we need to drop rocks. To simplify, we should sample one rock, drop it, then sample the next, then drop it, to always maintain the `free` state for the other rover, if needed, or if the problem implies individual analysis. But the goal just says `free(v14, v16)` and `free(v12, v16)` at the end. So, for `v14` to perform both analyses, it needs to sample, send analysis, drop, then sample, send analysis, drop. The problem states `free(v14, v16)` not `free(v14, v16) at the end of the action`. So, the storage can be full in between. Let's make it simple and only sample one rock of each type for the goal).
           Let's modify the plan to sample only one rock of each type and then drop it.
           Rover `v14` will sample `v5` (type `v6`).
           Rover `v12` will sample `v4` (type `v2`).
           
           **Revised Rover V14 Plan:**
           
           1.  Move `v14` from `v15` to `#q0`.
           2.  Calibrate `v10` for `v18`.
           3.  Take image of `v18`.
           4.  Move `v14` from `#q0` to `#q3`.
           5.  Calibrate `v10` for `v17`.
           6.  Take image of `v17`.
           7.  Move `v14` from `#q3` to `#q6`.
           8.  Calibrate `v10` for `v20`.
           9.  Take image of `v20`.
           10. Move `v14` from `#q6` to `#q10`.
           11. Sample rock `v5` (type `v6`). (Now `full(v14, v16)`)
           12. Move `v14` from `#q10` to `#q4`.
           13. Send image of `v18`.
           14. Send image of `v17`.
           15. Send image of `v20`.
           16. Send analysis of `v5`.
           17. Drop rock `v5`. (Now `free(v14, v16)` again)
           
           **Revised Rover V12 Plan:**
           
           1.  Move `v12` from `v13` to `#q17`.
           2.  Calibrate `v10` for `v19`.
           3.  Take image of `v19`.
           4.  Move `v12` from `#q17` to `#o5`. (Move to above v4)
           5.  Sample rock `v4` (type `v2`). (Now `full(v12, v16)`)
           6.  Move `v12` from `#o5` to `#q2`.
           7.  Send image of `v19`.
           8.  Send analysis of `v4`.
           9.  Drop rock `v4`. (Now `free(v12, v16)` again)
           
           This ensures that all `receivedimage` predicates are met, `receivedanalysis` predicates are met for both types of rocks, and both storage units are `free` at the end. The `atconf` predicates for `v12, v13` and `v14, v15` are still a bit ambiguous in the axiom. If it implies they need to be *at* those configurations at the final state, then the rovers would need to move back to `v13` and `v15` respectively. However, usually, such axioms are satisfied if those states *were* true and other conditions are met. Given the phrasing of the previous error ("Fact is not satisfied: Atom new-axiom@0()"), it's more likely that the missing elements were the `free` storage and the analysis. I will assume returning to `v13` and `v15` is not explicitly required unless the goal stated `atconf(v12, v13)` and `atconf(v14, v15)` as *final* states. The current interpretation means those facts must hold true at some point for the axiom to trigger, which they do at the initial state.
           
           --Plan--:
           (move v14 v15 #t1 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t22 #q3)
           (calibrate v14 #q3 #y2 v17 v10)
           (take_image v14 #q3 #y2 v17 v10 v11)
           (move v14 #q3 #t23 #q6)
           (calibrate v14 #q6 #y4 v20 v10)
           (take_image v14 #q6 #y4 v20 v10 v11)
           (move v14 #q6 #o2 #q10)
           (sample_rock v14 #q10 v5 v16)
           (move v14 #q10 #t26 #q4)
           (send_image v14 #q4 #y3 v9 v18 v11)
           (send_image v14 #q4 #y3 v9 v17 v11)
           (send_image v14 #q4 #y3 v9 v20 v11)
           (send_analysis v14 #q4 #y3 v9 v5)
           (drop_rock v14 v16)
           (move v12 v13 #o2 #q17)
           (calibrate v12 #q17 #y9 v19 v10)
           (take_image v12 #q17 #y9 v19 v10 v11)
           (move v12 #q17 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v19 v11)
           (send_analysis v12 #q2 #y1 v9 v4)
           (drop_rock v12 v16)

