User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v14, v15, v11)
           Atom supported(v12, v13, v11)
           Atom supported(v18, v19, v11)
           Atom supported(v8, v9, v11)
           Atom controllable(v4)
           Atom atpose(v8, v9)
           Atom stackable(v14, v20)
           Atom pose(v14, v15)
           Atom pose(v18, v19)
           Atom pose(v8, v9)
           Atom stackable(v8, v10)
           Atom bconf(v3)
           Atom stackable(v16, v20)
           Atom supported(v16, v17, v11)
           Atom atpose(v16, v17)
           Atom aconf(v4, v5)
           Atom ataconf(v4, v5)
           Atom graspable(v18)
           Atom stackable(v12, v20)
           Atom stackable(v12, v10)
           Atom graspable(v12)
           Atom atpose(v12, v13)
           Atom handempty(v6)
           Atom pose(v12, v13)
           Atom arm(v6)
           Atom graspable(v16)
           Atom atbconf(v3)
           Atom stackable(v14, v10)
           Atom stackable(v16, v10)
           Atom atpose(v18, v19)
           Atom stackable(v18, v10)
           Atom aconf(v6, v7)
           Atom ataconf(v6, v7)
           Atom pose(v16, v17)
           Atom atpose(v14, v15)
           Atom canmove()
           Atom stackable(v8, v20)
           Atom stackable(v18, v20)
           Atom graspable(v8)
           Atom graspable(v14)
           Atom handempty(v4)
           Atom arm(v4)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v20)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v14, #o1)
           Atom grasp(v8, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #o1)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v8, #o2, v20)
           Atom supported(v18, #o2, v10)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v20)
           Atom grasp(v18, #o1)
           Atom supported(v14, #o2, v20)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v18, #o2, #o1, #o3, #o4)
           Atom kin(v4, v18, v19, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v16 #o2 #o1 #o3 #o4))
           ((place v4 v16 #o2 #o1 #o3 #o4))
           ((pick v4 v16 v17 #o1 #o3 #o4))
           ((place v4 v16 v17 #o1 #o3 #o4))
           ((pick v4 v18 #o2 #o1 #o3 #o4))
           ((place v4 v18 #o2 #o1 #o3 #o4))
           ((pick v4 v18 v19 #o1 #o3 #o4))
           ((place v4 v18 v19 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (v8, v12, v14, v16, v18) that are currently supported by `v11` at various poses. The robot has two arms, `v4` and `v6`, both of which are empty. The robot's base is at `v3`. The goal is to move all these objects (v8, v12, v14, v16, v18) onto `v20`. The problem also defines various kinematic configurations for arm `v4` to pick and place these objects.
           
           The current state shows that all target objects (v8, v12, v14, v16, v18) are currently on `v11` (derived from `supported` and `atpose` facts). The goal is to place them on `v20`. Since `v11` is not `v20`, we need to pick up each object from its current pose on `v11` and place it onto a new pose on `v20`.
           
           The available actions confirm that `v4` is the arm we can use to `pick` and `place` these objects. We have kinematic information for `v4` to pick each of the five objects from their current poses (v9, v13, v15, v17, v19) and place them on a new pose (`#o2`) on `v20`. The base needs to be in configuration `#o3` for these pick and place operations. Therefore, the plan involves moving the base to `#o3`, then iterating through each object, picking it from its initial pose, and placing it onto `#o2` on `v20`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v16 v17 #o1 #o3 #o4)
           (place v4 v16 #o2 #o1 #o3 #o4)
           (pick v4 v18 v19 #o1 #o3 #o4)
           (place v4 v18 #o2 #o1 #o3 #o4)

