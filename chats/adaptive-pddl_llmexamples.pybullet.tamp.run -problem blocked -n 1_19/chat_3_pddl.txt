User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v15, v16)
           Atom handempty(v6)
           Atom arm(v6)
           Atom arm(v4)
           Atom graspable(v15)
           Atom stackable(v8, v10)
           Atom handempty(v4)
           Atom aconf(v4, v5)
           Atom stackable(v12, v18)
           Atom supported(v15, v16, v11)
           Atom atpose(v8, v9)
           Atom graspable(v12)
           Atom canmove()
           Atom stackable(v15, v10)
           Atom stackable(v12, v10)
           Atom ataconf(v4, v5)
           Atom bconf(v3)
           Atom type(v8, v17)
           Atom graspable(v8)
           Atom atpose(v12, v13)
           Atom stackable(v8, v18)
           Atom pose(v8, v9)
           Atom atbconf(v3)
           Atom pose(v15, v16)
           Atom supported(v8, v9, v11)
           Atom controllable(v4)
           Atom pose(v12, v13)
           Atom aconf(v6, v7)
           Atom supported(v12, v13, v14)
           Atom type(v12, v17)
           Atom ataconf(v6, v7)
           Atom grasp(v15, #o1)
           Atom grasp(v12, #g0)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v8, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom supported(v8, #o2, v10)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v12, #p0, #g0, #q1, #t2)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(v3, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, v3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q1 #t2))
           ((place v4 v12 #p0 #g0 #q1 #t2))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` implies that we need to achieve the state where `on(green, v18)` and `type(green, v17)`. Looking at the initial state, we have `type(v8, v17)` which means `v8` can be considered "green" for the purpose of the axiom. So the goal effectively becomes `on(v8, v18)`.
           Currently, `v8` is `atpose(v8, v9)` and `supported(v8, v9, v11)`. To achieve `on(v8, v18)`, we need to place `v8` on `v18`. From the given `kin` facts, we see there are actions to pick and place `v8` with arm `v4`. Specifically, `kin(v4, v8, #o2, #o1, #o3, #o4)` and `kin(v4, v8, v9, #o1, #o3, #o4)` indicate that `v8` can be picked from `v9` (current pose) or `#o2`. Since `v8` is currently at `v9`, we will pick it from there. Then we need to place it on `v18`. The `pose(v8, #o2)` and `supported(v8, #o2, v18)` indicates that `#o2` is a valid pose for `v8` to be on `v18`. So we will place `v8` at `#o2`. The base configuration for these actions is `#o3`.
           
           The initial state shows the robot is at `atbconf(v3)` and the pick action for `v8` from `v9` requires `atbconf(#o3)`. Thus, we need to move the base from `v3` to `#o3` first.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)

