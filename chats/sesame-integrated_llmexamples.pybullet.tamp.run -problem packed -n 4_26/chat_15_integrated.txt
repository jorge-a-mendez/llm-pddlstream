User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g12: object
           #g13: object
           #g14: object
           #g15: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q35: object
           #q36: object
           #q37: object
           #q38: object
           #q39: object
           #q40: object
           #q41: object
           #q42: object
           #t109: object
           #t110: object
           #t111: object
           #t112: object
           #t113: object
           #t114: object
           #t115: object
           #t116: object
           #t117: object
           #t118: object
           #t119: object
           @sink: object
           @stove: object
           p10: object
           p11: object
           p12: object
           p13: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v5: object
           v54: object
           v55: object
           v56: object
           v57: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v9 is a pose with position (-0.143, -0.397, 0.781) and quaternion (0.0, 0.0, 0.999, 0.054).
           Object v17 is a pose with position (0.13, 0.475, 0.781) and quaternion (0.0, 0.0, -0.496, 0.868).
           Object v15 is a pose with position (0.004, 0.419, 0.781) and quaternion (0.0, 0.0, 0.965, -0.262).
           Object v13 is a pose with position (0.249, -0.482, 0.781) and quaternion (0.0, 0.0, 0.529, 0.849).
           Object p8 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p4 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, 0.015), (0.085, 0.085)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom graspable(v16)
           Atom pose(v16, v17)
           Atom atpose(v16, v17)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom stackable(v8, v18)
           Atom stackable(v12, v18)
           Atom stackable(v14, v18)
           Atom stackable(v16, v18)
           Atom pose(v14, p6)
           Atom supported(v14, p6, v10)
           Atom pose(v16, p7)
           Atom supported(v16, p7, v18)
           Atom supported(v14, p6, v18)
           Atom pose(v12, p5)
           Atom supported(v12, p5, v18)
           Atom pose(v8, p4)
           Atom supported(v8, p4, v18)
           Atom supported(v12, p5, v10)
           Atom supported(v16, p7, v10)
           Atom supported(v8, p4, v10)
           Atom kin(v36, v42, p6, v38, v39, v40)
           Atom kin(v36, v41, p5, v38, v39, v40)
           Atom kin(v36, v37, p4, v38, v39, v40)
           Atom kin(v36, v43, p7, v38, v39, v40)
           Atom pose(v14, p10)
           Atom supported(v14, p10, v10)
           Atom pose(v8, p8)
           Atom supported(v8, p8, v18)
           Atom pose(v12, p9)
           Atom supported(v12, p9, v18)
           Atom pose(v16, p11)
           Atom supported(v16, p11, v18)
           Atom supported(v12, p9, v10)
           Atom supported(v8, p8, v10)
           Atom supported(v16, p11, v10)
           Atom supported(v14, p10, v18)
           Atom kin(v36, v37, p8, v38, v39, v40)
           Atom kin(v36, v41, p9, v38, v39, v40)
           Atom kin(v36, v42, p10, v38, v39, v40)
           Atom kin(v36, v43, p11, v38, v39, v40)
           Atom pose(v16, p13)
           Atom supported(v16, p13, v18)
           Atom pose(v14, p12)
           Atom supported(v14, p12, v18)
           Atom supported(v16, p13, v10)
           Atom kin(v36, v42, p12, v54, v55, v56)
           Atom kin(v36, v43, p13, v57, v39, v40)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #g12)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom supported(v14, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v14, #g13)
           Atom supported(v12, #o2, v10)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #g15)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g14)
           Atom bconf(#q35)
           Atom atraj(#t109)
           Atom kin(v4, v16, v17, #g12, #q35, #t109)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, p11, #g12, #o3, #o4)
           Atom bconf(#q38)
           Atom atraj(#t115)
           Atom kin(v4, v16, p13, #g12, #q38, #t115)
           Atom kin(v4, v16, p7, #g12, #o3, #o4)
           Atom kin(v4, v14, p10, #g13, #o3, #o4)
           Atom bconf(#q36)
           Atom atraj(#t110)
           Atom kin(v4, v14, p12, #g13, #q36, #t110)
           Atom bconf(#q37)
           Atom atraj(#t111)
           Atom kin(v4, v14, v15, #g13, #q37, #t111)
           Atom kin(v4, v14, p6, #g13, #o3, #o4)
           Atom bconf(#q42)
           Atom atraj(#t119)
           Atom kin(v4, v12, v13, #g15, #q42, #t119)
           Atom kin(v4, v12, p5, #g15, #o3, #o4)
           Atom bconf(#q41)
           Atom atraj(#t118)
           Atom kin(v4, v12, p9, #g15, #q41, #t118)
           Atom bconf(#q40)
           Atom atraj(#t117)
           Atom kin(v4, v8, v9, #g14, #q40, #t117)
           Atom kin(v4, v8, p4, #g14, #o3, #o4)
           Atom bconf(#q39)
           Atom atraj(#t116)
           Atom kin(v4, v8, p8, #g14, #q39, #t116)
           Atom basemotion(#q38, #o0, v3)
           Atom basemotion(#q38, #o0, #q38)
           Atom basemotion(v3, #o0, #q38)
           Atom basemotion(#q36, #o0, v3)
           Atom basemotion(#q36, #o0, #q36)
           Atom btraj(#t113)
           Atom basemotion(v3, #t113, #q36)
           Atom basemotion(#q38, #o0, #q36)
           Atom basemotion(#q36, #o0, #q38)
           Atom basemotion(#q37, #o0, #q36)
           Atom basemotion(#q37, #o0, v3)
           Atom basemotion(#q37, #o0, #q37)
           Atom basemotion(#q36, #o0, #q37)
           Atom btraj(#t114)
           Atom basemotion(v3, #t114, #q37)
           Atom basemotion(#q38, #o0, #q37)
           Atom basemotion(#q37, #o0, #q38)
           Atom basemotion(#q39, #o0, v3)
           Atom basemotion(v3, #o0, #q39)
           Atom basemotion(#q39, #o0, #q39)
           Atom basemotion(#q36, #o0, #q39)
           Atom basemotion(#q39, #o0, #q36)
           Atom basemotion(#q37, #o0, #q39)
           Atom basemotion(#q39, #o0, #q37)
           Atom basemotion(#q38, #o0, #q39)
           Atom basemotion(#q39, #o0, #q38)
           Atom basemotion(#q40, #o0, v3)
           Atom basemotion(v3, #o0, #q40)
           Atom basemotion(#q40, #o0, #q40)
           Atom basemotion(#q39, #o0, #q40)
           Atom basemotion(#q40, #o0, #q39)
           Atom basemotion(#q36, #o0, #q40)
           Atom basemotion(#q40, #o0, #q36)
           Atom basemotion(#q37, #o0, #q40)
           Atom basemotion(#q40, #o0, #q37)
           Atom basemotion(#q38, #o0, #q40)
           Atom basemotion(#q40, #o0, #q38)
           Atom basemotion(#q35, #o0, #q39)
           Atom basemotion(#q35, #o0, #q37)
           Atom basemotion(#q35, #o0, #q36)
           Atom basemotion(#q35, #o0, #q40)
           Atom basemotion(#q35, #o0, v3)
           Atom basemotion(#q39, #o0, #q35)
           Atom basemotion(#q37, #o0, #q35)
           Atom basemotion(#q36, #o0, #q35)
           Atom basemotion(#q40, #o0, #q35)
           Atom basemotion(#q35, #o0, #q35)
           Atom btraj(#t112)
           Atom basemotion(v3, #t112, #q35)
           Atom basemotion(#q38, #o0, #q35)
           Atom basemotion(#q35, #o0, #q38)
           Atom basemotion(#q41, #o0, #q39)
           Atom basemotion(#q41, #o0, #q40)
           Atom basemotion(#q41, #o0, v3)
           Atom basemotion(#q39, #o0, #q41)
           Atom basemotion(#q41, #o0, #q41)
           Atom basemotion(#q40, #o0, #q41)
           Atom basemotion(v3, #o0, #q41)
           Atom basemotion(#q36, #o0, #q41)
           Atom basemotion(#q41, #o0, #q36)
           Atom basemotion(#q37, #o0, #q41)
           Atom basemotion(#q41, #o0, #q37)
           Atom basemotion(#q35, #o0, #q41)
           Atom basemotion(#q41, #o0, #q35)
           Atom basemotion(#q38, #o0, #q41)
           Atom basemotion(#q41, #o0, #q38)
           Atom basemotion(#q42, #o0, v3)
           Atom basemotion(#q42, #o0, #q39)
           Atom basemotion(#q42, #o0, #q40)
           Atom basemotion(#q39, #o0, #q42)
           Atom basemotion(#q42, #o0, #q42)
           Atom basemotion(#q40, #o0, #q42)
           Atom basemotion(v3, #o0, #q42)
           Atom basemotion(#q41, #o0, #q42)
           Atom basemotion(#q42, #o0, #q41)
           Atom basemotion(#q36, #o0, #q42)
           Atom basemotion(#q42, #o0, #q36)
           Atom basemotion(#q37, #o0, #q42)
           Atom basemotion(#q42, #o0, #q37)
           Atom basemotion(#q35, #o0, #q42)
           Atom basemotion(#q42, #o0, #q35)
           Atom basemotion(#q38, #o0, #q42)
           Atom basemotion(#q42, #o0, #q38)
           Atom kin(v4, v14, #o2, #g13, #o3, #o4)
           Atom kin(v4, v12, #o2, #g15, #o3, #o4)
           Atom kin(v4, v16, #o2, #g12, #o3, #o4)
           Atom kin(v4, v8, #o2, #g14, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q40)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q40, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q39, #o0, #o3)
           Atom basemotion(#o3, #o0, #q39)
           Atom basemotion(#q42, #o0, #o3)
           Atom basemotion(#o3, #o0, #q42)
           Atom basemotion(#q41, #o0, #o3)
           Atom basemotion(#o3, #o0, #q41)
           Atom basemotion(#q36, #o0, #o3)
           Atom basemotion(#o3, #o0, #q36)
           Atom basemotion(#q37, #o0, #o3)
           Atom basemotion(#o3, #o0, #q37)
           Atom basemotion(#q35, #o0, #o3)
           Atom basemotion(#o3, #o0, #q35)
           Atom basemotion(#q38, #o0, #o3)
           Atom basemotion(#o3, #o0, #q38)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q35 #o0))
           ((move_base #o3 #q36 #o0))
           ((move_base #o3 #q37 #o0))
           ((move_base #o3 #q38 #o0))
           ((move_base #o3 #q39 #o0))
           ((move_base #o3 #q40 #o0))
           ((move_base #o3 #q41 #o0))
           ((move_base #o3 #q42 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q35 #o3 #o0))
           ((move_base #q35 #q35 #o0))
           ((move_base #q35 #q36 #o0))
           ((move_base #q35 #q37 #o0))
           ((move_base #q35 #q38 #o0))
           ((move_base #q35 #q39 #o0))
           ((move_base #q35 #q40 #o0))
           ((move_base #q35 #q41 #o0))
           ((move_base #q35 #q42 #o0))
           ((move_base #q35 v3 #o0))
           ((move_base #q36 #o3 #o0))
           ((move_base #q36 #q35 #o0))
           ((move_base #q36 #q36 #o0))
           ((move_base #q36 #q37 #o0))
           ((move_base #q36 #q38 #o0))
           ((move_base #q36 #q39 #o0))
           ((move_base #q36 #q40 #o0))
           ((move_base #q36 #q41 #o0))
           ((move_base #q36 #q42 #o0))
           ((move_base #q36 v3 #o0))
           ((move_base #q37 #o3 #o0))
           ((move_base #q37 #q35 #o0))
           ((move_base #q37 #q36 #o0))
           ((move_base #q37 #q37 #o0))
           ((move_base #q37 #q38 #o0))
           ((move_base #q37 #q39 #o0))
           ((move_base #q37 #q40 #o0))
           ((move_base #q37 #q41 #o0))
           ((move_base #q37 #q42 #o0))
           ((move_base #q37 v3 #o0))
           ((move_base #q38 #o3 #o0))
           ((move_base #q38 #q35 #o0))
           ((move_base #q38 #q36 #o0))
           ((move_base #q38 #q37 #o0))
           ((move_base #q38 #q38 #o0))
           ((move_base #q38 #q39 #o0))
           ((move_base #q38 #q40 #o0))
           ((move_base #q38 #q41 #o0))
           ((move_base #q38 #q42 #o0))
           ((move_base #q38 v3 #o0))
           ((move_base #q39 #o3 #o0))
           ((move_base #q39 #q35 #o0))
           ((move_base #q39 #q36 #o0))
           ((move_base #q39 #q37 #o0))
           ((move_base #q39 #q38 #o0))
           ((move_base #q39 #q39 #o0))
           ((move_base #q39 #q40 #o0))
           ((move_base #q39 #q41 #o0))
           ((move_base #q39 #q42 #o0))
           ((move_base #q39 v3 #o0))
           ((move_base #q40 #o3 #o0))
           ((move_base #q40 #q35 #o0))
           ((move_base #q40 #q36 #o0))
           ((move_base #q40 #q37 #o0))
           ((move_base #q40 #q38 #o0))
           ((move_base #q40 #q39 #o0))
           ((move_base #q40 #q40 #o0))
           ((move_base #q40 #q41 #o0))
           ((move_base #q40 #q42 #o0))
           ((move_base #q40 v3 #o0))
           ((move_base #q41 #o3 #o0))
           ((move_base #q41 #q35 #o0))
           ((move_base #q41 #q36 #o0))
           ((move_base #q41 #q37 #o0))
           ((move_base #q41 #q38 #o0))
           ((move_base #q41 #q39 #o0))
           ((move_base #q41 #q40 #o0))
           ((move_base #q41 #q41 #o0))
           ((move_base #q41 #q42 #o0))
           ((move_base #q41 v3 #o0))
           ((move_base #q42 #o3 #o0))
           ((move_base #q42 #q35 #o0))
           ((move_base #q42 #q36 #o0))
           ((move_base #q42 #q37 #o0))
           ((move_base #q42 #q38 #o0))
           ((move_base #q42 #q39 #o0))
           ((move_base #q42 #q40 #o0))
           ((move_base #q42 #q41 #o0))
           ((move_base #q42 #q42 #o0))
           ((move_base #q42 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q38 #o0))
           ((move_base v3 #q39 #o0))
           ((move_base v3 #q40 #o0))
           ((move_base v3 #q41 #o0))
           ((move_base v3 #q42 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q35 #t112))
           ((move_base v3 #q36 #t113))
           ((move_base v3 #q37 #t114))
           ((pick v4 v12 #o2 #g15 #o3 #o4))
           ((place v4 v12 #o2 #g15 #o3 #o4))
           ((pick v4 v12 p5 #g15 #o3 #o4))
           ((place v4 v12 p5 #g15 #o3 #o4))
           ((pick v4 v12 p9 #g15 #q41 #t118))
           ((place v4 v12 p9 #g15 #q41 #t118))
           ((pick v4 v12 v13 #g15 #q42 #t119))
           ((place v4 v12 v13 #g15 #q42 #t119))
           ((pick v4 v14 #o2 #g13 #o3 #o4))
           ((place v4 v14 #o2 #g13 #o3 #o4))
           ((pick v4 v14 p10 #g13 #o3 #o4))
           ((place v4 v14 p10 #g13 #o3 #o4))
           ((pick v4 v14 p12 #g13 #q36 #t110))
           ((place v4 v14 p12 #g13 #q36 #t110))
           ((pick v4 v14 p6 #g13 #o3 #o4))
           ((place v4 v14 p6 #g13 #o3 #o4))
           ((pick v4 v14 v15 #g13 #q37 #t111))
           ((place v4 v14 v15 #g13 #q37 #t111))
           ((pick v4 v16 #o2 #g12 #o3 #o4))
           ((place v4 v16 #o2 #g12 #o3 #o4))
           ((pick v4 v16 p11 #g12 #o3 #o4))
           ((place v4 v16 p11 #g12 #o3 #o4))
           ((pick v4 v16 p13 #g12 #q38 #t115))
           ((place v4 v16 p13 #g12 #q38 #t115))
           ((pick v4 v16 p7 #g12 #o3 #o4))
           ((place v4 v16 p7 #g12 #o3 #o4))
           ((pick v4 v16 v17 #g12 #q35 #t109))
           ((place v4 v16 v17 #g12 #q35 #t109))
           ((pick v4 v8 #o2 #g14 #o3 #o4))
           ((place v4 v8 #o2 #g14 #o3 #o4))
           ((pick v4 v8 p4 #g14 #o3 #o4))
           ((place v4 v8 p4 #g14 #o3 #o4))
           ((pick v4 v8 p8 #g14 #q39 #t116))
           ((place v4 v8 p8 #g14 #q39 #t116))
           ((pick v4 v8 v9 #g14 #q40 #t117))
           ((place v4 v8 v9 #g14 #q40 #t117))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q32', '#t99'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g9', '#q32', '#t93'))
           Action(name='move_base', args=('#q32', '#q28', '#t104'))
           Action(name='place', args=('v4', 'v8', 'p8', '#g9', '#q28', '#t89'))
           Action(name='move_base', args=('#q28', '#q27', '#t103'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g8', '#q27', '#t88'))
           Action(name='move_base', args=('#q27', '#q29', '#t108'))
           Action(name='place', args=('v4', 'v12', 'p9', '#g8', '#q29', '#t90'))
           Action(name='move_base', args=('#q29', '#q34', '#t105'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g10', '#q34', '#t101'))
           Action(name='move_base', args=('#q34', '#q30', '#t106'))
           Action(name='place', args=('v4', 'v14', 'p12', '#g10', '#q30', '#t91'))
           Action(name='move_base', args=('#q30', '#q31', '#t107'))
           Action(name='pick', args=('v4', 'v16', 'v17', '#g11', '#q31', '#t92'))
           Action(name='move_base', args=('#q31', '#q33', '#t102'))
           Action(name='place', args=('v4', 'v16', 'p13', '#g11', '#q33', '#t100'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v14', 'p12', 'v12', 'p9')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The goal is to place all four objects (v8, v12, v14, v16) on the surface v18. Currently, all four objects are on v11. We need to pick up each object from v11 and place it on v18. We will pick objects from their current locations on v11 and place them on appropriate poses on v18. The previous attempt failed because placing v14 at p12 and v12 at p9 led to a collision. We must select collision-free poses for these objects on v18. Given the bounding boxes of the objects and v18, we will use the poses p4, p5, p6, p7 which are supported on v18. The poses p4, p5, p6, p7 are all defined as (0, 0, 0.782, 0, 0, 0, 1), and since the objects have different bounding boxes and we are placing them on the same surface, they will collide if they all try to occupy the same (0,0,0.782) point. However, the initial state has several facts like `supported(v8, p4, v18)`, `supported(v12, p5, v18)`, `supported(v14, p6, v18)`, and `supported(v16, p7, v18)`. This indicates that p4, p5, p6, and p7 are intended to be collision-free placement poses for the respective objects on v18. We will use these pre-defined poses on v18.
           
           --Plan--:
           (pick v4 v8 v9 #g14 #q40 #t117)
           (move_base #q40 #o3 #o0)
           (place v4 v8 p4 #g14 #o3 #o4)
           (pick v4 v12 v13 #g15 #q42 #t119)
           (move_base #q42 #o3 #o0)
           (place v4 v12 p5 #g15 #o3 #o4)
           (pick v4 v14 v15 #g13 #q37 #t111)
           (move_base #q37 #o3 #o0)
           (place v4 v14 p6 #g13 #o3 #o4)
           (pick v4 v16 v17 #g12 #q35 #t109)
           (move_base #q35 #o3 #o0)
           (place v4 v16 p7 #g12 #o3 #o4)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q35) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal is to place all four objects (v8, v12, v14, v16) on the surface v18. Currently, all four objects are on v11. We need to pick up each object from v11 and place it on v18. We will pick objects from their current locations on v11 and place them on appropriate poses on v18. The previous attempt failed because the base configuration for placing the object was not achieved. We need to ensure that the robot's base configuration (`atbconf`) is at the correct pose before each pick or place operation.
           
           We will follow this sequence for each object:
           1. Move the robot's base to the configuration required for picking the object.
           2. Pick the object.
           3. Move the robot's base to the configuration required for placing the object.
           4. Place the object.
           
           Since all initial object poses are on `v11`, and all target poses are on `v18`, and given the object's sizes, it's reasonable to assume that the poses p4, p5, p6, p7 on v18 will be collision-free. The kinematic predicates indicate which base configuration is needed for each pick and place. We will use `v3` as the common intermediate base configuration to simplify `move_base` actions when a specific base configuration for an intermediate pick/place is not provided by the `kin` predicates.
           
           --Plan--:
           (move_base v3 #q40 #o0)
           (pick v4 v8 v9 #g14 #q40 #t117)
           (move_base #q40 #o3 #o0)
           (place v4 v8 p4 #g14 #o3 #o4)
           (move_base #o3 #q42 #o0)
           (pick v4 v12 v13 #g15 #q42 #t119)
           (move_base #q42 #o3 #o0)
           (place v4 v12 p5 #g15 #o3 #o4)
           (move_base #o3 #q37 #o0)
           (pick v4 v14 v15 #g13 #q37 #t111)
           (move_base #q37 #o3 #o0)
           (place v4 v14 p6 #g13 #o3 #o4)
           (move_base #o3 #q35 #o0)
           (pick v4 v16 v17 #g12 #q35 #t109)
           (move_base #q35 #o3 #o0)
           (place v4 v16 p7 #g12 #o3 #o4)

