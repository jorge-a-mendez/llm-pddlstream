User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.033, -0.296), (0.115, -0.214)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.203, -0.003), (0.29, 0.084)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.225, 0.316), (-0.129, 0.412)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.019, 0.208), (0.112, 0.3)).
           Object v9 is a pose with position (0.074, -0.255, 0.781) and quaternion (0.0, 0.0, 0.996, -0.094).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.237, -0.56), (-0.147, -0.47)).
           Object v19 is a pose with position (0.246, 0.04, 0.781) and quaternion (0.0, 0.0, 0.989, 0.149).
           Object v17 is a pose with position (-0.177, 0.364, 0.781) and quaternion (0.0, 0.0, 0.279, 0.96).
           Object v15 is a pose with position (0.066, 0.254, 0.781) and quaternion (0.0, 0.0, 0.842, 0.539).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v13 is a pose with position (-0.192, -0.515, 0.781) and quaternion (0.0, 0.0, -0.572, 0.82).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v18, v19)
           Atom bconf(v3)
           Atom canmove()
           Atom supported(v14, v15, v11)
           Atom handempty(v6)
           Atom atpose(v14, v15)
           Atom stackable(v18, v10)
           Atom supported(v18, v19, v11)
           Atom atbconf(v3)
           Atom graspable(v14)
           Atom stackable(v14, v20)
           Atom stackable(v16, v20)
           Atom controllable(v4)
           Atom atpose(v16, v17)
           Atom stackable(v12, v20)
           Atom graspable(v8)
           Atom ataconf(v6, v7)
           Atom stackable(v8, v10)
           Atom supported(v16, v17, v11)
           Atom stackable(v18, v20)
           Atom pose(v18, v19)
           Atom pose(v12, v13)
           Atom pose(v16, v17)
           Atom aconf(v6, v7)
           Atom arm(v4)
           Atom pose(v14, v15)
           Atom stackable(v16, v10)
           Atom aconf(v4, v5)
           Atom atpose(v8, v9)
           Atom graspable(v18)
           Atom stackable(v14, v10)
           Atom graspable(v16)
           Atom arm(v6)
           Atom stackable(v8, v20)
           Atom graspable(v12)
           Atom supported(v12, v13, v11)
           Atom pose(v8, v9)
           Atom ataconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom handempty(v4)
           Atom stackable(v12, v10)
           Atom atpose(v12, v13)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom grasp(v16, #o1)
           Atom supported(v16, #o2, v20)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v20)
           Atom supported(v14, #o2, v10)
           Atom grasp(v18, #o1)
           Atom grasp(v14, #o1)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom supported(v8, #o2, v10)
           Atom supported(v18, #o2, v10)
           Atom grasp(v8, #o1)
           Atom supported(v12, #o2, v20)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place objects v8, v12, v14, v16, and v18 on object v20. Looking at the initial state, all of these objects are currently on v11 (a larger surface). There are no primitive pick or place actions available, and the only available action instance is `move_base v3 v3 #o0`, which just moves the robot from `v3` to `v3` using trajectory `#o0`. This is a no-op movement, and since there are no pick or place actions, and the goal requires moving objects, this goal is unreachable.
           
           The available action instances only contain a `move_base` action that moves the robot to the same configuration it is already in. There are no pick or place actions provided in the `action instances` list, which are necessary to move objects. Therefore, the goal of placing objects on `v20` cannot be achieved.

