User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v12, v16)
           Atom rock(v4)
           Atom atconf(v14, v15)
           Atom onboard(v10, v14)
           Atom conf(v12, v13)
           Atom atconf(v12, v13)
           Atom rock(v7)
           Atom type(v7, v6)
           Atom type(v3, v2)
           Atom rock(v8)
           Atom type(v1, v2)
           Atom objective(v18)
           Atom type(v4, v2)
           Atom rover(v14)
           Atom objective(v19)
           Atom camera(v10)
           Atom free(v14, v16)
           Atom rock(v5)
           Atom type(v5, v6)
           Atom objective(v17)
           Atom rock(v1)
           Atom supports(v10, v11)
           Atom onboard(v10, v12)
           Atom mode(v11)
           Atom lander(v9)
           Atom conf(v14, v15)
           Atom rock(v3)
           Atom store(v16)
           Atom rover(v12)
           Atom type(v8, v6)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v3)
           Atom above(v14, #o5, v3)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v1)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #o5, v5)
           Atom above(v14, #o5, v5)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v14, v15, #o2, #o0)
           Atom motion(v14, #o5, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o5)
           Atom motion(v14, #o0, #o2, v15)
           Atom motion(v14, #o0, #o2, #o0)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o0, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o0)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v12, #o0, #o2, #o3)
           Atom motion(v12, #o0, #o2, #o5)
           Atom motion(v12, #o0, #o2, v13)
           Atom motion(v12, v13, #o2, #o0)
           Atom motion(v12, #o3, #o2, #o0)
           Atom motion(v12, #o5, #o2, #o0)
           Atom motion(v12, #o0, #o2, #o0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o0 #o2 #o0))
           ((move v12 #o0 #o2 #o3))
           ((move v12 #o0 #o2 #o5))
           ((move v12 #o0 #o2 v13))
           ((move v12 #o3 #o2 #o0))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o0))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 v13))
           ((move v12 v13 #o2 #o0))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 v13))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #o0 #o1 v9 v1))
           ((send_analysis v12 #o0 #o1 v9 v3))
           ((send_analysis v12 #o0 #o1 v9 v4))
           ((send_analysis v12 #o0 #o1 v9 v5))
           ((send_analysis v12 #o0 #o1 v9 v7))
           ((send_analysis v12 #o0 #o1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #o0 #o1 v9 v17 v11))
           ((send_image v12 #o0 #o1 v9 v18 v11))
           ((send_image v12 #o0 #o1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Finalized Plan for `new-axiom@0()` in the `rovers` Domain**
           
           Okay, so I've meticulously broken down the `new-axiom@0()` goal in the `rovers` domain. It boils down to getting images of three objectives (`v17`, `v18`, `v19`), analyzing a stone (`v4`) and soil (`v7`), and making sure the rovers return to their initial positions with empty storage.  Here's the finalized plan, keeping in mind that rovers can move concurrently unless they require the same resources:
           
           1.  **Rover `v12` moves to `#o3` (imaging site) and prepares for `v17` imaging.**
               *   `(move v12 v13 #o2 #o3)`
               *   `(calibrate v12 #o3 #o4 v17 v10)`
               *   `(take_image v12 #o3 #o4 v17 v10 v11)`
           2.  **Rover `v12` moves to `#o0` (communication site) and sends the image.**
               *   `(move v12 #o3 #o2 #o0)`
               *   `(send_image v12 #o0 #o1 v9 v17 v11)`
           3.  **Rover `v14` moves to `#o3` (imaging site) and prepares for `v18` imaging (parallel to `v12`'s movements if they aren't using the same resources).**
               *   `(move v14 v15 #o2 #o3)`
               *   `(calibrate v14 #o3 #o4 v18 v10)`
               *   `(take_image v14 #o3 #o4 v18 v10 v11)`
           4.  **Rover `v14` moves to `#o0` (communication site) and sends image `v18`.**
               *   `(move v14 #o3 #o2 #o0)`
               *   `(send_image v14 #o0 #o1 v9 v18 v11)`
           5.  **Rover `v12` moves to `#o3` (imaging site) and prepares for `v19` imaging.**
               *   `(move v12 #o0 #o2 #o3)`
               *   `(calibrate v12 #o3 #o4 v19 v10)`
               *   `(take_image v12 #o3 #o4 v19 v10 v11)`
           6.  **Rover `v12` moves to `#o0` (communication site) and sends image `v19`.**
               *   `(move v12 #o3 #o2 #o0)`
               *   `(send_image v12 #o0 #o1 v9 v19 v11)`
           7.  **Rover `v12` moves to `#o5` (sampling site).**
               *   `(move v12 #o0 #o2 #o5)`
           8.  **Rover `v12` samples the stone (`v4`) and stores it.**
               *   `(sample_rock v12 #o5 v4 v16)`
           9.  **Rover `v12` moves back to `#o0` and sends the stone analysis.**
               *   `(move v12 #o5 #o2 #o0)`
               *   `(send_analysis v12 #o0 #o1 v9 v4)`
           10. **Rover `v12` drops the rock.**
               *   `(drop_rock v12 v16)`
           11. **Rover `v14` moves to `#o5` (sampling site).**
               *   `(move v14 #o0 #o2 #o5)`
           12. **Rover `v14` samples the soil (`v7`) and stores it.**
               *   `(sample_rock v14 #o5 v7 v16)`
           13. **Rover `v14` moves back to `#o0` and sends the soil analysis.**
               *   `(move v14 #o5 #o2 #o0)`
               *   `(send_analysis v14 #o0 #o1 v9 v7)`
           14. **Rover `v14` drops the soil sample.**
               *   `(drop_rock v14 v16)`
           15. **Rover `
)

Model:     **Finalized Plan for `new-axiom@0()` in the `rovers` Domain**
           
           Okay, so I've meticulously broken down the `new-axiom@0()` goal in the `rovers` domain. It boils down to getting images of three objectives (`v17`, `v18`, `v19`), analyzing a stone (`v4`) and soil (`v7`), and making sure the rovers return to their initial positions with empty storage.  Here's the finalized plan, keeping in mind that rovers can move concurrently unless they require the same resources:
           
           1.  **Rover `v12` moves to `#o3` (imaging site) and prepares for `v17` imaging.**
               *   `(move v12 v13 #o2 #o3)`
               *   `(calibrate v12 #o3 #o4 v17 v10)`
               *   `(take_image v12 #o3 #o4 v17 v10 v11)`
           2.  **Rover `v12` moves to `#o0` (communication site) and sends the image.**
               *   `(move v12 #o3 #o2 #o0)`
               *   `(send_image v12 #o0 #o1 v9 v17 v11)`
           3.  **Rover `v14` moves to `#o3` (imaging site) and prepares for `v18` imaging (parallel to `v12`'s movements if they aren't using the same resources).**
               *   `(move v14 v15 #o2 #o3)`
               *   `(calibrate v14 #o3 #o4 v18 v10)`
               *   `(take_image v14 #o3 #o4 v18 v10 v11)`
           4.  **Rover `v14` moves to `#o0` (communication site) and sends image `v18`.**
               *   `(move v14 #o3 #o2 #o0)`
               *   `(send_image v14 #o0 #o1 v9 v18 v11)`
           5.  **Rover `v12` moves to `#o3` (imaging site) and prepares for `v19` imaging.**
               *   `(move v12 #o0 #o2 #o3)`
               *   `(calibrate v12 #o3 #o4 v19 v10)`
               *   `(take_image v12 #o3 #o4 v19 v10 v11)`
           6.  **Rover `v12` moves to `#o0` (communication site) and sends image `v19`.**
               *   `(move v12 #o3 #o2 #o0)`
               *   `(send_image v12 #o0 #o1 v9 v19 v11)`
           7.  **Rover `v12` moves to `#o5` (sampling site).**
               *   `(move v12 #o0 #o2 #o5)`
           8.  **Rover `v12` samples the stone (`v4`) and stores it.**
               *   `(sample_rock v12 #o5 v4 v16)`
           9.  **Rover `v12` moves back to `#o0` and sends the stone analysis.**
               *   `(move v12 #o5 #o2 #o0)`
               *   `(send_analysis v12 #o0 #o1 v9 v4)`
           10. **Rover `v12` drops the rock.**
               *   `(drop_rock v12 v16)`
           11. **Rover `v14` moves to `#o5` (sampling site).**
               *   `(move v14 #o0 #o2 #o5)`
           12. **Rover `v14` samples the soil (`v7`) and stores it.**
               *   `(sample_rock v14 #o5 v7 v16)`
           13. **Rover `v14` moves back to `#o0` and sends the soil analysis.**
               *   `(move v14 #o5 #o2 #o0)`
               *   `(send_analysis v14 #o0 #o1 v9 v7)`
           14. **Rover `v14` drops the soil sample.**
               *   `(drop_rock v14 v16)`
           15. **Rover `

