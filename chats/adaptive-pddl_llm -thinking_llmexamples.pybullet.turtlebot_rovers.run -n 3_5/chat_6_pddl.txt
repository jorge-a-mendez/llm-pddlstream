User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v12, v16)
           Atom rock(v4)
           Atom atconf(v14, v15)
           Atom onboard(v10, v14)
           Atom conf(v12, v13)
           Atom atconf(v12, v13)
           Atom rock(v7)
           Atom type(v7, v6)
           Atom type(v3, v2)
           Atom rock(v8)
           Atom type(v1, v2)
           Atom objective(v18)
           Atom type(v4, v2)
           Atom rover(v14)
           Atom objective(v19)
           Atom camera(v10)
           Atom free(v14, v16)
           Atom rock(v5)
           Atom type(v5, v6)
           Atom objective(v17)
           Atom rock(v1)
           Atom supports(v10, v11)
           Atom onboard(v10, v12)
           Atom mode(v11)
           Atom lander(v9)
           Atom conf(v14, v15)
           Atom rock(v3)
           Atom store(v16)
           Atom rover(v12)
           Atom type(v8, v6)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v12, #q6, v4)
           Atom conf(v12, #q6)
           Atom above(v12, #q14, v3)
           Atom conf(v12, #q14)
           Atom above(v14, #o5, v3)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q4, #y3, v18)
           Atom imagerange(v14, #q4, v18)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q13, #y7, v18)
           Atom imagerange(v12, #q13, v18)
           Atom conf(v12, #q13)
           Atom ray(#y7)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v12, #q9, v8)
           Atom conf(v12, #q9)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom above(v14, #q11, v1)
           Atom conf(v14, #q11)
           Atom imagevisible(v14, #q8, #y6, v17)
           Atom imagerange(v14, #q8, v17)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom imagevisible(v12, #q5, #y4, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom above(v12, #o5, v5)
           Atom above(v14, #q12, v5)
           Atom conf(v14, #q12)
           Atom above(v14, #q1, v7)
           Atom conf(v14, #q1)
           Atom above(v12, #q10, v7)
           Atom conf(v12, #q10)
           Atom imagevisible(v12, #q3, #y2, v19)
           Atom imagerange(v12, #q3, v19)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #q7, #y5, v19)
           Atom imagerange(v14, #q7, v19)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom motion(v12, v13, #t19, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #t3, #q4)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #t2, v15)
           Atom motion(v14, #q4, #t13, #q0)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v14, #q7, #t17, #q4)
           Atom motion(v14, #q7, #t23, #q0)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #t14, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q4, #t24, #q7)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, v13, #t9, #q3)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q4, #t26, #q11)
           Atom motion(v14, #q11, #t28, #q0)
           Atom motion(v14, #q11, #o2, #q4)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, v15, #t22, #q1)
           Atom motion(v14, #q1, #t6, #q0)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q3, #t25, #q10)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q2, #t8, #q6)
           Atom motion(v12, #q10, #t29, #q2)
           Atom motion(v12, #q2, #t1, v13)
           Atom motion(v12, #q2, #t4, #q3)
           Atom motion(v12, #q3, #t11, #q2)
           Atom motion(v12, #q14, #t34, #q2)
           Atom motion(v12, #q2, #t33, #q14)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q6, #t7, #q2)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #t16, #q9)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #t20, #q2)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q0, #t21, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q8, #t18, #q4)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, v15, #t15, #q8)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q5, #t12, #q2)
           Atom motion(v12, v13, #t10, #q5)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #t27, #q3)
           Atom motion(v12, #q2, #t5, #q5)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q2, #t31, #q13)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q13, #t32, #q2)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #t35, #q0)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q0, #t30, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q14 v3 v16))
           ((sample_rock v12 #q6 v4 v16))
           ((sample_rock v12 #q9 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q1 v7 v16))
           ((sample_rock v14 #q11 v1 v16))
           ((sample_rock v14 #q12 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t29 #q2))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t32 #q2))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t34 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #t1 v13))
           ((move v12 #q2 #t31 #q13))
           ((move v12 #q2 #t33 #q14))
           ((move v12 #q2 #t4 #q3))
           ((move v12 #q2 #t5 #q5))
           ((move v12 #q2 #t8 #q6))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t11 #q2))
           ((move v12 #q3 #t25 #q10))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t12 #q2))
           ((move v12 #q5 #t27 #q3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t16 #q9))
           ((move v12 #q6 #t7 #q2))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t20 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q5))
           ((move v12 v13 #t19 #q6))
           ((move v12 v13 #t9 #q3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q0 #t2 v15))
           ((move v14 #q0 #t21 #q8))
           ((move v14 #q0 #t30 #q12))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t6 #q0))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q4))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t28 #q0))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t35 #q0))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t13 #q0))
           ((move v14 #q4 #t24 #q7))
           ((move v14 #q4 #t26 #q11))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t17 #q4))
           ((move v14 #q7 #t23 #q0))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t18 #q4))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q7))
           ((move v14 v15 #t15 #q8))
           ((move v14 v15 #t22 #q1))
           ((move v14 v15 #t3 #q4))
           ((calibrate v12 #q13 #y7 v18 v10))
           ((calibrate v12 #q3 #y2 v19 v10))
           ((calibrate v12 #q5 #y4 v17 v10))
           ((calibrate v14 #q4 #y3 v18 v10))
           ((calibrate v14 #q7 #y5 v19 v10))
           ((calibrate v14 #q8 #y6 v17 v10))
           ((take_image v12 #q13 #y7 v18 v10 v11))
           ((take_image v12 #q3 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y4 v17 v10 v11))
           ((take_image v14 #q4 #y3 v18 v10 v11))
           ((take_image v14 #q7 #y5 v19 v10 v11))
           ((take_image v14 #q8 #y6 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Alright, let's break down this plan to achieve `new-axiom@0()` in the `rovers` domain. It's a bit of a juggling act, but here's the game plan:**
           
           The core of `new-axiom@0()` boils down to getting three images and analyzing two specific rocks.  We've got two rovers, `v12` and `v14`, and here's how they'll work in parallel:
           
           **Rover `v12`:**
           
           1.  Move to position `#q5`.
           2.  Calibrate its camera for objective `v17`.
           3.  Take image `v17`.
           4.  Move to communication location `#q2`.
           5.  Send the image `v17` to the lander.
           6.  Move to `#q3`.
           7.  Calibrate its camera again, this time for objective `v19`.
           8.  Take image `v19`.
           9.  Return to `#q2`.
           10. Send the image `v19` to the lander.
           11. Head to rock location `#q6`.
           12. Analyze rock `v4` (type `v2`).
           13. Return to `#q2`.
           14. Send the analysis of `v4` to the lander.
           15.  Drop the rock sample.
           16.  Return to its initial position, `v13`.
           
           **Rover `v14`:**
           
           1.  Move to location `#q4`.
           2.  Calibrate its camera for objective `v18`.
           3.  Take image `v18`.
           4.  Move to communication location `#q0`.
           5.  Send the image `v18` to the lander.
           6.  Move to the rock location `#q1`.
           7.  Analyze rock `v7` (type `v6`).
           8.  Return to `#q0`.
           9.  Send the analysis of `v7` to the lander.
           10. Drop the rock sample.
           11. Return to its initial position, `v15`.
           
           The key here is managing resources, specifically the rock sample storage. Each rover needs to sample, communicate, and *then* drop the sample to free up space for more operations. We need to ensure that the preconditions for each action are met at each step: are they in position, is the camera calibrated and are they unobstructed?
           
           Essentially, we have two parallel action sequences. One with `v12` imaging two objectives, collecting and sending rock sample `v4`, and returning to `v13`. And the second sequence that has rover `v14` imaging one objective, and collecting and sending rock sample `v7`, and returning to `v15`.
           
)

Model:     **Alright, let's break down this plan to achieve `new-axiom@0()` in the `rovers` domain. It's a bit of a juggling act, but here's the game plan:**
           
           The core of `new-axiom@0()` boils down to getting three images and analyzing two specific rocks.  We've got two rovers, `v12` and `v14`, and here's how they'll work in parallel:
           
           **Rover `v12`:**
           
           1.  Move to position `#q5`.
           2.  Calibrate its camera for objective `v17`.
           3.  Take image `v17`.
           4.  Move to communication location `#q2`.
           5.  Send the image `v17` to the lander.
           6.  Move to `#q3`.
           7.  Calibrate its camera again, this time for objective `v19`.
           8.  Take image `v19`.
           9.  Return to `#q2`.
           10. Send the image `v19` to the lander.
           11. Head to rock location `#q6`.
           12. Analyze rock `v4` (type `v2`).
           13. Return to `#q2`.
           14. Send the analysis of `v4` to the lander.
           15.  Drop the rock sample.
           16.  Return to its initial position, `v13`.
           
           **Rover `v14`:**
           
           1.  Move to location `#q4`.
           2.  Calibrate its camera for objective `v18`.
           3.  Take image `v18`.
           4.  Move to communication location `#q0`.
           5.  Send the image `v18` to the lander.
           6.  Move to the rock location `#q1`.
           7.  Analyze rock `v7` (type `v6`).
           8.  Return to `#q0`.
           9.  Send the analysis of `v7` to the lander.
           10. Drop the rock sample.
           11. Return to its initial position, `v15`.
           
           The key here is managing resources, specifically the rock sample storage. Each rover needs to sample, communicate, and *then* drop the sample to free up space for more operations. We need to ensure that the preconditions for each action are met at each step: are they in position, is the camera calibrated and are they unobstructed?
           
           Essentially, we have two parallel action sequences. One with `v12` imaging two objectives, collecting and sending rock sample `v4`, and returning to `v13`. And the second sequence that has rover `v14` imaging one objective, and collecting and sending rock sample `v7`, and returning to `v15`.
           

