User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #t0: object
           #t1: object
           #t10: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v20)
           Atom rock(v3)
           Atom atconf(v12, v13)
           Atom type(v7, v6)
           Atom free(v14, v16)
           Atom rock(v1)
           Atom objective(v18)
           Atom type(v5, v6)
           Atom supports(v10, v11)
           Atom objective(v19)
           Atom type(v1, v2)
           Atom conf(v12, v13)
           Atom rock(v8)
           Atom conf(v14, v15)
           Atom onboard(v10, v12)
           Atom type(v4, v2)
           Atom rover(v14)
           Atom rock(v5)
           Atom camera(v10)
           Atom type(v3, v2)
           Atom rock(v7)
           Atom lander(v9)
           Atom atconf(v14, v15)
           Atom onboard(v10, v14)
           Atom store(v16)
           Atom objective(v17)
           Atom rock(v4)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom mode(v11)
           Atom rover(v12)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q3, v1)
           Atom conf(v12, #q3)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q5, #y3, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q1, #y0, v19)
           Atom imagerange(v12, #q1, v19)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom comvisible(v12, #q4, #y2, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #o5, v7)
           Atom above(v12, #q0, v5)
           Atom conf(v12, #q0)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t1, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #t2, v13)
           Atom motion(v12, #q2, #t8, #q4)
           Atom motion(v12, #q6, #t10, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q3, #t6, #q4)
           Atom motion(v12, #q5, #t9, #q4)
           Atom motion(v12, #q4, #t4, #q3)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, v13, #t0, #q1)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q1, #t7, #q4)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q4, #t3, #q0)
           Atom motion(v12, #q0, #t5, #q4)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v14, #o0, #o2, v15)
           Atom motion(v14, v15, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o0)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o0)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o0, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o0)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v5 v16))
           ((sample_rock v12 #q3 v1 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t5 #q4))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t7 #q4))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t8 #q4))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t6 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #t2 v13))
           ((move v12 #q4 #t3 #q0))
           ((move v12 #q4 #t4 #q3))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t9 #q4))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t10 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q1))
           ((move v12 v13 #t1 #q2))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #q1 #y0 v19 v10))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v12 #q5 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q1 #y0 v19 v10 v11))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v12 #q5 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #q4 #y2 v9 v19 v11))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v12 #q4 #y2 v9 v20 v11))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), a store (v16), and several objectives (v17, v18, v19, v20) and rocks (v1, v3, v4, v5, v7, v8). The camera v10 supports mode v11. Rocks are classified as type v2 (v1, v3, v4) or type v6 (v5, v7, v8).
           
           The goal `new-axiom@0()` can be satisfied by a combination of conditions. Based on the provided axioms, it seems the goal requires:
           - Rover v12 and v14 to be at their current configurations (which they are: `atconf(v12, v13)` and `atconf(v14, v15)`).
           - Store v16 to be free for both rovers (which it is: `free(v12, v16)` and `free(v14, v16)`).
           - Images for objectives v17, v18, v19, v20 in mode v11 to be received.
           - Rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8) to have their analysis received.
           
           To achieve the goal, we need to:
           1. Calibrate the camera on at least one rover for each objective.
           2. Take an image of each objective using the calibrated camera.
           3. Send the images for all four objectives (v17, v18, v19, v20) to the lander.
           4. Sample at least one rock of type v2 and at least one rock of type v6.
           5. Send the analysis of the sampled rocks to the lander.
           
           Let's use rover v12 for imaging and communication, and rover v12 for rock sampling and analysis (as it is currently above multiple rocks).
           
           **Imaging and Sending:**
           Rover v12 has visibility to all objectives (v17, v18, v19, v20) at various configurations, and visibility to the lander v9 at configuration #q4.
           
           1. **Calibrate and Take Images for v19:**
              - Calibrate for v19 at #q1.
              - Take image of v19.
           2. **Calibrate and Take Images for v17:**
              - Calibrate for v17 at #q2.
              - Take image of v17.
           3. **Calibrate and Take Images for v20:**
              - Calibrate for v20 at #q5.
              - Take image of v20.
           4. **Calibrate and Take Images for v18:**
              - Calibrate for v18 at #q6.
              - Take image of v18.
           5. **Move to a communication point and send all images:**
              - Move v12 to #q4 for communication.
              - Send images for v19, v17, v20, v18.
           
           **Sampling and Sending Analysis:**
           Rover v12 is currently above several rocks. It needs to sample at least one rock of type v2 and one of type v6.
           - Type v2 rocks: v1, v3, v4.
           - Type v6 rocks: v5, v7, v8.
           
           1. **Sample rock of type v2:** Rover v12 is above v3, v4, v1 at #o5 and v1 at #q3. Let's sample v3 at #o5.
           2. **Sample rock of type v6:** Rover v12 is above v8, v7 at #o5 and v5 at #q0. Let's sample v8 at #o5.
           3. **Move to a communication point and send analysis:**
              - If not already at #q4 (from image sending), move there.
              - Send analysis for v3.
              - Send analysis for v8.
           
           The rover v12 starts at v13.
           It needs to move to different configurations for imaging, then to #q4 for communication.
           For sampling, it is currently above rocks at #o5 and #q0.
           
           Let's optimize the movements to achieve both goals.
           First, gather all images, then move to a communication spot to send images, then move to sampling spots if needed, then move back to communication spot to send analysis.
           Since v12 is at v13, let's move it to the required image configurations.
           v19: #q1
           v17: #q2
           v20: #q5
           v18: #q6
           Comms: #q4
           
           Rocks:
           v3 (type v2) at #o5.
           v8 (type v6) at #o5.
           
           Current location of v12 is v13.
           
           Plan:
           1. Move v12 to #q1 (for v19).
           2. Calibrate camera for v19.
           3. Take image of v19.
           4. Move v12 to #q2 (for v17).
           5. Calibrate camera for v17.
           6. Take image of v17.
           7. Move v12 to #q5 (for v20).
           8. Calibrate camera for v20.
           9. Take image of v20.
           10. Move v12 to #q6 (for v18).
           11. Calibrate camera for v18.
           12. Take image of v18.
           13. Move v12 to #q4 (for communication).
           14. Send all images.
           15. Move v12 to #o5 (for sampling v3 and v8).
           16. Sample v3 (type v2).
           17. Sample v8 (type v6).
           18. Move v12 back to #q4 (for communication).
           19. Send analysis of v3.
           20. Send analysis of v8.
           
           --Plan--:
           (move v12 v13 #t0 #q1)
           (calibrate v12 #q1 #y0 v19 v10)
           (take_image v12 #q1 #y0 v19 v10 v11)
           (move v12 #q1 #o2 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #o2 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #o2 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t10 #q4)
           (send_image v12 #q4 #y2 v9 v19 v11)
           (send_image v12 #q4 #y2 v9 v17 v11)
           (send_image v12 #q4 #y2 v9 v20 v11)
           (send_image v12 #q4 #y2 v9 v18 v11)
           (move v12 #q4 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q4)
           (send_analysis v12 #q4 #y2 v9 v3)
           (send_analysis v12 #q4 #y2 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. The axiom requires several conditions to be met, including that `receivedimage` is true for all four objectives (v17, v18, v19, v20) and `receivedanalysis` is true for at least one rock of type v2 and one rock of type v6. My previous plan did attempt to achieve these, but there must have been an issue with the state tracking or the axiom's interpretation.
           
           Let's re-evaluate the plan, making sure to explicitly cover all parts of the `new-axiom@0()` condition:
           The `new-axiom@0()` (which expands to the conjunctive goal) requires:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: These are true in the initial state and are maintained as long as the rovers return to their original configurations or if `atconf` simply means "rover is at *a* configuration," which the problem description implies, but the axiom's explicit mention of `v13` and `v15` suggests it's a specific configuration. However, the actions `move` only update `atconf` for the current position, so if `v12` moves, `atconf(v12, v13)` becomes false. The wording "Atom atconf(v12, v13) and Atom atconf(v14, v15)" in the axiom implies they *must* be at those specific configurations *at the end*. This means rover v12 must end its plan at v13, and rover v14 must end its plan at v15. Rover v14 never moves in the plan, so `atconf(v14, v15)` remains true. For v12, it must return to `v13`.
           
           2. `free(v12, v16)` and `free(v14, v16)`: These are true initially. If `sample_rock` is used, the store becomes `full`. We must use `drop_rock` to make it `free` again before the end of the plan for v12. Rover v14 doesn't sample, so its store remains free.
           
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: All four objectives need their images sent.
           
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: At least one rock of type v2 (v1, v3, v4) needs to be analyzed and its analysis sent.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: At least one rock of type v6 (v5, v7, v8) needs to be analyzed and its analysis sent.
           
           Let's re-construct the plan for rover v12.
           - Start at `v13`.
           - Perform all imaging.
           - Move to `#q4` to send images.
           - Move to `#o5` for sampling rocks.
           - Perform sampling (v3 - type v2, v8 - type v6).
           - `drop_rock` to free the store.
           - Move back to `#q4` to send analysis.
           - Finally, move back to `v13`.
           
           This ensures all conditions for `new-axiom@0()` are met.
           
           --Plan--:
           (move v12 v13 #t0 #q1)
           (calibrate v12 #q1 #y0 v19 v10)
           (take_image v12 #q1 #y0 v19 v10 v11)
           (move v12 #q1 #o2 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #o2 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #o2 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t10 #q4)
           (send_image v12 #q4 #y2 v9 v19 v11)
           (send_image v12 #q4 #y2 v9 v17 v11)
           (send_image v12 #q4 #y2 v9 v20 v11)
           (send_image v12 #q4 #y2 v9 v18 v11)
           (move v12 #q4 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (sample_rock v12 #o5 v8 v16)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q4)
           (send_analysis v12 #q4 #y2 v9 v3)
           (send_analysis v12 #q4 #y2 v9 v8)
           (move v12 #q4 #t2 v13)

