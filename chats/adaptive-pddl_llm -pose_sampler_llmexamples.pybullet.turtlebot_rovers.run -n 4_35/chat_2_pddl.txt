User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v19)
           Atom conf(v14, v15)
           Atom camera(v10)
           Atom lander(v9)
           Atom onboard(v10, v14)
           Atom mode(v11)
           Atom conf(v12, v13)
           Atom type(v4, v2)
           Atom type(v1, v2)
           Atom rock(v8)
           Atom store(v16)
           Atom free(v12, v16)
           Atom rock(v7)
           Atom atconf(v14, v15)
           Atom type(v5, v6)
           Atom rover(v12)
           Atom type(v7, v6)
           Atom rover(v14)
           Atom rock(v5)
           Atom objective(v18)
           Atom rock(v4)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom objective(v17)
           Atom objective(v20)
           Atom rock(v3)
           Atom atconf(v12, v13)
           Atom free(v14, v16)
           Atom rock(v1)
           Atom type(v3, v2)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q2, v1)
           Atom conf(v12, #q2)
           Atom above(v12, #q10, v3)
           Atom conf(v12, #q10)
           Atom imagevisible(v12, #q3, #y1, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom above(v12, #q9, v5)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q1, #y0, v20)
           Atom imagerange(v12, #q1, v20)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #q6, v4)
           Atom conf(v12, #q6)
           Atom above(v12, #q8, v7)
           Atom conf(v12, #q8)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v12, #q4, #y2, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom comvisible(v12, #q7, #y4, v9)
           Atom comrange(v12, #q7, v9)
           Atom conf(v12, #q7)
           Atom ray(#y4)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q0, v8)
           Atom conf(v12, #q0)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #t12, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #t11, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #t4, #q7)
           Atom motion(v12, #q7, #t1, #q0)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #t7, #q7)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q4, #t10, #q7)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q7, #t3, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #t6, #q7)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q1, #t8, #q7)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, v13, #t0, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #t9, #q7)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q2, #t5, #q7)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q7, #t2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v14, v15, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o0)
           Atom motion(v14, #o0, #o2, v15)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o0)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o0, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o0)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o0, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v8 v16))
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q2 v1 v16))
           ((sample_rock v12 #q6 v4 v16))
           ((sample_rock v12 #q8 v7 v16))
           ((sample_rock v12 #q9 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t4 #q7))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t8 #q7))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t5 #q7))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t9 #q7))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t10 #q7))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t11 #q7))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t6 #q7))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #t1 #q0))
           ((move v12 #q7 #t12 v13))
           ((move v12 #q7 #t2 #q2))
           ((move v12 #q7 #t3 #q6))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t7 #q7))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q1))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #q1 #y0 v20 v10))
           ((calibrate v12 #q3 #y1 v17 v10))
           ((calibrate v12 #q4 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q1 #y0 v20 v10 v11))
           ((take_image v12 #q3 #y1 v17 v10 v11))
           ((take_image v12 #q4 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q7 #y4 v9 v8))
           ((send_analysis v12 #q7 #y4 v9 v3))
           ((send_analysis v12 #q7 #y4 v9 v1))
           ((send_analysis v12 #q7 #y4 v9 v4))
           ((send_analysis v12 #q7 #y4 v9 v7))
           ((send_analysis v12 #q7 #y4 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #q7 #y4 v9 v20 v11))
           ((send_image v12 #q7 #y4 v9 v17 v11))
           ((send_image v12 #q7 #y4 v9 v19 v11))
           ((send_image v12 #q7 #y4 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a camera (v10) onboard both rovers, a lander (v9), a storage unit (v16) for samples, and various rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There are also different configurations (q0-q10, o0-o5, v13, v15) and rays (y0-y4, o1, o4) for communication and imaging. The goal is `new-axiom@0()`, which is an axiom implying several conditions must be met:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers are at their initial configurations. This is already true.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers have free storage. This is already true.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: Images of all four objectives (v17, v18, v19, v20) in mode v11 must be received by the lander.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: Analysis of a rock of type v2 (stone) must be received. Rocks v1, v3, v4 are of type v2.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: Analysis of a rock of type v6 (soil) must be received. Rocks v5, v7, v8 are of type v6.
           
           To achieve the goal, the plan needs to:
           - Take images of all four objectives (v17, v18, v19, v20) using either rover v12 or v14 and camera v10 in mode v11. For each image, the camera needs to be calibrated first.
           - Send all four images to the lander v9.
           - Sample and analyze at least one rock of type v2 (stone) and at least one rock of type v6 (soil) using either rover v12 or v14.
           - Send the analysis of these sampled rocks to the lander v9.
           
           Both rovers are currently at their initial configurations (v12 at v13, v14 at v15) and have free storage (v16). Both rovers also have the camera v10 onboard, which supports mode v11.
           
           Let's use rover v14 for imaging and rover v12 for sampling.
           
           **Imaging with Rover v14:**
           Rover v14 is at `v15`. It can move to `#o3` for imaging.
           1. Calibrate camera v10 for objective v17 at configuration `#o3`.
           2. Take image of v17.
           3. Calibrate camera v10 for objective v18 at configuration `#o3`.
           4. Take image of v18.
           5. Calibrate camera v10 for objective v19 at configuration `#o3`.
           6. Take image of v19.
           7. Calibrate camera v10 for objective v20 at configuration `#o3`.
           8. Take image of v20.
           9. Move to a communication configuration, e.g., `#o0`.
           10. Send all four images (v17, v18, v19, v20) to lander v9.
           
           **Sampling with Rover v12:**
           Rover v12 is at `v13`. It can move to configurations above rocks to sample them.
           - Rock v4 is type v2 (stone), visible at `#q6`.
           - Rock v8 is type v6 (soil), visible at `#q0`.
           
           1. Move rover v12 to `#q6` to sample rock v4 (type v2).
           2. Sample rock v4.
           3. Move rover v12 to `#q0` to sample rock v8 (type v6).
           4. Sample rock v8.
           5. Move rover v12 to a communication configuration, e.g., `#q7`.
           6. Send analysis of v4 and v8 to lander v9.
           
           This plan aims to cover all aspects of the goal.
           
           --Plan--:
           (move v14 v15 #o2 #o3)
           (calibrate v14 #o3 #o4 v17 v10)
           (take_image v14 #o3 #o4 v17 v10 v11)
           (calibrate v14 #o3 #o4 v18 v10)
           (take_image v14 #o3 #o4 v18 v10 v11)
           (calibrate v14 #o3 #o4 v19 v10)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (calibrate v14 #o3 #o4 v20 v10)
           (take_image v14 #o3 #o4 v20 v10 v11)
           (move v14 #o3 #o2 #o0)
           (send_image v14 #o0 #o1 v9 v17 v11)
           (send_image v14 #o0 #o1 v9 v18 v11)
           (send_image v14 #o0 #o1 v9 v19 v11)
           (send_image v14 #o0 #o1 v9 v20 v11)
           (move v12 v13 #o2 #q6)
           (sample_rock v12 #q6 v4 v16)
           (move v12 #q6 #o2 #q0)
           (sample_rock v12 #q0 v8 v16)
           (move v12 #q0 #t4 #q7)
           (send_analysis v12 #q7 #y4 v9 v4)
           (send_analysis v12 #q7 #y4 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. This axiom requires multiple conditions to be met, including images received for all four objectives and analysis received for at least one stone and one soil type. My previous plan correctly identified these subgoals, but there might have been an issue in the sequence or choice of actions that prevented all conditions from being simultaneously true at the end.
           
           Let's re-evaluate and ensure all conditions are met.
           
           **Goal Breakdown:**
           1.  `atconf(v12, v13)` and `atconf(v14, v15)`: Already true in initial state.
           2.  `free(v12, v16)` and `free(v14, v16)`: Already true in initial state.
           3.  `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: All four objectives must have their images sent.
           4.  `receivedanalysis(?stone)` where `type(?stone, v2)`: Analysis of a stone (e.g., v1, v3, v4) must be sent.
           5.  `receivedanalysis(?soil)` where `type(?soil, v6)`: Analysis of a soil (e.g., v5, v7, v8) must be sent.
           
           **Revised Strategy:**
           
           **Rover v14 for Imaging and Communication (for images):**
           Rover v14 is at `v15`.
           *   Move v14 to a position where it can image the objectives, for example, `#o3`.
           *   Calibrate camera v10 for each objective (v17, v18, v19, v20) at `#o3`.
           *   Take an image of each objective (v17, v18, v19, v20) at `#o3`.
           *   Move v14 to a position where it can communicate with the lander v9, for example, `#o0`.
           *   Send all four images to the lander.
           
           **Rover v12 for Sampling and Communication (for analysis):**
           Rover v12 is at `v13`.
           *   Move v12 to a position above a stone rock (type `v2`), for example, `#q6` for `v4`.
           *   Sample `v4`.
           *   Move v12 to a position above a soil rock (type `v6`), for example, `#q0` for `v8`.
           *   Sample `v8`.
           *   Move v12 to a position where it can communicate with the lander v9, for example, `#q7`.
           *   Send the analysis of `v4` and `v8` to the lander.
           
           This refined plan ensures all conditions of the axiom are met. The initial conditions `atconf` and `free` are preserved throughout the plan.
           
           --Plan--:
           (move v14 v15 #o2 #o3)
           (calibrate v14 #o3 #o4 v17 v10)
           (take_image v14 #o3 #o4 v17 v10 v11)
           (calibrate v14 #o3 #o4 v18 v10)
           (take_image v14 #o3 #o4 v18 v10 v11)
           (calibrate v14 #o3 #o4 v19 v10)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (calibrate v14 #o3 #o4 v20 v10)
           (take_image v14 #o3 #o4 v20 v10 v11)
           (move v14 #o3 #o2 #o0)
           (send_image v14 #o0 #o1 v9 v17 v11)
           (send_image v14 #o0 #o1 v9 v18 v11)
           (send_image v14 #o0 #o1 v9 v19 v11)
           (send_image v14 #o0 #o1 v9 v20 v11)
           (move v12 v13 #o2 #q6)
           (sample_rock v12 #q6 v4 v16)
           (move v12 #q6 #o2 #q0)
           (sample_rock v12 #q0 v8 v16)
           (move v12 #q0 #t4 #q7)
           (send_analysis v12 #q7 #y4 v9 v4)
           (send_analysis v12 #q7 #y4 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plans have failed because the goal `new-axiom@0()` was not satisfied. This means that at least one of the sub-conditions defined by the axiom was not met at the end of the plan. Let's meticulously re-verify each part of the goal and how to achieve it.
           
           **Goal `new-axiom@0()` requires:**
           1.  `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers must be at their initial configuration. My plans currently end with both rovers at communication configurations (`#q7` for `v12` and `#o0` for `v14`), not their initial configurations. This is a crucial point that was missed. I need to ensure they return to their initial configurations or that the goal axiom does not require them to *remain* at those initial configurations if they are met at the start. However, the axiom does not have time-dependent conditions, so `atconf(v12, v13)` and `atconf(v14, v15)` being true in the initial state is sufficient *unless* actions invalidate them and the goal requires them to be true at the final state. Given this is a state-based goal, it means they *must* be true at the end. So, rovers must return to v13 and v15 respectively.
           2.  `free(v12, v16)` and `free(v14, v16)`: Both rovers must have free storage. My plans involve `sample_rock` actions which will make the storage `full`. I need to add `drop_rock` actions to free the storage.
           3.  `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: Images of all four objectives must be sent. The previous steps for this seem correct (calibrate, take_image, send_image for each).
           4.  `receivedanalysis(?stone)` where `type(?stone, v2)`: Analysis of a stone (e.g., v4) must be sent.
           5.  `receivedanalysis(?soil)` where `type(?soil, v6)`: Analysis of a soil (e.g., v8) must be sent.
           
           **Corrected Strategy:**
           
           **Rover v14 (Imaging & Image Communication & Return to initial config):**
           *   Move v14 from `v15` to `#o3` (imaging configuration).
           *   Calibrate and take image for `v17`.
           *   Calibrate and take image for `v18`.
           *   Calibrate and take image for `v19`.
           *   Calibrate and take image for `v20`.
           *   Move v14 from `#o3` to `#o0` (communication configuration).
           *   Send all four images.
           *   Move v14 from `#o0` back to `v15` (initial configuration).
           
           **Rover v12 (Sampling & Analysis Communication & Return to initial config & Free Storage):**
           *   Move v12 from `v13` to `#q6` (above rock `v4`, a stone).
           *   Sample `v4`. Storage `v16` on `v12` will become `full`.
           *   Move v12 from `#q6` to `#q0` (above rock `v8`, a soil).
           *   Sample `v8`. This would require a second storage, but rover v12 only has one. I can only sample one rock at a time, or I need to drop the first one. Let's sample one, send its analysis, drop it, then sample the other.
           *   Let's modify: Sample `v4` (stone), move to comms, send analysis for `v4`, drop `v4`.
           *   Then, move to `#q0` (soil), sample `v8`, move to comms, send analysis for `v8`, drop `v8`.
           *   Move v12 from `#q0` back to `v13` (initial configuration).
           
           This approach addresses the `atconf` and `free` conditions that were missed.
           
           --Plan--:
           (move v14 v15 #o2 #o3)
           (calibrate v14 #o3 #o4 v17 v10)
           (take_image v14 #o3 #o4 v17 v10 v11)
           (calibrate v14 #o3 #o4 v18 v10)
           (take_image v14 #o3 #o4 v18 v10 v11)
           (calibrate v14 #o3 #o4 v19 v10)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (calibrate v14 #o3 #o4 v20 v10)
           (take_image v14 #o3 #o4 v20 v10 v11)
           (move v14 #o3 #o2 #o0)
           (send_image v14 #o0 #o1 v9 v17 v11)
           (send_image v14 #o0 #o1 v9 v18 v11)
           (send_image v14 #o0 #o1 v9 v19 v11)
           (send_image v14 #o0 #o1 v9 v20 v11)
           (move v14 #o0 #o2 v15) ; Return v14 to initial configuration
           
           (move v12 v13 #o2 #q6)
           (sample_rock v12 #q6 v4 v16) ; v4 is type v2 (stone)
           (move v12 #q6 #t3 #q6) ; Re-calibrate or similar move to ensure comms from q7 if not directly reachable from q6
           (move v12 #q6 #t6 #q7)
           (send_analysis v12 #q7 #y4 v9 v4)
           (drop_rock v12 v16) ; Free storage for the next sample
           
           (move v12 #q7 #t1 #q0) ; Move to sample next rock
           (sample_rock v12 #q0 v8 v16) ; v8 is type v6 (soil)
           (move v12 #q0 #t4 #q7)
           (send_analysis v12 #q7 #y4 v9 v8)
           (drop_rock v12 v16) ; Free storage
           
           (move v12 #q7 #t12 v13) ; Return v12 to initial configuration

User:      The plan you provided contains the following invalid actions: `(move v12 #q6 #t3 #q6)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #q0 v8 v16))
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q2 v1 v16))
           ((sample_rock v12 #q6 v4 v16))
           ((sample_rock v12 #q8 v7 v16))
           ((sample_rock v12 #q9 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t4 #q7))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t8 #q7))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t5 #q7))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t9 #q7))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t10 #q7))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t11 #q7))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t6 #q7))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #t1 #q0))
           ((move v12 #q7 #t12 v13))
           ((move v12 #q7 #t2 #q2))
           ((move v12 #q7 #t3 #q6))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t7 #q7))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q1))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #q1 #y0 v20 v10))
           ((calibrate v12 #q3 #y1 v17 v10))
           ((calibrate v12 #q4 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q1 #y0 v20 v10 v11))
           ((take_image v12 #q3 #y1 v17 v10 v11))
           ((take_image v12 #q4 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q7 #y4 v9 v8))
           ((send_analysis v12 #q7 #y4 v9 v3))
           ((send_analysis v12 #q7 #y4 v9 v1))
           ((send_analysis v12 #q7 #y4 v9 v4))
           ((send_analysis v12 #q7 #y4 v9 v7))
           ((send_analysis v12 #q7 #y4 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #q7 #y4 v9 v20 v11))
           ((send_image v12 #q7 #y4 v9 v17 v11))
           ((send_image v12 #q7 #y4 v9 v19 v11))
           ((send_image v12 #q7 #y4 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     My sincere apologies for including an invalid action in the previous plan. I need to be more careful to only use actions from the provided list. The action `(move v12 #q6 #t3 #q6)` was indeed invalid. I'll correct the path for rover `v12` to ensure only valid `move` actions are used.
           
           Let's re-examine the `move` actions available for `v12` from `#q6` to a communication point like `#q7`.
           From the provided list: `((move v12 #q6 #t6 #q7))` is a valid action to move directly from `#q6` to `#q7`. This simplifies the path and removes the invalid action.
           
           The overall strategy remains the same:
           *   **Rover v14**: Image all objectives, send images, return to initial config `v15`.
           *   **Rover v12**: Sample a stone, send analysis, drop, sample a soil, send analysis, drop, return to initial config `v13`.
           
           **Revised Rover v12 Path:**
           1.  Move v12 from `v13` to `#q6` (above stone `v4`).
           2.  Sample `v4`.
           3.  Move v12 from `#q6` to `#q7` (communication configuration). This is a single valid move.
           4.  Send analysis of `v4`.
           5.  Drop `v4`.
           6.  Move v12 from `#q7` to `#q0` (above soil `v8`). This is a valid move.
           7.  Sample `v8`.
           8.  Move v12 from `#q0` to `#q7` (communication configuration). This is a valid move.
           9.  Send analysis of `v8`.
           10. Drop `v8`.
           11. Move v12 from `#q7` back to `v13` (initial configuration). This is a valid move.
           
           This revised plan should correct the invalid action and address all goal conditions.
           
           --Plan--:
           (move v14 v15 #o2 #o3)
           (calibrate v14 #o3 #o4 v17 v10)
           (take_image v14 #o3 #o4 v17 v10 v11)
           (calibrate v14 #o3 #o4 v18 v10)
           (take_image v14 #o3 #o4 v18 v10 v11)
           (calibrate v14 #o3 #o4 v19 v10)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (calibrate v14 #o3 #o4 v20 v10)
           (take_image v14 #o3 #o4 v20 v10 v11)
           (move v14 #o3 #o2 #o0)
           (send_image v14 #o0 #o1 v9 v17 v11)
           (send_image v14 #o0 #o1 v9 v18 v11)
           (send_image v14 #o0 #o1 v9 v19 v11)
           (send_image v14 #o0 #o1 v9 v20 v11)
           (move v14 #o0 #o2 v15)
           
           (move v12 v13 #o2 #q6)
           (sample_rock v12 #q6 v4 v16)
           (move v12 #q6 #t6 #q7)
           (send_analysis v12 #q7 #y4 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q7 #t1 #q0)
           (sample_rock v12 #q0 v8 v16)
           (move v12 #q0 #t4 #q7)
           (send_analysis v12 #q7 #y4 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q7 #t12 v13)

