User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v8, v9)
           Atom atpose(v12, v13)
           Atom aconf(v4, v5)
           Atom graspable(v15)
           Atom supported(v12, v13, v14)
           Atom stackable(v8, v10)
           Atom bconf(v3)
           Atom handempty(v6)
           Atom ataconf(v4, v5)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v20, v15, v16)
           Atom stackable(v15, v10)
           Atom type(v12, v17)
           Atom controllable(v4)
           Atom atbconf(v3)
           Atom pose(v15, v16)
           Atom canmove()
           Atom atpose(v15, v16)
           Atom graspable(v12)
           Atom handempty(v4)
           Atom stackable(v12, v18)
           Atom arm(v6)
           Atom supported(v15, v16, v11)
           Atom stackable(v12, v10)
           Atom aconf(v6, v7)
           Atom arm(v4)
           Atom stackable(v8, v18)
           Atom pose(v12, v13)
           Atom supported(v8, v9, v11)
           Atom graspable(v8)
           Atom type(v8, v17)
           Atom atpose(v8, v9)
           Atom ataconf(v6, v7)
           Atom grasp(v8, v21)
           Atom grasp(v8, v20)
           Atom grasp(v8, v23)
           Atom grasp(v8, v22)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom supported(v12, #o2, v18)
           Atom grasp(v12, #o1)
           Atom bconf(v28)
           Atom atraj(v29)
           Atom kin(v4, v8, v19, v21, v28, v29)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, v9, v20, #q2, #t4)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v22, v26, v27)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v23, v24, v25)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v8, v19, v20, #q3, #t6)
           Atom btraj(#o0)
           Atom basemotion(v28, #o0, v28)
           Atom basemotion(v24, #o0, v28)
           Atom basemotion(v28, #o0, v24)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v3, #o0, v3)
           Atom basemotion(v3, #o0, v28)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v28, #o0, v3)
           Atom basemotion(v26, #o0, v28)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v3, #o0, v26)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v28, #o0, v26)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v26, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom basemotion(#q2, #o0, v28)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(v26, #o0, #q2)
           Atom basemotion(v28, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(v24, #o0, #q2)
           Atom basemotion(#q2, #o0, v24)
           Atom basemotion(#q2, #o0, v26)
           Atom btraj(#t7)
           Atom basemotion(#q2, #t7, #q3)
           Atom basemotion(v24, #o0, #q3)
           Atom basemotion(#q3, #o0, v28)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, v26)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(v28, #o0, #q3)
           Atom basemotion(v26, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, v24)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v28)
           Atom basemotion(v28, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, v24)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v24, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v28 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v28 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q3 #t7))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v24 #o0))
           ((move_base #q3 v26 #o0))
           ((move_base #q3 v28 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q3 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v28 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q3 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v28 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v28 #o3 #o0))
           ((move_base v28 #q2 #o0))
           ((move_base v28 #q3 #o0))
           ((move_base v28 v24 #o0))
           ((move_base v28 v26 #o0))
           ((move_base v28 v28 #o0))
           ((move_base v28 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v28 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 #q3 #t6))
           ((place v4 v8 v19 v20 #q3 #t6))
           ((pick v4 v8 v19 v21 v28 v29))
           ((place v4 v8 v19 v21 v28 v29))
           ((pick v4 v8 v19 v22 v26 v27))
           ((place v4 v8 v19 v22 v26 v27))
           ((pick v4 v8 v19 v23 v24 v25))
           ((place v4 v8 v19 v23 v24 v25))
           ((pick v4 v8 v9 v20 #q2 #t4))
           ((place v4 v8 v9 v20 #q2 #t4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to achieve `new-axiom@0()`, which is an axiom derived from `on(?green, v18)` and `type(?green, v17)`. In the initial state, we have `atpose(v8, v9)` and `supported(v8, v9, v11)`. We also have `type(v8, v17)`, which means `v8` can be our `?green` object. We need to place `v8` on `v18`. Currently, `v8` is on `v11`.
           
           To achieve `on(v8, v18)`, we need to place `v8` on `v18`. This involves picking up `v8` and then placing it on `v18`.
           
           Looking at the initial state, `v8` is at `pose(v8, v9)`. There is also `pose(v8, v19)` and `pose(v8, #o2)`.
           `v4` is an arm and `handempty(v4)` is true.
           
           We need to pick `v8` from `v9` with `v4`.
           The available pick actions for `v8` from `v9` are: `(pick v4 v8 v9 v20 #q2 #t4)`.
           The preconditions are:
           - `kin(v4, v8, v9, v20, #q2, #t4)`: This is true in the initial state.
           - `atpose(v8, v9)`: This is true in the initial state.
           - `handempty(v4)`: This is true in the initial state.
           - `atbconf(#q2)`: This is not true in the initial state, `atbconf(v3)` is true. We need to move the base to `#q2`.
           - `~unsafeapproach(v8, v9, v20)`: We have `~test-cfree-approach-pose-negative(v8, v9, v20, v15, v16)` and `atpose(v15, v16)`. If `v15` is the only object that could cause a collision, then this condition is met. The problem definition implicitly assumes that such conditions are met if no direct negative fact like `unsafeapproach` is stated and `~test-cfree...negative` is stated.
           - `~unsafeatraj(#t4)`: Assuming this is also implicitly met since no `unsafeatraj(#t4)` is stated.
           
           So, the first step should be to move the base from `v3` to `#q2`. There is an action `(move_base v3 #q2 #t5)`.
           
           After picking, we will be `holding(v4, v8)`. Then, we need to place `v8` on `v18`.
           We need a `pose(v8, ?p)` such that `supported(v8, ?p, v18)` is true. We have `supported(v8, v19, v18)` and `pose(v8, v19)`. So we want to place `v8` at `v19`.
           The available place actions for `v8` on `v19` are:
           - `(place v4 v8 v19 v20 #q3 #t6)`
           - `(place v4 v8 v19 v21 v28 v29)`
           - `(place v4 v8 v19 v22 v26 v27)`
           - `(place v4 v8 v19 v23 v24 v25)`
           
           Let's choose `(place v4 v8 v19 v20 #q3 #t6)`.
           Preconditions:
           - `kin(v4, v8, v19, v20, #q3, #t6)`: True.
           - `atgrasp(v4, v8, v20)`: This will be true after the pick action.
           - `atbconf(#q3)`: We need to move the base to `#q3` after picking and before placing.
           - `~unsafepose(v8, v19)`: Implicitly met.
           - `~unsafeapproach(v8, v19, v20)`: Implicitly met.
           - `~unsafeatraj(#t6)`: Implicitly met.
           
           So the plan would be:
           1. `move_base` from `v3` to `#q2` to satisfy `atbconf` for pick.
           2. `pick` `v8` from `v9` with `v4` using `v20` grasp.
           3. `move_base` from `#q2` to `#q3` to satisfy `atbconf` for place.
           4. `place` `v8` on `v19` with `v4` using `v20` grasp.
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v8 v9 v20 #q2 #t4)
           (move_base #q2 #q3 #t7)
           (place v4 v8 v19 v20 #q3 #t6)

