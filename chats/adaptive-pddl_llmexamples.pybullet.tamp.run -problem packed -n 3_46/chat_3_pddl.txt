User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom pose(v8, v9)
           Atom ataconf(v6, v7)
           Atom atpose(v8, v9)
           Atom supported(v12, v13, v11)
           Atom controllable(v4)
           Atom atpose(v14, v15)
           Atom bconf(v3)
           Atom aconf(v4, v5)
           Atom ataconf(v4, v5)
           Atom stackable(v8, v10)
           Atom stackable(v14, v16)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom handempty(v4)
           Atom stackable(v12, v10)
           Atom aconf(v6, v7)
           Atom supported(v14, v15, v11)
           Atom arm(v4)
           Atom atpose(v12, v13)
           Atom atbconf(v3)
           Atom supported(v8, v9, v11)
           Atom arm(v6)
           Atom graspable(v14)
           Atom pose(v12, v13)
           Atom pose(v14, v15)
           Atom graspable(v8)
           Atom stackable(v14, v10)
           Atom graspable(v12)
           Atom handempty(v6)
           Atom pose(v8, #p2)
           Atom supported(v8, #p2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v8, #g1)
           Atom grasp(v12, #g0)
           Atom pose(v14, #p0)
           Atom supported(v14, #p0, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v14, #g2)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v16)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v8, v9, #g1, #q1, #t2)
           Atom bconf(#q5)
           Atom atraj(#t10)
           Atom kin(v4, v8, #p2, #g1, #q5, #t10)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom bconf(#q4)
           Atom atraj(#t9)
           Atom kin(v4, v14, v15, #g2, #q4, #t9)
           Atom bconf(#q3)
           Atom atraj(#t4)
           Atom kin(v4, v14, #p0, #g2, #q3, #t4)
           Atom bconf(#q2)
           Atom atraj(#t3)
           Atom kin(v4, v12, #p1, #g0, #q2, #t3)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q1)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom btraj(#t1)
           Atom basemotion(#q0, #t1, v3)
           Atom basemotion(#q0, #o0, #q4)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q0)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q0)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, v3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g2, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q1, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #t1))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t5))
           ((move_base v3 #q1 #t6))
           ((move_base v3 #q2 #t7))
           ((move_base v3 #q3 #t8))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p1 #g0 #q2 #t3))
           ((place v4 v12 #p1 #g0 #q2 #t3))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v14 #o2 #g2 #o3 #o4))
           ((place v4 v14 #o2 #g2 #o3 #o4))
           ((pick v4 v14 #p0 #g2 #q3 #t4))
           ((place v4 v14 #p0 #g2 #q3 #t4))
           ((pick v4 v14 v15 #g2 #q4 #t9))
           ((place v4 v14 v15 #g2 #q4 #t9))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 #p2 #g1 #q5 #t10))
           ((place v4 v8 #p2 #g1 #q5 #t10))
           ((pick v4 v8 v9 #g1 #q1 #t2))
           ((place v4 v8 v9 #g1 #q1 #t2))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three graspable objects: v8, v12, and v14. They are currently supported on v11, as indicated by `supported(v8, v9, v11)`, `supported(v12, v13, v11)`, and `supported(v14, v15, v11)`. The goal is to place all three objects on v16. This will require picking up each object from its current location and placing it onto a pose on v16. We need to identify appropriate poses on v16 for each object.
           
           Looking at the available `kin` and `supported` predicates, we have:
           - `pose(v8, #p2)` and `supported(v8, #p2, v16)`: Object v8 can be placed at #p2 on v16.
           - `pose(v12, #p1)` and `supported(v12, #p1, v16)`: Object v12 can be placed at #p1 on v16.
           - `pose(v14, #p0)` and `supported(v14, #p0, v16)`: Object v14 can be placed at #p0 on v16.
           
           The robot `v4` has a hand `handempty(v4)` and is at base configuration `v3` (`atbconf(v3)`).
           
           The plan will involve the following steps for each object:
           1. Move the base to the configuration required to pick up the object from its current pose.
           2. Pick up the object.
           3. Move the base to the configuration required to place the object on the target pose on v16.
           4. Place the object on the target pose on v16.
           
           Let's break it down for each object:
           
           **For v8:**
           - Current pose: `v9` on `v11`. Kinematics: `kin(v4, v8, v9, #g1, #q1, #t2)`. This requires base config `q1`.
           - Target pose: `#p2` on `v16`. Kinematics: `kin(v4, v8, #p2, #g1, #q5, #t10)`. This requires base config `q5`.
           
           **For v12:**
           - Current pose: `v13` on `v11`. Kinematics: `kin(v4, v12, v13, #g0, #q0, #t0)`. This requires base config `q0`.
           - Target pose: `#p1` on `v16`. Kinematics: `kin(v4, v12, #p1, #g0, #q2, #t3)`. This requires base config `q2`.
           
           **For v14:**
           - Current pose: `v15` on `v11`. Kinematics: `kin(v4, v14, v15, #g2, #q4, #t9)`. This requires base config `q4`.
           - Target pose: `#p0` on `v16`. Kinematics: `kin(v4, v14, #p0, #g2, #q3, #t4)`. This requires base config `q3`.
           
           The initial base configuration is `v3`.
           
           Let's construct the plan:
           
           1.  **Move v8:**
               *   Move base from `v3` to `q1` to pick up `v8` from `v9`. `(move_base v3 #q1 #t6)`
               *   Pick up `v8`. `(pick v4 v8 v9 #g1 #q1 #t2)`
               *   Move base from `q1` to `q5` to place `v8` at `#p2`. `(move_base #q1 #q5 #o0)` (Using the general base motion #o0 which allows direct moves between configs, e.g. from q1 to q5)
               *   Place `v8`. `(place v4 v8 #p2 #g1 #q5 #t10)`
           
           2.  **Move v12:**
               *   Move base from `q5` to `q0` to pick up `v12` from `v13`. `(move_base #q5 #q0 #o0)`
               *   Pick up `v12`. `(pick v4 v12 v13 #g0 #q0 #t0)`
               *   Move base from `q0` to `q2` to place `v12` at `#p1`. `(move_base #q0 #q2 #o0)`
               *   Place `v12`. `(place v4 v12 #p1 #g0 #q2 #t3)`
           
           3.  **Move v14:**
               *   Move base from `q2` to `q4` to pick up `v14` from `v15`. `(move_base #q2 #q4 #o0)`
               *   Pick up `v14`. `(pick v4 v14 v15 #g2 #q4 #t9)`
               *   Move base from `q4` to `q3` to place `v14` at `#p0`. `(move_base #q4 #q3 #o0)`
               *   Place `v14`. `(place v4 v14 #p0 #g2 #q3 #t4)`
           
           All the required move_base actions are available in the provided list.
           
           --Plan--:
           (move_base v3 #q1 #t6)
           (pick v4 v8 v9 #g1 #q1 #t2)
           (move_base #q1 #q5 #o0)
           (place v4 v8 #p2 #g1 #q5 #t10)
           (move_base #q5 #q0 #o0)
           (pick v4 v12 v13 #g0 #q0 #t0)
           (move_base #q0 #q2 #o0)
           (place v4 v12 #p1 #g0 #q2 #t3)
           (move_base #q2 #q4 #o0)
           (pick v4 v14 v15 #g2 #q4 #t9)
           (move_base #q4 #q3 #o0)
           (place v4 v14 #p0 #g2 #q3 #t4)

