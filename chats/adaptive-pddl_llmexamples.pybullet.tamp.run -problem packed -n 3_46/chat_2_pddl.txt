User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom pose(v8, v9)
           Atom ataconf(v6, v7)
           Atom atpose(v8, v9)
           Atom supported(v12, v13, v11)
           Atom controllable(v4)
           Atom atpose(v14, v15)
           Atom bconf(v3)
           Atom aconf(v4, v5)
           Atom ataconf(v4, v5)
           Atom stackable(v8, v10)
           Atom stackable(v14, v16)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom handempty(v4)
           Atom stackable(v12, v10)
           Atom aconf(v6, v7)
           Atom supported(v14, v15, v11)
           Atom arm(v4)
           Atom atpose(v12, v13)
           Atom atbconf(v3)
           Atom supported(v8, v9, v11)
           Atom arm(v6)
           Atom graspable(v14)
           Atom pose(v12, v13)
           Atom pose(v14, v15)
           Atom graspable(v8)
           Atom stackable(v14, v10)
           Atom graspable(v12)
           Atom handempty(v6)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v8, #o1)
           Atom grasp(v12, #o1)
           Atom supported(v14, #o2, v16)
           Atom supported(v8, #o2, v10)
           Atom grasp(v14, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (v8, v12, v14) that are currently on `v11`. The goal is to place all three objects on `v16`. The robot has two arms, `v4` and `v6`, but only `v4` is currently controllable and has available `kin` information. The robot is at base configuration `v3`. The `kin` information suggests that the robot can move to `#o3` and perform pick/place operations.
           
           The plan will involve picking up each object from `v11` and placing it on `v16`. Since `v8`, `v12`, and `v14` are initially on `v11` at poses `v9`, `v13`, and `v15` respectively, these will be the pick locations. The goal requires them to be on `v16`, and there are 'supported' facts for `#o2` on `v16`, so we will use `#o2` as the placement pose for each object.
           
           Since all objects are initially at `v3` and the `kin` actions use `#o3`, we need to `move_base` to `#o3` before any pick/place operations. After placing the last object, we can move back to `v3`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (move_base #o3 v3 #o0)

