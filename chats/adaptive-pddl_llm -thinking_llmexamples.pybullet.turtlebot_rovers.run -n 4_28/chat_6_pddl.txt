User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v14)
           Atom objective(v17)
           Atom rock(v3)
           Atom rover(v12)
           Atom objective(v19)
           Atom type(v3, v2)
           Atom type(v1, v2)
           Atom rock(v8)
           Atom store(v16)
           Atom lander(v9)
           Atom free(v12, v16)
           Atom rock(v1)
           Atom objective(v18)
           Atom type(v5, v6)
           Atom atconf(v12, v13)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom conf(v14, v15)
           Atom camera(v10)
           Atom rover(v14)
           Atom supports(v10, v11)
           Atom type(v7, v6)
           Atom type(v8, v6)
           Atom rock(v7)
           Atom atconf(v14, v15)
           Atom objective(v20)
           Atom rock(v5)
           Atom conf(v12, v13)
           Atom rock(v4)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom above(v14, #q2, v5)
           Atom conf(v14, #q2)
           Atom imagevisible(v14, #q9, #y7, v17)
           Atom imagerange(v14, #q9, v17)
           Atom conf(v14, #q9)
           Atom ray(#y7)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q8, #y6, v18)
           Atom imagerange(v14, #q8, v18)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom imagevisible(v14, #q10, #y8, v20)
           Atom imagerange(v14, #q10, v20)
           Atom conf(v14, #q10)
           Atom ray(#y8)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q11, #y9, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y9)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v12, #q4, #y2, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q5, #y3, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v1)
           Atom above(v12, #q12, v5)
           Atom conf(v12, #q12)
           Atom imagevisible(v12, #q7, #y5, v17)
           Atom imagerange(v12, #q7, v17)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom comvisible(v12, #q3, #y1, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom above(v12, #q13, v3)
           Atom conf(v12, #q13)
           Atom above(v14, #q0, v3)
           Atom conf(v14, #q0)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #t12, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, v13, #t16, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q3, #t3, v13)
           Atom motion(v12, #q7, #t24, #q3)
           Atom motion(v12, #q3, #t18, #q13)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q13, #t22, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q8, #t28, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, #q12, #t21, #q3)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q3, #t17, #q12)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q3, #t23, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q5, #t10, #q3)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, v15, #t8, #q2)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q10, #t29, #q2)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q3, #t25, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q6, #t27, #q13)
           Atom motion(v12, #q6, #t19, #q5)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q7, #t30, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #t11, #q3)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, v15, #t7, #q0)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q1, #t0, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t5, #q0)
           Atom motion(v14, #q0, #t1, #q1)
           Atom motion(v14, #q1, #t6, #q2)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v14, #q8, #t13, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q9, #t14, #q1)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q2, #t2, #q1)
           Atom motion(v12, v13, #t4, #q4)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q7, #t20, #q4)
           Atom motion(v12, #q3, #t26, #q4)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q4, #t15, #q6)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q4, #t9, #q3)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q12 v5 v16))
           ((sample_rock v12 #q13 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v3 v16))
           ((sample_rock v14 #q2 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t21 #q3))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t22 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #t17 #q12))
           ((move v12 #q3 #t18 #q13))
           ((move v12 #q3 #t23 #q5))
           ((move v12 #q3 #t25 #q6))
           ((move v12 #q3 #t26 #q4))
           ((move v12 #q3 #t3 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t15 #q6))
           ((move v12 #q4 #t9 #q3))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t10 #q3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t11 #q3))
           ((move v12 #q6 #t19 #q5))
           ((move v12 #q6 #t27 #q13))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t20 #q4))
           ((move v12 #q7 #t24 #q3))
           ((move v12 #q7 #t30 #q6))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t16 #q7))
           ((move v12 v13 #t4 #q4))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t1 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t0 v15))
           ((move v14 #q1 #t5 #q0))
           ((move v14 #q1 #t6 #q2))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t29 #q2))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t2 #q1))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t13 #q1))
           ((move v14 #q8 #t28 #q10))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t14 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q8))
           ((move v14 v15 #t7 #q0))
           ((move v14 v15 #t8 #q2))
           ((calibrate v12 #q4 #y2 v18 v10))
           ((calibrate v12 #q5 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v12 #q7 #y5 v17 v10))
           ((calibrate v14 #q10 #y8 v20 v10))
           ((calibrate v14 #q11 #y9 v19 v10))
           ((calibrate v14 #q8 #y6 v18 v10))
           ((calibrate v14 #q9 #y7 v17 v10))
           ((take_image v12 #q4 #y2 v18 v10 v11))
           ((take_image v12 #q5 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v12 #q7 #y5 v17 v10 v11))
           ((take_image v14 #q10 #y8 v20 v10 v11))
           ((take_image v14 #q11 #y9 v19 v10 v11))
           ((take_image v14 #q8 #y6 v18 v10 v11))
           ((take_image v14 #q9 #y7 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y1 v9 v1))
           ((send_analysis v12 #q3 #y1 v9 v4))
           ((send_analysis v12 #q3 #y1 v9 v7))
           ((send_analysis v12 #q3 #y1 v9 v8))
           ((send_analysis v12 #q3 #y1 v9 v5))
           ((send_analysis v12 #q3 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_image v12 #q3 #y1 v9 v18 v11))
           ((send_image v12 #q3 #y1 v9 v20 v11))
           ((send_image v12 #q3 #y1 v9 v19 v11))
           ((send_image v12 #q3 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v20 v11))
           ((send_image v14 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Detailed Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal here is to satisfy the `new-axiom@0()` condition, which essentially boils down to: get images of four specific targets, analyze at least one rock of type 'stone' and one of type 'soil', and ensure the rovers are free at the end. We're in the *rovers* domain, so let's use what we've got.
           
           The setup looks like this: We've got two rovers, *v12* and *v14*, a camera (*v10*) on both, and a lander (*v9*). *v12* is at *v13*, and *v14* is at *v15*. The store (*v16*) is free for both of them. We've got images to take (*v17*, *v18*, *v19*, and *v20*) with locations and communication visibility pre-established. And then there are some stone rocks: *v1*, *v3*, *v4* and soil rocks: *v5*, *v7*, *v8* available to analyze. We'll use *v10* to take pictures with mode *v11*.
           
           Here's the plan:
           
           **Step 1: Take and Send Images**
           
           I'm going to have *v12* do the heavy lifting here since the objective is to make sure *v12* and *v14* are both at starting locations at the end. That means *v12* has to return to *v13* after sampling. First, *v12* needs to navigate to image locations and take the pictures. After that, we'll send those images to the lander. So, the plan is:
           1.  Move to position, Calibrate, and Take Photo for image *v17*.
           2.  Move to position, Calibrate, and Take Photo for image *v18*.
           3.  Move to position, Calibrate, and Take Photo for image *v19*.
           4.  Move to position, Calibrate, and Take Photo for image *v20*.
           5.  Move to communication location.
           6.  Send all images using `send_image`.
           
           This completes the first part and sets up `receivedimage` conditions.
           
           **Step 2: Sample and Analyze Rocks**
           
           Now, the trick is to get an analysis of a 'stone' rock and a 'soil' rock. And we must drop the rocks after. This is where we need to ensure the `free` requirements are maintained. I'll have *v12* take care of sampling rocks as well. So here we go:
           1.  Move *v12* to position of a sample 'stone' rock, sample it, and go back to the communication position.
           2.  Send the analysis, and drop the 'stone' rock.
           3.  Move *v12* to a position with sample 'soil' rock, take sample, and go back to communication position.
           4.  Send the analysis, and drop the 'soil' rock.
           
           This satisfies the need for `receivedanalysis` and ensures that each rover has the free store at the end.
           
           **Step 3: Returning to Base**
           1. Move back to *v13* to complete the final condition.
           
           **Final checks:**
           
           The plan meets all the needed conditions. The precondition and the post conditions of each action are checked at each step. This ensures that the goal is met with the preconditions in each step. All `receivedimage` and `receivedanalysis` conditions are met. All `free` conditions, at the end, are met. The type checks are verified as well.
           
           The goal should be satisfied. And finally, all the actions fit inside the provided valid action list. I believe this should be a suitable plan to achieve the goal `new-axiom@0()`.
           
)

Model:     **Detailed Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal here is to satisfy the `new-axiom@0()` condition, which essentially boils down to: get images of four specific targets, analyze at least one rock of type 'stone' and one of type 'soil', and ensure the rovers are free at the end. We're in the *rovers* domain, so let's use what we've got.
           
           The setup looks like this: We've got two rovers, *v12* and *v14*, a camera (*v10*) on both, and a lander (*v9*). *v12* is at *v13*, and *v14* is at *v15*. The store (*v16*) is free for both of them. We've got images to take (*v17*, *v18*, *v19*, and *v20*) with locations and communication visibility pre-established. And then there are some stone rocks: *v1*, *v3*, *v4* and soil rocks: *v5*, *v7*, *v8* available to analyze. We'll use *v10* to take pictures with mode *v11*.
           
           Here's the plan:
           
           **Step 1: Take and Send Images**
           
           I'm going to have *v12* do the heavy lifting here since the objective is to make sure *v12* and *v14* are both at starting locations at the end. That means *v12* has to return to *v13* after sampling. First, *v12* needs to navigate to image locations and take the pictures. After that, we'll send those images to the lander. So, the plan is:
           1.  Move to position, Calibrate, and Take Photo for image *v17*.
           2.  Move to position, Calibrate, and Take Photo for image *v18*.
           3.  Move to position, Calibrate, and Take Photo for image *v19*.
           4.  Move to position, Calibrate, and Take Photo for image *v20*.
           5.  Move to communication location.
           6.  Send all images using `send_image`.
           
           This completes the first part and sets up `receivedimage` conditions.
           
           **Step 2: Sample and Analyze Rocks**
           
           Now, the trick is to get an analysis of a 'stone' rock and a 'soil' rock. And we must drop the rocks after. This is where we need to ensure the `free` requirements are maintained. I'll have *v12* take care of sampling rocks as well. So here we go:
           1.  Move *v12* to position of a sample 'stone' rock, sample it, and go back to the communication position.
           2.  Send the analysis, and drop the 'stone' rock.
           3.  Move *v12* to a position with sample 'soil' rock, take sample, and go back to communication position.
           4.  Send the analysis, and drop the 'soil' rock.
           
           This satisfies the need for `receivedanalysis` and ensures that each rover has the free store at the end.
           
           **Step 3: Returning to Base**
           1. Move back to *v13* to complete the final condition.
           
           **Final checks:**
           
           The plan meets all the needed conditions. The precondition and the post conditions of each action are checked at each step. This ensures that the goal is met with the preconditions in each step. All `receivedimage` and `receivedanalysis` conditions are met. All `free` conditions, at the end, are met. The type checks are verified as well.
           
           The goal should be satisfied. And finally, all the actions fit inside the provided valid action list. I believe this should be a suitable plan to achieve the goal `new-axiom@0()`.
           

