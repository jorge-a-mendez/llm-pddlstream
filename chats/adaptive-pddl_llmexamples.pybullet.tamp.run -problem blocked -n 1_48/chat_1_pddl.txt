User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v15, v10)
           Atom arm(v4)
           Atom type(v12, v17)
           Atom ataconf(v6, v7)
           Atom supported(v15, v16, v11)
           Atom stackable(v12, v18)
           Atom aconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom pose(v15, v16)
           Atom bconf(v3)
           Atom graspable(v15)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom type(v8, v17)
           Atom atbconf(v3)
           Atom supported(v12, v13, v14)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom stackable(v8, v18)
           Atom controllable(v4)
           Atom canmove()
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v10)
           Atom stackable(v8, v10)
           Atom arm(v6)
           Atom graspable(v12)
           Atom graspable(v8)
           Atom atpose(v15, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom grasp(v8, #o1)
           Atom grasp(v12, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v15, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (`#o0` to `#o4`, `v3` to `v18`) with various properties. Specifically, it seems to involve two arms (`v4`, `v6`), stackable objects (`v15`, `v12`, `v8`), and different surfaces (`v10`, `v11`, `v14`, `v18`). There are also definitions for object types, poses, grasps, and kinematic information for the robot arm `v4` to interact with objects `v8`, `v15`, and `v12`.
           
           The goal is `new-axiom@0()`, which is an axiom defined as:
           `Axiom new-axiom@0()`
             `Conjunction`
               `Atom on(?green, v18)`
               `Atom type(?green, v17)`
           
           From the initial state, we have `type(v8, v17)` and `type(v12, v17)`. So, `?green` could be `v8` or `v12`.
           The axiom `on(?o: object, ?r: object)` is defined as:
             `Conjunction`
               `Atom supported(?o, ?p, ?r)`
               `Atom atpose(?o, ?p)`
           
           So, to achieve `on(?green, v18)`:
           If `?green` is `v8`, we need `on(v8, v18)`.
           We have `supported(v8, #o2, v18)` and `supported(v8, v9, v11)`.
           Currently, `atpose(v8, v9)`. So `on(v8, v11)` is true.
           To make `on(v8, v18)` true, we would need `atpose(v8, #o2)` with `supported(v8, #o2, v18)`. This would involve picking `v8` from `v9` and placing it at `#o2` on `v18`.
           
           If `?green` is `v12`, we need `on(v12, v18)`.
           We have `supported(v12, #o2, v18)` and `supported(v12, v13, v14)`.
           Currently, `atpose(v12, v13)`. So `on(v12, v14)` is true.
           To make `on(v12, v18)` true, we would need `atpose(v12, #o2)` with `supported(v12, #o2, v18)`. This would involve picking `v12` from `v13` and placing it at `#o2` on `v18`.
           
           The only allowed action instance is `(move_base v3 v3 #o0)`. This action does not change the state of any object poses or their locations, nor does it allow for picking or placing objects. Therefore, it is impossible to achieve the goal of moving `v8` or `v12` onto `v18` with the given available actions. The initial state already has `type(v8, v17)` and `type(v12, v17)`, satisfying the second part of the axiom, but `on(v8, v18)` or `on(v12, v18)` is not met and cannot be met with the provided action.
           
           Thus, the goal is unreachable with the given action instances.

