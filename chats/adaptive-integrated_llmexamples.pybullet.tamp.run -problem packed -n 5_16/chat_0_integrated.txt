User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.227, 0.396), (-0.145, 0.477)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.164, -0.52), (0.262, -0.422)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.177, 0.425), (0.268, 0.516)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.025, 0.343), (0.12, 0.438)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v9 is a pose with position (0.063, -0.338, 0.781) and quaternion (0.0, 0.0, -0.197, 0.98).
           Object v19 is a pose with position (-0.186, 0.437, 0.781) and quaternion (0.0, 0.0, 0.996, 0.089).
           Object v17 is a pose with position (0.213, -0.471, 0.781) and quaternion (0.0, 0.0, 0.893, 0.449).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v15 is a pose with position (0.223, 0.471, 0.781) and quaternion (0.0, 0.0, 0.556, 0.831).
           Object v13 is a pose with position (0.073, 0.39, 0.781) and quaternion (0.0, 0.0, -0.859, 0.512).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.017, -0.384), (0.109, -0.292)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v8, v9, v11)
           Atom stackable(v18, v10)
           Atom atpose(v8, v9)
           Atom stackable(v8, v20)
           Atom pose(v18, v19)
           Atom atpose(v12, v13)
           Atom aconf(v6, v7)
           Atom stackable(v12, v20)
           Atom arm(v6)
           Atom pose(v16, v17)
           Atom stackable(v16, v10)
           Atom stackable(v18, v20)
           Atom graspable(v18)
           Atom handempty(v4)
           Atom canmove()
           Atom stackable(v14, v20)
           Atom pose(v14, v15)
           Atom supported(v12, v13, v11)
           Atom stackable(v8, v10)
           Atom stackable(v12, v10)
           Atom stackable(v16, v20)
           Atom supported(v14, v15, v11)
           Atom handempty(v6)
           Atom bconf(v3)
           Atom graspable(v12)
           Atom pose(v8, v9)
           Atom atbconf(v3)
           Atom ataconf(v4, v5)
           Atom stackable(v14, v10)
           Atom supported(v16, v17, v11)
           Atom supported(v18, v19, v11)
           Atom atpose(v16, v17)
           Atom atpose(v14, v15)
           Atom graspable(v8)
           Atom pose(v12, v13)
           Atom controllable(v4)
           Atom graspable(v14)
           Atom aconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom graspable(v16)
           Atom atpose(v18, v19)
           Atom arm(v4)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom grasp(v16, #o1)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v14, #o1)
           Atom grasp(v8, #o1)
           Atom supported(v16, #o2, v20)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v18, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom supported(v12, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom supported(v14, #o2, v20)
           Atom grasp(v18, #o1)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains five objects (v8, v12, v14, v16, v18) that need to be placed on surface v20. Currently, these objects are on surface v11. The robot has two arms, v4 and v6, both of which are currently empty. The robot is at base configuration v3 and arm v4 is at arm configuration v5, while arm v6 is at arm configuration v7.
           
           Since the goal is to place all objects on surface v20, the robot will need to pick up each object from its current location (v11) and place it on surface v20. The current state also lists several `pose` and `grasp` predicates that use a continuous parameter `#o2` and `#o1`, respectively. Since all objects must be placed on `v20`, the same pose `#o2` will be used for all objects.
           
           The `move_base` action instance is only provided to move from `v3` to `v3`, which means the robot will not move its base during the task. This is acceptable since all current object locations and the target location are reachable from the current base configuration.
           
           The objects v18, v12, v14, v16, and v8 are currently at poses v19, v13, v15, v17, and v9 respectively, all on surface v11. We need to move them to surface v20, using the pose `#o2` for all of them. The `grasp` for each object is `#o1`.
           
           Since the problem does not provide any `pick` or `place` action instances, and there are no valid `kin` facts, it is impossible to pick up or place any objects. Therefore, the goal is unreachable.
           
           --Plan--:

