User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom free(v14, v16)
           Atom conf(v14, v15)
           Atom rock(v1)
           Atom rock(v8)
           Atom objective(v19)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom conf(v12, v13)
           Atom lander(v9)
           Atom onboard(v10, v14)
           Atom objective(v17)
           Atom atconf(v12, v13)
           Atom rock(v5)
           Atom mode(v11)
           Atom type(v5, v6)
           Atom rock(v3)
           Atom rover(v12)
           Atom type(v4, v2)
           Atom camera(v10)
           Atom type(v8, v6)
           Atom objective(v20)
           Atom onboard(v10, v12)
           Atom type(v1, v2)
           Atom rock(v7)
           Atom objective(v18)
           Atom type(v3, v2)
           Atom store(v16)
           Atom supports(v10, v11)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom above(v12, #q15, v7)
           Atom conf(v12, #q15)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q2, #y2, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom imagevisible(v12, #q6, #y5, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y5)
           Atom imagevisible(v12, #q5, #y4, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v1)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q11, v7)
           Atom conf(v14, #q11)
           Atom above(v14, #q10, v4)
           Atom conf(v14, #q10)
           Atom imagevisible(v14, #q13, #y9, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom imagevisible(v14, #q9, #y7, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y7)
           Atom imagevisible(v14, #q8, #y6, v20)
           Atom imagerange(v14, #q8, v20)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #o5, v3)
           Atom above(v14, #q7, v1)
           Atom conf(v14, #q7)
           Atom imagevisible(v12, #q4, #y3, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #q12, #y8, v19)
           Atom imagerange(v14, #q12, v19)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t8, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, v13, #t10, #q6)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #t9, #q5)
           Atom motion(v12, #q5, #t24, #q6)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q4, #t23, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q0, #t2, v15)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q7, #t12, #q0)
           Atom motion(v14, #q12, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #t28, #q4)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, v13, #t7, #q2)
           Atom motion(v14, v15, #t0, #q3)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q3, #t11, #q0)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q0, #t3, #q3)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t1, v13)
           Atom motion(v12, #q4, #t5, #q1)
           Atom motion(v12, #q5, #t6, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q2, #t4, #q1)
           Atom motion(v12, #q6, #t25, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, v15, #t13, #q8)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, v13, #t27, #q14)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #t26, #q2)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q9, #t17, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q8, #t15, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q12, #t19, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q10, #t14, #q0)
           Atom motion(v14, #q13, #t21, #q10)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q13, #t22, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q12, #t20, #q11)
           Atom motion(v14, #q9, #t18, #q11)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q8, #t16, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q15)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q15 v7 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q10 v4 v16))
           ((sample_rock v14 #q11 v7 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((sample_rock v14 #q7 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #t1 v13))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t26 #q2))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t28 #q4))
           ((move v12 #q2 #t4 #q1))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t23 #q5))
           ((move v12 #q4 #t5 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t24 #q6))
           ((move v12 #q5 #t6 #q1))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t25 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q6))
           ((move v12 v13 #t27 #q14))
           ((move v12 v13 #t7 #q2))
           ((move v12 v13 #t8 #q4))
           ((move v12 v13 #t9 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #t2 v15))
           ((move v14 #q0 #t3 #q3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t14 #q0))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t19 #q10))
           ((move v14 #q12 #t20 #q11))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t21 #q10))
           ((move v14 #q13 #t22 #q11))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t11 #q0))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t12 #q0))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t15 #q10))
           ((move v14 #q8 #t16 #q11))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t17 #q10))
           ((move v14 #q9 #t18 #q11))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q3))
           ((move v14 v15 #t13 #q8))
           ((calibrate v12 #q2 #y2 v20 v10))
           ((calibrate v12 #q4 #y3 v19 v10))
           ((calibrate v12 #q5 #y4 v18 v10))
           ((calibrate v12 #q6 #y5 v17 v10))
           ((calibrate v14 #q12 #y8 v19 v10))
           ((calibrate v14 #q13 #y9 v17 v10))
           ((calibrate v14 #q8 #y6 v20 v10))
           ((calibrate v14 #q9 #y7 v18 v10))
           ((take_image v12 #q2 #y2 v20 v10 v11))
           ((take_image v12 #q4 #y3 v19 v10 v11))
           ((take_image v12 #q5 #y4 v18 v10 v11))
           ((take_image v12 #q6 #y5 v17 v10 v11))
           ((take_image v14 #q12 #y8 v19 v10 v11))
           ((take_image v14 #q13 #y9 v17 v10 v11))
           ((take_image v14 #q8 #y6 v20 v10 v11))
           ((take_image v14 #q9 #y7 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_image v12 #q1 #y1 v9 v20 v11))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` requires several conditions to be met, specifically:
           - `atconf(v12, v13)` and `atconf(v14, v15)`: These are already true in the initial state.
           - `free(v12, v16)` and `free(v14, v16)`: These are already true in the initial state.
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: This means images of all four objectives (v17, v18, v19, v20) in mode v11 need to be received by the lander.
           - `type(?stone, v2)` and `receivedanalysis(?stone)`: This means an analysis of at least one rock of type v2 (stone) needs to be received. Rocks v1, v3, v4 are of type v2.
           - `type(?soil, v6)` and `receivedanalysis(?soil)`: This means an analysis of at least one rock of type v6 (soil) needs to be received. Rocks v5, v7, v8 are of type v6.
           
           To achieve the `receivedimage` goals, a rover needs to:
           1. Move to a configuration where the objective is visible.
           2. Calibrate its camera.
           3. Take an image of the objective.
           4. Move to a configuration where the lander is visible.
           5. Send the image to the lander.
           
           To achieve the `receivedanalysis` goals, a rover needs to:
           1. Move to a configuration above a rock.
           2. Sample the rock.
           3. Move to a configuration where the lander is visible.
           4. Send the analysis of the rock to the lander.
           
           I will use rover `v12` to handle some image taking and analysis, and rover `v14` for the remaining.
           
           For `receivedimage(v17, v11)`:
           - `v12` is currently at `v13`.
           - `imagevisible(v12, #q6, #y5, v17)` is true. Rover v12 needs to move to #q6.
           - `comvisible(v12, #q1, #y1, v9)` is true. Rover v12 needs to move to #q1 to send.
           
           For `receivedimage(v18, v11)`:
           - `v12` is currently at `v13`.
           - `imagevisible(v12, #q5, #y4, v18)` is true. Rover v12 needs to move to #q5.
           - `comvisible(v12, #q1, #y1, v9)` is true. Rover v12 needs to move to #q1 to send.
           
           For `receivedimage(v19, v11)`:
           - `v12` is currently at `v13`.
           - `imagevisible(v12, #q4, #y3, v19)` is true. Rover v12 needs to move to #q4.
           - `comvisible(v12, #q1, #y1, v9)` is true. Rover v12 needs to move to #q1 to send.
           
           For `receivedimage(v20, v11)`:
           - `v12` is currently at `v13`.
           - `imagevisible(v12, #q2, #y2, v20)` is true. Rover v12 needs to move to #q2.
           - `comvisible(v12, #q1, #y1, v9)` is true. Rover v12 needs to move to #q1 to send.
           
           For `receivedanalysis(?stone)` (e.g., v4):
           - `v12` is currently at `v13`.
           - `above(v12, #q14, v4)` is true. Rover v12 needs to move to #q14.
           - `comvisible(v12, #q1, #y1, v9)` is true. Rover v12 needs to move to #q1 to send.
           
           For `receivedanalysis(?soil)` (e.g., v7):
           - `v14` is currently at `v15`.
           - `above(v14, #q11, v7)` is true. Rover v14 needs to move to #q11.
           - `comvisible(v14, #q0, #y0, v9)` is true. Rover v14 needs to move to #q0 to send.
           
           Let's use rover v12 to get images of v17, v18, v19, v20 and analyze rock v4 (stone type).
           Let's use rover v14 to analyze rock v7 (soil type).
           
           Plan for v12:
           1. Calibrate, take image of v17, send image.
           2. Calibrate, take image of v18, send image.
           3. Calibrate, take image of v19, send image.
           4. Calibrate, take image of v20, send image.
           5. Sample rock v4, send analysis.
           
           Plan for v14:
           1. Sample rock v7, send analysis.
           
           Let's optimize to minimize redundant movements and calibrations.
           Rover `v12` starts at `v13`.
           Rover `v14` starts at `v15`.
           
           **Rover v12 plan:**
           *   Move to `#q6` (for v17). Calibrate, take image.
           *   Move to `#q5` (for v18). Calibrate, take image.
           *   Move to `#q4` (for v19). Calibrate, take image.
           *   Move to `#q2` (for v20). Calibrate, take image.
           *   Move to `#q1` (for comms). Send all images.
           *   Move to `#q14` (for v4 rock). Sample rock.
           *   Move to `#q1` (for comms). Send analysis of v4.
           
           **Rover v14 plan:**
           *   Move to `#q11` (for v7 rock). Sample rock.
           *   Move to `#q0` (for comms). Send analysis of v7.
           
           --Plan--:
           (move v12 v13 #t10 #q6)
           (calibrate v12 #q6 #y5 v17 v10)
           (take_image v12 #q6 #y5 v17 v10 v11)
           (move v12 #q6 #o2 #q5)
           (calibrate v12 #q5 #y4 v18 v10)
           (take_image v12 #q5 #y4 v18 v10 v11)
           (move v12 #q5 #o2 #q4)
           (calibrate v12 #q4 #y3 v19 v10)
           (take_image v12 #q4 #y3 v19 v10 v11)
           (move v12 #q4 #o2 #q2)
           (calibrate v12 #q2 #y2 v20 v10)
           (take_image v12 #q2 #y2 v20 v10 v11)
           (move v12 #q2 #t4 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (send_image v12 #q1 #y1 v9 v20 v11)
           (move v12 #q1 #o2 #q14)
           (sample_rock v12 #q14 v4 v16)
           (move v12 #q14 #o2 #q1)
           (send_analysis v12 #q1 #y1 v9 v4)
           (move v14 v15 #o2 #q11)
           (sample_rock v14 #q11 v7 v16)
           (move v14 #q11 #o2 #q0)
           (send_analysis v14 #q0 #y0 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. This goal is an axiom that checks for the reception of all four images and two specific rock analyses. I need to ensure that all these conditions are met simultaneously in the final state.
           
           The strategy of breaking it down by rover and then ensuring all sub-goals are met, then sending the information should still work. I need to be careful to ensure each predicate of the `new-axiom@0()` is met.
           
           The goal `new-axiom@0()` requires:
           *   `atconf(v12, v13)` and `atconf(v14, v15)`: These are the initial positions and should be maintained or returned to for the check. My plan does not explicitly return to `v13` or `v15`, but as long as the rover ends up in *some* configuration, and this axiom is checking for *any* atconf, this shouldn't be the issue. The issue is likely that some of the `receivedimage` or `receivedanalysis` predicates were not met.
           *   `free(v12, v16)` and `free(v14, v16)`: These are true initially. Sampling a rock makes the store `full`. To meet `free`, the `drop_rock` action must be performed after sampling. This was a critical oversight.
           *   `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: All objectives must be imaged and sent.
           *   `type(?stone, v2)` and `receivedanalysis(?stone)`: An analysis for a rock of type `v2` (stone) must be sent.
           *   `type(?soil, v6)` and `receivedanalysis(?soil)`: An analysis for a rock of type `v6` (soil) must be sent.
           
           My previous plan missed dropping the rocks to make the stores free again. I also need to ensure all image sending and analysis sending actions are performed.
           
           Let's re-verify the full sequence for Rover v12:
           1.  Move to position to image v17 (`#q6`).
           2.  Calibrate and `take_image` of v17.
           3.  Move to position to image v18 (`#q5`).
           4.  Calibrate and `take_image` of v18.
           5.  Move to position to image v19 (`#q4`).
           6.  Calibrate and `take_image` of v19.
           7.  Move to position to image v20 (`#q2`).
           8.  Calibrate and `take_image` of v20.
           9.  Move to communication position (`#q1`).
           10. `send_image` for v17, v18, v19, v20.
           11. Move to rock v4 (`#q14`).
           12. `sample_rock` v4. (Store v16 becomes full for v12).
           13. `drop_rock` v12 v16. (Store v16 becomes free for v12 again).
           14. Move to communication position (`#q1`).
           15. `send_analysis` for v4.
           
           Let's re-verify the full sequence for Rover v14:
           1.  Move to rock v7 (`#q11`).
           2.  `sample_rock` v7. (Store v16 becomes full for v14).
           3.  `drop_rock` v14 v16. (Store v16 becomes free for v14 again).
           4.  Move to communication position (`#q0`).
           5.  `send_analysis` for v7.
           
           This updated plan addresses the `free` predicate for stores by adding `drop_rock` actions.
           
           --Plan--:
           (move v12 v13 #t10 #q6)
           (calibrate v12 #q6 #y5 v17 v10)
           (take_image v12 #q6 #y5 v17 v10 v11)
           (move v12 #q6 #o2 #q5)
           (calibrate v12 #q5 #y4 v18 v10)
           (take_image v12 #q5 #y4 v18 v10 v11)
           (move v12 #q5 #o2 #q4)
           (calibrate v12 #q4 #y3 v19 v10)
           (take_image v12 #q4 #y3 v19 v10 v11)
           (move v12 #q4 #o2 #q2)
           (calibrate v12 #q2 #y2 v20 v10)
           (take_image v12 #q2 #y2 v20 v10 v11)
           (move v12 #q2 #t4 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (send_image v12 #q1 #y1 v9 v20 v11)
           (move v12 #q1 #o2 #q14)
           (sample_rock v12 #q14 v4 v16)
           (drop_rock v12 v16)
           (move v12 #q14 #o2 #q1)
           (send_analysis v12 #q1 #y1 v9 v4)
           (move v14 v15 #o2 #q11)
           (sample_rock v14 #q11 v7 v16)
           (drop_rock v14 v16)
           (move v14 #q11 #o2 #q0)
           (send_analysis v14 #q0 #y0 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal `new-axiom@0()` is still not satisfied, meaning there's still a predicate within the axiom that isn't true at the end of the plan. I previously identified the `free` predicate for stores as a potential issue and added `drop_rock` actions. Since it's still failing, I need to meticulously re-check every predicate in the axiom and every step of the plan.
           
           Let's break down the `new-axiom@0()` again:
           
           1.  `atconf(v12, v13)`: Rover `v12` must be at configuration `v13`.
           2.  `atconf(v14, v15)`: Rover `v14` must be at configuration `v15`.
           3.  `free(v12, v16)`: Rover `v12` must have its store `v16` free.
           4.  `free(v14, v16)`: Rover `v14` must have its store `v16` free.
           5.  `receivedimage(v17, v11)`: Image of objective `v17` in mode `v11` must be received.
           6.  `receivedimage(v18, v11)`: Image of objective `v18` in mode `v11` must be received.
           7.  `receivedimage(v19, v11)`: Image of objective `v19` in mode `v11` must be received.
           8.  `receivedimage(v20, v11)`: Image of objective `v20` in mode `v11` must be received.
           9.  `type(?stone, v2)` and `receivedanalysis(?stone)`: Analysis of a stone (type `v2`) must be received.
           10. `type(?soil, v6)` and `receivedanalysis(?soil)`: Analysis of soil (type `v6`) must be received.
           
           **Re-evaluating the plan against each predicate:**
           
           *   **`atconf(v12, v13)` and `atconf(v14, v15)`:**
               *   The plan starts with `v12` at `v13` and `v14` at `v15`.
               *   Both rovers `move` throughout the plan.
               *   `v12` ends at `#q1`.
               *   `v14` ends at `#q0`.
               *   This means `atconf(v12, v13)` and `atconf(v14, v15)` are NOT true at the end of the plan. This is likely the crucial missing piece. I need to move the rovers back to their initial configurations or find a way for the axiom to be satisfied with their final configurations. Given the axiom directly specifies `v13` and `v15`, the rovers *must* return to these configurations.
           
           *   **`free(v12, v16)` and `free(v14, v16)`:**
               *   I added `drop_rock` actions after sampling for both rovers. This should make `v16` free for both `v12` and `v14` at the end. This part should be correct now.
           
           *   **`receivedimage(...)` goals (v17, v18, v19, v20):**
               *   Rover `v12` moves to appropriate configurations, calibrates, takes images, moves to a communication spot (`#q1`), and `send_image` for all four objectives. This sequence appears correct and should achieve these goals.
           
           *   **`receivedanalysis(?stone)` (v4 is type v2):**
               *   Rover `v12` moves to rock `v4`, `sample_rock`, `drop_rock`, moves to a communication spot (`#q1`), and `send_analysis` for `v4`. This looks correct.
           
           *   **`receivedanalysis(?soil)` (v7 is type v6):**
               *   Rover `v14` moves to rock `v7`, `sample_rock`, `drop_rock`, moves to a communication spot (`#q0`), and `send_analysis` for `v7`. This looks correct.
           
           The primary issue is the final configuration of the rovers for the `atconf` predicates in the axiom. I need to explicitly add `move` actions to return `v12` to `v13` and `v14` to `v15` at the end of their respective tasks.
           
           Let's adjust the plan to include these final moves:
           
           **Rover v12 plan (with return to v13):**
           *   ... (all image taking and sending, rock sampling and analysis sending for v4) ...
           *   After sending analysis of v4: `move v12 #q1 #t1 v13` (move from #q1 back to v13).
           
           **Rover v14 plan (with return to v15):**
           *   ... (rock sampling and analysis sending for v7) ...
           *   After sending analysis of v7: `move v14 #q0 #t2 v15` (move from #q0 back to v15).
           
           Let's regenerate the plan with these final movements.
           
           --Plan--:
           (move v12 v13 #t10 #q6)
           (calibrate v12 #q6 #y5 v17 v10)
           (take_image v12 #q6 #y5 v17 v10 v11)
           (move v12 #q6 #o2 #q5)
           (calibrate v12 #q5 #y4 v18 v10)
           (take_image v12 #q5 #y4 v18 v10 v11)
           (move v12 #q5 #o2 #q4)
           (calibrate v12 #q4 #y3 v19 v10)
           (take_image v12 #q4 #y3 v19 v10 v11)
           (move v12 #q4 #o2 #q2)
           (calibrate v12 #q2 #y2 v20 v10)
           (take_image v12 #q2 #y2 v20 v10 v11)
           (move v12 #q2 #t4 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (send_image v12 #q1 #y1 v9 v20 v11)
           (move v12 #q1 #o2 #q14)
           (sample_rock v12 #q14 v4 v16)
           (drop_rock v12 v16)
           (move v12 #q14 #o2 #q1)
           (send_analysis v12 #q1 #y1 v9 v4)
           (move v12 #q1 #t1 v13)
           (move v14 v15 #o2 #q11)
           (sample_rock v14 #q11 v7 v16)
           (drop_rock v14 v16)
           (move v14 #q11 #o2 #q0)
           (send_analysis v14 #q0 #y0 v9 v7)
           (move v14 #q0 #t2 v15)

