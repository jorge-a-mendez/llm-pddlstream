User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom mode(v11)
           Atom rock(v1)
           Atom type(v3, v2)
           Atom rock(v3)
           Atom rock(v4)
           Atom rover(v14)
           Atom lander(v9)
           Atom free(v12, v16)
           Atom rock(v8)
           Atom rock(v7)
           Atom conf(v14, v15)
           Atom type(v7, v6)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom atconf(v14, v15)
           Atom conf(v12, v13)
           Atom free(v14, v16)
           Atom rock(v5)
           Atom rover(v12)
           Atom objective(v19)
           Atom objective(v17)
           Atom onboard(v10, v14)
           Atom camera(v10)
           Atom type(v1, v2)
           Atom atconf(v12, v13)
           Atom objective(v20)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom type(v4, v2)
           Atom objective(v18)
           Atom above(v14, #q4, v1)
           Atom conf(v14, #q4)
           Atom imagevisible(v14, #q3, #y3, v18)
           Atom imagerange(v14, #q3, v18)
           Atom conf(v14, #q3)
           Atom ray(#y3)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q1, #y1, v20)
           Atom imagerange(v14, #q1, v20)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q2, #y2, v17)
           Atom imagerange(v14, #q2, v17)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #q6, #y4, v19)
           Atom imagerange(v14, #q6, v19)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v12, #q11, v8)
           Atom conf(v12, #q11)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #q10, v3)
           Atom conf(v12, #q10)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #q9, v7)
           Atom conf(v12, #q9)
           Atom above(v12, #q8, v4)
           Atom conf(v12, #q8)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom above(v12, #o5, v5)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom comvisible(v12, #q7, #y5, v9)
           Atom comrange(v12, #q7, v9)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #t2, #q3)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v12, #q7, #t9, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, v15, #t24, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, v15, #t1, #q2)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q2, #t12, #q6)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q0, #t3, #q4)
           Atom motion(v14, #q2, #t5, #q0)
           Atom motion(v14, #q3, #t6, #q0)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q6, #t17, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q4, #t7, #q0)
           Atom motion(v14, #q0, #t25, #q3)
           Atom motion(v14, #q0, #t8, v15)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q1, #t11, #q2)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q3, #t10, #q1)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, v15, #t0, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q1, #t4, #q0)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #t13, #q8)
           Atom motion(v12, #q7, #t15, #q8)
           Atom motion(v12, #q8, #t18, #q7)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q7, #t16, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #t19, #q7)
           Atom motion(v12, v13, #t14, #q9)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #t20, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #t21, #q7)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #t23, #q0)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q0, #t22, #q5)
           Atom motion(v12, #q11, #o2, #o3)
           Atom motion(v12, #q10, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q11)
           Atom motion(v12, #o3, #o2, #q10)
           Atom motion(v12, #o3, #o2, #q9)
           Atom motion(v12, #q8, #o2, #o3)
           Atom motion(v12, #q7, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q8)
           Atom motion(v12, #q9, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q7)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q9, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q4 v1 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q10))
           ((move v12 #o3 #o2 #q11))
           ((move v12 #o3 #o2 #q7))
           ((move v12 #o3 #o2 #q8))
           ((move v12 #o3 #o2 #q9))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o3))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t20 #q7))
           ((move v12 #q11 #o2 #o3))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t21 #q7))
           ((move v12 #q7 #o2 #o3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #t15 #q8))
           ((move v12 #q7 #t16 #q9))
           ((move v12 #q7 #t9 v13))
           ((move v12 #q8 #o2 #o3))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t18 #q7))
           ((move v12 #q9 #o2 #o3))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t19 #q7))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t13 #q8))
           ((move v12 v13 #t14 #q9))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #t22 #q5))
           ((move v14 #q0 #t25 #q3))
           ((move v14 #q0 #t3 #q4))
           ((move v14 #q0 #t8 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t11 #q2))
           ((move v14 #q1 #t4 #q0))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t12 #q6))
           ((move v14 #q2 #t5 #q0))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t10 #q1))
           ((move v14 #q3 #t6 #q0))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t7 #q0))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t23 #q0))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t17 #q0))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q1))
           ((move v14 v15 #t1 #q2))
           ((move v14 v15 #t2 #q3))
           ((move v14 v15 #t24 #q4))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q1 #y1 v20 v10))
           ((calibrate v14 #q2 #y2 v17 v10))
           ((calibrate v14 #q3 #y3 v18 v10))
           ((calibrate v14 #q6 #y4 v19 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q1 #y1 v20 v10 v11))
           ((take_image v14 #q2 #y2 v17 v10 v11))
           ((take_image v14 #q3 #y3 v18 v10 v11))
           ((take_image v14 #q6 #y4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q7 #y5 v9 v1))
           ((send_analysis v12 #q7 #y5 v9 v5))
           ((send_analysis v12 #q7 #y5 v9 v3))
           ((send_analysis v12 #q7 #y5 v9 v8))
           ((send_analysis v12 #q7 #y5 v9 v4))
           ((send_analysis v12 #q7 #y5 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q7 #y5 v9 v17 v11))
           ((send_image v12 #q7 #y5 v9 v18 v11))
           ((send_image v12 #q7 #y5 v9 v19 v11))
           ((send_image v12 #q7 #y5 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene includes two rovers, v12 and v14, each equipped with a camera (v10) and a storage unit (v16). There's a lander (v9) for communication. Several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20) are present. The goal is `new-axiom@0()`, which requires receiving images for all objectives (v17, v18, v19, v20) with mode v11, receiving analysis for rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8), and ensuring both rovers (v12 and v14) have free storage (v16) and are at their respective initial configurations (v13 and v15).
           
           Currently, all objectives are not imaged and no rocks are analyzed. Both rovers have free storage and are at their initial configurations.
           
           The plan will involve:
           1. Calibrating the camera for each rover.
           2. Taking images of all objectives using available imagevisible predicates for both rovers.
           3. Sending the collected images to the lander.
           4. Sampling all rocks of type v2 and v6 using both rovers.
           5. Sending the analysis of these rocks to the lander.
           
           Since the goal requires receiving analysis for all rocks of a certain type, both rovers will need to sample rocks.
           Rover v14 can sample v1, v3, v4, v5, v7, v8.
           Rover v12 can sample v1, v3, v4, v5, v7, v8.
           
           The problem requires to satisfy `new-axiom@0()` which implies several conditions:
           - `atconf(v12, v13)`: Already true.
           - `atconf(v14, v15)`: Already true.
           - `free(v12, v16)`: Already true.
           - `free(v14, v16)`: Already true.
           - `receivedimage(v17, v11)`: Needs to be achieved.
           - `receivedimage(v18, v11)`: Needs to be achieved.
           - `receivedimage(v19, v11)`: Needs to be achieved.
           - `receivedimage(v20, v11)`: Needs to be achieved.
           - `type(?stone, v2)` AND `receivedanalysis(?stone)`: This means all rocks of type v2 (v1, v3, v4) must be analyzed.
           - `type(?soil, v6)` AND `receivedanalysis(?soil)`: This means all rocks of type v6 (v5, v7, v8) must be analyzed.
           
           Let's break down the plan:
           
           **For images:**
           Rover v14 can take images of v18, v17, v20, v19 from configurations #q3, #q2, #q1, #q6 respectively.
           Rover v12 can take images of v17, v19, v18, v20 from configuration #o3.
           
           **For rock analysis:**
           Rover v14 can sample rocks v1, v3, v4, v5, v7, v8 from configurations #q4, #o5, #o5, #q5, #o5, #o5 respectively.
           Rover v12 can sample rocks v1, v3, v4, v5, v7, v8 from configurations #o5, #q10, #q8, #o5, #q9, #q11 respectively.
           
           Since the goal requires receiving analysis for all rocks of type v2 and v6, both rovers must sample rocks. And since each rover has only one store, they can only sample one rock at a time, then send the analysis, then drop the rock to free up the store. This will be very inefficient. However, the initial state shows `free(v12, v16)` and `free(v14, v16)`. The goal does not explicitly state that the rovers should *not* be full, just that they should be free. However, the axiom implies that both `free(v12,v16)` and `free(v14,v16)` must be true *at the end*. So, the rovers need to drop rocks if they sample.
           
           A more efficient way to satisfy the goal would be to use one rover to image all objectives and the other to sample all rocks, or to divide the tasks.
           
           Let's use Rover v14 for imaging and Rover v12 for sampling.
           
           **Rover v14 (Imaging):**
           1. Calibrate camera for each objective.
           2. Take image for each objective.
           3. Move to a configuration where it can communicate.
           4. Send images.
           
           **Rover v12 (Sampling):**
           1. Sample a rock.
           2. Move to a configuration where it can communicate.
           3. Send analysis.
           4. Drop rock.
           5. Repeat for all rocks.
           
           Let's list the specific actions:
           
           **Rover v14 (Imaging):**
           - Calibrate for v18 at #q3.
           - Take image of v18 at #q3.
           - Move to #q2.
           - Calibrate for v17 at #q2.
           - Take image of v17 at #q2.
           - Move to #q1.
           - Calibrate for v20 at #q1.
           - Take image of v20 at #q1.
           - Move to #q6.
           - Calibrate for v19 at #q6.
           - Take image of v19 at #q6.
           - Move to #q0 (comvisible for v9).
           - Send images of v17, v18, v19, v20.
           
           **Rover v12 (Sampling and Analysis):**
           - Sample v1 at #o5.
           - Move to #q7 (comvisible for v9).
           - Send analysis for v1.
           - Drop v1.
           - Sample v3 at #q10.
           - Send analysis for v3.
           - Drop v3.
           - Sample v4 at #q8.
           - Send analysis for v4.
           - Drop v4.
           - Sample v5 at #o5.
           - Send analysis for v5.
           - Drop v5.
           - Sample v7 at #q9.
           - Send analysis for v7.
           - Drop v7.
           - Sample v8 at #q11.
           - Send analysis for v8.
           - Drop v8.
           
           This will achieve all parts of the goal.
           
           --Plan--:
           (calibrate v14 #q3 #y3 v18 v10)
           (take_image v14 #q3 #y3 v18 v10 v11)
           (move v14 #q3 #o2 #q2)
           (calibrate v14 #q2 #y2 v17 v10)
           (take_image v14 #q2 #y2 v17 v10 v11)
           (move v14 #q2 #o2 #q1)
           (calibrate v14 #q1 #y1 v20 v10)
           (take_image v14 #q1 #y1 v20 v10 v11)
           (move v14 #q1 #o2 #q6)
           (calibrate v14 #q6 #y4 v19 v10)
           (take_image v14 #q6 #y4 v19 v10 v11)
           (move v14 #q6 #o2 #q0)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (sample_rock v12 #o5 v1 v16)
           (move v12 #o5 #o2 #q7)
           (send_analysis v12 #q7 #y5 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #q10)
           (sample_rock v12 #q10 v3 v16)
           (move v12 #q10 #o2 #q7)
           (send_analysis v12 #q7 #y5 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #q8)
           (sample_rock v12 #q8 v4 v16)
           (move v12 #q8 #o2 #q7)
           (send_analysis v12 #q7 #y5 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #o5)
           (sample_rock v12 #o5 v5 v16)
           (move v12 #o5 #o2 #q7)
           (send_analysis v12 #q7 #y5 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #q9)
           (sample_rock v12 #q9 v7 v16)
           (move v12 #q9 #o2 #q7)
           (send_analysis v12 #q7 #y5 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #q11)
           (sample_rock v12 #q11 v8 v16)
           (move v12 #q11 #o2 #q7)
           (send_analysis v12 #q7 #y5 v9 v8)
           (drop_rock v12 v16)

User:      The plan you provided contains the following invalid actions: `(move v14 #q6 #o2 #q0), (move v12 #q10 #o2 #q7), (move v12 #q7 #o2 #q8), (move v12 #q8 #o2 #q7), (move v12 #q7 #o2 #q9), (move v12 #q9 #o2 #q7), (move v12 #q11 #o2 #q7)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q4 v1 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q10))
           ((move v12 #o3 #o2 #q11))
           ((move v12 #o3 #o2 #q7))
           ((move v12 #o3 #o2 #q8))
           ((move v12 #o3 #o2 #q9))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o3))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t20 #q7))
           ((move v12 #q11 #o2 #o3))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t21 #q7))
           ((move v12 #q7 #o2 #o3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #t15 #q8))
           ((move v12 #q7 #t16 #q9))
           ((move v12 #q7 #t9 v13))
           ((move v12 #q8 #o2 #o3))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t18 #q7))
           ((move v12 #q9 #o2 #o3))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t19 #q7))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t13 #q8))
           ((move v12 v13 #t14 #q9))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #t22 #q5))
           ((move v14 #q0 #t25 #q3))
           ((move v14 #q0 #t3 #q4))
           ((move v14 #q0 #t8 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t11 #q2))
           ((move v14 #q1 #t4 #q0))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t12 #q6))
           ((move v14 #q2 #t5 #q0))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t10 #q1))
           ((move v14 #q3 #t6 #q0))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t7 #q0))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t23 #q0))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t17 #q0))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q1))
           ((move v14 v15 #t1 #q2))
           ((move v14 v15 #t2 #q3))
           ((move v14 v15 #t24 #q4))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q1 #y1 v20 v10))
           ((calibrate v14 #q2 #y2 v17 v10))
           ((calibrate v14 #q3 #y3 v18 v10))
           ((calibrate v14 #q6 #y4 v19 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q1 #y1 v20 v10 v11))
           ((take_image v14 #q2 #y2 v17 v10 v11))
           ((take_image v14 #q3 #y3 v18 v10 v11))
           ((take_image v14 #q6 #y4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q7 #y5 v9 v1))
           ((send_analysis v12 #q7 #y5 v9 v5))
           ((send_analysis v12 #q7 #y5 v9 v3))
           ((send_analysis v12 #q7 #y5 v9 v8))
           ((send_analysis v12 #q7 #y5 v9 v4))
           ((send_analysis v12 #q7 #y5 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q7 #y5 v9 v17 v11))
           ((send_image v12 #q7 #y5 v9 v18 v11))
           ((send_image v12 #q7 #y5 v9 v19 v11))
           ((send_image v12 #q7 #y5 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The scene includes two rovers, v12 and v14, each equipped with a camera (v10) and a storage unit (v16). There's a lander (v9) for communication. Several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20) are present. The goal is `new-axiom@0()`, which requires receiving images for all objectives (v17, v18, v19, v20) with mode v11, receiving analysis for rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8), and ensuring both rovers (v12 and v14) have free storage (v16) and are at their respective initial configurations (v13 and v15).
           
           Currently, all objectives are not imaged and no rocks are analyzed. Both rovers have free storage and are at their initial configurations.
           
           The plan will involve:
           1. Calibrating the camera for each rover.
           2. Taking images of all objectives using available imagevisible predicates for both rovers.
           3. Sending the collected images to the lander.
           4. Sampling all rocks of type v2 and v6 using both rovers.
           5. Sending the analysis of these rocks to the lander.
           
           The problem requires to satisfy `new-axiom@0()` which implies several conditions:
           - `atconf(v12, v13)`: Already true.
           - `atconf(v14, v15)`: Already true.
           - `free(v12, v16)`: Already true.
           - `free(v14, v16)`: Already true.
           - `receivedimage(v17, v11)`: Needs to be achieved.
           - `receivedimage(v18, v11)`: Needs to be achieved.
           - `receivedimage(v19, v11)`: Needs to be achieved.
           - `receivedimage(v20, v11)`: Needs to be achieved.
           - `type(?stone, v2)` AND `receivedanalysis(?stone)`: This means all rocks of type v2 (v1, v3, v4) must be analyzed.
           - `type(?soil, v6)` AND `receivedanalysis(?soil)`: This means all rocks of type v6 (v5, v7, v8) must be analyzed.
           
           Let's revise the plan based on the available actions.
           
           **Rover v14 (Imaging):**
           1. Calibrate camera and take images for all objectives it can see.
           2. Move to a configuration where it can communicate.
           3. Send images.
           
           **Rover v12 (Sampling and Analysis):**
           1. Sample a rock.
           2. Move to a configuration where it can communicate (if not already there).
           3. Send analysis.
           4. Drop rock to free up storage.
           5. Repeat for all required rocks.
           
           Let's list the specific actions, ensuring valid moves are used:
           
           **Rover v14 (Imaging):**
           - Calibrate for v18 at #q3.
           - Take image of v18 at #q3.
           - Move from #q3 to #q2.
           - Calibrate for v17 at #q2.
           - Take image of v17 at #q2.
           - Move from #q2 to #q1.
           - Calibrate for v20 at #q1.
           - Take image of v20 at #q1.
           - Move from #q1 to #q6.
           - Calibrate for v19 at #q6.
           - Take image of v19 at #q6.
           - Move from #q6 to #q0 (using the available `(move v14 #q6 #t17 #q0)` action).
           - Send images of v17, v18, v19, v20.
           
           **Rover v12 (Sampling and Analysis):**
           - Sample v1 at #o5.
           - Move from #o5 to #q7 (available action `(move v12 #o5 #o2 #q7)`).
           - Send analysis for v1.
           - Drop v1.
           - Move from #q7 to #q10 (available action `(move v12 #q7 #o2 #q10)`).
           - Sample v3 at #q10.
           - Move from #q10 to #q7 (available action `(move v12 #q10 #t20 #q7)`).
           - Send analysis for v3.
           - Drop v3.
           - Move from #q7 to #q8 (available action `(move v12 #q7 #t15 #q8)`).
           - Sample v4 at #q8.
           - Move from #q8 to #q7 (available action `(move v12 #q8 #t18 #q7)`).
           - Send analysis for v4.
           - Drop v4.
           - Move from #q7 to #o5 (available action `(move v12 #q7 #o2 #o5)`).
           - Sample v5 at #o5.
           - Move from #o5 to #q7 (available action `(move v12 #o5 #o2 #q7)`).
           - Send analysis for v5.
           - Drop v5.
           - Move from #q7 to #q9 (available action `(move v12 #q7 #t16 #q9)`).
           - Sample v7 at #q9.
           - Move from #q9 to #q7 (available action `(move v12 #q9 #t19 #q7)`).
           - Send analysis for v7.
           - Drop v7.
           - Move from #q7 to #q11 (available action `(move v12 #q7 #o2 #q11)`).
           - Sample v8 at #q11.
           - Move from #q11 to #q7 (available action `(move v12 #q11 #t21 #q7)`).
           - Send analysis for v8.
           - Drop v8.
           
           This revised plan uses only the provided valid actions.
           
           --Plan--:
           (calibrate v14 #q3 #y3 v18 v10)
           (take_image v14 #q3 #y3 v18 v10 v11)
           (move v14 #q3 #o2 #q2)
           (calibrate v14 #q2 #y2 v17 v10)
           (take_image v14 #q2 #y2 v17 v10 v11)
           (move v14 #q2 #o2 #q1)
           (calibrate v14 #q1 #y1 v20 v10)
           (take_image v14 #q1 #y1 v20 v10 v11)
           (move v14 #q1 #o2 #q6)
           (calibrate v14 #q6 #y4 v19 v10)
           (take_image v14 #q6 #y4 v19 v10 v11)
           (move v14 #q6 #t17 #q0)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (sample_rock v12 #o5 v1 v16)
           (move v12 #o5 #o2 #q7)
           (send_analysis v12 #q7 #y5 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #q10)
           (sample_rock v12 #q10 v3 v16)
           (move v12 #q10 #t20 #q7)
           (send_analysis v12 #q7 #y5 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q7 #t15 #q8)
           (sample_rock v12 #q8 v4 v16)
           (move v12 #q8 #t18 #q7)
           (send_analysis v12 #q7 #y5 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #o5)
           (sample_rock v12 #o5 v5 v16)
           (move v12 #o5 #o2 #q7)
           (send_analysis v12 #q7 #y5 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q7 #t16 #q9)
           (sample_rock v12 #q9 v7 v16)
           (move v12 #q9 #t19 #q7)
           (send_analysis v12 #q7 #y5 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #q11)
           (sample_rock v12 #q11 v8 v16)
           (move v12 #q11 #t21 #q7)
           (send_analysis v12 #q7 #y5 v9 v8)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #o5) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The scene includes two rovers, v12 and v14, each equipped with a camera (v10) and a storage unit (v16). There's a lander (v9) for communication. Several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20) are present. The goal is `new-axiom@0()`, which requires receiving images for all objectives (v17, v18, v19, v20) with mode v11, receiving analysis for rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8), and ensuring both rovers (v12 and v14) have free storage (v16) and are at their respective initial configurations (v13 and v15).
           
           Currently, all objectives are not imaged and no rocks are analyzed. Both rovers have free storage and are at their initial configurations.
           
           The plan will involve:
           1. Calibrating the camera for each rover.
           2. Taking images of all objectives using available imagevisible predicates for both rovers.
           3. Sending the collected images to the lander.
           4. Sampling all rocks of type v2 and v6 using both rovers.
           5. Sending the analysis of these rocks to the lander.
           
           The problem requires to satisfy `new-axiom@0()` which implies several conditions:
           - `atconf(v12, v13)`: This needs to be true at the end.
           - `atconf(v14, v15)`: This needs to be true at the end.
           - `free(v12, v16)`: This needs to be true at the end.
           - `free(v14, v16)`: This needs to be true at the end.
           - `receivedimage(v17, v11)`: Needs to be achieved.
           - `receivedimage(v18, v11)`: Needs to be achieved.
           - `receivedimage(v19, v11)`: Needs to be achieved.
           - `receivedimage(v20, v11)`: Needs to be achieved.
           - `type(?stone, v2)` AND `receivedanalysis(?stone)`: This means all rocks of type v2 (v1, v3, v4) must be analyzed.
           - `type(?soil, v6)` AND `receivedanalysis(?soil)`: This means all rocks of type v6 (v5, v7, v8) must be analyzed.
           
           Let's revise the plan based on the available actions and stricter precondition checking. The error indicates `atconf(v12, #o5)` was not satisfied. This means rover v12 was not at configuration #o5 when the `sample_rock` action was called.
           
           **Initial state for v12:** `atconf(v12, v13)`
           **Initial state for v14:** `atconf(v14, v15)`
           
           The plan needs to ensure the rover is at the correct configuration *before* attempting actions like `sample_rock` or `send_analysis`. Also, at the end, the rovers need to be at their initial configurations (`v13` and `v15`).
           
           Let's carefully construct the plan:
           
           **Rover v14 (Imaging):**
           Starts at `v15`.
           1. Move to `#q3` to image `v18`.
           2. Calibrate camera for `v18`.
           3. Take image of `v18`.
           4. Move from `#q3` to `#q2` to image `v17`.
           5. Calibrate camera for `v17`.
           6. Take image of `v17`.
           7. Move from `#q2` to `#q1` to image `v20`.
           8. Calibrate camera for `v20`.
           9. Take image of `v20`.
           10. Move from `#q1` to `#q6` to image `v19`.
           11. Calibrate camera for `v19`.
           12. Take image of `v19`.
           13. Move from `#q6` to `#q0` for communication.
           14. Send all images.
           15. Move from `#q0` back to `v15` to satisfy the goal.
           
           **Rover v12 (Sampling and Analysis):**
           Starts at `v13`.
           1. Move to `#o5` to sample `v1`.
           2. Sample `v1`.
           3. Move from `#o5` to `#q7` for communication.
           4. Send analysis for `v1`.
           5. Drop `v1`.
           6. Move from `#q7` to `#q10` to sample `v3`.
           7. Sample `v3`.
           8. Move from `#q10` to `#q7` for communication.
           9. Send analysis for `v3`.
           10. Drop `v3`.
           11. Move from `#q7` to `#q8` to sample `v4`.
           12. Sample `v4`.
           13. Move from `#q8` to `#q7` for communication.
           14. Send analysis for `v4`.
           15. Drop `v4`.
           16. Move from `#q7` to `#o5` to sample `v5`.
           17. Sample `v5`.
           18. Move from `#o5` to `#q7` for communication.
           19. Send analysis for `v5`.
           20. Drop `v5`.
           21. Move from `#q7` to `#q9` to sample `v7`.
           22. Sample `v7`.
           23. Move from `#q9` to `#q7` for communication.
           24. Send analysis for `v7`.
           25. Drop `v7`.
           26. Move from `#q7` to `#q11` to sample `v8`.
           27. Sample `v8`.
           28. Move from `#q11` to `#q7` for communication.
           29. Send analysis for `v8`.
           30. Drop `v8`.
           31. Move from `#q7` back to `v13` to satisfy the goal.
           
           Let's ensure every move action used has a corresponding entry in the valid action list.
           
           --Plan--:
           (move v14 v15 #t2 #q3)
           (calibrate v14 #q3 #y3 v18 v10)
           (take_image v14 #q3 #y3 v18 v10 v11)
           (move v14 #q3 #o2 #q2)
           (calibrate v14 #q2 #y2 v17 v10)
           (take_image v14 #q2 #y2 v17 v10 v11)
           (move v14 #q2 #o2 #q1)
           (calibrate v14 #q1 #y1 v20 v10)
           (take_image v14 #q1 #y1 v20 v10 v11)
           (move v14 #q1 #o2 #q6)
           (calibrate v14 #q6 #y4 v19 v10)
           (take_image v14 #q6 #y4 v19 v10 v11)
           (move v14 #q6 #t17 #q0)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (move v14 #q0 #t8 v15)
           (move v12 v13 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (move v12 #o5 #o2 #q7)
           (send_analysis v12 #q7 #y5 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #q10)
           (sample_rock v12 #q10 v3 v16)
           (move v12 #q10 #t20 #q7)
           (send_analysis v12 #q7 #y5 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q7 #t15 #q8)
           (sample_rock v12 #q8 v4 v16)
           (move v12 #q8 #t18 #q7)
           (send_analysis v12 #q7 #y5 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #o5)
           (sample_rock v12 #o5 v5 v16)
           (move v12 #o5 #o2 #q7)
           (send_analysis v12 #q7 #y5 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q7 #t16 #q9)
           (sample_rock v12 #q9 v7 v16)
           (move v12 #q9 #t19 #q7)
           (send_analysis v12 #q7 #y5 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #q11)
           (sample_rock v12 #q11 v8 v16)
           (move v12 #q11 #t21 #q7)
           (send_analysis v12 #q7 #y5 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q7 #t9 v13)

