User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g3: object
           #g4: object
           #g5: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q9: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           @sink: object
           @stove: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v15 is a pose with position (-0.23, 0.514, 0.781) and quaternion (0.0, 0.0, 0.941, 0.337).
           Object v13 is a pose with position (0.127, -0.343, 0.781) and quaternion (0.0, 0.0, 1.0, 0.03).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p3 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p4 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object p5 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (-0.132, -0.347, 0.781) and quaternion (0.0, 0.0, 0.634, 0.774).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p3)
           Atom supported(v8, p3, v16)
           Atom pose(v14, p5)
           Atom supported(v14, p5, v10)
           Atom supported(v14, p5, v16)
           Atom pose(v12, p4)
           Atom supported(v12, p4, v16)
           Atom supported(v12, p4, v10)
           Atom supported(v8, p3, v10)
           Atom kin(v32, v33, p3, v34, v35, v36)
           Atom kin(v32, v38, p5, v34, v35, v36)
           Atom kin(v32, v37, p4, v34, v35, v36)
           Atom pose(v14, p8)
           Atom supported(v14, p8, v10)
           Atom pose(v8, p6)
           Atom supported(v8, p6, v16)
           Atom pose(v12, p7)
           Atom supported(v12, p7, v10)
           Atom supported(v14, p8, v16)
           Atom supported(v12, p7, v16)
           Atom supported(v8, p6, v10)
           Atom kin(v32, v33, p6, v34, v35, v36)
           Atom kin(v32, v37, p7, v34, v35, v36)
           Atom kin(v32, v38, p8, v34, v35, v36)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g4)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g5)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g3)
           Atom bconf(#q9)
           Atom atraj(#t23)
           Atom kin(v4, v14, v15, #g4, #q9, #t23)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p5, #g4, #o3, #o4)
           Atom bconf(#q10)
           Atom atraj(#t25)
           Atom kin(v4, v14, p8, #g4, #q10, #t25)
           Atom kin(v4, v8, p6, #g3, #o3, #o4)
           Atom bconf(#q14)
           Atom atraj(#t29)
           Atom kin(v4, v8, v9, #g3, #q14, #t29)
           Atom kin(v4, v8, p3, #g3, #o3, #o4)
           Atom bconf(#q12)
           Atom atraj(#t27)
           Atom kin(v4, v8, #p0, #g3, #q12, #t27)
           Atom kin(v4, v12, p7, #g5, #o3, #o4)
           Atom bconf(#q11)
           Atom atraj(#t26)
           Atom kin(v4, v12, p4, #g5, #q11, #t26)
           Atom bconf(#q13)
           Atom atraj(#t28)
           Atom kin(v4, v12, v13, #g5, #q13, #t28)
           Atom basemotion(#q9, #o0, v3)
           Atom btraj(#t24)
           Atom basemotion(v3, #t24, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q9, #o0, #q11)
           Atom btraj(#t30)
           Atom basemotion(#q11, #t30, #q9)
           Atom basemotion(#q14, #o0, v3)
           Atom btraj(#t31)
           Atom basemotion(v3, #t31, #q14)
           Atom basemotion(#q14, #o0, #q14)
           Atom basemotion(#q11, #o0, #q14)
           Atom basemotion(#q14, #o0, #q11)
           Atom basemotion(#q9, #o0, #q14)
           Atom basemotion(#q14, #o0, #q9)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q10, #o0, #q14)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(v3, #o0, #q10)
           Atom basemotion(#q14, #o0, #q10)
           Atom btraj(#t35)
           Atom basemotion(#q9, #t35, #q10)
           Atom basemotion(#q13, #o0, v3)
           Atom btraj(#t32)
           Atom basemotion(#q13, #t32, #q11)
           Atom basemotion(#q13, #o0, #q14)
           Atom basemotion(#q11, #o0, #q13)
           Atom basemotion(#q13, #o0, #q13)
           Atom basemotion(v3, #o0, #q13)
           Atom basemotion(#q14, #o0, #q13)
           Atom basemotion(#q9, #o0, #q13)
           Atom basemotion(#q13, #o0, #q9)
           Atom basemotion(#q10, #o0, #q13)
           Atom basemotion(#q13, #o0, #q10)
           Atom basemotion(#q12, #o0, #q10)
           Atom basemotion(#q12, #o0, #q11)
           Atom btraj(#t33)
           Atom basemotion(#q12, #t33, #q13)
           Atom basemotion(#q12, #o0, v3)
           Atom basemotion(#q12, #o0, #q14)
           Atom basemotion(#q12, #o0, #q9)
           Atom basemotion(#q10, #o0, #q12)
           Atom basemotion(#q11, #o0, #q12)
           Atom basemotion(#q12, #o0, #q12)
           Atom basemotion(#q13, #o0, #q12)
           Atom basemotion(v3, #o0, #q12)
           Atom btraj(#t34)
           Atom basemotion(#q14, #t34, #q12)
           Atom basemotion(#q9, #o0, #q12)
           Atom kin(v4, v12, #o2, #g5, #o3, #o4)
           Atom kin(v4, v14, #o2, #g4, #o3, #o4)
           Atom kin(v4, v8, #o2, #g3, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q14, #o0, #o3)
           Atom basemotion(#o3, #o0, #q14)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#q13, #o0, #o3)
           Atom basemotion(#o3, #o0, #q13)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#q12, #o0, #o3)
           Atom basemotion(#o3, #o0, #q12)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q14 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q14 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q14 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q9 #t30))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q14 #o0))
           ((move_base #q12 #q9 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q12 #q13 #t33))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q14 #o0))
           ((move_base #q13 #q9 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q13 #q11 #t32))
           ((move_base #q14 #o3 #o0))
           ((move_base #q14 #q10 #o0))
           ((move_base #q14 #q11 #o0))
           ((move_base #q14 #q13 #o0))
           ((move_base #q14 #q14 #o0))
           ((move_base #q14 #q9 #o0))
           ((move_base #q14 v3 #o0))
           ((move_base #q14 #q12 #t34))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q12 #o0))
           ((move_base #q9 #q13 #o0))
           ((move_base #q9 #q14 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q10 #t35))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q12 #o0))
           ((move_base v3 #q13 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q9 #t24))
           ((move_base v3 #q14 #t31))
           ((pick v4 v12 #o2 #g5 #o3 #o4))
           ((place v4 v12 #o2 #g5 #o3 #o4))
           ((pick v4 v12 p4 #g5 #q11 #t26))
           ((place v4 v12 p4 #g5 #q11 #t26))
           ((pick v4 v12 p7 #g5 #o3 #o4))
           ((place v4 v12 p7 #g5 #o3 #o4))
           ((pick v4 v12 v13 #g5 #q13 #t28))
           ((place v4 v12 v13 #g5 #q13 #t28))
           ((pick v4 v14 #o2 #g4 #o3 #o4))
           ((place v4 v14 #o2 #g4 #o3 #o4))
           ((pick v4 v14 p5 #g4 #o3 #o4))
           ((place v4 v14 p5 #g4 #o3 #o4))
           ((pick v4 v14 p8 #g4 #q10 #t25))
           ((place v4 v14 p8 #g4 #q10 #t25))
           ((pick v4 v14 v15 #g4 #q9 #t23))
           ((place v4 v14 v15 #g4 #q9 #t23))
           ((pick v4 v8 #o2 #g3 #o3 #o4))
           ((place v4 v8 #o2 #g3 #o3 #o4))
           ((pick v4 v8 #p0 #g3 #q12 #t27))
           ((place v4 v8 #p0 #g3 #q12 #t27))
           ((pick v4 v8 p3 #g3 #o3 #o4))
           ((place v4 v8 p3 #g3 #o3 #o4))
           ((pick v4 v8 p6 #g3 #o3 #o4))
           ((place v4 v8 p6 #g3 #o3 #o4))
           ((pick v4 v8 v9 #g3 #q14 #t29))
           ((place v4 v8 v9 #g3 #q14 #t29))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q3', '#t12'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g2', '#q3', '#t5'))
           Action(name='move_base', args=('#q3', '#q8', '#t18'))
           Action(name='place', args=('v4', 'v8', 'p3', '#g2', '#q8', '#t15'))
           Action(name='move_base', args=('#q8', '#q4', '#t21'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g1', '#q4', '#t6'))
           Action(name='move_base', args=('#q4', '#q7', '#t19'))
           Action(name='place', args=('v4', 'v12', 'p4', '#g1', '#q7', '#t14'))
           Action(name='move_base', args=('#q7', '#q0', '#t22'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g0', '#q0', '#t0'))
           Action(name='move_base', args=('#q0', '#q6', '#t13'))
           Action(name='place', args=('v4', 'v14', 'p5', '#g0', '#q6', '#t8'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v14', 'p5', 'v8', 'p3')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The goal is to place all three objects (v8, v12, and v14) on the surface v16. Currently, v8 is at v9 (supported by v11), v12 is at v13 (supported by v11), and v14 is at v15 (supported by v11). The robot is at base configuration v3 and arm configuration v5 (hand empty).
           
           The previous plan failed because placing v14 at p5 collided with v8 at p3. This means we need to find collision-free poses for the objects on v16. We have a set of pre-defined poses p3, p4, p5, p6, p7, p8, and new poses #p0 and #o2. The goal is to place all three objects on v16, and we have multiple supported facts for placing objects on v16 (e.g., `supported(v8, p3, v16)`, `supported(v12, p4, v16)`, `supported(v14, p5, v16)`, etc.). We must be careful about collisions. The new poses starting with '#' will be used to ensure collision-free placements.
           
           Given the available options, a good strategy is to pick up each object and place it on v16 at a collision-free pose. We need to select the correct `kin` and `basemotion` instances that allow the robot to reach the pick and place locations.
           
           For v8, we can pick it from v9 and place it at #p0 on v16.
           For v12, we can pick it from v13 and place it at p4 on v16.
           For v14, we can pick it from v15 and place it at p5 on v16. This was the problematic placement. Let's try placing v14 at #o2 instead.
           
           The selected poses are:
           - v8: #p0 on v16
           - v12: p4 on v16
           - v14: #o2 on v16
           
           Let's break down the plan:
           1. Move to a base configuration to pick v8 from v9.
           2. Pick v8.
           3. Move to a base configuration to place v8 at #p0.
           4. Place v8.
           5. Move to a base configuration to pick v12 from v13.
           6. Pick v12.
           7. Move to a base configuration to place v12 at p4.
           8. Place v12.
           9. Move to a base configuration to pick v14 from v15.
           10. Pick v14.
           11. Move to a base configuration to place v14 at #o2.
           12. Place v14.
           
           We need to pick appropriate base configurations (#q9, #q10, #q11, #q12, #q13, #q14, #o3, v3) and associated trajectories.
           
           Current state: `atbconf(v3)`, `ataconf(v4, v5)`, `handempty(v4)`, `atpose(v8, v9)`, `atpose(v12, v13)`, `atpose(v14, v15)`.
           
           Plan for v8:
           - `v3` to `#q14` (for picking v8 at v9): `move_base v3 #q14 #t31`
           - Pick v8 from v9: `pick v4 v8 v9 #g3 #q14 #t29`
           - `#q14` to `#q12` (for placing v8 at #p0): `move_base #q14 #q12 #t34`
           - Place v8 at #p0: `place v4 v8 #p0 #g3 #q12 #t27`
           
           Plan for v12:
           - `#q12` to `#q13` (for picking v12 at v13): `move_base #q12 #q13 #t33`
           - Pick v12 from v13: `pick v4 v12 v13 #g5 #q13 #t28`
           - `#q13` to `#q11` (for placing v12 at p4): `move_base #q13 #q11 #t32`
           - Place v12 at p4: `place v4 v12 p4 #g5 #q11 #t26`
           
           Plan for v14:
           - `#q11` to `#q9` (for picking v14 at v15): `move_base #q11 #q9 #t30`
           - Pick v14 from v15: `pick v4 v14 v15 #g4 #q9 #t23`
           - `#q9` to `#o3` (for placing v14 at #o2): `move_base #q9 #o3 #o0` (we can use #o3 as a base conf and #o0 as a dummy trajectory)
           - Place v14 at #o2: `place v4 v14 #o2 #g4 #o3 #o4`
           
           --Plan--:
           (move_base v3 #q14 #t31)
           (pick v4 v8 v9 #g3 #q14 #t29)
           (move_base #q14 #q12 #t34)
           (place v4 v8 #p0 #g3 #q12 #t27)
           (move_base #q12 #q13 #t33)
           (pick v4 v12 v13 #g5 #q13 #t28)
           (move_base #q13 #q11 #t32)
           (place v4 v12 p4 #g5 #q11 #t26)
           (move_base #q11 #q9 #t30)
           (pick v4 v14 v15 #g4 #q9 #t23)
           (move_base #q9 #o3 #o0)
           (place v4 v14 #o2 #g4 #o3 #o4)
           
           --Poses--:
           (#p0 v8 v16): (0.0 0.0 0.782 0.0)
           (#o2 v14 v16): (0.08 0.0 0.782 0.0)
           ```

