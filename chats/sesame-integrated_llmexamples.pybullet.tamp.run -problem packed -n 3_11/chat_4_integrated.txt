User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           @sink: object
           @stove: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v15 is a pose with position (-0.23, 0.514, 0.781) and quaternion (0.0, 0.0, 0.941, 0.337).
           Object v13 is a pose with position (0.127, -0.343, 0.781) and quaternion (0.0, 0.0, 1.0, 0.03).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p3 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p4 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object p5 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (-0.132, -0.347, 0.781) and quaternion (0.0, 0.0, 0.634, 0.774).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p3)
           Atom supported(v8, p3, v16)
           Atom kin(v32, v33, p3, v34, v35, v36)
           Atom pose(v12, p4)
           Atom supported(v12, p4, v16)
           Atom kin(v32, v37, p4, v34, v35, v36)
           Atom pose(v14, p5)
           Atom supported(v14, p5, v16)
           Atom kin(v32, v38, p5, v34, v35, v36)
           Atom pose(v8, p6)
           Atom supported(v8, p6, v16)
           Atom kin(v32, v33, p6, v34, v35, v36)
           Atom pose(v12, p7)
           Atom supported(v12, p7, v16)
           Atom kin(v32, v37, p7, v34, v35, v36)
           Atom pose(v14, p8)
           Atom supported(v14, p8, v16)
           Atom kin(v32, v38, p8, v34, v35, v36)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g0)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g1)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g2)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, v15, #g0, #q0, #t0)
           Atom bconf(#q6)
           Atom atraj(#t8)
           Atom kin(v4, v14, p5, #g0, #q6, #t8)
           Atom bconf(#q5)
           Atom atraj(#t7)
           Atom kin(v4, v14, p8, #g0, #q5, #t7)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, p6, #g2, #q2, #t4)
           Atom bconf(#q3)
           Atom atraj(#t5)
           Atom kin(v4, v8, v9, #g2, #q3, #t5)
           Atom bconf(#q8)
           Atom atraj(#t15)
           Atom kin(v4, v8, p3, #g2, #q8, #t15)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, p7, #g1, #q1, #t1)
           Atom bconf(#q7)
           Atom atraj(#t14)
           Atom kin(v4, v12, p4, #g1, #q7, #t14)
           Atom bconf(#q4)
           Atom atraj(#t6)
           Atom kin(v4, v12, v13, #g1, #q4, #t6)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q8, #o0, #q3)
           Atom btraj(#t18)
           Atom basemotion(#q3, #t18, #q8)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(v3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom btraj(#t21)
           Atom basemotion(#q8, #t21, #q4)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom btraj(#t11)
           Atom basemotion(#q6, #t11, #q4)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q3)
           Atom btraj(#t9)
           Atom basemotion(#q6, #t9, #q0)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q6, #o0, #q6)
           Atom btraj(#t10)
           Atom basemotion(#q4, #t10, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom btraj(#t16)
           Atom basemotion(#q3, #t16, #q6)
           Atom btraj(#t13)
           Atom basemotion(#q0, #t13, #q6)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q7, #o0, v3)
           Atom btraj(#t20)
           Atom basemotion(#q7, #t20, #q3)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(v3, #o0, #q7)
           Atom btraj(#t17)
           Atom basemotion(#q3, #t17, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q1, #o0, #q7)
           Atom btraj(#t19)
           Atom basemotion(#q4, #t19, #q7)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q0, #o0, #q7)
           Atom btraj(#t22)
           Atom basemotion(#q7, #t22, #q0)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q7, #o0, #q5)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q6 #t13))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q6 #t16))
           ((move_base #q3 #q7 #t17))
           ((move_base #q3 #q8 #t18))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q6 #t10))
           ((move_base #q4 #q7 #t19))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q4 #t11))
           ((move_base #q6 #q0 #t9))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q3 #t20))
           ((move_base #q7 #q0 #t22))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q4 #t21))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q3 #t12))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p4 #g1 #q7 #t14))
           ((place v4 v12 p4 #g1 #q7 #t14))
           ((pick v4 v12 p7 #g1 #q1 #t1))
           ((place v4 v12 p7 #g1 #q1 #t1))
           ((pick v4 v12 v13 #g1 #q4 #t6))
           ((place v4 v12 v13 #g1 #q4 #t6))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 p5 #g0 #q6 #t8))
           ((place v4 v14 p5 #g0 #q6 #t8))
           ((pick v4 v14 p8 #g0 #q5 #t7))
           ((place v4 v14 p8 #g0 #q5 #t7))
           ((pick v4 v14 v15 #g0 #q0 #t0))
           ((place v4 v14 v15 #g0 #q0 #t0))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 p3 #g2 #q8 #t15))
           ((place v4 v8 p3 #g2 #q8 #t15))
           ((pick v4 v8 p6 #g2 #q2 #t4))
           ((place v4 v8 p6 #g2 #q2 #t4))
           ((pick v4 v8 v9 #g2 #q3 #t5))
           ((place v4 v8 v9 #g2 #q3 #t5))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three graspable objects (v8, v12, v14) currently on a surface v11 (a larger surface). The goal is to move all three objects to be supported on surface v16 (a smaller surface). The robot has two arms, v4 and v6, but only arm v4 seems to have associated kinematic information for the given objects and poses. The initial base configuration is v3.
           
           To achieve the goal, the robot needs to pick up each object from its current location and place it on surface v16. Since there are already poses defined for placing v8, v12, and v14 on v16 (p3, p4, p5, p6, p7, p8), we should utilize these known collision-free poses instead of generating new ones with '#o2'. There are duplicate poses (p3 and p6 for v8, p4 and p7 for v12, p5 and p8 for v14), which simply means there are multiple valid placements. I will select the first available pose for each object on v16.
           
           The plan will be as follows:
           1. Pick v8 from its initial pose v9.
           2. Place v8 on p3.
           3. Pick v12 from its initial pose v13.
           4. Place v12 on p4.
           5. Pick v14 from its initial pose v15.
           6. Place v14 on p5.
           
           For each pick and place action, I'll need to make sure the robot's base is in the correct configuration to execute the action. The `kin` facts provide the `bconf` and `atraj` for each pick/place, so I will ensure the robot moves to that base configuration if it's not already there.
           
           First, let's look at picking v8 from v9 and placing it on p3:
           - Pick v8 from v9 using grasp #g2, bconf #q3, and atraj #t5.
           - Place v8 on p3 using grasp #g2, bconf #q8, and atraj #t15.
           
           Next, picking v12 from v13 and placing it on p4:
           - Pick v12 from v13 using grasp #g1, bconf #q4, and atraj #t6.
           - Place v12 on p4 using grasp #g1, bconf #q7, and atraj #t14.
           
           Finally, picking v14 from v15 and placing it on p5:
           - Pick v14 from v15 using grasp #g0, bconf #q0, and atraj #t0.
           - Place v14 on p5 using grasp #g0, bconf #q6, and atraj #t8.
           
           I'll check the base configurations required and chain the `move_base` actions accordingly.
           
           Initial base config: v3
           1. To pick v8 from v9 (bconf #q3): move_base from v3 to #q3.
           2. Pick v8.
           3. To place v8 on p3 (bconf #q8): move_base from #q3 to #q8.
           4. Place v8.
           5. To pick v12 from v13 (bconf #q4): move_base from #q8 to #q4.
           6. Pick v12.
           7. To place v12 on p4 (bconf #q7): move_base from #q4 to #q7.
           8. Place v12.
           9. To pick v14 from v15 (bconf #q0): move_base from #q7 to #q0.
           10. Pick v14.
           11. To place v14 on p5 (bconf #q6): move_base from #q0 to #q6.
           12. Place v14.
           
           --Plan--:
           (move_base v3 #q3 #t12)
           (pick v4 v8 v9 #g2 #q3 #t5)
           (move_base #q3 #q8 #t18)
           (place v4 v8 p3 #g2 #q8 #t15)
           (move_base #q8 #q4 #t21)
           (pick v4 v12 v13 #g1 #q4 #t6)
           (move_base #q4 #q7 #t19)
           (place v4 v12 p4 #g1 #q7 #t14)
           (move_base #q7 #q0 #t22)
           (pick v4 v14 v15 #g0 #q0 #t0)
           (move_base #q0 #q6 #t13)
           (place v4 v14 p5 #g0 #q6 #t8)

