User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q19: object
           #q2: object
           #q20: object
           #q21: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v12, v16)
           Atom objective(v20)
           Atom rock(v4)
           Atom rock(v8)
           Atom conf(v14, v15)
           Atom rover(v12)
           Atom atconf(v14, v15)
           Atom lander(v9)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom rock(v3)
           Atom objective(v17)
           Atom supports(v10, v11)
           Atom type(v7, v6)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom type(v1, v2)
           Atom type(v4, v2)
           Atom store(v16)
           Atom onboard(v10, v14)
           Atom free(v14, v16)
           Atom objective(v19)
           Atom rock(v7)
           Atom camera(v10)
           Atom rock(v1)
           Atom rover(v14)
           Atom objective(v18)
           Atom rock(v5)
           Atom type(v5, v6)
           Atom onboard(v10, v12)
           Atom mode(v11)
           Atom imagevisible(v12, #q2, #y0, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y0)
           Atom above(v12, #q13, v5)
           Atom conf(v12, #q13)
           Atom imagevisible(v12, #q8, #y4, v18)
           Atom imagerange(v12, #q8, v18)
           Atom conf(v12, #q8)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q10, #y5, v17)
           Atom imagerange(v12, #q10, v17)
           Atom conf(v12, #q10)
           Atom ray(#y5)
           Atom imagevisible(v14, #q16, #y9, v20)
           Atom imagerange(v14, #q16, v20)
           Atom conf(v14, #q16)
           Atom ray(#y9)
           Atom imagevisible(v14, #q14, #y7, v17)
           Atom imagerange(v14, #q14, v17)
           Atom conf(v14, #q14)
           Atom ray(#y7)
           Atom imagevisible(v14, #q15, #y8, v18)
           Atom imagerange(v14, #q15, v18)
           Atom conf(v14, #q15)
           Atom ray(#y8)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom above(v12, #q17, v1)
           Atom conf(v12, #q17)
           Atom above(v14, #q11, v1)
           Atom conf(v14, #q11)
           Atom above(v14, #q7, v3)
           Atom conf(v14, #q7)
           Atom above(v12, #q19, v3)
           Atom conf(v12, #q19)
           Atom above(v12, #q18, v7)
           Atom conf(v12, #q18)
           Atom above(v14, #q4, v7)
           Atom conf(v14, #q4)
           Atom above(v12, #q21, v8)
           Atom conf(v12, #q21)
           Atom above(v14, #q9, v8)
           Atom conf(v14, #q9)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q6, #y3, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y3)
           Atom imagevisible(v14, #q12, #y6, v19)
           Atom imagerange(v14, #q12, v19)
           Atom conf(v14, #q12)
           Atom ray(#y6)
           Atom above(v12, #q20, v4)
           Atom conf(v12, #q20)
           Atom above(v14, #q1, v4)
           Atom conf(v14, #q1)
           Atom comvisible(v14, #q5, #y2, v9)
           Atom comrange(v14, #q5, v9)
           Atom conf(v14, #q5)
           Atom ray(#y2)
           Atom comvisible(v12, #q3, #y1, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q19, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q19)
           Atom motion(v12, #q19, #o2, v13)
           Atom motion(v12, #q19, #o2, #q19)
           Atom motion(v12, v13, #o2, #q19)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #t8, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v12, #q20, #o2, #q19)
           Atom motion(v12, v13, #t35, #q20)
           Atom motion(v12, #q20, #o2, #q20)
           Atom motion(v12, #q20, #o2, #q8)
           Atom motion(v12, #q19, #o2, #q20)
           Atom motion(v12, #q8, #o2, #q20)
           Atom motion(v12, #q20, #o2, v13)
           Atom motion(v12, #q8, #t42, #q6)
           Atom motion(v12, #q19, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q20, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q19)
           Atom motion(v12, #q6, #o2, #q20)
           Atom motion(v12, v13, #t7, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q19)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q6, #t45, #q2)
           Atom motion(v12, #q20, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q20)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q19, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, v13, #t6, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q21, #o2, #q19)
           Atom motion(v12, #q21, #o2, #q8)
           Atom motion(v12, #q21, #o2, #q21)
           Atom motion(v12, #q2, #o2, #q21)
           Atom motion(v12, #q21, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q21)
           Atom motion(v12, v13, #o2, #q21)
           Atom motion(v12, #q21, #o2, v13)
           Atom motion(v12, #q8, #o2, #q21)
           Atom motion(v12, #q19, #o2, #q21)
           Atom motion(v12, #q21, #o2, #q20)
           Atom motion(v12, #q21, #o2, #q2)
           Atom motion(v12, #q20, #t38, #q21)
           Atom motion(v14, #q11, #t46, #q5)
           Atom motion(v14, v15, #t44, #q11)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v12, v13, #o2, #q18)
           Atom motion(v12, #q20, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q19)
           Atom motion(v12, #q18, #o2, #q20)
           Atom motion(v12, #q18, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q21)
           Atom motion(v12, #q18, #o2, v13)
           Atom motion(v12, #q2, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q2)
           Atom motion(v12, #q18, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q8)
           Atom motion(v12, #q21, #o2, #q18)
           Atom motion(v12, #q6, #o2, #q18)
           Atom motion(v12, #q19, #o2, #q18)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q20)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q19, #o2, #q13)
           Atom motion(v12, #q21, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q19)
           Atom motion(v12, #q13, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q20, #t36, #q13)
           Atom motion(v12, #q13, #o2, #q21)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, v13, #t17, #q13)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #t12, #q5)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q5, #t2, #q0)
           Atom motion(v14, #q0, #t9, #q5)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, v15, #t0, #q0)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v12, #q17, #o2, #q6)
           Atom motion(v12, #q19, #o2, #q17)
           Atom motion(v12, #q8, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q21)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q18)
           Atom motion(v12, #q17, #o2, #q13)
           Atom motion(v12, #q17, #o2, #q2)
           Atom motion(v12, v13, #o2, #q17)
           Atom motion(v12, #q2, #o2, #q17)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, #q18, #o2, #q17)
           Atom motion(v12, #q13, #o2, #q17)
           Atom motion(v12, #q20, #o2, #q17)
           Atom motion(v12, #q21, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q19)
           Atom motion(v12, #q17, #o2, #q20)
           Atom motion(v12, #q17, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q17)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q0)
           Atom motion(v14, #q12, #t18, #q5)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, v15, #t14, #q12)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q5, #t29, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q15, #o2, #q0)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, v15, #t16, #q15)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q0, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q15, #t20, #q5)
           Atom motion(v14, #q5, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q11)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q4, #t11, #q5)
           Atom motion(v14, #q15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q5, #t4, #q4)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #t13, #q5)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v14, #q14, #t19, #q5)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q0, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q5, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, v15, #t15, #q14)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q0, #o2, #q16)
           Atom motion(v14, #q4, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q16, #o2, #q4)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q0)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q5, #o2, #q16)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q5, #t3, #q1)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q1)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t10, #q5)
           Atom motion(v12, #q8, #t33, #q3)
           Atom motion(v12, #q3, #o2, #q21)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #t24, #q19)
           Atom motion(v12, #q3, #t22, #q2)
           Atom motion(v12, #q2, #t1, #q3)
           Atom motion(v12, #q6, #t31, #q3)
           Atom motion(v12, #q3, #t5, v13)
           Atom motion(v12, #q3, #t39, #q20)
           Atom motion(v12, #q3, #t40, #q13)
           Atom motion(v12, #q19, #t28, #q3)
           Atom motion(v12, #q20, #t41, #q3)
           Atom motion(v12, #q3, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q3)
           Atom motion(v12, #q18, #t27, #q3)
           Atom motion(v12, #q13, #t21, #q3)
           Atom motion(v12, #q3, #t32, #q8)
           Atom motion(v12, #q21, #t37, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #t30, #q6)
           Atom motion(v12, #q3, #t23, #q18)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q10, #t26, #q3)
           Atom motion(v12, #q17, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q20)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q21)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q17)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #t25, #q10)
           Atom motion(v12, #q10, #t43, #q8)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q21, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q18)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q20, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q19)
           Atom motion(v12, #q3, #t34, #q10)
           Atom motion(v12, #q18, #o2, #q10)
           Atom motion(v12, #q19, #o2, #q10)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q13 v5 v16))
           ((sample_rock v12 #q17 v1 v16))
           ((sample_rock v12 #q18 v7 v16))
           ((sample_rock v12 #q19 v3 v16))
           ((sample_rock v12 #q20 v4 v16))
           ((sample_rock v12 #q21 v8 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((sample_rock v14 #q1 v4 v16))
           ((sample_rock v14 #q11 v1 v16))
           ((sample_rock v14 #q4 v7 v16))
           ((sample_rock v14 #q7 v3 v16))
           ((sample_rock v14 #q9 v8 v16))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q17))
           ((move v12 #q10 #o2 #q18))
           ((move v12 #q10 #o2 #q19))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q20))
           ((move v12 #q10 #o2 #q21))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t26 #q3))
           ((move v12 #q10 #t43 #q8))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q17))
           ((move v12 #q13 #o2 #q18))
           ((move v12 #q13 #o2 #q19))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q20))
           ((move v12 #q13 #o2 #q21))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t21 #q3))
           ((move v12 #q17 #o2 #q10))
           ((move v12 #q17 #o2 #q13))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q18))
           ((move v12 #q17 #o2 #q19))
           ((move v12 #q17 #o2 #q2))
           ((move v12 #q17 #o2 #q20))
           ((move v12 #q17 #o2 #q21))
           ((move v12 #q17 #o2 #q3))
           ((move v12 #q17 #o2 #q6))
           ((move v12 #q17 #o2 #q8))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q18 #o2 #q10))
           ((move v12 #q18 #o2 #q13))
           ((move v12 #q18 #o2 #q17))
           ((move v12 #q18 #o2 #q18))
           ((move v12 #q18 #o2 #q19))
           ((move v12 #q18 #o2 #q2))
           ((move v12 #q18 #o2 #q20))
           ((move v12 #q18 #o2 #q21))
           ((move v12 #q18 #o2 #q6))
           ((move v12 #q18 #o2 #q8))
           ((move v12 #q18 #o2 v13))
           ((move v12 #q18 #t27 #q3))
           ((move v12 #q19 #o2 #q10))
           ((move v12 #q19 #o2 #q13))
           ((move v12 #q19 #o2 #q17))
           ((move v12 #q19 #o2 #q18))
           ((move v12 #q19 #o2 #q19))
           ((move v12 #q19 #o2 #q2))
           ((move v12 #q19 #o2 #q20))
           ((move v12 #q19 #o2 #q21))
           ((move v12 #q19 #o2 #q6))
           ((move v12 #q19 #o2 #q8))
           ((move v12 #q19 #o2 v13))
           ((move v12 #q19 #t28 #q3))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q17))
           ((move v12 #q2 #o2 #q18))
           ((move v12 #q2 #o2 #q19))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q20))
           ((move v12 #q2 #o2 #q21))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t1 #q3))
           ((move v12 #q20 #o2 #q10))
           ((move v12 #q20 #o2 #q17))
           ((move v12 #q20 #o2 #q18))
           ((move v12 #q20 #o2 #q19))
           ((move v12 #q20 #o2 #q2))
           ((move v12 #q20 #o2 #q20))
           ((move v12 #q20 #o2 #q6))
           ((move v12 #q20 #o2 #q8))
           ((move v12 #q20 #o2 v13))
           ((move v12 #q20 #t36 #q13))
           ((move v12 #q20 #t38 #q21))
           ((move v12 #q20 #t41 #q3))
           ((move v12 #q21 #o2 #q10))
           ((move v12 #q21 #o2 #q13))
           ((move v12 #q21 #o2 #q17))
           ((move v12 #q21 #o2 #q18))
           ((move v12 #q21 #o2 #q19))
           ((move v12 #q21 #o2 #q2))
           ((move v12 #q21 #o2 #q20))
           ((move v12 #q21 #o2 #q21))
           ((move v12 #q21 #o2 #q6))
           ((move v12 #q21 #o2 #q8))
           ((move v12 #q21 #o2 v13))
           ((move v12 #q21 #t37 #q3))
           ((move v12 #q3 #o2 #q17))
           ((move v12 #q3 #o2 #q21))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #t22 #q2))
           ((move v12 #q3 #t23 #q18))
           ((move v12 #q3 #t24 #q19))
           ((move v12 #q3 #t30 #q6))
           ((move v12 #q3 #t32 #q8))
           ((move v12 #q3 #t34 #q10))
           ((move v12 #q3 #t39 #q20))
           ((move v12 #q3 #t40 #q13))
           ((move v12 #q3 #t5 v13))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q17))
           ((move v12 #q6 #o2 #q18))
           ((move v12 #q6 #o2 #q19))
           ((move v12 #q6 #o2 #q20))
           ((move v12 #q6 #o2 #q21))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t31 #q3))
           ((move v12 #q6 #t45 #q2))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q17))
           ((move v12 #q8 #o2 #q18))
           ((move v12 #q8 #o2 #q19))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q20))
           ((move v12 #q8 #o2 #q21))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t33 #q3))
           ((move v12 #q8 #t42 #q6))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q18))
           ((move v12 v13 #o2 #q19))
           ((move v12 v13 #o2 #q21))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q13))
           ((move v12 v13 #t25 #q10))
           ((move v12 v13 #t35 #q20))
           ((move v12 v13 #t6 #q2))
           ((move v12 v13 #t7 #q6))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #o2 #q15))
           ((move v14 #q0 #o2 #q16))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t9 #q5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t10 #q5))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q4))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t46 #q5))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t18 #q5))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t19 #q5))
           ((move v14 #q15 #o2 #q0))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t20 #q5))
           ((move v14 #q16 #o2 #q0))
           ((move v14 #q16 #o2 #q1))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q4))
           ((move v14 #q16 #o2 #q5))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q16))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t11 #q5))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q16))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #t2 #q0))
           ((move v14 #q5 #t29 #q12))
           ((move v14 #q5 #t3 #q1))
           ((move v14 #q5 #t4 #q4))
           ((move v14 #q5 #t8 v15))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t12 #q5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t13 #q5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((move v14 v15 #t14 #q12))
           ((move v14 v15 #t15 #q14))
           ((move v14 v15 #t16 #q15))
           ((move v14 v15 #t44 #q11))
           ((calibrate v12 #q10 #y5 v17 v10))
           ((calibrate v12 #q2 #y0 v20 v10))
           ((calibrate v12 #q6 #y3 v19 v10))
           ((calibrate v12 #q8 #y4 v18 v10))
           ((calibrate v14 #q12 #y6 v19 v10))
           ((calibrate v14 #q14 #y7 v17 v10))
           ((calibrate v14 #q15 #y8 v18 v10))
           ((calibrate v14 #q16 #y9 v20 v10))
           ((take_image v12 #q10 #y5 v17 v10 v11))
           ((take_image v12 #q2 #y0 v20 v10 v11))
           ((take_image v12 #q6 #y3 v19 v10 v11))
           ((take_image v12 #q8 #y4 v18 v10 v11))
           ((take_image v14 #q12 #y6 v19 v10 v11))
           ((take_image v14 #q14 #y7 v17 v10 v11))
           ((take_image v14 #q15 #y8 v18 v10 v11))
           ((take_image v14 #q16 #y9 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y1 v9 v5))
           ((send_analysis v12 #q3 #y1 v9 v1))
           ((send_analysis v12 #q3 #y1 v9 v7))
           ((send_analysis v12 #q3 #y1 v9 v3))
           ((send_analysis v12 #q3 #y1 v9 v4))
           ((send_analysis v12 #q3 #y1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q5 #y2 v9 v5))
           ((send_analysis v14 #q5 #y2 v9 v4))
           ((send_analysis v14 #q5 #y2 v9 v1))
           ((send_analysis v14 #q5 #y2 v9 v7))
           ((send_analysis v14 #q5 #y2 v9 v3))
           ((send_analysis v14 #q5 #y2 v9 v8))
           ((send_image v12 #q3 #y1 v9 v17 v11))
           ((send_image v12 #q3 #y1 v9 v20 v11))
           ((send_image v12 #q3 #y1 v9 v19 v11))
           ((send_image v12 #q3 #y1 v9 v18 v11))
           ((send_image v14 #q5 #y2 v9 v19 v11))
           ((send_image v14 #q5 #y2 v9 v17 v11))
           ((send_image v14 #q5 #y2 v9 v18 v11))
           ((send_image v14 #q5 #y2 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, each with a camera `v10` that supports mode `v11`. There are various objectives (`v17`, `v18`, `v19`, `v20`) and several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) of different types (`v2`, `v6`). Both rovers have a store `v16` and it is initially free. A lander `v9` is present for communication. The goal `new-axiom@0()` essentially requires that both rovers `v12` and `v14` are at some configuration, that their stores `v16` are free, that all objectives (`v17`, `v18`, `v19`, `v20`) have their images received, and that all rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) have their analysis received.
           
           Since the initial state already satisfies `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)`, the remaining tasks are to receive images for all objectives and receive analyses for all rocks.
           
           We can divide the tasks between the two rovers to achieve the goal efficiently.
           
           For rover `v12`:
           1. Calibrate its camera for all visible objectives and take images.
           2. Send the images to the lander.
           3. Sample all visible rocks.
           4. Send the rock analyses to the lander.
           
           For rover `v14`:
           1. Calibrate its camera for all visible objectives and take images.
           2. Send the images to the lander.
           3. Sample all visible rocks.
           4. Send the rock analyses to the lander.
           
           Both rovers can collect data concurrently as their actions don't interfere with each other for different objectives/rocks or the same ones. The plan will prioritize sampling and imaging from their current positions, then moving to new positions if needed to complete the tasks.
           
           Let's break down the plan for each rover, considering the available `imagevisible`, `above`, and `comvisible` predicates.
           
           **Rover v12 initial position v13:**
           * Objectives: `v20` (at `q2`), `v18` (at `q8`), `v17` (at `q10`), `v19` (at `q6`).
           * Rocks: `v5` (at `q13`), `v1` (at `q17`), `v7` (at `q18`), `v3` (at `q19`), `v4` (at `q20`), `v8` (at `q21`).
           * Communication: with lander `v9` (at `q3`).
           
           **Rover v14 initial position v15:**
           * Objectives: `v20` (at `q16`), `v17` (at `q14`), `v18` (at `q15`), `v19` (at `q12`).
           * Rocks: `v5` (at `q0`), `v1` (at `q11`), `v3` (at `q7`), `v7` (at `q4`), `v8` (at `q9`), `v4` (at `q1`).
           * Communication: with lander `v9` (at `q5`).
           
           The goal requires `receivedimage` for `v17, v18, v19, v20` and `receivedanalysis` for `v1, v3, v4, v5, v7, v8`.
           
           Let's prioritize getting images and analyses from the initial positions, then move if necessary. Since some actions are tied to specific configurations (e.g., `imagevisible(v12, #q2, #y0, v20)` means rover v12 has to be at #q2 to image v20), the rover will need to move to these configurations.
           
           The `new-axiom@0()` goal specifies:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `receivedanalysis(?stone)` where `type(?stone, v2)`
           - `receivedanalysis(?soil)` where `type(?soil, v6)`
           
           From the initial state:
           `type(v3, v2)` (rock v3 is stone)
           `type(v1, v2)` (rock v1 is stone)
           `type(v4, v2)` (rock v4 is stone)
           `type(v7, v6)` (rock v7 is soil)
           `type(v8, v6)` (rock v8 is soil)
           `type(v5, v6)` (rock v5 is soil)
           
           So, we need `receivedanalysis` for `v1, v3, v4, v5, v7, v8`.
           
           Let's make a plan.
           
           **Rover v12 will cover:**
           * Images: v20, v18, v17, v19
           * Analysis: v5, v1, v7, v3, v4, v8 (all of them since v12 has above for all of them from initial position or nearby)
           
           **Rover v14 will cover:**
           * Images: v20, v17, v18, v19 (overlaps with v12 but no harm in redundancy, or can be optimized)
           * Analysis: v5, v1, v3, v7, v8, v4 (overlaps with v12 but no harm in redundancy)
           
           Let's use v12 for most of the image and analysis collection, and v14 for communicating. The rovers are initially at `v13` and `v15` respectively. The final goal requires them to be at `v13` and `v15`, and their stores to be free. Sampling will fill a store, so we'll need to drop rocks if rover's store fills up and we need to sample more. Since there's only one store `v16` per rover, each rover can only hold one sample at a time. The current state has both stores free.
           
           Let's plan for `v12` to take all images and sample all rocks. Then `v12` sends all data.
           
           Sequence for `v12`:
           1. Move to `q2`, calibrate, take image of `v20`.
           2. Move to `q8`, calibrate, take image of `v18`.
           3. Move to `q10`, calibrate, take image of `v17`.
           4. Move to `q6`, calibrate, take image of `v19`.
           5. Move to `q13`, sample `v5`.
           6. Move to `q17`, drop rock (since `v16` will be full), sample `v1`.
           7. Move to `q18`, drop rock, sample `v7`.
           8. Move to `q19`, drop rock, sample `v3`.
           9. Move to `q20`, drop rock, sample `v4`.
           10. Move to `q21`, drop rock, sample `v8`.
           11. Move to `q3`, send all images, send all analyses (the last sampled rock `v8` is still in the store). After sending analysis for `v8`, the store will still be full. The axiom needs all `receivedanalysis`, not for the store to be empty. However, the axiom also states free stores, so it has to be emptied. Thus, after sending analysis for the last sampled rock, we must drop it.
           
           Since the goal implies `receivedanalysis` for each rock type, `v2` (stone) and `v6` (soil), we need to sample at least one rock of type `v2` and one of type `v6`. Then send analysis for these. Sampling all rocks is safer to ensure all required types are covered.
           
           Let's ensure the `free(v12, v16)` and `free(v14, v16)` are true at the end. After sampling a rock and sending its analysis, the rock is still in the store. We need to drop it.
           
           Revised plan for `v12`:
           1. Calibrate, take image, send image for v20.
           2. Calibrate, take image, send image for v18.
           3. Calibrate, take image, send image for v17.
           4. Calibrate, take image, send image for v19.
           5. Sample rock v5, send analysis for v5, drop rock v5.
           6. Sample rock v1, send analysis for v1, drop rock v1.
           7. Sample rock v7, send analysis for v7, drop rock v7.
           8. Sample rock v3, send analysis for v3, drop rock v3.
           9. Sample rock v4, send analysis for v4, drop rock v4.
           10. Sample rock v8, send analysis for v8, drop rock v8.
           
           This will be very repetitive. Let's optimize. Rover `v12` can collect all images, then rover `v14` can send all images (since `v10` is onboard both rovers, and `haveimage` is not cleared by `send_image`). Similarly, one rover can sample all rocks, then another can send analyses (if analyses are not cleared). `analyzed` predicate is not cleared.
           
           Since `v12` is already at `v13`, and `atconf(v12, v13)` is part of the final state, we should end `v12`'s actions there. Rover `v14` is similar with `v15`.
           
           **Let's have v12 do all image collection and sampling, then send all images and analyses.**
           Since `v12` needs to visit various `q` configurations to image and sample, it won't be at `v13` throughout. It must return to `v13` at the end. Similarly, `v14` needs to stay at `v15`.
           
           Let's assume the continuous parameters are found, and focus on the action sequence.
           
           Plan using Rover `v12` for all image collection and rock sampling, and Rover `v12` for all sending.
           
           **For Rover v12:**
           Initial position: `v13`
           Goal position: `v13`
           All objectives: `v17, v18, v19, v20`
           All rocks: `v1, v3, v4, v5, v7, v8`
           
           1.  **Image v20:**
               *   (move v12 v13 #t6 #q2)
               *   (calibrate v12 #q2 #y0 v20 v10)
               *   (take_image v12 #q2 #y0 v20 v10 v11)
           2.  **Image v18:**
               *   (move v12 #q2 #o2 #q8) (Moving from q2 to q8, as there's motion v12 #q2 #o2 #q8)
               *   (calibrate v12 #q8 #y4 v18 v10)
               *   (take_image v12 #q8 #y4 v18 v10 v11)
           3.  **Image v17:**
               *   (move v12 #q8 #o2 #q10)
               *   (calibrate v12 #q10 #y5 v17 v10)
               *   (take_image v12 #q10 #y5 v17 v10 v11)
           4.  **Image v19:**
               *   (move v12 #q10 #o2 #q6)
               *   (calibrate v12 #q6 #y3 v19 v10)
               *   (take_image v12 #q6 #y3 v19 v10 v11)
           5.  **Sample v5:**
               *   (move v12 #q6 #o2 #q13)
               *   (sample_rock v12 #q13 v5 v16)
               *   (drop_rock v12 v16) (To free store for next sample)
           6.  **Sample v1:**
               *   (move v12 #q13 #o2 #q17)
               *   (sample_rock v12 #q17 v1 v16)
               *   (drop_rock v12 v16)
           7.  **Sample v7:**
               *   (move v12 #q17 #o2 #q18)
               *   (sample_rock v12 #q18 v7 v16)
               *   (drop_rock v12 v16)
           8.  **Sample v3:**
               *   (move v12 #q18 #o2 #q19)
               *   (sample_rock v12 #q19 v3 v16)
               *   (drop_rock v12 v16)
           9.  **Sample v4:**
               *   (move v12 #q19 #o2 #q20)
               *   (sample_rock v12 #q20 v4 v16)
               *   (drop_rock v12 v16)
           10. **Sample v8:**
               *   (move v12 #q20 #o2 #q21)
               *   (sample_rock v12 #q21 v8 v16)
               *   (drop_rock v12 v16)
           
           Now, all images are taken and all rocks are analyzed (by sampling). The store for `v12` is free. Now `v12` needs to send all data from a `comvisible` location. `q3` is a `comvisible` location for `v12`.
           
           11. **Send data:**
               *   (move v12 #q21 #o2 #q3)
               *   (send_image v12 #q3 #y1 v9 v17 v11)
               *   (send_image v12 #q3 #y1 v9 v18 v11)
               *   (send_image v12 #q3 #y1 v9 v19 v11)
               *   (send_image v12 #q3 #y1 v9 v20 v11)
               *   (send_analysis v12 #q3 #y1 v9 v1)
               *   (send_analysis v12 #q3 #y1 v9 v3)
               *   (send_analysis v12 #q3 #y1 v9 v4)
               *   (send_analysis v12 #q3 #y1 v9 v5)
               *   (send_analysis v12 #q3 #y1 v9 v7)
               *   (send_analysis v12 #q3 #y1 v9 v8)
               *   (move v12 #q3 #t5 v13) (Return to initial position)
           
           Now all conditions for the `new-axiom@0()` regarding received images and analyses are met, and `v12` is back at `v13` with `v16` free. Rover `v14` is still at `v15` with `v16` free. This achieves the goal.
           
           There are many intermediate moves for `v12`. I need to be careful with the exact path and available motions.
           Let's try to trace the `move` actions for v12.
           
           Initial: `atconf(v12, v13)`
           1. Move to `q2` for `v20`: `(move v12 v13 #t6 #q2)`
           2. Move to `q8` for `v18`: `(move v12 #q2 #o2 #q8)`
           3. Move to `q10` for `v17`: `(move v12 #q8 #o2 #q10)`
           4. Move to `q6` for `v19`: `(move v12 #q10 #o2 #q6)`
           5. Move to `q13` for `v5`: `(move v12 #q6 #o2 #q13)`
           6. Move to `q17` for `v1`: `(move v12 #q13 #o2 #q17)`
           7. Move to `q18` for `v7`: `(move v12 #q17 #o2 #q18)`
           8. Move to `q19` for `v3`: `(move v12 #q18 #o2 #q19)`
           9. Move to `q20` for `v4`: `(move v12 #q19 #o2 #q20)`
           10. Move to `q21` for `v8`: `(move v12 #q20 #o2 #q21)`
           11. Move to `q3` for communication: `(move v12 #q21 #o2 #q3)`
           12. Move back to `v13`: `(move v12 #q3 #t5 v13)`
           
           All these move actions are available.
           
           Final check on the goal:
           `atconf(v12, v13)`: Achieved by last move.
           `atconf(v14, v15)`: `v14` remains at `v15`.
           `free(v12, v16)`: Each sample is followed by a drop.
           `free(v14, v16)`: `v14` does not sample.
           `receivedimage` for all objectives: Achieved by `send_image`.
           `receivedanalysis` for all rocks: Achieved by `send_analysis`.
           
           Looks good.
           
           --Plan--:
           (move v12 v13 #t6 #q2)
           (calibrate v12 #q2 #y0 v20 v10)
           (take_image v12 #q2 #y0 v20 v10 v11)
           (move v12 #q2 #o2 #q8)
           (calibrate v12 #q8 #y4 v18 v10)
           (take_image v12 #q8 #y4 v18 v10 v11)
           (move v12 #q8 #o2 #q10)
           (calibrate v12 #q10 #y5 v17 v10)
           (take_image v12 #q10 #y5 v17 v10 v11)
           (move v12 #q10 #o2 #q6)
           (calibrate v12 #q6 #y3 v19 v10)
           (take_image v12 #q6 #y3 v19 v10 v11)
           (move v12 #q6 #o2 #q13)
           (sample_rock v12 #q13 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q13 #o2 #q17)
           (sample_rock v12 #q17 v1 v16)
           (drop_rock v12 v16)
           (move v12 #q17 #o2 #q18)
           (sample_rock v12 #q18 v7 v16)
           (drop_rock v12 v16)
           (move v12 #q18 #o2 #q19)
           (sample_rock v12 #q19 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q19 #o2 #q20)
           (sample_rock v12 #q20 v4 v16)
           (drop_rock v12 v16)
           (move v12 #q20 #o2 #q21)
           (sample_rock v12 #q21 v8 v16)
           (drop_rock v12 v16)
           (move v12 #q21 #o2 #q3)
           (send_image v12 #q3 #y1 v9 v17 v11)
           (send_image v12 #q3 #y1 v9 v18 v11)
           (send_image v12 #q3 #y1 v9 v19 v11)
           (send_image v12 #q3 #y1 v9 v20 v11)
           (send_analysis v12 #q3 #y1 v9 v1)
           (send_analysis v12 #q3 #y1 v9 v3)
           (send_analysis v12 #q3 #y1 v9 v4)
           (send_analysis v12 #q3 #y1 v9 v5)
           (send_analysis v12 #q3 #y1 v9 v7)
           (send_analysis v12 #q3 #y1 v9 v8)
           (move v12 #q3 #t5 v13)

User:      The plan you provided contains the following invalid actions: `(move v12 #q20 #o2 #q21), (move v12 #q21 #o2 #q3)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #q13 v5 v16))
           ((sample_rock v12 #q17 v1 v16))
           ((sample_rock v12 #q18 v7 v16))
           ((sample_rock v12 #q19 v3 v16))
           ((sample_rock v12 #q20 v4 v16))
           ((sample_rock v12 #q21 v8 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((sample_rock v14 #q1 v4 v16))
           ((sample_rock v14 #q11 v1 v16))
           ((sample_rock v14 #q4 v7 v16))
           ((sample_rock v14 #q7 v3 v16))
           ((sample_rock v14 #q9 v8 v16))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q17))
           ((move v12 #q10 #o2 #q18))
           ((move v12 #q10 #o2 #q19))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q20))
           ((move v12 #q10 #o2 #q21))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t26 #q3))
           ((move v12 #q10 #t43 #q8))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q17))
           ((move v12 #q13 #o2 #q18))
           ((move v12 #q13 #o2 #q19))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q20))
           ((move v12 #q13 #o2 #q21))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t21 #q3))
           ((move v12 #q17 #o2 #q10))
           ((move v12 #q17 #o2 #q13))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q18))
           ((move v12 #q17 #o2 #q19))
           ((move v12 #q17 #o2 #q2))
           ((move v12 #q17 #o2 #q20))
           ((move v12 #q17 #o2 #q21))
           ((move v12 #q17 #o2 #q3))
           ((move v12 #q17 #o2 #q6))
           ((move v12 #q17 #o2 #q8))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q18 #o2 #q10))
           ((move v12 #q18 #o2 #q13))
           ((move v12 #q18 #o2 #q17))
           ((move v12 #q18 #o2 #q18))
           ((move v12 #q18 #o2 #q19))
           ((move v12 #q18 #o2 #q2))
           ((move v12 #q18 #o2 #q20))
           ((move v12 #q18 #o2 #q21))
           ((move v12 #q18 #o2 #q6))
           ((move v12 #q18 #o2 #q8))
           ((move v12 #q18 #o2 v13))
           ((move v12 #q18 #t27 #q3))
           ((move v12 #q19 #o2 #q10))
           ((move v12 #q19 #o2 #q13))
           ((move v12 #q19 #o2 #q17))
           ((move v12 #q19 #o2 #q18))
           ((move v12 #q19 #o2 #q19))
           ((move v12 #q19 #o2 #q2))
           ((move v12 #q19 #o2 #q20))
           ((move v12 #q19 #o2 #q21))
           ((move v12 #q19 #o2 #q6))
           ((move v12 #q19 #o2 #q8))
           ((move v12 #q19 #o2 v13))
           ((move v12 #q19 #t28 #q3))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q17))
           ((move v12 #q2 #o2 #q18))
           ((move v12 #q2 #o2 #q19))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q20))
           ((move v12 #q2 #o2 #q21))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t1 #q3))
           ((move v12 #q20 #o2 #q10))
           ((move v12 #q20 #o2 #q17))
           ((move v12 #q20 #o2 #q18))
           ((move v12 #q20 #o2 #q19))
           ((move v12 #q20 #o2 #q2))
           ((move v12 #q20 #o2 #q20))
           ((move v12 #q20 #o2 #q6))
           ((move v12 #q20 #o2 #q8))
           ((move v12 #q20 #o2 v13))
           ((move v12 #q20 #t36 #q13))
           ((move v12 #q20 #t38 #q21))
           ((move v12 #q20 #t41 #q3))
           ((move v12 #q21 #o2 #q10))
           ((move v12 #q21 #o2 #q13))
           ((move v12 #q21 #o2 #q17))
           ((move v12 #q21 #o2 #q18))
           ((move v12 #q21 #o2 #q19))
           ((move v12 #q21 #o2 #q2))
           ((move v12 #q21 #o2 #q20))
           ((move v12 #q21 #o2 #q21))
           ((move v12 #q21 #o2 #q6))
           ((move v12 #q21 #o2 #q8))
           ((move v12 #q21 #o2 v13))
           ((move v12 #q21 #t37 #q3))
           ((move v12 #q3 #o2 #q17))
           ((move v12 #q3 #o2 #q21))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #t22 #q2))
           ((move v12 #q3 #t23 #q18))
           ((move v12 #q3 #t24 #q19))
           ((move v12 #q3 #t30 #q6))
           ((move v12 #q3 #t32 #q8))
           ((move v12 #q3 #t34 #q10))
           ((move v12 #q3 #t39 #q20))
           ((move v12 #q3 #t40 #q13))
           ((move v12 #q3 #t5 v13))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q17))
           ((move v12 #q6 #o2 #q18))
           ((move v12 #q6 #o2 #q19))
           ((move v12 #q6 #o2 #q20))
           ((move v12 #q6 #o2 #q21))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t31 #q3))
           ((move v12 #q6 #t45 #q2))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q17))
           ((move v12 #q8 #o2 #q18))
           ((move v12 #q8 #o2 #q19))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q20))
           ((move v12 #q8 #o2 #q21))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t33 #q3))
           ((move v12 #q8 #t42 #q6))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q18))
           ((move v12 v13 #o2 #q19))
           ((move v12 v13 #o2 #q21))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q13))
           ((move v12 v13 #t25 #q10))
           ((move v12 v13 #t35 #q20))
           ((move v12 v13 #t6 #q2))
           ((move v12 v13 #t7 #q6))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #o2 #q15))
           ((move v14 #q0 #o2 #q16))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t9 #q5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t10 #q5))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q4))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t46 #q5))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t18 #q5))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t19 #q5))
           ((move v14 #q15 #o2 #q0))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t20 #q5))
           ((move v14 #q16 #o2 #q0))
           ((move v14 #q16 #o2 #q1))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q4))
           ((move v14 #q16 #o2 #q5))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q16))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t11 #q5))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q16))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #t2 #q0))
           ((move v14 #q5 #t29 #q12))
           ((move v14 #q5 #t3 #q1))
           ((move v14 #q5 #t4 #q4))
           ((move v14 #q5 #t8 v15))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t12 #q5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t13 #q5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((move v14 v15 #t14 #q12))
           ((move v14 v15 #t15 #q14))
           ((move v14 v15 #t16 #q15))
           ((move v14 v15 #t44 #q11))
           ((calibrate v12 #q10 #y5 v17 v10))
           ((calibrate v12 #q2 #y0 v20 v10))
           ((calibrate v12 #q6 #y3 v19 v10))
           ((calibrate v12 #q8 #y4 v18 v10))
           ((calibrate v14 #q12 #y6 v19 v10))
           ((calibrate v14 #q14 #y7 v17 v10))
           ((calibrate v14 #q15 #y8 v18 v10))
           ((calibrate v14 #q16 #y9 v20 v10))
           ((take_image v12 #q10 #y5 v17 v10 v11))
           ((take_image v12 #q2 #y0 v20 v10 v11))
           ((take_image v12 #q6 #y3 v19 v10 v11))
           ((take_image v12 #q8 #y4 v18 v10 v11))
           ((take_image v14 #q12 #y6 v19 v10 v11))
           ((take_image v14 #q14 #y7 v17 v10 v11))
           ((take_image v14 #q15 #y8 v18 v10 v11))
           ((take_image v14 #q16 #y9 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y1 v9 v5))
           ((send_analysis v12 #q3 #y1 v9 v1))
           ((send_analysis v12 #q3 #y1 v9 v7))
           ((send_analysis v12 #q3 #y1 v9 v3))
           ((send_analysis v12 #q3 #y1 v9 v4))
           ((send_analysis v12 #q3 #y1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q5 #y2 v9 v5))
           ((send_analysis v14 #q5 #y2 v9 v4))
           ((send_analysis v14 #q5 #y2 v9 v1))
           ((send_analysis v14 #q5 #y2 v9 v7))
           ((send_analysis v14 #q5 #y2 v9 v3))
           ((send_analysis v14 #q5 #y2 v9 v8))
           ((send_image v12 #q3 #y1 v9 v17 v11))
           ((send_image v12 #q3 #y1 v9 v20 v11))
           ((send_image v12 #q3 #y1 v9 v19 v11))
           ((send_image v12 #q3 #y1 v9 v18 v11))
           ((send_image v14 #q5 #y2 v9 v19 v11))
           ((send_image v14 #q5 #y2 v9 v17 v11))
           ((send_image v14 #q5 #y2 v9 v18 v11))
           ((send_image v14 #q5 #y2 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     My apologies for the invalid actions in the previous plan. I will carefully re-evaluate the available `move` actions to ensure all steps are valid.
           
           Let's re-examine the available `move` actions for `v12` to construct a valid path that allows it to image, sample, send data, and return to `v13`.
           
           The problematic moves were:
           1. `(move v12 #q20 #o2 #q21)` - This action is not in the list. However, there is `(move v12 #q20 #t38 #q21)`.
           2. `(move v12 #q21 #o2 #q3)` - This action is not in the list. However, there is `(move v12 #q21 #t37 #q3)`.
           
           I will correct these and ensure all other `move` actions are present in the provided list.
           
           Revised plan for `v12`:
           Initial position: `v13`
           Goal position: `v13`
           All objectives: `v17, v18, v19, v20`
           All rocks: `v1, v3, v4, v5, v7, v8`
           
           1.  **Image v20:**
               *   (move v12 v13 #t6 #q2) - Valid
               *   (calibrate v12 #q2 #y0 v20 v10)
               *   (take_image v12 #q2 #y0 v20 v10 v11)
           2.  **Image v18:**
               *   (move v12 #q2 #o2 #q8) - Valid
               *   (calibrate v12 #q8 #y4 v18 v10)
               *   (take_image v12 #q8 #y4 v18 v10 v11)
           3.  **Image v17:**
               *   (move v12 #q8 #o2 #q10) - Valid
               *   (calibrate v12 #q10 #y5 v17 v10)
               *   (take_image v12 #q10 #y5 v17 v10 v11)
           4.  **Image v19:**
               *   (move v12 #q10 #o2 #q6) - Valid
               *   (calibrate v12 #q6 #y3 v19 v10)
               *   (take_image v12 #q6 #y3 v19 v10 v11)
           5.  **Sample v5:**
               *   (move v12 #q6 #o2 #q13) - Valid
               *   (sample_rock v12 #q13 v5 v16)
               *   (drop_rock v12 v16)
           6.  **Sample v1:**
               *   (move v12 #q13 #o2 #q17) - Valid
               *   (sample_rock v12 #q17 v1 v16)
               *   (drop_rock v12 v16)
           7.  **Sample v7:**
               *   (move v12 #q17 #o2 #q18) - Valid
               *   (sample_rock v12 #q18 v7 v16)
               *   (drop_rock v12 v16)
           8.  **Sample v3:**
               *   (move v12 #q18 #o2 #q19) - Valid
               *   (sample_rock v12 #q19 v3 v16)
               *   (drop_rock v12 v16)
           9.  **Sample v4:**
               *   (move v12 #q19 #o2 #q20) - Valid
               *   (sample_rock v12 #q20 v4 v16)
               *   (drop_rock v12 v16)
           10. **Sample v8:**
               *   (move v12 #q20 #t38 #q21) - Corrected action
               *   (sample_rock v12 #q21 v8 v16)
               *   (drop_rock v12 v16)
           
           Now, all images are taken and all rocks are analyzed. The store for `v12` is free. Now `v12` needs to send all data from a `comvisible` location, `q3`.
           
           11. **Send data:**
               *   (move v12 #q21 #t37 #q3) - Corrected action
               *   (send_image v12 #q3 #y1 v9 v17 v11)
               *   (send_image v12 #q3 #y1 v9 v18 v11)
               *   (send_image v12 #q3 #y1 v9 v19 v11)
               *   (send_image v12 #q3 #y1 v9 v20 v11)
               *   (send_analysis v12 #q3 #y1 v9 v1)
               *   (send_analysis v12 #q3 #y1 v9 v3)
               *   (send_analysis v12 #q3 #y1 v9 v4)
               *   (send_analysis v12 #q3 #y1 v9 v5)
               *   (send_analysis v12 #q3 #y1 v9 v7)
               *   (send_analysis v12 #q3 #y1 v9 v8)
               *   (move v12 #q3 #t5 v13) - Valid
           
           This revised plan addresses the invalid actions and should be executable with the provided action instances.
           
           --Plan--:
           (move v12 v13 #t6 #q2)
           (calibrate v12 #q2 #y0 v20 v10)
           (take_image v12 #q2 #y0 v20 v10 v11)
           (move v12 #q2 #o2 #q8)
           (calibrate v12 #q8 #y4 v18 v10)
           (take_image v12 #q8 #y4 v18 v10 v11)
           (move v12 #q8 #o2 #q10)
           (calibrate v12 #q10 #y5 v17 v10)
           (take_image v12 #q10 #y5 v17 v10 v11)
           (move v12 #q10 #o2 #q6)
           (calibrate v12 #q6 #y3 v19 v10)
           (take_image v12 #q6 #y3 v19 v10 v11)
           (move v12 #q6 #o2 #q13)
           (sample_rock v12 #q13 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q13 #o2 #q17)
           (sample_rock v12 #q17 v1 v16)
           (drop_rock v12 v16)
           (move v12 #q17 #o2 #q18)
           (sample_rock v12 #q18 v7 v16)
           (drop_rock v12 v16)
           (move v12 #q18 #o2 #q19)
           (sample_rock v12 #q19 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q19 #o2 #q20)
           (sample_rock v12 #q20 v4 v16)
           (drop_rock v12 v16)
           (move v12 #q20 #t38 #q21)
           (sample_rock v12 #q21 v8 v16)
           (drop_rock v12 v16)
           (move v12 #q21 #t37 #q3)
           (send_image v12 #q3 #y1 v9 v17 v11)
           (send_image v12 #q3 #y1 v9 v18 v11)
           (send_image v12 #q3 #y1 v9 v19 v11)
           (send_image v12 #q3 #y1 v9 v20 v11)
           (send_analysis v12 #q3 #y1 v9 v1)
           (send_analysis v12 #q3 #y1 v9 v3)
           (send_analysis v12 #q3 #y1 v9 v4)
           (send_analysis v12 #q3 #y1 v9 v5)
           (send_analysis v12 #q3 #y1 v9 v7)
           (send_analysis v12 #q3 #y1 v9 v8)
           (move v12 #q3 #t5 v13)

