User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t16: object
           #t17: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t29: object
           #t3: object
           #t30: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t5: object
           #t50: object
           #t51: object
           #t52: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom onboard(v10, v14)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom rock(v4)
           Atom objective(v17)
           Atom atconf(v14, v15)
           Atom rock(v3)
           Atom atconf(v12, v13)
           Atom type(v1, v2)
           Atom type(v4, v2)
           Atom store(v16)
           Atom lander(v9)
           Atom rover(v14)
           Atom rock(v7)
           Atom camera(v10)
           Atom conf(v12, v13)
           Atom objective(v19)
           Atom rock(v5)
           Atom objective(v18)
           Atom rock(v1)
           Atom free(v12, v16)
           Atom rover(v12)
           Atom free(v14, v16)
           Atom type(v8, v6)
           Atom mode(v11)
           Atom type(v7, v6)
           Atom supports(v10, v11)
           Atom type(v5, v6)
           Atom objective(v20)
           Atom above(v12, #q10, v8)
           Atom conf(v12, #q10)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #q8, v4)
           Atom conf(v12, #q8)
           Atom above(v12, #q9, v1)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q13, v5)
           Atom conf(v12, #q13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom imagevisible(v12, #q5, #y3, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q1, #y1, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #q12, v7)
           Atom conf(v12, #q12)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q15, #y7, v20)
           Atom imagerange(v14, #q15, v20)
           Atom conf(v14, #q15)
           Atom ray(#y7)
           Atom imagevisible(v14, #q14, #y6, v19)
           Atom imagerange(v14, #q14, v19)
           Atom conf(v14, #q14)
           Atom ray(#y6)
           Atom above(v14, #q18, v8)
           Atom conf(v14, #q18)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q17, #y9, v17)
           Atom imagerange(v14, #q17, v17)
           Atom conf(v14, #q17)
           Atom ray(#y9)
           Atom imagevisible(v14, #q16, #y8, v18)
           Atom imagerange(v14, #q16, v18)
           Atom conf(v14, #q16)
           Atom ray(#y8)
           Atom above(v14, #q2, v1)
           Atom conf(v14, #q2)
           Atom above(v14, #o5, v4)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #t46, v13)
           Atom motion(v12, v13, #t37, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, v13, #t9, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #t6, #q4)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q1, #t17, #q6)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, v13, #t7, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #t4, #q4)
           Atom motion(v14, #q4, #t2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t13, v15)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q0, #t3, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, v15, #t5, #q2)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q2, #t1, #q0)
           Atom motion(v12, #q6, #t12, #q3)
           Atom motion(v12, #q12, #t23, #q3)
           Atom motion(v12, #q3, #t36, #q12)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #t27, #q9)
           Atom motion(v12, #q9, #t20, #q3)
           Atom motion(v12, #q1, #t10, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #t0, v13)
           Atom motion(v12, #q3, #t14, #q8)
           Atom motion(v12, #q8, #t19, #q3)
           Atom motion(v12, v13, #t41, #q3)
           Atom motion(v12, #q3, #t29, #q6)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, v13, #t39, #q13)
           Atom motion(v12, #q3, #t34, #q13)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q9, #t25, #q13)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q13, #t40, v13)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q13, #t24, #q3)
           Atom motion(v14, #q2, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q4)
           Atom motion(v14, #q16, #o2, #q2)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #t44, #q0)
           Atom motion(v14, #q4, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q0, #t52, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q17, #t45, #q0)
           Atom motion(v14, #q0, #t47, #q17)
           Atom motion(v14, #q4, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q2)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q2, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q3, #t35, #q10)
           Atom motion(v12, #q10, #t21, #q3)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v14, #q18, #o2, #q16)
           Atom motion(v14, #q18, #o2, v15)
           Atom motion(v14, #q17, #o2, #q18)
           Atom motion(v14, #q18, #o2, #q18)
           Atom motion(v14, #q18, #o2, #q2)
           Atom motion(v14, #q0, #o2, #q18)
           Atom motion(v14, #q4, #o2, #q18)
           Atom motion(v14, #q18, #o2, #q4)
           Atom motion(v14, #q2, #o2, #q18)
           Atom motion(v14, #q18, #o2, #q17)
           Atom motion(v14, v15, #t50, #q18)
           Atom motion(v14, #q16, #o2, #q18)
           Atom motion(v14, #q18, #t51, #q0)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q18)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q14, #t42, #q0)
           Atom motion(v14, #q18, #o2, #q14)
           Atom motion(v14, v15, #t38, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v14, #q0, #t48, #q14)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #t22, #q3)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q3, #t33, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q3, #t26, #q5)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q6, #t16, #q5)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #t11, #q3)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q1, #t30, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q5, #t32, #q6)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, v13, #t8, #q5)
           Atom motion(v14, #q0, #t49, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #t43, #q0)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q18, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q2)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q4)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q18)
           Atom motion(v14, #q4, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #q17, #o2, #o5)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q18)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q18, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q17)
           Atom motion(v14, #q16, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v8 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q12 v7 v16))
           ((sample_rock v12 #q13 v5 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v12 #q9 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q18 v8 v16))
           ((sample_rock v14 #q2 v1 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t10 #q3))
           ((move v12 #q1 #t17 #q6))
           ((move v12 #q1 #t30 #q5))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t21 #q3))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t22 #q3))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t23 #q3))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #t24 #q3))
           ((move v12 #q13 #t40 v13))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #t0 v13))
           ((move v12 #q3 #t14 #q8))
           ((move v12 #q3 #t26 #q5))
           ((move v12 #q3 #t27 #q9))
           ((move v12 #q3 #t29 #q6))
           ((move v12 #q3 #t33 #q11))
           ((move v12 #q3 #t34 #q13))
           ((move v12 #q3 #t35 #q10))
           ((move v12 #q3 #t36 #q12))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t11 #q3))
           ((move v12 #q5 #t32 #q6))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q3))
           ((move v12 #q6 #t16 #q5))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q3))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #t20 #q3))
           ((move v12 #q9 #t25 #q13))
           ((move v12 #q9 #t46 v13))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t37 #q9))
           ((move v12 v13 #t39 #q13))
           ((move v12 v13 #t41 #q3))
           ((move v12 v13 #t7 #q1))
           ((move v12 v13 #t8 #q5))
           ((move v12 v13 #t9 #q6))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q17))
           ((move v14 #o5 #o2 #q18))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q18))
           ((move v14 #q0 #t13 v15))
           ((move v14 #q0 #t3 #q2))
           ((move v14 #q0 #t4 #q4))
           ((move v14 #q0 #t47 #q17))
           ((move v14 #q0 #t48 #q14))
           ((move v14 #q0 #t49 #q15))
           ((move v14 #q0 #t52 #q16))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q18))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t42 #q0))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q18))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t43 #q0))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q18))
           ((move v14 #q16 #o2 #q2))
           ((move v14 #q16 #o2 #q4))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t44 #q0))
           ((move v14 #q17 #o2 #o5))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q18))
           ((move v14 #q17 #o2 #q2))
           ((move v14 #q17 #o2 #q4))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t45 #q0))
           ((move v14 #q18 #o2 #o5))
           ((move v14 #q18 #o2 #q14))
           ((move v14 #q18 #o2 #q15))
           ((move v14 #q18 #o2 #q16))
           ((move v14 #q18 #o2 #q17))
           ((move v14 #q18 #o2 #q18))
           ((move v14 #q18 #o2 #q2))
           ((move v14 #q18 #o2 #q4))
           ((move v14 #q18 #o2 v15))
           ((move v14 #q18 #t51 #q0))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q16))
           ((move v14 #q2 #o2 #q17))
           ((move v14 #q2 #o2 #q18))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t1 #q0))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q16))
           ((move v14 #q4 #o2 #q17))
           ((move v14 #q4 #o2 #q18))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t2 #q0))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t38 #q14))
           ((move v14 v15 #t5 #q2))
           ((move v14 v15 #t50 #q18))
           ((move v14 v15 #t6 #q4))
           ((calibrate v12 #q1 #y1 v17 v10))
           ((calibrate v12 #q5 #y3 v19 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q14 #y6 v19 v10))
           ((calibrate v14 #q15 #y7 v20 v10))
           ((calibrate v14 #q16 #y8 v18 v10))
           ((calibrate v14 #q17 #y9 v17 v10))
           ((take_image v12 #q1 #y1 v17 v10 v11))
           ((take_image v12 #q5 #y3 v19 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q14 #y6 v19 v10 v11))
           ((take_image v14 #q15 #y7 v20 v10 v11))
           ((take_image v14 #q16 #y8 v18 v10 v11))
           ((take_image v14 #q17 #y9 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, `v12` and `v14`, equipped with a camera `v10`. They can move between various configurations (#q values) and interact with rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There's also a lander `v9` for communication and a store `v16` for samples. The goal `new-axiom@0()` represents a complex state that requires several conditions to be met, including:
           1. Both rovers `v12` and `v14` must be at some configuration.
           2. Both rovers must have their store `v16` free (meaning they dropped any sampled rocks).
           3. Images of objectives `v17`, `v18`, `v19`, and `v20` in mode `v11` must have been received.
           4. Rocks `v2`, and `v6` (types of rock, represented by `?stone` and `?soil` in the axiom) must have been analyzed.
           
           Let's break down the goal and strategize:
           
           *   **atconf(v12, v13) and atconf(v14, v15)**: These are already true in the initial state.
           *   **free(v12, v16) and free(v14, v16)**: These are already true in the initial state.
           *   **receivedimage(v17, v11), receivedimage(v18, v11), receivedimage(v19, v11), receivedimage(v20, v11)**: This requires the rovers to take images of these objectives and send them to the lander.
           *   **type(?stone, v2) and receivedanalysis(?stone)**: This means we need to analyze a rock of type `v2` and send its analysis. Rocks `v1`, `v3`, and `v4` are of type `v2`.
           *   **type(?soil, v6) and receivedanalysis(?soil)**: This means we need to analyze a rock of type `v6` and send its analysis. Rocks `v5`, `v7`, and `v8` are of type `v6`.
           
           The plan will involve:
           1.  **Calibrating cameras**: Before taking images, the camera must be calibrated.
           2.  **Taking images**: Take images of all required objectives (v17, v18, v19, v20).
           3.  **Sending images**: Send all collected images to the lander.
           4.  **Sampling rocks**: Sample at least one rock of type `v2` and one of type `v6`.
           5.  **Sending analysis**: Send the analysis of the sampled rocks to the lander.
           
           I'll use `v12` to handle some image tasks and sample rock `v8` (type v6), and `v14` for other image tasks and sampling rock `v3` (type v2).
           
           **Rover v12 tasks**:
           *   Calibrate for v17.
           *   Take image of v17.
           *   Calibrate for v18.
           *   Take image of v18.
           *   Calibrate for v19.
           *   Take image of v19.
           *   Move to a communication point.
           *   Send images of v17, v18, v19.
           *   Move to a rock v8.
           *   Sample rock v8.
           *   Move to a communication point.
           *   Send analysis of v8.
           
           **Rover v14 tasks**:
           *   Calibrate for v20.
           *   Take image of v20.
           *   Move to a communication point.
           *   Send image of v20.
           *   Move to a rock v3.
           *   Sample rock v3.
           *   Move to a communication point.
           *   Send analysis of v3.
           
           Let's check for overlapping goals and possible optimizations. Rover `v12` is at `v13` and has access to objectives `v17`, `v18`, `v19` and rocks `v1`, `v3`, `v4`, `v5`, `v7`, `v8`. Rover `v14` is at `v15` and has access to objectives `v17`, `v18`, `v19`, `v20` and rocks `v1`, `v3`, `v4`, `v5`, `v7`, `v8`. Both have free stores.
           
           I will use `v12` to get images for `v17`, `v18`, `v19` and `v14` for `v20`.
           I will use `v12` to sample rock `v8` (type `v6`) and `v14` to sample rock `v3` (type `v2`).
           
           --Plan--:
           (calibrate v12 #q1 #y1 v17 v10)
           (take_image v12 #q1 #y1 v17 v10 v11)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t11 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (move v12 #q3 #t35 #q10)
           (sample_rock v12 #q10 v8 v16)
           (move v12 #q10 #t21 #q3)
           (send_analysis v12 #q3 #y2 v9 v8)
           (calibrate v14 #q15 #y7 v20 v10)
           (take_image v14 #q15 #y7 v20 v10 v11)
           (move v14 #q15 #t43 #q0)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (move v14 #q0 #t3 #q2)
           (sample_rock v14 #o5 v3 v16)
           (send_analysis v14 #q0 #y0 v9 v3)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because it didn't fully satisfy the `new-axiom@0()` goal, specifically missing some received images and analysis. I overlooked some `receivedimage` and `receivedanalysis` conditions within the `new-axiom@0()` definition, which means I need to make sure *all* the stated `receivedimage` and `receivedanalysis` conditions are met.
           
           Let's re-examine the `new-axiom@0()` goal:
           
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)  <- Missing in previous plan's reasoning
               Atom receivedimage(v18, v11)  <- Missing in previous plan's reasoning
               Atom receivedimage(v19, v11)  <- Missing in previous plan's reasoning
               Atom receivedimage(v20, v11)  <- Missing in previous plan's reasoning
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)  <- Needs analysis for a type v2 rock
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)   <- Needs analysis for a type v6 rock
           ```
           
           The `atconf` and `free` conditions are met initially. The critical parts are the `receivedimage` for *all four* objectives (`v17`, `v18`, `v19`, `v20`) and the `receivedanalysis` for one rock of `type v2` and one rock of `type v6`.
           
           My previous plan missed ensuring all four `receivedimage` were sent. I only planned to send images for `v17`, `v18`, `v19` by `v12` and `v20` by `v14`. This should have covered it in the `send_image` actions, but the error message indicates it wasn't. Let me re-verify the `send_image` calls.
           
           Okay, I see the issue. My mental trace for `send_image` was correct, but perhaps the system didn't track it properly for the goal. Or, more likely, I might have made an error in which rover handles which objective in the plan. I need to explicitly ensure that all four `receivedimage` predicates become true, and both `receivedanalysis` predicates become true for rocks of the correct type.
           
           Let's re-allocate tasks and ensure all objectives are covered:
           
           **Rover v12:**
           *   Calibrate and take image for `v17`.
           *   Calibrate and take image for `v18`.
           *   Calibrate and take image for `v19`.
           *   Move to communicate.
           *   Send images for `v17`, `v18`, `v19`.
           *   Move to rock `v8` (type `v6`).
           *   Sample `v8`.
           *   Move to communicate.
           *   Send analysis for `v8`.
           
           **Rover v14:**
           *   Calibrate and take image for `v20`.
           *   Move to communicate.
           *   Send image for `v20`.
           *   Move to rock `v3` (type `v2`).
           *   Sample `v3`.
           *   Move to communicate.
           *   Send analysis for `v3`.
           
           This looks like it covers all the `receivedimage` and `receivedanalysis` requirements. The current positions and access to objectives and rocks are favorable for this division of labor.
           
           --Plan--:
           (calibrate v12 #q1 #y1 v17 v10)
           (take_image v12 #q1 #y1 v17 v10 v11)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t11 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (move v12 #q3 #t35 #q10)
           (sample_rock v12 #q10 v8 v16)
           (move v12 #q10 #t21 #q3)
           (send_analysis v12 #q3 #y2 v9 v8)
           (calibrate v14 #q15 #y7 v20 v10)
           (take_image v14 #q15 #y7 v20 v10 v11)
           (move v14 #q15 #t43 #q0)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (move v14 #q0 #t3 #q2)
           (sample_rock v14 #o5 v3 v16)
           (send_analysis v14 #q0 #y0 v9 v3)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan failed again with the same error, `Fact is not satisfied: Atom new-axiom@0()`. This is frustrating, as my analysis confirms that the plan *should* achieve all the sub-goals within `new-axiom@0()`. Let's assume there's a subtle interaction I'm missing or a detail in the action list that I'm misinterpreting.
           
           The `new-axiom@0()` goal requires:
           *   `atconf(v12, v13)` (True)
           *   `atconf(v14, v15)` (True)
           *   `free(v12, v16)` (True)
           *   `free(v14, v16)` (True)
           *   `receivedimage(v17, v11)` (Must be achieved)
           *   `receivedimage(v18, v11)` (Must be achieved)
           *   `receivedimage(v19, v11)` (Must be achieved)
           *   `receivedimage(v20, v11)` (Must be achieved)
           *   `receivedanalysis(?stone)` where `type(?stone, v2)` (Must be achieved for a type `v2` rock)
           *   `receivedanalysis(?soil)` where `type(?soil, v6)` (Must be achieved for a type `v6` rock)
           
           Let's do an *extremely* careful step-by-step trace of each action and its effects, focusing on the goal conditions. It's possible I'm failing to re-calibrate for some images or sending images/analysis from a location that isn't connected or where the ray is blocked, although the action instances suggest valid paths and visibility.
           
           Crucial check: The `send_analysis` and `send_image` actions require `comvisible` and `~blocked(?y)`. All provided `send_analysis` and `send_image` action instances use `comvisible(v12, #q3, #y2, v9)` or `comvisible(v14, #q0, #y0, v9)`. These are established in the initial state, and I assume the ray `y2` or `y0` are not blocked unless an action instance is not provided (meaning it's blocked or not visible).
           
           Let's stick to the same strategy, but explicitly call out each goal condition and how it's met.
           
           **Initial State Review:**
           *   `atconf(v12, v13)`
           *   `atconf(v14, v15)`
           *   `free(v12, v16)`
           *   `free(v14, v16)`
           *   `rover(v12)`, `rover(v14)`
           *   `camera(v10)`, `onboard(v10, v12)`, `onboard(v10, v14)`, `supports(v10, v11)`
           *   `mode(v11)`
           *   `lander(v9)`
           *   `store(v16)`
           *   Objectives: `v17`, `v18`, `v19`, `v20`.
           *   Rocks: `v1` (type `v2`), `v3` (type `v2`), `v4` (type `v2`), `v5` (type `v6`), `v7` (type `v6`), `v8` (type `v6`).
           
           **Plan Re-construction to ensure all goal conditions are hit:**
           
           **For `v12`:**
           1.  **Image v17**: `calibrate v12 #q1 #y1 v17 v10` -> `calibrated(v10, v12)` (for v17). `take_image v12 #q1 #y1 v17 v10 v11` -> `haveimage(v12, v17, v11)`.
           2.  **Image v18**: Need to re-calibrate, as `take_image` uncalibrates. `calibrate v12 #q6 #y4 v18 v10` -> `calibrated(v10, v12)` (for v18). `take_image v12 #q6 #y4 v18 v10 v11` -> `haveimage(v12, v18, v11)`.
           3.  **Image v19**: Re-calibrate. `calibrate v12 #q5 #y3 v19 v10` -> `calibrated(v10, v12)` (for v19). `take_image v12 #q5 #y3 v19 v10 v11` -> `haveimage(v12, v19, v11)`.
           4.  **Move to Comms**: Move `v12` to `#q3` (from wherever it is, let's say `#q5` after the last image). `move v12 #q5 #t11 #q3`.
           5.  **Send Images**: `send_image v12 #q3 #y2 v9 v17 v11` -> `receivedimage(v17, v11)`. `send_image v12 #q3 #y2 v9 v18 v11` -> `receivedimage(v18, v11)`. `send_image v12 #q3 #y2 v9 v19 v11` -> `receivedimage(v19, v11)`.
           6.  **Sample Type v6 rock**: Move to `q10` where `v8` (type `v6`) is. `move v12 #q3 #t35 #q10`. `sample_rock v12 #q10 v8 v16` -> `analyzed(v12, v8)`. `full(v12, v16)`.
           7.  **Send Analysis Type v6 rock**: Move back to comms `#q3`. `move v12 #q10 #t21 #q3`. `send_analysis v12 #q3 #y2 v9 v8` -> `receivedanalysis(v8)`.
           
           **For `v14`:**
           1.  **Image v20**: `calibrate v14 #q15 #y7 v20 v10` -> `calibrated(v10, v14)` (for v20). `take_image v14 #q15 #y7 v20 v10 v11` -> `haveimage(v14, v20, v11)`.
           2.  **Move to Comms**: Move `v14` to `#q0` (from `#q15`). `move v14 #q15 #t43 #q0`.
           3.  **Send Image v20**: `send_image v14 #q0 #y0 v9 v20 v11` -> `receivedimage(v20, v11)`.
           4.  **Sample Type v2 rock**: Move to `o5` where `v3` (type `v2`) is. `move v14 #q0 #t3 #q2`. The sample action is `(sample_rock v14 #o5 v3 v16)`. This means that `v14` must be at `#o5` or move there to sample `v3`. The `move v14 #q0 #t3 #q2` action is valid, but it moves `v14` to `q2`. The next `sample_rock` action in my plan `(sample_rock v14 #o5 v3 v16)` has `v14` at `#o5`. This is a crucial detail. I need to get `v14` to `#o5`. There's no direct move from `q2` to `o5`.
               Let's check `above(v14, #o5, v3)` and `conf(v14, #o5)` in initial state. So, `v14` needs to be at `#o5` to sample `v3`. I need a move sequence for `v14` to reach `#o5`.
               `atconf(v14, v15)` initially.
               `move v14 #q15 #t43 #q0` -> `atconf(v14, #q0)`.
               `move v14 #q0 #t3 #q2` -> `atconf(v14, #q2)`.
               Now from `#q2` to `#o5`: `move v14 #q2 #o2 #o5` is valid.
           5.  **Sample Type v2 rock (corrected)**: `move v14 #q2 #o2 #o5`. Now `atconf(v14, #o5)`. Then `sample_rock v14 #o5 v3 v16` -> `analyzed(v14, v3)`. `full(v14, v16)`.
           6.  **Send Analysis Type v2 rock**: Move back to comms `#q0`. `move v14 #o5 #o2 #q0`. `send_analysis v14 #q0 #y0 v9 v3` -> `receivedanalysis(v3)`.
           
           This revised trace should hit all goal conditions.
           
           --Plan--:
           (calibrate v12 #q1 #y1 v17 v10)
           (take_image v12 #q1 #y1 v17 v10 v11)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t11 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (move v12 #q3 #t35 #q10)
           (sample_rock v12 #q10 v8 v16)
           (move v12 #q10 #t21 #q3)
           (send_analysis v12 #q3 #y2 v9 v8)
           (calibrate v14 #q15 #y7 v20 v10)
           (take_image v14 #q15 #y7 v20 v10 v11)
           (move v14 #q15 #t43 #q0)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (move v14 #q0 #t3 #q2)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q0)
           (send_analysis v14 #q0 #y0 v9 v3)

