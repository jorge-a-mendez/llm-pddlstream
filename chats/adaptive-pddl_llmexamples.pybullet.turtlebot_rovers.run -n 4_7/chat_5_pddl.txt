User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t12: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v8)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom objective(v20)
           Atom onboard(v10, v14)
           Atom rover(v14)
           Atom rock(v7)
           Atom rover(v12)
           Atom objective(v18)
           Atom type(v4, v2)
           Atom type(v8, v6)
           Atom type(v5, v6)
           Atom conf(v12, v13)
           Atom objective(v17)
           Atom type(v1, v2)
           Atom store(v16)
           Atom conf(v14, v15)
           Atom supports(v10, v11)
           Atom free(v12, v16)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom lander(v9)
           Atom atconf(v12, v13)
           Atom type(v7, v6)
           Atom objective(v19)
           Atom rock(v1)
           Atom rock(v4)
           Atom rock(v3)
           Atom rock(v5)
           Atom camera(v10)
           Atom atconf(v14, v15)
           Atom imagevisible(v14, #q5, #y3, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #q8, v5)
           Atom conf(v14, #q8)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v4)
           Atom above(v14, #q2, v1)
           Atom conf(v14, #q2)
           Atom imagevisible(v14, #q6, #y4, v19)
           Atom imagerange(v14, #q6, v19)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #q4, #y2, v20)
           Atom imagerange(v14, #q4, v20)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom comvisible(v14, #q3, #y1, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y1)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom above(v12, #q0, v5)
           Atom conf(v12, #q0)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #o5, v8)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v7)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, v15, #t15, #q5)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q2, #t17, v15)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q3, #t4, #q2)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q5, #t6, #q3)
           Atom motion(v14, #q3, #t1, v15)
           Atom motion(v14, #q6, #t7, #q3)
           Atom motion(v14, v15, #t16, #q3)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q3, #t12, #q8)
           Atom motion(v14, #q2, #t9, #q3)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q8, #t14, #q3)
           Atom motion(v12, v13, #t8, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #t2, #q4)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q4, #t5, #q3)
           Atom motion(v14, #q6, #t10, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v12, #q1, #t3, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v12, #o3, #o2, #q1)
           Atom motion(v12, #o3, #o2, #q0)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #q1, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #q0, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q2 v1 v16))
           ((sample_rock v14 #q8 v5 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q0))
           ((move v12 #o3 #o2 #q1))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o3))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q1 #o2 #o3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #t3 v13))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t8 #q0))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #t17 v15))
           ((move v14 #q2 #t9 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #t1 v15))
           ((move v14 #q3 #t12 #q8))
           ((move v14 #q3 #t4 #q2))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t5 #q3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t6 #q3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t10 #q4))
           ((move v14 #q6 #t7 #q3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t14 #q3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t15 #q5))
           ((move v14 v15 #t16 #q3))
           ((move v14 v15 #t2 #q4))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q4 #y2 v20 v10))
           ((calibrate v14 #q5 #y3 v17 v10))
           ((calibrate v14 #q6 #y4 v19 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q4 #y2 v20 v10 v11))
           ((take_image v14 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q6 #y4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y1 v9 v3))
           ((send_analysis v14 #q3 #y1 v9 v4))
           ((send_analysis v14 #q3 #y1 v9 v7))
           ((send_analysis v14 #q3 #y1 v9 v8))
           ((send_analysis v14 #q3 #y1 v9 v1))
           ((send_analysis v14 #q3 #y1 v9 v5))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v14 #q3 #y1 v9 v20 v11))
           ((send_image v14 #q3 #y1 v9 v17 v11))
           ((send_image v14 #q3 #y1 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to satisfy the `new-axiom@0()` predicate, which requires several conditions to be met simultaneously:
           1.  `atconf(v12, v13)`: Rover v12 is at configuration v13. This is true initially.
           2.  `atconf(v14, v15)`: Rover v14 is at configuration v15. This is true initially.
           3.  `free(v12, v16)`: Store v16 on rover v12 is free. This is true initially.
           4.  `free(v14, v16)`: Store v16 on rover v14 is free. This is true initially.
           5.  `receivedimage(v17, v11)`: An image of objective v17 in mode v11 has been received.
           6.  `receivedimage(v18, v11)`: An image of objective v18 in mode v11 has been received.
           7.  `receivedimage(v19, v11)`: An image of objective v19 in mode v11 has been received.
           8.  `receivedimage(v20, v11)`: An image of objective v20 in mode v11 has been received.
           9.  `type(?stone, v2)`: There exists a rock of type v2.
           10. `receivedanalysis(?stone)`: An analysis of a rock of type v2 has been received.
           11. `type(?soil, v6)`: There exists a rock of type v6.
           12. `receivedanalysis(?soil)`: An analysis of a rock of type v6 has been received.
           
           Let's break down how to achieve these:
           
           **Image Reception (Goals 5, 6, 7, 8):**
           For each objective (v17, v18, v19, v20), we need to:
               a. Calibrate a camera (`calibrate` action).
               b. Take an image of the objective (`take_image` action).
               c. Send the image to the lander (`send_image` action).
           
           Rover v12 has `imagevisible` predicates for v17, v18, v19, v20 with camera v10 at #o3 and ray #o4.
           Rover v14 has `imagevisible` predicates for v17 at #q5, v19 at #q6, and v20 at #q4.
           
           We can use either rover to achieve these image goals. It's more efficient to use the rover that can see multiple objectives from one configuration. Rover v12 can see v17, v18, v19, v20 from configuration #o3 using camera v10 and ray #o4.
           
           **Analysis Reception (Goals 10, 12):**
           We need to analyze a rock of type v2 and a rock of type v6.
           The initial state tells us:
           *   `type(v1, v2)`: v1 is type v2 (stone).
           *   `type(v3, v2)`: v3 is type v2 (stone).
           *   `type(v4, v2)`: v4 is type v2 (stone).
           *   `type(v5, v6)`: v5 is type v6 (soil).
           *   `type(v7, v6)`: v7 is type v6 (soil).
           *   `type(v8, v6)`: v8 is type v6 (soil).
           
           So, we need to analyze at least one of (v1, v3, v4) and at least one of (v5, v7, v8).
           
           To analyze a rock (`receivedanalysis`):
               a. Sample the rock (`sample_rock` action). This makes `analyzed` true for that rock.
               b. Send the analysis to the lander (`send_analysis` action).
           
           Both rovers have free stores (v16).
           Rover v12 is `atconf(v12, v13)` and can `move v12 v13 #t8 #q0` to #q0 where it is `above(v12, #q0, v5)`.
           Rover v14 is `atconf(v14, v15)`.
           It is `above(v14, #q8, v5)` (type v6).
           It is `above(v14, #q2, v1)` (type v2).
           
           So, rover v14 can sample a type v2 rock (v1) and a type v6 rock (v5).
           After sampling, it needs to move to a `comvisible` configuration to send the analysis. Rover v14 can communicate at `#q3` via `#y1` to `v9`.
           
           **Plan Strategy:**
           1.  **Image tasks:** Use Rover v12 for all image tasks (v17, v18, v19, v20). It can reach #o3 and calibrate and take all images. Then move to #q1 to send them.
           2.  **Analysis tasks:** Use Rover v14 for both analysis tasks (one type v2, one type v6).
               *   Move v14 to #q2, sample v1 (type v2).
               *   Move v14 to #q8, sample v5 (type v6).
               *   Move v14 to #q3, send both analyses.
           
           Let's verify the preconditions for each step:
           
           **Rover v12 for Images:**
           *   Start at `v13`.
           *   Move to `#o3`: `(move v12 v13 #o2 #o3)` (motion `(motion v12 v13 #o2 #o3)` exists).
           *   Calibrate for v17: `(calibrate v12 #o3 #o4 v17 v10)` (preconditions: `imagevisible`, `onboard`, `atconf`, `~blocked` are all true from initial state or by previous move).
           *   Take image of v17: `(take_image v12 #o3 #o4 v17 v10 v11)` (`calibrated` from prev action, others true). This invalidates `calibrated(v10, v12)`.
           *   Calibrate for v18: `(calibrate v12 #o3 #o4 v18 v10)` (need to re-calibrate).
           *   Take image of v18.
           *   Calibrate for v19.
           *   Take image of v19.
           *   Calibrate for v20.
           *   Take image of v20.
           *   Move to `#q1` for communication: `(move v12 #o3 #o2 #q1)` (motion `(motion v12 #o3 #o2 #q1)` exists).
           *   Send images of v17, v18, v19, v20: `(send_image v12 #q1 #y0 v9 v17 v11)`, `(send_image v12 #q1 #y0 v9 v18 v11)`, `(send_image v12 #q1 #y0 v9 v19 v11)`, `(send_image v12 #q1 #y0 v9 v20 v11)`. (Preconditions: `comvisible`, `objective`, `mode`, `haveimage`, `atconf`, `~blocked` are true).
           
           **Rover v14 for Analyses:**
           *   Start at `v15`.
           *   Move to `#q2`: `(move v14 v15 #o2 #q2)` (motion exists).
           *   Sample v1 (type v2): `(sample_rock v14 #q2 v1 v16)` (preconditions: `above`, `store`, `atconf`, `free`). `free(v14, v16)` becomes `full(v14, v16)`.
           *   Move to `#q8`: `(move v14 #q2 #o2 #q8)` (motion exists).
           *   Sample v5 (type v6): `(sample_rock v14 #q8 v5 v16)` (preconditions: `above`, `store`, `atconf`, `full`). This action fails since the store is already full. We need to drop the rock or use the other rover or another store.
               *   Alternative: Rover v12 has a free store.
                   *   Rover v12 samples type v6 rock: `above(v12, #q0, v5)` (type v6). Move v12 to #q0. Sample v5.
                   *   Rover v14 samples type v2 rock: `above(v14, #q2, v1)` (type v2). Move v14 to #q2. Sample v1.
               This works better.
           
           Revised analysis strategy:
           1.  **Rover v12 for type v6 analysis:**
               *   Move v12 from v13 to #q0: `(move v12 v13 #t8 #q0)`.
               *   Sample v5 (type v6): `(sample_rock v12 #q0 v5 v16)`.
               *   Move v12 from #q0 to #q1: `(move v12 #q0 #t0 #q1)`.
               *   Send analysis of v5: `(send_analysis v12 #q1 #y0 v9 v5)`.
           2.  **Rover v14 for type v2 analysis:**
               *   Move v14 from v15 to #q2: `(move v14 v15 #o2 #q2)`.
               *   Sample v1 (type v2): `(sample_rock v14 #q2 v1 v16)`.
               *   Move v14 from #q2 to #q3: `(move v14 #q2 #t9 #q3)`.
               *   Send analysis of v1: `(send_analysis v14 #q3 #y1 v9 v1)`.
           
           This plan ensures both rovers use their free stores, analyze the required types, and send the data.
           The goal `new-axiom@0()` also requires `free(v12, v16)` and `free(v14, v16)` at the end. After sampling a rock, the store becomes `full`. We need to `drop_rock` for each rover that samples to make the store `free` again if it needs to be free for the *final state*.
           The axiom definition of `new-axiom@0()` does explicitly state `free(v12, v16)` and `free(v14, v16)`. So we need to drop the rocks after sending the analysis.
           
           Let's refine the plan:
           
           **Rover v12:**
           1.  Move to #o3 (for images).
           2.  Calibrate, take image of v17.
           3.  Calibrate, take image of v18.
           4.  Calibrate, take image of v19.
           5.  Calibrate, take image of v20.
           6.  Move to #q0 (for analysis of v5).
           7.  Sample v5.
           8.  Move to #q1 (for communication).
           9.  Send image of v17.
           10. Send image of v18.
           11. Send image of v19.
           12. Send image of v20.
           13. Send analysis of v5.
           14. Drop rock from v12's store (v16).
           
           **Rover v14:**
           1.  Move to #q2 (for analysis of v1).
           2.  Sample v1.
           3.  Move to #q3 (for communication).
           4.  Send analysis of v1.
           5.  Drop rock from v14's store (v16).
           
           This looks like a complete and valid strategy.
           
           --Plan--:
           (move v12 v13 #o2 #o3)
           (calibrate v12 #o3 #o4 v17 v10)
           (take_image v12 #o3 #o4 v17 v10 v11)
           (calibrate v12 #o3 #o4 v18 v10)
           (take_image v12 #o3 #o4 v18 v10 v11)
           (calibrate v12 #o3 #o4 v19 v10)
           (take_image v12 #o3 #o4 v19 v10 v11)
           (calibrate v12 #o3 #o4 v20 v10)
           (take_image v12 #o3 #o4 v20 v10 v11)
           (move v12 #o3 #o2 #q0)
           (sample_rock v12 #q0 v5 v16)
           (move v12 #q0 #t0 #q1)
           (send_image v12 #q1 #y0 v9 v17 v11)
           (send_image v12 #q1 #y0 v9 v18 v11)
           (send_image v12 #q1 #y0 v9 v19 v11)
           (send_image v12 #q1 #y0 v9 v20 v11)
           (send_analysis v12 #q1 #y0 v9 v5)
           (drop_rock v12 v16)
           (move v14 v15 #o2 #q2)
           (sample_rock v14 #q2 v1 v16)
           (move v14 #q2 #t9 #q3)
           (send_analysis v14 #q3 #y1 v9 v1)
           (drop_rock v14 v16)

