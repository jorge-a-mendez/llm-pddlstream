User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v8, v17)
           Atom stackable(v12, v18)
           Atom type(v12, v17)
           Atom handempty(v6)
           Atom stackable(v15, v10)
           Atom ataconf(v4, v5)
           Atom supported(v12, v13, v14)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v8, v18)
           Atom handempty(v4)
           Atom ataconf(v6, v7)
           Atom pose(v8, v9)
           Atom aconf(v4, v5)
           Atom atbconf(v3)
           Atom graspable(v8)
           Atom stackable(v12, v10)
           Atom supported(v15, v16, v11)
           Atom arm(v4)
           Atom arm(v6)
           Atom stackable(v8, v10)
           Atom aconf(v6, v7)
           Atom atpose(v15, v16)
           Atom canmove()
           Atom graspable(v12)
           Atom graspable(v15)
           Atom supported(v8, v9, v11)
           Atom controllable(v4)
           Atom atpose(v8, v9)
           Atom pose(v15, v16)
           Atom bconf(v3)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v15, #o1)
           Atom grasp(v12, #g0)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #o1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, #p0, #g0, #q1, #t1)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(#q0, #t4, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q1 #t4))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q1 #t1))
           ((place v4 v12 #p0 #g0 #q1 #t1))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, including `v8`, `v12`, and `v15` which are graspable. There are also regions `v10`, `v11`, `v14`, and `v18`. The robot has two arms, `v4` and `v6`, both of which are initially handempty. `v12` is currently at `v13` and is supported by `v14`. `v8` is at `v9` and is supported by `v11`. `v15` is at `v16` and is supported by `v11`. The robot's base is at configuration `v3`.
           
           The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true. In our case, `v12` is of type `v17` and is stackable on `v18`. Therefore, the goal is to place `v12` on `v18`.
           
           Currently, `v12` is at pose `v13` supported by `v14`. To place `v12` on `v18`, we need to pick it up from `v13` and place it on `v18` at pose `#p0`.
           
           Here's a breakdown of the plan:
           1. **Move to a configuration from where we can pick `v12`**: We need to move the base to `q0` to be able to pick `v12` from `v13`.
           2. **Pick `v12`**: Using arm `v4`, pick `v12` from `v13` with grasp `#g0`.
           3. **Move to a configuration from where we can place `v12`**: We need to move the base to `q1` to be able to place `v12` on `v18` at pose `#p0`.
           4. **Place `v12`**: Using arm `v4`, place `v12` on `v18` at pose `#p0` with grasp `#g0`.
           
           --Plan--:
           (move_base v3 #q0 #t2)
           (pick v4 v12 v13 #g0 #q0 #t0)
           (move_base #q0 #q1 #t4)
           (place v4 v12 #p0 #g0 #q1 #t1)

