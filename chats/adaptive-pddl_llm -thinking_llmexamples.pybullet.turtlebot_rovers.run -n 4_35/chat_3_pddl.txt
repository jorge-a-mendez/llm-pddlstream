User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom type(v5, v6)
           Atom camera(v10)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom rover(v14)
           Atom supports(v10, v11)
           Atom mode(v11)
           Atom rock(v4)
           Atom objective(v19)
           Atom type(v3, v2)
           Atom rock(v7)
           Atom objective(v20)
           Atom type(v1, v2)
           Atom type(v7, v6)
           Atom rover(v12)
           Atom atconf(v14, v15)
           Atom lander(v9)
           Atom conf(v14, v15)
           Atom rock(v3)
           Atom rock(v1)
           Atom conf(v12, v13)
           Atom onboard(v10, v14)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom rock(v8)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom rock(v5)
           Atom objective(v18)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q3, #y1, v18)
           Atom imagerange(v14, #q3, v18)
           Atom conf(v14, #q3)
           Atom ray(#y1)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #q7, #y5, v20)
           Atom imagerange(v14, #q7, v20)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q5, #y3, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q1, #y0, v19)
           Atom imagerange(v14, #q1, v19)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v3)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v14, #q4, #y2, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom comvisible(v12, #q6, #y4, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #q0, v3)
           Atom conf(v12, #q0)
           Atom above(v12, #o5, v1)
           Atom above(v12, #q2, v5)
           Atom conf(v12, #q2)
           Atom above(v12, #o5, v8)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, v15, #t8, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, v15, #t9, #q5)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, v15, #t10, #q7)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q2, #t4, #q6)
           Atom motion(v12, #q6, #t12, #q2)
           Atom motion(v12, #q6, #t6, v13)
           Atom motion(v12, #q0, #t3, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, v15, #t7, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q7, #t13, #q4)
           Atom motion(v14, #q3, #t2, #q4)
           Atom motion(v14, #q4, #t16, #q3)
           Atom motion(v14, #q5, #t14, #q4)
           Atom motion(v14, #q4, #t5, v15)
           Atom motion(v14, #q4, #t11, #q1)
           Atom motion(v14, #q4, #t15, #q7)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q1, #t1, #q4)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q0)
           Atom motion(v12, #o3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #o3)
           Atom motion(v12, #q0, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q2)
           Atom motion(v12, v13, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v3 v16))
           ((sample_rock v12 #q2 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q0))
           ((move v12 #o3 #o2 #q2))
           ((move v12 #o3 #o2 #q6))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o3))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t3 #q6))
           ((move v12 #q2 #o2 #o3))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t4 #q6))
           ((move v12 #q6 #o2 #o3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #t12 #q2))
           ((move v12 #q6 #t6 v13))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q4))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t2 #q4))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #t11 #q1))
           ((move v14 #q4 #t15 #q7))
           ((move v14 #q4 #t16 #q3))
           ((move v14 #q4 #t5 v15))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t14 #q4))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t13 #q4))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q7))
           ((move v14 v15 #t7 #q1))
           ((move v14 v15 #t8 #q3))
           ((move v14 v15 #t9 #q5))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q1 #y0 v19 v10))
           ((calibrate v14 #q3 #y1 v18 v10))
           ((calibrate v14 #q5 #y3 v17 v10))
           ((calibrate v14 #q7 #y5 v20 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q1 #y0 v19 v10 v11))
           ((take_image v14 #q3 #y1 v18 v10 v11))
           ((take_image v14 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q7 #y5 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y4 v9 v1))
           ((send_analysis v12 #q6 #y4 v9 v4))
           ((send_analysis v12 #q6 #y4 v9 v7))
           ((send_analysis v12 #q6 #y4 v9 v8))
           ((send_analysis v12 #q6 #y4 v9 v3))
           ((send_analysis v12 #q6 #y4 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y2 v9 v1))
           ((send_analysis v14 #q4 #y2 v9 v3))
           ((send_analysis v14 #q4 #y2 v9 v4))
           ((send_analysis v14 #q4 #y2 v9 v5))
           ((send_analysis v14 #q4 #y2 v9 v7))
           ((send_analysis v14 #q4 #y2 v9 v8))
           ((send_image v12 #q6 #y4 v9 v17 v11))
           ((send_image v12 #q6 #y4 v9 v18 v11))
           ((send_image v12 #q6 #y4 v9 v19 v11))
           ((send_image v12 #q6 #y4 v9 v20 v11))
           ((send_image v14 #q4 #y2 v9 v19 v11))
           ((send_image v14 #q4 #y2 v9 v18 v11))
           ((send_image v14 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q4 #y2 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, so the goal is to satisfy `new-axiom@0()`, which basically means getting images of four objectives and performing and sending analyses of a stone and soil sample. I've broken this down and, given the constraints, I think I've figured out an efficient and valid plan.
           
           The trick is that `v12` has to stay put at `v13` and `v14` has to remain at `v15`, and the final state has to include facts that match the initial state with the addition of the new facts as per the axiom. This means one rover, and in this case, `v14` does the entire job, and returns to its initial position. The plan has three phases.
           
           **Phase 1: Image Acquisition and Calibration**
           *   `v14` moves to the positions from where it can take pictures.  This rover will move to four different configurations to get `v17, v18, v19, v20` images. For each objective, `v14` will move and then calibrate its camera, take the picture.
           
           **Phase 2: Rock Sampling and Analysis**
           *   `v14` moves to `#o5`.
           *   It then samples a stone (`v1`) and a soil sample (`v5`).
           *   Since `v14` has only one store, it has to `drop_rock` after each sample.
           
           **Phase 3: Communication and Finalization**
           *   `v14` moves to `#q4` which is its communication configuration.
           *   Then it will send each image
           *   Then it will send both rock analyses
           *   And finally `v14` will `drop_rock`, and then move back to its starting configuration, `v15` so the final state will align with the initial state except for the new axiom.
           
           This should handle all aspects of the original goal.
           
)

Model:     **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, so the goal is to satisfy `new-axiom@0()`, which basically means getting images of four objectives and performing and sending analyses of a stone and soil sample. I've broken this down and, given the constraints, I think I've figured out an efficient and valid plan.
           
           The trick is that `v12` has to stay put at `v13` and `v14` has to remain at `v15`, and the final state has to include facts that match the initial state with the addition of the new facts as per the axiom. This means one rover, and in this case, `v14` does the entire job, and returns to its initial position. The plan has three phases.
           
           **Phase 1: Image Acquisition and Calibration**
           *   `v14` moves to the positions from where it can take pictures.  This rover will move to four different configurations to get `v17, v18, v19, v20` images. For each objective, `v14` will move and then calibrate its camera, take the picture.
           
           **Phase 2: Rock Sampling and Analysis**
           *   `v14` moves to `#o5`.
           *   It then samples a stone (`v1`) and a soil sample (`v5`).
           *   Since `v14` has only one store, it has to `drop_rock` after each sample.
           
           **Phase 3: Communication and Finalization**
           *   `v14` moves to `#q4` which is its communication configuration.
           *   Then it will send each image
           *   Then it will send both rock analyses
           *   And finally `v14` will `drop_rock`, and then move back to its starting configuration, `v15` so the final state will align with the initial state except for the new axiom.
           
           This should handle all aspects of the original goal.
           

