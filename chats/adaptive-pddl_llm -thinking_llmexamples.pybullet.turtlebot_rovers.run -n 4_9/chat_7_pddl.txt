User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom rock(v4)
           Atom camera(v10)
           Atom rock(v3)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom type(v5, v6)
           Atom supports(v10, v11)
           Atom mode(v11)
           Atom atconf(v12, v13)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom rock(v5)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom objective(v20)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom objective(v18)
           Atom onboard(v10, v14)
           Atom type(v3, v2)
           Atom type(v1, v2)
           Atom objective(v17)
           Atom store(v16)
           Atom onboard(v10, v12)
           Atom type(v7, v6)
           Atom lander(v9)
           Atom objective(v19)
           Atom type(v4, v2)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #q0, #y0, v19)
           Atom imagerange(v14, #q0, v19)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q10, v3)
           Atom conf(v14, #q10)
           Atom imagevisible(v14, #q7, #y5, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom imagevisible(v12, #q12, #y8, v19)
           Atom imagerange(v12, #q12, v19)
           Atom conf(v12, #q12)
           Atom ray(#y8)
           Atom imagevisible(v12, #q11, #y7, v18)
           Atom imagerange(v12, #q11, v18)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom imagevisible(v12, #q13, #y9, v17)
           Atom imagerange(v12, #q13, v17)
           Atom conf(v12, #q13)
           Atom ray(#y9)
           Atom above(v12, #q5, v3)
           Atom conf(v12, #q5)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom imagevisible(v14, #q4, #y3, v20)
           Atom imagerange(v14, #q4, v20)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q8, #y6, v20)
           Atom imagerange(v12, #q8, v20)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q15, v8)
           Atom conf(v12, #q15)
           Atom above(v14, #o5, v7)
           Atom above(v12, #q17, v7)
           Atom conf(v12, #q17)
           Atom above(v14, #o5, v1)
           Atom above(v12, #q16, v1)
           Atom conf(v12, #q16)
           Atom motion(v14, #q1, #t3, v15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v14, v15, #t14, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #t10, #q1)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v12, v13, #t16, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q16, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q16)
           Atom motion(v14, v15, #t6, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q1, #t33, #q0)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q1, #t30, #q4)
           Atom motion(v14, #q0, #t26, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #t25, #q1)
           Atom motion(v14, v15, #t7, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, v15, #t15, #q10)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q1, #t35, #q10)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #t34, #q1)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q16, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, v13, #t19, #q13)
           Atom motion(v12, #q13, #o2, #q16)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q17, #o2, #q16)
           Atom motion(v12, #q13, #o2, #q17)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, #q8, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q13)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, v13, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q8)
           Atom motion(v12, #q16, #o2, #q17)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q1, #t31, #q7)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, v15, #t23, #q7)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #t29, #q1)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v12, #q17, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, v13, #t17, #q11)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q17)
           Atom motion(v12, #q11, #o2, #q16)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q6, #t28, #q1)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q1, #t32, #q6)
           Atom motion(v14, #q7, #t24, #q6)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q6, #t22, #q0)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v12, #q17, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q16, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q17)
           Atom motion(v12, #q12, #o2, #q16)
           Atom motion(v12, v13, #t18, #q12)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, #q17, #o2, #q15)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, v13, #t37, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q17)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q17)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, v13, #t27, #q5)
           Atom motion(v12, #q5, #o2, #q16)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q17, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q16, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q2, #t40, #q15)
           Atom motion(v12, #q17, #o2, #q2)
           Atom motion(v12, #q11, #t12, #q2)
           Atom motion(v12, #q15, #t36, #q2)
           Atom motion(v12, #q2, #t42, #q17)
           Atom motion(v12, #q16, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q5, #t5, #q2)
           Atom motion(v12, #q12, #t13, #q2)
           Atom motion(v12, #q2, #t41, #q16)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q8, #t11, #q2)
           Atom motion(v12, #q2, #t1, v13)
           Atom motion(v12, #q2, #t9, #q5)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q2, #t39, #q14)
           Atom motion(v12, v13, #t21, #q14)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q17, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #t38, #q2)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q14, #o2, #q17)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q2, #t8, #q3)
           Atom motion(v12, #q14, #t20, #q3)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q17, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q16)
           Atom motion(v12, #q3, #o2, #q17)
           Atom motion(v12, #q3, #t4, #q2)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, v13, #t2, #q3)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q16, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, v15)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q15 v8 v16))
           ((sample_rock v12 #q16 v1 v16))
           ((sample_rock v12 #q17 v7 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v12 #q5 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q10 v3 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q16))
           ((move v12 #q11 #o2 #q17))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t12 #q2))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q16))
           ((move v12 #q12 #o2 #q17))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t13 #q2))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q16))
           ((move v12 #q13 #o2 #q17))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 #q17))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t20 #q3))
           ((move v12 #q14 #t38 #q2))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q16))
           ((move v12 #q15 #o2 #q17))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t36 #q2))
           ((move v12 #q16 #o2 #q11))
           ((move v12 #q16 #o2 #q12))
           ((move v12 #q16 #o2 #q13))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q17))
           ((move v12 #q16 #o2 #q2))
           ((move v12 #q16 #o2 #q3))
           ((move v12 #q16 #o2 #q5))
           ((move v12 #q16 #o2 #q8))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q17 #o2 #q11))
           ((move v12 #q17 #o2 #q12))
           ((move v12 #q17 #o2 #q13))
           ((move v12 #q17 #o2 #q14))
           ((move v12 #q17 #o2 #q15))
           ((move v12 #q17 #o2 #q16))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q2))
           ((move v12 #q17 #o2 #q3))
           ((move v12 #q17 #o2 #q5))
           ((move v12 #q17 #o2 #q8))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #t1 v13))
           ((move v12 #q2 #t39 #q14))
           ((move v12 #q2 #t40 #q15))
           ((move v12 #q2 #t41 #q16))
           ((move v12 #q2 #t42 #q17))
           ((move v12 #q2 #t8 #q3))
           ((move v12 #q2 #t9 #q5))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q16))
           ((move v12 #q3 #o2 #q17))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t4 #q2))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q16))
           ((move v12 #q5 #o2 #q17))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t5 #q2))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q16))
           ((move v12 #q8 #o2 #q17))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t11 #q2))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t16 #q8))
           ((move v12 v13 #t17 #q11))
           ((move v12 v13 #t18 #q12))
           ((move v12 v13 #t19 #q13))
           ((move v12 v13 #t2 #q3))
           ((move v12 v13 #t21 #q14))
           ((move v12 v13 #t27 #q5))
           ((move v12 v13 #t37 #q15))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q0 #t26 #q4))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t3 v15))
           ((move v14 #q1 #t30 #q4))
           ((move v14 #q1 #t31 #q7))
           ((move v14 #q1 #t32 #q6))
           ((move v14 #q1 #t33 #q0))
           ((move v14 #q1 #t35 #q10))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t34 #q1))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t25 #q1))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t22 #q0))
           ((move v14 #q6 #t28 #q1))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t24 #q6))
           ((move v14 #q7 #t29 #q1))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t10 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q9))
           ((move v14 v15 #t15 #q10))
           ((move v14 v15 #t23 #q7))
           ((move v14 v15 #t6 #q0))
           ((move v14 v15 #t7 #q4))
           ((calibrate v12 #q11 #y7 v18 v10))
           ((calibrate v12 #q12 #y8 v19 v10))
           ((calibrate v12 #q13 #y9 v17 v10))
           ((calibrate v12 #q8 #y6 v20 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q4 #y3 v20 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((calibrate v14 #q7 #y5 v17 v10))
           ((take_image v12 #q11 #y7 v18 v10 v11))
           ((take_image v12 #q12 #y8 v19 v10 v11))
           ((take_image v12 #q13 #y9 v17 v10 v11))
           ((take_image v12 #q8 #y6 v20 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q4 #y3 v20 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q7 #y5 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `new-axiom@0()`, which is an axiom representing a complex set of conditions that need to be met. Let's break down the `new-axiom@0()` definition:
           
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           From the initial state, we already have:
           - `atconf(v12, v13)`: Rover `v12` is at configuration `v13`.
           - `atconf(v14, v15)`: Rover `v14` is at configuration `v15`.
           - `free(v12, v16)`: Rover `v12` has its store `v16` free.
           - `free(v14, v16)`: Rover `v14` has its store `v16` free.
           
           So, the remaining goals are:
           1. `receivedimage(v17, v11)`
           2. `receivedimage(v18, v11)`
           3. `receivedimage(v19, v11)`
           4. `receivedimage(v20, v11)`
           5. `type(?stone, v2)` and `receivedanalysis(?stone)` for all rocks of type `v2`.
           6. `type(?soil, v6)` and `receivedanalysis(?soil)` for all rocks of type `v6`.
           
           Let's list the rocks and their types:
           - `v1` is of type `v2` (stone)
           - `v3` is of type `v2` (stone)
           - `v4` is of type `v2` (stone)
           - `v5` is of type `v6` (soil)
           - `v7` is of type `v6` (soil)
           - `v8` is of type `v6` (soil)
           
           So, we need to ensure that `receivedanalysis(v1)`, `receivedanalysis(v3)`, `receivedanalysis(v4)`, `receivedanalysis(v5)`, `receivedanalysis(v7)`, and `receivedanalysis(v8)` are true.
           
           We have two rovers: `v12` and `v14`. Both have camera `v10` which supports mode `v11`. Both have store `v16`.
           
           To achieve `receivedimage(O, M)`:
           1. Calibrate camera `v10` on a rover at a configuration where it can see objective `O`.
           2. Take an image of objective `O` using the calibrated camera.
           3. Move the rover to a configuration where it can communicate with lander `v9`.
           4. Send the image to the lander.
           
           To achieve `receivedanalysis(R)`:
           1. Move a rover to a configuration where it is above rock `R`.
           2. Sample rock `R`. This will make `analyzed(rover, R)` true and `full(rover, v16)` (store `v16` will be full).
           3. Move the rover to a configuration where it can communicate with lander `v9`.
           4. Send the analysis of rock `R` to the lander.
           5. If the store becomes full, `drop_rock` to free it up for more samples. However, in this problem, sampling `v16` seems to directly satisfy `analyzed` and `full`, but there are no constraints on sampling multiple rocks from one store. It doesn't seem to imply the store is "full" preventing more samples but rather just that *that* sample took up the storage. The goal simply requires analysis to be *received* not for all samples to be taken with one full store. The initial state and actions suggest that `sample_rock` makes `full(v, s)` true and `free(v,s)` false. And `drop_rock` makes `free(v,s)` true and `full(v,s)` false. So a rover can only sample one rock at a time. This means if we sample a rock, we must send its analysis and then drop it before sampling another rock with the same rover.
           
           Let's organize the tasks for each rover to minimize movements and achieve the goals.
           
           **Rover v14 initial state:**
           - At `v15`
           - Camera `v10` onboard, supports `v11`
           - Store `v16` is free
           
           **Rover v12 initial state:**
           - At `v13`
           - Camera `v10` onboard, supports `v11`
           - Store `v16` is free
           
           **Objectives for image transmission (using v11 mode):**
           - v17: Rover v14 at #q7, Rover v12 at #q13
           - v18: Rover v14 at #q6, Rover v12 at #q11
           - v19: Rover v14 at #q0, Rover v12 at #q12
           - v20: Rover v14 at #q4, Rover v12 at #q8
           
           **Rocks for analysis:**
           Type `v2` (stone): v1, v3, v4
           Type `v6` (soil): v5, v7, v8
           
           **Rover positions above rocks:**
           - v14 above v5 at #q9 (v6)
           - v14 above v3 at #q10 (v2)
           - v14 above v4 at #o5 (v2)
           - v14 above v8 at #o5 (v6)
           - v14 above v7 at #o5 (v6)
           - v14 above v1 at #o5 (v2)
           
           - v12 above v5 at #q3 (v6)
           - v12 above v3 at #q5 (v2)
           - v12 above v4 at #q14 (v2)
           - v12 above v8 at #q15 (v6)
           - v12 above v7 at #q17 (v6)
           - v12 above v1 at #q16 (v2)
           
           **Communication configs for rovers:**
           - v14 at #q1 (to lander v9)
           - v12 at #q2 (to lander v9)
           
           Let's plan for Rover `v14` first. It starts at `v15`.
           It needs to send images for v17, v18, v19, v20. It needs to analyze rocks v1, v3, v4, v5, v7, v8 (or some combination with v12).
           
           **Strategy:**
           1. Focus Rover `v14` on images and analysis. Rover `v12` can do the rest.
           2. For Rover `v14`:
               - Capture all images.
               - Move to a comms location.
               - Send all captured images.
               - Sample a rock, move to comms, send analysis, drop rock. Repeat for all its assigned rocks.
           
           **Rover v14 Plan:**
           - Initial config: `v15`
           - Image targets: `v19` at `#q0`, `v17` at `#q7`, `v18` at `#q6`, `v20` at `#q4`.
           - Rock targets: `v5` at `#q9`, `v3` at `#q10`, `v4` at `#o5`, `v8` at `#o5`, `v7` at `#o5`, `v1` at `#o5`.
           - Comms config: `#q1`.
           
           Let's make Rover `v14` handle the images and some rocks.
           Let's make Rover `v12` handle the remaining rocks.
           
           **Rover v14 Actions:**
           
           1.  **Image v19**:
               - `move v14 v15 #t6 #q0` (to see v19)
               - `calibrate v14 #q0 #y0 v19 v10`
               - `take_image v14 #q0 #y0 v19 v10 v11`
           2.  **Image v17**:
               - `move v14 #q0 #o2 #q7` (to see v17)
               - `calibrate v14 #q7 #y5 v17 v10`
               - `take_image v14 #q7 #y5 v17 v10 v11`
           3.  **Image v18**:
               - `move v14 #q7 #o2 #q6` (to see v18)
               - `calibrate v14 #q6 #y4 v18 v10`
               - `take_image v14 #q6 #y4 v18 v10 v11`
           4.  **Image v20**:
               - `move v14 #q6 #o2 #q4` (to see v20)
               - `calibrate v14 #q4 #y3 v20 v10`
               - `take_image v14 #q4 #y3 v20 v10 v11`
           
               Now all images for v17, v18, v19, v20 are taken by v14. Let's send them.
           5.  **Move to comms**:
               - `move v14 #q4 #t25 #q1` (to comms config for v14)
           6.  **Send images**:
               - `send_image v14 #q1 #y1 v9 v19 v11`
               - `send_image v14 #q1 #y1 v9 v17 v11`
               - `send_image v14 #q1 #y1 v9 v18 v11`
               - `send_image v14 #q1 #y1 v9 v20 v11`
           
               All image goals are met. Now for rock analysis. Rover `v14` will sample all rocks it can reach from its current comms position, or move efficiently between sampling spots and comms.
               Let's assign v14 to sample all rocks reachable from #o5 and #q9 and #q10.
               Rocks: v1, v3, v4, v5, v7, v8.
               v14 above v5 at #q9 (v6)
               v14 above v3 at #q10 (v2)
               v14 above v4 at #o5 (v2)
               v14 above v8 at #o5 (v6)
               v14 above v7 at #o5 (v6)
               v14 above v1 at #o5 (v2)
           
               It seems `v14` can get to `#q9`, `#q10`, and `#o5`. Let's assume it can reach `#o5` from `#q9` or `#q10` easily.
               Let's make v14 sample v1, v3, v4, v5, v7, v8 (all of them). It has to drop a rock between each sample since it only has one store. This will be a long plan.
           
           **Revised strategy for rocks:**
           Given that the goal only asks for `receivedanalysis(?r)` for all rocks of type `v2` and type `v6`, and not specific rocks, let's distribute the work. There are 3 rocks of type `v2` and 3 rocks of type `v6`. Each rover needs to sample at least one rock of type `v2` and one of type `v6` to fulfill the goal if not all rocks are sampled. However, the axiom implies *all* rocks of type `v2` and `v6` should be analyzed, `type(?stone, v2) AND receivedanalysis(?stone)`. So we need to analyze v1, v3, v4, v5, v7, v8.
           
           Let's make Rover v14 sample v1, v3, v4 and Rover v12 sample v5, v7, v8. This will reduce back and forth.
           
           **Rover v14 rock analysis (v1, v3, v4):**
           - Current config: `#q1` (comms)
           - Rock v1 is at #o5 for v14.
           - Rock v3 is at #q10 for v14.
           - Rock v4 is at #o5 for v14.
           
           1.  **Sample v1 (type v2):**
               - `move v14 #q1 #o2 #o5` (to above v1)
               - `sample_rock v14 #o5 v1 v16`
               - `move v14 #o5 #o2 #q1` (back to comms)
               - `send_analysis v14 #q1 #y1 v9 v1`
               - `drop_rock v14 v16`
           2.  **Sample v3 (type v2):**
               - `move v14 #q1 #t35 #q10` (to above v3)
               - `sample_rock v14 #q10 v3 v16`
               - `move v14 #q10 #t34 #q1` (back to comms)
               - `send_analysis v14 #q1 #y1 v9 v3`
               - `drop_rock v14 v16`
           3.  **Sample v4 (type v2):**
               - `move v14 #q1 #o2 #o5` (to above v4) - if v14 is already at #q1 then need to move to #o5
               - `sample_rock v14 #o5 v4 v16`
               - `move v14 #o5 #o2 #q1` (back to comms)
               - `send_analysis v14 #q1 #y1 v9 v4`
               - `drop_rock v14 v16`
           
           Now, let's plan for Rover `v12`. It starts at `v13`.
           It needs to sample rocks v5, v7, v8 (all type v6).
           - Current config: `v13`
           - Rock v5 is at #q3 for v12.
           - Rock v7 is at #q17 for v12.
           - Rock v8 is at #q15 for v12.
           - Comms config for v12: `#q2`.
           
           **Rover v12 Actions (for rocks v5, v7, v8):**
           
           1.  **Sample v5 (type v6):**
               - `move v12 v13 #t2 #q3` (to above v5)
               - `sample_rock v12 #q3 v5 v16`
               - `move v12 #q3 #t4 #q2` (to comms)
               - `send_analysis v12 #q2 #y2 v9 v5`
               - `drop_rock v12 v16`
           2.  **Sample v7 (type v6):**
               - `move v12 #q2 #t42 #q17` (to above v7)
               - `sample_rock v12 #q17 v7 v16`
               - `move v12 #q17 #o2 #q2` (back to comms)
               - `send_analysis v12 #q2 #y2 v9 v7`
               - `drop_rock v12 v16`
           3.  **Sample v8 (type v6):**
               - `move v12 #q2 #t40 #q15` (to above v8)
               - `sample_rock v12 #q15 v8 v16`
               - `move v12 #q15 #t36 #q2` (back to comms)
               - `send_analysis v12 #q2 #y2 v9 v8`
               - `drop_rock v12 v16`
           
           This plan covers all required `receivedimage` and `receivedanalysis` predicates. The initial state already satisfies `atconf` and `free` conditions for both rovers.
           
           One crucial detail is that `calibrate` invalidates itself after `take_image`, meaning you need to recalibrate for each new image, *or* if the rover moves to a new configuration from which an image is taken. Since `v14` moves to a new config for each image (`#q0`, `#q7`, `#q6`, `#q4`), it needs to calibrate before each `take_image` action. This is already handled in the plan.
           
           Double check current configurations and required movements:
           - `v14` starts at `v15`.
           - First image is `v19` at `#q0`. Action `move v14 v15 #t6 #q0` is correct.
           - Second image is `v17` at `#q7`. Action `move v14 #q0 #o2 #q7` is correct.
           - Third image is `v18` at `#q6`. Action `move v14 #q7 #o2 #q6` is correct.
           - Fourth image is `v20` at `#q4`. Action `move v14 #q6 #o2 #q4` is correct.
           - Move to comms for `v14` is `#q1`. Action `move v14 #q4 #t25 #q1` is correct.
           - Rover `v14` now at `#q1` for sending images.
           
           - `v14` at `#q1`. Samples `v1` at `#o5`. Action `move v14 #q1 #o2 #o5` is correct.
           - `v14` at `#o5`. After sampling `v1`, moves to `#q1`. Action `move v14 #o5 #o2 #q1` is correct.
           - `v14` at `#q1`. Samples `v3` at `#q10`. Action `move v14 #q1 #t35 #q10` is correct.
           - `v14` at `#q10`. After sampling `v3`, moves to `#q1`. Action `move v14 #q10 #t34 #q1` is correct.
           - `v14` at `#q1`. Samples `v4` at `#o5`. Action `move v14 #q1 #o2 #o5` is correct.
           - `v14` at `#o5`. After sampling `v4`, moves to `#q1`. Action `move v14 #o5 #o2 #q1` is correct.
           
           - `v12` starts at `v13`.
           - Samples `v5` at `#q3`. Action `move v12 v13 #t2 #q3` is correct.
           - `v12` at `#q3`. After sampling `v5`, moves to `#q2`. Action `move v12 #q3 #t4 #q2` is correct.
           - `v12` at `#q2`. Samples `v7` at `#q17`. Action `move v12 #q2 #t42 #q17` is correct.
           - `v12` at `#q17`. After sampling `v7`, moves to `#q2`. Action `move v12 #q17 #o2 #q2` is correct.
           - `v12` at `#q2`. Samples `v8` at `#q15`. Action `move v12 #q2 #t40 #q15` is correct.
           - `v12` at `#q15`. After sampling `v8`, moves to `#q2`. Action `move v12 #q15 #t36 #q2` is correct.
           
           The plan appears to be sound and addresses all parts of the goal.
           The goal `new-axiom@0()` represents several conditions. The initial state already satisfies `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)`. The remaining conditions are:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `receivedanalysis(?r)` for all rocks `?r` of type `v2` (v1, v3, v4)
           - `receivedanalysis(?r)` for all rocks `?r` of type `v6` (v5, v7, v8)
           
           The plan focuses on Rover v14 for capturing and sending all images, and also for sampling and sending analysis for rocks v1, v3, v4. Rover v12 is dedicated to sampling and sending analysis for rocks v5, v7, v8. This distribution of tasks aims to minimize redundant movements and achieve the goal efficiently. Each `sample_rock` action is followed by `send_analysis` and `drop_rock` to ensure the store is free for the next sample and the analysis is sent. Calibrating the camera before each `take_image` is also handled.
           
           --Plan--:
           (move v14 v15 #t6 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #o2 #q7)
           (calibrate v14 #q7 #y5 v17 v10)
           (take_image v14 #q7 #y5 v17 v10 v11)
           (move v14 #q7 #o2 #q6)
           (calibrate v14 #q6 #y4 v18 v10)
           (take_image v14 #q6 #y4 v18 v10 v11)
           (move v14 #q6 #o2 #q4)
           (calibrate v14 #q4 #y3 v20 v10)
           (take_image v14 #q4 #y3 v20 v10 v11)
           (move v14 #q4 #t25 #q1)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (move v14 #q1 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (move v14 #o5 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q1 #t35 #q10)
           (sample_rock v14 #q10 v3 v16)
           (move v14 #q10 #t34 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #o5)
           (sample_rock v14 #o5 v4 v16)
           (move v14 #o5 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v4)
           (drop_rock v14 v16)
           (move v12 v13 #t2 #q3)
           (sample_rock v12 #q3 v5 v16)
           (move v12 #q3 #t4 #q2)
           (send_analysis v12 #q2 #y2 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q2 #t42 #q17)
           (sample_rock v12 #q17 v7 v16)
           (move v12 #q17 #o2 #q2)
           (send_analysis v12 #q2 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q2 #t40 #q15)
           (sample_rock v12 #q15 v8 v16)
           (move v12 #q15 #t36 #q2)
           (send_analysis v12 #q2 #y2 v9 v8)
           (drop_rock v12 v16)

