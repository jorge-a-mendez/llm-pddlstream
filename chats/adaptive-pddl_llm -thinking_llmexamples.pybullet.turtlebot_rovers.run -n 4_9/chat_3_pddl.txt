User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom rock(v4)
           Atom camera(v10)
           Atom rock(v3)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom type(v5, v6)
           Atom supports(v10, v11)
           Atom mode(v11)
           Atom atconf(v12, v13)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom rock(v5)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom objective(v20)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom objective(v18)
           Atom onboard(v10, v14)
           Atom type(v3, v2)
           Atom type(v1, v2)
           Atom objective(v17)
           Atom store(v16)
           Atom onboard(v10, v12)
           Atom type(v7, v6)
           Atom lander(v9)
           Atom objective(v19)
           Atom type(v4, v2)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #q0, #y0, v19)
           Atom imagerange(v14, #q0, v19)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q10, v3)
           Atom conf(v14, #q10)
           Atom imagevisible(v14, #q7, #y5, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom imagevisible(v12, #q11, #y7, v18)
           Atom imagerange(v12, #q11, v18)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom above(v12, #q5, v3)
           Atom conf(v12, #q5)
           Atom imagevisible(v12, #q13, #y9, v17)
           Atom imagerange(v12, #q13, v17)
           Atom conf(v12, #q13)
           Atom ray(#y9)
           Atom imagevisible(v12, #q12, #y8, v19)
           Atom imagerange(v12, #q12, v19)
           Atom conf(v12, #q12)
           Atom ray(#y8)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom imagevisible(v12, #q8, #y6, v20)
           Atom imagerange(v12, #q8, v20)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom imagevisible(v14, #q4, #y3, v20)
           Atom imagerange(v14, #q4, v20)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v1)
           Atom above(v14, #o5, v1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t3, v15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #t14, #q9)
           Atom motion(v14, #q9, #t10, #q1)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #t7, #q4)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t6, #q0)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #t16, #q8)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, v15, #t15, #q10)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, v13, #t19, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, v13, #t17, #q11)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, v13, #t18, #q12)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, v13, #t2, #q3)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q12, #t13, #q2)
           Atom motion(v12, #q3, #t4, #q2)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q5, #t5, #q2)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q2, #t1, v13)
           Atom motion(v12, #q2, #t9, #q5)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q11, #t12, #q2)
           Atom motion(v12, #q8, #t11, #q2)
           Atom motion(v12, #q2, #t8, #q3)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, v15)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v12 #q5 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q10 v3 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t12 #q2))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t13 #q2))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #t1 v13))
           ((move v12 #q2 #t8 #q3))
           ((move v12 #q2 #t9 #q5))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t4 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t5 #q2))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t11 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t16 #q8))
           ((move v12 v13 #t17 #q11))
           ((move v12 v13 #t18 #q12))
           ((move v12 v13 #t19 #q13))
           ((move v12 v13 #t2 #q3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t3 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t10 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q9))
           ((move v14 v15 #t15 #q10))
           ((move v14 v15 #t6 #q0))
           ((move v14 v15 #t7 #q4))
           ((calibrate v12 #q11 #y7 v18 v10))
           ((calibrate v12 #q12 #y8 v19 v10))
           ((calibrate v12 #q13 #y9 v17 v10))
           ((calibrate v12 #q8 #y6 v20 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q4 #y3 v20 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((calibrate v14 #q7 #y5 v17 v10))
           ((take_image v12 #q11 #y7 v18 v10 v11))
           ((take_image v12 #q12 #y8 v19 v10 v11))
           ((take_image v12 #q13 #y9 v17 v10 v11))
           ((take_image v12 #q8 #y6 v20 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q4 #y3 v20 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q7 #y5 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Finalized Plan for New Axiom Fulfillment**
           
           Okay, so I've been tasked with crafting a plan to achieve `new-axiom@0()` in the `rovers` domain.  Breaking it down, it's essentially a conjunction of several conditions: being at the initial configurations, having free stores, and achieving specific image and analysis transmissions. The initial state already satisfies some conditions, so let's focus on the remaining tasks.
           
           My primary goal is to get images and analyses to the lander. First, I need to get the images; this looks like the harder part of this. To get `receivedimage` for the four objectives, I need `send_image`. This needs the rover to *have* the image, which means it took it, and the rover has to be at the correct configuration to send them. I've chosen `v14` as the image-taking rover. It seems like the most efficient strategy is to calibrate, take the images, then move to the communication position and send them all at once.
           
           To get the analyses, I need to sample, then send. To get `receivedanalysis` for a rock of type `v2` and another of type `v6`, I need to use `send_analysis`. To get this, I need `analyzed`. To get that, I need to `sample_rock`.  I've decided to use rover `v12` for this.
           
           I must *not* leave `v12` with a sample in its store. After sampling, I *must* drop it, then move to com-visible config, then send the analysis, and then return.
           
           In summary, the plan involves the rovers moving to the correct configuration and performing several calibrate, take image, sample, drop and send actions, and then returning to the initial configurations at the end of the plan. I've made some assumptions:
           - The rovers will follow the instructions in order.
           - Blocked is always false in this domain.
           - There are no conflicts in movement for the rovers.
           
           With this in mind, here is my finalized, detailed plan, and the action that will happen in order to satisfy the `new-axiom@0()` conditions:
           
           **Rover v14 (Images):**
           1. `(move v14 v15 #o2 #q7)`
           2. `(calibrate v14 #q7 #y5 v17 v10)`
           3. `(take_image v14 #q7 #y5 v17 v10 v11)`
           4. `(move v14 #q7 #o2 #q6)`
           5. `(calibrate v14 #q6 #y4 v18 v10)`
           6. `(take_image v14 #q6 #y4 v18 v10 v11)`
           7. `(move v14 #q6 #o2 #q0)`
           8. `(calibrate v14 #q0 #y0 v19 v10)`
           9. `(take_image v14 #q0 #y0 v19 v10 v11)`
           10. `(move v14 #q0 #o2 #q4)`
           11. `(calibrate v14 #q4 #y3 v20 v10)`
           12. `(take_image v14 #q4 #y3 v20 v10 v11)`
           13. `(move v14 #q4 #o2 #q1)`
           14. `(send_image v14 #q1 #y1 v9 v17 v11)`
           15. `(send_image v14 #q1 #y1 v9 v18 v11)`
           16. `(send_image v14 #q1 #y1 v9 v19 v11)`
           17. `(send_image v14 #q1 #y1 v9 v20 v11)`
           18. `(move v14 #q1 #t3 v15)`
           
           **Rover v12 (Analysis):**
           1. `(move v12 v13 #o2 #o5)`
           2. `(sample_rock v12 #o5 v4 v16)`
           3. `(drop_rock v12 v16)`
           4. `(move v12 #o5 #o2 #q3)`
           5. `(sample_rock v12 #q3 v5 v16)`
           6. `(drop_rock v12 v16)`
           7. `(move
)

Model:     **Finalized Plan for New Axiom Fulfillment**
           
           Okay, so I've been tasked with crafting a plan to achieve `new-axiom@0()` in the `rovers` domain.  Breaking it down, it's essentially a conjunction of several conditions: being at the initial configurations, having free stores, and achieving specific image and analysis transmissions. The initial state already satisfies some conditions, so let's focus on the remaining tasks.
           
           My primary goal is to get images and analyses to the lander. First, I need to get the images; this looks like the harder part of this. To get `receivedimage` for the four objectives, I need `send_image`. This needs the rover to *have* the image, which means it took it, and the rover has to be at the correct configuration to send them. I've chosen `v14` as the image-taking rover. It seems like the most efficient strategy is to calibrate, take the images, then move to the communication position and send them all at once.
           
           To get the analyses, I need to sample, then send. To get `receivedanalysis` for a rock of type `v2` and another of type `v6`, I need to use `send_analysis`. To get this, I need `analyzed`. To get that, I need to `sample_rock`.  I've decided to use rover `v12` for this.
           
           I must *not* leave `v12` with a sample in its store. After sampling, I *must* drop it, then move to com-visible config, then send the analysis, and then return.
           
           In summary, the plan involves the rovers moving to the correct configuration and performing several calibrate, take image, sample, drop and send actions, and then returning to the initial configurations at the end of the plan. I've made some assumptions:
           - The rovers will follow the instructions in order.
           - Blocked is always false in this domain.
           - There are no conflicts in movement for the rovers.
           
           With this in mind, here is my finalized, detailed plan, and the action that will happen in order to satisfy the `new-axiom@0()` conditions:
           
           **Rover v14 (Images):**
           1. `(move v14 v15 #o2 #q7)`
           2. `(calibrate v14 #q7 #y5 v17 v10)`
           3. `(take_image v14 #q7 #y5 v17 v10 v11)`
           4. `(move v14 #q7 #o2 #q6)`
           5. `(calibrate v14 #q6 #y4 v18 v10)`
           6. `(take_image v14 #q6 #y4 v18 v10 v11)`
           7. `(move v14 #q6 #o2 #q0)`
           8. `(calibrate v14 #q0 #y0 v19 v10)`
           9. `(take_image v14 #q0 #y0 v19 v10 v11)`
           10. `(move v14 #q0 #o2 #q4)`
           11. `(calibrate v14 #q4 #y3 v20 v10)`
           12. `(take_image v14 #q4 #y3 v20 v10 v11)`
           13. `(move v14 #q4 #o2 #q1)`
           14. `(send_image v14 #q1 #y1 v9 v17 v11)`
           15. `(send_image v14 #q1 #y1 v9 v18 v11)`
           16. `(send_image v14 #q1 #y1 v9 v19 v11)`
           17. `(send_image v14 #q1 #y1 v9 v20 v11)`
           18. `(move v14 #q1 #t3 v15)`
           
           **Rover v12 (Analysis):**
           1. `(move v12 v13 #o2 #o5)`
           2. `(sample_rock v12 #o5 v4 v16)`
           3. `(drop_rock v12 v16)`
           4. `(move v12 #o5 #o2 #q3)`
           5. `(sample_rock v12 #q3 v5 v16)`
           6. `(drop_rock v12 v16)`
           7. `(move

