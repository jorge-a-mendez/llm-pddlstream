User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p6: object
           p7: object
           p8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p8 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.085), (0.035, -0.015)).
           Object v9 is a pose with position (0.0, -0.325, 0.781) and quaternion (0.0, 0.0, -0.211, 0.977).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, 0.015), (0.035, 0.085)).
           Object p7 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (0.13, -0.422, 0.781) and quaternion (0.0, 0.0, 0.655, 0.755).
           Object v13 is a pose with position (-0.125, 0.325, 0.781) and quaternion (0.0, 0.0, 0.922, 0.388).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v14, v16)
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom supported(v14, p8, v16)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom stackable(v14, v10)
           Atom pose(v12, v13)
           Atom atpose(v8, v9)
           Atom stackable(v12, v16)
           Atom ataconf(v4, v5)
           Atom atbconf(v3)
           Atom stackable(v12, v10)
           Atom aconf(v6, v7)
           Atom atpose(v14, v15)
           Atom supported(v14, v15, v11)
           Atom pose(v14, v15)
           Atom bconf(v3)
           Atom pose(v8, v9)
           Atom supported(v8, p6, v16)
           Atom pose(v14, p8)
           Atom supported(v12, v13, v11)
           Atom controllable(v4)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom arm(v4)
           Atom graspable(v8)
           Atom supported(v12, p7, v16)
           Atom pose(v12, p7)
           Atom supported(v8, v9, v11)
           Atom atpose(v12, v13)
           Atom pose(v8, p6)
           Atom arm(v6)
           Atom stackable(v8, v16)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom stackable(v8, v10)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom canmove()
           Atom graspable(v14)
           Atom graspable(v12)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v12, #g1)
           Atom grasp(v14, #g0)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #g2)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v8, #o2, v16)
           Atom supported(v14, #o2, v16)
           Atom supported(v12, #o2, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g1, #q1, #t1)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v12, p7, #g1, #q3, #t3)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v8, v9, #g2, #q4, #t8)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v8, p6, #g2, #q2, #t2)
           Atom bconf(#q5)
           Atom atraj(#t9)
           Atom kin(v4, v14, v15, #g0, #q5, #t9)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, p8, #g0, #q0, #t0)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(v3, #o0, #q5)
           Atom btraj(#t12)
           Atom basemotion(#q5, #t12, #q0)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom btraj(#t13)
           Atom basemotion(#q2, #t13, #q5)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q3, #o0, #q1)
           Atom btraj(#t10)
           Atom basemotion(#q1, #t10, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q5)
           Atom btraj(#t11)
           Atom basemotion(#q4, #t11, #q2)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q5, #o0, #q4)
           Atom btraj(#t14)
           Atom basemotion(#q3, #t14, #q4)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q2, #o0, #q4)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q3 #t10))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t13))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q4 #t14))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q2 #t11))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q0 #t12))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t4))
           ((move_base v3 #q1 #t5))
           ((move_base v3 #q2 #t6))
           ((move_base v3 #q3 #t7))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p7 #g1 #q3 #t3))
           ((place v4 v12 p7 #g1 #q3 #t3))
           ((pick v4 v12 v13 #g1 #q1 #t1))
           ((place v4 v12 v13 #g1 #q1 #t1))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 p8 #g0 #q0 #t0))
           ((place v4 v14 p8 #g0 #q0 #t0))
           ((pick v4 v14 v15 #g0 #q5 #t9))
           ((place v4 v14 v15 #g0 #q5 #t9))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 p6 #g2 #q2 #t2))
           ((place v4 v8 p6 #g2 #q2 #t2))
           ((pick v4 v8 v9 #g2 #q4 #t8))
           ((place v4 v8 v9 #g2 #q4 #t8))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three objects, `v8`, `v12`, and `v14`, and two arms, `v4` and `v6`. Currently, `v8` is at `v9` on `v11`, `v12` is at `v13` on `v11`, and `v14` is at `v15` on `v11`. The goal is to place all three objects on `v16`. Since `v11` is a large surface and `v16` is a smaller surface, objects can be moved from `v11` to `v16`. The `v4` arm is currently available and `handempty`. The other arm, `v6`, is also `handempty` but doesn't have valid `kin` actions. I will focus on using `v4`.
           
           I will pick `v12` from `v13` on `v11` and place it at `p7` on `v16`. Then I will pick `v14` from `v15` on `v11` and place it at `p8` on `v16`. Finally, I will pick `v8` from `v9` on `v11` and place it at `p6` on `v16`.
           
           --Plan--:
           (move_base v3 #q1 #t5)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #q3 #t10)
           (place v4 v12 p7 #g1 #q3 #t3)
           (move_base #q3 #q5 #o0)
           (pick v4 v14 v15 #g0 #q5 #t9)
           (move_base #q5 #q0 #t12)
           (place v4 v14 p8 #g0 #q0 #t0)
           (move_base #q0 #q4 #o0)
           (pick v4 v8 v9 #g2 #q4 #t8)
           (move_base #q4 #q2 #t11)
           (place v4 v8 p6 #g2 #q2 #t2)

