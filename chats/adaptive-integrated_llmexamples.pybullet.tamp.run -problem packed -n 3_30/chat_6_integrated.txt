User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v40: object
           v41: object
           v42: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p8 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.085), (0.035, -0.015)).
           Object p7 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.125, 0.325, 0.781) and quaternion (0.0, 0.0, 0.922, 0.388).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v15 is a pose with position (0.13, -0.422, 0.781) and quaternion (0.0, 0.0, 0.655, 0.755).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, 0.015), (0.035, 0.085)).
           Object v9 is a pose with position (0.0, -0.325, 0.781) and quaternion (0.0, 0.0, -0.211, 0.977).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v14, v16)
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom supported(v14, p8, v16)
           Atom kin(v27, v33, p9, v40, v30, v31)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom stackable(v14, v10)
           Atom pose(v12, v13)
           Atom kin(v27, v32, p10, v41, v30, v31)
           Atom atpose(v8, v9)
           Atom supported(v12, p10, v16)
           Atom stackable(v12, v16)
           Atom ataconf(v4, v5)
           Atom atbconf(v3)
           Atom stackable(v12, v10)
           Atom pose(v12, p10)
           Atom pose(v14, p9)
           Atom supported(v8, p11, v16)
           Atom aconf(v6, v7)
           Atom atpose(v14, v15)
           Atom supported(v14, v15, v11)
           Atom supported(v14, p9, v16)
           Atom pose(v14, v15)
           Atom bconf(v3)
           Atom pose(v8, v9)
           Atom supported(v8, p6, v16)
           Atom pose(v14, p8)
           Atom supported(v12, v13, v11)
           Atom controllable(v4)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom arm(v4)
           Atom graspable(v8)
           Atom supported(v12, p7, v16)
           Atom pose(v12, p7)
           Atom supported(v8, v9, v11)
           Atom atpose(v12, v13)
           Atom pose(v8, p6)
           Atom arm(v6)
           Atom stackable(v8, v16)
           Atom kin(v27, v28, p11, v42, v30, v31)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom stackable(v8, v10)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom canmove()
           Atom graspable(v14)
           Atom pose(v8, p11)
           Atom graspable(v12)
           Atom grasp(v12, #g1)
           Atom grasp(v14, #g0)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v8, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #g2)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom supported(v14, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom bconf(#q6)
           Atom atraj(#t17)
           Atom kin(v4, v12, p10, #g1, #q6, #t17)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g1, #q1, #t1)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v12, p7, #g1, #q3, #t3)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, p8, #g0, #q0, #t0)
           Atom bconf(#q5)
           Atom atraj(#t9)
           Atom kin(v4, v14, v15, #g0, #q5, #t9)
           Atom bconf(#q7)
           Atom atraj(#t20)
           Atom kin(v4, v14, p9, #g0, #q7, #t20)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v8, p6, #g2, #q2, #t2)
           Atom bconf(#q8)
           Atom atraj(#t21)
           Atom kin(v4, v8, p11, #g2, #q8, #t21)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v8, v9, #g2, #q4, #t8)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom btraj(#t18)
           Atom basemotion(#q5, #t18, #q6)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q2)
           Atom btraj(#t13)
           Atom basemotion(#q2, #t13, #q5)
           Atom btraj(#t31)
           Atom basemotion(v3, #t31, #q5)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom btraj(#t15)
           Atom basemotion(#q3, #t15, #q5)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q7, #o0, #q3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q0, #o0, #q5)
           Atom btraj(#t12)
           Atom basemotion(#q5, #t12, #q0)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q5, #o0, #q1)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q1)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t22)
           Atom basemotion(#q6, #t22, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t19)
           Atom basemotion(#q1, #t19, #q6)
           Atom btraj(#t23)
           Atom basemotion(#q7, #t23, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t10)
           Atom basemotion(#q1, #t10, #q3)
           Atom basemotion(#q4, #o0, #q4)
           Atom btraj(#t11)
           Atom basemotion(#q4, #t11, #q2)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q4, #o0, #q3)
           Atom btraj(#t14)
           Atom basemotion(#q3, #t14, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom btraj(#t28)
           Atom basemotion(#q4, #t28, #q6)
           Atom btraj(#t25)
           Atom basemotion(#q6, #t25, #q4)
           Atom btraj(#t26)
           Atom basemotion(#q7, #t26, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom btraj(#t16)
           Atom basemotion(#q0, #t16, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom btraj(#t29)
           Atom basemotion(#q4, #t29, #q7)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q8, #o0, v3)
           Atom btraj(#t30)
           Atom basemotion(#q4, #t30, #q8)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q5, #o0, #q8)
           Atom btraj(#t27)
           Atom basemotion(#q8, #t27, #q4)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q3, #o0, #q8)
           Atom btraj(#t24)
           Atom basemotion(#q8, #t24, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q4 #t16))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q3 #t10))
           ((move_base #q1 #q6 #t19))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t13))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q4 #t14))
           ((move_base #q3 #q5 #t15))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q2 #t11))
           ((move_base #q4 #q6 #t28))
           ((move_base #q4 #q7 #t29))
           ((move_base #q4 #q8 #t30))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q0 #t12))
           ((move_base #q5 #q6 #t18))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q1 #t22))
           ((move_base #q6 #q4 #t25))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q1 #t23))
           ((move_base #q7 #q4 #t26))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q1 #t24))
           ((move_base #q8 #q4 #t27))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q5 #t31))
           ((move_base v3 #q0 #t4))
           ((move_base v3 #q1 #t5))
           ((move_base v3 #q2 #t6))
           ((move_base v3 #q3 #t7))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p10 #g1 #q6 #t17))
           ((place v4 v12 p10 #g1 #q6 #t17))
           ((pick v4 v12 p7 #g1 #q3 #t3))
           ((place v4 v12 p7 #g1 #q3 #t3))
           ((pick v4 v12 v13 #g1 #q1 #t1))
           ((place v4 v12 v13 #g1 #q1 #t1))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 p8 #g0 #q0 #t0))
           ((place v4 v14 p8 #g0 #q0 #t0))
           ((pick v4 v14 p9 #g0 #q7 #t20))
           ((place v4 v14 p9 #g0 #q7 #t20))
           ((pick v4 v14 v15 #g0 #q5 #t9))
           ((place v4 v14 v15 #g0 #q5 #t9))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 p11 #g2 #q8 #t21))
           ((place v4 v8 p11 #g2 #q8 #t21))
           ((pick v4 v8 p6 #g2 #q2 #t2))
           ((place v4 v8 p6 #g2 #q2 #t2))
           ((pick v4 v8 v9 #g2 #q4 #t8))
           ((place v4 v8 v9 #g2 #q4 #t8))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene consists of three objects: `v12`, `v14`, and `v8`. The goal is to place all three objects on `v16`. Currently, `v14` is on `v11` at `v15`, `v8` is on `v11` at `v9`, and `v12` is on `v11` at `v13`. The robot arm `v4` is currently at `v5` and the robot base is at `v3`. `v4` is handempty.
           
           The plan will involve picking each object and placing it onto `v16`. We will use the `#o2` pose, which is supported by `v16`, for placing all objects on `v16`.
           
           First, move the base to a configuration that allows picking up `v14` from `v15`. `q5` is the configuration that supports `kin(v4, v14, v15, #g0, #q5, #t9)`.
           Then, pick up `v14`.
           After picking up `v14`, move the base to `o3`, which is the base configuration for placing `v14` at `#o2` on `v16`.
           Then, place `v14` at `#o2` on `v16`.
           
           Next, pick up `v12` from `v13`. `q1` is the configuration that supports `kin(v4, v12, v13, #g1, #q1, #t1)`.
           After picking up `v12`, move the base to `o3`.
           Then, place `v12` at `#o2` on `v16`.
           
           Finally, pick up `v8` from `v9`. `q4` is the configuration that supports `kin(v4, v8, v9, #g2, #q4, #t8)`.
           After picking up `v8`, move the base to `o3`.
           Then, place `v8` at `#o2` on `v16`.
           
           --Plan--:
           (move_base v3 #q5 #t31)
           (pick v4 v14 v15 #g0 #q5 #t9)
           (move_base #q5 #o3 #o0)
           (place v4 v14 #o2 #g0 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v12 #o2 #g1 #o3 #o4)
           (move_base #o3 #q4 #o0)
           (pick v4 v8 v9 #g2 #q4 #t8)
           (move_base #q4 #o3 #o0)
           (place v4 v8 #o2 #g2 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v16): (0.0 0.0 0.782 0.0)
           (#o2 v12 v16): (0.0 -0.1 0.782 0.0)
           (#o2 v8 v16): (0.0 0.1 0.782 0.0)

User:      Pose #o2 = (0.0 -0.1 0.782 0.0) for object v12 on surface v16 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, -0.13500000149011612), upper=(0.035, -0.06500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.0 0.1 0.782 0.0) for object v8 on surface v16 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, 0.06500000149011612), upper=(0.035, 0.13500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The scene consists of three objects: `v12`, `v14`, and `v8`. The goal is to place all three objects on `v16`. Currently, `v14` is on `v11` at `v15`, `v8` is on `v11` at `v9`, and `v12` is on `v11` at `v13`. The robot arm `v4` is currently at `v5` and the robot base is at `v3`. `v4` is handempty.
           
           The plan will involve picking each object and placing it onto `v16`. We will use the `#o2` pose, which is supported by `v16`, for placing all objects on `v16`. I will choose different coordinates for each object to ensure stability.
           
           First, move the base to a configuration that allows picking up `v14` from `v15`. `q5` is the configuration that supports `kin(v4, v14, v15, #g0, #q5, #t9)`.
           Then, pick up `v14`.
           After picking up `v14`, move the base to `o3`, which is the base configuration for placing `v14` at `#o2` on `v16`.
           Then, place `v14` at `#o2` on `v16`. `v14` has AABB ((-0.035, -0.035), (0.035, 0.035)). `v16` has AABB ((-0.135, -0.135), (0.135, 0.135)). I will place `v14` at (0.0, 0.0, 0.782, 0.0) on `v16`.
           
           Next, pick up `v12` from `v13`. `q1` is the configuration that supports `kin(v4, v12, v13, #g1, #q1, #t1)`.
           Then, pick up `v12`. `v12` has AABB ((-0.035, -0.085), (0.035, -0.015)).
           After picking up `v12`, move the base to `o3`.
           Then, place `v12` at `#o2` on `v16`. I will place `v12` at (0.0, -0.075, 0.782, 0.0) on `v16`.
           
           Finally, pick up `v8` from `v9`. `q4` is the configuration that supports `kin(v4, v8, v9, #g2, #q4, #t8)`.
           Then, pick up `v8`. `v8` has AABB ((-0.035, 0.015), (0.035, 0.085)).
           After picking up `v8`, move the base to `o3`.
           Then, place `v8` at `#o2` on `v16`. I will place `v8` at (0.0, 0.075, 0.782, 0.0) on `v16`.
           
           --Plan--:
           (move_base v3 #q5 #t31)
           (pick v4 v14 v15 #g0 #q5 #t9)
           (move_base #q5 #o3 #o0)
           (place v4 v14 #o2 #g0 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v12 #o2 #g1 #o3 #o4)
           (move_base #o3 #q4 #o0)
           (pick v4 v8 v9 #g2 #q4 #t8)
           (move_base #q4 #o3 #o0)
           (place v4 v8 #o2 #g2 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v16): (0.0 0.0 0.782 0.0)
           (#o2 v12 v16): (0.0 -0.075 0.782 0.0)
           (#o2 v8 v16): (0.0 0.075 0.782 0.0)

