User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v15, v16)
           Atom graspable(v15)
           Atom supported(v12, v13, v14)
           Atom canmove()
           Atom stackable(v12, v10)
           Atom aconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom stackable(v8, v18)
           Atom stackable(v15, v10)
           Atom arm(v4)
           Atom arm(v6)
           Atom supported(v8, v9, v11)
           Atom atpose(v15, v16)
           Atom type(v8, v17)
           Atom atbconf(v3)
           Atom graspable(v12)
           Atom controllable(v4)
           Atom type(v12, v17)
           Atom handempty(v4)
           Atom bconf(v3)
           Atom handempty(v6)
           Atom ataconf(v4, v5)
           Atom supported(v15, v16, v11)
           Atom stackable(v8, v10)
           Atom atpose(v12, v13)
           Atom stackable(v12, v18)
           Atom pose(v12, v13)
           Atom aconf(v6, v7)
           Atom atpose(v8, v9)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom grasp(v15, #o1)
           Atom grasp(v8, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v12, #o1)
           Atom supported(v8, #o2, v18)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, `v15`, `v12`, and `v8`, which are graspable and stackable. There are also arms `v4` and `v6`, both handempty. The robot is currently at base configuration `v3` and arm configurations `v5` (for `v4`) and `v7` (for `v6`).
           
           The goal `new-axiom@0()` can be satisfied by `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, we have `type(v8, v17)` and `type(v12, v17)`, which means `v8` or `v12` could be `?green`.
           
           If `?green` is `v8`:
           - We need `on(v8, v18)`. From the initial state, `atpose(v8, v9)` and `supported(v8, v9, v11)`. We also have `supported(v8, #o2, v18)`. This means if `v8` were at `#o2`, it would be on `v18`.
           
           If `?green` is `v12`:
           - We need `on(v12, v18)`. From the initial state, `atpose(v12, v13)` and `supported(v12, v13, v14)`. We also have `supported(v12, #o2, v18)`. This means if `v12` were at `#o2`, it would be on `v18`.
           
           The only available action instance is `(move_base v3 v3 #o0)`. This action moves the robot base from `v3` to `v3` using trajectory `#o0`. This action does not change the state of any objects or their positions, nor does it affect the `on` predicate. Since there are no actions available to pick up and place objects (e.g., `pick` or `place` actions), we cannot change the `on` predicate for any object. Therefore, the goal `on(?green, v18)` cannot be achieved, as `v8` and `v12` are currently on `v11` and `v14` respectively, and there are no actions to move them to `v18`.
           
           Therefore, the goal is not achievable with the given set of available actions.

