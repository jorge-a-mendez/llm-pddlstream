User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v13 is a base configuration with (x, y, theta) = (1.0, -1.75, 3.142).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.187, -1.929), (-0.821, -1.571)).
           Object v15 is a base configuration with (x, y, theta) = (-1.0, -1.75, 0.0).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.614, 1.933), (0.707, 2.027)).
           Object v1 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.834, -0.173), (-0.748, -0.087)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.55, 2.139), (-0.461, 2.228)).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.839, 2.002), (1.928, 2.092)).
           Object v3 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.312, -1.069), (0.408, -0.973)).
           Object v7 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.379, 1.467), (1.494, 1.583)).
           Object v5 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.026, 0.489), (-1.91, 0.605)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.168, 2.074), (-2.07, 2.171)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.409, 0.55), (-0.289, 0.67)).
           Object v9 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.405, -2.346), (-1.395, -1.654)).
           Object v4 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.852, -1.154), (1.943, -1.062)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.821, -1.929), (1.187, -1.571)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom lander(v9)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom type(v7, v6)
           Atom free(v12, v16)
           Atom supports(v10, v11)
           Atom objective(v19)
           Atom rock(v8)
           Atom rock(v7)
           Atom rover(v14)
           Atom objective(v18)
           Atom atconf(v14, v15)
           Atom camera(v10)
           Atom objective(v17)
           Atom type(v5, v6)
           Atom rover(v12)
           Atom rock(v5)
           Atom free(v14, v16)
           Atom type(v4, v2)
           Atom store(v16)
           Atom type(v1, v2)
           Atom mode(v11)
           Atom conf(v12, v13)
           Atom objective(v20)
           Atom rock(v4)
           Atom rock(v3)
           Atom atconf(v12, v13)
           Atom onboard(v10, v14)
           Atom rock(v1)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q8, #y4, v20)
           Atom imagerange(v12, #q8, v20)
           Atom conf(v12, #q8)
           Atom ray(#y4)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v12, #q4, #y2, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v14, #q2, v1)
           Atom conf(v14, #q2)
           Atom imagevisible(v14, #q14, #y8, v18)
           Atom imagerange(v14, #q14, v18)
           Atom conf(v14, #q14)
           Atom ray(#y8)
           Atom imagevisible(v14, #q13, #y7, v20)
           Atom imagerange(v14, #q13, v20)
           Atom conf(v14, #q13)
           Atom ray(#y7)
           Atom imagevisible(v14, #q15, #y9, v17)
           Atom imagerange(v14, #q15, v17)
           Atom conf(v14, #q15)
           Atom ray(#y9)
           Atom above(v14, #q9, v4)
           Atom conf(v14, #q9)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom above(v14, #q7, v3)
           Atom conf(v14, #q7)
           Atom above(v14, #q10, v7)
           Atom conf(v14, #q10)
           Atom above(v12, #o5, v7)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom comvisible(v12, #q6, #y3, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y3)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q3, v8)
           Atom conf(v14, #q3)
           Atom imagevisible(v14, #q12, #y6, v19)
           Atom imagerange(v14, #q12, v19)
           Atom conf(v14, #q12)
           Atom ray(#y6)
           Atom imagevisible(v12, #q11, #y5, v19)
           Atom imagerange(v12, #q11, v19)
           Atom conf(v12, #q11)
           Atom ray(#y5)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v14, v15, #t25, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, v15, #t14, #q2)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, v15, #t23, #q12)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t20, v13)
           Atom motion(v12, #q4, #t2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v14, #q1, #t0, #q2)
           Atom motion(v14, #q14, #t29, #q1)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q1, #t4, v15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q12, #t27, #q1)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q2, #t8, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #t3, #q6)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, v13, #t7, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q2, #t31, #q7)
           Atom motion(v14, #q7, #t11, #q1)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q1, #t22, #q7)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, v15, #t17, #q7)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q10, #t13, #q1)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, v15, #t19, #q10)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v12, #q11, #t38, #q8)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q4, #t33, #q11)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v14, #q5, #t36, #q10)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q14)
           Atom motion(v14, v15, #t16, #q5)
           Atom motion(v14, #q5, #t10, #q1)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q14, #o2, #q5)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, v15, #t18, #q9)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q9, #t32, #q5)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q7, #t35, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #t12, #q1)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q0, #t1, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, v13, #t5, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q0, #t34, #q4)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q15, #o2, #q5)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q2)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, v15, #t26, #q15)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v14, #q15, #t30, #q1)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q5, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q13, #t28, #q1)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, v15, #t24, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q3, #t9, #q1)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q10, #t37, #q3)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, v15, #t15, #q3)
           Atom motion(v14, #q7, #t21, #q3)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q6)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #q10 v7 v16))
           ((sample_rock v14 #q2 v1 v16))
           ((sample_rock v14 #q3 v8 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((sample_rock v14 #q7 v3 v16))
           ((sample_rock v14 #q9 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q6))
           ((move v12 #q0 #t34 #q4))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t38 #q8))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t2 #q6))
           ((move v12 #q4 #t33 #q11))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #t20 v13))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t3 #q6))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q0))
           ((move v12 v13 #t6 #q4))
           ((move v12 v13 #t7 #q8))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t0 #q2))
           ((move v14 #q1 #t22 #q7))
           ((move v14 #q1 #t4 v15))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t13 #q1))
           ((move v14 #q10 #t37 #q3))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t27 #q1))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t28 #q1))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q5))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t29 #q1))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q5))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t30 #q1))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t31 #q7))
           ((move v14 #q2 #t8 #q1))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t9 #q1))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t10 #q1))
           ((move v14 #q5 #t36 #q10))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t11 #q1))
           ((move v14 #q7 #t21 #q3))
           ((move v14 #q7 #t35 #q9))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t12 #q1))
           ((move v14 #q9 #t32 #q5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q2))
           ((move v14 v15 #t15 #q3))
           ((move v14 v15 #t16 #q5))
           ((move v14 v15 #t17 #q7))
           ((move v14 v15 #t18 #q9))
           ((move v14 v15 #t19 #q10))
           ((move v14 v15 #t23 #q12))
           ((move v14 v15 #t24 #q13))
           ((move v14 v15 #t25 #q14))
           ((move v14 v15 #t26 #q15))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q11 #y5 v19 v10))
           ((calibrate v12 #q4 #y2 v17 v10))
           ((calibrate v12 #q8 #y4 v20 v10))
           ((calibrate v14 #q12 #y6 v19 v10))
           ((calibrate v14 #q13 #y7 v20 v10))
           ((calibrate v14 #q14 #y8 v18 v10))
           ((calibrate v14 #q15 #y9 v17 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q11 #y5 v19 v10 v11))
           ((take_image v12 #q4 #y2 v17 v10 v11))
           ((take_image v12 #q8 #y4 v20 v10 v11))
           ((take_image v14 #q12 #y6 v19 v10 v11))
           ((take_image v14 #q13 #y7 v20 v10 v11))
           ((take_image v14 #q14 #y8 v18 v10 v11))
           ((take_image v14 #q15 #y9 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y3 v9 v1))
           ((send_analysis v12 #q6 #y3 v9 v3))
           ((send_analysis v12 #q6 #y3 v9 v4))
           ((send_analysis v12 #q6 #y3 v9 v5))
           ((send_analysis v12 #q6 #y3 v9 v7))
           ((send_analysis v12 #q6 #y3 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_image v12 #q6 #y3 v9 v18 v11))
           ((send_image v12 #q6 #y3 v9 v19 v11))
           ((send_image v12 #q6 #y3 v9 v17 v11))
           ((send_image v12 #q6 #y3 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to achieve 'new-axiom@0()', which is defined as receiving all images (v17, v18, v19, v20 in mode v11) and analyzing all rocks (v1, v3, v4, v5, v7, v8).
           
           The current state has two rovers, v12 and v14, each with a camera v10 that supports mode v11 and a store v16. Both rovers are at their respective home configurations v13 and v15. There are multiple rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). The lander v9 is available for communication.
           
           The plan will involve a combination of actions:
           1.  **Calibrate the camera:** Before taking images, the camera must be calibrated.
           2.  **Take images:** Capture images of all objectives.
           3.  **Send images:** Transmit the captured images to the lander.
           4.  **Sample rocks:** Collect samples of all rocks.
           5.  **Send analysis:** Transmit the analysis of the sampled rocks to the lander.
           
           Let's break down the process for each rover and the specific objects they can interact with, leveraging the pre-computed continuous values for efficient planning.
           
           **Rover v12:**
           *   **Objectives:** Can see v17, v18, v19, v20 from configurations #q4, #q0, #q11, #q8 respectively.
           *   **Rocks:** Can sample v1, v3, v4, v5, v7, v8 from configuration #o5.
           *   **Comms:** Can communicate with lander v9 from configuration #q6.
           
           **Rover v14:**
           *   **Objectives:** Can see v17, v18, v19, v20 from configurations #q15, #q14, #q12, #q13 respectively.
           *   **Rocks:** Can sample v1, v3, v4, v5, v7, v8 from configurations #q2, #q7, #q9, #q5, #q10, #q3 respectively.
           *   **Comms:** Can communicate with lander v9 from configuration #q1.
           
           Since both rovers are free and have a store, and can see all objectives and rocks from various configurations, we can distribute the tasks.
           A possible strategy is:
           *   Rover v12 handles imaging and sending its images.
           *   Rover v14 handles sampling and sending its analyses.
           This minimizes movement between different types of tasks for each rover.
           
           **Rover v12 Plan:**
           1.  Move to #q4 to see v17.
           2.  Calibrate camera.
           3.  Take image of v17.
           4.  Move to #q0 to see v18.
           5.  Calibrate camera.
           6.  Take image of v18.
           7.  Move to #q11 to see v19.
           8.  Calibrate camera.
           9.  Take image of v19.
           10. Move to #q8 to see v20.
           11. Calibrate camera.
           12. Take image of v20.
           13. Move to #q6 for communication.
           14. Send all images.
           
           **Rover v14 Plan:**
           1.  Move to #q2 to sample v1.
           2.  Sample v1.
           3.  Move to #q7 to sample v3.
           4.  Sample v3.
           5.  Move to #q9 to sample v4.
           6.  Sample v4.
           7.  Move to #q5 to sample v5.
           8.  Sample v5.
           9.  Move to #q10 to sample v7.
           10. Sample v7.
           11. Move to #q3 to sample v8.
           12. Sample v8.
           13. Move to #q1 for communication.
           14. Send all analyses.
           
           This plan aims to cover all objectives and rocks.
           
           --Plan--:
           (move v12 v13 #t6 #q4)
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #o2 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #o2 #q11)
           (calibrate v12 #q11 #y5 v19 v10)
           (take_image v12 #q11 #y5 v19 v10 v11)
           (move v12 #q11 #t38 #q8)
           (calibrate v12 #q8 #y4 v20 v10)
           (take_image v12 #q8 #y4 v20 v10 v11)
           (move v12 #q8 #t3 #q6)
           (send_image v12 #q6 #y3 v9 v17 v11)
           (send_image v12 #q6 #y3 v9 v18 v11)
           (send_image v12 #q6 #y3 v9 v19 v11)
           (send_image v12 #q6 #y3 v9 v20 v11)
           (move v14 v15 #t14 #q2)
           (sample_rock v14 #q2 v1 v16)
           (move v14 #q2 #t31 #q7)
           (sample_rock v14 #q7 v3 v16)
           (move v14 #q7 #t35 #q9)
           (sample_rock v14 #q9 v4 v16)
           (move v14 #q9 #t32 #q5)
           (sample_rock v14 #q5 v5 v16)
           (move v14 #q5 #t36 #q10)
           (sample_rock v14 #q10 v7 v16)
           (move v14 #q10 #t37 #q3)
           (sample_rock v14 #q3 v8 v16)
           (move v14 #q3 #t9 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (send_analysis v14 #q1 #y1 v9 v4)
           (send_analysis v14 #q1 #y1 v9 v5)
           (send_analysis v14 #q1 #y1 v9 v7)
           (send_analysis v14 #q1 #y1 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal condition `new-axiom@0()` was not satisfied. This axiom requires:
           *   `atconf(v12, v13)`
           *   `atconf(v14, v15)`
           *   `free(v12, v16)`
           *   `free(v14, v16)`
           *   `receivedimage(v17, v11)`
           *   `receivedimage(v18, v11)`
           *   `receivedimage(v19, v11)`
           *   `receivedimage(v20, v11)`
           *   `type(?stone, v2)` AND `receivedanalysis(?stone)` for all rocks of type `v2` (v1, v3, v4)
           *   `type(?soil, v6)` AND `receivedanalysis(?soil)` for all rocks of type `v6` (v5, v7, v8)
           
           My previous plan successfully sent all images and analyses. However, a key issue is that after sampling rocks, the `free(rover, store)` predicate becomes `full(rover, store)`. The goal state explicitly requires `free(v12, v16)` and `free(v14, v16)`. This means that after sampling all rocks, the rovers must `drop_rock` to make their stores free again. Also, the plan needs to ensure both rovers return to their initial configurations `v13` and `v15` respectively, to satisfy the `atconf` predicates in the axiom.
           
           Let's refine the plan with these considerations:
           
           **Revised Plan Strategy:**
           
           **Rover v12 (Imaging and returning to v13):**
           1.  Move to specific configurations to view each objective.
           2.  Calibrate camera at each view.
           3.  Take image of each objective.
           4.  Move to a communication configuration (#q6).
           5.  Send all captured images.
           6.  Return to its initial configuration (v13).
           
           **Rover v14 (Sampling, analyzing, dropping, and returning to v15):**
           1.  Move to specific configurations to be above each rock.
           2.  Sample each rock.
           3.  Move to a communication configuration (#q1).
           4.  Send all rock analyses.
           5.  Drop all rocks to free the store.
           6.  Return to its initial configuration (v15).
           
           Let's ensure all rocks are identified by their type, `v2` for 'stone' and `v6` for 'soil'.
           *   `type(v1, v2)`
           *   `type(v3, v2)`
           *   `type(v4, v2)`
           *   `type(v5, v6)`
           *   `type(v7, v6)`
           *   `type(v8, v6)`
           
           The plan needs to analyze v1, v3, v4, v5, v7, v8.
           
           --Plan--:
           (move v12 v13 #t6 #q4)
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #o2 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #o2 #q11)
           (calibrate v12 #q11 #y5 v19 v10)
           (take_image v12 #q11 #y5 v19 v10 v11)
           (move v12 #q11 #t38 #q8)
           (calibrate v12 #q8 #y4 v20 v10)
           (take_image v12 #q8 #y4 v20 v10 v11)
           (move v12 #q8 #t3 #q6)
           (send_image v12 #q6 #y3 v9 v17 v11)
           (send_image v12 #q6 #y3 v9 v18 v11)
           (send_image v12 #q6 #y3 v9 v19 v11)
           (send_image v12 #q6 #y3 v9 v20 v11)
           (move v12 #q6 #t20 v13)
           (move v14 v15 #t14 #q2)
           (sample_rock v14 #q2 v1 v16)
           (move v14 #q2 #t31 #q7)
           (sample_rock v14 #q7 v3 v16)
           (move v14 #q7 #t35 #q9)
           (sample_rock v14 #q9 v4 v16)
           (move v14 #q9 #t32 #q5)
           (sample_rock v14 #q5 v5 v16)
           (move v14 #q5 #t36 #q10)
           (sample_rock v14 #q10 v7 v16)
           (move v14 #q10 #t37 #q3)
           (sample_rock v14 #q3 v8 v16)
           (move v14 #q3 #t9 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (send_analysis v14 #q1 #y1 v9 v4)
           (send_analysis v14 #q1 #y1 v9 v5)
           (send_analysis v14 #q1 #y1 v9 v7)
           (send_analysis v14 #q1 #y1 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q1 #t4 v15)

