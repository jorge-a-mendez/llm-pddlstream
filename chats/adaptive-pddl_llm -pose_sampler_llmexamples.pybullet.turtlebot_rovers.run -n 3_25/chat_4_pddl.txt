User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom store(v16)
           Atom conf(v14, v15)
           Atom type(v5, v6)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom rock(v1)
           Atom rock(v4)
           Atom objective(v18)
           Atom rock(v8)
           Atom rover(v12)
           Atom objective(v19)
           Atom rock(v7)
           Atom objective(v17)
           Atom type(v8, v6)
           Atom type(v7, v6)
           Atom conf(v12, v13)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom atconf(v12, v13)
           Atom rock(v3)
           Atom supports(v10, v11)
           Atom rock(v5)
           Atom lander(v9)
           Atom rover(v14)
           Atom type(v3, v2)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom free(v12, v16)
           Atom onboard(v10, v12)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q13, v7)
           Atom conf(v14, #q13)
           Atom imagevisible(v14, #q10, #y7, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom comvisible(v14, #q7, #y4, v9)
           Atom comrange(v14, #q7, v9)
           Atom conf(v14, #q7)
           Atom ray(#y4)
           Atom above(v14, #q6, v5)
           Atom conf(v14, #q6)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q8, #y5, v19)
           Atom imagerange(v14, #q8, v19)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom imagevisible(v12, #q3, #y2, v19)
           Atom imagerange(v12, #q3, v19)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #q12, v3)
           Atom conf(v12, #q12)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v14, #q9, #y6, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v14, #q11, v1)
           Atom conf(v14, #q11)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #t15, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #t13, v15)
           Atom motion(v14, #q6, #t10, #q7)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q7, #t12, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #t16, #q7)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v14, #q7, #t20, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q13, #t19, #q7)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, v13, #t2, #q2)
           Atom motion(v12, #q2, #t7, #q0)
           Atom motion(v12, #q0, #t4, v13)
           Atom motion(v12, #q0, #t18, #q12)
           Atom motion(v12, #q0, #t1, #q4)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q12, #t21, #q0)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q1, #t5, #q0)
           Atom motion(v12, #q4, #t6, #q0)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q0, #t17, #q5)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #t9, #q0)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #t8, #q0)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, v13, #t3, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, v15, #t11, #q8)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q8, #t14, #q7)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q12 v3 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q11 v1 v16))
           ((sample_rock v14 #q13 v7 v16))
           ((sample_rock v14 #q6 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t1 #q4))
           ((move v12 #q0 #t17 #q5))
           ((move v12 #q0 #t18 #q12))
           ((move v12 #q0 #t4 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t5 #q0))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t21 #q0))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t7 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t8 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t6 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t9 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t2 #q2))
           ((move v12 v13 #t3 #q3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t16 #q7))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t19 #q7))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t10 #q7))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #t12 #q6))
           ((move v14 #q7 #t13 v15))
           ((move v14 #q7 #t20 #q13))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t14 #q7))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t15 #q7))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t11 #q8))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v12 #q3 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v14 #q10 #y7 v17 v10))
           ((calibrate v14 #q8 #y5 v19 v10))
           ((calibrate v14 #q9 #y6 v18 v10))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v12 #q3 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v14 #q10 #y7 v17 v10 v11))
           ((take_image v14 #q8 #y5 v19 v10 v11))
           ((take_image v14 #q9 #y6 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q7 #y4 v9 v3))
           ((send_analysis v14 #q7 #y4 v9 v4))
           ((send_analysis v14 #q7 #y4 v9 v8))
           ((send_analysis v14 #q7 #y4 v9 v1))
           ((send_analysis v14 #q7 #y4 v9 v7))
           ((send_analysis v14 #q7 #y4 v9 v5))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q7 #y4 v9 v17 v11))
           ((send_image v14 #q7 #y4 v9 v19 v11))
           ((send_image v14 #q7 #y4 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a lander (v9), a camera (v10), a storage unit (v16), a mode (v11), and various rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19). The rovers are currently at configurations v13 and v15 respectively. The camera is onboard both rovers and supports mode v11. The storage v16 is free for both rovers.
           
           The goal `new-axiom@0()` represents a complex state that requires:
           1. Both rovers (v12, v14) to be at their current configurations (v13, v15 respectively).
           2. The storage unit (v16) to be free for both rovers (v12, v14).
           3. Images of objectives (v17, v18, v19) to be received in mode v11.
           4. Rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8) to be analyzed and their analyses received.
           
           Let's break down the goal:
           - `atconf(v12, v13)` and `atconf(v14, v15)`: These are already true in the initial state.
           - `free(v12, v16)` and `free(v14, v16)`: These are also already true.
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`: This means we need to take images of all three objectives and send them to the lander.
           - `receivedanalysis(?stone)` for rocks of type v2 (v1, v3, v4) and `receivedanalysis(?soil)` for rocks of type v6 (v5, v7, v8): This means we need to sample and send analysis for at least one rock of type v2 and at least one rock of type v6.
           
           To achieve the `receivedimage` goals, both rovers have cameras and are at locations where they can take images of the objectives and communicate with the lander.
           To achieve the `receivedanalysis` goals, the rovers need to be above a rock, sample it, and then send the analysis.
           
           We will try to achieve the `receivedimage` goals by calibrating the camera and taking images of the three objectives, and then sending these images. We'll use rover v12 for v17 and v19, and rover v14 for v18. Then, we will use rover v12 to sample a rock of type v2 and a rock of type v6, and send their analyses.
           
           Here's a plan:
           1. Calibrate camera v10 on rover v12 for objective v17 at #q2.
           2. Take image of v17 with rover v12.
           3. Move rover v12 to #q0 to send the image.
           4. Send image of v17 to lander v9.
           5. Calibrate camera v10 on rover v12 for objective v19 at #q3.
           6. Take image of v19 with rover v12.
           7. Move rover v12 to #q0 to send the image.
           8. Send image of v19 to lander v9.
           9. Move rover v14 to #q9 to image v18.
           10. Calibrate camera v10 on rover v14 for objective v18 at #q9.
           11. Take image of v18 with rover v14.
           12. Move rover v14 to #q7 to send the image.
           13. Send image of v18 to lander v9.
           
           Now for the analysis:
           14. Move rover v12 to #q1 to be above rock v1 (type v2).
           15. Sample rock v1 with rover v12.
           16. Move rover v12 to #q0 to send the analysis.
           17. Send analysis of rock v1 to lander v9.
           18. Move rover v12 to #q4 to be above rock v5 (type v6).
           19. Sample rock v5 with rover v12.
           20. Move rover v12 to #q0 to send the analysis.
           21. Send analysis of rock v5 to lander v9.
           
           This plan aims to cover all the conditions in `new-axiom@0()`.
           
           --Plan--:
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t7 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (calibrate v12 #q3 #y2 v19 v10)
           (take_image v12 #q3 #y2 v19 v10 v11)
           (move v12 #q3 #t8 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v14 v15 #o2 #q9)
           (calibrate v14 #q9 #y6 v18 v10)
           (take_image v14 #q9 #y6 v18 v10 v11)
           (move v14 #q9 #t15 #q7)
           (send_image v14 #q7 #y4 v9 v18 v11)
           (move v12 #q0 #t0 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t5 #q0)
           (send_analysis v12 #q0 #y0 v9 v1)
           (move v12 #q0 #t1 #q4)
           (sample_rock v12 #q4 v5 v16)
           (move v12 #q4 #t6 #q0)
           (send_analysis v12 #q0 #y0 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. Let's re-examine the goal and the state.
           The goal `new-axiom@0()` requires:
           1. `atconf(v12, v13)`: True initially.
           2. `atconf(v14, v15)`: True initially.
           3. `free(v12, v16)`: True initially.
           4. `free(v14, v16)`: True initially.
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedanalysis(?stone)` for rocks of type v2 (v1, v3, v4).
           9. `receivedanalysis(?soil)` for rocks of type v6 (v5, v7, v8).
           
           My previous plan attempted to achieve all `receivedimage` goals and then all `receivedanalysis` goals. The issue might be related to the sequence or the specific rocks chosen.
           
           Let's re-strategize:
           We need to achieve `receivedimage` for v17, v18, v19.
           We need to achieve `receivedanalysis` for one rock of type v2 (e.g., v1) and one rock of type v6 (e.g., v5).
           
           The current locations for imaging are:
           - v12 can image v19 at #q3, v17 at #q2, v18 at #q5.
           - v14 can image v17 at #q10, v19 at #q8, v18 at #q9.
           
           The current locations for sampling:
           - v12 can sample v4, v7, v8 at #o5, v1 at #q1, v3 at #q12, v5 at #q4.
           - v14 can sample v3, v4, v8 at #o5, v1 at #q11, v7 at #q13, v5 at #q6.
           
           Let's ensure that the rovers return to their initial configurations (v13 and v15) if they move, though the goal statement only requires them to be at those configurations *at the end*, not throughout the process. However, the action `new-axiom@0()` itself is a conjunction of conditions, which means all conditions must hold *simultaneously* at the end. My previous plan did not explicitly return the rovers to their initial configurations after moving them. However, looking at the axiom definition, `atconf(v12, v13)` and `atconf(v14, v15)` are required *at the end*. If an action changes the `atconf` predicate, it needs to be changed back.
           
           Let's retry the plan, ensuring rovers are at their original positions (v13 for v12, v15 for v14) when the goal is evaluated, and satisfying all image and analysis goals.
           
           **Revised Strategy:**
           
           1.  **Rover v12 for Imaging:**
               *   Calibrate and take image of v17 (objective).
               *   Move to coms position (#q0).
               *   Send image of v17.
               *   Move back to v13 (initial config).
               *   Calibrate and take image of v19 (objective).
               *   Move to coms position (#q0).
               *   Send image of v19.
               *   Move back to v13 (initial config).
           
           2.  **Rover v14 for Imaging:**
               *   Move to config #q9 to image v18.
               *   Calibrate and take image of v18 (objective).
               *   Move to coms position (#q7).
               *   Send image of v18.
               *   Move back to v15 (initial config).
           
           3.  **Rover v12 for Analysis:**
               *   Move to config #q1 to be above rock v1 (type v2).
               *   Sample v1.
               *   Move to coms position (#q0).
               *   Send analysis of v1.
               *   Move back to v13 (initial config).
               *   Move to config #q4 to be above rock v5 (type v6).
               *   Sample v5.
               *   Move to coms position (#q0).
               *   Send analysis of v5.
               *   Move back to v13 (initial config).
           
           This strategy ensures both rovers finish at their initial configurations and all conditions of the axiom are met.
           
           --Plan--:
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t7 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t4 v13)
           (calibrate v12 #q3 #y2 v19 v10)
           (take_image v12 #q3 #y2 v19 v10 v11)
           (move v12 #q3 #t8 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v12 #q0 #t4 v13)
           (move v14 v15 #o2 #q9)
           (calibrate v14 #q9 #y6 v18 v10)
           (take_image v14 #q9 #y6 v18 v10 v11)
           (move v14 #q9 #t15 #q7)
           (send_image v14 #q7 #y4 v9 v18 v11)
           (move v14 #q7 #t13 v15)
           (move v12 v13 #o2 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t5 #q0)
           (send_analysis v12 #q0 #y0 v9 v1)
           (move v12 #q0 #t4 v13)
           (move v12 v13 #o2 #q4)
           (sample_rock v12 #q4 v5 v16)
           (move v12 #q4 #t6 #q0)
           (send_analysis v12 #q0 #y0 v9 v5)
           (move v12 #q0 #t4 v13)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan is still failing to satisfy `new-axiom@0()`. Let's break down the requirements of the axiom and ensure each part is explicitly covered and maintained throughout the plan.
           
           The goal `new-axiom@0()` is a conjunction of multiple conditions:
           1.  `atconf(v12, v13)`: Rover v12 must be at configuration v13.
           2.  `atconf(v14, v15)`: Rover v14 must be at configuration v15.
           3.  `free(v12, v16)`: Storage v16 must be free on rover v12.
           4.  `free(v14, v16)`: Storage v16 must be free on rover v14.
           5.  `receivedimage(v17, v11)`: Image of objective v17 in mode v11 received.
           6.  `receivedimage(v18, v11)`: Image of objective v18 in mode v11 received.
           7.  `receivedimage(v19, v11)`: Image of objective v19 in mode v11 received.
           8.  `type(?stone, v2)` AND `receivedanalysis(?stone)`: Analysis of a type v2 rock (e.g., v1, v3, v4) received.
           9.  `type(?soil, v6)` AND `receivedanalysis(?soil)`: Analysis of a type v6 rock (e.g., v5, v7, v8) received.
           
           Let's review the current state regarding `free(v12, v16)` and `free(v14, v16)`.
           Initially, both `free(v12, v16)` and `free(v14, v16)` are true.
           When `sample_rock` is executed, it sets `full(?v, ?s)` and `analyzed(?v, ?r)`, and *negates* `free(?v, ?s)`.
           To satisfy `free(?v, ?s)` at the end, we *must* use `drop_rock(?v, ?s)` after sampling. This was the critical missing step in the previous plan.
           
           **Revised Plan Strategy:**
           
           1.  **Rover v12 - Image v17 & v19:**
               *   `atconf(v12, v13)` initially.
               *   Move v12 to #q2 (for v17). Calibrate, take image.
               *   Move v12 to #q0 (for comms). Send image.
               *   Move v12 back to v13.
               *   Move v12 to #q3 (for v19). Calibrate, take image.
               *   Move v12 to #q0 (for comms). Send image.
               *   Move v12 back to v13.
           
           2.  **Rover v14 - Image v18:**
               *   `atconf(v14, v15)` initially.
               *   Move v14 to #q9 (for v18). Calibrate, take image.
               *   Move v14 to #q7 (for comms). Send image.
               *   Move v14 back to v15.
           
           3.  **Rover v12 - Sample & Analyze Rocks (Type v2 and v6) and Drop:**
               *   Move v12 to #q1 (above rock v1, type v2).
               *   Sample rock v1. (Now `full(v12, v16)` and `analyzed(v12, v1)` are true, `free(v12, v16)` is false).
               *   Move v12 to #q0 (for comms).
               *   Send analysis of v1.
               *   Drop rock v1 (Now `free(v12, v16)` is true again).
               *   Move v12 back to v13.
               *   Move v12 to #q4 (above rock v5, type v6).
               *   Sample rock v5. (Now `full(v12, v16)` and `analyzed(v12, v5)` are true, `free(v12, v16)` is false).
               *   Move v12 to #q0 (for comms).
               *   Send analysis of v5.
               *   Drop rock v5 (Now `free(v12, v16)` is true again).
               *   Move v12 back to v13.
           
           This revised plan addresses the `free` predicate requirement by explicitly dropping the sampled rocks after sending their analysis.
           
           --Plan--:
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t7 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t4 v13)
           (calibrate v12 #q3 #y2 v19 v10)
           (take_image v12 #q3 #y2 v19 v10 v11)
           (move v12 #q3 #t8 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v12 #q0 #t4 v13)
           (move v14 v15 #o2 #q9)
           (calibrate v14 #q9 #y6 v18 v10)
           (take_image v14 #q9 #y6 v18 v10 v11)
           (move v14 #q9 #t15 #q7)
           (send_image v14 #q7 #y4 v9 v18 v11)
           (move v14 #q7 #t13 v15)
           (move v12 v13 #o2 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t5 #q0)
           (send_analysis v12 #q0 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q0 #t4 v13)
           (move v12 v13 #o2 #q4)
           (sample_rock v12 #q4 v5 v16)
           (move v12 #q4 #t6 #q0)
           (send_analysis v12 #q0 #y0 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q0 #t4 v13)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q2) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan failed because the precondition `atconf(v12, #q2)` was not met for the first action `calibrate v12 #q2 #y1 v17 v10`. The rover v12 is initially at `v13`. I need to explicitly move the rover to the desired configuration before attempting to calibrate or take an image there.
           
           Let's carefully trace rover v12's configuration:
           1.  Initial: `atconf(v12, v13)`
           2.  To calibrate at #q2, need to move v12 from v13 to #q2.
           3.  After calibration and imaging, move v12 from #q2 to #q0 for communication.
           4.  After communication, move v12 from #q0 back to v13 to satisfy the final `atconf` requirement and prepare for the next task from the base configuration.
           
           This applies to all movement operations. I need to insert `move` actions whenever the rover is not at the required configuration.
           
           Let's re-construct the plan with precise movements:
           
           **Revised Plan Strategy:**
           
           1.  **Rover v12 - Image v17:**
               *   `atconf(v12, v13)`
               *   `move v12 v13 #t2 #q2` (Move to image v17 config)
               *   `calibrate v12 #q2 #y1 v17 v10`
               *   `take_image v12 #q2 #y1 v17 v10 v11`
               *   `move v12 #q2 #t7 #q0` (Move to comms config)
               *   `send_image v12 #q0 #y0 v9 v17 v11`
               *   `move v12 #q0 #t4 v13` (Move back to initial config)
           
           2.  **Rover v12 - Image v19:**
               *   `atconf(v12, v13)`
               *   `move v12 v13 #t3 #q3` (Move to image v19 config)
               *   `calibrate v12 #q3 #y2 v19 v10`
               *   `take_image v12 #q3 #y2 v19 v10 v11`
               *   `move v12 #q3 #t8 #q0` (Move to comms config)
               *   `send_image v12 #q0 #y0 v9 v19 v11`
               *   `move v12 #q0 #t4 v13` (Move back to initial config)
           
           3.  **Rover v14 - Image v18:**
               *   `atconf(v14, v15)`
               *   `move v14 v15 #t11 #q8` (Move to image v18 config (available option for #q8 instead of #q9, using #q8 here as there is a direct motion from v15))
               *   `calibrate v14 #q8 #y5 v19 v10` (Oops, should be v18 objective with #q9 as specified in initial state, let's use #q9 then move from v15 to #q9). Rechecking: imagevisible(v14, #q8, #y5, v19) so #q8 is for v19 not v18. imagevisible(v14, #q9, #y6, v18) so #q9 for v18.
               *   Let's use #q9 for v18. Motion `move v14 v15 #o2 #q9` is available.
               *   `move v14 v15 #o2 #q9`
               *   `calibrate v14 #q9 #y6 v18 v10`
               *   `take_image v14 #q9 #y6 v18 v10 v11`
               *   `move v14 #q9 #t15 #q7` (Move to comms config)
               *   `send_image v14 #q7 #y4 v9 v18 v11`
               *   `move v14 #q7 #t13 v15` (Move back to initial config)
           
           4.  **Rover v12 - Sample & Analyze Rocks (Type v2 and v6) and Drop:**
               *   `atconf(v12, v13)`
               *   `move v12 v13 #o2 #q1` (Move to rock v1 config)
               *   `sample_rock v12 #q1 v1 v16`
               *   `move v12 #q1 #t5 #q0` (Move to comms config)
               *   `send_analysis v12 #q0 #y0 v9 v1`
               *   `drop_rock v12 v16`
               *   `move v12 #q0 #t4 v13` (Move back to initial config)
               *   `atconf(v12, v13)`
               *   `move v12 v13 #o2 #q4` (Move to rock v5 config)
               *   `sample_rock v12 #q4 v5 v16`
               *   `move v12 #q4 #t6 #q0` (Move to comms config)
               *   `send_analysis v12 #q0 #y0 v9 v5`
               *   `drop_rock v12 v16`
               *   `move v12 #q0 #t4 v13` (Move back to initial config)
           
           This detailed step-by-step movement should ensure `atconf` preconditions are always met.
           
           --Plan--:
           (move v12 v13 #t2 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t7 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t4 v13)
           (move v12 v13 #t3 #q3)
           (calibrate v12 #q3 #y2 v19 v10)
           (take_image v12 #q3 #y2 v19 v10 v11)
           (move v12 #q3 #t8 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v12 #q0 #t4 v13)
           (move v14 v15 #o2 #q9)
           (calibrate v14 #q9 #y6 v18 v10)
           (take_image v14 #q9 #y6 v18 v10 v11)
           (move v14 #q9 #t15 #q7)
           (send_image v14 #q7 #y4 v9 v18 v11)
           (move v14 #q7 #t13 v15)
           (move v12 v13 #o2 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t5 #q0)
           (send_analysis v12 #q0 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q0 #t4 v13)
           (move v12 v13 #o2 #q4)
           (sample_rock v12 #q4 v5 v16)
           (move v12 #q4 #t6 #q0)
           (send_analysis v12 #q0 #y0 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q0 #t4 v13)

