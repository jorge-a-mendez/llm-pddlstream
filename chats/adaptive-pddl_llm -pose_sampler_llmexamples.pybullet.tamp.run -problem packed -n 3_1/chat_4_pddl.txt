User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v12)
           Atom arm(v4)
           Atom stackable(v14, v16)
           Atom arm(v6)
           Atom supported(v8, v9, v11)
           Atom stackable(v14, v10)
           Atom handempty(v4)
           Atom handempty(v6)
           Atom atpose(v12, v13)
           Atom pose(v14, v15)
           Atom atpose(v8, v9)
           Atom graspable(v8)
           Atom aconf(v4, v5)
           Atom bconf(v3)
           Atom stackable(v12, v10)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom atbconf(v3)
           Atom controllable(v4)
           Atom ataconf(v4, v5)
           Atom atpose(v14, v15)
           Atom pose(v12, v13)
           Atom graspable(v14)
           Atom aconf(v6, v7)
           Atom supported(v14, v15, v11)
           Atom supported(v12, v13, v11)
           Atom canmove()
           Atom stackable(v8, v10)
           Atom pose(v8, v9)
           Atom ataconf(v6, v7)
           Atom grasp(v8, #g1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v14, #g0)
           Atom pose(v12, #p2)
           Atom supported(v12, #p2, v16)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #g2)
           Atom pose(v14, #p0)
           Atom supported(v14, #p0, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v8, v9, #g1, #q2, #t2)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, v15, #g0, #q1, #t1)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v8, #p1, #g1, #q4, #t7)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v12, v13, #g2, #q5, #t8)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, #p0, #g0, #q0, #t0)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v12, #p2, #g2, #q3, #t6)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q5, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q2, #o0, #q1)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q1, #o0, #q3)
           Atom btraj(#t9)
           Atom basemotion(#q3, #t9, #q1)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t12)
           Atom basemotion(#q5, #t12, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q3)
           Atom btraj(#t13)
           Atom basemotion(#q1, #t13, #q0)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom btraj(#t11)
           Atom basemotion(#q2, #t11, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q4, #o0, #q1)
           Atom btraj(#t10)
           Atom basemotion(#q4, #t10, #q5)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q0, #o0, #q4)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q0 #t13))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q4 #t11))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q1 #t9))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q5 #t10))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q3 #t12))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 #p2 #g2 #q3 #t6))
           ((place v4 v12 #p2 #g2 #q3 #t6))
           ((pick v4 v12 v13 #g2 #q5 #t8))
           ((place v4 v12 v13 #g2 #q5 #t8))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 #p0 #g0 #q0 #t0))
           ((place v4 v14 #p0 #g0 #q0 #t0))
           ((pick v4 v14 v15 #g0 #q1 #t1))
           ((place v4 v14 v15 #g0 #q1 #t1))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 #p1 #g1 #q4 #t7))
           ((place v4 v8 #p1 #g1 #q4 #t7))
           ((pick v4 v8 v9 #g1 #q2 #t2))
           ((place v4 v8 v9 #g1 #q2 #t2))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three graspable objects: `v12`, `v8`, and `v14`. They are currently at `v13`, `v9`, and `v15` poses respectively. All three objects are currently supported by `v11`. The goal is to move `v8`, `v12`, and `v14` to be on `v16`. Since `v16` is a surface and not a sink or stove, the actions `clean` and `cook` are not relevant. The robot `v4` has its arm `v5` at `v7` and is currently at base configuration `v3`. The arm `v6` is also available, but all `kin` relations are for arm `v4`. Therefore, only `v4` will be used to manipulate objects.
           
           The plan will involve picking up each object from its current location and placing it on `v16`. This requires the robot to move its base to appropriate configurations before picking and placing each object.
           
           Initially:
           - `v8` is at `v9` on `v11`.
           - `v12` is at `v13` on `v11`.
           - `v14` is at `v15` on `v11`.
           
           Goal:
           - `v8` is on `v16`. This means `atpose(v8, #p1)` which is supported by `v16`.
           - `v12` is on `v16`. This means `atpose(v12, #p2)` which is supported by `v16`.
           - `v14` is on `v16`. This means `atpose(v14, #p0)` which is supported by `v16`.
           
           Let's break down the steps:
           
           1. **Move `v8` to `v16`:**
              - Current pose of `v8` is `v9`, supported by `v11`.
              - Goal pose of `v8` on `v16` is `#p1`.
              - `pick v4 v8 v9 #g1 #q2 #t2`: Pick `v8` from `v9` while at base config `q2`. Since we are at `v3`, we need to move to `q2`.
              - `place v4 v8 #p1 #g1 #q4 #t7`: Place `v8` at `#p1` while at base config `q4`.
           
           2. **Move `v12` to `v16`:**
              - Current pose of `v12` is `v13`, supported by `v11`.
              - Goal pose of `v12` on `v16` is `#p2`.
              - `pick v4 v12 v13 #g2 #q5 #t8`: Pick `v12` from `v13` while at base config `q5`.
              - `place v4 v12 #p2 #g2 #q3 #t6`: Place `v12` at `#p2` while at base config `q3`.
           
           3. **Move `v14` to `v16`:**
              - Current pose of `v14` is `v15`, supported by `v11`.
              - Goal pose of `v14` on `v16` is `#p0`.
              - `pick v4 v14 v15 #g0 #q1 #t1`: Pick `v14` from `v15` while at base config `q1`.
              - `place v4 v14 #p0 #g0 #q0 #t0`: Place `v14` at `#p0` while at base config `q0`.
           
           We need to make sure the robot's base configuration (`atbconf`) is correct for each `pick` and `place` action and use `move_base` actions as needed.
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v8 v9 #g1 #q2 #t2)
           (move_base #q2 #q4 #t11)
           (place v4 v8 #p1 #g1 #q4 #t7)
           (move_base #q4 #q5 #t10)
           (pick v4 v12 v13 #g2 #q5 #t8)
           (move_base #q5 #q3 #t12)
           (place v4 v12 #p2 #g2 #q3 #t6)
           (move_base #q3 #q1 #t9)
           (pick v4 v14 v15 #g0 #q1 #t1)
           (move_base #q1 #q0 #t13)
           (place v4 v14 #p0 #g0 #q0 #t0)

