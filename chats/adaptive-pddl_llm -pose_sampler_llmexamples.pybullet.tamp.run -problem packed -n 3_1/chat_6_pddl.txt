User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q1: object
           #q2: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t1: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t4: object
           #t5: object
           #t8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom ~test-cfree-pose-pose-negative(v12, v24, v8, v25)
           Atom ~test-cfree-pose-pose-negative(v12, v18, v8, v25)
           Atom graspable(v12)
           Atom arm(v4)
           Atom stackable(v14, v16)
           Atom arm(v6)
           Atom supported(v8, v9, v11)
           Atom ~test-cfree-pose-pose-negative(v12, v18, v8, v17)
           Atom stackable(v14, v10)
           Atom handempty(v4)
           Atom handempty(v6)
           Atom atpose(v12, v13)
           Atom ~test-cfree-pose-pose-negative(v12, v20, v8, v17)
           Atom pose(v14, v15)
           Atom atpose(v8, v9)
           Atom graspable(v8)
           Atom aconf(v4, v5)
           Atom bconf(v3)
           Atom stackable(v12, v10)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom ~test-cfree-pose-pose-negative(v12, v24, v8, v17)
           Atom ~test-cfree-pose-pose-negative(v12, v18, v8, v22)
           Atom atbconf(v3)
           Atom controllable(v4)
           Atom ~test-cfree-pose-pose-negative(v12, v20, v8, v22)
           Atom ataconf(v4, v5)
           Atom atpose(v14, v15)
           Atom pose(v12, v13)
           Atom graspable(v14)
           Atom aconf(v6, v7)
           Atom supported(v14, v15, v11)
           Atom supported(v12, v13, v11)
           Atom canmove()
           Atom ~test-cfree-pose-pose-negative(v12, v24, v8, v22)
           Atom ~test-cfree-pose-pose-negative(v12, v20, v8, v25)
           Atom stackable(v8, v10)
           Atom ~test-cfree-pose-pose-negative(v14, v19, v12, v20)
           Atom pose(v8, v9)
           Atom ataconf(v6, v7)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v14, #g0)
           Atom pose(v14, v19)
           Atom supported(v14, v19, v16)
           Atom pose(v14, v23)
           Atom supported(v14, v23, v16)
           Atom pose(v14, v21)
           Atom supported(v14, v21, v16)
           Atom pose(v12, v24)
           Atom supported(v12, v24, v16)
           Atom pose(v12, v18)
           Atom supported(v12, v18, v16)
           Atom pose(v12, v20)
           Atom supported(v12, v20, v16)
           Atom pose(v8, v22)
           Atom supported(v8, v22, v16)
           Atom pose(v8, v25)
           Atom supported(v8, v25, v16)
           Atom pose(v8, v17)
           Atom supported(v8, v17, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v8, #g1)
           Atom grasp(v12, #g2)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, v15, #g0, #q1, #t1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, v21, #g0, #o3, #o4)
           Atom bconf(#q8)
           Atom atraj(#t21)
           Atom kin(v4, v14, v19, #g0, #q8, #t21)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v12, v13, #g2, #q5, #t8)
           Atom bconf(#q7)
           Atom atraj(#t16)
           Atom kin(v4, v12, v18, #g2, #q7, #t16)
           Atom kin(v4, v12, v20, #g2, #o3, #o4)
           Atom kin(v4, v8, v22, #g1, #o3, #o4)
           Atom bconf(#q6)
           Atom atraj(#t14)
           Atom kin(v4, v8, v17, #g1, #q6, #t14)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v8, v9, #g1, #q2, #t2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q6, #o0, #q6)
           Atom btraj(#t15)
           Atom basemotion(#q2, #t15, #q6)
           Atom btraj(#t17)
           Atom basemotion(#q6, #t17, #q2)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q2, #o0, #q1)
           Atom btraj(#t19)
           Atom basemotion(#q1, #t19, #q6)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom btraj(#t18)
           Atom basemotion(#q7, #t18, #q2)
           Atom basemotion(#q7, #o0, #q7)
           Atom btraj(#t20)
           Atom basemotion(#q1, #t20, #q7)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, v3)
           Atom btraj(#t25)
           Atom basemotion(#q5, #t25, #q6)
           Atom btraj(#t23)
           Atom basemotion(#q7, #t23, #q5)
           Atom btraj(#t24)
           Atom basemotion(#q8, #t24, #q5)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom btraj(#t22)
           Atom basemotion(#q6, #t22, #q5)
           Atom btraj(#t27)
           Atom basemotion(#q5, #t27, #q8)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom btraj(#t26)
           Atom basemotion(#q5, #t26, #q7)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q6 #t19))
           ((move_base #q1 #q7 #t20))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q6 #t15))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q6 #t25))
           ((move_base #q5 #q7 #t26))
           ((move_base #q5 #q8 #t27))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q2 #t17))
           ((move_base #q6 #q5 #t22))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q2 #t18))
           ((move_base #q7 #q5 #t23))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q5 #t24))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 v13 #g2 #q5 #t8))
           ((place v4 v12 v13 #g2 #q5 #t8))
           ((pick v4 v12 v18 #g2 #q7 #t16))
           ((place v4 v12 v18 #g2 #q7 #t16))
           ((pick v4 v12 v20 #g2 #o3 #o4))
           ((place v4 v12 v20 #g2 #o3 #o4))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 v15 #g0 #q1 #t1))
           ((place v4 v14 v15 #g0 #q1 #t1))
           ((pick v4 v14 v19 #g0 #q8 #t21))
           ((place v4 v14 v19 #g0 #q8 #t21))
           ((pick v4 v14 v21 #g0 #o3 #o4))
           ((place v4 v14 v21 #g0 #o3 #o4))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 v17 #g1 #q6 #t14))
           ((place v4 v8 v17 #g1 #q6 #t14))
           ((pick v4 v8 v22 #g1 #o3 #o4))
           ((place v4 v8 v22 #g1 #o3 #o4))
           ((pick v4 v8 v9 #g1 #q2 #t2))
           ((place v4 v8 v9 #g1 #q2 #t2))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three graspable objects: `v12`, `v14`, and `v8`. The robot has two arms, `v4` and `v6`, both currently empty. Several poses and grasps are defined for these objects, as well as kinematic configurations and base motions. The goal is to place all three objects (`v8`, `v12`, and `v14`) on the surface `v16`. Currently, `v8`, `v12`, and `v14` are on `v11` (implied by `atpose` and `supported` facts for `v8` at `v9`, `v12` at `v13`, and `v14` at `v15`, all supported by `v11`).
           
           To achieve the goal, we need to pick up each object from its current location and place it on a pose supported by `v16`. We will use arm `v4` for all pick and place operations, as `v6` has no defined `kin` actions.
           
           Here's the plan:
           1. Pick up `v14` from `v15` using arm `v4`.
           2. Place `v14` on `v21` (a pose supported by `v16`).
           3. Pick up `v12` from `v13` using arm `v4`.
           4. Place `v12` on `v18` (a pose supported by `v16`).
           5. Pick up `v8` from `v9` using arm `v4`.
           6. Place `v8` on `v22` (a pose supported by `v16`).
           
           This sequence of actions ensures that all three objects are eventually placed on `v16`. I have selected specific poses on `v16` for placing each object, ensuring they are different to avoid conflicts if `v16` has multiple dedicated poses. All selected poses and related actions are available in the provided list.
           
           --Plan--:
           (pick v4 v14 v15 #g0 #q1 #t1)
           (place v4 v14 v21 #g0 #o3 #o4)
           (pick v4 v12 v13 #g2 #q5 #t8)
           (place v4 v12 v18 #g2 #q7 #t16)
           (pick v4 v8 v9 #g1 #q2 #t2)
           (place v4 v8 v22 #g1 #o3 #o4)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q2) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the `atbconf` precondition for the `pick` action of `v8` was not met. The robot's base configuration (`atbconf`) needs to match the `q` parameter of the `kin` fact used in the `pick` action.
           
           Let's re-evaluate the plan, ensuring that the robot's base is moved to the correct configuration before each pick or place action if it's not already there.
           
           Initial `atbconf` is `v3`.
           
           Here's the revised plan:
           1. **Move base to `q1`** (for picking `v14` at `v15`).
           2. Pick up `v14` from `v15` using arm `v4`.
           3. **Move base to `o3`** (for placing `v14` at `v21`).
           4. Place `v14` on `v21`.
           5. **Move base to `q5`** (for picking `v12` at `v13`).
           6. Pick up `v12` from `v13` using arm `v4`.
           7. **Move base to `q7`** (for placing `v12` at `v18`).
           8. Place `v12` on `v18`.
           9. **Move base to `q2`** (for picking `v8` at `v9`).
           10. Pick up `v8` from `v9` using arm `v4`.
           11. **Move base to `o3`** (for placing `v8` at `v22`).
           12. Place `v8` on `v22`.
           
           This plan addresses the `atbconf` issue by inserting `move_base` actions as needed.
           
           --Plan--:
           (move_base v3 #q1 #t4)
           (pick v4 v14 v15 #g0 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v14 v21 #g0 #o3 #o4)
           (move_base #o3 #q5 #o0)
           (pick v4 v12 v13 #g2 #q5 #t8)
           (move_base #q5 #q7 #t26)
           (place v4 v12 v18 #g2 #q7 #t16)
           (move_base #q7 #q2 #t18)
           (pick v4 v8 v9 #g1 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v8 v22 #g1 #o3 #o4)

