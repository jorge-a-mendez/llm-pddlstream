User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v14, v15)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom atconf(v12, v13)
           Atom type(v4, v2)
           Atom objective(v17)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom type(v8, v6)
           Atom mode(v11)
           Atom camera(v10)
           Atom rock(v7)
           Atom rock(v3)
           Atom rock(v1)
           Atom lander(v9)
           Atom rock(v4)
           Atom objective(v18)
           Atom rover(v12)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom rover(v14)
           Atom type(v5, v6)
           Atom type(v1, v2)
           Atom onboard(v10, v14)
           Atom type(v7, v6)
           Atom conf(v12, v13)
           Atom free(v12, v16)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q9, v7)
           Atom conf(v14, #q9)
           Atom above(v14, #q10, v8)
           Atom conf(v14, #q10)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #q7, v7)
           Atom conf(v12, #q7)
           Atom imagevisible(v14, #q15, #y5, v18)
           Atom imagerange(v14, #q15, v18)
           Atom conf(v14, #q15)
           Atom ray(#y5)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q1, v5)
           Atom conf(v14, #q1)
           Atom above(v12, #q13, v5)
           Atom conf(v12, #q13)
           Atom imagevisible(v12, #q3, #y2, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v12, #q16, v4)
           Atom conf(v12, #q16)
           Atom above(v14, #q11, v4)
           Atom conf(v14, #q11)
           Atom comvisible(v12, #q5, #y3, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q4, v1)
           Atom conf(v14, #q4)
           Atom above(v12, #q12, v1)
           Atom conf(v12, #q12)
           Atom above(v14, #q8, v3)
           Atom conf(v14, #q8)
           Atom above(v12, #q14, v3)
           Atom conf(v12, #q14)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #t1, #q2)
           Atom motion(v12, #q3, #t31, #q2)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t2, #q3)
           Atom motion(v12, #q2, #t16, #q3)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, v15, #t0, #q1)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #t19, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #t8, v15)
           Atom motion(v14, #q0, #t22, #q10)
           Atom motion(v14, #q0, #t15, #q1)
           Atom motion(v14, #q10, #t21, #q0)
           Atom motion(v14, #q0, #t17, #q8)
           Atom motion(v14, #q9, #t20, #q0)
           Atom motion(v14, #q1, #t6, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t18, #q9)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, v15, #t14, #q4)
           Atom motion(v14, #q0, #t12, #q4)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q4, #t7, #q0)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v12, #q12, #t24, #q5)
           Atom motion(v12, #q5, #t28, #q14)
           Atom motion(v12, #q3, #t4, #q5)
           Atom motion(v12, #q5, #t11, #q7)
           Atom motion(v12, #q2, #t3, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t5, v13)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q7, #t13, #q5)
           Atom motion(v12, #q5, #t25, #q12)
           Atom motion(v12, #q14, #t30, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, v15, #t29, #q15)
           Atom motion(v14, #q15, #t27, #q0)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q4)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q4, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q0, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q4)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q0, #t23, #q11)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q4, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #t26, #q0)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q16, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q16)
           Atom motion(v12, #q7, #o2, #q16)
           Atom motion(v12, #q5, #t33, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q16, #o2, #q3)
           Atom motion(v12, #q16, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q16)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q12, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q12)
           Atom motion(v12, #q16, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q16)
           Atom motion(v12, #q16, #t32, #q5)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q6, #t9, #q0)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q15)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q15, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, v15, #t10, #q6)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #o5, #o2, #q16)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #q16, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v12 #q13 v5 v16))
           ((sample_rock v12 #q14 v3 v16))
           ((sample_rock v12 #q16 v4 v16))
           ((sample_rock v12 #q7 v7 v16))
           ((sample_rock v14 #q1 v5 v16))
           ((sample_rock v14 #q10 v8 v16))
           ((sample_rock v14 #q11 v4 v16))
           ((sample_rock v14 #q4 v1 v16))
           ((sample_rock v14 #q8 v3 v16))
           ((sample_rock v14 #q9 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q16))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q16))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t24 #q5))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q16))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t30 #q5))
           ((move v12 #q16 #o2 #o5))
           ((move v12 #q16 #o2 #q12))
           ((move v12 #q16 #o2 #q13))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q2))
           ((move v12 #q16 #o2 #q3))
           ((move v12 #q16 #o2 #q7))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t32 #q5))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q16))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t16 #q3))
           ((move v12 #q2 #t3 #q5))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q16))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t31 #q2))
           ((move v12 #q3 #t4 #q5))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t11 #q7))
           ((move v12 #q5 #t25 #q12))
           ((move v12 #q5 #t28 #q14))
           ((move v12 #q5 #t33 #q16))
           ((move v12 #q5 #t5 v13))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q16))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q5))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q2))
           ((move v12 v13 #t2 #q3))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q15))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #t12 #q4))
           ((move v14 #q0 #t15 #q1))
           ((move v14 #q0 #t17 #q8))
           ((move v14 #q0 #t18 #q9))
           ((move v14 #q0 #t22 #q10))
           ((move v14 #q0 #t23 #q11))
           ((move v14 #q0 #t8 v15))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t6 #q0))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t21 #q0))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q4))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t26 #q0))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 #q6))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t27 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t7 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q15))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t9 #q0))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t19 #q0))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t20 #q0))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q1))
           ((move v14 v15 #t10 #q6))
           ((move v14 v15 #t14 #q4))
           ((move v14 v15 #t29 #q15))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v12 #q3 #y2 v17 v10))
           ((calibrate v14 #q15 #y5 v18 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v12 #q3 #y2 v17 v10 v11))
           ((take_image v14 #q15 #y5 v18 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y3 v9 v8))
           ((send_analysis v12 #q5 #y3 v9 v1))
           ((send_analysis v12 #q5 #y3 v9 v5))
           ((send_analysis v12 #q5 #y3 v9 v3))
           ((send_analysis v12 #q5 #y3 v9 v4))
           ((send_analysis v12 #q5 #y3 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_image v12 #q5 #y3 v9 v18 v11))
           ((send_image v12 #q5 #y3 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `new-axiom@0()`, which is an axiom that represents a complex state that can be satisfied in several ways. Looking at the definitions of `new-axiom@0()`, it can be satisfied if `receivedimage(v17, v11)` and `receivedimage(v18, v11)` are true, and `receivedanalysis(?stone)` for objects of type `v2` (stone) and `receivedanalysis(?soil)` for objects of type `v6` (soil) are true.
           
           From the initial state, we have two rovers (v12 and v14), a camera (v10) that supports mode v11 and is onboard both rovers. There are several rocks of type v2 (v1, v3, v4) and v6 (v5, v7, v8). There are two objectives (v17, v18) and a lander (v9). Both rovers have a free store (v16).
           
           To achieve `receivedimage(v17, v11)` and `receivedimage(v18, v11)`, we need to take images of `v17` and `v18` with camera `v10` in mode `v11` and then send these images to the lander `v9`.
           To achieve `receivedanalysis(?stone)` for type `v2` rocks and `receivedanalysis(?soil)` for type `v6` rocks, we need to sample a rock of each type, and then send the analysis to the lander `v9`.
           
           Let's break down the plan:
           
           1.  **Image for objective v17:**
               *   Rover v12 can see v17 at config #q3.
               *   Calibrate camera v10 with rover v12 at config #q3 for objective v17.
               *   Take image of v17 with v12 at config #q3 using v10 in mode v11.
               *   Move v12 to a configuration where it can communicate, e.g., #q5.
               *   Send the image of v17 to lander v9.
           
           2.  **Image for objective v18:**
               *   Rover v12 can see v18 at config #q2.
               *   Calibrate camera v10 with rover v12 at config #q2 for objective v18.
               *   Take image of v18 with v12 at config #q2 using v10 in mode v11.
               *   Move v12 to a configuration where it can communicate, e.g., #q5 (if not already there).
               *   Send the image of v18 to lander v9.
           
           3.  **Analysis for type v2 rock (stone):**
               *   Let's pick rock v1 (type v2). Rover v12 can be above v1 at config #q12.
               *   Move v12 to #q12.
               *   Sample rock v1 with v12 into store v16.
               *   Move v12 to a configuration where it can communicate, e.g., #q5.
               *   Send the analysis of v1 to lander v9.
           
           4.  **Analysis for type v6 rock (soil):**
               *   Let's pick rock v5 (type v6). Rover v12 can be above v5 at config #q13.
               *   Move v12 to #q13.
               *   Sample rock v5 with v12 into store v16.
               *   Move v12 to a configuration where it can communicate, e.g., #q5.
               *   Send the analysis of v5 to lander v9.
           
           Since rover v12 has a free store at the beginning and can carry multiple samples, it can sample multiple rocks. However, sampling one rock fills the store. So, we'll need to drop the first sample to sample another if we use the same store on the same rover. The initial state mentions `free(v12, v16)` and `free(v14, v16)`. This implies each rover has its own store (v16 is likely a type, and each rover has an instance of it). However, the actions `sample_rock` and `drop_rock` use `?s: object`, and in the initial state `store(v16)` is provided. This suggests there is only one `store` object `v16`. Since both rovers `v12` and `v14` have `free(v12, v16)` and `free(v14, v16)`, they effectively have separate "slots" using the same store object identifier. Therefore, we can sample two rocks on the same rover without dropping.
           
           Let's use rover v12 for all tasks to minimize movement and complexity.
           
           Initial state: `atconf(v12, v13)`
           
           **Plan outline:**
           
           1.  Move v12 to #q3 to image v17.
           2.  Calibrate for v17.
           3.  Take image of v17.
           4.  Move v12 to #q2 to image v18.
           5.  Calibrate for v18.
           6.  Take image of v18.
           7.  Move v12 to #q12 to sample rock v1 (type v2).
           8.  Sample rock v1.
           9.  Move v12 to #q13 to sample rock v5 (type v6).
           10. Sample rock v5.
           11. Move v12 to #q5 to send data.
           12. Send image of v17.
           13. Send image of v18.
           14. Send analysis of v1.
           15. Send analysis of v5.
           
           Let's verify preconditions:
           `calibrate`: `imagevisible`, `onboard`, `atconf`, `~blocked`.
           `take_image`: `imagevisible`, `onboard`, `supports`, `atconf`, `calibrated`, `~blocked`.
           `sample_rock`: `above`, `store`, `atconf`, `free`.
           `send_image`: `comvisible`, `objective`, `mode`, `haveimage`, `atconf`, `~blocked`.
           `send_analysis`: `comvisible`, `rock`, `analyzed`, `atconf`, `~blocked`.
           
           The `new-axiom@0()` can be satisfied by `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedanalysis(v1)` (since v1 is type v2), and `receivedanalysis(v5)` (since v5 is type v6).
           
           --Plan--:
           (move v12 v13 #t2 #q3)
           (calibrate v12 #q3 #y2 v17 v10)
           (take_image v12 #q3 #y2 v17 v10 v11)
           (move v12 #q3 #t31 #q2)
           (calibrate v12 #q2 #y1 v18 v10)
           (take_image v12 #q2 #y1 v18 v10 v11)
           (move v12 #q2 #o2 #q12)
           (sample_rock v12 #q12 v1 v16)
           (move v12 #q12 #o2 #q13)
           (sample_rock v12 #q13 v5 v16)
           (move v12 #q13 #o2 #q5)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (send_analysis v12 #q5 #y3 v9 v1)
           (send_analysis v12 #q5 #y3 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final state did not satisfy the `new-axiom@0()` goal. The `new-axiom@0()` is an axiom that represents a state where two images have been received (`receivedimage(v17, v11)` and `receivedimage(v18, v11)`) AND two rock analyses have been received for a stone (`type(?stone, v2)`) and a soil (`type(?soil, v6)`). My previous plan successfully achieved `receivedimage` for both objectives and `receivedanalysis` for `v1` (stone) and `v5` (soil). The problem description states: "If any of the axioms contains an object that starts with '?', that object is a variable and there is an implicit existential quantifier over that variable." This means we need at least one analysis for *any* rock of type v2 and *any* rock of type v6.
           
           Let's re-verify the full list of conditions for `new-axiom@0()` (which seems to be composed of many `new-axiom@0()` instances, but let's assume it means the combination of all shown predicates):
           
           *   `atconf(v12, v13)` (true initially)
           *   `atconf(v14, v15)` (true initially)
           *   `free(v12, v16)` (true initially)
           *   `free(v14, v16)` (true initially)
           *   `receivedimage(v17, v11)`
           *   `receivedimage(v18, v11)`
           *   `type(?stone, v2)` and `receivedanalysis(?stone)`
           *   `type(?soil, v6)` and `receivedanalysis(?soil)`
           
           The initial `atconf` and `free` predicates are given as true for both rovers and remain true throughout the plan as long as we don't end up `full` on both rovers or move to different configurations where the initial ones are not set as current. However, the final state requires specific `atconf` and `free` conditions for the *final* state as part of the axiom. It means the rovers should be in these initial configurations and have free stores at the *end* of the plan. My previous plan correctly ensures `receivedimage` and `receivedanalysis` for one of each type.
           
           The `free` predicate is tricky. `sample_rock` changes `free(?v, ?s)` to `full(?v, ?s)`. `drop_rock` changes `full(?v, ?s)` to `free(?v, ?s)`. To satisfy `free(v12, v16)` and `free(v14, v16)` at the end, any sampled rocks must be dropped. Since we only need one of each rock type analyzed, we can sample, send analysis, and then drop it to free the store.
           
           Let's revise the plan with dropping rocks to satisfy the `free` condition for the axiom. Rover v12 will handle all image and analysis tasks.
           
           **Revised Plan outline:**
           
           1.  Move v12 to #q3 to image v17.
           2.  Calibrate for v17.
           3.  Take image of v17.
           4.  Move v12 to #q2 to image v18.
           5.  Calibrate for v18.
           6.  Take image of v18.
           7.  Move v12 to #q12 to sample rock v1 (type v2).
           8.  Sample rock v1.
           9.  Move v12 to #q5 to send analysis of v1.
           10. Send analysis of v1.
           11. Drop rock v1 to free store.
           12. Move v12 to #q13 to sample rock v5 (type v6).
           13. Sample rock v5.
           14. Move v12 to #q5 (if not already there) to send analysis of v5.
           15. Send analysis of v5.
           16. Drop rock v5 to free store.
           17. Send image of v17.
           18. Send image of v18.
           
           This sequence ensures all required `receivedimage` and `receivedanalysis` are true, and both `free(v12, v16)` and `free(v14, v16)` are true at the end. The final configuration of `v12` should be `v13` to satisfy `atconf(v12, v13)`.
           
           Current configuration of v12: `v13`
           
           --Plan--:
           (move v12 v13 #t2 #q3)
           (calibrate v12 #q3 #y2 v17 v10)
           (take_image v12 #q3 #y2 v17 v10 v11)
           (move v12 #q3 #t31 #q2)
           (calibrate v12 #q2 #y1 v18 v10)
           (take_image v12 #q2 #y1 v18 v10 v11)
           (move v12 #q2 #o2 #q12)
           (sample_rock v12 #q12 v1 v16)
           (move v12 #q12 #t24 #q5)
           (send_analysis v12 #q5 #y3 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q5 #o2 #q13)
           (sample_rock v12 #q13 v5 v16)
           (move v12 #q13 #o2 #q5)
           (send_analysis v12 #q5 #y3 v9 v5)
           (drop_rock v12 v16)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (move v12 #q5 #t5 v13)

