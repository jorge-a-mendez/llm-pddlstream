User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v35: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, 0.045), (-0.045, 0.115)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v9 is a pose with position (-0.235, -0.066, 0.781) and quaternion (0.0, 0.0, -0.12, 0.993).
           Object v19 is a pose with position (-0.146, -0.323, 0.781) and quaternion (0.0, 0.0, -0.221, 0.975).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.045, 0.045), (0.115, 0.115)).
           Object v13 is a pose with position (0.248, 0.434, 0.781) and quaternion (0.0, 0.0, 0.64, 0.768).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, -0.115), (-0.045, -0.045)).
           Object p5 is a pose with position (-0.08, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (0.15, 0.236, 0.781) and quaternion (0.0, 0.0, -0.661, 0.75).
           Object p6 is a pose with position (0.08, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (-0.08, -0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.08, -0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.045, -0.115), (0.115, -0.045)).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v17 is a pose with position (0.15, -0.284, 0.781) and quaternion (0.0, 0.0, 0.925, -0.38).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom atbconf(v3)
           Atom supported(v8, v9, v11)
           Atom supported(v8, p5, v20)
           Atom atpose(v18, v19)
           Atom atpose(v8, v9)
           Atom pose(v18, v19)
           Atom pose(v16, p8)
           Atom supported(v16, v17, v11)
           Atom canmove()
           Atom pose(v14, p7)
           Atom stackable(v8, v10)
           Atom stackable(v16, v20)
           Atom ataconf(v6, v7)
           Atom pose(v18, p9)
           Atom graspable(v14)
           Atom bconf(v3)
           Atom supported(v12, v13, v11)
           Atom supported(v12, p6, v20)
           Atom graspable(v16)
           Atom pose(v8, p5)
           Atom pose(v12, p6)
           Atom stackable(v18, v20)
           Atom atpose(v14, v15)
           Atom supported(v14, p7, v20)
           Atom kin(v35, v41, p7, v37, v38, v39)
           Atom atpose(v12, v13)
           Atom supported(v18, p9, v20)
           Atom pose(v8, v9)
           Atom arm(v4)
           Atom stackable(v18, v10)
           Atom handempty(v6)
           Atom stackable(v8, v20)
           Atom controllable(v4)
           Atom kin(v35, v43, p9, v37, v38, v39)
           Atom kin(v35, v40, p6, v37, v38, v39)
           Atom handempty(v4)
           Atom stackable(v12, v20)
           Atom pose(v16, v17)
           Atom graspable(v18)
           Atom aconf(v4, v5)
           Atom supported(v18, v19, v11)
           Atom stackable(v16, v10)
           Atom atpose(v16, v17)
           Atom kin(v35, v42, p8, v37, v38, v39)
           Atom pose(v14, v15)
           Atom stackable(v14, v20)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom stackable(v12, v10)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom aconf(v6, v7)
           Atom supported(v16, p8, v20)
           Atom arm(v6)
           Atom kin(v35, v36, p5, v37, v38, v39)
           Atom ataconf(v4, v5)
           Atom graspable(v8)
           Atom grasp(v8, #g0)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g2)
           Atom supported(v14, #o2, v20)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom supported(v16, #o2, v10)
           Atom grasp(v18, #g1)
           Atom supported(v12, #o2, v20)
           Atom grasp(v16, #g3)
           Atom supported(v8, #o2, v20)
           Atom supported(v18, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v14, #g4)
           Atom bconf(#q6)
           Atom atraj(#t6)
           Atom kin(v4, v12, v13, #g2, #q6, #t6)
           Atom bconf(#q7)
           Atom atraj(#t7)
           Atom kin(v4, v12, p6, #g2, #q7, #t7)
           Atom bconf(#q8)
           Atom atraj(#t16)
           Atom kin(v4, v18, v19, #g1, #q8, #t16)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v18, p9, #g1, #q5, #t5)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v8, p5, #g0, #q3, #t3)
           Atom bconf(#q9)
           Atom atraj(#t17)
           Atom kin(v4, v14, p7, #g4, #q9, #t17)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v14, v15, #g4, #q4, #t4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v16, v17, #g3, #q1, #t1)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v16, p8, #g3, #q2, #t2)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom btraj(#t13)
           Atom basemotion(v3, #t13, #q5)
           Atom basemotion(#q8, #o0, v3)
           Atom btraj(#t22)
           Atom basemotion(#q8, #t22, #q5)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q5, #o0, #q8)
           Atom btraj(#t15)
           Atom basemotion(v3, #t15, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q6, #o0, #q8)
           Atom btraj(#t25)
           Atom basemotion(#q6, #t25, #q7)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q8, #o0, #q6)
           Atom btraj(#t14)
           Atom basemotion(v3, #t14, #q6)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q8, #o0, #q2)
           Atom btraj(#t19)
           Atom basemotion(#q2, #t19, #q8)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q2)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q2, #o0, #q4)
           Atom btraj(#t21)
           Atom basemotion(#q7, #t21, #q4)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q5, #o0, #q1)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q1)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom btraj(#t23)
           Atom basemotion(#q1, #t23, #q2)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q1, #o0, #q9)
           Atom btraj(#t20)
           Atom basemotion(#q4, #t20, #q9)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q5, #o0, #q9)
           Atom btraj(#t26)
           Atom basemotion(#q9, #t26, #q1)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q7, #o0, #q0)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q0)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q7, #o0, #q3)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q9, #o0, #q3)
           Atom btraj(#t18)
           Atom basemotion(#q0, #t18, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t24)
           Atom basemotion(#q3, #t24, #q6)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q8)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, #o2, #g3, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v18, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g4, #o3, #o4)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q3 #t18))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q2 #t23))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q8 #t19))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q6 #t24))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q9 #t20))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q7 #t25))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q4 #t21))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q5 #t22))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q1 #t26))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t10))
           ((move_base v3 #q3 #t11))
           ((move_base v3 #q4 #t12))
           ((move_base v3 #q5 #t13))
           ((move_base v3 #q6 #t14))
           ((move_base v3 #q7 #t15))
           ((move_base v3 #q0 #t8))
           ((move_base v3 #q1 #t9))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p6 #g2 #q7 #t7))
           ((place v4 v12 p6 #g2 #q7 #t7))
           ((pick v4 v12 v13 #g2 #q6 #t6))
           ((place v4 v12 v13 #g2 #q6 #t6))
           ((pick v4 v14 #o2 #g4 #o3 #o4))
           ((place v4 v14 #o2 #g4 #o3 #o4))
           ((pick v4 v14 p7 #g4 #q9 #t17))
           ((place v4 v14 p7 #g4 #q9 #t17))
           ((pick v4 v14 v15 #g4 #q4 #t4))
           ((place v4 v14 v15 #g4 #q4 #t4))
           ((pick v4 v16 #o2 #g3 #o3 #o4))
           ((place v4 v16 #o2 #g3 #o3 #o4))
           ((pick v4 v16 p8 #g3 #q2 #t2))
           ((place v4 v16 p8 #g3 #q2 #t2))
           ((pick v4 v16 v17 #g3 #q1 #t1))
           ((place v4 v16 v17 #g3 #q1 #t1))
           ((pick v4 v18 #o2 #g1 #o3 #o4))
           ((place v4 v18 #o2 #g1 #o3 #o4))
           ((pick v4 v18 p9 #g1 #q5 #t5))
           ((place v4 v18 p9 #g1 #q5 #t5))
           ((pick v4 v18 v19 #g1 #q8 #t16))
           ((place v4 v18 v19 #g1 #q8 #t16))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p5 #g0 #q3 #t3))
           ((place v4 v8 p5 #g0 #q3 #t3))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Detailed Plan for Object Placement**
           
           Okay, here's my plan to move the five objects (v8, v12, v14, v16, v18) onto object v20.  I'm breaking this down into a sequence of pick-and-place actions, carefully considering robot base configurations, trajectories, and object poses.  I'm also paying close attention to the specific kinematic constraints and available actions within the current planning environment.
           
           **Initial Considerations:**
           
           *   **Goal:**  Get all five objects onto v20.
           *   **Initial State:**
               *   Each object (v8, v12, v14, v16, v18) starts at a specific pose supported by v11 (v9, v13, v15, v17, v19 respectively).
               *   All target poses for these objects are on v20, and the objects are stackable.
               *   I've got `pose(obj, #o2)` and `supported(obj, #o2, v20)` available as initial state information, where `#o2` is a placeholder for a pose on v20. I will need to substitute the numerical values for the target poses.
           
           **Overall Strategy:**
           
           I'll execute a series of pick-and-place operations. For each object:
           
           1.  **Move Base:** Move the robot base to a configuration that allows me to pick the object from its current location.
           2.  **Pick:** Use the robot arm to pick the object.
           3.  **Move Base:**  Move the robot base to a configuration that allows placement on v20.
           4.  **Place:** Place the object on a pose supported by v20.
           
           I'll repeat this for all five objects.  I will need to carefully consider the base configurations and trajectories.
           
           **Detailed Breakdown for one object (v8):**
           
           1.  **Move Base (Initial):**  `move_base v3 #q0 #o0`.
           2.  **Pick:**  `pick v4 v8 v9 #g0 #q0 #t0`.
           3.  **Move Base (Placement):**  `move_base #q0 #o3 #o0`.
           4.  **Place:**  `place v4 v8 #o2 #g0 #o3 #o4`.
           
           I'll follow this pattern for all other objects (v12, v14, v16, and v18).
           
           **Sequencing and Specific Actions:**
           
           *   To ensure the plan works, I'll execute the moves and picks/places sequentially, as detailed below:
           *   Note the use of pick-specific grasps (e.g., `#g0`, `#g2`) for each object/source location.
           *   Also note the initial locations are: `(v8 at v9, v12 at v13, v14 at v15, v16 at v17, and v18 at v19).`
           
           The plan will be:
           *   1.  Move to q0 to pick v8.
           *   2.  Pick v8.
           *   3.  Move to o3 to place v8.
           *   4.  Place v8.
           *   5.  Move to q6 to pick v12.
           *   6.  Pick v12.
           *   7.  Move to o3 to place v12.
           *   8.  Place v12.
           *   9.  Move to q4 to pick v14.
           *   10. Pick v14.
           *   11. Move to o3 to place v14.
           *   12. Place v14.
           *   13. Move to q1 to pick v16.
           *   14. Pick v16.
           *   15. Move to o3 to place v16.
           *   16. Place v16.
           *   17. Move to q8 to pick v18.
           *   18. Pick v18.
           *   19. Move to o3 to place v18.
           *   20. Place v18.
           
           **Detailed Sequence of Actions (Predicates, Preconditions):**
           
           1.  **(Move v8)**:
               *   `move_base v3 #q0 #t8` (pre: `atbconf(v3)`, `basemotion(v3, #t8, #q0)`)
           2.  **(Pick v8)**:
               *   `pick
)

Model:     **Detailed Plan for Object Placement**
           
           Okay, here's my plan to move the five objects (v8, v12, v14, v16, v18) onto object v20.  I'm breaking this down into a sequence of pick-and-place actions, carefully considering robot base configurations, trajectories, and object poses.  I'm also paying close attention to the specific kinematic constraints and available actions within the current planning environment.
           
           **Initial Considerations:**
           
           *   **Goal:**  Get all five objects onto v20.
           *   **Initial State:**
               *   Each object (v8, v12, v14, v16, v18) starts at a specific pose supported by v11 (v9, v13, v15, v17, v19 respectively).
               *   All target poses for these objects are on v20, and the objects are stackable.
               *   I've got `pose(obj, #o2)` and `supported(obj, #o2, v20)` available as initial state information, where `#o2` is a placeholder for a pose on v20. I will need to substitute the numerical values for the target poses.
           
           **Overall Strategy:**
           
           I'll execute a series of pick-and-place operations. For each object:
           
           1.  **Move Base:** Move the robot base to a configuration that allows me to pick the object from its current location.
           2.  **Pick:** Use the robot arm to pick the object.
           3.  **Move Base:**  Move the robot base to a configuration that allows placement on v20.
           4.  **Place:** Place the object on a pose supported by v20.
           
           I'll repeat this for all five objects.  I will need to carefully consider the base configurations and trajectories.
           
           **Detailed Breakdown for one object (v8):**
           
           1.  **Move Base (Initial):**  `move_base v3 #q0 #o0`.
           2.  **Pick:**  `pick v4 v8 v9 #g0 #q0 #t0`.
           3.  **Move Base (Placement):**  `move_base #q0 #o3 #o0`.
           4.  **Place:**  `place v4 v8 #o2 #g0 #o3 #o4`.
           
           I'll follow this pattern for all other objects (v12, v14, v16, and v18).
           
           **Sequencing and Specific Actions:**
           
           *   To ensure the plan works, I'll execute the moves and picks/places sequentially, as detailed below:
           *   Note the use of pick-specific grasps (e.g., `#g0`, `#g2`) for each object/source location.
           *   Also note the initial locations are: `(v8 at v9, v12 at v13, v14 at v15, v16 at v17, and v18 at v19).`
           
           The plan will be:
           *   1.  Move to q0 to pick v8.
           *   2.  Pick v8.
           *   3.  Move to o3 to place v8.
           *   4.  Place v8.
           *   5.  Move to q6 to pick v12.
           *   6.  Pick v12.
           *   7.  Move to o3 to place v12.
           *   8.  Place v12.
           *   9.  Move to q4 to pick v14.
           *   10. Pick v14.
           *   11. Move to o3 to place v14.
           *   12. Place v14.
           *   13. Move to q1 to pick v16.
           *   14. Pick v16.
           *   15. Move to o3 to place v16.
           *   16. Place v16.
           *   17. Move to q8 to pick v18.
           *   18. Pick v18.
           *   19. Move to o3 to place v18.
           *   20. Place v18.
           
           **Detailed Sequence of Actions (Predicates, Preconditions):**
           
           1.  **(Move v8)**:
               *   `move_base v3 #q0 #t8` (pre: `atbconf(v3)`, `basemotion(v3, #t8, #q0)`)
           2.  **(Pick v8)**:
               *   `pick

