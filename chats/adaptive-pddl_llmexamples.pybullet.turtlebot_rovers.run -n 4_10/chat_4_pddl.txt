User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom rock(v3)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom lander(v9)
           Atom rock(v7)
           Atom store(v16)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom atconf(v12, v13)
           Atom mode(v11)
           Atom rock(v8)
           Atom rover(v14)
           Atom conf(v12, v13)
           Atom camera(v10)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom type(v3, v2)
           Atom free(v12, v16)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom rock(v1)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom objective(v19)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom objective(v20)
           Atom atconf(v14, v15)
           Atom imagevisible(v12, #q7, #y5, v19)
           Atom imagerange(v12, #q7, v19)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #q9, v5)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q4, #y2, v20)
           Atom imagerange(v12, #q4, v20)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom comvisible(v12, #q5, #y3, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q8, v8)
           Atom conf(v12, #q8)
           Atom above(v12, #q11, v1)
           Atom conf(v12, #q11)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q12, v4)
           Atom conf(v12, #q12)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q3, v3)
           Atom conf(v12, #q3)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q10, v7)
           Atom conf(v12, #q10)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v1)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, v13, #t9, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, v13, #t10, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q4, #t16, #q6)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, v13, #t11, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q7, #t17, #q4)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q6, #t15, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, v13, #t8, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v14, v15, #t1, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v14, #q1, #t7, v15)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v12, #q5, #t23, #q7)
           Atom motion(v12, #q10, #t25, #q5)
           Atom motion(v12, #q5, #t2, v13)
           Atom motion(v12, #q2, #t4, #q5)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #t20, #q4)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #t18, #q6)
           Atom motion(v12, #q7, #t22, #q5)
           Atom motion(v12, #q6, #t6, #q5)
           Atom motion(v12, #q8, #t21, #q5)
           Atom motion(v12, #q9, #t24, #q5)
           Atom motion(v12, #q11, #t26, #q5)
           Atom motion(v12, #q5, #t14, #q8)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q4, #t5, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t19, #q9)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q5, #t3, #q3)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q3, #t12, #q5)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q8, #t13, #q3)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q11 v1 v16))
           ((sample_rock v12 #q12 v4 v16))
           ((sample_rock v12 #q3 v3 v16))
           ((sample_rock v12 #q8 v8 v16))
           ((sample_rock v12 #q9 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t25 #q5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t26 #q5))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t4 #q5))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t12 #q5))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t16 #q6))
           ((move v12 #q4 #t5 #q5))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t14 #q8))
           ((move v12 #q5 #t18 #q6))
           ((move v12 #q5 #t19 #q9))
           ((move v12 #q5 #t2 v13))
           ((move v12 #q5 #t20 #q4))
           ((move v12 #q5 #t23 #q7))
           ((move v12 #q5 #t3 #q3))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t15 #q2))
           ((move v12 #q6 #t6 #q5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t17 #q4))
           ((move v12 #q7 #t22 #q5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t13 #q3))
           ((move v12 #q8 #t21 #q5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t24 #q5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q6))
           ((move v12 v13 #t11 #q7))
           ((move v12 v13 #t8 #q2))
           ((move v12 v13 #t9 #q4))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #t7 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v12 #q4 #y2 v20 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v12 #q7 #y5 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v12 #q4 #y2 v20 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v12 #q7 #y5 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y3 v9 v7))
           ((send_analysis v12 #q5 #y3 v9 v1))
           ((send_analysis v12 #q5 #y3 v9 v4))
           ((send_analysis v12 #q5 #y3 v9 v3))
           ((send_analysis v12 #q5 #y3 v9 v8))
           ((send_analysis v12 #q5 #y3 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_image v12 #q5 #y3 v9 v18 v11))
           ((send_image v12 #q5 #y3 v9 v20 v11))
           ((send_image v12 #q5 #y3 v9 v17 v11))
           ((send_image v12 #q5 #y3 v9 v19 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ((send_image v14 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q1 #y0 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. Both rovers have a camera `v10` onboard that supports the imaging mode `v11`. There are several rock objectives (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) of two types, `v2` (stone) and `v6` (soil), and imaging objectives (`v17`, `v18`, `v19`, `v20`). Each rover has a storage `v16` which is currently free.
           
           The goal `new-axiom@0()` can be satisfied if several conditions are met simultaneously:
           1. Both rovers `v12` and `v14` are at their respective initial configurations `v13` and `v15`. This is already true.
           2. Both rovers `v12` and `v14` have free storage `v16`. This is also already true.
           3. Images of all objectives (`v17`, `v18`, `v19`, `v20`) in mode `v11` have been received.
           4. All rocks of type `v2` (which are `v1`, `v3`, `v4`) have been analyzed and the analysis has been received.
           5. All rocks of type `v6` (which are `v5`, `v7`, `v8`) have been analyzed and the analysis has been received.
           
           This means we need to:
           1. Take images of `v17`, `v18`, `v19`, `v20` with either rover.
           2. Send these images to the lander.
           3. Sample and analyze rocks `v1`, `v3`, `v4`, `v5`, `v7`, `v8` with either rover.
           4. Send the analysis of these rocks to the lander.
           
           Since rover `v12` starts at `v13` and has various motion paths to different observation points, and also has communication visibility from `#q5` to `v9`, we can use `v12` for image tasks and analysis. Rover `v14` also has communication visibility from `#q1` to `v9`.
           
           For imaging, rover `v12` has image visibility for:
           - `v19` from `#q7`
           - `v20` from `#q4`
           - `v17` from `#q6`
           - `v18` from `#q2`
           
           For sampling rocks, rover `v12` is above:
           - `v5` from `#q9`
           - `v8` from `#q8`
           - `v1` from `#q11`
           - `v4` from `#q12`
           - `v3` from `#q3`
           - `v7` from `#q10`
           
           We need to calibrate the camera before taking images. We also need to move the rover to the correct location for sampling. Since `v12` has free storage `v16`, it can sample rocks.
           
           Let's prioritize:
           1. Calibrate camera `v10` for `v12`.
           2. Take images of all objectives.
           3. Send images.
           4. Move `v12` to positions above rocks and sample them.
           5. Send analysis of the rocks.
           
           Since `v12` is initially at `v13` and the goal requires `v12` to be at `v13` at the end, any moves it makes for sampling or imaging must ultimately lead back to `v13` if no other actions require it to be elsewhere. However, for `send_analysis` and `send_image`, the rover `v12` needs to be at a configuration where it has `comvisible` to the lander `v9`. This configuration is `#q5`. So, `v12` will need to move to `#q5` to send data.
           
           It is more efficient to perform all imaging tasks, then move to a communication point to send all images. Then, move to sample all rocks, and finally move back to the communication point to send all analyses.
           
           Plan:
           1. Calibrate camera at `v12`'s current location for `v18`. This doesn't require movement initially.
           2. Take image of `v18`.
           3. Move to `#q4` to take image of `v20`.
           4. Take image of `v20`.
           5. Move to `#q6` to take image of `v17`.
           6. Take image of `v17`.
           7. Move to `#q7` to take image of `v19`.
           8. Take image of `v19`.
           9. Move to `#q5` to send all images.
           10. Send all images.
           11. Move to `#q9` to sample `v5`.
           12. Sample `v5`.
           13. Move to `#q8` to sample `v8`.
           14. Sample `v8`.
           15. Move to `#q11` to sample `v1`.
           16. Sample `v1`.
           17. Move to `#q12` to sample `v4`.
           18. Sample `v4`.
           19. Move to `#q3` to sample `v3`.
           20. Sample `v3`.
           21. Move to `#q10` to sample `v7`.
           22. Sample `v7`.
           23. Move to `#q5` to send all analyses.
           24. Send all analyses.
           
           This plan uses only `v12` since `v14` doesn't have initial calibration or imaging visibility from its starting position, and it only has one available `comvisible` location to send data. It's more efficient to use `v12` for everything. All analysis tasks can be done by `v12` as it starts with free storage.
           
           --Plan--:
           (calibrate v12 #q2 #y1 v18 v10)
           (take_image v12 #q2 #y1 v18 v10 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v20 v10)
           (take_image v12 #q4 #y2 v20 v10 v11)
           (move v12 #q4 #t16 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #o2 #q7)
           (calibrate v12 #q7 #y5 v19 v10)
           (take_image v12 #q7 #y5 v19 v10 v11)
           (move v12 #q7 #t22 #q5)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (send_image v12 #q5 #y3 v9 v20 v11)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (send_image v12 #q5 #y3 v9 v19 v11)
           (move v12 #q5 #t19 #q9)
           (sample_rock v12 #q9 v5 v16)
           (move v12 #q9 #o2 #q8)
           (sample_rock v12 #q8 v8 v16)
           (move v12 #q8 #o2 #q11)
           (sample_rock v12 #q11 v1 v16)
           (move v12 #q11 #o2 #q12)
           (sample_rock v12 #q12 v4 v16)
           (move v12 #q12 #o2 #q3)
           (sample_rock v12 #q3 v3 v16)
           (move v12 #q3 #o2 #q10)
           (sample_rock v12 #q10 v7 v16)
           (move v12 #q10 #t25 #q5)
           (send_analysis v12 #q5 #y3 v9 v5)
           (send_analysis v12 #q5 #y3 v9 v8)
           (send_analysis v12 #q5 #y3 v9 v1)
           (send_analysis v12 #q5 #y3 v9 v4)
           (send_analysis v12 #q5 #y3 v9 v3)
           (send_analysis v12 #q5 #y3 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. The `new-axiom@0()` contains a long list of conditions that must all be true at the end. My previous plan missed that all rocks of types `v2` and `v6` needed to be analyzed and received. I also realized that after sampling the rocks, the rover `v12` will have its storage `v16` full, but the `new-axiom@0()` states that `free(v12, v16)` must be true, so after sampling all rocks and sending the analysis, I must drop the rocks from the storage.
           
           Let's re-evaluate the goals and ensure all are met:
           1. `atconf(v12, v13)`: `v12` must end at `v13`.
           2. `atconf(v14, v15)`: `v14` must end at `v15`. (These are initial conditions and no action uses `v14` in the plan so it stays true).
           3. `free(v12, v16)`: `v12`'s storage must be free. This implies we need to `drop_rock` after sampling.
           4. `free(v14, v16)`: `v14`'s storage must be free. (Initial condition).
           5. `receivedimage(v17, v11)`: Image of `v17` (objective) with mode `v11` received.
           6. `receivedimage(v18, v11)`: Image of `v18` (objective) with mode `v11` received.
           7. `receivedimage(v19, v11)`: Image of `v19` (objective) with mode `v11` received.
           8. `receivedimage(v20, v11)`: Image of `v20` (objective) with mode `v11` received.
           9. `type(?stone, v2)` AND `receivedanalysis(?stone)`: All rocks of type `v2` (`v1`, `v3`, `v4`) must have received analysis.
           10. `type(?soil, v6)` AND `receivedanalysis(?soil)`: All rocks of type `v6` (`v5`, `v7`, `v8`) must have received analysis.
           
           The revised plan will include:
           - Calibrating the camera before each `take_image` if it becomes uncalibrated (taking an image uncalibrates it).
           - All image objectives `v17, v18, v19, v20` must be processed.
           - All rock objectives `v1, v3, v4, v5, v7, v8` must be sampled and their analysis sent.
           - After sampling, the collected samples must be dropped to make the storage free again.
           - All actions must be performed by `v12` as it's the only rover with the necessary initial conditions and movement options to fulfill all goals.
           - `v12` must return to `v13` at the end (or stay there, which happens implicitly if no other moves are made after the final required action).
           - `v12` must move to a `comvisible` location (`#q5`) to `send_image` and `send_analysis`.
           
           Let's refine the sequence:
           1. Calibrate camera `v10` on `v12`.
           2. Move `v12` to each image visibility location, take image, and recalibrate if necessary (it is, as `take_image` uncalibrates).
           3. Move `v12` to `#q5` and `send_image` for all collected images.
           4. Move `v12` to each rock location, `sample_rock`.
           5. Move `v12` to `#q5` and `send_analysis` for all sampled rocks.
           6. `drop_rock` from `v12`'s storage `v16`.
           7. Ensure `v12` is at `v13` at the end (though not strictly necessary as it's not explicitly moved away from `v13` after the last action if it doesn't need to be there for the last action). The previous plan put `v12` at `#q5` at the end of sending analysis; it needs to return to `v13` or have `v13` be the last communication spot. However, the available moves suggest `#q5` is the only communication spot reachable by `v12`. Since `atconf(v12, v13)` is a goal, the robot must end up at `v13`.
           
           Corrected sequence:
           1. Calibrate camera at `#q2` (for `v18`).
           2. Take image of `v18`.
           3. Calibrate camera at `#q4` (for `v20`).
           4. Take image of `v20`.
           5. Calibrate camera at `#q6` (for `v17`).
           6. Take image of `v17`.
           7. Calibrate camera at `#q7` (for `v19`).
           8. Take image of `v19`.
           9. Move `v12` to `#q5` to send images.
           10. Send all images.
           11. Move `v12` to positions to sample all rocks.
           12. Move `v12` to `#q5` to send all analyses.
           13. Drop all sampled rocks.
           14. Move `v12` back to `v13`.
           
           The available actions show specific calibration actions for each image objective and specific move actions between locations.
           The plan will require multiple calibrations as `take_image` uncalibrates the camera.
           
           --Plan--:
           (calibrate v12 #q2 #y1 v18 v10)
           (take_image v12 #q2 #y1 v18 v10 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v20 v10)
           (take_image v12 #q4 #y2 v20 v10 v11)
           (move v12 #q4 #t16 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #o2 #q7)
           (calibrate v12 #q7 #y5 v19 v10)
           (take_image v12 #q7 #y5 v19 v10 v11)
           (move v12 #q7 #t22 #q5)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (send_image v12 #q5 #y3 v9 v20 v11)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (send_image v12 #q5 #y3 v9 v19 v11)
           (move v12 #q5 #t19 #q9)
           (sample_rock v12 #q9 v5 v16)
           (move v12 #q9 #o2 #q8)
           (sample_rock v12 #q8 v8 v16)
           (move v12 #q8 #o2 #q11)
           (sample_rock v12 #q11 v1 v16)
           (move v12 #q11 #o2 #q12)
           (sample_rock v12 #q12 v4 v16)
           (move v12 #q12 #o2 #q3)
           (sample_rock v12 #q3 v3 v16)
           (move v12 #q3 #o2 #q10)
           (sample_rock v12 #q10 v7 v16)
           (move v12 #q10 #t25 #q5)
           (send_analysis v12 #q5 #y3 v9 v5)
           (send_analysis v12 #q5 #y3 v9 v8)
           (send_analysis v12 #q5 #y3 v9 v1)
           (send_analysis v12 #q5 #y3 v9 v4)
           (send_analysis v12 #q5 #y3 v9 v3)
           (send_analysis v12 #q5 #y3 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q5 #t2 v13)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q2) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the first `calibrate` action at `#q2` was not valid. The rover `v12` starts at `v13`, not `#q2`. I need to move the rover `v12` from its initial configuration `v13` to the appropriate observation/sampling configuration before attempting any action there.
           
           Let's re-examine the initial state for `v12`'s current configuration and available moves:
           - `atconf(v12, v13)` is true initially.
           
           So, for the first `calibrate` action, `v12` must first `move` from `v13` to `#q2`. Then the rest of the plan can proceed as designed. The final move back to `v13` is also necessary.
           
           Revised Plan Strategy:
           1. `move v12 v13 #t8 #q2` to reach the first imaging location.
           2. `calibrate` and `take_image` for `v18`.
           3. `move v12 #q2 #o2 #q4` to the next imaging location.
           4. `calibrate` and `take_image` for `v20`.
           5. `move v12 #q4 #t16 #q6` to the next imaging location.
           6. `calibrate` and `take_image` for `v17`.
           7. `move v12 #q6 #o2 #q7` to the last imaging location.
           8. `calibrate` and `take_image` for `v19`.
           9. `move v12 #q7 #t22 #q5` to the communication location.
           10. `send_image` for all four objectives.
           11. `move v12 #q5 #t19 #q9` to the first sampling location.
           12. `sample_rock` for `v5`.
           13. `move v12 #q9 #o2 #q8` to the next sampling location.
           14. `sample_rock` for `v8`.
           15. `move v12 #q8 #o2 #q11` to the next sampling location.
           16. `sample_rock` for `v1`.
           17. `move v12 #q11 #o2 #q12` to the next sampling location.
           18. `sample_rock` for `v4`.
           19. `move v12 #q12 #o2 #q3` to the next sampling location.
           20. `sample_rock` for `v3`.
           21. `move v12 #q3 #o2 #q10` to the last sampling location.
           22. `sample_rock` for `v7`.
           23. `move v12 #q10 #t25 #q5` back to the communication location.
           24. `send_analysis` for all six rocks.
           25. `drop_rock` to free storage.
           26. `move v12 #q5 #t2 v13` to return to the final required configuration.
           
           This looks like a comprehensive plan covering all preconditions and goal requirements.
           
           --Plan--:
           (move v12 v13 #t8 #q2)
           (calibrate v12 #q2 #y1 v18 v10)
           (take_image v12 #q2 #y1 v18 v10 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v20 v10)
           (take_image v12 #q4 #y2 v20 v10 v11)
           (move v12 #q4 #t16 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #o2 #q7)
           (calibrate v12 #q7 #y5 v19 v10)
           (take_image v12 #q7 #y5 v19 v10 v11)
           (move v12 #q7 #t22 #q5)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (send_image v12 #q5 #y3 v9 v20 v11)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (send_image v12 #q5 #y3 v9 v19 v11)
           (move v12 #q5 #t19 #q9)
           (sample_rock v12 #q9 v5 v16)
           (move v12 #q9 #o2 #q8)
           (sample_rock v12 #q8 v8 v16)
           (move v12 #q8 #o2 #q11)
           (sample_rock v12 #q11 v1 v16)
           (move v12 #q11 #o2 #q12)
           (sample_rock v12 #q12 v4 v16)
           (move v12 #q12 #o2 #q3)
           (sample_rock v12 #q3 v3 v16)
           (move v12 #q3 #o2 #q10)
           (sample_rock v12 #q10 v7 v16)
           (move v12 #q10 #t25 #q5)
           (send_analysis v12 #q5 #y3 v9 v5)
           (send_analysis v12 #q5 #y3 v9 v8)
           (send_analysis v12 #q5 #y3 v9 v1)
           (send_analysis v12 #q5 #y3 v9 v4)
           (send_analysis v12 #q5 #y3 v9 v3)
           (send_analysis v12 #q5 #y3 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q5 #t2 v13)

