User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom rock(v3)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom lander(v9)
           Atom rock(v7)
           Atom store(v16)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom atconf(v12, v13)
           Atom mode(v11)
           Atom rock(v8)
           Atom rover(v14)
           Atom conf(v12, v13)
           Atom camera(v10)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom type(v3, v2)
           Atom free(v12, v16)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom rock(v1)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom objective(v19)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom objective(v20)
           Atom atconf(v14, v15)
           Atom imagevisible(v12, #q4, #y2, v20)
           Atom imagerange(v12, #q4, v20)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom imagevisible(v12, #q7, #y5, v19)
           Atom imagerange(v12, #q7, v19)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #q9, v5)
           Atom conf(v12, #q9)
           Atom above(v12, #q8, v8)
           Atom conf(v12, #q8)
           Atom comvisible(v12, #q5, #y3, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q11, v1)
           Atom conf(v12, #q11)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q12, v4)
           Atom conf(v12, #q12)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q3, v3)
           Atom conf(v12, #q3)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q10, v7)
           Atom conf(v12, #q10)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v3)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom above(v14, #o5, v4)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom above(v14, #o5, v7)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, v13, #t11, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t7, v15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q6, #t29, #q7)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, v13, #t10, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, v15, #t1, #q0)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v12, #q4, #t16, #q6)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, v13, #t9, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q7, #t17, #q4)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q4, #t5, #q5)
           Atom motion(v12, #q5, #t23, #q7)
           Atom motion(v12, #q5, #t19, #q9)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q7, #t22, #q5)
           Atom motion(v12, #q5, #t18, #q6)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q11, #t26, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q6, #t6, #q5)
           Atom motion(v12, #q5, #t20, #q4)
           Atom motion(v12, #q9, #t24, #q5)
           Atom motion(v12, #q5, #t2, v13)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q2, #t31, #q4)
           Atom motion(v12, #q6, #t15, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q2, #t4, #q5)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, v13, #t8, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q10, #t25, #q5)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q11, #t33, #q12)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q8, #t32, #q11)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #t21, #q5)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q5, #t14, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #t27, #q8)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q3, #t12, #q5)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q8, #t13, #q3)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q12, #t28, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q5, #t3, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #t30, #q10)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q11 v1 v16))
           ((sample_rock v12 #q12 v4 v16))
           ((sample_rock v12 #q3 v3 v16))
           ((sample_rock v12 #q8 v8 v16))
           ((sample_rock v12 #q9 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t25 #q5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t26 #q5))
           ((move v12 #q11 #t33 #q12))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t28 #q3))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t31 #q4))
           ((move v12 #q2 #t4 #q5))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t12 #q5))
           ((move v12 #q3 #t30 #q10))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t16 #q6))
           ((move v12 #q4 #t5 #q5))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t14 #q8))
           ((move v12 #q5 #t18 #q6))
           ((move v12 #q5 #t19 #q9))
           ((move v12 #q5 #t2 v13))
           ((move v12 #q5 #t20 #q4))
           ((move v12 #q5 #t23 #q7))
           ((move v12 #q5 #t3 #q3))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t15 #q2))
           ((move v12 #q6 #t29 #q7))
           ((move v12 #q6 #t6 #q5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t17 #q4))
           ((move v12 #q7 #t22 #q5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t13 #q3))
           ((move v12 #q8 #t21 #q5))
           ((move v12 #q8 #t32 #q11))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t24 #q5))
           ((move v12 #q9 #t27 #q8))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q6))
           ((move v12 v13 #t11 #q7))
           ((move v12 v13 #t8 #q2))
           ((move v12 v13 #t9 #q4))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #t7 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v12 #q4 #y2 v20 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v12 #q7 #y5 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v12 #q4 #y2 v20 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v12 #q7 #y5 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y3 v9 v7))
           ((send_analysis v12 #q5 #y3 v9 v1))
           ((send_analysis v12 #q5 #y3 v9 v4))
           ((send_analysis v12 #q5 #y3 v9 v3))
           ((send_analysis v12 #q5 #y3 v9 v8))
           ((send_analysis v12 #q5 #y3 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_image v12 #q5 #y3 v9 v18 v11))
           ((send_image v12 #q5 #y3 v9 v20 v11))
           ((send_image v12 #q5 #y3 v9 v17 v11))
           ((send_image v12 #q5 #y3 v9 v19 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ((send_image v14 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q1 #y0 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to achieve the state described by the `new-axiom@0()` axiom. This axiom requires several conditions to be met, including having `receivedimage` for objectives `v17`, `v18`, `v19`, and `v20` with mode `v11`, and having `receivedanalysis` for rock types `v2` (stone) and `v6` (soil). Additionally, both rovers `v12` and `v14` must have a free storage slot (`v16`), and be at their initial configurations (`v13` and `v15` respectively).
           
           Let's break down how to achieve these conditions:
           
           **1. Received Images:**
              - We need to capture images of objectives `v17`, `v18`, `v19`, and `v20` and send them to the lander.
              - Both rovers `v12` and `v14` have cameras (`v10`) that support the required mode (`v11`).
              - We need to calibrate the camera before taking an image.
              - Then take the image and send it.
           
           **2. Received Analysis:**
              - We need to sample rocks of `type(stone, v2)` and `type(soil, v6)` and send their analysis.
              - Rocks `v1`, `v3`, `v4` are of type `v2` (stone).
              - Rocks `v5`, `v7`, `v8` are of type `v6` (soil).
              - We need to move the rover above a rock, sample it, and then send the analysis.
              - Both rovers `v12` and `v14` have free storage `v16`.
           
           **3. Initial Configurations and Free Stores:**
              - The initial state already has `atconf(v12, v13)` and `atconf(v14, v15)`.
              - The initial state also has `free(v12, v16)` and `free(v14, v16)`.
              - If a rover samples a rock, its storage becomes full. To re-satisfy `free(v, s)`, the rover must drop the rock.
           
           **Plan Strategy:**
           
           I will use `v12` to handle most of the tasks since it has more direct `imagevisible` and `above` conditions from its current `atconf(v12, v13)` or nearby configurations. I will prioritize sampling rocks and then sending the analysis, followed by taking images and sending them. I will also ensure to drop rocks to free up storage if needed.
           
           Let's go step-by-step for rover `v12`:
           
           *   **Images:**
               *   Calibrate `v10` using any visible objective (e.g., `v18` at `#q2`).
               *   Take images of `v18`, `v20`, `v17`, `v19` from respective locations.
               *   Move to a communication point (`#q5`) and send all collected images.
           
           *   **Analysis:**
               *   Sample a stone (e.g., `v3`) at `#q3`.
               *   Move to a communication point (`#q5`) and send the analysis.
               *   Drop the rock.
               *   Sample a soil (e.g., `v5`) at `#q9`.
               *   Move to a communication point (`#q5`) and send the analysis.
               *   Drop the rock.
           
           I need to make sure both rovers end up at their initial configurations and have free stores. The plan will make sure that the rovers return to their initial configuration. The `free` state will be maintained by `drop_rock`.
           
           Let's start by satisfying the `receivedimage` for all objectives using rover `v12`.
           Then, we will satisfy `receivedanalysis` for one rock of type `v2` (stone) and one of type `v6` (soil) using rover `v12`.
           
           Since the `new-axiom@0()` goal doesn't require any specific configuration for the rovers besides being `atconf(v12, v13)` and `atconf(v14, v15)` at the *end*, the order of operations for moving and sending is flexible. The goal also implies that the rovers are at their original configurations and have free storage, so any `move` or `sample_rock` actions must eventually lead to these conditions.
           
           I will make sure rover `v12` is at `v13` and rover `v14` is at `v15` at the end of the plan.
           
           First, let's gather images using `v12`:
           1.  Calibrate at a suitable position.
           2.  Take images for all objectives.
           3.  Move to a communication point.
           4.  Send all images.
           
           Then, let's analyze rocks using `v12`:
           1.  Move to rock `v3` (stone), sample it.
           2.  Move to communication point, send analysis.
           3.  Drop rock.
           4.  Move to rock `v5` (soil), sample it.
           5.  Move to communication point, send analysis.
           6.  Drop rock.
           7.  Move back to `v13`.
           
           The initial state already has `atconf(v12, v13)` and `atconf(v14, v15)`, and `free(v12, v16)` and `free(v14, v16)`.
           The goal requires these to be true at the end.
           
           --Plan--:
           (calibrate v12 #q2 #y1 v18 v10)
           (take_image v12 #q2 #y1 v18 v10 v11)
           (move v12 #q2 #t31 #q4)
           (calibrate v12 #q4 #y2 v20 v10)
           (take_image v12 #q4 #y2 v20 v10 v11)
           (move v12 #q4 #t16 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t29 #q7)
           (calibrate v12 #q7 #y5 v19 v10)
           (take_image v12 #q7 #y5 v19 v10 v11)
           (move v12 #q7 #t22 #q5)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (send_image v12 #q5 #y3 v9 v20 v11)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (send_image v12 #q5 #y3 v9 v19 v11)
           (move v12 #q5 #t3 #q3)
           (sample_rock v12 #q3 v3 v16)
           (move v12 #q3 #t12 #q5)
           (send_analysis v12 #q5 #y3 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q5 #t19 #q9)
           (sample_rock v12 #q9 v5 v16)
           (move v12 #q9 #t24 #q5)
           (send_analysis v12 #q5 #y3 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q5 #t2 v13)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q2) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `atconf(v12, #q2)` was not satisfied before the `calibrate` action. The initial configuration of `v12` is `v13`. I need to ensure the rover moves to the correct configuration before attempting actions like `calibrate` or `sample_rock`.
           
           Let's rethink the plan, ensuring each move and action is valid. The rover `v12` starts at `v13`.
           
           **Goal Requirements:**
           *   `receivedimage` for `v17`, `v18`, `v19`, `v20` with mode `v11`.
           *   `receivedanalysis` for rock types `v2` (stone) and `v6` (soil).
           *   `atconf(v12, v13)`
           *   `atconf(v14, v15)`
           *   `free(v12, v16)`
           *   `free(v14, v16)`
           
           **Revised Strategy for Rover `v12`:**
           
           1.  **Image Collection and Sending:**
               *   Move `v12` from `v13` to `#q2` (where `v18` is visible).
               *   Calibrate camera `v10`.
               *   Take image of `v18`.
               *   Move `v12` from `#q2` to `#q4` (where `v20` is visible).
               *   Calibrate camera `v10` (again, as it's uncalibrated after `take_image`).
               *   Take image of `v20`.
               *   Move `v12` from `#q4` to `#q6` (where `v17` is visible).
               *   Calibrate camera `v10`.
               *   Take image of `v17`.
               *   Move `v12` from `#q6` to `#q7` (where `v19` is visible).
               *   Calibrate camera `v10`.
               *   Take image of `v19`.
               *   Move `v12` from `#q7` to `#q5` (communication point).
               *   Send all four collected images (`v18`, `v20`, `v17`, `v19`).
           
           2.  **Rock Sampling and Analysis:**
               *   Move `v12` from `#q5` to `#q3` (where stone `v3` is above).
               *   Sample rock `v3`.
               *   Move `v12` from `#q3` to `#q5` (communication point).
               *   Send analysis of `v3`.
               *   Drop rock from `v12`'s store.
               *   Move `v12` from `#q5` to `#q9` (where soil `v5` is above).
               *   Sample rock `v5`.
               *   Move `v12` from `#q9` to `#q5` (communication point).
               *   Send analysis of `v5`.
               *   Drop rock from `v12`'s store.
           
           3.  **Return to Initial Configuration:**
               *   Move `v12` from `#q5` back to `v13`.
           
           This plan ensures that all preconditions are met at each step and that the final state matches the goal, particularly for `v12`. Rover `v14` is initially at `v15` with `free(v14, v16)`, and it will not be moved or used in this plan, thus satisfying its final state conditions.
           
           --Plan--:
           (move v12 v13 #t8 #q2)
           (calibrate v12 #q2 #y1 v18 v10)
           (take_image v12 #q2 #y1 v18 v10 v11)
           (move v12 #q2 #t31 #q4)
           (calibrate v12 #q4 #y2 v20 v10)
           (take_image v12 #q4 #y2 v20 v10 v11)
           (move v12 #q4 #t16 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t29 #q7)
           (calibrate v12 #q7 #y5 v19 v10)
           (take_image v12 #q7 #y5 v19 v10 v11)
           (move v12 #q7 #t22 #q5)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (send_image v12 #q5 #y3 v9 v20 v11)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (send_image v12 #q5 #y3 v9 v19 v11)
           (move v12 #q5 #t3 #q3)
           (sample_rock v12 #q3 v3 v16)
           (move v12 #q3 #t12 #q5)
           (send_analysis v12 #q5 #y3 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q5 #t19 #q9)
           (sample_rock v12 #q9 v5 v16)
           (move v12 #q9 #t24 #q5)
           (send_analysis v12 #q5 #y3 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q5 #t2 v13)

