User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom mode(v11)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom free(v14, v16)
           Atom rock(v3)
           Atom conf(v14, v15)
           Atom objective(v17)
           Atom rock(v7)
           Atom type(v1, v2)
           Atom objective(v18)
           Atom rock(v5)
           Atom rock(v8)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom type(v5, v6)
           Atom type(v4, v2)
           Atom atconf(v14, v15)
           Atom atconf(v12, v13)
           Atom rover(v14)
           Atom rock(v1)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom conf(v12, v13)
           Atom lander(v9)
           Atom rock(v4)
           Atom type(v7, v6)
           Atom free(v12, v16)
           Atom camera(v10)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v12, #q4, #y2, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #q14, v1)
           Atom conf(v12, #q14)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom above(v14, #q7, v1)
           Atom conf(v14, #q7)
           Atom above(v14, #q8, v4)
           Atom conf(v14, #q8)
           Atom above(v12, #o5, v3)
           Atom above(v14, #q0, v3)
           Atom conf(v14, #q0)
           Atom above(v14, #q9, v8)
           Atom conf(v14, #q9)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q6, v5)
           Atom conf(v14, #q6)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom imagevisible(v14, #q11, #y4, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y4)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q12, v7)
           Atom conf(v12, #q12)
           Atom above(v14, #q10, v7)
           Atom conf(v14, #q10)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q13, #y5, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y5)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #t2, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #t16, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q7, #t13, #q0)
           Atom motion(v14, v15, #t4, #q0)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, v15, #t22, #q13)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q13, #t24, #q1)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q8, #t14, #q0)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, v15, #t17, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #t8, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q5, #t6, #q4)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q4, #t7, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #t1, #q4)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q6, #t11, #q1)
           Atom motion(v14, #q0, #t12, #q6)
           Atom motion(v14, #q1, #t9, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q11, #t23, #q1)
           Atom motion(v14, v15, #t21, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #t10, #q5)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, v13, #t3, #q2)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q2, #t5, #q4)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q12, #t20, #q4)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, v13, #t19, #q12)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, v15, #t18, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #t15, #q0)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #o5, #o2, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q12 v7 v16))
           ((sample_rock v12 #q14 v1 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v14 #q0 v3 v16))
           ((sample_rock v14 #q10 v7 v16))
           ((sample_rock v14 #q6 v5 v16))
           ((sample_rock v14 #q7 v1 v16))
           ((sample_rock v14 #q8 v4 v16))
           ((sample_rock v14 #q9 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t20 #q4))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t10 #q5))
           ((move v12 #q2 #t5 #q4))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t1 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #t7 #q3))
           ((move v12 #q4 #t8 v13))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t6 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t19 #q12))
           ((move v12 v13 #t3 #q2))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q0 #t12 #q6))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t2 v15))
           ((move v14 #q1 #t9 #q6))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t23 #q1))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t24 #q1))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t11 #q1))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t13 #q0))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t14 #q0))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t15 #q0))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t16 #q7))
           ((move v14 v15 #t17 #q8))
           ((move v14 v15 #t18 #q9))
           ((move v14 v15 #t21 #q11))
           ((move v14 v15 #t22 #q13))
           ((move v14 v15 #t4 #q0))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #q11 #y4 v18 v10))
           ((calibrate v14 #q13 #y5 v17 v10))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q11 #y4 v18 v10 v11))
           ((take_image v14 #q13 #y5 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Analysis and Planning for `Atom new-axiom@0()`**
           
           Okay, so I've been given a goal: to satisfy the axiom `new-axiom@0()`. This thing has a few key requirements. I need to make sure both rovers, `v12` and `v14`, stay at their initial configurations (`atconf(v12, v13)` and `atconf(v14, v15)`), while also handling a bunch of image and analysis tasks.  The initial conditions are all met, but must be maintained.
           
           I've broken this down into these main sub-goals:
           
           1.  `receivedimage(v17, v11)`:  Got to get an image of something.
           2.  `receivedimage(v18, v11)`: Another image to grab.
           3.  `receivedanalysis(?stone)`:  Analyze all the rocks of type `v2`
           4.  `receivedanalysis(?soil)`:  Analyze all the rocks of type `v6`
           
           The state has these rocks and soil types already present:
           *   `v1`, `v3`, `v4` are rocks of type `v2`
           *   `v5`, `v7`, `v8` are soils of type `v6`
           
           To achieve the image sub-goals I'll need to use the actions available. `take_image`, `calibrate` and `send_image` are key. My rovers have the capability to calibrate and image specific targets. The location of the images needs to be considered. Then the images must be sent to meet the goal. I should choose which rover works best for which images.
           
           I have two rovers: `v12` and `v14`.  Both have a camera, `v10`, that can operate in mode `v11`. I'll want to use `v14` for image duties. `v14` needs to go to different locations to get the images and send them.  `v12` can analyze the rocks since it's located in the central area. The move action is critical here.
           
           To satisfy the `receivedanalysis` requirements, I'll use `sample_rock`, `send_analysis`, and `drop_rock`. I'll have `v12` handle all the rock analysis since `sample_rock` has a requirement of a `free` storage, and the state only allows each rover to carry one rock at a time. The analyses need to be sent from the communication configurations as well.
           
           Here's my plan to break this down:
           
           1.  **Image Taking (`v14`)**: `v14` needs to move to certain spots to take and send images. Then `v14` returns to `v15`.
           2.  **Rock Analysis (`v12`)**: `v12` will systematically move to each rock, `sample_rock` it, send the analysis, and `drop_rock`. It must then return to its initial `v13` state.
           
           Both of these rovers must fulfill the final requirement of being at a particular `atconf` location to satisfy the axiom:
           
           *   Rover `v14` at `v15`
           *   Rover `v12` at `v13`
           
           I am set with the plan now.
           
)

Model:     **Analysis and Planning for `Atom new-axiom@0()`**
           
           Okay, so I've been given a goal: to satisfy the axiom `new-axiom@0()`. This thing has a few key requirements. I need to make sure both rovers, `v12` and `v14`, stay at their initial configurations (`atconf(v12, v13)` and `atconf(v14, v15)`), while also handling a bunch of image and analysis tasks.  The initial conditions are all met, but must be maintained.
           
           I've broken this down into these main sub-goals:
           
           1.  `receivedimage(v17, v11)`:  Got to get an image of something.
           2.  `receivedimage(v18, v11)`: Another image to grab.
           3.  `receivedanalysis(?stone)`:  Analyze all the rocks of type `v2`
           4.  `receivedanalysis(?soil)`:  Analyze all the rocks of type `v6`
           
           The state has these rocks and soil types already present:
           *   `v1`, `v3`, `v4` are rocks of type `v2`
           *   `v5`, `v7`, `v8` are soils of type `v6`
           
           To achieve the image sub-goals I'll need to use the actions available. `take_image`, `calibrate` and `send_image` are key. My rovers have the capability to calibrate and image specific targets. The location of the images needs to be considered. Then the images must be sent to meet the goal. I should choose which rover works best for which images.
           
           I have two rovers: `v12` and `v14`.  Both have a camera, `v10`, that can operate in mode `v11`. I'll want to use `v14` for image duties. `v14` needs to go to different locations to get the images and send them.  `v12` can analyze the rocks since it's located in the central area. The move action is critical here.
           
           To satisfy the `receivedanalysis` requirements, I'll use `sample_rock`, `send_analysis`, and `drop_rock`. I'll have `v12` handle all the rock analysis since `sample_rock` has a requirement of a `free` storage, and the state only allows each rover to carry one rock at a time. The analyses need to be sent from the communication configurations as well.
           
           Here's my plan to break this down:
           
           1.  **Image Taking (`v14`)**: `v14` needs to move to certain spots to take and send images. Then `v14` returns to `v15`.
           2.  **Rock Analysis (`v12`)**: `v12` will systematically move to each rock, `sample_rock` it, send the analysis, and `drop_rock`. It must then return to its initial `v13` state.
           
           Both of these rovers must fulfill the final requirement of being at a particular `atconf` location to satisfy the axiom:
           
           *   Rover `v14` at `v15`
           *   Rover `v12` at `v13`
           
           I am set with the plan now.
           

