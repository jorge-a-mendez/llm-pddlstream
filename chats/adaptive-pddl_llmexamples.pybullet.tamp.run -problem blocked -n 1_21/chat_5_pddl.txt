User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom handempty(v6)
           Atom stackable(v8, v18)
           Atom atpose(v15, v16)
           Atom pose(v15, v16)
           Atom stackable(v12, v10)
           Atom pose(v8, v9)
           Atom aconf(v6, v7)
           Atom arm(v4)
           Atom controllable(v4)
           Atom graspable(v15)
           Atom atpose(v8, v9)
           Atom aconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom canmove()
           Atom ataconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom supported(v12, v13, v14)
           Atom stackable(v12, v18)
           Atom stackable(v8, v10)
           Atom handempty(v4)
           Atom stackable(v15, v10)
           Atom type(v8, v17)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)
           Atom type(v12, v17)
           Atom graspable(v12)
           Atom atpose(v12, v13)
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom pose(v12, v13)
           Atom supported(v15, v16, v11)
           Atom arm(v6)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom grasp(v8, v20)
           Atom grasp(v8, v21)
           Atom grasp(v8, v22)
           Atom grasp(v8, v23)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v19, v22, #o3, #o4)
           Atom kin(v4, v8, v19, v23, #o3, #o4)
           Atom kin(v4, v8, v19, v20, #o3, #o4)
           Atom kin(v4, v8, v19, v21, #o3, #o4)
           Atom kin(v4, v8, v9, v22, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 #o3 #o4))
           ((place v4 v8 v19 v20 #o3 #o4))
           ((pick v4 v8 v19 v21 #o3 #o4))
           ((place v4 v8 v19 v21 #o3 #o4))
           ((pick v4 v8 v19 v22 #o3 #o4))
           ((place v4 v8 v19 v22 #o3 #o4))
           ((pick v4 v8 v19 v23 #o3 #o4))
           ((place v4 v8 v19 v23 #o3 #o4))
           ((pick v4 v8 v9 v22 #o3 #o4))
           ((place v4 v8 v9 v22 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `(new-axiom@0)` is achieved if `(on ?green v18)` and `(type ?green v17)` are true. From the initial state, we know that `(type v8 v17)` and `(type v12 v17)`. Therefore, we need to achieve either `(on v8 v18)` or `(on v12 v18)`.
           
           Currently, object `v8` is `on` `v11` (supported by `v9`) and `v18` (supported by `v19`). Object `v12` is `on` `v14` (supported by `v13`). Object `v15` is `on` `v11` (supported by `v16`).
           
           Looking at the available actions, we have `pick` and `place` actions that can move `v8`, `v12`, and `v15`.
           Specifically, `v8` can be placed at `v19` on `v18`.
           From the initial state, we have `(atpose v8 v9)` and `(supported v8 v9 v11)`.
           We also have `(pose v8 v19)` and `(supported v8 v19 v18)`.
           The action `(place v4 v8 v19 v22 #o3 #o4)` could potentially place `v8` on `v18`.
           However, the preconditions for `place` include `(atgrasp v4 v8 v22)`. This means we need to first pick up `v8`.
           
           Let's try to pick `v8` from `v9` with `v22` grasp: `(pick v4 v8 v9 v22 #o3 #o4)`.
           The preconditions are:
           - `(kin v4 v8 v9 v22 #o3 #o4)`: True (provided in initial state)
           - `(atpose v8 v9)`: True (provided in initial state)
           - `(handempty v4)`: True (provided in initial state)
           - `(atbconf #o3)`: False, currently `(atbconf v3)`. We need to `move_base` to `#o3`.
           - `(negated unsafeapproach(v8, v9, v22))`: True (checked with `~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)`)
           - `(negated unsafeatraj(#o4))`: Assume true since not provided as `unsafeatraj(#o4)` or as a `~test-cfree-traj-pose-negative`.
           
           So, the first step should be `(move_base v3 #o3 #o0)`. After this, `(atbconf #o3)` will be true.
           Then we can perform `(pick v4 v8 v9 v22 #o3 #o4)`. This will make `(atgrasp v4 v8 v22)` true and `(atpose v8 v9)` false.
           Finally, we can place `v8` at `v19` (which is supported by `v18`): `(place v4 v8 v19 v22 #o3 #o4)`.
           The preconditions for `place` are:
           - `(kin v4 v8 v19 v22 #o3 #o4)`: True (provided)
           - `(atgrasp v4 v8 v22)`: True (after pick)
           - `(atbconf #o3)`: True (after move_base)
           - `(negated unsafepose(v8, v19))`: Assume true.
           - `(negated unsafeapproach(v8, v19, v22))`: Assume true.
           - `(negated unsafeatraj(#o4))`: Assume true.
           
           After placing, `(atpose v8 v19)` will be true. Since `(supported v8 v19 v18)` is also true, `(on v8 v18)` will be true, which satisfies the goal `(new-axiom@0())` as `v8` is of `type v17`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 v22 #o3 #o4)
           (place v4 v8 v19 v22 #o3 #o4)

