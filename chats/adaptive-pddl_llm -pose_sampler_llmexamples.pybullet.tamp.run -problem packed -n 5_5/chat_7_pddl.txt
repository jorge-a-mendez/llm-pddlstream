User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q3: object
           #q5: object
           #q9: object
           #t0: object
           #t1: object
           #t11: object
           #t2: object
           #t21: object
           #t3: object
           #t5: object
           #t7: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v3: object
           v4: object
           v5: object
           v53: object
           v54: object
           v55: object
           v56: object
           v57: object
           v6: object
           v7: object
           v8: object
           v9: object
           v90: object
           v91: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v18, v19, v11)
           Atom ~test-cfree-pose-pose-negative(v14, v23, v12, v21)
           Atom ~test-cfree-pose-pose-negative(v14, v23, v12, v28)
           Atom ~test-cfree-pose-pose-negative(v18, v54, v14, v27)
           Atom ~test-cfree-pose-pose-negative(v18, v91, v14, v27)
           Atom ~test-cfree-pose-pose-negative(v14, v27, v12, v26)
           Atom atpose(v14, v15)
           Atom ~test-cfree-pose-pose-negative(v14, v27, v12, v28)
           Atom ~test-cfree-pose-pose-negative(v18, v91, v14, v25)
           Atom ~test-cfree-pose-pose-negative(v16, v55, v14, v27)
           Atom aconf(v4, v5)
           Atom stackable(v14, v20)
           Atom ~test-cfree-pose-pose-negative(v12, v28, v8, v53)
           Atom handempty(v4)
           Atom pose(v14, v15)
           Atom ~test-cfree-pose-pose-negative(v14, v25, v12, v28)
           Atom atpose(v18, v19)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom stackable(v16, v10)
           Atom ~test-cfree-pose-pose-negative(v14, v25, v12, v21)
           Atom ~test-cfree-pose-pose-negative(v12, v28, v8, v22)
           Atom pose(v8, v9)
           Atom stackable(v8, v10)
           Atom controllable(v4)
           Atom ataconf(v4, v5)
           Atom supported(v14, v15, v11)
           Atom atbconf(v3)
           Atom stackable(v8, v20)
           Atom supported(v16, v17, v11)
           Atom atpose(v12, v13)
           Atom stackable(v18, v20)
           Atom ~test-cfree-pose-pose-negative(v14, v25, v12, v26)
           Atom supported(v12, v13, v11)
           Atom stackable(v16, v20)
           Atom ~test-cfree-pose-pose-negative(v18, v54, v14, v25)
           Atom pose(v16, v17)
           Atom ~test-cfree-pose-pose-negative(v16, v56, v14, v27)
           Atom ~test-cfree-pose-pose-negative(v14, v23, v12, v26)
           Atom arm(v4)
           Atom atpose(v16, v17)
           Atom supported(v8, v9, v11)
           Atom ~test-cfree-pose-pose-negative(v16, v55, v14, v25)
           Atom stackable(v14, v10)
           Atom stackable(v18, v10)
           Atom ~test-cfree-pose-pose-negative(v14, v27, v12, v21)
           Atom graspable(v8)
           Atom ~test-cfree-pose-pose-negative(v12, v28, v8, v57)
           Atom graspable(v18)
           Atom pose(v12, v13)
           Atom pose(v18, v19)
           Atom graspable(v12)
           Atom ataconf(v6, v7)
           Atom arm(v6)
           Atom graspable(v14)
           Atom graspable(v16)
           Atom stackable(v12, v20)
           Atom canmove()
           Atom stackable(v12, v10)
           Atom bconf(v3)
           Atom ~test-cfree-pose-pose-negative(v16, v56, v14, v25)
           Atom atpose(v8, v9)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v12, v21)
           Atom supported(v12, v21, v20)
           Atom pose(v12, v26)
           Atom supported(v12, v26, v20)
           Atom pose(v12, v28)
           Atom supported(v12, v28, v20)
           Atom grasp(v16, #g2)
           Atom grasp(v14, #g1)
           Atom grasp(v12, #g4)
           Atom grasp(v18, #g0)
           Atom pose(v14, v23)
           Atom supported(v14, v23, v20)
           Atom pose(v14, v27)
           Atom supported(v14, v27, v20)
           Atom pose(v14, v25)
           Atom supported(v14, v25, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g3)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v16, v55)
           Atom supported(v16, v55, v20)
           Atom pose(v16, v56)
           Atom supported(v16, v56, v20)
           Atom pose(v16, v24)
           Atom supported(v16, v24, v20)
           Atom pose(v18, v91)
           Atom supported(v18, v91, v20)
           Atom pose(v18, v90)
           Atom supported(v18, v90, v20)
           Atom pose(v18, v54)
           Atom supported(v18, v54, v20)
           Atom pose(v8, v57)
           Atom supported(v8, v57, v20)
           Atom pose(v8, v53)
           Atom supported(v8, v53, v20)
           Atom pose(v8, v22)
           Atom supported(v8, v22, v20)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, v24, #g2, #o3, #o4)
           Atom kin(v4, v16, v55, #g2, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t5)
           Atom kin(v4, v16, v17, #g2, #q3, #t5)
           Atom bconf(#q5)
           Atom atraj(#t7)
           Atom kin(v4, v12, v13, #g4, #q5, #t7)
           Atom kin(v4, v12, v21, #g4, #o3, #o4)
           Atom kin(v4, v12, v26, #g4, #o3, #o4)
           Atom kin(v4, v14, v23, #g1, #o3, #o4)
           Atom kin(v4, v14, v25, #g1, #o3, #o4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, v15, #g1, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v18, v19, #g0, #q0, #t0)
           Atom kin(v4, v18, v90, #g0, #o3, #o4)
           Atom kin(v4, v18, v54, #g0, #o3, #o4)
           Atom bconf(#q9)
           Atom atraj(#t11)
           Atom kin(v4, v8, v9, #g3, #q9, #t11)
           Atom kin(v4, v8, v53, #g3, #o3, #o4)
           Atom kin(v4, v8, v22, #g3, #o3, #o4)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q3, #o0, #q9)
           Atom btraj(#t21)
           Atom basemotion(v3, #t21, #q9)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q9, #o0, #q1)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q5, #o0, #q9)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v18, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, #o2, #g3, #o3, #o4)
           Atom kin(v4, v12, #o2, #g4, #o3, #o4)
           Atom kin(v4, v16, #o2, #g2, #o3, #o4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q5)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q9 #t21))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g4 #o3 #o4))
           ((place v4 v12 #o2 #g4 #o3 #o4))
           ((pick v4 v12 v13 #g4 #q5 #t7))
           ((place v4 v12 v13 #g4 #q5 #t7))
           ((pick v4 v12 v21 #g4 #o3 #o4))
           ((place v4 v12 v21 #g4 #o3 #o4))
           ((pick v4 v12 v26 #g4 #o3 #o4))
           ((place v4 v12 v26 #g4 #o3 #o4))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 v15 #g1 #q1 #t1))
           ((place v4 v14 v15 #g1 #q1 #t1))
           ((pick v4 v14 v23 #g1 #o3 #o4))
           ((place v4 v14 v23 #g1 #o3 #o4))
           ((pick v4 v14 v25 #g1 #o3 #o4))
           ((place v4 v14 v25 #g1 #o3 #o4))
           ((pick v4 v16 #o2 #g2 #o3 #o4))
           ((place v4 v16 #o2 #g2 #o3 #o4))
           ((pick v4 v16 v17 #g2 #q3 #t5))
           ((place v4 v16 v17 #g2 #q3 #t5))
           ((pick v4 v16 v24 #g2 #o3 #o4))
           ((place v4 v16 v24 #g2 #o3 #o4))
           ((pick v4 v16 v55 #g2 #o3 #o4))
           ((place v4 v16 v55 #g2 #o3 #o4))
           ((pick v4 v18 #o2 #g0 #o3 #o4))
           ((place v4 v18 #o2 #g0 #o3 #o4))
           ((pick v4 v18 v19 #g0 #q0 #t0))
           ((place v4 v18 v19 #g0 #q0 #t0))
           ((pick v4 v18 v54 #g0 #o3 #o4))
           ((place v4 v18 v54 #g0 #o3 #o4))
           ((pick v4 v18 v90 #g0 #o3 #o4))
           ((place v4 v18 v90 #g0 #o3 #o4))
           ((pick v4 v8 #o2 #g3 #o3 #o4))
           ((place v4 v8 #o2 #g3 #o3 #o4))
           ((pick v4 v8 v22 #g3 #o3 #o4))
           ((place v4 v8 v22 #g3 #o3 #o4))
           ((pick v4 v8 v53 #g3 #o3 #o4))
           ((place v4 v8 v53 #g3 #o3 #o4))
           ((pick v4 v8 v9 #g3 #q9 #t11))
           ((place v4 v8 v9 #g3 #q9 #t11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects (v8, v12, v14, v16, v18) that are currently on a surface `v11`. The goal is to move all of these objects to a different surface `v20`. The robot has one arm `v4` that is currently empty. The robot is at base configuration `v3`.
           
           The plan will involve a series of pick and place actions. For each object, the robot needs to first move to a base configuration where it can pick up the object, then pick it up, and finally move to a base configuration where it can place the object on `v20`. The poses on `v20` are specified with the `supported` predicate and vary for each object.
           
           --Plan--:
           (move_base v3 #q9 #t21)
           (pick v4 v8 v9 #g3 #q9 #t11)
           (move_base #q9 #o3 #o0)
           (place v4 v8 v22 #g3 #o3 #o4)
           (pick v4 v12 v13 #g4 #q5 #t7)
           (move_base #q5 #o3 #o0)
           (place v4 v12 v21 #g4 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v14 v15 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v14 v23 #g1 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v16 v17 #g2 #q3 #t5)
           (move_base #q3 #o3 #o0)
           (place v4 v16 v24 #g2 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v18 v19 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v18 v90 #g0 #o3 #o4)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q5) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan needs to ensure that the robot's base configuration (`atbconf`) matches the `q` parameter in the `kin` predicate for `pick` and `place` actions. The previous plan failed because it tried to `pick v4 v12 v13 #g4 #q5 #t7` when the robot's base was at `#o3`, not `#q5`.
           
           I need to make sure that before each `pick` or `place` action, the robot moves to the correct base configuration.
           
           Here's a revised plan:
           
           --Plan--:
           (move_base v3 #q9 #t21)
           (pick v4 v8 v9 #g3 #q9 #t11)
           (move_base #q9 #o3 #o0)
           (place v4 v8 v22 #g3 #o3 #o4)
           (move_base #o3 #q5 #o0)
           (pick v4 v12 v13 #g4 #q5 #t7)
           (move_base #q5 #o3 #o0)
           (place v4 v12 v21 #g4 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v14 v15 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v14 v23 #g1 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v16 v17 #g2 #q3 #t5)
           (move_base #q3 #o3 #o0)
           (place v4 v16 v24 #g2 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v18 v19 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v18 v90 #g0 #o3 #o4)

