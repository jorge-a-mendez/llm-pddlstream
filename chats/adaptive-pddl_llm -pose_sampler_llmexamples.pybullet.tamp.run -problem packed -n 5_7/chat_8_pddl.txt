User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q4: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t14: object
           #t19: object
           #t2: object
           #t29: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t50: object
           #t51: object
           #t52: object
           #t53: object
           #t54: object
           #t55: object
           #t56: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v3: object
           v31: object
           v32: object
           v4: object
           v43: object
           v44: object
           v45: object
           v46: object
           v47: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v16, v10)
           Atom ~test-cfree-pose-pose-negative(v16, v23, v12, v28)
           Atom atpose(v18, v19)
           Atom stackable(v18, v10)
           Atom ~test-cfree-pose-pose-negative(v12, v26, v8, v24)
           Atom ~test-cfree-pose-pose-negative(v16, v25, v14, v22)
           Atom ~test-cfree-pose-pose-negative(v12, v28, v8, v31)
           Atom ~test-cfree-pose-pose-negative(v16, v27, v14, v47)
           Atom ~test-cfree-pose-pose-negative(v12, v26, v8, v32)
           Atom aconf(v4, v5)
           Atom stackable(v14, v20)
           Atom stackable(v14, v10)
           Atom ~test-cfree-pose-pose-negative(v18, v44, v16, v27)
           Atom graspable(v18)
           Atom controllable(v4)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v20)
           Atom stackable(v16, v20)
           Atom stackable(v18, v20)
           Atom canmove()
           Atom ~test-cfree-pose-pose-negative(v16, v27, v12, v28)
           Atom ~test-cfree-pose-pose-negative(v18, v43, v14, v22)
           Atom ~test-cfree-pose-pose-negative(v14, v47, v8, v31)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom ~test-cfree-pose-pose-negative(v16, v25, v12, v28)
           Atom ~test-cfree-pose-pose-negative(v16, v27, v12, v26)
           Atom supported(v12, v13, v11)
           Atom ~test-cfree-pose-pose-negative(v14, v45, v8, v31)
           Atom stackable(v12, v10)
           Atom pose(v18, v19)
           Atom ~test-cfree-pose-pose-negative(v12, v26, v8, v31)
           Atom graspable(v8)
           Atom ~test-cfree-pose-pose-negative(v14, v45, v8, v32)
           Atom bconf(v3)
           Atom graspable(v12)
           Atom ~test-cfree-pose-pose-negative(v16, v27, v12, v21)
           Atom ~test-cfree-pose-pose-negative(v14, v47, v8, v32)
           Atom ~test-cfree-pose-pose-negative(v14, v45, v8, v24)
           Atom ~test-cfree-pose-pose-negative(v18, v46, v8, v24)
           Atom ataconf(v4, v5)
           Atom atpose(v16, v17)
           Atom ~test-cfree-pose-pose-negative(v18, v44, v14, v45)
           Atom atpose(v8, v9)
           Atom ~test-cfree-pose-pose-negative(v12, v28, v8, v32)
           Atom ~test-cfree-pose-pose-negative(v16, v25, v12, v21)
           Atom ~test-cfree-pose-pose-negative(v16, v25, v12, v26)
           Atom ~test-cfree-pose-pose-negative(v12, v28, v8, v24)
           Atom handempty(v6)
           Atom aconf(v6, v7)
           Atom arm(v6)
           Atom pose(v12, v13)
           Atom supported(v8, v9, v11)
           Atom stackable(v8, v10)
           Atom graspable(v14)
           Atom ~test-cfree-pose-pose-negative(v16, v23, v12, v21)
           Atom ~test-cfree-pose-pose-negative(v16, v23, v12, v26)
           Atom handempty(v4)
           Atom stackable(v12, v20)
           Atom ataconf(v6, v7)
           Atom supported(v18, v19, v11)
           Atom ~test-cfree-pose-pose-negative(v18, v44, v16, v23)
           Atom graspable(v16)
           Atom atbconf(v3)
           Atom atpose(v12, v13)
           Atom pose(v16, v17)
           Atom ~test-cfree-pose-pose-negative(v14, v22, v8, v31)
           Atom supported(v16, v17, v11)
           Atom pose(v8, v9)
           Atom arm(v4)
           Atom grasp(v16, #g2)
           Atom pose(v12, v26)
           Atom supported(v12, v26, v20)
           Atom pose(v12, v28)
           Atom supported(v12, v28, v20)
           Atom pose(v12, v21)
           Atom supported(v12, v21, v20)
           Atom grasp(v14, #g1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v12, #g4)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #g0)
           Atom pose(v14, v47)
           Atom supported(v14, v47, v20)
           Atom pose(v14, v22)
           Atom supported(v14, v22, v20)
           Atom pose(v14, v45)
           Atom supported(v14, v45, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom pose(v18, v44)
           Atom supported(v18, v44, v20)
           Atom pose(v18, v46)
           Atom supported(v18, v46, v20)
           Atom pose(v18, v43)
           Atom supported(v18, v43, v20)
           Atom pose(v16, v23)
           Atom supported(v16, v23, v20)
           Atom pose(v16, v27)
           Atom supported(v16, v27, v20)
           Atom pose(v16, v25)
           Atom supported(v16, v25, v20)
           Atom pose(v8, v31)
           Atom supported(v8, v31, v20)
           Atom pose(v8, v32)
           Atom supported(v8, v32, v20)
           Atom pose(v8, v24)
           Atom supported(v8, v24, v20)
           Atom grasp(v18, #g3)
           Atom bconf(#q9)
           Atom atraj(#t9)
           Atom kin(v4, v12, v13, #g4, #q9, #t9)
           Atom bconf(#q10)
           Atom atraj(#t29)
           Atom kin(v4, v12, v21, #g4, #q10, #t29)
           Atom bconf(#q15)
           Atom atraj(#t56)
           Atom kin(v4, v12, v26, #g4, #q15, #t56)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, v25, #g2, #o3, #o4)
           Atom bconf(#q11)
           Atom atraj(#t33)
           Atom kin(v4, v16, v23, #g2, #q11, #t33)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v16, v17, #g2, #q2, #t2)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, v15, #g1, #q1, #t1)
           Atom kin(v4, v14, v45, #g1, #o3, #o4)
           Atom bconf(#q13)
           Atom atraj(#t48)
           Atom kin(v4, v14, v22, #g1, #q13, #t48)
           Atom bconf(#q14)
           Atom atraj(#t49)
           Atom kin(v4, v8, v24, #g0, #q14, #t49)
           Atom kin(v4, v8, v31, #g0, #o3, #o4)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom kin(v4, v18, v44, #g3, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v18, v19, #g3, #q4, #t4)
           Atom bconf(#q12)
           Atom atraj(#t44)
           Atom kin(v4, v18, v43, #g3, #q12, #t44)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(v3, #o0, #q11)
           Atom btraj(#t54)
           Atom basemotion(#q2, #t54, #q11)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q11, #o0, #q2)
           Atom basemotion(#q11, #o0, #q12)
           Atom basemotion(#q12, #o0, v3)
           Atom basemotion(#q12, #o0, #q2)
           Atom basemotion(#q12, #o0, #q11)
           Atom basemotion(#q12, #o0, #q12)
           Atom basemotion(v3, #o0, #q12)
           Atom basemotion(#q2, #o0, #q12)
           Atom basemotion(#q12, #o0, #q10)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(v3, #o0, #q10)
           Atom btraj(#t30)
           Atom basemotion(#q2, #t30, #q10)
           Atom basemotion(#q10, #o0, #q12)
           Atom basemotion(#q10, #o0, v3)
           Atom btraj(#t32)
           Atom basemotion(#q10, #t32, #q2)
           Atom basemotion(#q10, #o0, #q10)
           Atom btraj(#t45)
           Atom basemotion(#q10, #t45, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom btraj(#t47)
           Atom basemotion(#q12, #t47, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom btraj(#t51)
           Atom basemotion(#q4, #t51, #q12)
           Atom basemotion(#q2, #o0, #q4)
           Atom btraj(#t38)
           Atom basemotion(#q4, #t38, #q10)
           Atom btraj(#t14)
           Atom basemotion(v3, #t14, #q4)
           Atom btraj(#t46)
           Atom basemotion(#q11, #t46, #q4)
           Atom btraj(#t39)
           Atom basemotion(#q4, #t39, #q11)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q0, #o0, #q2)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q0)
           Atom basemotion(#q12, #o0, #q0)
           Atom btraj(#t36)
           Atom basemotion(#q0, #t36, #q10)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q11, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q10, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q12)
           Atom btraj(#t37)
           Atom basemotion(#q0, #t37, #q11)
           Atom btraj(#t43)
           Atom basemotion(#q11, #t43, #q9)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q12, #o0, #q9)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q9, #o0, #q2)
           Atom btraj(#t31)
           Atom basemotion(#q9, #t31, #q10)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q4, #o0, #q9)
           Atom btraj(#t42)
           Atom basemotion(#q10, #t42, #q9)
           Atom basemotion(#q9, #o0, #q4)
           Atom btraj(#t19)
           Atom basemotion(v3, #t19, #q9)
           Atom basemotion(#q9, #o0, #q12)
           Atom basemotion(#q14, #o0, #q2)
           Atom basemotion(#q14, #o0, #q12)
           Atom basemotion(#q9, #o0, #q14)
           Atom basemotion(#q2, #o0, #q14)
           Atom basemotion(#q12, #o0, #q14)
           Atom basemotion(#q14, #o0, #q10)
           Atom basemotion(#q14, #o0, #q0)
           Atom basemotion(#q11, #o0, #q14)
           Atom btraj(#t50)
           Atom basemotion(#q14, #t50, #q9)
           Atom btraj(#t52)
           Atom basemotion(#q0, #t52, #q14)
           Atom basemotion(#q14, #o0, #q14)
           Atom basemotion(#q14, #o0, #q4)
           Atom basemotion(#q10, #o0, #q14)
           Atom basemotion(v3, #o0, #q14)
           Atom basemotion(#q14, #o0, #q11)
           Atom basemotion(#q14, #o0, v3)
           Atom basemotion(#q4, #o0, #q14)
           Atom basemotion(#q13, #o0, v3)
           Atom basemotion(#q13, #o0, #q10)
           Atom basemotion(#q13, #o0, #q4)
           Atom basemotion(#q13, #o0, #q0)
           Atom basemotion(#q11, #o0, #q13)
           Atom basemotion(#q13, #o0, #q11)
           Atom basemotion(#q12, #o0, #q13)
           Atom basemotion(#q0, #o0, #q13)
           Atom basemotion(#q13, #o0, #q14)
           Atom basemotion(#q2, #o0, #q13)
           Atom basemotion(#q9, #o0, #q13)
           Atom basemotion(v3, #o0, #q13)
           Atom btraj(#t53)
           Atom basemotion(#q13, #t53, #q2)
           Atom basemotion(#q14, #o0, #q13)
           Atom basemotion(#q10, #o0, #q13)
           Atom basemotion(#q13, #o0, #q13)
           Atom basemotion(#q13, #o0, #q12)
           Atom basemotion(#q13, #o0, #q9)
           Atom basemotion(#q4, #o0, #q13)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q1)
           Atom basemotion(#q9, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t34)
           Atom basemotion(#q10, #t34, #q1)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q1, #o0, #q12)
           Atom basemotion(#q14, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t41)
           Atom basemotion(#q1, #t41, #q11)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q14)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t55)
           Atom basemotion(#q1, #t55, #q13)
           Atom basemotion(#q13, #o0, #q1)
           Atom btraj(#t40)
           Atom basemotion(#q1, #t40, #q10)
           Atom basemotion(#q12, #o0, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom btraj(#t35)
           Atom basemotion(#q11, #t35, #q1)
           Atom kin(v4, v18, #o2, #g3, #o3, #o4)
           Atom kin(v4, v12, #o2, #g4, #o3, #o4)
           Atom kin(v4, v16, #o2, #g2, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#q12, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q12)
           Atom basemotion(#q13, #o0, #o3)
           Atom basemotion(#q14, #o0, #o3)
           Atom basemotion(#o3, #o0, #q13)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #q14)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, #q2)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q14 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q12 #o0))
           ((move_base #q0 #q13 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q10 #t36))
           ((move_base #q0 #q11 #t37))
           ((move_base #q0 #q14 #t52))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q12 #o0))
           ((move_base #q1 #q14 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q10 #t40))
           ((move_base #q1 #q11 #t41))
           ((move_base #q1 #q13 #t55))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q0 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q14 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q2 #t32))
           ((move_base #q10 #q1 #t34))
           ((move_base #q10 #q9 #t42))
           ((move_base #q10 #q4 #t45))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q14 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q1 #t35))
           ((move_base #q11 #q9 #t43))
           ((move_base #q11 #q4 #t46))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q0 #o0))
           ((move_base #q12 #q1 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q13 #o0))
           ((move_base #q12 #q14 #o0))
           ((move_base #q12 #q2 #o0))
           ((move_base #q12 #q9 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q12 #q4 #t47))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q0 #o0))
           ((move_base #q13 #q1 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q11 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q14 #o0))
           ((move_base #q13 #q4 #o0))
           ((move_base #q13 #q9 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q13 #q2 #t53))
           ((move_base #q14 #o3 #o0))
           ((move_base #q14 #q0 #o0))
           ((move_base #q14 #q1 #o0))
           ((move_base #q14 #q10 #o0))
           ((move_base #q14 #q11 #o0))
           ((move_base #q14 #q12 #o0))
           ((move_base #q14 #q13 #o0))
           ((move_base #q14 #q14 #o0))
           ((move_base #q14 #q2 #o0))
           ((move_base #q14 #q4 #o0))
           ((move_base #q14 v3 #o0))
           ((move_base #q14 #q9 #t50))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q12 #o0))
           ((move_base #q2 #q13 #o0))
           ((move_base #q2 #q14 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q10 #t30))
           ((move_base #q2 #q11 #t54))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q13 #o0))
           ((move_base #q4 #q14 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q10 #t38))
           ((move_base #q4 #q11 #t39))
           ((move_base #q4 #q12 #t51))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q12 #o0))
           ((move_base #q9 #q13 #o0))
           ((move_base #q9 #q14 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q10 #t31))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q12 #o0))
           ((move_base v3 #q13 #o0))
           ((move_base v3 #q14 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t10))
           ((move_base v3 #q1 #t11))
           ((move_base v3 #q2 #t12))
           ((move_base v3 #q4 #t14))
           ((move_base v3 #q9 #t19))
           ((pick v4 v12 #o2 #g4 #o3 #o4))
           ((place v4 v12 #o2 #g4 #o3 #o4))
           ((pick v4 v12 v13 #g4 #q9 #t9))
           ((place v4 v12 v13 #g4 #q9 #t9))
           ((pick v4 v12 v21 #g4 #q10 #t29))
           ((place v4 v12 v21 #g4 #q10 #t29))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 v15 #g1 #q1 #t1))
           ((place v4 v14 v15 #g1 #q1 #t1))
           ((pick v4 v14 v22 #g1 #q13 #t48))
           ((place v4 v14 v22 #g1 #q13 #t48))
           ((pick v4 v14 v45 #g1 #o3 #o4))
           ((place v4 v14 v45 #g1 #o3 #o4))
           ((pick v4 v16 #o2 #g2 #o3 #o4))
           ((place v4 v16 #o2 #g2 #o3 #o4))
           ((pick v4 v16 v17 #g2 #q2 #t2))
           ((place v4 v16 v17 #g2 #q2 #t2))
           ((pick v4 v16 v23 #g2 #q11 #t33))
           ((place v4 v16 v23 #g2 #q11 #t33))
           ((pick v4 v16 v25 #g2 #o3 #o4))
           ((place v4 v16 v25 #g2 #o3 #o4))
           ((pick v4 v18 #o2 #g3 #o3 #o4))
           ((place v4 v18 #o2 #g3 #o3 #o4))
           ((pick v4 v18 v19 #g3 #q4 #t4))
           ((place v4 v18 v19 #g3 #q4 #t4))
           ((pick v4 v18 v43 #g3 #q12 #t44))
           ((place v4 v18 v43 #g3 #q12 #t44))
           ((pick v4 v18 v44 #g3 #o3 #o4))
           ((place v4 v18 v44 #g3 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 v24 #g0 #q14 #t49))
           ((place v4 v8 v24 #g0 #q14 #t49))
           ((pick v4 v8 v31 #g0 #o3 #o4))
           ((place v4 v8 v31 #g0 #o3 #o4))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The task is to place five objects (v8, v12, v14, v16, v18) onto the `v20` surface. The robot `v4` starts with `handempty(v4)` at base configuration `v3` and arm configuration `v5`. Each object is currently on `v11`, except for `v12` which is on `v11`, and also supported by `v20` at various poses, same for `v14`, `v16`, `v18`, `v8`. The initial state also indicates that there are several poses on `v20` for each object. For each object, the plan will follow a similar pattern:
           1. Move the base to the object's current location to enable picking.
           2. Pick up the object.
           3. Move the base to a location suitable for placing the object on `v20`.
           4. Place the object on `v20`.
           
           The poses with `#o2` are the target poses on `v20` for all objects. `v20` is a general surface object that supports multiple objects.
           
           Let's break down the plan for each object:
           
           **Object v8:**
           - Currently at `v9` on `v11`. We need to move it to `#o2` on `v20`.
           - Pick v8 from v9 with arm v4. Base needs to be at `q0`.
           - Move base from `q0` to `#o3` (which is needed for placing the object at `#o2`).
           - Place v8 at `#o2` on v20 with arm v4. Base needs to be at `#o3`.
           
           **Object v12:**
           - Currently at `v13` on `v11`. We need to move it to `#o2` on `v20`.
           - Pick v12 from v13 with arm v4. Base needs to be at `q9`.
           - Move base from `q9` to `#o3`.
           - Place v12 at `#o2` on v20 with arm v4. Base needs to be at `#o3`.
           
           **Object v14:**
           - Currently at `v15` on `v11`. We need to move it to `#o2` on `v20`.
           - Pick v14 from v15 with arm v4. Base needs to be at `q1`.
           - Move base from `q1` to `#o3`.
           - Place v14 at `#o2` on v20 with arm v4. Base needs to be at `#o3`.
           
           **Object v16:**
           - Currently at `v17` on `v11`. We need to move it to `#o2` on `v20`.
           - Pick v16 from v17 with arm v4. Base needs to be at `q2`.
           - Move base from `q2` to `#o3`.
           - Place v16 at `#o2` on v20 with arm v4. Base needs to be at `#o3`.
           
           **Object v18:**
           - Currently at `v19` on `v11`. We need to move it to `#o2` on `v20`.
           - Pick v18 from v19 with arm v4. Base needs to be at `q4`.
           - Move base from `q4` to `#o3`.
           - Place v18 at `#o2` on v20 with arm v4. Base needs to be at `#o3`.
           
           I will try to move the base as little as possible. The base configurations corresponding to the target placement pose `#o2` are all `#o3`. So, after picking each object, the robot will move to `#o3` to place the object.
           
           I will attempt to pick and place all objects in an arbitrary order. I will start with v8, then v12, v14, v16, and finally v18.
           
           --Plan--:
           (move_base v3 #q0 #t10)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 #o2 #g0 #o3 #o4)
           (move_base #o3 #q9 #o0)
           (pick v4 v12 v13 #g4 #q9 #t9)
           (move_base #q9 #o3 #o0)
           (place v4 v12 #o2 #g4 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v14 v15 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v14 #o2 #g1 #o3 #o4)
           (move_base #o3 #q2 #o0)
           (pick v4 v16 v17 #g2 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v16 #o2 #g2 #o3 #o4)
           (move_base #o3 #q4 #o0)
           (pick v4 v18 v19 #g3 #q4 #t4)
           (move_base #q4 #o3 #o0)
           (place v4 v18 #o2 #g3 #o3 #o4)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom on(v8, v20)`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My previous plan failed because the `on` predicate was not being updated correctly. The `on` predicate is an axiom, meaning it is derived from `supported(?o, ?p, ?r)` and `atpose(?o, ?p)`. My previous placement action `(place v4 v8 #o2 #g0 #o3 #o4)` only resulted in `atpose(v8, #o2)` and didn't explicitly ensure `supported(v8, #o2, v20)`. However, looking at the initial state, for each object, `pose(?o, #o2)` is stated along with `supported(?o, #o2, v10)` and `supported(?o, #o2, v20)`. This implies that `#o2` is a pose *on* `v20`. So, placing an object at `#o2` should make it `on(object, v20)`. The `supported` facts are indeed present in the initial state for `#o2` and `v20` for all target objects. The problem must have been that I was using a continuous parameter, `#o2`, in the action. Let me review the available actions. The `place` action takes `?p` as a pose. And indeed `#o2` is a pose.
           
           Let me re-examine the state after the first `place` action in my previous plan.
           After `(place v4 v8 #o2 #g0 #o3 #o4)`:
           - `atpose(v8, #o2)` is true.
           - From initial state: `supported(v8, #o2, v20)` is true.
           - Axiom `on(v8, v20)` should then be true.
           
           It seems the issue might be with how the validator interprets the continuous parameter `#o2` or how the axiom is evaluated. Let me be explicit and try to use other poses that are also on `v20` from the initial state, instead of `#o2`.
           
           For each object, there are several poses on `v20` given in the initial state. For example, for `v8`:
           - `pose(v8, v31)` and `supported(v8, v31, v20)`
           - `pose(v8, v32)` and `supported(v8, v32, v20)`
           - `pose(v8, v24)` and `supported(v8, v24, v20)`
           
           And `kin` facts are provided for placing `v8` at these poses:
           - `kin(v4, v8, v24, #g0, #q14, #t49)`
           - `kin(v4, v8, v31, #g0, #o3, #o4)`
           
           I should choose specific, non-continuous poses that are supported by `v20` to place the objects. I will use `v24` for `v8`, `v21` for `v12`, `v22` for `v14`, `v23` for `v16`, and `v43` for `v18`. These are all supported by `v20` according to the initial state.
           
           Let's try again with these specific poses.
           
           --Plan--:
           (move_base v3 #q0 #t10)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q14 #t50)
           (place v4 v8 v24 #g0 #q14 #t49)
           (move_base #q14 #q9 #o0)
           (pick v4 v12 v13 #g4 #q9 #t9)
           (move_base #q9 #q10 #t31)
           (place v4 v12 v21 #g4 #q10 #t29)
           (move_base #q10 #q1 #t34)
           (pick v4 v14 v15 #g1 #q1 #t1)
           (move_base #q1 #q13 #t55)
           (place v4 v14 v22 #g1 #q13 #t48)
           (move_base #q13 #q2 #t53)
           (pick v4 v16 v17 #g2 #q2 #t2)
           (move_base #q2 #q11 #t54)
           (place v4 v16 v23 #g2 #q11 #t33)
           (move_base #q11 #q4 #t46)
           (pick v4 v18 v19 #g3 #q4 #t4)
           (move_base #q4 #q12 #t51)
           (place v4 v18 v43 #g3 #q12 #t44)

User:      The plan you provided contains the following invalid actions: `(move_base #q0 #q14 #t50), (move_base #q14 #q9 #o0)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q14 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q12 #o0))
           ((move_base #q0 #q13 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q10 #t36))
           ((move_base #q0 #q11 #t37))
           ((move_base #q0 #q14 #t52))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q12 #o0))
           ((move_base #q1 #q14 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q10 #t40))
           ((move_base #q1 #q11 #t41))
           ((move_base #q1 #q13 #t55))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q0 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q14 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q2 #t32))
           ((move_base #q10 #q1 #t34))
           ((move_base #q10 #q9 #t42))
           ((move_base #q10 #q4 #t45))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q14 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q1 #t35))
           ((move_base #q11 #q9 #t43))
           ((move_base #q11 #q4 #t46))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q0 #o0))
           ((move_base #q12 #q1 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q13 #o0))
           ((move_base #q12 #q14 #o0))
           ((move_base #q12 #q2 #o0))
           ((move_base #q12 #q9 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q12 #q4 #t47))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q0 #o0))
           ((move_base #q13 #q1 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q11 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q14 #o0))
           ((move_base #q13 #q4 #o0))
           ((move_base #q13 #q9 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q13 #q2 #t53))
           ((move_base #q14 #o3 #o0))
           ((move_base #q14 #q0 #o0))
           ((move_base #q14 #q1 #o0))
           ((move_base #q14 #q10 #o0))
           ((move_base #q14 #q11 #o0))
           ((move_base #q14 #q12 #o0))
           ((move_base #q14 #q13 #o0))
           ((move_base #q14 #q14 #o0))
           ((move_base #q14 #q2 #o0))
           ((move_base #q14 #q4 #o0))
           ((move_base #q14 v3 #o0))
           ((move_base #q14 #q9 #t50))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q12 #o0))
           ((move_base #q2 #q13 #o0))
           ((move_base #q2 #q14 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q10 #t30))
           ((move_base #q2 #q11 #t54))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q13 #o0))
           ((move_base #q4 #q14 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q10 #t38))
           ((move_base #q4 #q11 #t39))
           ((move_base #q4 #q12 #t51))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q12 #o0))
           ((move_base #q9 #q13 #o0))
           ((move_base #q9 #q14 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q10 #t31))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q12 #o0))
           ((move_base v3 #q13 #o0))
           ((move_base v3 #q14 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t10))
           ((move_base v3 #q1 #t11))
           ((move_base v3 #q2 #t12))
           ((move_base v3 #q4 #t14))
           ((move_base v3 #q9 #t19))
           ((pick v4 v12 #o2 #g4 #o3 #o4))
           ((place v4 v12 #o2 #g4 #o3 #o4))
           ((pick v4 v12 v13 #g4 #q9 #t9))
           ((place v4 v12 v13 #g4 #q9 #t9))
           ((pick v4 v12 v21 #g4 #q10 #t29))
           ((place v4 v12 v21 #g4 #q10 #t29))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 v15 #g1 #q1 #t1))
           ((place v4 v14 v15 #g1 #q1 #t1))
           ((pick v4 v14 v22 #g1 #q13 #t48))
           ((place v4 v14 v22 #g1 #q13 #t48))
           ((pick v4 v14 v45 #g1 #o3 #o4))
           ((place v4 v14 v45 #g1 #o3 #o4))
           ((pick v4 v16 #o2 #g2 #o3 #o4))
           ((place v4 v16 #o2 #g2 #o3 #o4))
           ((pick v4 v16 v17 #g2 #q2 #t2))
           ((place v4 v16 v17 #g2 #q2 #t2))
           ((pick v4 v16 v23 #g2 #q11 #t33))
           ((place v4 v16 v23 #g2 #q11 #t33))
           ((pick v4 v16 v25 #g2 #o3 #o4))
           ((place v4 v16 v25 #g2 #o3 #o4))
           ((pick v4 v18 #o2 #g3 #o3 #o4))
           ((place v4 v18 #o2 #g3 #o3 #o4))
           ((pick v4 v18 v19 #g3 #q4 #t4))
           ((place v4 v18 v19 #g3 #q4 #t4))
           ((pick v4 v18 v43 #g3 #q12 #t44))
           ((place v4 v18 v43 #g3 #q12 #t44))
           ((pick v4 v18 v44 #g3 #o3 #o4))
           ((place v4 v18 v44 #g3 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 v24 #g0 #q14 #t49))
           ((place v4 v8 v24 #g0 #q14 #t49))
           ((pick v4 v8 v31 #g0 #o3 #o4))
           ((place v4 v8 v31 #g0 #o3 #o4))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     My apologies, I made a mistake in selecting the valid `move_base` actions. I need to be more careful and cross-reference the `basemotion` facts provided in the initial state.
           
           Let's re-examine the `basemotion` facts to construct valid `move_base` sequences. Each `basemotion` fact is of the form `basemotion(?q1: object, ?t: object, ?q2: object)`, meaning a trajectory `?t` exists to move the base from configuration `?q1` to `?q2`.
           
           Here's a revised strategy for `move_base` actions:
           
           The initial `atbconf` is `v3`.
           For picking `v8` at `v9`, the base needs to be at `q0`. We have `(move_base v3 #q0 #t10)`.
           For placing `v8` at `v24`, the base needs to be at `q14`. We have `(move_base #q0 #q14 #t52)`. This was one of the invalid actions in the previous attempt. Oh, I see it's listed in the provided valid actions. My bad.
           
           Let's re-check the invalid actions from the previous attempt:
           1. `(move_base #q0 #q14 #t50)`: This is indeed listed as `((move_base #q0 #q14 #t52))` not `t50`.
           2. `(move_base #q14 #q9 #o0)`: This is indeed listed as `((move_base #q14 #q9 #t50))` not `#o0`.
           
           I made a mistake in the trajectory parameter for the `move_base` action. I need to be precise about the trajectory name.
           
           Let me try to build the plan again, meticulously checking each `move_base` and `place` action against the provided list of valid actions.
           
           **Object v8:**
           - Initial base: `v3`
           - Pick `v8` from `v9` (requires base at `q0`):
               - `(move_base v3 #q0 #t10)` (Valid)
               - `(pick v4 v8 v9 #g0 #q0 #t0)` (Valid)
           - Place `v8` at `v24` (requires base at `q14`):
               - `(move_base #q0 #q14 #t52)` (Valid, previous error was due to wrong trajectory)
               - `(place v4 v8 v24 #g0 #q14 #t49)` (Valid)
           
           **Object v12:**
           - Current base: `q14`
           - Pick `v12` from `v13` (requires base at `q9`):
               - `(move_base #q14 #q9 #t50)` (Valid, previous error was due to wrong trajectory)
               - `(pick v4 v12 v13 #g4 #q9 #t9)` (Valid)
           - Place `v12` at `v21` (requires base at `q10`):
               - `(move_base #q9 #q10 #t31)` (Valid)
               - `(place v4 v12 v21 #g4 #q10 #t29)` (Valid)
           
           **Object v14:**
           - Current base: `q10`
           - Pick `v14` from `v15` (requires base at `q1`):
               - `(move_base #q10 #q1 #t34)` (Valid)
               - `(pick v4 v14 v15 #g1 #q1 #t1)` (Valid)
           - Place `v14` at `v22` (requires base at `q13`):
               - `(move_base #q1 #q13 #t55)` (Valid)
               - `(place v4 v14 v22 #g1 #q13 #t48)` (Valid)
           
           **Object v16:**
           - Current base: `q13`
           - Pick `v16` from `v17` (requires base at `q2`):
               - `(move_base #q13 #q2 #t53)` (Valid)
               - `(pick v4 v16 v17 #g2 #q2 #t2)` (Valid)
           - Place `v16` at `v23` (requires base at `q11`):
               - `(move_base #q2 #q11 #t54)` (Valid)
               - `(place v4 v16 v23 #g2 #q11 #t33)` (Valid)
           
           **Object v18:**
           - Current base: `q11`
           - Pick `v18` from `v19` (requires base at `q4`):
               - `(move_base #q11 #q4 #t46)` (Valid)
               - `(pick v4 v18 v19 #g3 #q4 #t4)` (Valid)
           - Place `v18` at `v43` (requires base at `q12`):
               - `(move_base #q4 #q12 #t51)` (Valid)
               - `(place v4 v18 v43 #g3 #q12 #t44)` (Valid)
           
           This time, I have verified each `move_base` action against the provided list.
           
           --Plan--:
           (move_base v3 #q0 #t10)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q14 #t52)
           (place v4 v8 v24 #g0 #q14 #t49)
           (move_base #q14 #q9 #t50)
           (pick v4 v12 v13 #g4 #q9 #t9)
           (move_base #q9 #q10 #t31)
           (place v4 v12 v21 #g4 #q10 #t29)
           (move_base #q10 #q1 #t34)
           (pick v4 v14 v15 #g1 #q1 #t1)
           (move_base #q1 #q13 #t55)
           (place v4 v14 v22 #g1 #q13 #t48)
           (move_base #q13 #q2 #t53)
           (pick v4 v16 v17 #g2 #q2 #t2)
           (move_base #q2 #q11 #t54)
           (place v4 v16 v23 #g2 #q11 #t33)
           (move_base #q11 #q4 #t46)
           (pick v4 v18 v19 #g3 #q4 #t4)
           (move_base #q4 #q12 #t51)
           (place v4 v18 v43 #g3 #q12 #t44)

