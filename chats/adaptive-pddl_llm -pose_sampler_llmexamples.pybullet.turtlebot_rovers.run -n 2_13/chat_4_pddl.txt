User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v3, v2)
           Atom camera(v10)
           Atom supports(v10, v11)
           Atom conf(v12, v13)
           Atom store(v16)
           Atom type(v5, v6)
           Atom rock(v5)
           Atom onboard(v10, v14)
           Atom atconf(v12, v13)
           Atom mode(v11)
           Atom rover(v12)
           Atom type(v7, v6)
           Atom free(v12, v16)
           Atom rock(v4)
           Atom lander(v9)
           Atom objective(v18)
           Atom rover(v14)
           Atom conf(v14, v15)
           Atom rock(v3)
           Atom objective(v17)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom atconf(v14, v15)
           Atom rock(v7)
           Atom type(v8, v6)
           Atom type(v1, v2)
           Atom onboard(v10, v12)
           Atom type(v4, v2)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q0, #y0, v17)
           Atom imagerange(v14, #q0, v17)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q3, #y2, v18)
           Atom imagerange(v14, #q3, v18)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom comvisible(v14, #q4, #y3, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #q8, #y5, v18)
           Atom imagerange(v12, #q8, v18)
           Atom conf(v12, #q8)
           Atom ray(#y5)
           Atom above(v12, #q9, v4)
           Atom conf(v12, #q9)
           Atom above(v12, #q1, v3)
           Atom conf(v12, #q1)
           Atom imagevisible(v12, #q7, #y4, v17)
           Atom imagerange(v12, #q7, v17)
           Atom conf(v12, #q7)
           Atom ray(#y4)
           Atom above(v12, #o5, v1)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q6, v5)
           Atom conf(v14, #q6)
           Atom above(v12, #q5, v5)
           Atom conf(v12, #q5)
           Atom motion(v14, #q4, #t8, v15)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #t1, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q2, #t4, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #t7, #q1)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #t6, #q4)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #t3, #q3)
           Atom motion(v14, #q0, #t5, #q4)
           Atom motion(v14, #q0, #t16, #q3)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, v15, #t2, #q0)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q6, #t9, #q4)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, v15, #t13, #q6)
           Atom motion(v14, #q4, #t15, #q6)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q2, #t14, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #t12, #q2)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #t11, #q2)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, v13, #t10, #q7)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v3 v16))
           ((sample_rock v12 #q5 v5 v16))
           ((sample_rock v12 #q9 v4 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q6 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #t14 #q9))
           ((move v12 #q2 #t4 v13))
           ((move v12 #q2 #t7 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t11 #q2))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t12 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q1))
           ((move v12 v13 #t10 #q7))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t16 #q3))
           ((move v14 #q0 #t5 #q4))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t6 #q4))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #t15 #q6))
           ((move v14 #q4 #t8 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t9 #q4))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t13 #q6))
           ((move v14 v15 #t2 #q0))
           ((move v14 v15 #t3 #q3))
           ((calibrate v12 #q7 #y4 v17 v10))
           ((calibrate v12 #q8 #y5 v18 v10))
           ((calibrate v14 #q0 #y0 v17 v10))
           ((calibrate v14 #q3 #y2 v18 v10))
           ((take_image v12 #q7 #y4 v17 v10 v11))
           ((take_image v12 #q8 #y5 v18 v10 v11))
           ((take_image v14 #q0 #y0 v17 v10 v11))
           ((take_image v14 #q3 #y2 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y3 v9 v1))
           ((send_analysis v14 #q4 #y3 v9 v3))
           ((send_analysis v14 #q4 #y3 v9 v4))
           ((send_analysis v14 #q4 #y3 v9 v7))
           ((send_analysis v14 #q4 #y3 v9 v8))
           ((send_analysis v14 #q4 #y3 v9 v5))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q4 #y3 v9 v17 v11))
           ((send_image v14 #q4 #y3 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each with a camera (v10) that supports mode v11. They both have a storage unit v16 that is currently free. There are several rocks (v1, v3, v4, v5, v7, v8) and two objectives (v17, v18). There is also a lander v9 for communication.
           
           The goal is to achieve `new-axiom@0()`, which is a complex axiom. Based on the definition, it implies:
           1. Both rovers v12 and v14 are at some configuration (atconf(v12, v13), atconf(v14, v15)). This is true in the initial state.
           2. Both rovers have free storage (free(v12, v16), free(v14, v16)). This is true in the initial state.
           3. Both objectives v17 and v18 have received images in mode v11 (receivedimage(v17, v11), receivedimage(v18, v11)).
           4. All rocks of type v2 (v1, v3, v4) and all rocks of type v6 (v5, v7, v8) have been analyzed (receivedanalysis(?stone), receivedanalysis(?soil)).
           
           To achieve the goal, we need to:
           1. Capture images of v17 and v18 with camera v10 in mode v11 and send them to lander v9.
           2. Sample and analyze all rocks: v1, v3, v4 (type v2, stone) and v5, v7, v8 (type v6, soil). Then send the analysis to lander v9.
           
           Let's break down the image collection and sending:
           - Rover v12 can take images of v17 at #q7 and v18 at #q8, then send them from #q2 to v9.
           - Rover v14 can take images of v17 at #q0 and v18 at #q3, then send them from #q4 to v9.
           
           Let's break down the rock sampling and analysis:
           - Rover v12 can sample v1, v7, v8 at #o5, v3 at #q1, v5 at #q5, v4 at #q9. It can send analysis from #q2.
           - Rover v14 can sample v1, v3, v4, v7, v8 at #o5, v5 at #q6. It can send analysis from #q4.
           
           We should distribute tasks between the two rovers to achieve the goal efficiently.
           
           For images:
           - Rover v12 can calibrate and take image of v17 at #q7, then calibrate and take image of v18 at #q8. Then move to #q2 and send both images.
           - Alternatively, Rover v14 can calibrate and take image of v17 at #q0, then calibrate and take image of v18 at #q3. Then move to #q4 and send both images.
           Since we need both images received, both rovers or one rover completing both tasks are fine. Let's use Rover v12 for v17 and Rover v14 for v18.
           
           For rock analysis:
           - Rover v12 can sample v1, v7, v8 (at #o5), v3 (at #q1), v5 (at #q5), v4 (at #q9).
           - Rover v14 can sample v1, v3, v4, v7, v8 (at #o5), v5 (at #q6).
           
           Let's try to assign tasks:
           Rover v12:
           - Image v17
           - Sample v3, v4, v5, v7, v8, v1. (or a subset)
           
           Rover v14:
           - Image v18
           - Sample v1, v3, v4, v5, v7, v8. (or a subset)
           
           Let's use v12 for all rocks and images of v17, and v14 for images of v18.
           To analyze all rocks, v12 needs to sample them all.
           v12 needs to be at #o5 for rocks v1, v7, v8.
           v12 needs to be at #q1 for rock v3.
           v12 needs to be at #q5 for rock v5.
           v12 needs to be at #q9 for rock v4.
           
           Let's start by having v12 get all the rocks and then send analysis. Then v12 can take an image of v17 and send it. Then v14 can take an image of v18 and send it.
           
           However, the axiom states we need *all* rocks of type v2 and *all* rocks of type v6 to be analyzed.
           Type v2: v1, v3, v4
           Type v6: v5, v7, v8
           
           Let's have v12 analyze v1, v3, v4, v5, v7, v8.
           v12 starts at v13.
           1. Move to #o5 to sample v1, v7, v8.
           2. Move to #q1 to sample v3.
           3. Move to #q5 to sample v5.
           4. Move to #q9 to sample v4.
           5. Move to #q2 to send all analyses.
           6. Calibrate for v17 at #q7.
           7. Take image of v17.
           8. Move to #q2 (if not already there) and send image of v17.
           
           Rover v14 starts at v15.
           1. Calibrate for v18 at #q3.
           2. Take image of v18.
           3. Move to #q4 and send image of v18.
           
           Since rover v12 has only one store, it needs to sample one rock, drop it, sample another, drop it, and so on. This will satisfy the `analyzed` predicate. The problem doesn't require the samples to remain in the store.
           
           Plan for v12:
           - Sample v1 at #o5 (rover is at v13, needs to move to #o5)
           - Drop v1
           - Sample v7 at #o5
           - Drop v7
           - Sample v8 at #o5
           - Drop v8
           - Move to #q1
           - Sample v3 at #q1
           - Drop v3
           - Move to #q9
           - Sample v4 at #q9
           - Drop v4
           - Move to #q5
           - Sample v5 at #q5
           - Drop v5
           - Move to #q2 to send all analyses.
           - Send analysis for all rocks.
           - Move to #q7
           - Calibrate for v17.
           - Take image of v17.
           - Move to #q2.
           - Send image of v17.
           
           Plan for v14:
           - Move to #q3
           - Calibrate for v18.
           - Take image of v18.
           - Move to #q4.
           - Send image of v18.
           
           Let's re-evaluate the rock sampling sequence and action availability. Rover v12 needs to be able to sample all rocks, then drop them.
           (sample_rock v12 #o5 v1 v16)
           (sample_rock v12 #o5 v7 v16)
           (sample_rock v12 #o5 v8 v16)
           (sample_rock v12 #q1 v3 v16)
           (sample_rock v12 #q5 v5 v16)
           (sample_rock v12 #q9 v4 v16)
           
           And then `drop_rock v12 v16` is available to free up the store.
           Then `send_analysis` for each rock from configuration #q2.
           
           The goal asks for `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedanalysis(v1)`, `receivedanalysis(v3)`, `receivedanalysis(v4)`, `receivedanalysis(v5)`, `receivedanalysis(v7)`, `receivedanalysis(v8)`.
           
           Let's optimize movements and ensure all preconditions are met.
           
           **Rover v12 actions:**
           1. Initial position: v13.
           2. Sample rock v1, v7, v8. Need to move to #o5.
              - (move v12 v13 #o2 #o5)
              - (sample_rock v12 #o5 v1 v16)
              - (drop_rock v12 v16)
              - (sample_rock v12 #o5 v7 v16)
              - (drop_rock v12 v16)
              - (sample_rock v12 #o5 v8 v16)
              - (drop_rock v12 v16)
           3. Sample rock v3. Need to move to #q1.
              - (move v12 #o5 #o2 #q1)
              - (sample_rock v12 #q1 v3 v16)
              - (drop_rock v12 v16)
           4. Sample rock v4. Need to move to #q9.
              - (move v12 #q1 #o2 #q9)
              - (sample_rock v12 #q9 v4 v16)
              - (drop_rock v12 v16)
           5. Sample rock v5. Need to move to #q5.
              - (move v12 #q9 #o2 #q5)
              - (sample_rock v12 #q5 v5 v16)
              - (drop_rock v12 v16)
           6. Send all analyses. Need to move to #q2.
              - (move v12 #q5 #o2 #q2)
              - (send_analysis v12 #q2 #y1 v9 v1)
              - (send_analysis v12 #q2 #y1 v9 v3)
              - (send_analysis v12 #q2 #y1 v9 v4)
              - (send_analysis v12 #q2 #y1 v9 v5)
              - (send_analysis v12 #q2 #y1 v9 v7)
              - (send_analysis v12 #q2 #y1 v9 v8)
           7. Get image of v17. Need to move to #q7.
              - (move v12 #q2 #o2 #q7)
              - (calibrate v12 #q7 #y4 v17 v10)
              - (take_image v12 #q7 #y4 v17 v10 v11)
           8. Send image of v17. Need to move to #q2.
              - (move v12 #q7 #o2 #q2)
              - (send_image v12 #q2 #y1 v9 v17 v11)
           
           **Rover v14 actions:**
           1. Initial position: v15.
           2. Get image of v18. Need to move to #q3.
              - (move v14 v15 #t3 #q3) (using #t3 instead of #o2 where available for specific movements)
              - (calibrate v14 #q3 #y2 v18 v10)
              - (take_image v14 #q3 #y2 v18 v10 v11)
           3. Send image of v18. Need to move to #q4.
              - (move v14 #q3 #t6 #q4)
              - (send_image v14 #q4 #y3 v9 v18 v11)
           
           This plan ensures all the `receivedimage` and `receivedanalysis` predicates are met. All `atconf` and `free` predicates are managed.
           
           ```
           (move v12 v13 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v7 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v8 v16)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q1)
           (sample_rock v12 #q1 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q9)
           (sample_rock v12 #q9 v4 v16)
           (drop_rock v12 v16)
           (move v12 #q9 #o2 #q5)
           (sample_rock v12 #q5 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q5 #o2 #q2)
           (send_analysis v12 #q2 #y1 v9 v1)
           (send_analysis v12 #q2 #y1 v9 v3)
           (send_analysis v12 #q2 #y1 v9 v4)
           (send_analysis v12 #q2 #y1 v9 v5)
           (send_analysis v12 #q2 #y1 v9 v7)
           (send_analysis v12 #q2 #y1 v9 v8)
           (move v12 #q2 #o2 #q7)
           (calibrate v12 #q7 #y4 v17 v10)
           (take_image v12 #q7 #y4 v17 v10 v11)
           (move v12 #q7 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (move v14 v15 #t3 #q3)
           (calibrate v14 #q3 #y2 v18 v10)
           (take_image v14 #q3 #y2 v18 v10 v11)
           (move v14 #q3 #t6 #q4)
           (send_image v14 #q4 #y3 v9 v18 v11)
           ```

