User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rover(v12)
           Atom type(v5, v6)
           Atom store(v16)
           Atom supports(v10, v11)
           Atom rock(v5)
           Atom objective(v17)
           Atom type(v8, v6)
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom objective(v19)
           Atom mode(v11)
           Atom free(v12, v16)
           Atom type(v4, v2)
           Atom type(v7, v6)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom type(v1, v2)
           Atom onboard(v10, v12)
           Atom free(v14, v16)
           Atom onboard(v10, v14)
           Atom atconf(v12, v13)
           Atom lander(v9)
           Atom rover(v14)
           Atom camera(v10)
           Atom rock(v3)
           Atom rock(v7)
           Atom rock(v1)
           Atom objective(v18)
           Atom imagevisible(v14, #q1, #y1, v17)
           Atom imagerange(v14, #q1, v17)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q10, v7)
           Atom conf(v14, #q10)
           Atom above(v14, #q9, v1)
           Atom conf(v14, #q9)
           Atom above(v14, #q8, v3)
           Atom conf(v14, #q8)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q4, #y3, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom imagevisible(v12, #q12, #y5, v18)
           Atom imagerange(v12, #q12, v18)
           Atom conf(v12, #q12)
           Atom ray(#y5)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v12, #q15, #y7, v17)
           Atom imagerange(v12, #q15, v17)
           Atom conf(v12, #q15)
           Atom ray(#y7)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v1)
           Atom above(v12, #q2, v3)
           Atom conf(v12, #q2)
           Atom above(v12, #q5, v5)
           Atom conf(v12, #q5)
           Atom imagevisible(v12, #q13, #y6, v19)
           Atom imagerange(v12, #q13, v19)
           Atom conf(v12, #q13)
           Atom ray(#y6)
           Atom imagevisible(v14, #q6, #y4, v19)
           Atom imagerange(v14, #q6, v19)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v4)
           Atom above(v14, #q14, v4)
           Atom conf(v14, #q14)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q11, v8)
           Atom conf(v14, #q11)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, v15, #t45, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #t15, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #t12, #q8)
           Atom motion(v14, #q4, #t8, v15)
           Atom motion(v14, #q4, #t11, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q7, #t14, #q4)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q4, #t13, #q9)
           Atom motion(v14, #q9, #t16, #q4)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, v15, #t21, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #t18, #q4)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q4, #t29, #q10)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q4, #t17, #q0)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, v15, #t4, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q0, #t2, #q4)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, v13, #t27, #q13)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q0, #t39, #q1)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q1, #t3, #q4)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q1, #t30, #q0)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, v15, #t5, #q1)
           Atom motion(v12, #q13, #t42, #q2)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #t7, #q2)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q15, #t41, v13)
           Atom motion(v12, v13, #t28, #q15)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q13, #t34, #q15)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q2, #t31, #q5)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q3, #t6, v13)
           Atom motion(v12, #q15, #t36, #q3)
           Atom motion(v12, #q3, #t1, #q2)
           Atom motion(v12, #q13, #t23, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q2, #t0, #q3)
           Atom motion(v12, #q5, #t33, #q3)
           Atom motion(v12, #q3, #t38, #q5)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q14, #t25, #q4)
           Atom motion(v14, #q14, #t43, #q10)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, #q9, #t44, #q14)
           Atom motion(v14, #q0, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q8)
           Atom motion(v14, #q4, #t20, #q14)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, v13, #t26, #q12)
           Atom motion(v12, #q5, #t37, #q12)
           Atom motion(v12, #q12, #t35, #q13)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #t22, #q3)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q14, #o2, #q6)
           Atom motion(v14, #q4, #t9, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q14)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q6, #t10, #q4)
           Atom motion(v14, #q0, #t32, #q6)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q11, #t24, #q4)
           Atom motion(v14, #q4, #t19, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q10, #t40, #q11)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v3 v16))
           ((sample_rock v12 #q5 v5 v16))
           ((sample_rock v14 #q10 v7 v16))
           ((sample_rock v14 #q11 v8 v16))
           ((sample_rock v14 #q14 v4 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((sample_rock v14 #q8 v3 v16))
           ((sample_rock v14 #q9 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t22 #q3))
           ((move v12 #q12 #t35 #q13))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t23 #q3))
           ((move v12 #q13 #t34 #q15))
           ((move v12 #q13 #t42 #q2))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #t36 #q3))
           ((move v12 #q15 #t41 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t0 #q3))
           ((move v12 #q2 #t31 #q5))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #t1 #q2))
           ((move v12 #q3 #t38 #q5))
           ((move v12 #q3 #t6 v13))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t33 #q3))
           ((move v12 #q5 #t37 #q12))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t26 #q12))
           ((move v12 v13 #t27 #q13))
           ((move v12 v13 #t28 #q15))
           ((move v12 v13 #t7 #q2))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t2 #q4))
           ((move v14 #q0 #t32 #q6))
           ((move v14 #q0 #t39 #q1))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t3 #q4))
           ((move v14 #q1 #t30 #q0))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t18 #q4))
           ((move v14 #q10 #t40 #q11))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t24 #q4))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q6))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q8))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t25 #q4))
           ((move v14 #q14 #t43 #q10))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #t11 #q7))
           ((move v14 #q4 #t12 #q8))
           ((move v14 #q4 #t13 #q9))
           ((move v14 #q4 #t17 #q0))
           ((move v14 #q4 #t19 #q11))
           ((move v14 #q4 #t20 #q14))
           ((move v14 #q4 #t29 #q10))
           ((move v14 #q4 #t8 v15))
           ((move v14 #q4 #t9 #q6))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q14))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t10 #q4))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t14 #q4))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t15 #q4))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t16 #q4))
           ((move v14 #q9 #t44 #q14))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t21 #q9))
           ((move v14 v15 #t4 #q0))
           ((move v14 v15 #t45 #q8))
           ((move v14 v15 #t5 #q1))
           ((calibrate v12 #q12 #y5 v18 v10))
           ((calibrate v12 #q13 #y6 v19 v10))
           ((calibrate v12 #q15 #y7 v17 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q1 #y1 v17 v10))
           ((calibrate v14 #q6 #y4 v19 v10))
           ((take_image v12 #q12 #y5 v18 v10 v11))
           ((take_image v12 #q13 #y6 v19 v10 v11))
           ((take_image v12 #q15 #y7 v17 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q1 #y1 v17 v10 v11))
           ((take_image v14 #q6 #y4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y3 v9 v7))
           ((send_analysis v14 #q4 #y3 v9 v8))
           ((send_analysis v14 #q4 #y3 v9 v4))
           ((send_analysis v14 #q4 #y3 v9 v5))
           ((send_analysis v14 #q4 #y3 v9 v3))
           ((send_analysis v14 #q4 #y3 v9 v1))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q4 #y3 v9 v18 v11))
           ((send_image v14 #q4 #y3 v9 v17 v11))
           ((send_image v14 #q4 #y3 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, equipped with a camera `v10` that supports mode `v11`. There are several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`, `v19`). Both rovers have stores (`v16`) that are initially free. A lander `v9` is present for communication. The goal is to achieve `new-axiom@0()`, which means both rovers need to be at some configurations, their stores must be free, images for objectives `v17`, `v18`, and `v19` in mode `v11` must be received, and rocks `v2` (which is `v1`, `v3`, `v4` from type facts) and `v6` (which is `v5`, `v7`, `v8` from type facts) must be analyzed.
           
           Let's break down the goal:
           1. `atconf(v12, v13)` and `atconf(v14, v15)` are already true in the initial state.
           2. `free(v12, v16)` and `free(v14, v16)` are already true in the initial state.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`: This requires taking images of these objectives with the camera `v10` in mode `v11` and then sending them to the lander `v9`.
           4. `receivedanalysis(?stone)` where `type(?stone, v2)` (meaning `v1`, `v3`, `v4`): This requires sampling rocks `v1`, `v3`, and `v4` and then sending their analysis.
           5. `receivedanalysis(?soil)` where `type(?soil, v6)` (meaning `v5`, `v7`, `v8`): This requires sampling rocks `v5`, `v7`, and `v8` and then sending their analysis.
           
           To achieve goal point 3, we need to:
           - Calibrate the camera.
           - Take images of `v17`, `v18`, `v19`.
           - Send images to the lander `v9`.
           
           To achieve goal points 4 and 5, we need to:
           - Sample rocks `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
           - Send analysis for these rocks.
           
           We have two rovers, `v12` and `v14`, and two stores `v16`. Since sampling a rock fills a store, and we need to sample 6 rocks but only have two stores, we will need to drop rocks from the stores in between sampling. Also, the rovers are at `v13` and `v15` respectively, and will need to move to configurations where they can perform these actions.
           
           Let's plan for `v14` first, as it has more direct access to objectives and rocks.
           - Calibrate `v14` for `v17` at `#q1`
           - Take image of `v17` from `v14` at `#q1`
           - Move `v14` to a communication configuration `#q4`
           - Send image `v17` from `v14` at `#q4`
           - Calibrate `v14` for `v18` at `#q0`
           - Take image of `v18` from `v14` at `#q0`
           - Move `v14` back to `#q4`
           - Send image `v18` from `v14` at `#q4`
           - Calibrate `v14` for `v19` at `#q6`
           - Take image of `v19` from `v14` at `#q6`
           - Move `v14` back to `#q4`
           - Send image `v19` from `v14` at `#q4`
           Now all images are sent.
           
           For rock analysis:
           - `v14` samples rock `v7` at `#q10`.
           - `v14` moves to `#q4` to send analysis.
           - `v14` sends analysis for `v7`.
           - `v14` drops rock `v7` to free the store.
           - `v14` samples rock `v8` at `#q11`.
           - `v14` moves to `#q4`.
           - `v14` sends analysis for `v8`.
           - `v14` drops rock `v8`.
           - `v14` samples rock `v4` at `#q14`.
           - `v14` moves to `#q4`.
           - `v14` sends analysis for `v4`.
           - `v14` drops rock `v4`.
           - `v14` samples rock `v5` at `#q7`.
           - `v14` moves to `#q4`.
           - `v14` sends analysis for `v5`.
           - `v14` drops rock `v5`.
           - `v14` samples rock `v3` at `#q8`.
           - `v14` moves to `#q4`.
           - `v14` sends analysis for `v3`.
           - `v14` drops rock `v3`.
           - `v14` samples rock `v1` at `#q9`.
           - `v14` moves to `#q4`.
           - `v14` sends analysis for `v1`.
           - `v14` drops rock `v1`.
           
           This plan covers all objectives and rocks using `v14`. Note that the axiom definition implies an existential over `v2` and `v6`, so we don't need to explicitly fulfill analysis for 'all' rocks of a given type, just one of each. However, the problem statement means all rocks `v1`, `v3`, `v4` (type `v2`) and `v5`, `v7`, `v8` (type `v6`) need to be analyzed.
           
           The goal `new-axiom@0()` is satisfied if there exist configurations `v13` and `v15` for rovers `v12` and `v14`, and a store `v16` such that rovers are at the configurations, the stores are free, images for `v17`, `v18`, `v19` are received, and `v2` type rock and `v6` type rock are analyzed. Our plan will ensure all specified rocks are analyzed and all specified images are received.
           
           --Plan--:
           (calibrate v14 #q1 #y1 v17 v10)
           (take_image v14 #q1 #y1 v17 v10 v11)
           (move v14 #q1 #t3 #q4)
           (send_image v14 #q4 #y3 v9 v17 v11)
           (move v14 #q4 #t17 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t2 #q4)
           (send_image v14 #q4 #y3 v9 v18 v11)
           (move v14 #q4 #t9 #q6)
           (calibrate v14 #q6 #y4 v19 v10)
           (take_image v14 #q6 #y4 v19 v10 v11)
           (move v14 #q6 #t10 #q4)
           (send_image v14 #q4 #y3 v9 v19 v11)
           (move v14 #q4 #t29 #q10)
           (sample_rock v14 #q10 v7 v16)
           (move v14 #q10 #t18 #q4)
           (send_analysis v14 #q4 #y3 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q4 #t19 #q11)
           (sample_rock v14 #q11 v8 v16)
           (move v14 #q11 #t24 #q4)
           (send_analysis v14 #q4 #y3 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q4 #t20 #q14)
           (sample_rock v14 #q14 v4 v16)
           (move v14 #q14 #t25 #q4)
           (send_analysis v14 #q4 #y3 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q4 #t11 #q7)
           (sample_rock v14 #q7 v5 v16)
           (move v14 #q7 #t14 #q4)
           (send_analysis v14 #q4 #y3 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q4 #t12 #q8)
           (sample_rock v14 #q8 v3 v16)
           (move v14 #q8 #t15 #q4)
           (send_analysis v14 #q4 #y3 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q4 #t13 #q9)
           (sample_rock v14 #q9 v1 v16)
           (move v14 #q9 #t16 #q4)
           (send_analysis v14 #q4 #y3 v9 v1)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v14, #q1) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `v14` was not at `#q1` for the first action `calibrate`. `v14` starts at `v15`. I need to ensure the rover moves to the correct configuration before attempting an action at that configuration.
           
           Here's a revised plan:
           
           1. **Move `v14` to configuration `#q1`** for the first image-taking action.
           2. **Calibrate `v14`** for objective `v17` at `#q1`.
           3. **Take image of `v17`** using `v14` at `#q1`.
           4. **Move `v14` to communication configuration `#q4`**.
           5. **Send image of `v17`** from `v14` at `#q4`.
           6. **Move `v14` to `#q0`** for the next image.
           7. **Calibrate `v14`** for objective `v18` at `#q0`.
           8. **Take image of `v18`** using `v14` at `#q0`.
           9. **Move `v14` to communication configuration `#q4`**.
           10. **Send image of `v18`** from `v14` at `#q4`.
           11. **Move `v14` to `#q6`** for the next image.
           12. **Calibrate `v14`** for objective `v19` at `#q6`.
           13. **Take image of `v19`** using `v14` at `#q6`.
           14. **Move `v14` to communication configuration `#q4`**.
           15. **Send image of `v19`** from `v14` at `#q4`.
           Now all images are sent.
           
           Next, focus on sampling rocks and sending analysis. This will involve moving to rock locations, sampling, moving to a communication point, sending analysis, and dropping the sample to free up the storage. This sequence will be repeated for each rock.
           
           16. **Move `v14` to `#q10`** to sample rock `v7`.
           17. **Sample rock `v7`** at `#q10`.
           18. **Move `v14` to communication configuration `#q4`**.
           19. **Send analysis for rock `v7`**.
           20. **Drop rock** to free store `v16`.
           21. **Move `v14` to `#q11`** to sample rock `v8`.
           22. **Sample rock `v8`** at `#q11`.
           23. **Move `v14` to communication configuration `#q4`**.
           24. **Send analysis for rock `v8`**.
           25. **Drop rock**.
           26. **Move `v14` to `#q14`** to sample rock `v4`.
           27. **Sample rock `v4`** at `#q14`.
           28. **Move `v14` to communication configuration `#q4`**.
           29. **Send analysis for rock `v4`**.
           30. **Drop rock**.
           31. **Move `v14` to `#q7`** to sample rock `v5`.
           32. **Sample rock `v5`** at `#q7`.
           33. **Move `v14` to communication configuration `#q4`**.
           34. **Send analysis for rock `v5`**.
           35. **Drop rock**.
           36. **Move `v14` to `#q8`** to sample rock `v3`.
           37. **Sample rock `v3`** at `#q8`.
           38. **Move `v14` to communication configuration `#q4`**.
           39. **Send analysis for rock `v3`**.
           40. **Drop rock**.
           41. **Move `v14` to `#q9`** to sample rock `v1`.
           42. **Sample rock `v1`** at `#q9`.
           43. **Move `v14` to communication configuration `#q4`**.
           44. **Send analysis for rock `v1`**.
           45. **Drop rock**.
           
           This plan should address all the goal conditions using `v14`.
           
           --Plan--:
           (move v14 v15 #t5 #q1)
           (calibrate v14 #q1 #y1 v17 v10)
           (take_image v14 #q1 #y1 v17 v10 v11)
           (move v14 #q1 #t3 #q4)
           (send_image v14 #q4 #y3 v9 v17 v11)
           (move v14 #q4 #t17 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t2 #q4)
           (send_image v14 #q4 #y3 v9 v18 v11)
           (move v14 #q4 #t9 #q6)
           (calibrate v14 #q6 #y4 v19 v10)
           (take_image v14 #q6 #y4 v19 v10 v11)
           (move v14 #q6 #t10 #q4)
           (send_image v14 #q4 #y3 v9 v19 v11)
           (move v14 #q4 #t29 #q10)
           (sample_rock v14 #q10 v7 v16)
           (move v14 #q10 #t18 #q4)
           (send_analysis v14 #q4 #y3 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q4 #t19 #q11)
           (sample_rock v14 #q11 v8 v16)
           (move v14 #q11 #t24 #q4)
           (send_analysis v14 #q4 #y3 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q4 #t20 #q14)
           (sample_rock v14 #q14 v4 v16)
           (move v14 #q14 #t25 #q4)
           (send_analysis v14 #q4 #y3 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q4 #t11 #q7)
           (sample_rock v14 #q7 v5 v16)
           (move v14 #q7 #t14 #q4)
           (send_analysis v14 #q4 #y3 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q4 #t12 #q8)
           (sample_rock v14 #q8 v3 v16)
           (move v14 #q8 #t15 #q4)
           (send_analysis v14 #q4 #y3 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q4 #t13 #q9)
           (sample_rock v14 #q9 v1 v16)
           (move v14 #q9 #t16 #q4)
           (send_analysis v14 #q4 #y3 v9 v1)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal `new-axiom@0()` is an axiom that checks for the satisfaction of multiple conditions. My previous plan addressed all the explicit conditions mentioned in the goal description (received images and received analysis for all specified rocks). The issue seems to be that the automated checker is still not detecting `new-axiom@0()` as true, even though all its sub-conditions appear to be met by the plan. This suggests that either there's a subtle interaction I'm missing, or the axiom itself is more complex than a direct interpretation of the predicates implies, or the checker is expecting something beyond the literal interpretation of the goal.
           
           Let's re-examine the `new-axiom@0()`:
           `Atom atconf(v12, v13)` (True initially)
           `Atom atconf(v14, v15)` (True initially, and we ensure `v14` eventually returns to `v15` or stays at `v15` by the end of the plan as some `motion` actions allow going back to `v15` or to the last location)
           `Atom free(v12, v16)` (True initially, and we used `v14` for all rock samples, so `v12`'s store remains free. `v14` also frees its store after each sample.)
           `Atom free(v14, v16)` (True initially, and we drop rocks after each analysis, so it should be free at the end.)
           `Atom receivedimage(v17, v11)` (Achieved by sending `v17`'s image)
           `Atom receivedimage(v18, v11)` (Achieved by sending `v18`'s image)
           `Atom receivedimage(v19, v11)` (Achieved by sending `v19`'s image)
           `Atom type(?stone, v2)` AND `Atom receivedanalysis(?stone)`: `v2` is the type for `v1`, `v3`, `v4`. My plan samples and analyzes all of these.
           `Atom type(?soil, v6)` AND `Atom receivedanalysis(?soil)`: `v6` is the type for `v5`, `v7`, `v8`. My plan samples and analyzes all of these.
           
           It seems the current problem setup, with the many `new-axiom@0()` definitions, suggests that the goal is simply a conjunction of these basic facts. My plan seems to achieve all of them.
           
           Perhaps the issue is with the final `atconf` states for the rovers. The axiom specifically checks for `atconf(v12, v13)` and `atconf(v14, v15)`. My plan for `v14` does not explicitly ensure it returns to `v15` at the very end, though it does move between various configurations. I will make sure `v14` returns to `v15` at the end and `v12` stays at `v13`.
           
           Let's modify the plan to explicitly return `v14` to `v15` after all other tasks are complete. `v12` doesn't move, so `atconf(v12, v13)` should remain true.
           
           --Plan--:
           (move v14 v15 #t5 #q1)
           (calibrate v14 #q1 #y1 v17 v10)
           (take_image v14 #q1 #y1 v17 v10 v11)
           (move v14 #q1 #t3 #q4)
           (send_image v14 #q4 #y3 v9 v17 v11)
           (move v14 #q4 #t17 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t2 #q4)
           (send_image v14 #q4 #y3 v9 v18 v11)
           (move v14 #q4 #t9 #q6)
           (calibrate v14 #q6 #y4 v19 v10)
           (take_image v14 #q6 #y4 v19 v10 v11)
           (move v14 #q6 #t10 #q4)
           (send_image v14 #q4 #y3 v9 v19 v11)
           (move v14 #q4 #t29 #q10)
           (sample_rock v14 #q10 v7 v16)
           (move v14 #q10 #t18 #q4)
           (send_analysis v14 #q4 #y3 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q4 #t19 #q11)
           (sample_rock v14 #q11 v8 v16)
           (move v14 #q11 #t24 #q4)
           (send_analysis v14 #q4 #y3 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q4 #t20 #q14)
           (sample_rock v14 #q14 v4 v16)
           (move v14 #q14 #t25 #q4)
           (send_analysis v14 #q4 #y3 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q4 #t11 #q7)
           (sample_rock v14 #q7 v5 v16)
           (move v14 #q7 #t14 #q4)
           (send_analysis v14 #q4 #y3 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q4 #t12 #q8)
           (sample_rock v14 #q8 v3 v16)
           (move v14 #q8 #t15 #q4)
           (send_analysis v14 #q4 #y3 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q4 #t13 #q9)
           (sample_rock v14 #q9 v1 v16)
           (move v14 #q9 #t16 #q4)
           (send_analysis v14 #q4 #y3 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q4 #t8 v15)

