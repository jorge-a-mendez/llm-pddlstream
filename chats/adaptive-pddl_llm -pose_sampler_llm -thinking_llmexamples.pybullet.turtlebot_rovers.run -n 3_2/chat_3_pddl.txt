User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v12, v16)
           Atom type(v3, v2)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom onboard(v10, v14)
           Atom mode(v11)
           Atom atconf(v12, v13)
           Atom type(v8, v6)
           Atom type(v4, v2)
           Atom lander(v9)
           Atom type(v7, v6)
           Atom rock(v3)
           Atom rock(v4)
           Atom store(v16)
           Atom rock(v8)
           Atom objective(v18)
           Atom rover(v14)
           Atom objective(v19)
           Atom atconf(v14, v15)
           Atom objective(v17)
           Atom rock(v7)
           Atom free(v14, v16)
           Atom camera(v10)
           Atom conf(v12, v13)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom rock(v1)
           Atom type(v1, v2)
           Atom onboard(v10, v12)
           Atom conf(v14, v15)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v7)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v5)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #q0, v1)
           Atom conf(v14, #q0)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q8, v8)
           Atom conf(v12, #q8)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #t10, v15)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, v13, #t12, #q5)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #t15, #q2)
           Atom motion(v12, v13, #t1, #q2)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q2, #t3, #q1)
           Atom motion(v12, #q1, #t11, #q7)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q7, #t13, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #t2, v13)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #t9, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q3, #t5, #q4)
           Atom motion(v14, #q4, #t7, #q3)
           Atom motion(v12, #q6, #t16, #q1)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q2, #t14, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v14, #q3, #t4, #q0)
           Atom motion(v14, v15, #t8, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t6, #q3)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q3)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q3, #o2, #o3)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q0, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q8 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v1 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q1 #t11 #q7))
           ((move v12 #q1 #t2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t14 #q6))
           ((move v12 #q2 #t3 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t15 #q2))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t16 #q1))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q1))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q2))
           ((move v12 v13 #t12 #q5))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q3))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t6 #q3))
           ((move v14 #q3 #o2 #o3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #t10 v15))
           ((move v14 #q3 #t4 #q0))
           ((move v14 #q3 #t5 #q4))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t7 #q3))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t8 #q0))
           ((move v14 v15 #t9 #q4))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Okay, let's break this down into a comprehensive plan.** I've been given a complex goal: to ensure two rovers, v12 and v14, achieve certain states. These rovers need to be back where they started (`atconf(v12, v13)` and `atconf(v14, v15)`), with their storage bays empty (`free(v12, v16)` and `free(v14, v16)`). Additionally, we need to gather images of three objectives (`v17`, `v18`, `v19`) and analyses of two rocks (a stone type `v2`, and a soil type `v6`).
           
           Here's the strategy I've devised:
           
           1.  **Image Collection (Rover v14):** Rover v14 will be the primary image gatherer. The plan is for v14 to first move to configuration `#o3` (which, based on the `imagevisible` predicates, is ideal for all three objectives).
               *   From `#o3`, v14 will calibrate its onboard camera (v10) for each objective (`v17`, `v18`, and `v19`) and take the necessary image.
               *   Next, v14 will navigate to communication configuration `#q3` to send all three images.
           2.  **Rock Analysis and Image Sending (Rover v14 continued):** While v14 is positioned near `#q3` for image transmission, it will also visit a sampling configuration for the soil rock (`v5`) and transmit the required analysis.
           3.  **Rock Analysis (Rover v12):** Rover v12 will sample the stone rock (`v1`) after the images have all been transmitted by rover v14.
           4.  **Returning to Initial Configurations and Ensuring Empty Storage:** Rover v14 completes its task after image and soil analyses sending. Both rovers move to communication, drop any rocks in their stores and then return to initial positions.
           
           Let me outline the detailed sequence of actions now:
           
           **Rover v14's Plan:**
           
           1.  Move from `v15` to `#o3`: `(move v14 v15 #o2 #o3)`
           2.  Take images of the three objectives:
               *   `(calibrate v14 #o3 #o4 v17 v10)`
               *   `(take_image v14 #o3 #o4 v17 v10 v11)`
               *   `(calibrate v14 #o3 #o4 v18 v10)`
               *   `(take_image v14 #o3 #o4 v18 v10 v11)`
               *   `(calibrate v14 #o3 #o4 v19 v10)`
               *   `(take_image v14 #o3 #o4 v19 v10 v11)`
           3.  Move to rock sampling configuration `#q4`: `(move v14 #o3 #o2 #q4)`
           4.  Sample the soil rock `v5`: `(sample_rock v14 #q4 v5 v16)`
           5.  Move to communication config `#q3`: `(move v14 #q4 #t7 #q3)`
           6.  Send images:
               *   `(send_image v14 #q3 #y2 v9 v17 v11)`
               *   `(send_image v14 #q3 #y2 v9 v18 v11)`
               *   `(send_image v14 #q3 #y2 v9 v19 v11)`
           7.  Send soil analysis: `(send_analysis v14 #q3 #y2 v9 v5)`
           8.  Drop the rock: `(drop_rock v14 v16)`
           9.  Return to its starting position `v15`: `(move v14 #q3 #t10 v15)`
           
           **Rover v12's Plan:**
           
           1.  Move to sample stone rock configuration `#q7`: `(move v12 v13 #o2 #q7)`
           2.  Sample stone rock `v1`: `(sample_rock v12 #q7 v1 v16)`
           3.  Move to communication config `#q1`: `(move v12 #q7 #t13 #q1)`
           4.  Send analysis: `(send_analysis v12 #q1 #y0 v9 v1)`
           5.  
)

Model:     **Okay, let's break this down into a comprehensive plan.** I've been given a complex goal: to ensure two rovers, v12 and v14, achieve certain states. These rovers need to be back where they started (`atconf(v12, v13)` and `atconf(v14, v15)`), with their storage bays empty (`free(v12, v16)` and `free(v14, v16)`). Additionally, we need to gather images of three objectives (`v17`, `v18`, `v19`) and analyses of two rocks (a stone type `v2`, and a soil type `v6`).
           
           Here's the strategy I've devised:
           
           1.  **Image Collection (Rover v14):** Rover v14 will be the primary image gatherer. The plan is for v14 to first move to configuration `#o3` (which, based on the `imagevisible` predicates, is ideal for all three objectives).
               *   From `#o3`, v14 will calibrate its onboard camera (v10) for each objective (`v17`, `v18`, and `v19`) and take the necessary image.
               *   Next, v14 will navigate to communication configuration `#q3` to send all three images.
           2.  **Rock Analysis and Image Sending (Rover v14 continued):** While v14 is positioned near `#q3` for image transmission, it will also visit a sampling configuration for the soil rock (`v5`) and transmit the required analysis.
           3.  **Rock Analysis (Rover v12):** Rover v12 will sample the stone rock (`v1`) after the images have all been transmitted by rover v14.
           4.  **Returning to Initial Configurations and Ensuring Empty Storage:** Rover v14 completes its task after image and soil analyses sending. Both rovers move to communication, drop any rocks in their stores and then return to initial positions.
           
           Let me outline the detailed sequence of actions now:
           
           **Rover v14's Plan:**
           
           1.  Move from `v15` to `#o3`: `(move v14 v15 #o2 #o3)`
           2.  Take images of the three objectives:
               *   `(calibrate v14 #o3 #o4 v17 v10)`
               *   `(take_image v14 #o3 #o4 v17 v10 v11)`
               *   `(calibrate v14 #o3 #o4 v18 v10)`
               *   `(take_image v14 #o3 #o4 v18 v10 v11)`
               *   `(calibrate v14 #o3 #o4 v19 v10)`
               *   `(take_image v14 #o3 #o4 v19 v10 v11)`
           3.  Move to rock sampling configuration `#q4`: `(move v14 #o3 #o2 #q4)`
           4.  Sample the soil rock `v5`: `(sample_rock v14 #q4 v5 v16)`
           5.  Move to communication config `#q3`: `(move v14 #q4 #t7 #q3)`
           6.  Send images:
               *   `(send_image v14 #q3 #y2 v9 v17 v11)`
               *   `(send_image v14 #q3 #y2 v9 v18 v11)`
               *   `(send_image v14 #q3 #y2 v9 v19 v11)`
           7.  Send soil analysis: `(send_analysis v14 #q3 #y2 v9 v5)`
           8.  Drop the rock: `(drop_rock v14 v16)`
           9.  Return to its starting position `v15`: `(move v14 #q3 #t10 v15)`
           
           **Rover v12's Plan:**
           
           1.  Move to sample stone rock configuration `#q7`: `(move v12 v13 #o2 #q7)`
           2.  Sample stone rock `v1`: `(sample_rock v12 #q7 v1 v16)`
           3.  Move to communication config `#q1`: `(move v12 #q7 #t13 #q1)`
           4.  Send analysis: `(send_analysis v12 #q1 #y0 v9 v1)`
           5.  

