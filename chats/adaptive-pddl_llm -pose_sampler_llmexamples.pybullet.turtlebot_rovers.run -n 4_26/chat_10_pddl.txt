User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t5: object
           #t50: object
           #t51: object
           #t52: object
           #t53: object
           #t54: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom onboard(v10, v14)
           Atom type(v5, v6)
           Atom type(v4, v2)
           Atom rock(v4)
           Atom free(v12, v16)
           Atom camera(v10)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom rover(v14)
           Atom objective(v18)
           Atom objective(v20)
           Atom type(v7, v6)
           Atom rock(v3)
           Atom conf(v12, v13)
           Atom rover(v12)
           Atom rock(v7)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom lander(v9)
           Atom objective(v19)
           Atom onboard(v10, v12)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q8, v1)
           Atom conf(v12, #q8)
           Atom imagevisible(v12, #q10, #y4, v19)
           Atom imagerange(v12, #q10, v19)
           Atom conf(v12, #q10)
           Atom ray(#y4)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q7, v5)
           Atom conf(v12, #q7)
           Atom comvisible(v12, #q4, #y2, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q6, v7)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q3, #y1, v20)
           Atom imagerange(v12, #q3, v20)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom above(v12, #q0, v4)
           Atom conf(v12, #q0)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q1, v3)
           Atom conf(v12, #q1)
           Atom imagevisible(v12, #q2, #y0, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y0)
           Atom imagevisible(v14, #q17, #y6, v17)
           Atom imagerange(v14, #q17, v17)
           Atom conf(v14, #q17)
           Atom ray(#y6)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v14, #q15, v4)
           Atom conf(v14, #q15)
           Atom above(v14, #q11, v5)
           Atom conf(v14, #q11)
           Atom above(v14, #q18, v3)
           Atom conf(v14, #q18)
           Atom above(v14, #q13, v1)
           Atom conf(v14, #q13)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #q16, v7)
           Atom conf(v14, #q16)
           Atom comvisible(v14, #q12, #y5, v9)
           Atom comrange(v14, #q12, v9)
           Atom conf(v14, #q12)
           Atom ray(#y5)
           Atom above(v12, #q9, v8)
           Atom conf(v12, #q9)
           Atom above(v14, #q14, v8)
           Atom conf(v14, #q14)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, v15, #t46, #q16)
           Atom motion(v12, #q4, #t4, #q6)
           Atom motion(v12, #q6, #t11, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q8, #t13, #q4)
           Atom motion(v12, #q4, #t50, #q8)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #t5, v13)
           Atom motion(v14, v15, #t21, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v12, #q4, #t2, #q0)
           Atom motion(v12, #q0, #t9, #q4)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, v13, #t48, #q0)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q4, #t3, #q1)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q1, #t10, #q4)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, v13, #t42, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v14, #q18, #o2, #q13)
           Atom motion(v14, v15, #t54, #q18)
           Atom motion(v14, #q18, #o2, #q16)
           Atom motion(v14, #q18, #o2, #q18)
           Atom motion(v14, #q13, #o2, #q18)
           Atom motion(v14, #q16, #o2, #q18)
           Atom motion(v14, #q18, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, v15, #t20, #q11)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q18)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q18, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q4, #t40, #q7)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #t12, #q4)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v14, v15, #t35, #q15)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q18, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q18)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q18, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q18)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, v15, #t34, #q14)
           Atom motion(v14, #q12, #t19, v15)
           Atom motion(v14, #q12, #t53, #q16)
           Atom motion(v14, #q18, #t52, #q12)
           Atom motion(v14, #q12, #t32, #q15)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q14, #t28, #q12)
           Atom motion(v14, #q12, #t23, #q11)
           Atom motion(v14, #q15, #t29, #q12)
           Atom motion(v14, #q12, #o2, #q18)
           Atom motion(v14, #q16, #t45, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #t24, #q13)
           Atom motion(v14, #q12, #t31, #q14)
           Atom motion(v14, #q11, #t16, #q12)
           Atom motion(v14, #q13, #t17, #q12)
           Atom motion(v12, #q4, #t38, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q5, #t8, #q4)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, v13, #t22, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q18, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q17, #o2, #q11)
           Atom motion(v14, #q17, #t44, #q12)
           Atom motion(v14, #q17, #o2, #q18)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q12, #t47, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q11, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v12, v13, #t0, #q2)
           Atom motion(v12, #q2, #t6, #q4)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q5, #t18, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q4, #t37, #q2)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q5, #t41, #q10)
           Atom motion(v12, #q10, #t33, #q2)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q10, #t39, #q4)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q4, #t49, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q2, #t25, #q10)
           Atom motion(v12, v13, #t26, #q10)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q9, #t14, #q4)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q4, #t51, #q9)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q2, #t30, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q10, #t15, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #t43, #q10)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, v13, #t1, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q4, #t36, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q3, #t27, #q5)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q3, #t7, #q4)
           Atom motion(v14, #q13, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q17)
           Atom motion(v14, #o3, #o2, #q16)
           Atom motion(v14, #o3, #o2, #q18)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q13)
           Atom motion(v14, #q14, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q14)
           Atom motion(v14, #q18, #o2, #o3)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #q15, #o2, #o3)
           Atom motion(v14, #q17, #o2, #o3)
           Atom motion(v14, #q16, #o2, #o3)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q15)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v4 v16))
           ((sample_rock v12 #q1 v3 v16))
           ((sample_rock v12 #q6 v7 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v12 #q8 v1 v16))
           ((sample_rock v12 #q9 v8 v16))
           ((sample_rock v14 #q11 v5 v16))
           ((sample_rock v14 #q13 v1 v16))
           ((sample_rock v14 #q14 v8 v16))
           ((sample_rock v14 #q15 v4 v16))
           ((sample_rock v14 #q16 v7 v16))
           ((sample_rock v14 #q18 v3 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t9 #q4))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t10 #q4))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t15 #q3))
           ((move v12 #q10 #t33 #q2))
           ((move v12 #q10 #t39 #q4))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t25 #q10))
           ((move v12 #q2 #t30 #q3))
           ((move v12 #q2 #t6 #q4))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t27 #q5))
           ((move v12 #q3 #t43 #q10))
           ((move v12 #q3 #t7 #q4))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #t2 #q0))
           ((move v12 #q4 #t3 #q1))
           ((move v12 #q4 #t36 #q3))
           ((move v12 #q4 #t37 #q2))
           ((move v12 #q4 #t38 #q5))
           ((move v12 #q4 #t4 #q6))
           ((move v12 #q4 #t40 #q7))
           ((move v12 #q4 #t49 #q10))
           ((move v12 #q4 #t5 v13))
           ((move v12 #q4 #t50 #q8))
           ((move v12 #q4 #t51 #q9))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t18 #q2))
           ((move v12 #q5 #t41 #q10))
           ((move v12 #q5 #t8 #q4))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t11 #q4))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t12 #q4))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t13 #q4))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t14 #q4))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q2))
           ((move v12 v13 #t1 #q3))
           ((move v12 v13 #t22 #q5))
           ((move v12 v13 #t26 #q10))
           ((move v12 v13 #t42 #q1))
           ((move v12 v13 #t48 #q0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q13))
           ((move v14 #o3 #o2 #q14))
           ((move v14 #o3 #o2 #q15))
           ((move v14 #o3 #o2 #q16))
           ((move v14 #o3 #o2 #q17))
           ((move v14 #o3 #o2 #q18))
           ((move v14 #o3 #o2 v15))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q17))
           ((move v14 #q11 #o2 #q18))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t16 #q12))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q18))
           ((move v14 #q12 #t19 v15))
           ((move v14 #q12 #t23 #q11))
           ((move v14 #q12 #t24 #q13))
           ((move v14 #q12 #t31 #q14))
           ((move v14 #q12 #t32 #q15))
           ((move v14 #q12 #t47 #q17))
           ((move v14 #q12 #t53 #q16))
           ((move v14 #q13 #o2 #o3))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q18))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t17 #q12))
           ((move v14 #q14 #o2 #o3))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q18))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t28 #q12))
           ((move v14 #q15 #o2 #o3))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q18))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t29 #q12))
           ((move v14 #q16 #o2 #o3))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q18))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t45 #q12))
           ((move v14 #q17 #o2 #o3))
           ((move v14 #q17 #o2 #q11))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q18))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t44 #q12))
           ((move v14 #q18 #o2 #o3))
           ((move v14 #q18 #o2 #q11))
           ((move v14 #q18 #o2 #q13))
           ((move v14 #q18 #o2 #q14))
           ((move v14 #q18 #o2 #q15))
           ((move v14 #q18 #o2 #q16))
           ((move v14 #q18 #o2 #q17))
           ((move v14 #q18 #o2 #q18))
           ((move v14 #q18 #o2 v15))
           ((move v14 #q18 #t52 #q12))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t20 #q11))
           ((move v14 v15 #t21 #q13))
           ((move v14 v15 #t34 #q14))
           ((move v14 v15 #t35 #q15))
           ((move v14 v15 #t46 #q16))
           ((move v14 v15 #t54 #q18))
           ((calibrate v12 #q10 #y4 v19 v10))
           ((calibrate v12 #q2 #y0 v18 v10))
           ((calibrate v12 #q3 #y1 v20 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((calibrate v14 #q17 #y6 v17 v10))
           ((take_image v12 #q10 #y4 v19 v10 v11))
           ((take_image v12 #q2 #y0 v18 v10 v11))
           ((take_image v12 #q3 #y1 v20 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q17 #y6 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q12 #y5 v9 v5))
           ((send_analysis v14 #q12 #y5 v9 v1))
           ((send_analysis v14 #q12 #y5 v9 v8))
           ((send_analysis v14 #q12 #y5 v9 v4))
           ((send_analysis v14 #q12 #y5 v9 v7))
           ((send_analysis v14 #q12 #y5 v9 v3))
           ((send_image v12 #q4 #y2 v9 v19 v11))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v12 #q4 #y2 v9 v20 v11))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q12 #y5 v9 v18 v11))
           ((send_image v14 #q12 #y5 v9 v19 v11))
           ((send_image v14 #q12 #y5 v9 v20 v11))
           ((send_image v14 #q12 #y5 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a camera (v10), a store (v16), a lander (v9), several rocks (v1, v3, v4, v5, v7, v8), and objectives (v17, v18, v19, v20). The camera (v10) supports a mode (v11) and is onboard both rovers.
           
           The goal is `Atom new-axiom@0()`, which expands to a conjunction of multiple predicates. Specifically, it implies:
           - `atconf(v12, v13)` and `atconf(v14, v15)` which are already true in the initial state.
           - `free(v12, v16)` and `free(v14, v16)` which are already true in the initial state.
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: This means we need to take images of all objectives (v17, v18, v19, v20) with the camera (v10) in mode (v11) and send them to the lander (v9).
           - `type(?stone, v2)` and `receivedanalysis(?stone)`: This means we need to sample and analyze a rock of type v2. Rocks v1, v3, v4 are of type v2.
           - `type(?soil, v6)` and `receivedanalysis(?soil)`: This means we need to sample and analyze a rock of type v6. Rocks v5, v7, v8 are of type v6.
           
           Let's break down the image and analysis goals:
           
           **Image Goals (all must be achieved):**
           1.  `receivedimage(v17, v11)`: Rover v12 can see v17 at #q5 with ray #y3. Rover v14 can see v17 at #q17 with ray #y6.
           2.  `receivedimage(v18, v11)`: Rover v12 can see v18 at #q2 with ray #y0. Rover v14 can see v18 at #o3 with ray #o4.
           3.  `receivedimage(v19, v11)`: Rover v12 can see v19 at #q10 with ray #y4. Rover v14 can see v19 at #o3 with ray #o4.
           4.  `receivedimage(v20, v11)`: Rover v12 can see v20 at #q3 with ray #y1. Rover v14 can see v20 at #o3 with ray #o4.
           
           To achieve these, for each objective, we need to:
               a. Move a rover to a configuration where the objective is visible.
               b. Calibrate the camera on that rover.
               c. Take an image of the objective.
               d. Move the rover to a configuration where communication with the lander is visible.
               e. Send the image.
           
           **Analysis Goals (one of each type v2 and v6 must be achieved):**
           1.  `receivedanalysis(?stone)` (type v2):
               *   Rocks of type v2: v1, v3, v4.
               *   Rover v12 is above v1 at #q8, v3 at #q1, v4 at #q0.
               *   Rover v14 is above v1 at #q13, v3 at #q18, v4 at #q15.
               *   We need to sample one of these rocks and send its analysis.
           2.  `receivedanalysis(?soil)` (type v6):
               *   Rocks of type v6: v5, v7, v8.
               *   Rover v12 is above v5 at #q7, v7 at #q6, v8 at #q9.
               *   Rover v14 is above v5 at #q11, v7 at #q16, v8 at #q14.
               *   We need to sample one of these rocks and send its analysis.
           
           To achieve these, for each rock type, we need to:
               a. Move a rover to a configuration where it is above a rock of the desired type.
               b. Sample the rock (this also analyzes it).
               c. Move the rover to a configuration where communication with the lander is visible.
               d. Send the analysis.
           
           Since we have two rovers, we can parallelize or distribute tasks. Rover v12 starts at v13 and v14 starts at v15. Both have a store (v16) which is free. Camera v10 is on both.
           
           Let's plan for Rover v12 to handle some imaging and analysis and Rover v14 to handle the rest.
           
           **Rover v12's tasks:**
           *   Analyze rock v4 (type v2) - already above it at #q0.
           *   Analyze rock v5 (type v6) - already above it at #q7.
           *   Image objective v17 (seen at #q5), v18 (seen at #q2), v19 (seen at #q10), v20 (seen at #q3).
           *   Send all images and analyses to lander v9 (comvisible at #q4).
           
           **Rover v14's tasks:**
           *   No analysis needed if v12 does v4 and v5.
           *   No imaging needed if v12 does all 4 objectives.
           
           Let's try to complete all goals with rover v12 since it has visibility to all objectives and rocks we need to analyze.
           
           Plan for Rover v12:
           1.  Move to #q0 (above v4, type v2).
           2.  Sample v4.
           3.  Move to #q7 (above v5, type v6).
           4.  Sample v5.
           5.  Move to #q5 (image v17).
           6.  Calibrate camera.
           7.  Take image of v17.
           8.  Move to #q2 (image v18).
           9.  Calibrate camera (since previous `take_image` uncalibrated it).
           10. Take image of v18.
           11. Move to #q10 (image v19).
           12. Calibrate camera.
           13. Take image of v19.
           14. Move to #q3 (image v20).
           15. Calibrate camera.
           16. Take image of v20.
           17. Move to #q4 (comvisible with lander v9).
           18. Send analysis for v4.
           19. Send analysis for v5.
           20. Send image for v17.
           21. Send image for v18.
           22. Send image for v19.
           23. Send image for v20.
           
           This covers all conditions for `new-axiom@0()`. Let's verify the sequence of moves and calibrations. The camera (v10) is uncalibrated after each `take_image`, so it needs to be recalibrated for subsequent `take_image` actions. `send_image` and `send_analysis` do not require calibration.
           
           All `blocked` predicates are false by default and not mentioned as true, so we can assume `NegatedAtom blocked(?y)` is satisfied for all `take_image`, `calibrate`, `send_image`, and `send_analysis` actions.
           
           Initial state for v12: `atconf(v12, v13)`.
           Move to #q0 (above v4): `motion(v12, v13, #t48, #q0)`.
           Sample v4: `atconf(v12, #q0)`, `above(v12, #q0, v4)`, `free(v12, v16)`. All are true.
           
           Move to #q7 (above v5): `motion(v12, #q0, #o2, #q7)`.
           Sample v5: `atconf(v12, #q7)`, `above(v12, #q7, v5)`, `free(v12, v16)` (after sampling v4, v16 is full. Need to drop or use different stores. But the goal only needs `receivedanalysis`, not for stores to remain free. The axiom `new-axiom@0()` explicitly checks `free(v12, v16)` and `free(v14, v16)`, so we must make sure these are true at the end. This means we need to drop the rocks after analyzing them, or use a separate rover for sampling for v12 and v14 to maintain both stores free. The problem is that the goal checks `free(v12, v16)` and `free(v14, v16)` at the end. So if v12 samples anything, it makes `free(v12, v16)` false. It needs to drop the rock to make it free again.
           
           Let's rethink:
           The goal states `free(v12, v16)` and `free(v14, v16)`. This means any sampled rocks must be dropped before the end of the plan to satisfy the goal.
           
           Revised Plan:
           1.  Rover v12 samples rock v4 (type v2).
           2.  Rover v12 drops rock v4. (Store v16 for v12 is free again).
           3.  Rover v12 samples rock v5 (type v6).
           4.  Rover v12 drops rock v5. (Store v16 for v12 is free again).
           5.  Rover v12 moves to image location #q5 (for v17).
           6.  Calibrates camera.
           7.  Takes image of v17.
           8.  Rover v12 moves to image location #q2 (for v18).
           9.  Calibrates camera.
           10. Takes image of v18.
           11. Rover v12 moves to image location #q10 (for v19).
           12. Calibrates camera.
           13. Takes image of v19.
           14. Rover v12 moves to image location #q3 (for v20).
           15. Calibrates camera.
           16. Takes image of v20.
           17. Rover v12 moves to communication location #q4.
           18. Sends analysis for v4.
           19. Sends analysis for v5.
           20. Sends image for v17.
           21. Sends image for v18.
           22. Sends image for v19.
           23. Sends image for v20.
           
           Let's check initial positions and image/com visibilities for v12.
           - Current position `v13`.
           - `above(v12, #q0, v4)`
           - `above(v12, #q7, v5)`
           - `imagevisible(v12, #q5, #y3, v17)`
           - `imagevisible(v12, #q2, #y0, v18)`
           - `imagevisible(v12, #q10, #y4, v19)`
           - `imagevisible(v12, #q3, #y1, v20)`
           - `comvisible(v12, #q4, #y2, v9)`
           
           All required image and analysis can be done by v12. The goal requires both `free(v12, v16)` and `free(v14, v16)` to be true at the end, which they are at the beginning. By sampling and immediately dropping, we can ensure `free` is maintained.
           
           All initial motion predicates start from existing `atconf` positions or other valid `conf` locations for the rover.
           Initial: `atconf(v12, v13)`.
           To sample v4 (at #q0): `move v12 v13 #t48 #q0`.
           To sample v5 (at #q7): `move v12 #q0 #o2 #q7`.
           To image v17 (at #q5): `move v12 #q7 #o2 #q5`.
           To image v18 (at #q2): `move v12 #q5 #t18 #q2`.
           To image v19 (at #q10): `move v12 #q2 #t25 #q10`.
           To image v20 (at #q3): `move v12 #q10 #t15 #q3`.
           To send data (at #q4): `move v12 #q3 #t7 #q4`.
           
           This plan looks feasible.
           
           --Plan--:
           (move v12 v13 #t48 #q0)
           (sample_rock v12 #q0 v4 v16)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #q7)
           (sample_rock v12 #q7 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t18 #q2)
           (calibrate v12 #q2 #y0 v18 v10)
           (take_image v12 #q2 #y0 v18 v10 v11)
           (move v12 #q2 #t25 #q10)
           (calibrate v12 #q10 #y4 v19 v10)
           (take_image v12 #q10 #y4 v19 v10 v11)
           (move v12 #q10 #t15 #q3)
           (calibrate v12 #q3 #y1 v20 v10)
           (take_image v12 #q3 #y1 v20 v10 v11)
           (move v12 #q3 #t7 #q4)
           (send_analysis v12 #q4 #y2 v9 v4)
           (send_analysis v12 #q4 #y2 v9 v5)
           (send_image v12 #q4 #y2 v9 v17 v11)
           (send_image v12 #q4 #y2 v9 v18 v11)
           (send_image v12 #q4 #y2 v9 v19 v11)
           (send_image v12 #q4 #y2 v9 v20 v11)

