User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom onboard(v10, v14)
           Atom type(v5, v6)
           Atom type(v4, v2)
           Atom rock(v4)
           Atom free(v12, v16)
           Atom camera(v10)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom rover(v14)
           Atom objective(v18)
           Atom objective(v20)
           Atom type(v7, v6)
           Atom rock(v3)
           Atom conf(v12, v13)
           Atom rover(v12)
           Atom rock(v7)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom lander(v9)
           Atom objective(v19)
           Atom onboard(v10, v12)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q3, #y1, v20)
           Atom imagerange(v12, #q3, v20)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom imagevisible(v12, #q10, #y4, v19)
           Atom imagerange(v12, #q10, v19)
           Atom conf(v12, #q10)
           Atom ray(#y4)
           Atom above(v12, #q0, v4)
           Atom conf(v12, #q0)
           Atom above(v12, #q8, v1)
           Atom conf(v12, #q8)
           Atom comvisible(v12, #q4, #y2, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q6, v7)
           Atom conf(v12, #q6)
           Atom above(v12, #q7, v5)
           Atom conf(v12, #q7)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q1, v3)
           Atom conf(v12, #q1)
           Atom imagevisible(v12, #q2, #y0, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y0)
           Atom comvisible(v14, #q12, #y5, v9)
           Atom comrange(v14, #q12, v9)
           Atom conf(v14, #q12)
           Atom ray(#y5)
           Atom above(v14, #q16, v7)
           Atom conf(v14, #q16)
           Atom imagevisible(v14, #q17, #y6, v17)
           Atom imagerange(v14, #q17, v17)
           Atom conf(v14, #q17)
           Atom ray(#y6)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #q11, v5)
           Atom conf(v14, #q11)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #q15, v4)
           Atom conf(v14, #q15)
           Atom above(v14, #q13, v1)
           Atom conf(v14, #q13)
           Atom above(v12, #q9, v8)
           Atom conf(v12, #q9)
           Atom above(v14, #q14, v8)
           Atom conf(v14, #q14)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, v15, #t35, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, v15, #t20, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, v13, #t48, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #t42, #q1)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, v13, #t26, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v14, #q17, #o2, #q11)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, v15, #t34, #q14)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, v15, #t46, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, v15, #t21, #q13)
           Atom motion(v14, #q16, #t45, #q12)
           Atom motion(v14, #q15, #t29, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q11, #t16, #q12)
           Atom motion(v14, #q12, #t31, #q14)
           Atom motion(v14, #q12, #t24, #q13)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q14, #t28, #q12)
           Atom motion(v14, #q17, #t44, #q12)
           Atom motion(v14, #q12, #t32, #q15)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #t19, v15)
           Atom motion(v14, #q12, #t23, #q11)
           Atom motion(v14, #q13, #t17, #q12)
           Atom motion(v14, #q12, #t47, #q17)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, v13, #t1, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q10, #t15, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q3, #t43, #q10)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q2, #t25, #q10)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q10, #t33, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q2, #t30, #q3)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, v13, #t0, #q2)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #t41, #q10)
           Atom motion(v12, v13, #t22, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #t18, #q2)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q3, #t27, #q5)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q1, #t10, #q4)
           Atom motion(v12, #q4, #t38, #q5)
           Atom motion(v12, #q8, #t13, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #t3, #q1)
           Atom motion(v12, #q2, #t6, #q4)
           Atom motion(v12, #q4, #t36, #q3)
           Atom motion(v12, #q7, #t12, #q4)
           Atom motion(v12, #q4, #t5, v13)
           Atom motion(v12, #q0, #t9, #q4)
           Atom motion(v12, #q4, #t4, #q6)
           Atom motion(v12, #q4, #t40, #q7)
           Atom motion(v12, #q6, #t11, #q4)
           Atom motion(v12, #q3, #t7, #q4)
           Atom motion(v12, #q4, #t49, #q10)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #t37, #q2)
           Atom motion(v12, #q9, #t14, #q4)
           Atom motion(v12, #q10, #t39, #q4)
           Atom motion(v12, #q5, #t8, #q4)
           Atom motion(v12, #q4, #t2, #q0)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #o5, #o2, #q17)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q17, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q13)
           Atom motion(v14, #o3, #o2, #q17)
           Atom motion(v14, #q17, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q16)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q13, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q15)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #q14, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q14)
           Atom motion(v14, #q16, #o2, #o3)
           Atom motion(v14, #q15, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v4 v16))
           ((sample_rock v12 #q1 v3 v16))
           ((sample_rock v12 #q6 v7 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v12 #q8 v1 v16))
           ((sample_rock v12 #q9 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #q11 v5 v16))
           ((sample_rock v14 #q13 v1 v16))
           ((sample_rock v14 #q14 v8 v16))
           ((sample_rock v14 #q15 v4 v16))
           ((sample_rock v14 #q16 v7 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t9 #q4))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t10 #q4))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t15 #q3))
           ((move v12 #q10 #t33 #q2))
           ((move v12 #q10 #t39 #q4))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t25 #q10))
           ((move v12 #q2 #t30 #q3))
           ((move v12 #q2 #t6 #q4))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t27 #q5))
           ((move v12 #q3 #t43 #q10))
           ((move v12 #q3 #t7 #q4))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #t2 #q0))
           ((move v12 #q4 #t3 #q1))
           ((move v12 #q4 #t36 #q3))
           ((move v12 #q4 #t37 #q2))
           ((move v12 #q4 #t38 #q5))
           ((move v12 #q4 #t4 #q6))
           ((move v12 #q4 #t40 #q7))
           ((move v12 #q4 #t49 #q10))
           ((move v12 #q4 #t5 v13))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t18 #q2))
           ((move v12 #q5 #t41 #q10))
           ((move v12 #q5 #t8 #q4))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t11 #q4))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t12 #q4))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t13 #q4))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t14 #q4))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q2))
           ((move v12 v13 #t1 #q3))
           ((move v12 v13 #t22 #q5))
           ((move v12 v13 #t26 #q10))
           ((move v12 v13 #t42 #q1))
           ((move v12 v13 #t48 #q0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q13))
           ((move v14 #o3 #o2 #q14))
           ((move v14 #o3 #o2 #q15))
           ((move v14 #o3 #o2 #q16))
           ((move v14 #o3 #o2 #q17))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q17))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q17))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t16 #q12))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #t19 v15))
           ((move v14 #q12 #t23 #q11))
           ((move v14 #q12 #t24 #q13))
           ((move v14 #q12 #t31 #q14))
           ((move v14 #q12 #t32 #q15))
           ((move v14 #q12 #t47 #q17))
           ((move v14 #q13 #o2 #o3))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t17 #q12))
           ((move v14 #q14 #o2 #o3))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t28 #q12))
           ((move v14 #q15 #o2 #o3))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t29 #q12))
           ((move v14 #q16 #o2 #o3))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t45 #q12))
           ((move v14 #q17 #o2 #o3))
           ((move v14 #q17 #o2 #o5))
           ((move v14 #q17 #o2 #q11))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t44 #q12))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t20 #q11))
           ((move v14 v15 #t21 #q13))
           ((move v14 v15 #t34 #q14))
           ((move v14 v15 #t35 #q15))
           ((move v14 v15 #t46 #q16))
           ((calibrate v12 #q10 #y4 v19 v10))
           ((calibrate v12 #q2 #y0 v18 v10))
           ((calibrate v12 #q3 #y1 v20 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((calibrate v14 #q17 #y6 v17 v10))
           ((take_image v12 #q10 #y4 v19 v10 v11))
           ((take_image v12 #q2 #y0 v18 v10 v11))
           ((take_image v12 #q3 #y1 v20 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q17 #y6 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q12 #y5 v9 v3))
           ((send_analysis v14 #q12 #y5 v9 v5))
           ((send_analysis v14 #q12 #y5 v9 v1))
           ((send_analysis v14 #q12 #y5 v9 v8))
           ((send_analysis v14 #q12 #y5 v9 v4))
           ((send_analysis v14 #q12 #y5 v9 v7))
           ((send_image v12 #q4 #y2 v9 v19 v11))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v12 #q4 #y2 v9 v20 v11))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q12 #y5 v9 v18 v11))
           ((send_image v14 #q12 #y5 v9 v19 v11))
           ((send_image v14 #q12 #y5 v9 v20 v11))
           ((send_image v14 #q12 #y5 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a lander (v9), and several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There's also a camera (v10) on board both rovers, capable of imaging and supporting mode v11. Both rovers have a store (v16) that is currently free.
           
           The goal is `new-axiom@0()`, which is a complex axiom that requires several conditions to be met:
           1. Both rovers (v12 and v14) must be at some configuration. This is already true in the initial state.
           2. The store (v16) on both rovers must be free. This is also true in the initial state.
           3. Several images must be received for objectives v17, v18, v19, and v20 in mode v11.
           4. Several rocks (type v2 and type v6) must be analyzed and the analysis received.
           
           Let's break down how to achieve the goal:
           
           **Part 1: Receive Images**
           We need to take images of objectives v17, v18, v19, v20 with camera v10 in mode v11, and then send them to the lander v9.
           
           For rover v12:
           - Objective v17 can be imaged at #q5 with #y3.
           - Objective v18 can be imaged at #q2 with #y0.
           - Objective v19 can be imaged at #q10 with #y4.
           - Objective v20 can be imaged at #q3 with #y1.
           All these configurations are visible to the communication ray #y2 at #q4 for sending images to lander v9.
           
           For rover v14:
           - Objective v17 can be imaged at #q17 with #y6.
           - Objective v18, v19, v20 can be imaged at #o3 with #o4.
           All these configurations are visible to the communication ray #y5 at #q12 for sending images to lander v9.
           
           We can achieve this by:
           1. Calibrating the camera for each objective.
           2. Taking the image.
           3. Moving to a communication configuration.
           4. Sending the image.
           
           **Part 2: Receive Analysis**
           We need to analyze rocks of type v2 and type v6, and send their analysis.
           - Rocks of type v2 are v1, v3, v4.
           - Rocks of type v6 are v5, v7, v8.
           
           For rover v12:
           - Can sample v4 (type v2) at #q0.
           - Can sample v3 (type v2) at #q1.
           - Can sample v7 (type v6) at #q6.
           - Can sample v5 (type v6) at #q7.
           - Can sample v1 (type v2) at #q8.
           - Can sample v8 (type v6) at #q9.
           All these rocks can be analyzed and then their analysis sent from #q4 using #y2 to lander v9.
           
           For rover v14:
           - Can sample v3 (type v2) at #o5.
           - Can sample v5 (type v6) at #q11.
           - Can sample v1 (type v2) at #q13.
           - Can sample v8 (type v6) at #q14.
           - Can sample v4 (type v2) at #q15.
           - Can sample v7 (type v6) at #q16.
           All these rocks can be analyzed and then their analysis sent from #q12 using #y5 to lander v9.
           
           The goal requires receiving images for v17, v18, v19, v20 and receiving analysis for all rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8).
           
           Let's use Rover v12 for imaging and analysis of v4, v3, v1, v5, v7, v8, and Rover v14 for additional imaging and analysis if needed.
           
           **Detailed Plan for Imaging (v12):**
           1. Calibrate for v17 (at #q5), take image, move to #q4, send image.
           2. Calibrate for v18 (at #q2), take image, move to #q4, send image.
           3. Calibrate for v19 (at #q10), take image, move to #q4, send image.
           4. Calibrate for v20 (at #q3), take image, move to #q4, send image.
           
           **Detailed Plan for Analysis (v12):**
           1. Sample v4 (type v2) at #q0.
           2. Move to #q4 and send analysis for v4.
           3. Sample v3 (type v2) at #q1.
           4. Move to #q4 and send analysis for v3.
           5. Sample v1 (type v2) at #q8.
           6. Move to #q4 and send analysis for v1.
           7. Sample v5 (type v6) at #q7.
           8. Move to #q4 and send analysis for v5.
           9. Sample v7 (type v6) at #q6.
           10. Move to #q4 and send analysis for v7.
           11. Sample v8 (type v6) at #q9.
           12. Move to #q4 and send analysis for v8.
           
           It is important to remember that after taking an image, the camera needs to be calibrated again before the next image. Also, after sampling a rock, the store becomes full and needs to be dropped or emptied before sampling another rock if only one store is available. However, in this problem, the store v16 is associated with the rover, and the `sample_rock` action states `free(?v, ?s)` and `full(?v, ?s)`, but no `drop_rock` is necessarily needed to sample multiple distinct rocks. The goal only requires `receivedanalysis(?r)` for specific rocks, not that the stores stay free. Also, the axioms imply that there are two rovers (v12, v14) and two free stores (v16 for v12 and v16 for v14). This means both rovers can sample rocks.
           
           Given the goal state includes `free(v12, v16)` and `free(v14, v16)`, after sampling, we must drop the rock to free the store. The goal implies that the initial `free` condition must be maintained, but this is an axiom not a direct goal. The actual goal is `receivedimage` and `receivedanalysis`.
           The `new-axiom@0` condition `free(v12, v16)` and `free(v14, v16)` means that after all sampling and sending, the stores on both rovers must be free again. This implies that after sampling a rock, we must drop it.
           
           Let's refine the plan:
           
           **Plan using v12 for all image and analysis tasks, making sure to drop rocks to keep `free(v12, v16)` true for the axiom.**
           
           --Plan--:
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t8 #q4)
           (send_image v12 #q4 #y2 v9 v17 v11)
           (calibrate v12 #q2 #y0 v18 v10)
           (take_image v12 #q2 #y0 v18 v10 v11)
           (move v12 #q4 #t37 #q2)
           (move v12 #q2 #t6 #q4)
           (send_image v12 #q4 #y2 v9 v18 v11)
           (calibrate v12 #q10 #y4 v19 v10)
           (take_image v12 #q10 #y4 v19 v10 v11)
           (move v12 #q4 #t49 #q10)
           (move v12 #q10 #t39 #q4)
           (send_image v12 #q4 #y2 v9 v19 v11)
           (calibrate v12 #q3 #y1 v20 v10)
           (take_image v12 #q3 #y1 v20 v10 v11)
           (move v12 #q4 #t36 #q3)
           (move v12 #q3 #t7 #q4)
           (send_image v12 #q4 #y2 v9 v20 v11)
           (move v12 #q4 #t2 #q0)
           (sample_rock v12 #q0 v4 v16)
           (move v12 #q0 #t9 #q4)
           (send_analysis v12 #q4 #y2 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q4 #t3 #q1)
           (sample_rock v12 #q1 v3 v16)
           (move v12 #q1 #t10 #q4)
           (send_analysis v12 #q4 #y2 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q4 #o2 #q8)
           (move v12 #q8 #t13 #q4)
           (sample_rock v12 #q8 v1 v16)
           (send_analysis v12 #q4 #y2 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q4 #t40 #q7)
           (sample_rock v12 #q7 v5 v16)
           (move v12 #q7 #t12 #q4)
           (send_analysis v12 #q4 #y2 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q4 #t4 #q6)
           (sample_rock v12 #q6 v7 v16)
           (move v12 #q6 #t11 #q4)
           (send_analysis v12 #q4 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q4 #o2 #q9)
           (move v12 #q9 #t14 #q4)
           (sample_rock v12 #q9 v8 v16)
           (send_analysis v12 #q4 #y2 v9 v8)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q2) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `atconf(v12, #q2)` was not satisfied before attempting to calibrate at `#q2`. The `move` actions need to be correctly sequenced to ensure the rover is at the required configuration before executing subsequent actions.
           
           The goal `new-axiom@0()` requires:
           1. `atconf(v12, v13)` and `atconf(v14, v15)` - these are true initially.
           2. `free(v12, v16)` and `free(v14, v16)` - these are true initially, and we must ensure they are true at the end. This implies `drop_rock` after each `sample_rock`.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`.
           4. `receivedanalysis(v1)`, `receivedanalysis(v3)`, `receivedanalysis(v4)` (type v2 rocks).
           5. `receivedanalysis(v5)`, `receivedanalysis(v7)`, `receivedanalysis(v8)` (type v6 rocks).
           
           I will use rover v12 to handle all image and analysis tasks, moving it to the necessary configurations as needed.
           
           Let's carefully sequence the moves:
           
           **Imaging (using v12):**
           - **v17 at #q5:** Current v12 is at v13. Move to #q5. Calibrate, take image. Move to #q4 to send.
           - **v18 at #q2:** Current v12 is at #q4. Move to #q2. Calibrate, take image. Move to #q4 to send.
           - **v19 at #q10:** Current v12 is at #q4. Move to #q10. Calibrate, take image. Move to #q4 to send.
           - **v20 at #q3:** Current v12 is at #q4. Move to #q3. Calibrate, take image. Move to #q4 to send.
           
           **Analysis (using v12):**
           - **v4 at #q0:** Current v12 is at #q4. Move to #q0. Sample, move to #q4, send analysis, drop rock.
           - **v3 at #q1:** Current v12 is at #q4. Move to #q1. Sample, move to #q4, send analysis, drop rock.
           - **v1 at #q8:** Current v12 is at #q4. Move to #q8. Sample, move to #q4, send analysis, drop rock.
           - **v5 at #q7:** Current v12 is at #q4. Move to #q7. Sample, move to #q4, send analysis, drop rock.
           - **v7 at #q6:** Current v12 is at #q4. Move to #q6. Sample, move to #q4, send analysis, drop rock.
           - **v8 at #q9:** Current v12 is at #q4. Move to #q9. Sample, move to #q4, send analysis, drop rock.
           
           Initial state: `atconf(v12, v13)`
           
           --Plan--:
           (move v12 v13 #t22 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t8 #q4)
           (send_image v12 #q4 #y2 v9 v17 v11)
           (move v12 #q4 #t37 #q2)
           (calibrate v12 #q2 #y0 v18 v10)
           (take_image v12 #q2 #y0 v18 v10 v11)
           (move v12 #q2 #t6 #q4)
           (send_image v12 #q4 #y2 v9 v18 v11)
           (move v12 #q4 #t49 #q10)
           (calibrate v12 #q10 #y4 v19 v10)
           (take_image v12 #q10 #y4 v19 v10 v11)
           (move v12 #q10 #t39 #q4)
           (send_image v12 #q4 #y2 v9 v19 v11)
           (move v12 #q4 #t36 #q3)
           (calibrate v12 #q3 #y1 v20 v10)
           (take_image v12 #q3 #y1 v20 v10 v11)
           (move v12 #q3 #t7 #q4)
           (send_image v12 #q4 #y2 v9 v20 v11)
           (move v12 #q4 #t2 #q0)
           (sample_rock v12 #q0 v4 v16)
           (move v12 #q0 #t9 #q4)
           (send_analysis v12 #q4 #y2 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q4 #t3 #q1)
           (sample_rock v12 #q1 v3 v16)
           (move v12 #q1 #t10 #q4)
           (send_analysis v12 #q4 #y2 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q4 #o2 #q8)
           (move v12 #q8 #t13 #q4)
           (sample_rock v12 #q8 v1 v16)
           (send_analysis v12 #q4 #y2 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q4 #t40 #q7)
           (sample_rock v12 #q7 v5 v16)
           (move v12 #q7 #t12 #q4)
           (send_analysis v12 #q4 #y2 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q4 #t4 #q6)
           (sample_rock v12 #q6 v7 v16)
           (move v12 #q6 #t11 #q4)
           (send_analysis v12 #q4 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q4 #o2 #q9)
           (move v12 #q9 #t14 #q4)
           (sample_rock v12 #q9 v8 v16)
           (send_analysis v12 #q4 #y2 v9 v8)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the ultimate goal `new-axiom@0()` was not satisfied, even though I addressed the individual `receivedimage` and `receivedanalysis` conditions. The `new-axiom@0()` refers to a complex set of conditions that combine the receipt of images and analysis, as well as the initial `atconf` and `free` states. My plan successfully generates all `receivedimage` and `receivedanalysis` facts, and the initial `atconf` and `free` facts remain true at the end. The issue might be related to the precise interpretation of how `new-axiom@0()` is checked, or perhaps there's an implicit constraint I'm missing. However, given the problem description, I've satisfied all explicit sub-goals of the axiom.
           
           Let me double check the conditions for `new-axiom@0()`:
           1. `atconf(v12, v13)`: Rover v12 needs to be at configuration v13.
           2. `atconf(v14, v15)`: Rover v14 needs to be at configuration v15.
           3. `free(v12, v16)`: Store v16 on rover v12 needs to be free.
           4. `free(v14, v16)`: Store v16 on rover v14 needs to be free.
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `type(?stone, v2)` AND `receivedanalysis(?stone)`: This means for all objects with `type(?stone, v2)` (which are v1, v3, v4), `receivedanalysis` must be true.
           10. `type(?soil, v6)` AND `receivedanalysis(?soil)`: This means for all objects with `type(?soil, v6)` (which are v5, v7, v8), `receivedanalysis` must be true.
           
           My plan ensured that at the end of the sequence:
           - Rover v12 is at #q4. This violates `atconf(v12, v13)`.
           - Rover v14 remains at v15, which satisfies `atconf(v14, v15)`.
           - All `free(v12, v16)` and `free(v14, v16)` are maintained due to `drop_rock`.
           - All `receivedimage` and `receivedanalysis` goals are met.
           
           The problem states "If any of the axioms contains an object that starts with '?', that object is a variable and there is an implicit existential quantifier over that variable." This means for `atconf(v12, v13)`, `v13` is a specific configuration, not any configuration. I need to ensure rover v12 returns to v13 at the end of the plan to satisfy the `new-axiom@0()`'s first condition for v12. Similarly, v14 needs to be at v15. Since v14 isn't moved in my previous plan, it remains at v15.
           
           The solution is to add a final `move` action for rover v12 to return to configuration v13.
           
           --Plan--:
           (move v12 v13 #t22 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t8 #q4)
           (send_image v12 #q4 #y2 v9 v17 v11)
           (move v12 #q4 #t37 #q2)
           (calibrate v12 #q2 #y0 v18 v10)
           (take_image v12 #q2 #y0 v18 v10 v11)
           (move v12 #q2 #t6 #q4)
           (send_image v12 #q4 #y2 v9 v18 v11)
           (move v12 #q4 #t49 #q10)
           (calibrate v12 #q10 #y4 v19 v10)
           (take_image v12 #q10 #y4 v19 v10 v11)
           (move v12 #q10 #t39 #q4)
           (send_image v12 #q4 #y2 v9 v19 v11)
           (move v12 #q4 #t36 #q3)
           (calibrate v12 #q3 #y1 v20 v10)
           (take_image v12 #q3 #y1 v20 v10 v11)
           (move v12 #q3 #t7 #q4)
           (send_image v12 #q4 #y2 v9 v20 v11)
           (move v12 #q4 #t2 #q0)
           (sample_rock v12 #q0 v4 v16)
           (move v12 #q0 #t9 #q4)
           (send_analysis v12 #q4 #y2 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q4 #t3 #q1)
           (sample_rock v12 #q1 v3 v16)
           (move v12 #q1 #t10 #q4)
           (send_analysis v12 #q4 #y2 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q4 #o2 #q8)
           (move v12 #q8 #t13 #q4)
           (sample_rock v12 #q8 v1 v16)
           (send_analysis v12 #q4 #y2 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q4 #t40 #q7)
           (sample_rock v12 #q7 v5 v16)
           (move v12 #q7 #t12 #q4)
           (send_analysis v12 #q4 #y2 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q4 #t4 #q6)
           (sample_rock v12 #q6 v7 v16)
           (move v12 #q6 #t11 #q4)
           (send_analysis v12 #q4 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q4 #o2 #q9)
           (move v12 #q9 #t14 #q4)
           (sample_rock v12 #q9 v8 v16)
           (send_analysis v12 #q4 #y2 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q4 #t5 v13)

