User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t5: object
           #t50: object
           #t51: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom rock(v8)
           Atom objective(v17)
           Atom type(v8, v6)
           Atom rock(v3)
           Atom type(v5, v6)
           Atom type(v4, v2)
           Atom lander(v9)
           Atom objective(v19)
           Atom rover(v14)
           Atom atconf(v12, v13)
           Atom conf(v12, v13)
           Atom onboard(v10, v14)
           Atom rock(v5)
           Atom atconf(v14, v15)
           Atom rock(v1)
           Atom rock(v7)
           Atom objective(v18)
           Atom onboard(v10, v12)
           Atom rock(v4)
           Atom rover(v12)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom free(v12, v16)
           Atom camera(v10)
           Atom free(v14, v16)
           Atom supports(v10, v11)
           Atom type(v1, v2)
           Atom objective(v20)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom imagevisible(v12, #q4, #y2, v20)
           Atom imagerange(v12, #q4, v20)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q9, #y5, v18)
           Atom imagerange(v12, #q9, v18)
           Atom conf(v12, #q9)
           Atom ray(#y5)
           Atom imagevisible(v14, #q14, #y6, v18)
           Atom imagerange(v14, #q14, v18)
           Atom conf(v14, #q14)
           Atom ray(#y6)
           Atom above(v14, #q2, v3)
           Atom conf(v14, #q2)
           Atom above(v14, #q5, v4)
           Atom conf(v14, #q5)
           Atom imagevisible(v14, #q17, #y9, v20)
           Atom imagerange(v14, #q17, v20)
           Atom conf(v14, #q17)
           Atom ray(#y9)
           Atom imagevisible(v12, #q3, #y1, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom imagevisible(v14, #q16, #y8, v17)
           Atom imagerange(v14, #q16, v17)
           Atom conf(v14, #q16)
           Atom ray(#y8)
           Atom imagevisible(v12, #q8, #y4, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y4)
           Atom imagevisible(v14, #q15, #y7, v19)
           Atom imagerange(v14, #q15, v19)
           Atom conf(v14, #q15)
           Atom ray(#y7)
           Atom comvisible(v14, #q6, #y3, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y3)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q7, v8)
           Atom conf(v14, #q7)
           Atom above(v12, #q10, v7)
           Atom conf(v12, #q10)
           Atom above(v14, #q1, v7)
           Atom conf(v14, #q1)
           Atom above(v12, #o5, v1)
           Atom above(v14, #q13, v1)
           Atom conf(v14, #q13)
           Atom above(v12, #o5, v5)
           Atom above(v14, #q12, v5)
           Atom conf(v14, #q12)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, v15, #t4, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #t33, #q14)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q10, #t17, #q0)
           Atom motion(v12, #q0, #t12, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t21, #q10)
           Atom motion(v12, #q9, #t23, #q0)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q0, #t41, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v14, #q12, #t30, #q6)
           Atom motion(v14, #q6, #t38, #q14)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q14, #t32, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q2, #t9, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #t0, v15)
           Atom motion(v14, #q6, #t14, #q2)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #t2, #q0)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, v13, #t7, #q4)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q2)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q15, #t37, #q6)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q6, #t42, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, v15, #t51, #q15)
           Atom motion(v14, #q14, #t39, #q15)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q2)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q17, #t43, #q6)
           Atom motion(v14, #q17, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q17, #t45, #q14)
           Atom motion(v14, #q2, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q6, #t40, #q17)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q4, #t24, #q8)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q8, #t20, #q9)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #t18, #q0)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q0, #t22, #q11)
           Atom motion(v12, #q11, #t35, #q10)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, v13, #t34, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q2)
           Atom motion(v14, #q14, #t48, #q16)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q6, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q2, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q6)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #t50, #q15)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #t46, #q12)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #t31, #q6)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v12, #q0, #t36, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q3, #t19, #q4)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t6, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q3, #t1, #q0)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q6, #t16, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q7, #t11, #q6)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q7, #t49, #q13)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, v15, #t3, #q1)
           Atom motion(v14, #q16, #o2, #q1)
           Atom motion(v14, #q7, #t28, #q1)
           Atom motion(v14, #q1, #t8, #q6)
           Atom motion(v14, #q1, #o2, #q17)
           Atom motion(v14, #q1, #t25, #q12)
           Atom motion(v14, #q17, #o2, #q1)
           Atom motion(v14, #q1, #t26, #q13)
           Atom motion(v14, #q1, #t44, #q7)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q6, #t13, #q1)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, v15, #t5, #q5)
           Atom motion(v14, #q5, #o2, #q17)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #t10, #q6)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q16, #o2, #q5)
           Atom motion(v14, #q5, #t47, #q1)
           Atom motion(v14, #q5, #o2, #q16)
           Atom motion(v14, #q5, #t27, #q7)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q17, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q15, #o2, #q5)
           Atom motion(v14, #q6, #t15, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q5)
           Atom motion(v14, #q2, #t29, #q5)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v14 #q1 v7 v16))
           ((sample_rock v14 #q12 v5 v16))
           ((sample_rock v14 #q13 v1 v16))
           ((sample_rock v14 #q2 v3 v16))
           ((sample_rock v14 #q5 v4 v16))
           ((sample_rock v14 #q7 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #t12 v13))
           ((move v12 #q0 #t21 #q10))
           ((move v12 #q0 #t22 #q11))
           ((move v12 #q0 #t36 #q3))
           ((move v12 #q0 #t41 #q9))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t17 #q0))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t18 #q0))
           ((move v12 #q11 #t35 #q10))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t1 #q0))
           ((move v12 #q3 #t19 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t2 #q0))
           ((move v12 #q4 #t24 #q8))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t20 #q9))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t23 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t34 #q11))
           ((move v12 v13 #t6 #q3))
           ((move v12 v13 #t7 #q4))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q17))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t25 #q12))
           ((move v14 #q1 #t26 #q13))
           ((move v14 #q1 #t44 #q7))
           ((move v14 #q1 #t8 #q6))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t30 #q6))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t31 #q6))
           ((move v14 #q13 #t46 #q12))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q5))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t32 #q6))
           ((move v14 #q14 #t39 #q15))
           ((move v14 #q14 #t48 #q16))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q5))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t37 #q6))
           ((move v14 #q16 #o2 #q1))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q2))
           ((move v14 #q16 #o2 #q5))
           ((move v14 #q16 #o2 #q6))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t50 #q15))
           ((move v14 #q17 #o2 #q1))
           ((move v14 #q17 #o2 #q12))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q2))
           ((move v14 #q17 #o2 #q5))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t43 #q6))
           ((move v14 #q17 #t45 #q14))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q16))
           ((move v14 #q2 #o2 #q17))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t29 #q5))
           ((move v14 #q2 #t9 #q6))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q16))
           ((move v14 #q5 #o2 #q17))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t10 #q6))
           ((move v14 #q5 #t27 #q7))
           ((move v14 #q5 #t47 #q1))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q16))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #t0 v15))
           ((move v14 #q6 #t13 #q1))
           ((move v14 #q6 #t14 #q2))
           ((move v14 #q6 #t15 #q5))
           ((move v14 #q6 #t16 #q7))
           ((move v14 #q6 #t38 #q14))
           ((move v14 #q6 #t40 #q17))
           ((move v14 #q6 #t42 #q15))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t11 #q6))
           ((move v14 #q7 #t28 #q1))
           ((move v14 #q7 #t49 #q13))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t3 #q1))
           ((move v14 v15 #t33 #q14))
           ((move v14 v15 #t4 #q2))
           ((move v14 v15 #t5 #q5))
           ((move v14 v15 #t51 #q15))
           ((calibrate v12 #q3 #y1 v17 v10))
           ((calibrate v12 #q4 #y2 v20 v10))
           ((calibrate v12 #q8 #y4 v19 v10))
           ((calibrate v12 #q9 #y5 v18 v10))
           ((calibrate v14 #q14 #y6 v18 v10))
           ((calibrate v14 #q15 #y7 v19 v10))
           ((calibrate v14 #q16 #y8 v17 v10))
           ((calibrate v14 #q17 #y9 v20 v10))
           ((take_image v12 #q3 #y1 v17 v10 v11))
           ((take_image v12 #q4 #y2 v20 v10 v11))
           ((take_image v12 #q8 #y4 v19 v10 v11))
           ((take_image v12 #q9 #y5 v18 v10 v11))
           ((take_image v14 #q14 #y6 v18 v10 v11))
           ((take_image v14 #q15 #y7 v19 v10 v11))
           ((take_image v14 #q16 #y8 v17 v10 v11))
           ((take_image v14 #q17 #y9 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y3 v9 v7))
           ((send_analysis v14 #q6 #y3 v9 v5))
           ((send_analysis v14 #q6 #y3 v9 v1))
           ((send_analysis v14 #q6 #y3 v9 v3))
           ((send_analysis v14 #q6 #y3 v9 v4))
           ((send_analysis v14 #q6 #y3 v9 v8))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q6 #y3 v9 v18 v11))
           ((send_image v14 #q6 #y3 v9 v19 v11))
           ((send_image v14 #q6 #y3 v9 v17 v11))
           ((send_image v14 #q6 #y3 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to satisfy `new-axiom@0()`. This axiom requires several conditions to be met, specifically:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `type(?stone, v2)` (already satisfied by `type(v3, v2)`, `type(v4, v2)`, `type(v1, v2)`)
           - `receivedanalysis(?stone)` (meaning `receivedanalysis(v3)`, `receivedanalysis(v4)`, or `receivedanalysis(v1)`)
           - `type(?soil, v6)` (already satisfied by `type(v7, v6)`, `type(v8, v6)`, `type(v5, v6)`)
           - `receivedanalysis(?soil)` (meaning `receivedanalysis(v7)`, `receivedanalysis(v8)`, or `receivedanalysis(v5)`)
           
           From the initial state:
           - `atconf(v12, v13)` and `atconf(v14, v15)` are already true.
           - `free(v12, v16)` and `free(v14, v16)` are already true.
           - We need to achieve `receivedimage` for all objectives `v17`, `v18`, `v19`, `v20` with mode `v11`. This involves `calibrate`, `take_image`, and `send_image`.
           - We need to achieve `receivedanalysis` for one rock of type `v2` (stone) and one rock of type `v6` (soil). This involves `sample_rock` and `send_analysis`.
           
           Let's break down the plan:
           
           1.  **Analyze a stone (type v2):**
               *   We have rocks `v3`, `v4`, `v1` of type `v2`.
               *   `v12` is above `v3` at `#q11`, `v4` at `#o5`. `v14` is above `v3` at `#q2`, `v4` at `#q5`, `v1` at `#q13`.
               *   Let's use `v12` and `v3`. `v12` is at `v13`. We need to move `v12` to `#q11` to sample `v3`.
               *   Sample `v3` (rock of type `v2`).
               *   Send analysis of `v3`. For this `v12` needs to be at a configuration where `comvisible` to `v9` (lander) is true. `v12` is at `v13`, can move to `#q0` where `comvisible(v12, #q0, #y0, v9)` is true.
           
           2.  **Analyze a soil (type v6):**
               *   We have rocks `v8`, `v5`, `v7` of type `v6`.
               *   `v12` is above `v8` at `#o5`, `v7` at `#q10`, `v5` at `#o5`. `v14` is above `v8` at `#q7`, `v5` at `#q12`, `v7` at `#q1`.
               *   Let's use `v14` and `v7`. `v14` is at `v15`. We need to move `v14` to `#q1` to sample `v7`.
               *   Sample `v7` (rock of type `v6`).
               *   Send analysis of `v7`. For this `v14` needs to be at a configuration where `comvisible` to `v9` (lander) is true. `v14` is at `v15`, can move to `#q6` where `comvisible(v14, #q6, #y3, v9)` is true.
           
           3.  **Get images for all objectives:**
               *   **Objective `v17`**:
                   *   `v12` can see `v17` at `#q3` with `y1`.
                   *   `v14` can see `v17` at `#q16` with `y8`.
                   *   Let's use `v12`. Calibrate camera `v10` at `#q3`, take image, then move to `#q0` and send.
               *   **Objective `v18`**:
                   *   `v12` can see `v18` at `#q9` with `y5`.
                   *   `v14` can see `v18` at `#q14` with `y6`.
                   *   Let's use `v12`. Calibrate camera `v10` at `#q9`, take image, then move to `#q0` and send.
               *   **Objective `v19`**:
                   *   `v12` can see `v19` at `#q8` with `y4`.
                   *   `v14` can see `v19` at `#q15` with `y7`.
                   *   Let's use `v12`. Calibrate camera `v10` at `#q8`, take image, then move to `#q0` and send.
               *   **Objective `v20`**:
                   *   `v12` can see `v20` at `#q4` with `y2`.
                   *   `v14` can see `v20` at `#q17` with `y9`.
                   *   Let's use `v12`. Calibrate camera `v10` at `#q4`, take image, then move to `#q0` and send.
           
           Both rovers can be used in parallel, but here for simplicity, I will outline a plan that uses `v12` for all image tasks and `v14` for soil analysis, and `v12` for stone analysis (but `v12` needs to drop rock and make its store free for further sampling if it were to do both analyses, or just ensure `free` is true if only doing one). Since `free(v12, v16)` and `free(v14, v16)` are already true, we can sample once with each rover.
           
           **Detailed Plan Steps:**
           
           1.  **Rover v12 for stone analysis and all images:**
               *   Move `v12` to `#q11` (above `v3`).
               *   Sample `v3`.
               *   Move `v12` to `#q0` (comms range for `v9`).
               *   Send analysis of `v3`.
               *   Calibrate `v10` for `v17` at `#q3`. (Need to move to `#q3` first, then to `#q0` to send)
               *   Take image of `v17`.
               *   Send image of `v17`.
               *   Calibrate `v10` for `v18` at `#q9`. (Need to move to `#q9` first, then to `#q0` to send)
               *   Take image of `v18`.
               *   Send image of `v18`.
               *   Calibrate `v10` for `v19` at `#q8`. (Need to move to `#q8` first, then to `#q0` to send)
               *   Take image of `v19`.
               *   Send image of `v19`.
               *   Calibrate `v10` for `v20` at `#q4`. (Need to move to `#q4` first, then to `#q0` to send)
               *   Take image of `v20`.
               *   Send image of `v20`.
           
           2.  **Rover v14 for soil analysis:**
               *   Move `v14` to `#q1` (above `v7`).
               *   Sample `v7`.
               *   Move `v14` to `#q6` (comms range for `v9`).
               *   Send analysis of `v7`.
           
           Let's re-order to minimize movement for `v12`:
           *   `v12` starts at `v13`.
           *   Move to `#q11` (sample v3).
           *   Move to `#q0` (send analysis, send images).
           *   From `#q0`, move to each imaging location, then back to `#q0` to send.
           
           The initial state guarantees that `v12` is at `v13` and `v14` is at `v15`. `free(v12, v16)` and `free(v14, v16)` are also true.
           
           **Revised Plan Strategy:**
           
           1.  **Rover v12 (for stone analysis and all images):**
               *   Move v12 from `v13` to `#q11` to sample rock `v3` (type v2, stone).
               *   Sample rock `v3`. Store `v16` on `v12` becomes full.
               *   Move v12 from `#q11` to `#q0` to communicate.
               *   Send analysis of `v3` from `v12` at `#q0`.
               *   Drop the rock `v3` from `v12` at `#q0` to make `v16` free again.
               *   Now, `v12` is at `#q0`. Calibrate, take image, send image for each objective.
                   *   Move v12 from `#q0` to `#q3` (for `v17`).
                   *   Calibrate `v10` for `v17`.
                   *   Take image of `v17`.
                   *   Move v12 from `#q3` to `#q0`.
                   *   Send image of `v17`.
                   *   Move v12 from `#q0` to `#q9` (for `v18`).
                   *   Calibrate `v10` for `v18`.
                   *   Take image of `v18`.
                   *   Move v12 from `#q9` to `#q0`.
                   *   Send image of `v18`.
                   *   Move v12 from `#q0` to `#q8` (for `v19`).
                   *   Calibrate `v10` for `v19`.
                   *   Take image of `v19`.
                   *   Move v12 from `#q8` to `#q0`.
                   *   Send image of `v19`.
                   *   Move v12 from `#q0` to `#q4` (for `v20`).
                   *   Calibrate `v10` for `v20`.
                   *   Take image of `v20`.
                   *   Move v12 from `#q4` to `#q0`.
                   *   Send image of `v20`.
           
           2.  **Rover v14 (for soil analysis):**
               *   Move v14 from `v15` to `#q1` to sample rock `v7` (type v6, soil).
               *   Sample rock `v7`. Store `v16` on `v14` becomes full.
               *   Move v14 from `#q1` to `#q6` to communicate.
               *   Send analysis of `v7` from `v14` at `#q6`.
               *   Drop the rock `v7` from `v14` at `#q6` (optional for goal, but good practice if more samples were needed).
           
           The key is that the camera `v10` needs to be recalibrated after each `take_image` action before taking another image.
           
           Let's consolidate the image tasks to reduce redundant `move` actions where possible if locations are adjacent or can be chained. However, given the action instances, it looks like moving back to a comms point after each image is required if the image location itself is not a comms point.
           
           Let's prioritize reaching `receivedanalysis` for both soil and stone, and `receivedimage` for all objectives.
           
           --Plan--:
           (move v12 v13 #t34 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #t18 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (drop_rock v12 v16)
           (move v14 v15 #t3 #q1)
           (sample_rock v14 #q1 v7 v16)
           (move v14 #q1 #t8 #q6)
           (send_analysis v14 #q6 #y3 v9 v7)
           (calibrate v12 #q3 #y1 v17 v10)
           (take_image v12 #q3 #y1 v17 v10 v11)
           (move v12 #q3 #t1 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t41 #q9)
           (calibrate v12 #q9 #y5 v18 v10)
           (take_image v12 #q9 #y5 v18 v10 v11)
           (move v12 #q9 #t23 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #o2 #q8)
           (calibrate v12 #q8 #y4 v19 v10)
           (take_image v12 #q8 #y4 v19 v10 v11)
           (move v12 #q8 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v12 #q0 #o2 #q4)
           (calibrate v12 #q4 #y2 v20 v10)
           (take_image v12 #q4 #y2 v20 v10 v11)
           (move v12 #q4 #t2 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. Let's re-evaluate the conditions for `new-axiom@0()`:
           
           *   `atconf(v12, v13)`: True initially, but changes with `move` actions. The final configuration of `v12` in the previous plan was `#q0`. This needs to be `v13` or we need to ensure it's `v13` at the end or an equivalent state (although the problem implies the explicit `v13` state).
           *   `atconf(v14, v15)`: True initially, but changes with `move` actions. The final configuration of `v14` in the previous plan was `#q6`. This needs to be `v15` or an equivalent state.
           *   `free(v12, v16)`: True initially. Sample actions make it `full`, `drop_rock` makes it `free`. My previous plan accounted for this.
           *   `free(v14, v16)`: True initially. Sample actions make it `full`, `drop_rock` makes it `free`. My previous plan accounted for this.
           *   `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: My previous plan covered taking and sending all these images.
           *   `receivedanalysis(?stone)`: `receivedanalysis(v3)` was achieved.
           *   `receivedanalysis(?soil)`: `receivedanalysis(v7)` was achieved.
           
           The primary issue is likely the final `atconf` states of the rovers. The goal requires `atconf(v12, v13)` and `atconf(v14, v15)`. My previous plan left `v12` at `#q0` and `v14` at `#q6`. I need to add `move` actions to return them to `v13` and `v15` respectively.
           
           Let's adjust the plan to include returning the rovers to their initial configurations.
           
           **Revised Plan Strategy incorporating final positions:**
           
           1.  **Rover v12 (for stone analysis and all images):**
               *   Start at `v13`.
               *   Move v12 to `#q11` (to sample `v3`).
               *   Sample rock `v3`.
               *   Move v12 to `#q0` (to send analysis).
               *   Send analysis of `v3`.
               *   Drop the rock `v3`.
               *   **Image acquisition loop (move to observation point, calibrate, take, move to comms, send):**
                   *   For `v17`: `move v12 #q0 #t36 #q3` -> `calibrate` -> `take_image` -> `move v12 #q3 #t1 #q0` -> `send_image`.
                   *   For `v18`: `move v12 #q0 #t41 #q9` -> `calibrate` -> `take_image` -> `move v12 #q9 #t23 #q0` -> `send_image`.
                   *   For `v19`: `move v12 #q0 #o2 #q8` -> `calibrate` -> `take_image` -> `move v12 #q8 #o2 #q0` -> `send_image`.
                   *   For `v20`: `move v12 #q0 #o2 #q4` -> `calibrate` -> `take_image` -> `move v12 #q4 #t2 #q0` -> `send_image`.
               *   After all image tasks, `v12` is at `#q0`. Move `v12` from `#q0` back to `v13`. (`move v12 #q0 #t12 v13`).
           
           2.  **Rover v14 (for soil analysis):**
               *   Start at `v15`.
               *   Move v14 to `#q1` (to sample `v7`).
               *   Sample rock `v7`.
               *   Move v14 to `#q6` (to send analysis).
               *   Send analysis of `v7`.
               *   Drop the rock `v7`.
               *   Move `v14` from `#q6` back to `v15`. (`move v14 #q6 #t0 v15`).
           
           This should address all conditions, especially the final `atconf` states.
           
           --Plan--:
           (move v12 v13 #t34 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #t18 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (drop_rock v12 v16)
           (move v14 v15 #t3 #q1)
           (sample_rock v14 #q1 v7 v16)
           (move v14 #q1 #t8 #q6)
           (send_analysis v14 #q6 #y3 v9 v7)
           (drop_rock v14 v16)
           (calibrate v12 #q3 #y1 v17 v10)
           (take_image v12 #q3 #y1 v17 v10 v11)
           (move v12 #q3 #t1 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t41 #q9)
           (calibrate v12 #q9 #y5 v18 v10)
           (take_image v12 #q9 #y5 v18 v10 v11)
           (move v12 #q9 #t23 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #o2 #q8)
           (calibrate v12 #q8 #y4 v19 v10)
           (take_image v12 #q8 #y4 v19 v10 v11)
           (move v12 #q8 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v12 #q0 #o2 #q4)
           (calibrate v12 #q4 #y2 v20 v10)
           (take_image v12 #q4 #y2 v20 v10 v11)
           (move v12 #q4 #t2 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #t12 v13)
           (move v14 #q6 #t0 v15)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q3) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan failed because `(calibrate v12 #q3 #y1 v17 v10)` required `v12` to be at `#q3`, but the previous action `(send_image v12 #q0 #y0 v9 v17 v11)` left `v12` at `#q0`. This highlights the need to ensure the rover is at the correct location *before* attempting actions like `calibrate` or `sample_rock`.
           
           My previous plan attempted to optimize by moving to a comms point and then chaining image tasks, but this caused `atconf` mismatches. The core issue is that after sending an image, `v12` is at `#q0`, but the next `calibrate` action might require it to be at a different `q` (e.g., `#q3` for `v17`).
           
           Let's refine the structure to explicitly move `v12` to the correct configuration for each `calibrate`/`take_image` pair, and then back to `#q0` to `send_image`.
           
           **Revised Plan Strategy to ensure `atconf` preconditions:**
           
           1.  **Rover v12 (stone analysis):**
               *   Move v12 from `v13` to `#q11`.
               *   Sample rock `v3`.
               *   Move v12 from `#q11` to `#q0`.
               *   Send analysis of `v3`.
               *   Drop the rock `v3`.
           
           2.  **Rover v14 (soil analysis):**
               *   Move v14 from `v15` to `#q1`.
               *   Sample rock `v7`.
               *   Move v14 from `#q1` to `#q6`.
               *   Send analysis of `v7`.
               *   Drop the rock `v7`.
           
           3.  **Rover v12 (image acquisition for v17, v18, v19, v20):**
               *   **For v17:**
                   *   `v12` is currently at `#q0`.
                   *   Move `v12` from `#q0` to `#q3`.
                   *   Calibrate `v10` at `#q3`.
                   *   Take image of `v17` at `#q3`.
                   *   Move `v12` from `#q3` to `#q0`.
                   *   Send image of `v17`.
               *   **For v18:**
                   *   `v12` is currently at `#q0`.
                   *   Move `v12` from `#q0` to `#q9`.
                   *   Calibrate `v10` at `#q9`.
                   *   Take image of `v18` at `#q9`.
                   *   Move `v12` from `#q9` to `#q0`.
                   *   Send image of `v18`.
               *   **For v19:**
                   *   `v12` is currently at `#q0`.
                   *   Move `v12` from `#q0` to `#q8`.
                   *   Calibrate `v10` at `#q8`.
                   *   Take image of `v19` at `#q8`.
                   *   Move `v12` from `#q8` to `#q0`.
                   *   Send image of `v19`.
               *   **For v20:**
                   *   `v12` is currently at `#q0`.
                   *   Move `v12` from `#q0` to `#q4`.
                   *   Calibrate `v10` at `#q4`.
                   *   Take image of `v20` at `#q4`.
                   *   Move `v12` from `#q4` to `#q0`.
                   *   Send image of `v20`.
           
           4.  **Final positioning:**
               *   Move `v12` from `#q0` to `v13`.
               *   Move `v14` from `#q6` to `v15`.
           
           This detailed breakdown ensures that each `atconf` precondition is met immediately before the action that requires it.
           
           --Plan--:
           (move v12 v13 #t34 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #t18 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (drop_rock v12 v16)
           (move v14 v15 #t3 #q1)
           (sample_rock v14 #q1 v7 v16)
           (move v14 #q1 #t8 #q6)
           (send_analysis v14 #q6 #y3 v9 v7)
           (drop_rock v14 v16)
           (move v12 #q0 #t36 #q3)
           (calibrate v12 #q3 #y1 v17 v10)
           (take_image v12 #q3 #y1 v17 v10 v11)
           (move v12 #q3 #t1 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t41 #q9)
           (calibrate v12 #q9 #y5 v18 v10)
           (take_image v12 #q9 #y5 v18 v10 v11)
           (move v12 #q9 #t23 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #o2 #q8)
           (calibrate v12 #q8 #y4 v19 v10)
           (take_image v12 #q8 #y4 v19 v10 v11)
           (move v12 #q8 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v12 #q0 #o2 #q4)
           (calibrate v12 #q4 #y2 v20 v10)
           (take_image v12 #q4 #y2 v20 v10 v11)
           (move v12 #q4 #t2 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #t12 v13)
           (move v14 #q6 #t0 v15)

