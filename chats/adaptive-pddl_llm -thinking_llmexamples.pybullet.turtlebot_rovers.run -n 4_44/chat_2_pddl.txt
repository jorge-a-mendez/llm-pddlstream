User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v14)
           Atom conf(v12, v13)
           Atom objective(v20)
           Atom rock(v3)
           Atom atconf(v12, v13)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom camera(v10)
           Atom type(v7, v6)
           Atom free(v14, v16)
           Atom rock(v1)
           Atom supports(v10, v11)
           Atom rock(v8)
           Atom atconf(v14, v15)
           Atom lander(v9)
           Atom conf(v14, v15)
           Atom type(v5, v6)
           Atom objective(v18)
           Atom rover(v12)
           Atom type(v8, v6)
           Atom rock(v5)
           Atom rock(v7)
           Atom type(v1, v2)
           Atom rover(v14)
           Atom objective(v19)
           Atom rock(v4)
           Atom mode(v11)
           Atom type(v4, v2)
           Atom objective(v17)
           Atom free(v12, v16)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #o5, v7)
           Atom above(v14, #q2, v5)
           Atom conf(v14, #q2)
           Atom above(v14, #q0, v1)
           Atom conf(v14, #q0)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q3, #y1, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom imagevisible(v12, #q5, #y3, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #q7, #y5, v18)
           Atom imagerange(v12, #q7, v18)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v12, #q4, #y2, v20)
           Atom imagerange(v12, #q4, v20)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v12, #q6, #y4, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #t13, #q2)
           Atom motion(v12, v13, #t6, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #t1, v13)
           Atom motion(v12, #q3, #t2, #q6)
           Atom motion(v12, #q6, #t9, #q3)
           Atom motion(v14, #q1, #t5, v15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t15, #q2)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, v15, #t12, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q1, #t14, #q0)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q4, #t3, #q6)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q6, #t10, #q4)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, v13, #t7, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, v13, #t8, #q5)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q6, #t11, #q5)
           Atom motion(v12, #q5, #t4, #q6)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q2)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, #q2, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q3, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v1 v16))
           ((sample_rock v14 #q2 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t2 #q6))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t3 #q6))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t4 #q6))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #t1 v13))
           ((move v12 #q6 #t10 #q4))
           ((move v12 #q6 #t11 #q5))
           ((move v12 #q6 #t9 #q3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t6 #q3))
           ((move v12 v13 #t7 #q4))
           ((move v12 v13 #t8 #q5))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q2))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #t14 #q0))
           ((move v14 #q1 #t15 #q2))
           ((move v14 #q1 #t5 v15))
           ((move v14 #q2 #o2 #o3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q0))
           ((move v14 v15 #t13 #q2))
           ((calibrate v12 #q3 #y1 v17 v10))
           ((calibrate v12 #q4 #y2 v20 v10))
           ((calibrate v12 #q5 #y3 v19 v10))
           ((calibrate v12 #q7 #y5 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q3 #y1 v17 v10 v11))
           ((take_image v12 #q4 #y2 v20 v10 v11))
           ((take_image v12 #q5 #y3 v19 v10 v11))
           ((take_image v12 #q7 #y5 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y4 v9 v1))
           ((send_analysis v12 #q6 #y4 v9 v3))
           ((send_analysis v12 #q6 #y4 v9 v4))
           ((send_analysis v12 #q6 #y4 v9 v5))
           ((send_analysis v12 #q6 #y4 v9 v7))
           ((send_analysis v12 #q6 #y4 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_image v12 #q6 #y4 v9 v17 v11))
           ((send_image v12 #q6 #y4 v9 v20 v11))
           ((send_image v12 #q6 #y4 v9 v19 v11))
           ((send_image v12 #q6 #y4 v9 v18 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ((send_image v14 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q1 #y0 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Comprehensive Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal here is to satisfy the conditions laid out in `new-axiom@0()`.  Since I have a background in this, I can see that this is a conjunction of a few key facts, and most of them are initially true.  The tricky part is getting the image and analysis data and managing the storage.
           
           First, I need to focus on getting the images. I can see that I need to capture images of `v17`, `v18`, `v19`, and `v20` using the mode `v11`. To accomplish this efficiently, I think I'll use rover `v12` as it's the most straightforward path.  It's equipped with camera `v10`, which is supported by `v11`.
           
           Here's the plan for each image:
           
           1.  **Image v17:**
               *   I'll start by moving `v12` to `#q3` (for image visibility) using `move v12 v13 #t6 #q3`.
               *   Next, I must calibrate camera `v10` on rover `v12` for `v17` using `calibrate v12 #q3 #y1 v17 v10`.
               *   Then, I'll take the image using `take_image v12 #q3 #y1 v17 v10 v11`.
               *   Finally, I need to move `v12` to `#q6` (comm pose) via `move v12 #q3 #t2 #q6` and send the image using `send_image v12 #q6 #y4 v9 v17 v11`.
           
           2.  **Image v19:**
               *   I will move the rover from comm pose to `#q5` using the motion segments in the `motion` predicate `move v12 #q6 #t9 #q3` and then `move v12 #q3 #o2 #q5`.
               *   After that, I'll calibrate and take the image of `v19` using `calibrate v12 #q5 #y3 v19 v10` and `take_image v12 #q5 #y3 v19 v10 v11`
               *   After the image is taken, I move it back to comm pose using `move v12 #q5 #t4 #q6` and then I send it using `send_image v12 #q6 #y4 v9 v19 v11`.
           
           3.  **Image v18:**
               *   The robot must move to pose `#q7`. Therefore,  `move v12 #q6 #o2 #q7`.
               *   Then, calibrate and take the image of `v18`. So `calibrate v12 #q7 #y5 v18 v10`, and `take_image v12 #q7 #y5 v18 v10 v11`.
               *   I will then return to the communication pose `#q6` with `move v12 #q7 #o2 #q6`.
               *   Then send the image with  `send_image v12 #q6 #y4 v9 v18 v11`.
           
           4.  **Image v20:**
               *   Next move rover to pose `#q4` using `move v12 #q6 #t10 #q4`.
               *   And then calibrate and take the image of `v20`. `calibrate v12 #q4 #y2 v20 v10`, and `take_image v12 #q4 #y2 v20 v10 v11`.
               *   I will return to the communication pose `#q6` with `move v12 #q4 #t3 #q6`.
               *   Then send the image with  `send_image v12 #q6 #y4 v9 v20 v11`.
           
           Now, I shift my focus to the analysis phase. I need to sample and analyze a stone (type `v2`) and soil (type `v6`).  I can see `v3` is a stone and `v7` is soil, and they are both visible from `#o5`. This will use rover `v12` store `#s`.
           
           *   **Analysis of Stone (v3)**
               *   First move `v12` to `#o5` by
)

Model:     **Comprehensive Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal here is to satisfy the conditions laid out in `new-axiom@0()`.  Since I have a background in this, I can see that this is a conjunction of a few key facts, and most of them are initially true.  The tricky part is getting the image and analysis data and managing the storage.
           
           First, I need to focus on getting the images. I can see that I need to capture images of `v17`, `v18`, `v19`, and `v20` using the mode `v11`. To accomplish this efficiently, I think I'll use rover `v12` as it's the most straightforward path.  It's equipped with camera `v10`, which is supported by `v11`.
           
           Here's the plan for each image:
           
           1.  **Image v17:**
               *   I'll start by moving `v12` to `#q3` (for image visibility) using `move v12 v13 #t6 #q3`.
               *   Next, I must calibrate camera `v10` on rover `v12` for `v17` using `calibrate v12 #q3 #y1 v17 v10`.
               *   Then, I'll take the image using `take_image v12 #q3 #y1 v17 v10 v11`.
               *   Finally, I need to move `v12` to `#q6` (comm pose) via `move v12 #q3 #t2 #q6` and send the image using `send_image v12 #q6 #y4 v9 v17 v11`.
           
           2.  **Image v19:**
               *   I will move the rover from comm pose to `#q5` using the motion segments in the `motion` predicate `move v12 #q6 #t9 #q3` and then `move v12 #q3 #o2 #q5`.
               *   After that, I'll calibrate and take the image of `v19` using `calibrate v12 #q5 #y3 v19 v10` and `take_image v12 #q5 #y3 v19 v10 v11`
               *   After the image is taken, I move it back to comm pose using `move v12 #q5 #t4 #q6` and then I send it using `send_image v12 #q6 #y4 v9 v19 v11`.
           
           3.  **Image v18:**
               *   The robot must move to pose `#q7`. Therefore,  `move v12 #q6 #o2 #q7`.
               *   Then, calibrate and take the image of `v18`. So `calibrate v12 #q7 #y5 v18 v10`, and `take_image v12 #q7 #y5 v18 v10 v11`.
               *   I will then return to the communication pose `#q6` with `move v12 #q7 #o2 #q6`.
               *   Then send the image with  `send_image v12 #q6 #y4 v9 v18 v11`.
           
           4.  **Image v20:**
               *   Next move rover to pose `#q4` using `move v12 #q6 #t10 #q4`.
               *   And then calibrate and take the image of `v20`. `calibrate v12 #q4 #y2 v20 v10`, and `take_image v12 #q4 #y2 v20 v10 v11`.
               *   I will return to the communication pose `#q6` with `move v12 #q4 #t3 #q6`.
               *   Then send the image with  `send_image v12 #q6 #y4 v9 v20 v11`.
           
           Now, I shift my focus to the analysis phase. I need to sample and analyze a stone (type `v2`) and soil (type `v6`).  I can see `v3` is a stone and `v7` is soil, and they are both visible from `#o5`. This will use rover `v12` store `#s`.
           
           *   **Analysis of Stone (v3)**
               *   First move `v12` to `#o5` by

