User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v7)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom atconf(v14, v15)
           Atom store(v16)
           Atom rover(v14)
           Atom lander(v9)
           Atom rock(v3)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom type(v5, v6)
           Atom rock(v1)
           Atom free(v12, v16)
           Atom objective(v19)
           Atom objective(v17)
           Atom supports(v10, v11)
           Atom camera(v10)
           Atom free(v14, v16)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom atconf(v12, v13)
           Atom rock(v5)
           Atom mode(v11)
           Atom conf(v12, v13)
           Atom type(v1, v2)
           Atom rock(v8)
           Atom rock(v4)
           Atom objective(v18)
           Atom type(v8, v6)
           Atom objective(v20)
           Atom onboard(v10, v14)
           Atom imagevisible(v14, #q3, #y2, v19)
           Atom imagerange(v14, #q3, v19)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #q4, #y3, v20)
           Atom imagerange(v14, #q4, v20)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v8)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q9, v7)
           Atom conf(v14, #q9)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v12, #q11, #y7, v19)
           Atom imagerange(v12, #q11, v19)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q13, #y9, v18)
           Atom imagerange(v12, #q13, v18)
           Atom conf(v12, #q13)
           Atom ray(#y9)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #q10, #y6, v20)
           Atom imagerange(v12, #q10, v20)
           Atom conf(v12, #q10)
           Atom ray(#y6)
           Atom above(v12, #q2, v1)
           Atom conf(v12, #q2)
           Atom above(v12, #q5, v7)
           Atom conf(v12, #q5)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v3)
           Atom above(v14, #q8, v3)
           Atom conf(v14, #q8)
           Atom comvisible(v12, #q7, #y5, v9)
           Atom comrange(v12, #q7, v9)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #q12, #y8, v17)
           Atom imagerange(v12, #q12, v17)
           Atom conf(v12, #q12)
           Atom ray(#y8)
           Atom imagevisible(v14, #q0, #y0, v17)
           Atom imagerange(v14, #q0, v17)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #t3, v15)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, v13, #t10, #q11)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t1, #q0)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, v13, #t11, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q8, #t17, #q1)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, v15, #t7, #q8)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v12, #q7, #t4, v13)
           Atom motion(v12, #q12, #t15, #q7)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q11, #t14, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v14, #q9, #t18, #q1)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #t21, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, v15, #t8, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q5, #t6, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, v13, #t2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t5, #q7)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, v13, #t9, #q10)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q10, #t13, #q7)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q11, #t22, #q10)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q12, #t19, #q13)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #t16, #q7)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, v13, #t12, #q13)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q13, #t20, #q11)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v1 v16))
           ((sample_rock v12 #q5 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q8 v3 v16))
           ((sample_rock v14 #q9 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t13 #q7))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t14 #q7))
           ((move v12 #q11 #t22 #q10))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t15 #q7))
           ((move v12 #q12 #t19 #q13))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t16 #q7))
           ((move v12 #q13 #t20 #q11))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t5 #q7))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t6 #q7))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #t4 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q11))
           ((move v12 v13 #t11 #q12))
           ((move v12 v13 #t12 #q13))
           ((move v12 v13 #t2 #q2))
           ((move v12 v13 #t9 #q10))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t3 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t17 #q1))
           ((move v14 #q8 #t21 #q9))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t18 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((move v14 v15 #t7 #q8))
           ((move v14 v15 #t8 #q9))
           ((calibrate v12 #q10 #y6 v20 v10))
           ((calibrate v12 #q11 #y7 v19 v10))
           ((calibrate v12 #q12 #y8 v17 v10))
           ((calibrate v12 #q13 #y9 v18 v10))
           ((calibrate v14 #q0 #y0 v17 v10))
           ((calibrate v14 #q3 #y2 v19 v10))
           ((calibrate v14 #q4 #y3 v20 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((take_image v12 #q10 #y6 v20 v10 v11))
           ((take_image v12 #q11 #y7 v19 v10 v11))
           ((take_image v12 #q12 #y8 v17 v10 v11))
           ((take_image v12 #q13 #y9 v18 v10 v11))
           ((take_image v14 #q0 #y0 v17 v10 v11))
           ((take_image v14 #q3 #y2 v19 v10 v11))
           ((take_image v14 #q4 #y3 v20 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q7 #y5 v9 v3))
           ((send_analysis v12 #q7 #y5 v9 v4))
           ((send_analysis v12 #q7 #y5 v9 v5))
           ((send_analysis v12 #q7 #y5 v9 v8))
           ((send_analysis v12 #q7 #y5 v9 v1))
           ((send_analysis v12 #q7 #y5 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_image v12 #q7 #y5 v9 v20 v11))
           ((send_image v12 #q7 #y5 v9 v19 v11))
           ((send_image v12 #q7 #y5 v9 v17 v11))
           ((send_image v12 #q7 #y5 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Strategic Planning for Goal Achievement**
           
           Alright, let's break this down. The core objective is to satisfy the conditions described by `new-axiom@0()`, a conjunctive goal involving rover configurations, store availability, image reception, and analysis of specific rock types. My approach is to devise a plan that leverages the given PDDL domain (`rovers`) and initial state information to achieve this goal efficiently.
           
           First, I examined the structure of `new-axiom@0()`, identifying its individual sub-goals:
           
           *   **Configuration:** Both rover `v12` and `v14` must be at specific initial configurations at the plan's end.
           *   **Store Availability:** Store `v16` must be free on both rovers at the plan's end.
           *   **Image Reception:** Images of objectives `v17`, `v18`, `v19`, and `v20` with mode `v11` must be received.
           *   **Rock Analysis:** Analysis of a stone and a soil sample must be received.
           
           I then analyzed the initial state, identifying that the first two conditions (rover configurations and store availability) are initially satisfied. The challenge lies in achieving the remaining image reception and rock analysis goals.
           
           To achieve image reception, I recognized the need for `send_image` actions, which in turn require `take_image`, `calibrate`, and `move` actions. After exploring available actions and the initial state, I developed a strategy to assign image-related tasks to rover `v12` and rock analysis tasks to rover `v14`. This division optimizes resource utilization and simplifies the plan.
           
           For image acquisition, I devised a sequence for rover `v12`: moving to the appropriate image capture location, calibrating the onboard camera (`v10`), capturing the image, and then moving to the lander's communication location to send the image. Repeating this for each objective ensures that all image reception goals are met. I carefully used movement actions to get each image visible location and also have the correct communication visiblity location. To optimize, movement between capture sites is used where possible to avoid repetitive movements.
           
           To address the rock analysis goals, I implemented the following strategy: use rover `v14` to perform rock sampling. I identified rocks of each required type (stone and soil), then I defined sample, drop, and send actions. Rover `v14` will navigate to the location of the rock, sample the rock using `sample_rock` using store v16, and then use `drop_rock` to ensure the store stays free. Afterwards rover `v14` will send the rock's information. I made sure that rover `v14` could send the correct analysis information to meet the goal. 
           
           The most important strategy in this plan is to ensure that the initial configuration and store availability conditions are true at the end of the execution of the plan. I ensured this by having the rovers move to the communication location to send the data and then return to their initial configurations after the images are sent and analyses are sent. Also, I made sure that the store for each rover was set free after each sample.
           
           After the design stage, I validated the plan through meticulous step-by-step reasoning, ensuring that all preconditions for each action are met and that the effects contribute to satisfying the overall goal.
           
           Finally, I carefully merged and traced the plan actions and their results, in detail, to satisfy all the conditions, and also met all initial conditions. I'm confident that this approach will effectively achieve the `new-axiom@0()` goal within the specified PDDL domain.
           
)

Model:     **Strategic Planning for Goal Achievement**
           
           Alright, let's break this down. The core objective is to satisfy the conditions described by `new-axiom@0()`, a conjunctive goal involving rover configurations, store availability, image reception, and analysis of specific rock types. My approach is to devise a plan that leverages the given PDDL domain (`rovers`) and initial state information to achieve this goal efficiently.
           
           First, I examined the structure of `new-axiom@0()`, identifying its individual sub-goals:
           
           *   **Configuration:** Both rover `v12` and `v14` must be at specific initial configurations at the plan's end.
           *   **Store Availability:** Store `v16` must be free on both rovers at the plan's end.
           *   **Image Reception:** Images of objectives `v17`, `v18`, `v19`, and `v20` with mode `v11` must be received.
           *   **Rock Analysis:** Analysis of a stone and a soil sample must be received.
           
           I then analyzed the initial state, identifying that the first two conditions (rover configurations and store availability) are initially satisfied. The challenge lies in achieving the remaining image reception and rock analysis goals.
           
           To achieve image reception, I recognized the need for `send_image` actions, which in turn require `take_image`, `calibrate`, and `move` actions. After exploring available actions and the initial state, I developed a strategy to assign image-related tasks to rover `v12` and rock analysis tasks to rover `v14`. This division optimizes resource utilization and simplifies the plan.
           
           For image acquisition, I devised a sequence for rover `v12`: moving to the appropriate image capture location, calibrating the onboard camera (`v10`), capturing the image, and then moving to the lander's communication location to send the image. Repeating this for each objective ensures that all image reception goals are met. I carefully used movement actions to get each image visible location and also have the correct communication visiblity location. To optimize, movement between capture sites is used where possible to avoid repetitive movements.
           
           To address the rock analysis goals, I implemented the following strategy: use rover `v14` to perform rock sampling. I identified rocks of each required type (stone and soil), then I defined sample, drop, and send actions. Rover `v14` will navigate to the location of the rock, sample the rock using `sample_rock` using store v16, and then use `drop_rock` to ensure the store stays free. Afterwards rover `v14` will send the rock's information. I made sure that rover `v14` could send the correct analysis information to meet the goal. 
           
           The most important strategy in this plan is to ensure that the initial configuration and store availability conditions are true at the end of the execution of the plan. I ensured this by having the rovers move to the communication location to send the data and then return to their initial configurations after the images are sent and analyses are sent. Also, I made sure that the store for each rover was set free after each sample.
           
           After the design stage, I validated the plan through meticulous step-by-step reasoning, ensuring that all preconditions for each action are met and that the effects contribute to satisfying the overall goal.
           
           Finally, I carefully merged and traced the plan actions and their results, in detail, to satisfy all the conditions, and also met all initial conditions. I'm confident that this approach will effectively achieve the `new-axiom@0()` goal within the specified PDDL domain.
           

