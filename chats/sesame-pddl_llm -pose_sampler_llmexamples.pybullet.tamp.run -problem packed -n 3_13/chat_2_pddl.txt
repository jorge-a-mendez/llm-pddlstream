User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           @sink: object
           @stove: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v14, #p0)
           Atom supported(v14, #p0, v16)
           Atom pose(v12, #p2)
           Atom supported(v12, #p2, v16)
           Atom grasp(v14, #g0)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g2)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g1)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, v15, #g0, #q2, #t2)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, #p0, #g0, #q0, #t0)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v12, v13, #g2, #q5, #t8)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v12, #p2, #g2, #q3, #t6)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, v9, #g1, #q1, #t1)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v8, #p1, #g1, #q4, #t7)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t13)
           Atom basemotion(#q2, #t13, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t9)
           Atom basemotion(#q4, #t9, #q5)
           Atom btraj(#t12)
           Atom basemotion(#q1, #t12, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q3, #o0, #q1)
           Atom btraj(#t10)
           Atom basemotion(#q3, #t10, #q2)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom btraj(#t11)
           Atom basemotion(#q5, #t11, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q4 #t12))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q0 #t13))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q2 #t10))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q5 #t9))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q3 #t11))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 #p2 #g2 #q3 #t6))
           ((place v4 v12 #p2 #g2 #q3 #t6))
           ((pick v4 v12 v13 #g2 #q5 #t8))
           ((place v4 v12 v13 #g2 #q5 #t8))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 #p0 #g0 #q0 #t0))
           ((place v4 v14 #p0 #g0 #q0 #t0))
           ((pick v4 v14 v15 #g0 #q2 #t2))
           ((place v4 v14 v15 #g0 #q2 #t2))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 #p1 #g1 #q4 #t7))
           ((place v4 v8 #p1 #g1 #q4 #t7))
           ((pick v4 v8 v9 #g1 #q1 #t1))
           ((place v4 v8 v9 #g1 #q1 #t1))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms, v4 and v6. Both arms are currently empty. There are three graspable objects: v8, v12, and v14. Each of these objects is currently at a specific pose (v9, v13, v15 respectively) and supported by v11, which implies they are "on" v11. The objects are also stackable with v10 and v16. The goal is to place all three objects (v8, v12, and v14) onto v16.
           
           To achieve this, the robot needs to perform the following steps for each object:
           1. Move its base to a configuration where it can pick up the object.
           2. Pick up the object.
           3. Move its base to a configuration where it can place the object on v16.
           4. Place the object on v16.
           
           Let's break this down for each object:
           
           **Object v8:**
           - Currently at `atpose(v8, v9)`.
           - We need to place it at `#p1` which is supported by `v16`.
           - `kin(v4, v8, v9, #g1, #q1, #t1)` allows picking v8 from v9 with arm v4 at base config #q1 using grasp #g1 and arm traj #t1.
           - `kin(v4, v8, #p1, #g1, #q4, #t7)` allows placing v8 at #p1 with arm v4 at base config #q4 using grasp #g1 and arm traj #t7.
           - We need to move from current base config `v3` to `#q1` to pick.
           - Then from `#q1` to `#q4` to place.
           
           **Object v12:**
           - Currently at `atpose(v12, v13)`.
           - We need to place it at `#p2` which is supported by `v16`.
           - `kin(v4, v12, v13, #g2, #q5, #t8)` allows picking v12 from v13 with arm v4 at base config #q5 using grasp #g2 and arm traj #t8.
           - `kin(v4, v12, #p2, #g2, #q3, #t6)` allows placing v12 at #p2 with arm v4 at base config #q3 using grasp #g2 and arm traj #t6.
           - We need to move from current base config `v3` to `#q5` to pick.
           - Then from `#q5` to `#q3` to place.
           
           **Object v14:**
           - Currently at `atpose(v14, v15)`.
           - We need to place it at `#p0` which is supported by `v16`.
           - `kin(v4, v14, v15, #g0, #q2, #t2)` allows picking v14 from v15 with arm v4 at base config #q2 using grasp #g0 and arm traj #t2.
           - `kin(v4, v14, #p0, #g0, #q0, #t0)` allows placing v14 at #p0 with arm v4 at base config #q0 using grasp #g0 and arm traj #t0.
           - We need to move from current base config `v3` to `#q2` to pick.
           - Then from `#q2` to `#q0` to place.
           
           Let's plan a sequence of actions. We will pick and place each object one by one.
           
           **Order:** v14, then v12, then v8
           
           1. **Move to pick v14:** From `v3` to `#q2`.
           2. **Pick v14:** Using `v4`, from `v15`.
           3. **Move to place v14:** From `#q2` to `#q0`.
           4. **Place v14:** To `#p0`.
           
           5. **Move to pick v12:** From `#q0` to `#q5`.
           6. **Pick v12:** Using `v4`, from `v13`.
           7. **Move to place v12:** From `#q5` to `#q3`.
           8. **Place v12:** To `#p2`.
           
           9. **Move to pick v8:** From `#q3` to `#q1`.
           10. **Pick v8:** Using `v4`, from `v9`.
           11. **Move to place v8:** From `#q1` to `#q4`.
           12. **Place v8:** To `#p1`.
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v14 v15 #g0 #q2 #t2)
           (move_base #q2 #q0 #t13)
           (place v4 v14 #p0 #g0 #q0 #t0)
           (move_base #q0 #q5 #o0)
           (pick v4 v12 v13 #g2 #q5 #t8)
           (move_base #q5 #q3 #t11)
           (place v4 v12 #p2 #g2 #q3 #t6)
           (move_base #q3 #q1 #o0)
           (pick v4 v8 v9 #g1 #q1 #t1)
           (move_base #q1 #q4 #t12)
           (place v4 v8 #p1 #g1 #q4 #t7)

