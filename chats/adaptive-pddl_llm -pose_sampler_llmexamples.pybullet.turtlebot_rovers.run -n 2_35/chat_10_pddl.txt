User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t1: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t30: object
           #t31: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y1: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom conf(v14, v15)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom supports(v10, v11)
           Atom rover(v14)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom rock(v8)
           Atom mode(v11)
           Atom objective(v18)
           Atom type(v1, v2)
           Atom type(v7, v6)
           Atom camera(v10)
           Atom store(v16)
           Atom type(v8, v6)
           Atom onboard(v10, v14)
           Atom atconf(v12, v13)
           Atom rock(v3)
           Atom rock(v5)
           Atom rock(v1)
           Atom rock(v7)
           Atom objective(v17)
           Atom onboard(v10, v12)
           Atom atconf(v14, v15)
           Atom type(v5, v6)
           Atom free(v14, v16)
           Atom rover(v12)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q8, #y4, v17)
           Atom imagerange(v12, #q8, v17)
           Atom conf(v12, #q8)
           Atom ray(#y4)
           Atom above(v14, #q1, v7)
           Atom conf(v14, #q1)
           Atom above(v12, #q6, v7)
           Atom conf(v12, #q6)
           Atom above(v14, #q10, v1)
           Atom conf(v14, #q10)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v5)
           Atom above(v14, #q11, v5)
           Atom conf(v14, #q11)
           Atom above(v12, #o5, v3)
           Atom above(v14, #q12, v3)
           Atom conf(v14, #q12)
           Atom imagevisible(v12, #q9, #y5, v18)
           Atom imagerange(v12, #q9, v18)
           Atom conf(v12, #q9)
           Atom ray(#y5)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom comvisible(v12, #q5, #y3, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q13, v8)
           Atom conf(v14, #q13)
           Atom above(v14, #q4, v4)
           Atom conf(v14, #q4)
           Atom above(v12, #q7, v4)
           Atom conf(v12, #q7)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #t11, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, v15, #t25, #q10)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, v13, #t12, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, v15, #t22, #q1)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, v13, #t17, #q8)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q5, #t9, #q7)
           Atom motion(v12, #q6, #t6, #q5)
           Atom motion(v12, #q5, #t21, #q8)
           Atom motion(v12, #q7, #t7, #q5)
           Atom motion(v12, #q5, #t13, v13)
           Atom motion(v12, #q5, #t8, #q6)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q8, #t15, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #t18, #q9)
           Atom motion(v12, #q5, #t24, #q9)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q8, #t23, #q9)
           Atom motion(v12, #q9, #t19, #q5)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q10, #t26, #q2)
           Atom motion(v14, #q2, #t5, #q1)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t28, #q10)
           Atom motion(v14, #q11, #t27, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #t29, #q11)
           Atom motion(v14, #q2, #t30, #q12)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q1, #t1, #q2)
           Atom motion(v14, #q2, #t4, v15)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q2, #t31, #q13)
           Atom motion(v14, #q4, #o2, #q11)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q11, #o2, #q4)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q2, #t20, #q4)
           Atom motion(v14, #q4, #t16, #q2)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, v15, #t14, #q4)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q7, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q6 v7 v16))
           ((sample_rock v12 #q7 v4 v16))
           ((sample_rock v14 #q1 v7 v16))
           ((sample_rock v14 #q10 v1 v16))
           ((sample_rock v14 #q11 v5 v16))
           ((sample_rock v14 #q12 v3 v16))
           ((sample_rock v14 #q13 v8 v16))
           ((sample_rock v14 #q4 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t13 v13))
           ((move v12 #q5 #t21 #q8))
           ((move v12 #q5 #t24 #q9))
           ((move v12 #q5 #t8 #q6))
           ((move v12 #q5 #t9 #q7))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t6 #q5))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t7 #q5))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t15 #q5))
           ((move v12 #q8 #t23 #q9))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t19 #q5))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t11 #q6))
           ((move v12 v13 #t12 #q7))
           ((move v12 v13 #t17 #q8))
           ((move v12 v13 #t18 #q9))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q2))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t26 #q2))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q4))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t27 #q2))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #t20 #q4))
           ((move v14 #q2 #t28 #q10))
           ((move v14 #q2 #t29 #q11))
           ((move v14 #q2 #t30 #q12))
           ((move v14 #q2 #t31 #q13))
           ((move v14 #q2 #t4 v15))
           ((move v14 #q2 #t5 #q1))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t16 #q2))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q4))
           ((move v14 v15 #t22 #q1))
           ((move v14 v15 #t25 #q10))
           ((calibrate v12 #q8 #y4 v17 v10))
           ((calibrate v12 #q9 #y5 v18 v10))
           ((take_image v12 #q8 #y4 v17 v10 v11))
           ((take_image v12 #q9 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y3 v9 v1))
           ((send_analysis v12 #q5 #y3 v9 v3))
           ((send_analysis v12 #q5 #y3 v9 v5))
           ((send_analysis v12 #q5 #y3 v9 v8))
           ((send_analysis v12 #q5 #y3 v9 v7))
           ((send_analysis v12 #q5 #y3 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_image v12 #q5 #y3 v9 v17 v11))
           ((send_image v12 #q5 #y3 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each with a camera (v10) and a storage unit (v16). There are several rocks (v1, v3, v4, v5, v7, v8) of different types (v2, v6), and two objectives (v17, v18). The lander (v9) is the communication target. The goal is to satisfy the `new-axiom@0()` predicate, which states that both rovers (v12 and v14) must be at some configuration, their stores (v16) must be free, two images of two different objectives (v17 and v18) must be received (likely from the lander), and two rocks of different types (v2 and v6) must be analyzed and the analysis received.
           
           Let's break down the `new-axiom@0()` goal:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: These are already true in the initial state.
           2. `free(v12, v16)` and `free(v14, v16)`: These are also already true in the initial state.
           3. `receivedimage(v17, v11)` and `receivedimage(v18, v11)`: This means rover v12 needs to take images of objective v17 and v18 (using camera v10 and mode v11) and then send them to the lander v9.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: A rock of type v2 needs to be sampled by either rover and its analysis sent to the lander. Rocks v1, v3, and v4 are of type v2.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: A rock of type v6 needs to be sampled by either rover and its analysis sent to the lander. Rocks v5, v7, and v8 are of type v6.
           
           To achieve `receivedimage(v17, v11)` and `receivedimage(v18, v11)`:
           - Rover v12 can take an image of v17 at configuration #q8 using camera v10 and mode v11. First, it needs to be at #q8, then calibrate the camera, then take the image.
           - Rover v12 can take an image of v18 at configuration #q9 using camera v10 and mode v11. First, it needs to be at #q9, then calibrate the camera, then take the image.
           - After taking both images, rover v12 needs to move to a configuration where it can communicate with the lander v9 (e.g., #q5) and send both images.
           
           To achieve `receivedanalysis(?stone)` for a rock of type v2:
           - Rover v14 is at v15, and `above(v14, #q4, v4)` and `rock(v4)` and `type(v4, v2)`. Rover v14 can move to #q4, sample v4, and then move to a configuration where it can communicate with the lander v9 (e.g., #q2) and send the analysis.
           
           To achieve `receivedanalysis(?soil)` for a rock of type v6:
           - Rover v14 is at v15, and `above(v14, #q1, v7)` and `rock(v7)` and `type(v7, v6)`. Rover v14 can move to #q1, sample v7, and then move to a configuration where it can communicate with the lander v9 (e.g., #q2) and send the analysis.
           
           Combining these, a possible plan involves:
           1. Rover v12 handles imaging and sending.
           2. Rover v14 handles sampling and sending analysis.
           
           Let's outline the steps:
           
           **Rover v12's tasks (imaging):**
           - Move to #q8 to image v17.
           - Calibrate camera v10.
           - Take image of v17.
           - Move to #q9 to image v18.
           - Calibrate camera v10 (again, as it's uncalibrated after taking image).
           - Take image of v18.
           - Move to #q5 to communicate.
           - Send image of v17.
           - Send image of v18.
           
           **Rover v14's tasks (sampling):**
           - Move to #q4 to sample v4 (type v2).
           - Sample rock v4.
           - Move to #q1 to sample v7 (type v6).
           - Sample rock v7.
           - Move to #q2 to communicate.
           - Send analysis of v4.
           - Send analysis of v7.
           
           It's important that `calibrated` is reset after `take_image`, so it needs to be recalibrated for the second image.
           
           --Plan--:
           (move v12 v13 #t17 #q8)
           (calibrate v12 #q8 #y4 v17 v10)
           (take_image v12 #q8 #y4 v17 v10 v11)
           (move v12 #q8 #t23 #q9)
           (calibrate v12 #q9 #y5 v18 v10)
           (take_image v12 #q9 #y5 v18 v10 v11)
           (move v12 #q9 #t19 #q5)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (move v14 v15 #t14 #q4)
           (sample_rock v14 #q4 v4 v16)
           (move v14 #q4 #o2 #q1)
           (sample_rock v14 #q1 v7 v16)
           (move v14 #q1 #t1 #q2)
           (send_analysis v14 #q2 #y1 v9 v4)
           (send_analysis v14 #q2 #y1 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. Let's re-evaluate the components of the goal and the state after the previous plan. The `new-axiom@0()` axiom requires several conditions to be met simultaneously:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: My previous plan left `v12` at `#q5` and `v14` at `#q2`. We need to ensure they return to their initial configurations `v13` and `v15` respectively, if these are strict requirements (though typically `atconf` simply means being at *some* configuration). Looking at the axiom structure, the variables `v13` and `v15` are not universally quantified, meaning the rovers must specifically be at these configurations. So, the rovers need to return to their initial positions.
           2. `free(v12, v16)` and `free(v14, v16)`: My previous plan involved sampling rocks with v14, which would make its store `full(v14, v16)`. To satisfy `free(v14, v16)`, `drop_rock` action is required after sampling and before the axiom is evaluated.
           3. `receivedimage(v17, v11)` and `receivedimage(v18, v11)`: This part of the goal was correctly addressed by taking images with v12 and sending them.
           4. `receivedanalysis(?stone)` for `type(?stone, v2)` and `receivedanalysis(?soil)` for `type(?soil, v6)`: This part was addressed by v14 sampling v4 (type v2) and v7 (type v6) and sending their analyses.
           
           The key issues from the previous plan are:
           - Rover v14's store `v16` becomes `full` after sampling, but needs to be `free` for the `new-axiom@0()` goal. It must drop the sampled rocks.
           - Both rovers must return to their *initial* configurations `v13` and `v15` respectively for the `new-axiom@0()` goal.
           
           Let's revise the plan to address these:
           
           **Rover v12's tasks (imaging and return):**
           - Move to #q8 to image v17.
           - Calibrate camera v10.
           - Take image of v17.
           - Move to #q9 to image v18.
           - Calibrate camera v10.
           - Take image of v18.
           - Move to #q5 to communicate.
           - Send image of v17.
           - Send image of v18.
           - Move back to v13.
           
           **Rover v14's tasks (sampling, sending, dropping, and return):**
           - Move to #q4 to sample v4 (type v2).
           - Sample rock v4.
           - Move to #q1 to sample v7 (type v6).
           - Sample rock v7 (This will require dropping the first rock, or having a second storage. Based on the domain, `store` is singular and `free` or `full` refers to a specific `store` on a `rover`, so `full(v,s)` will prevent a second sample. We need to drop the first rock before sampling the second). This implies a revised sequence: sample, send, drop for each rock.
           
           Revised Rover v14 Plan:
           - Move to #q4 to sample v4 (type v2).
           - Sample rock v4.
           - Move to #q2 to communicate.
           - Send analysis of v4.
           - Drop rock v4 (making v16 free again).
           - Move to #q1 to sample v7 (type v6).
           - Sample rock v7.
           - Move to #q2 to communicate (if not already there, but we just moved from #q2).
           - Send analysis of v7.
           - Drop rock v7.
           - Move back to v15.
           
           Let's construct the plan.
           
           --Plan--:
           (move v12 v13 #t17 #q8)
           (calibrate v12 #q8 #y4 v17 v10)
           (take_image v12 #q8 #y4 v17 v10 v11)
           (move v12 #q8 #t23 #q9)
           (calibrate v12 #q9 #y5 v18 v10)
           (take_image v12 #q9 #y5 v18 v10 v11)
           (move v12 #q9 #t19 #q5)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (move v12 #q5 #t13 v13)
           (move v14 v15 #t14 #q4)
           (sample_rock v14 #q4 v4 v16)
           (move v14 #q4 #t16 #q2)
           (send_analysis v14 #q2 #y1 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q2 #t5 #q1)
           (sample_rock v14 #q1 v7 v16)
           (move v14 #q1 #t1 #q2)
           (send_analysis v14 #q2 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q2 #t4 v15)

