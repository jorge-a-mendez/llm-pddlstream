User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v8)
           Atom mode(v11)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom onboard(v10, v14)
           Atom type(v8, v6)
           Atom rock(v3)
           Atom objective(v17)
           Atom objective(v19)
           Atom rock(v1)
           Atom conf(v12, v13)
           Atom free(v12, v16)
           Atom rock(v5)
           Atom rover(v12)
           Atom type(v1, v2)
           Atom onboard(v10, v12)
           Atom free(v14, v16)
           Atom type(v3, v2)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom rover(v14)
           Atom conf(v14, v15)
           Atom camera(v10)
           Atom atconf(v12, v13)
           Atom lander(v9)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom type(v5, v6)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q2, #y1, v18)
           Atom imagerange(v14, #q2, v18)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q1, v1)
           Atom conf(v14, #q1)
           Atom imagevisible(v14, #q0, #y0, v19)
           Atom imagerange(v14, #q0, v19)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q8, v8)
           Atom conf(v14, #q8)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q5, #y3, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v12, #q11, #y7, v19)
           Atom imagerange(v12, #q11, v19)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q7, #y4, v18)
           Atom imagerange(v12, #q7, v18)
           Atom conf(v12, #q7)
           Atom ray(#y4)
           Atom above(v12, #q6, v4)
           Atom conf(v12, #q6)
           Atom comvisible(v12, #q9, #y5, v9)
           Atom comrange(v12, #q9, v9)
           Atom conf(v12, #q9)
           Atom ray(#y5)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #q10, #y6, v17)
           Atom imagerange(v12, #q10, v17)
           Atom conf(v12, #q10)
           Atom ray(#y6)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v5)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #t2, v15)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v14, #q3, #t6, #q4)
           Atom motion(v14, #q4, #t4, #q3)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v14, v15, #t1, #q2)
           Atom motion(v14, #q2, #t8, #q3)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q1, #t3, #q3)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q3, #t5, #q1)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q8, #t11, #q3)
           Atom motion(v14, v15, #t17, #q8)
           Atom motion(v14, #q3, #t18, #q8)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q10, #t16, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #t12, v13)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q5, #t9, #q3)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, v15, #t21, #q5)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, v15, #t0, #q0)
           Atom motion(v14, #q0, #t7, #q3)
           Atom motion(v14, #q3, #t22, #q0)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q6, #t14, #q10)
           Atom motion(v12, #q6, #t19, #q9)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, v13, #t10, #q6)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q9, #t23, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #t15, #q9)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, v13, #t20, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q6, #t13, #q7)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q9)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q6 v4 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q1 v1 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((sample_rock v14 #q8 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t16 #q9))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t13 #q7))
           ((move v12 #q6 #t14 #q10))
           ((move v12 #q6 #t19 #q9))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t15 #q9))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #t12 v13))
           ((move v12 #q9 #t23 #q6))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q6))
           ((move v12 v13 #t20 #q7))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t7 #q3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t3 #q3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t8 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #t18 #q8))
           ((move v14 #q3 #t2 v15))
           ((move v14 #q3 #t22 #q0))
           ((move v14 #q3 #t5 #q1))
           ((move v14 #q3 #t6 #q4))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t4 #q3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t9 #q3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t11 #q3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((move v14 v15 #t1 #q2))
           ((move v14 v15 #t17 #q8))
           ((move v14 v15 #t21 #q5))
           ((calibrate v12 #q10 #y6 v17 v10))
           ((calibrate v12 #q11 #y7 v19 v10))
           ((calibrate v12 #q7 #y4 v18 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q2 #y1 v18 v10))
           ((calibrate v14 #q5 #y3 v17 v10))
           ((take_image v12 #q10 #y6 v17 v10 v11))
           ((take_image v12 #q11 #y7 v19 v10 v11))
           ((take_image v12 #q7 #y4 v18 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q2 #y1 v18 v10 v11))
           ((take_image v14 #q5 #y3 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q9 #y5 v9 v1))
           ((send_analysis v12 #q9 #y5 v9 v3))
           ((send_analysis v12 #q9 #y5 v9 v5))
           ((send_analysis v12 #q9 #y5 v9 v7))
           ((send_analysis v12 #q9 #y5 v9 v8))
           ((send_analysis v12 #q9 #y5 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_image v12 #q9 #y5 v9 v17 v11))
           ((send_image v12 #q9 #y5 v9 v19 v11))
           ((send_image v12 #q9 #y5 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Detailed Plan for Achieving the New Axiom**
           
           Okay, so the goal is `Atom new-axiom@0()`, which I can see has a specific set of conditions I need to satisfy.  It looks like I need to ensure rovers are in their initial configurations, free stores, and have successfully analyzed rocks and taken/sent some images. I've broken down this plan into two main tasks: imaging and rock analysis/restoration of initial states, using both rovers and the communication mode.
           
           1.  **Image Collection:** I'll use rover `v14` for imaging because it starts at a configuration `#conf(v14, v15)` near some imaging spots. I will have it move to capture and communicate its photos while the other rover collects rock samples.
               *   **Image v17:** `v14` will move to `#q5`, calibrate the camera, take the image using the right mode, and then move to its `comms` spot.
               *   **Image v18:** After the first imaging, `v14` will then move to `#q2`, calibrate, take the image and then move to its `comms` spot.
               *   **Image v19:** Finally, `v14` will move to `#q0`, calibrate, take the image, move to its `comms` spot and send each image to the lander.
           
           2.  **Rock Analysis and State Restoration:**
               *   I'll use `v12` to handle rock sampling because I have a stone `v4` and a soil `v8`, both requiring analysis and the right modes of `v11`. I'll also restore the necessary state configurations with this second rover.
               *   **Sample Rock v4:** Rover `v12` will first move to a spot `#q6`, sample rock `v4` and then to its `comms` configuration.
               *   **Send Sample v4:** Then `v12` moves to `#q9`, sends the analysis, then *drops* the rock to free its store.
               *   **Sample Rock v8:** Now, `v12` moves to `#o5`, samples the soil at the `o5` config.
               *   **Send Sample v8:** It then moves back to `#q9`, and sends the soil sample and analysis to the lander. Then it drops this sample too.
               *   **Clean Up:** To finish the job, the rover must *return to its initial state*, so I've added a few clean-up actions. It's important to go back to *initial state conditions* to satisfy the new axiom goal. I've included `move v12` from its last config to its initial configuration *and* `move` to make sure both rovers are in their right places. I must do this last.
               *   The `Drop rock` after the samples must occur, so that I maintain `free(v12, v16)` as one of the required axiom conditions.
           
           This plan ensures I achieve all the necessary conditions for `new-axiom@0()` while accounting for the constraints and preconditions of each action. I'm confident this will work. Let me run this and get to it.
           
)

Model:     **A Detailed Plan for Achieving the New Axiom**
           
           Okay, so the goal is `Atom new-axiom@0()`, which I can see has a specific set of conditions I need to satisfy.  It looks like I need to ensure rovers are in their initial configurations, free stores, and have successfully analyzed rocks and taken/sent some images. I've broken down this plan into two main tasks: imaging and rock analysis/restoration of initial states, using both rovers and the communication mode.
           
           1.  **Image Collection:** I'll use rover `v14` for imaging because it starts at a configuration `#conf(v14, v15)` near some imaging spots. I will have it move to capture and communicate its photos while the other rover collects rock samples.
               *   **Image v17:** `v14` will move to `#q5`, calibrate the camera, take the image using the right mode, and then move to its `comms` spot.
               *   **Image v18:** After the first imaging, `v14` will then move to `#q2`, calibrate, take the image and then move to its `comms` spot.
               *   **Image v19:** Finally, `v14` will move to `#q0`, calibrate, take the image, move to its `comms` spot and send each image to the lander.
           
           2.  **Rock Analysis and State Restoration:**
               *   I'll use `v12` to handle rock sampling because I have a stone `v4` and a soil `v8`, both requiring analysis and the right modes of `v11`. I'll also restore the necessary state configurations with this second rover.
               *   **Sample Rock v4:** Rover `v12` will first move to a spot `#q6`, sample rock `v4` and then to its `comms` configuration.
               *   **Send Sample v4:** Then `v12` moves to `#q9`, sends the analysis, then *drops* the rock to free its store.
               *   **Sample Rock v8:** Now, `v12` moves to `#o5`, samples the soil at the `o5` config.
               *   **Send Sample v8:** It then moves back to `#q9`, and sends the soil sample and analysis to the lander. Then it drops this sample too.
               *   **Clean Up:** To finish the job, the rover must *return to its initial state*, so I've added a few clean-up actions. It's important to go back to *initial state conditions* to satisfy the new axiom goal. I've included `move v12` from its last config to its initial configuration *and* `move` to make sure both rovers are in their right places. I must do this last.
               *   The `Drop rock` after the samples must occur, so that I maintain `free(v12, v16)` as one of the required axiom conditions.
           
           This plan ensures I achieve all the necessary conditions for `new-axiom@0()` while accounting for the constraints and preconditions of each action. I'm confident this will work. Let me run this and get to it.
           

