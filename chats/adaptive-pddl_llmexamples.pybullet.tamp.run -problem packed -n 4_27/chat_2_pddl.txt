User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom arm(v4)
           Atom ataconf(v6, v7)
           Atom stackable(v12, v18)
           Atom handempty(v4)
           Atom graspable(v8)
           Atom atpose(v8, v9)
           Atom pose(v12, v13)
           Atom stackable(v14, v10)
           Atom stackable(v16, v18)
           Atom ataconf(v4, v5)
           Atom supported(v14, v15, v11)
           Atom canmove()
           Atom graspable(v12)
           Atom stackable(v8, v10)
           Atom stackable(v8, v18)
           Atom atpose(v12, v13)
           Atom supported(v16, v17, v11)
           Atom pose(v14, v15)
           Atom pose(v16, v17)
           Atom arm(v6)
           Atom pose(v8, v9)
           Atom aconf(v4, v5)
           Atom controllable(v4)
           Atom stackable(v12, v10)
           Atom atpose(v14, v15)
           Atom supported(v8, v9, v11)
           Atom stackable(v14, v18)
           Atom atpose(v16, v17)
           Atom bconf(v3)
           Atom graspable(v16)
           Atom aconf(v6, v7)
           Atom stackable(v16, v10)
           Atom graspable(v14)
           Atom handempty(v6)
           Atom supported(v12, v13, v11)
           Atom atbconf(v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #o1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v18)
           Atom grasp(v14, #o1)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v16, #o1)
           Atom supported(v16, #o2, v18)
           Atom supported(v12, #o2, v18)
           Atom supported(v14, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v16 #o2 #o1 #o3 #o4))
           ((place v4 v16 #o2 #o1 #o3 #o4))
           ((pick v4 v16 v17 #o1 #o3 #o4))
           ((place v4 v16 v17 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms, `v4` and `v6`, at specific arm configurations (`v5` and `v7` respectively). The robot is initially at base configuration `v3` and `canmove()`. There are four graspable objects: `v8`, `v12`, `v14`, and `v16`. These objects are currently at poses `v9`, `v13`, `v15`, and `v17` respectively, and are all supported by `v11` (implicitly, as they are on a surface associated with `v11`). Additionally, there are alternative poses (`#o2`) and grasps (`#o1`) for these objects. The objects are stackable on `v10` and `v18`.
           
           The goal is to have all four objects (`v8`, `v12`, `v14`, `v16`) on `v18`. Currently, `v8`, `v12`, `v14`, and `v16` are at specific poses, and are supported by `v11`. To achieve the goal, the robot needs to pick up each object and place it onto a pose supported by `v18`. The available `place` actions show that the robot can place objects at a pose `#o2` supported by `v18`. Since all objects are currently on `v11`, the robot needs to pick them up from their current poses and place them onto `v18`. The robot arm `v4` is available and handempty. The robot's base can move between `v3` and `#o3` but since all `kin` actions available use base configuration `#o3` for picking and placing, the robot will need to move to `#o3` first.
           
           Here's the plan:
           1. Move the robot's base to `o3`.
           2. Pick `v8` from `v9`.
           3. Place `v8` onto `v18` at pose `#o2`.
           4. Pick `v12` from `v13`.
           5. Place `v12` onto `v18` at pose `#o2`.
           6. Pick `v14` from `v15`.
           7. Place `v14` onto `v18` at pose `#o2`.
           8. Pick `v16` from `v17`.
           9. Place `v16` onto `v18` at pose `#o2`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v16 v17 #o1 #o3 #o4)
           (place v4 v16 #o2 #o1 #o3 #o4)

