User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t5: object
           #t50: object
           #t51: object
           #t52: object
           #t53: object
           #t54: object
           #t55: object
           #t56: object
           #t57: object
           #t58: object
           #t59: object
           #t6: object
           #t60: object
           #t61: object
           #t62: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v35: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v5: object
           v54: object
           v55: object
           v56: object
           v57: object
           v58: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v13 is a pose with position (-0.089, -0.409, 0.781) and quaternion (0.0, 0.0, 0.832, 0.555).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.055, 0.055), (0.125, 0.125)).
           Object v15 is a pose with position (-0.2, -0.236, 0.781) and quaternion (0.0, 0.0, 0.817, 0.577).
           Object p5 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p6 is a pose with position (-0.089, 0.09, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.09, 0.09, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (-0.087, -0.087, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (0.087, -0.087, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.125, -0.125), (-0.055, -0.055)).
           Object v17 is a pose with position (-0.058, 0.397, 0.781) and quaternion (0.0, 0.0, -0.262, 0.965).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.055, -0.125), (0.125, -0.055)).
           Object v9 is a pose with position (0.224, -0.237, 0.781) and quaternion (0.0, 0.0, 0.999, 0.052).
           Object v19 is a pose with position (0.005, 0.515, 0.781) and quaternion (0.0, 0.0, 0.965, -0.262).
           Object p10 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (-0.09, 0.09, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (0.09, 0.09, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (-0.09, -0.09, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (0.09, -0.09, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.125, 0.055), (-0.055, 0.125)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v14, v15, v11)
           Atom kin(v35, v43, p14, v58, v38, v39)
           Atom stackable(v18, v10)
           Atom pose(v14, v15)
           Atom supported(v16, p8, v20)
           Atom supported(v8, p5, v20)
           Atom pose(v8, p5)
           Atom pose(v16, p13)
           Atom supported(v12, p6, v20)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom pose(v18, v19)
           Atom atpose(v12, v13)
           Atom canmove()
           Atom atbconf(v3)
           Atom stackable(v12, v20)
           Atom pose(v18, p14)
           Atom stackable(v8, v10)
           Atom graspable(v12)
           Atom kin(v35, v41, p7, v37, v38, v39)
           Atom pose(v8, v9)
           Atom graspable(v18)
           Atom supported(v8, p10, v20)
           Atom stackable(v16, v20)
           Atom stackable(v12, v10)
           Atom pose(v16, p8)
           Atom supported(v14, p12, v20)
           Atom graspable(v8)
           Atom aconf(v6, v7)
           Atom pose(v8, p10)
           Atom atpose(v16, v17)
           Atom kin(v35, v36, p5, v37, v38, v39)
           Atom kin(v35, v40, p6, v37, v38, v39)
           Atom arm(v6)
           Atom supported(v14, p7, v20)
           Atom controllable(v4)
           Atom pose(v12, v13)
           Atom stackable(v8, v20)
           Atom ataconf(v4, v5)
           Atom kin(v35, v36, p10, v54, v38, v39)
           Atom ataconf(v6, v7)
           Atom supported(v12, p11, v20)
           Atom pose(v14, p7)
           Atom supported(v8, v9, v11)
           Atom stackable(v14, v10)
           Atom kin(v35, v42, p13, v57, v38, v39)
           Atom bconf(v3)
           Atom pose(v16, v17)
           Atom graspable(v16)
           Atom pose(v18, p9)
           Atom handempty(v4)
           Atom handempty(v6)
           Atom stackable(v16, v10)
           Atom stackable(v18, v20)
           Atom kin(v35, v42, p8, v37, v38, v39)
           Atom supported(v18, p14, v20)
           Atom kin(v35, v40, p11, v55, v38, v39)
           Atom atpose(v18, v19)
           Atom atpose(v14, v15)
           Atom graspable(v14)
           Atom supported(v12, v13, v11)
           Atom supported(v16, v17, v11)
           Atom pose(v12, p11)
           Atom supported(v18, v19, v11)
           Atom stackable(v14, v20)
           Atom kin(v35, v43, p9, v37, v38, v39)
           Atom kin(v35, v41, p12, v56, v38, v39)
           Atom atpose(v8, v9)
           Atom pose(v14, p12)
           Atom supported(v16, p13, v20)
           Atom supported(v18, p9, v20)
           Atom pose(v12, p6)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v20)
           Atom grasp(v14, #g0)
           Atom grasp(v8, #g2)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v16, #o2, v20)
           Atom grasp(v16, #g3)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v18, #g4)
           Atom supported(v14, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom grasp(v12, #g1)
           Atom supported(v8, #o2, v10)
           Atom supported(v18, #o2, v10)
           Atom supported(v12, #o2, v20)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, p7, #g0, #q0, #t0)
           Atom bconf(#q11)
           Atom atraj(#t18)
           Atom kin(v4, v14, p12, #g0, #q11, #t18)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v14, v15, #g0, #q5, #t5)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v8, p5, #g2, #q4, #t4)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v8, v9, #g2, #q2, #t2)
           Atom bconf(#q10)
           Atom atraj(#t17)
           Atom kin(v4, v8, p10, #g2, #q10, #t17)
           Atom bconf(#q7)
           Atom atraj(#t14)
           Atom kin(v4, v12, v13, #g1, #q7, #t14)
           Atom bconf(#q13)
           Atom atraj(#t28)
           Atom kin(v4, v12, p11, #g1, #q13, #t28)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, p6, #g1, #q1, #t1)
           Atom bconf(#q12)
           Atom atraj(#t21)
           Atom kin(v4, v18, p14, #g4, #q12, #t21)
           Atom bconf(#q9)
           Atom atraj(#t16)
           Atom kin(v4, v18, v19, #g4, #q9, #t16)
           Atom bconf(#q8)
           Atom atraj(#t15)
           Atom kin(v4, v18, p9, #g4, #q8, #t15)
           Atom bconf(#q6)
           Atom atraj(#t6)
           Atom kin(v4, v16, p8, #g3, #q6, #t6)
           Atom bconf(#q14)
           Atom atraj(#t53)
           Atom kin(v4, v16, p13, #g3, #q14, #t53)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v16, v17, #g3, #q3, #t3)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q3, #o0, #q4)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q3)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q14, #o0, #q5)
           Atom basemotion(#q5, #o0, #q14)
           Atom basemotion(#q14, #o0, v3)
           Atom basemotion(#q4, #o0, #q14)
           Atom basemotion(#q14, #o0, #q14)
           Atom basemotion(v3, #o0, #q14)
           Atom basemotion(#q14, #o0, #q4)
           Atom basemotion(#q3, #o0, #q14)
           Atom basemotion(#q14, #o0, #q3)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom btraj(#t13)
           Atom basemotion(v3, #t13, #q6)
           Atom basemotion(#q14, #o0, #q6)
           Atom basemotion(#q6, #o0, #q14)
           Atom basemotion(#q6, #o0, #q5)
           Atom btraj(#t57)
           Atom basemotion(#q3, #t57, #q6)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q8, #o0, #q14)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q14, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q3, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q11, #o0, #q6)
           Atom basemotion(#q14, #o0, #q11)
           Atom basemotion(#q11, #o0, #q14)
           Atom basemotion(#q8, #o0, #q11)
           Atom btraj(#t26)
           Atom basemotion(#q3, #t26, #q11)
           Atom basemotion(#q6, #o0, #q11)
           Atom btraj(#t23)
           Atom basemotion(#q11, #t23, #q5)
           Atom basemotion(#q11, #o0, #q8)
           Atom btraj(#t20)
           Atom basemotion(#q11, #t20, #q3)
           Atom btraj(#t46)
           Atom basemotion(#q5, #t46, #q11)
           Atom basemotion(#q4, #o0, #q11)
           Atom basemotion(#q11, #o0, #q4)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q9, #o0, #q14)
           Atom btraj(#t42)
           Atom basemotion(#q9, #t42, #q11)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q14, #o0, #q9)
           Atom btraj(#t55)
           Atom basemotion(#q6, #t55, #q9)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q4, #o0, #q9)
           Atom basemotion(#q5, #o0, #q9)
           Atom btraj(#t30)
           Atom basemotion(#q11, #t30, #q9)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(v3, #o0, #q9)
           Atom btraj(#t62)
           Atom basemotion(#q9, #t62, #q8)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q14, #o0, #q0)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q0, #o0, #q14)
           Atom basemotion(#q0, #o0, #q4)
           Atom btraj(#t58)
           Atom basemotion(#q5, #t58, #q0)
           Atom basemotion(#q6, #o0, #q0)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom btraj(#t60)
           Atom basemotion(#q0, #t60, #q3)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q0, #o0, #q11)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q11, #o0, #q0)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q9, #o0, #q1)
           Atom basemotion(#q14, #o0, #q1)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q14)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom btraj(#t56)
           Atom basemotion(#q1, #t56, #q5)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q1)
           Atom basemotion(#q1, #o0, #q11)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q11, #o0, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom btraj(#t47)
           Atom basemotion(#q5, #t47, #q12)
           Atom basemotion(#q4, #o0, #q12)
           Atom basemotion(#q12, #o0, v3)
           Atom basemotion(#q0, #o0, #q12)
           Atom basemotion(#q6, #o0, #q12)
           Atom basemotion(#q12, #o0, #q0)
           Atom basemotion(#q11, #o0, #q12)
           Atom basemotion(#q12, #o0, #q1)
           Atom btraj(#t31)
           Atom basemotion(#q12, #t31, #q9)
           Atom basemotion(#q12, #o0, #q3)
           Atom basemotion(#q12, #o0, #q11)
           Atom basemotion(#q12, #o0, #q12)
           Atom basemotion(#q12, #o0, #q8)
           Atom basemotion(#q14, #o0, #q12)
           Atom basemotion(v3, #o0, #q12)
           Atom basemotion(#q12, #o0, #q14)
           Atom btraj(#t27)
           Atom basemotion(#q3, #t27, #q12)
           Atom basemotion(#q8, #o0, #q12)
           Atom btraj(#t43)
           Atom basemotion(#q9, #t43, #q12)
           Atom btraj(#t24)
           Atom basemotion(#q12, #t24, #q5)
           Atom basemotion(#q12, #o0, #q4)
           Atom basemotion(#q1, #o0, #q12)
           Atom basemotion(#q12, #o0, #q6)
           Atom basemotion(#q0, #o0, #q13)
           Atom basemotion(#q13, #o0, #q4)
           Atom basemotion(#q13, #o0, #q6)
           Atom basemotion(#q13, #o0, #q3)
           Atom basemotion(#q4, #o0, #q13)
           Atom basemotion(#q13, #o0, #q12)
           Atom basemotion(#q13, #o0, #q0)
           Atom btraj(#t44)
           Atom basemotion(#q9, #t44, #q13)
           Atom basemotion(#q12, #o0, #q13)
           Atom basemotion(#q6, #o0, #q13)
           Atom basemotion(#q14, #o0, #q13)
           Atom btraj(#t32)
           Atom basemotion(#q13, #t32, #q9)
           Atom basemotion(#q13, #o0, #q14)
           Atom basemotion(#q1, #o0, #q13)
           Atom basemotion(#q13, #o0, #q13)
           Atom btraj(#t48)
           Atom basemotion(#q5, #t48, #q13)
           Atom basemotion(#q13, #o0, #q5)
           Atom basemotion(#q8, #o0, #q13)
           Atom basemotion(#q3, #o0, #q13)
           Atom basemotion(v3, #o0, #q13)
           Atom basemotion(#q13, #o0, #q1)
           Atom basemotion(#q13, #o0, v3)
           Atom basemotion(#q13, #o0, #q11)
           Atom basemotion(#q13, #o0, #q8)
           Atom basemotion(#q11, #o0, #q13)
           Atom basemotion(#q10, #o0, #q6)
           Atom basemotion(#q13, #o0, #q10)
           Atom basemotion(#q10, #o0, #q12)
           Atom btraj(#t41)
           Atom basemotion(#q9, #t41, #q10)
           Atom basemotion(#q14, #o0, #q10)
           Atom basemotion(#q10, #o0, #q13)
           Atom btraj(#t29)
           Atom basemotion(#q10, #t29, #q9)
           Atom basemotion(#q10, #o0, #q14)
           Atom basemotion(#q10, #o0, #q0)
           Atom basemotion(#q0, #o0, #q10)
           Atom basemotion(#q1, #o0, #q10)
           Atom btraj(#t22)
           Atom basemotion(#q10, #t22, #q5)
           Atom basemotion(#q6, #o0, #q10)
           Atom basemotion(#q12, #o0, #q10)
           Atom basemotion(#q8, #o0, #q10)
           Atom basemotion(#q10, #o0, #q1)
           Atom btraj(#t25)
           Atom basemotion(#q3, #t25, #q10)
           Atom basemotion(#q10, #o0, #q8)
           Atom btraj(#t19)
           Atom basemotion(#q10, #t19, #q3)
           Atom basemotion(#q4, #o0, #q10)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(v3, #o0, #q10)
           Atom basemotion(#q10, #o0, #q4)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q11, #o0, #q10)
           Atom btraj(#t45)
           Atom basemotion(#q5, #t45, #q10)
           Atom basemotion(#q14, #o0, #q7)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q1, #o0, #q7)
           Atom btraj(#t61)
           Atom basemotion(#q4, #t61, #q7)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q7, #o0, #q14)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q8, #o0, #q7)
           Atom btraj(#t52)
           Atom basemotion(#q7, #t52, #q13)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q8)
           Atom btraj(#t54)
           Atom basemotion(#q7, #t54, #q1)
           Atom basemotion(#q7, #o0, #q3)
           Atom btraj(#t39)
           Atom basemotion(#q12, #t39, #q7)
           Atom btraj(#t37)
           Atom basemotion(#q10, #t37, #q7)
           Atom btraj(#t40)
           Atom basemotion(#q13, #t40, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q7, #o0, #q5)
           Atom btraj(#t49)
           Atom basemotion(#q7, #t49, #q10)
           Atom basemotion(#q7, #o0, #q4)
           Atom btraj(#t51)
           Atom basemotion(#q7, #t51, #q12)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom btraj(#t38)
           Atom basemotion(#q11, #t38, #q7)
           Atom btraj(#t50)
           Atom basemotion(#q7, #t50, #q11)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q12, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q14, #o0, #q2)
           Atom basemotion(#q13, #o0, #q2)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q2, #o0, #q14)
           Atom btraj(#t36)
           Atom basemotion(#q2, #t36, #q13)
           Atom btraj(#t35)
           Atom basemotion(#q2, #t35, #q12)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q4, #o0, #q2)
           Atom btraj(#t59)
           Atom basemotion(#q2, #t59, #q4)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t34)
           Atom basemotion(#q2, #t34, #q11)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q2)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q10, #o0, #q2)
           Atom btraj(#t33)
           Atom basemotion(#q2, #t33, #q10)
           Atom basemotion(#q11, #o0, #q2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v16, #o2, #g3, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v18, #o2, #g4, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#q13, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#q14, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#o3, #o0, #q13)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q12, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q12)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, #q14)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q14 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q10 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q12 #o0))
           ((move_base #q0 #q13 #o0))
           ((move_base #q0 #q14 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q3 #t60))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q10 #o0))
           ((move_base #q1 #q11 #o0))
           ((move_base #q1 #q12 #o0))
           ((move_base #q1 #q13 #o0))
           ((move_base #q1 #q14 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q5 #t56))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q0 #o0))
           ((move_base #q10 #q1 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q14 #o0))
           ((move_base #q10 #q2 #o0))
           ((move_base #q10 #q4 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q3 #t19))
           ((move_base #q10 #q5 #t22))
           ((move_base #q10 #q9 #t29))
           ((move_base #q10 #q7 #t37))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q14 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q3 #t20))
           ((move_base #q11 #q5 #t23))
           ((move_base #q11 #q9 #t30))
           ((move_base #q11 #q7 #t38))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q0 #o0))
           ((move_base #q12 #q1 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q13 #o0))
           ((move_base #q12 #q14 #o0))
           ((move_base #q12 #q2 #o0))
           ((move_base #q12 #q3 #o0))
           ((move_base #q12 #q4 #o0))
           ((move_base #q12 #q6 #o0))
           ((move_base #q12 #q8 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q12 #q5 #t24))
           ((move_base #q12 #q9 #t31))
           ((move_base #q12 #q7 #t39))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q0 #o0))
           ((move_base #q13 #q1 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q11 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q14 #o0))
           ((move_base #q13 #q2 #o0))
           ((move_base #q13 #q3 #o0))
           ((move_base #q13 #q4 #o0))
           ((move_base #q13 #q5 #o0))
           ((move_base #q13 #q6 #o0))
           ((move_base #q13 #q8 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q13 #q9 #t32))
           ((move_base #q13 #q7 #t40))
           ((move_base #q14 #o3 #o0))
           ((move_base #q14 #q0 #o0))
           ((move_base #q14 #q1 #o0))
           ((move_base #q14 #q10 #o0))
           ((move_base #q14 #q11 #o0))
           ((move_base #q14 #q12 #o0))
           ((move_base #q14 #q13 #o0))
           ((move_base #q14 #q14 #o0))
           ((move_base #q14 #q2 #o0))
           ((move_base #q14 #q3 #o0))
           ((move_base #q14 #q4 #o0))
           ((move_base #q14 #q5 #o0))
           ((move_base #q14 #q6 #o0))
           ((move_base #q14 #q7 #o0))
           ((move_base #q14 #q8 #o0))
           ((move_base #q14 #q9 #o0))
           ((move_base #q14 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q14 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q10 #t33))
           ((move_base #q2 #q11 #t34))
           ((move_base #q2 #q12 #t35))
           ((move_base #q2 #q13 #t36))
           ((move_base #q2 #q4 #t59))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q13 #o0))
           ((move_base #q3 #q14 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q10 #t25))
           ((move_base #q3 #q11 #t26))
           ((move_base #q3 #q12 #t27))
           ((move_base #q3 #q6 #t57))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q10 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q12 #o0))
           ((move_base #q4 #q13 #o0))
           ((move_base #q4 #q14 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q7 #t61))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q14 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q10 #t45))
           ((move_base #q5 #q11 #t46))
           ((move_base #q5 #q12 #t47))
           ((move_base #q5 #q13 #t48))
           ((move_base #q5 #q0 #t58))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q10 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q12 #o0))
           ((move_base #q6 #q13 #o0))
           ((move_base #q6 #q14 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q9 #t55))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q14 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q10 #t49))
           ((move_base #q7 #q11 #t50))
           ((move_base #q7 #q12 #t51))
           ((move_base #q7 #q13 #t52))
           ((move_base #q7 #q1 #t54))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q12 #o0))
           ((move_base #q8 #q13 #o0))
           ((move_base #q8 #q14 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q14 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q10 #t41))
           ((move_base #q9 #q11 #t42))
           ((move_base #q9 #q12 #t43))
           ((move_base #q9 #q13 #t44))
           ((move_base #q9 #q8 #t62))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q12 #o0))
           ((move_base v3 #q13 #o0))
           ((move_base v3 #q14 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q3 #t10))
           ((move_base v3 #q4 #t11))
           ((move_base v3 #q5 #t12))
           ((move_base v3 #q6 #t13))
           ((move_base v3 #q0 #t7))
           ((move_base v3 #q1 #t8))
           ((move_base v3 #q2 #t9))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p11 #g1 #q13 #t28))
           ((place v4 v12 p11 #g1 #q13 #t28))
           ((pick v4 v12 p6 #g1 #q1 #t1))
           ((place v4 v12 p6 #g1 #q1 #t1))
           ((pick v4 v12 v13 #g1 #q7 #t14))
           ((place v4 v12 v13 #g1 #q7 #t14))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 p12 #g0 #q11 #t18))
           ((place v4 v14 p12 #g0 #q11 #t18))
           ((pick v4 v14 p7 #g0 #q0 #t0))
           ((place v4 v14 p7 #g0 #q0 #t0))
           ((pick v4 v14 v15 #g0 #q5 #t5))
           ((place v4 v14 v15 #g0 #q5 #t5))
           ((pick v4 v16 #o2 #g3 #o3 #o4))
           ((place v4 v16 #o2 #g3 #o3 #o4))
           ((pick v4 v16 p13 #g3 #q14 #t53))
           ((place v4 v16 p13 #g3 #q14 #t53))
           ((pick v4 v16 p8 #g3 #q6 #t6))
           ((place v4 v16 p8 #g3 #q6 #t6))
           ((pick v4 v16 v17 #g3 #q3 #t3))
           ((place v4 v16 v17 #g3 #q3 #t3))
           ((pick v4 v18 #o2 #g4 #o3 #o4))
           ((place v4 v18 #o2 #g4 #o3 #o4))
           ((pick v4 v18 p14 #g4 #q12 #t21))
           ((place v4 v18 p14 #g4 #q12 #t21))
           ((pick v4 v18 p9 #g4 #q8 #t15))
           ((place v4 v18 p9 #g4 #q8 #t15))
           ((pick v4 v18 v19 #g4 #q9 #t16))
           ((place v4 v18 v19 #g4 #q9 #t16))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 p10 #g2 #q10 #t17))
           ((place v4 v8 p10 #g2 #q10 #t17))
           ((pick v4 v8 p5 #g2 #q4 #t4))
           ((place v4 v8 p5 #g2 #q4 #t4))
           ((pick v4 v8 v9 #g2 #q2 #t2))
           ((place v4 v8 v9 #g2 #q2 #t2))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Detailed Plan for Object Placement**
           
           Okay, so the goal is to get these five objects (v8, v12, v14, v16, v18) onto surface v20.  I've got the necessary knowledge:  'on' means an object is supported and at the right pose, which is given by the axioms.  v20 is a small table-like surface, and I've got the dimensions.  The initial state is messy, with everything scattered across another larger surface (v11). The robot arm (v4) is free and capable.
           
           Here's my thought process. Since the goal is for *all* objects to be on *v20*, I need a series of pick-and-place actions. The "on" predicate is critical here.
           
           Let's break this down systematically. I will make sure all objects get placed on `v20`.
           
           First, I need to list the objects and their starting positions, along with my desired results:
           
           1.  v8: From v9 (on v11) to v20.
           2.  v12: From v13 (on v11) to v20.
           3.  v14: From v15 (on v11) to v20.
           4.  v16: From v17 (on v11) to v20.
           5.  v18: From v19 (on v11) to v20.
           
           The key is that I need to find available *supported* poses on v20. There are poses to which objects can be moved. The poses that are available, for instance `p5, p6, p7...` and some poses that start with `#o2`.
           
           So, I will try to use the predefined poses if possible, which seem to be collision-free. This would be more efficient. I've got the exact coordinates of these key poses (p5 through p14), which are relative to (0,0,0.782). The robot is `v4`, which can execute the pick and place commands.
           
           I've checked the pre-defined collision-free poses. The existing ones include `p5, p6, p7, p8, p9, p10, p11, p12, p13, p14`, and I can use them to define the plan. I will not need to use a pose that begins with `#o2`.
           
           Therefore, my optimal plan is to assign each object to one of those poses (p5, p6, p7, p8, p9).
           And I've got a sequence of `kin` facts that can be used for the robot movements. I have checked for all `kin` and `basemotion` predicates that describe the arm and the base movements. And I double-checked the plan for any collisions. I don't need to check these for each move because the precondition of `pick` and `place` commands will already ensure that these checks are passed.
           
           Finally, the `pddl` code:
           ```pddl
           (move_base v3 #q2 #t9) ; Move to pick v8
           (pick v4 v8 v9 #g2 #q2 #t2) ; Pick v8 from v9 (on v11)
           (move_base #q2 #q4 #t59) ; Move to place v8
           (place v4 v8 p5 #g2 #q4 #t4) ; Place v8 at p5 (on v20)
           
           (move_base #q4 #q7 #t61) ; Move to pick v12
           (pick v4 v12 v13 #g1 #q7 #t14) ; Pick v12 from v13 (on v11)
           (move_base #q7 #q1 #t54) ; Move to place v12
           (place v4 v12 p6 #g1 #q1 #t1) ; Place v12 at p6 (on v20)
           
           (move_base #q1 #q5 #t56) ; Move to pick v14
           (pick v4 v14 v15 #g0 #q5 #t5) ; Pick v14 from v15 (on v11)
           (move_base #q5 #q0 #t58) ; Move to place v14
           (place v4 v14 p7 #g0 #q0 #t0) ; Place v14 at p7 (on v20)
           
           (move_
)

Model:     **A Detailed Plan for Object Placement**
           
           Okay, so the goal is to get these five objects (v8, v12, v14, v16, v18) onto surface v20.  I've got the necessary knowledge:  'on' means an object is supported and at the right pose, which is given by the axioms.  v20 is a small table-like surface, and I've got the dimensions.  The initial state is messy, with everything scattered across another larger surface (v11). The robot arm (v4) is free and capable.
           
           Here's my thought process. Since the goal is for *all* objects to be on *v20*, I need a series of pick-and-place actions. The "on" predicate is critical here.
           
           Let's break this down systematically. I will make sure all objects get placed on `v20`.
           
           First, I need to list the objects and their starting positions, along with my desired results:
           
           1.  v8: From v9 (on v11) to v20.
           2.  v12: From v13 (on v11) to v20.
           3.  v14: From v15 (on v11) to v20.
           4.  v16: From v17 (on v11) to v20.
           5.  v18: From v19 (on v11) to v20.
           
           The key is that I need to find available *supported* poses on v20. There are poses to which objects can be moved. The poses that are available, for instance `p5, p6, p7...` and some poses that start with `#o2`.
           
           So, I will try to use the predefined poses if possible, which seem to be collision-free. This would be more efficient. I've got the exact coordinates of these key poses (p5 through p14), which are relative to (0,0,0.782). The robot is `v4`, which can execute the pick and place commands.
           
           I've checked the pre-defined collision-free poses. The existing ones include `p5, p6, p7, p8, p9, p10, p11, p12, p13, p14`, and I can use them to define the plan. I will not need to use a pose that begins with `#o2`.
           
           Therefore, my optimal plan is to assign each object to one of those poses (p5, p6, p7, p8, p9).
           And I've got a sequence of `kin` facts that can be used for the robot movements. I have checked for all `kin` and `basemotion` predicates that describe the arm and the base movements. And I double-checked the plan for any collisions. I don't need to check these for each move because the precondition of `pick` and `place` commands will already ensure that these checks are passed.
           
           Finally, the `pddl` code:
           ```pddl
           (move_base v3 #q2 #t9) ; Move to pick v8
           (pick v4 v8 v9 #g2 #q2 #t2) ; Pick v8 from v9 (on v11)
           (move_base #q2 #q4 #t59) ; Move to place v8
           (place v4 v8 p5 #g2 #q4 #t4) ; Place v8 at p5 (on v20)
           
           (move_base #q4 #q7 #t61) ; Move to pick v12
           (pick v4 v12 v13 #g1 #q7 #t14) ; Pick v12 from v13 (on v11)
           (move_base #q7 #q1 #t54) ; Move to place v12
           (place v4 v12 p6 #g1 #q1 #t1) ; Place v12 at p6 (on v20)
           
           (move_base #q1 #q5 #t56) ; Move to pick v14
           (pick v4 v14 v15 #g0 #q5 #t5) ; Pick v14 from v15 (on v11)
           (move_base #q5 #q0 #t58) ; Move to place v14
           (place v4 v14 p7 #g0 #q0 #t0) ; Place v14 at p7 (on v20)
           
           (move_

