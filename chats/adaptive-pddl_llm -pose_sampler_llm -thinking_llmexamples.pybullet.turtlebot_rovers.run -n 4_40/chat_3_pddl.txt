User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom rock(v5)
           Atom type(v4, v2)
           Atom lander(v9)
           Atom objective(v17)
           Atom objective(v19)
           Atom rock(v3)
           Atom rock(v8)
           Atom type(v5, v6)
           Atom rock(v4)
           Atom rock(v1)
           Atom mode(v11)
           Atom type(v8, v6)
           Atom type(v1, v2)
           Atom rover(v14)
           Atom supports(v10, v11)
           Atom free(v14, v16)
           Atom objective(v20)
           Atom onboard(v10, v14)
           Atom free(v12, v16)
           Atom objective(v18)
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom conf(v12, v13)
           Atom camera(v10)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q2, #y1, v20)
           Atom imagerange(v14, #q2, v20)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q4, #y3, v18)
           Atom imagerange(v14, #q4, v18)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v3)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q7, #y5, v19)
           Atom imagerange(v14, #q7, v19)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q3, #y2, v17)
           Atom imagerange(v14, #q3, v17)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom imagevisible(v12, #q11, #y7, v18)
           Atom imagerange(v12, #q11, v18)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom imagevisible(v12, #q12, #y8, v17)
           Atom imagerange(v12, #q12, v17)
           Atom conf(v12, #q12)
           Atom ray(#y8)
           Atom above(v12, #q8, v7)
           Atom conf(v12, #q8)
           Atom imagevisible(v12, #q10, #y6, v20)
           Atom imagerange(v12, #q10, v20)
           Atom conf(v12, #q10)
           Atom ray(#y6)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v12, #q0, v5)
           Atom conf(v12, #q0)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q13, #y9, v19)
           Atom imagerange(v12, #q13, v19)
           Atom conf(v12, #q13)
           Atom ray(#y9)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom comvisible(v14, #q6, #y4, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, v13, #t16, #q11)
           Atom motion(v14, #q4, #t9, #q6)
           Atom motion(v14, #q6, #t4, v15)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q11, #t19, #q1)
           Atom motion(v12, #q1, #t1, v13)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #t8, #q6)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q1, #t14, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #t12, #q1)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #t10, #q6)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #t3, #q0)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q1, #t5, #q0)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q1, #t6, #q5)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t7, #q6)
           Atom motion(v14, v15, #t2, #q2)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q10, #t18, #q1)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, v13, #t15, #q10)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #t11, #q1)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q1, #t13, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #t20, #q1)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, v13, #t17, #q12)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q6)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v5 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v12 #q8 v7 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #t1 v13))
           ((move v12 #q1 #t13 #q8))
           ((move v12 #q1 #t14 #q9))
           ((move v12 #q1 #t5 #q0))
           ((move v12 #q1 #t6 #q5))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t18 #q1))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t19 #q1))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t20 #q1))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t11 #q1))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t12 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q10))
           ((move v12 v13 #t16 #q11))
           ((move v12 v13 #t17 #q12))
           ((move v12 v13 #t3 #q0))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t7 #q6))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t8 #q6))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t9 #q6))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #t4 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t10 #q6))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t2 #q2))
           ((calibrate v12 #q10 #y6 v20 v10))
           ((calibrate v12 #q11 #y7 v18 v10))
           ((calibrate v12 #q12 #y8 v17 v10))
           ((calibrate v12 #q13 #y9 v19 v10))
           ((calibrate v14 #q2 #y1 v20 v10))
           ((calibrate v14 #q3 #y2 v17 v10))
           ((calibrate v14 #q4 #y3 v18 v10))
           ((calibrate v14 #q7 #y5 v19 v10))
           ((take_image v12 #q10 #y6 v20 v10 v11))
           ((take_image v12 #q11 #y7 v18 v10 v11))
           ((take_image v12 #q12 #y8 v17 v10 v11))
           ((take_image v12 #q13 #y9 v19 v10 v11))
           ((take_image v14 #q2 #y1 v20 v10 v11))
           ((take_image v14 #q3 #y2 v17 v10 v11))
           ((take_image v14 #q4 #y3 v18 v10 v11))
           ((take_image v14 #q7 #y5 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y4 v9 v1))
           ((send_analysis v14 #q6 #y4 v9 v3))
           ((send_analysis v14 #q6 #y4 v9 v4))
           ((send_analysis v14 #q6 #y4 v9 v5))
           ((send_analysis v14 #q6 #y4 v9 v7))
           ((send_analysis v14 #q6 #y4 v9 v8))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q6 #y4 v9 v20 v11))
           ((send_image v14 #q6 #y4 v9 v17 v11))
           ((send_image v14 #q6 #y4 v9 v18 v11))
           ((send_image v14 #q6 #y4 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **My Plan for Achieving `new-axiom@0()` in the `rovers` Domain**
           
           Okay, here's the breakdown of my thinking to achieve the goal `new-axiom@0()` in this specific rovers scenario. The key challenge is to satisfy the conjunction of conditions within the axiom.
           
           First, I examined the current state. The initial conditions: `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` are already met. Now, I have to ensure those other conditions are true at the end.
           
           This means I need to make the following statements true at the end:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `type(?stone, v2)` and `receivedanalysis(?stone)` (where ?stone can be `v4`)
           - `type(?soil, v6)` and `receivedanalysis(?soil)` (where ?soil can be `v5`)
           
           To achieve this, I broke it into a plan:
           1.  **Image Acquisition & Transmission:** I'll have the rover `v12` take images of all four objectives (`v17`, `v18`, `v19`, and `v20`) using its camera `v10` in mode `v11`.  Both rovers have image visibility for all those objectives, so I chose `v12` for simplicity. The process would involve moving to image-visible configurations, calibrating the camera, taking the picture and then moving to a comvisible configuration and sending the image to the lander. The move/calibrate/take image cycles would be repeated.
           2.  **Analysis:** Using rover `v12` and its store `v16`, sample rock `v4`, send the results. The rock type is `v2` (stone), and the plan uses the action `sample_rock`.
           3.  **Analysis:** Do the same analysis to rock `v5`, a rock of type `v6` (soil).
           4.  **Final State Setup:** After all images and analysis results are sent, and the `v12` store is empty (`free(v12, v16)`), I have to move rover `v12` to its initial position, which I believe is `v13`. All I need to do is `move v12 #q1 #t1 v13`, to ensure all initial conditions are re-established at the end.
           
           Specifically, I have the following plan:
           
           1.  Move `v12` to a location to take a picture of object `v17`.
           2.  Calibrate and then take image.
           3.  Move to a location to take a picture of object `v18`.
           4.  Calibrate and then take image.
           5.  Move to a location to take a picture of object `v19`.
           6.  Calibrate and then take image.
           7.  Move to a location to take a picture of object `v20`.
           8.  Calibrate and then take image.
           9.  Move to the radio (lander) and send each image.
           10. Move to rock `v4` and take a sample.
           11. Send analysis of `v4`.
           12. Empty the store.
           13. Move to rock `v5` and take a sample.
           14. Send analysis of `v5`.
           15. Empty the store.
           16. Move `v12` to initial position `v13`.
           
           This comprehensive plan covers all the conditions, and I am quite certain it will be successful.
           
)

Model:     **My Plan for Achieving `new-axiom@0()` in the `rovers` Domain**
           
           Okay, here's the breakdown of my thinking to achieve the goal `new-axiom@0()` in this specific rovers scenario. The key challenge is to satisfy the conjunction of conditions within the axiom.
           
           First, I examined the current state. The initial conditions: `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` are already met. Now, I have to ensure those other conditions are true at the end.
           
           This means I need to make the following statements true at the end:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `type(?stone, v2)` and `receivedanalysis(?stone)` (where ?stone can be `v4`)
           - `type(?soil, v6)` and `receivedanalysis(?soil)` (where ?soil can be `v5`)
           
           To achieve this, I broke it into a plan:
           1.  **Image Acquisition & Transmission:** I'll have the rover `v12` take images of all four objectives (`v17`, `v18`, `v19`, and `v20`) using its camera `v10` in mode `v11`.  Both rovers have image visibility for all those objectives, so I chose `v12` for simplicity. The process would involve moving to image-visible configurations, calibrating the camera, taking the picture and then moving to a comvisible configuration and sending the image to the lander. The move/calibrate/take image cycles would be repeated.
           2.  **Analysis:** Using rover `v12` and its store `v16`, sample rock `v4`, send the results. The rock type is `v2` (stone), and the plan uses the action `sample_rock`.
           3.  **Analysis:** Do the same analysis to rock `v5`, a rock of type `v6` (soil).
           4.  **Final State Setup:** After all images and analysis results are sent, and the `v12` store is empty (`free(v12, v16)`), I have to move rover `v12` to its initial position, which I believe is `v13`. All I need to do is `move v12 #q1 #t1 v13`, to ensure all initial conditions are re-established at the end.
           
           Specifically, I have the following plan:
           
           1.  Move `v12` to a location to take a picture of object `v17`.
           2.  Calibrate and then take image.
           3.  Move to a location to take a picture of object `v18`.
           4.  Calibrate and then take image.
           5.  Move to a location to take a picture of object `v19`.
           6.  Calibrate and then take image.
           7.  Move to a location to take a picture of object `v20`.
           8.  Calibrate and then take image.
           9.  Move to the radio (lander) and send each image.
           10. Move to rock `v4` and take a sample.
           11. Send analysis of `v4`.
           12. Empty the store.
           13. Move to rock `v5` and take a sample.
           14. Send analysis of `v5`.
           15. Empty the store.
           16. Move `v12` to initial position `v13`.
           
           This comprehensive plan covers all the conditions, and I am quite certain it will be successful.
           

