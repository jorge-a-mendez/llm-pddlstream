User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom rock(v5)
           Atom type(v4, v2)
           Atom lander(v9)
           Atom objective(v17)
           Atom objective(v19)
           Atom rock(v3)
           Atom rock(v8)
           Atom type(v5, v6)
           Atom rock(v4)
           Atom rock(v1)
           Atom mode(v11)
           Atom type(v8, v6)
           Atom type(v1, v2)
           Atom rover(v14)
           Atom supports(v10, v11)
           Atom free(v14, v16)
           Atom objective(v20)
           Atom onboard(v10, v14)
           Atom free(v12, v16)
           Atom objective(v18)
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom conf(v12, v13)
           Atom camera(v10)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q2, #y1, v20)
           Atom imagerange(v14, #q2, v20)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #q4, #y3, v18)
           Atom imagerange(v14, #q4, v18)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v3)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q7, #y5, v19)
           Atom imagerange(v14, #q7, v19)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q3, #y2, v17)
           Atom imagerange(v14, #q3, v17)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v12, #q0, v5)
           Atom conf(v12, #q0)
           Atom imagevisible(v12, #q12, #y8, v17)
           Atom imagerange(v12, #q12, v17)
           Atom conf(v12, #q12)
           Atom ray(#y8)
           Atom imagevisible(v12, #q11, #y7, v18)
           Atom imagerange(v12, #q11, v18)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom above(v12, #q8, v7)
           Atom conf(v12, #q8)
           Atom imagevisible(v12, #q10, #y6, v20)
           Atom imagerange(v12, #q10, v20)
           Atom conf(v12, #q10)
           Atom ray(#y6)
           Atom imagevisible(v12, #q13, #y9, v19)
           Atom imagerange(v12, #q13, v19)
           Atom conf(v12, #q13)
           Atom ray(#y9)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom comvisible(v14, #q6, #y4, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t1, v13)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #t4, v15)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q1, #t5, #q0)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, v13, #t3, #q0)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #t10, #q6)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q3, #t8, #q6)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q14, #t24, #q1)
           Atom motion(v12, #q1, #t21, #q14)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q1, #t6, #q5)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v14, #q4, #t9, #q6)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q9, #t12, #q1)
           Atom motion(v12, #q1, #t14, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q10, #t18, #q1)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q13, #t22, #q10)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, v13, #t15, #q10)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, v15, #t2, #q2)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q2, #t7, #q6)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q1, #t13, #q8)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #t11, #q1)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, v13, #t16, #q11)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q11, #t19, #q1)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q11, #t23, #q13)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, v13, #t17, #q12)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q12, #t25, #q11)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q12, #t20, #q1)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q0, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v5 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v12 #q8 v7 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #t1 v13))
           ((move v12 #q1 #t13 #q8))
           ((move v12 #q1 #t14 #q9))
           ((move v12 #q1 #t21 #q14))
           ((move v12 #q1 #t5 #q0))
           ((move v12 #q1 #t6 #q5))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t18 #q1))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t19 #q1))
           ((move v12 #q11 #t23 #q13))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t20 #q1))
           ((move v12 #q12 #t25 #q11))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t22 #q10))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t24 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t11 #q1))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t12 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q10))
           ((move v12 v13 #t16 #q11))
           ((move v12 v13 #t17 #q12))
           ((move v12 v13 #t3 #q0))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t7 #q6))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t8 #q6))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t9 #q6))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #t4 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t10 #q6))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t2 #q2))
           ((calibrate v12 #q10 #y6 v20 v10))
           ((calibrate v12 #q11 #y7 v18 v10))
           ((calibrate v12 #q12 #y8 v17 v10))
           ((calibrate v12 #q13 #y9 v19 v10))
           ((calibrate v14 #q2 #y1 v20 v10))
           ((calibrate v14 #q3 #y2 v17 v10))
           ((calibrate v14 #q4 #y3 v18 v10))
           ((calibrate v14 #q7 #y5 v19 v10))
           ((take_image v12 #q10 #y6 v20 v10 v11))
           ((take_image v12 #q11 #y7 v18 v10 v11))
           ((take_image v12 #q12 #y8 v17 v10 v11))
           ((take_image v12 #q13 #y9 v19 v10 v11))
           ((take_image v14 #q2 #y1 v20 v10 v11))
           ((take_image v14 #q3 #y2 v17 v10 v11))
           ((take_image v14 #q4 #y3 v18 v10 v11))
           ((take_image v14 #q7 #y5 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y4 v9 v1))
           ((send_analysis v14 #q6 #y4 v9 v3))
           ((send_analysis v14 #q6 #y4 v9 v4))
           ((send_analysis v14 #q6 #y4 v9 v5))
           ((send_analysis v14 #q6 #y4 v9 v7))
           ((send_analysis v14 #q6 #y4 v9 v8))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q6 #y4 v9 v20 v11))
           ((send_image v14 #q6 #y4 v9 v17 v11))
           ((send_image v14 #q6 #y4 v9 v18 v11))
           ((send_image v14 #q6 #y4 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Strategic Plan for Achieving `new-axiom@0()` in the `rovers` Domain**
           
           Okay, so I've been tasked with creating a plan to satisfy the requirements of `new-axiom@0()`.  This involves ensuring that the preconditions for this axiom are met, which, in turn, hinges on several key sub-goals related to image acquisition and sample analysis. Let's break it down:
           
           1.  **Image Acquisition:**  I need to ensure the lander receives images from four different objectives: v17, v18, v19, and v20, all using mode v11.
           
           2.  **Sample Analysis:** I must guarantee that analysis results are sent for all identified rocks: specifically, rocks v1, v3, and v4 (which are of type 'stone,' identified as type v2), and also rocks v5, v7, and v8 (of type 'soil,' identified as type v6).
           
           Now, let's establish how I'll achieve these goals. My strategy employs a division of labor between the available rovers and their onboard tools.
           
           **Plan Construction**
           
           *   **Imaging Rover:** I'll assign Rover v14, which is initially located at v15, to handle the image acquisition process. I'll make use of its camera, v10, and mode v11. The plan will follow these steps:
               1.  First, it's a series of moves, calibration, and image captures. I have to move the rover to the correct location (such as `#q2` to image v20) via a `motion` action, calibrate the camera against the objective, and then use `take_image` using the appropriate camera/mode combination, then send those images using `send_image`.
           *   **Analysis Rover:** The sampling and analysis tasks will be handled by Rover v12, initially situated at v13. Its primary role involves retrieving and analyzing rock samples. Its location `#q` in an `above` predicate will allow me to `sample_rock`, store samples at v16, and use `send_analysis` for sending results to the lander. The goal here is to carefully move between rock locations, sampling each one.
           
           **Detailed Sequence of Actions**
           
           I've assembled the individual action sequences.
           
           *   **Imaging Rover Plan (v14):**
               1.  `move(v14, v15, #t2, #q2)`
               2.  `calibrate(v14, #q2, #y1, v20, v10)`
               3.  `take_image(v14, #q2, #y1, v20, v10, v11)`
               4.  `move(v14, #q2, #o2, #q4)`
               5.  `calibrate(v14, #q4, #y3, v18, v10)`
               6.  `take_image(v14, #q4, #y3, v18, v10, v11)`
               7.  `move(v14, #q4, #o2, #q7)`
               8.  `calibrate(v14, #q7, #y5, v19, v10)`
               9.  `take_image(v14, #q7, #y5, v19, v10, v11)`
               10. `move(v14, #q7, #o2, #q3)`
               11. `calibrate(v14, #q3, #y2, v17, v10)`
               12. `take_image(v14, #q3, #y2, v17, v10, v11)`
               13. `move(v14, #q3, #t8, #q6)`
               14. `send_image(v14, #q6, #y4, v9, v20, v11)`
               15. `send_image(v14, #q6, #y4, v9, v18, v11)`
               16. `send_image(v14, #q6, #y4, v9, v19, v11)`
               17. `send_image(v14, #q6, #y4, v9, v17, v11)`
               18. `move(v14, #q6, #
)

Model:     **Strategic Plan for Achieving `new-axiom@0()` in the `rovers` Domain**
           
           Okay, so I've been tasked with creating a plan to satisfy the requirements of `new-axiom@0()`.  This involves ensuring that the preconditions for this axiom are met, which, in turn, hinges on several key sub-goals related to image acquisition and sample analysis. Let's break it down:
           
           1.  **Image Acquisition:**  I need to ensure the lander receives images from four different objectives: v17, v18, v19, and v20, all using mode v11.
           
           2.  **Sample Analysis:** I must guarantee that analysis results are sent for all identified rocks: specifically, rocks v1, v3, and v4 (which are of type 'stone,' identified as type v2), and also rocks v5, v7, and v8 (of type 'soil,' identified as type v6).
           
           Now, let's establish how I'll achieve these goals. My strategy employs a division of labor between the available rovers and their onboard tools.
           
           **Plan Construction**
           
           *   **Imaging Rover:** I'll assign Rover v14, which is initially located at v15, to handle the image acquisition process. I'll make use of its camera, v10, and mode v11. The plan will follow these steps:
               1.  First, it's a series of moves, calibration, and image captures. I have to move the rover to the correct location (such as `#q2` to image v20) via a `motion` action, calibrate the camera against the objective, and then use `take_image` using the appropriate camera/mode combination, then send those images using `send_image`.
           *   **Analysis Rover:** The sampling and analysis tasks will be handled by Rover v12, initially situated at v13. Its primary role involves retrieving and analyzing rock samples. Its location `#q` in an `above` predicate will allow me to `sample_rock`, store samples at v16, and use `send_analysis` for sending results to the lander. The goal here is to carefully move between rock locations, sampling each one.
           
           **Detailed Sequence of Actions**
           
           I've assembled the individual action sequences.
           
           *   **Imaging Rover Plan (v14):**
               1.  `move(v14, v15, #t2, #q2)`
               2.  `calibrate(v14, #q2, #y1, v20, v10)`
               3.  `take_image(v14, #q2, #y1, v20, v10, v11)`
               4.  `move(v14, #q2, #o2, #q4)`
               5.  `calibrate(v14, #q4, #y3, v18, v10)`
               6.  `take_image(v14, #q4, #y3, v18, v10, v11)`
               7.  `move(v14, #q4, #o2, #q7)`
               8.  `calibrate(v14, #q7, #y5, v19, v10)`
               9.  `take_image(v14, #q7, #y5, v19, v10, v11)`
               10. `move(v14, #q7, #o2, #q3)`
               11. `calibrate(v14, #q3, #y2, v17, v10)`
               12. `take_image(v14, #q3, #y2, v17, v10, v11)`
               13. `move(v14, #q3, #t8, #q6)`
               14. `send_image(v14, #q6, #y4, v9, v20, v11)`
               15. `send_image(v14, #q6, #y4, v9, v18, v11)`
               16. `send_image(v14, #q6, #y4, v9, v19, v11)`
               17. `send_image(v14, #q6, #y4, v9, v17, v11)`
               18. `move(v14, #q6, #

