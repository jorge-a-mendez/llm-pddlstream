User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.154, 0.401), (-0.055, 0.5)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.19, -0.087), (0.268, -0.01)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.067, -0.58), (0.024, -0.489)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.128, -0.32), (-0.05, -0.242)).
           Object v9 is a pose with position (-0.105, 0.451, 0.781) and quaternion (0.0, 0.0, 0.927, -0.376).
           Object v17 is a pose with position (0.229, -0.048, 0.781) and quaternion (0.0, 0.0, -0.054, 0.999).
           Object v15 is a pose with position (-0.022, -0.535, 0.781) and quaternion (0.0, 0.0, -0.188, 0.982).
           Object v13 is a pose with position (-0.089, -0.281, 0.781) and quaternion (0.0, 0.0, -0.663, 0.748).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v16, v17)
           Atom controllable(v4)
           Atom bconf(v3)
           Atom stackable(v12, v18)
           Atom pose(v8, v9)
           Atom supported(v14, v15, v11)
           Atom aconf(v4, v5)
           Atom handempty(v6)
           Atom graspable(v12)
           Atom atbconf(v3)
           Atom ataconf(v4, v5)
           Atom supported(v12, v13, v11)
           Atom atpose(v14, v15)
           Atom arm(v6)
           Atom stackable(v8, v18)
           Atom stackable(v8, v10)
           Atom pose(v12, v13)
           Atom aconf(v6, v7)
           Atom stackable(v12, v10)
           Atom atpose(v12, v13)
           Atom supported(v8, v9, v11)
           Atom graspable(v8)
           Atom handempty(v4)
           Atom stackable(v14, v18)
           Atom pose(v14, v15)
           Atom atpose(v8, v9)
           Atom stackable(v16, v18)
           Atom ataconf(v6, v7)
           Atom graspable(v16)
           Atom graspable(v14)
           Atom stackable(v16, v10)
           Atom canmove()
           Atom atpose(v16, v17)
           Atom stackable(v14, v10)
           Atom arm(v4)
           Atom supported(v16, v17, v11)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v14, #o1)
           Atom grasp(v16, #o1)
           Atom supported(v16, #o2, v18)
           Atom supported(v14, #o2, v18)
           Atom grasp(v8, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom grasp(v12, #o1)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains four graspable objects: v8, v12, v14, and v16. These objects are initially located on surface v11 at poses v9, v13, v15, and v17, respectively. The goal is to place all four objects on surface v18.
           
           The only available action instance is `(move_base v3 v3 #o0)`. This action doesn't change the state of the objects or the robot's arm, only its base configuration, which is already at `v3`. Since the initial state already has the robot at `v3` and the action `move_base` transitions from `v3` to `v3`, it essentially does nothing.
           
           To achieve the goal, the robot needs to pick up each object and place it on surface v18. This requires `pick` and `place` actions, which are not explicitly provided in the list of available action instances, even though the `kin` predicates for picking and placing objects are in the initial state. Since there are no pick and place actions available, the goal is unreachable.

