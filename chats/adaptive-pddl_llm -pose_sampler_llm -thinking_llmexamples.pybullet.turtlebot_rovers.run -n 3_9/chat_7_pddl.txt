User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v19)
           Atom objective(v18)
           Atom rock(v8)
           Atom onboard(v10, v14)
           Atom free(v14, v16)
           Atom rock(v3)
           Atom atconf(v14, v15)
           Atom type(v3, v2)
           Atom camera(v10)
           Atom type(v8, v6)
           Atom mode(v11)
           Atom rover(v12)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom rock(v7)
           Atom objective(v17)
           Atom type(v5, v6)
           Atom type(v4, v2)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom type(v7, v6)
           Atom rock(v5)
           Atom rover(v14)
           Atom rock(v1)
           Atom type(v1, v2)
           Atom conf(v12, v13)
           Atom onboard(v10, v12)
           Atom atconf(v12, v13)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q9, v3)
           Atom conf(v14, #q9)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q2, #y1, v18)
           Atom imagerange(v14, #q2, v18)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom above(v14, #q12, v5)
           Atom conf(v14, #q12)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q14, v1)
           Atom conf(v12, #q14)
           Atom above(v12, #q0, v3)
           Atom conf(v12, #q0)
           Atom above(v12, #q15, v4)
           Atom conf(v12, #q15)
           Atom imagevisible(v12, #q7, #y5, v18)
           Atom imagerange(v12, #q7, v18)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q4, #y3, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q8, #y6, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom imagevisible(v14, #q1, #y0, v19)
           Atom imagerange(v14, #q1, v19)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q10, v8)
           Atom conf(v14, #q10)
           Atom above(v12, #q6, v8)
           Atom conf(v12, #q6)
           Atom imagevisible(v14, #q5, #y4, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom imagevisible(v12, #q11, #y7, v17)
           Atom imagerange(v12, #q11, v17)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom above(v14, #q13, v7)
           Atom conf(v14, #q13)
           Atom above(v12, #o5, v7)
           Atom motion(v14, v15, #t28, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q12, #t22, #q3)
           Atom motion(v14, #q3, #t9, v15)
           Atom motion(v14, #q13, #t29, #q3)
           Atom motion(v14, #q3, #t36, #q13)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v12, v13, #t23, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, v15, #t5, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q3, #t16, #q2)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q2, #t3, #q3)
           Atom motion(v14, #q9, #t27, #q12)
           Atom motion(v14, #q3, #t18, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q9, #t13, #q3)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #t12, #q9)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q2, #t20, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #t14, #q3)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q3, #t15, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q4, #t1, v13)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q1, #t19, #q2)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #t2, #q3)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, v15, #t4, #q1)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v12, #q7, #t10, #q4)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #t26, #q7)
           Atom motion(v12, v13, #t11, #q7)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, #q4, #t32, #q15)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #t35, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q8, #t24, #q4)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q7, #t25, #q8)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q0, #t7, #q4)
           Atom motion(v12, #q4, #t6, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t8, #q4)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, v13, #t17, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q4, #t21, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q3, #t30, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q10, #t33, #q3)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q14, #t34, #q4)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q4, #t31, #q14)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q10)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q0 v3 v16))
           ((sample_rock v12 #q14 v1 v16))
           ((sample_rock v12 #q15 v4 v16))
           ((sample_rock v12 #q6 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #q10 v8 v16))
           ((sample_rock v14 #q12 v5 v16))
           ((sample_rock v14 #q13 v7 v16))
           ((sample_rock v14 #q9 v3 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t7 #q4))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t26 #q7))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t34 #q4))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t35 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #t1 v13))
           ((move v12 #q4 #t21 #q6))
           ((move v12 #q4 #t31 #q14))
           ((move v12 #q4 #t32 #q15))
           ((move v12 #q4 #t6 #q0))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t8 #q4))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t10 #q4))
           ((move v12 #q7 #t25 #q8))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t24 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t11 #q7))
           ((move v12 v13 #t17 #q6))
           ((move v12 v13 #t23 #q11))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t19 #q2))
           ((move v14 #q1 #t2 #q3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t33 #q3))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t22 #q3))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t29 #q3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t20 #q5))
           ((move v14 #q2 #t3 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #t15 #q5))
           ((move v14 #q3 #t16 #q2))
           ((move v14 #q3 #t18 #q9))
           ((move v14 #q3 #t30 #q10))
           ((move v14 #q3 #t36 #q13))
           ((move v14 #q3 #t9 v15))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t14 #q3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t13 #q3))
           ((move v14 #q9 #t27 #q12))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q9))
           ((move v14 v15 #t28 #q12))
           ((move v14 v15 #t4 #q1))
           ((move v14 v15 #t5 #q2))
           ((calibrate v12 #q11 #y7 v17 v10))
           ((calibrate v12 #q7 #y5 v18 v10))
           ((calibrate v12 #q8 #y6 v19 v10))
           ((calibrate v14 #q1 #y0 v19 v10))
           ((calibrate v14 #q2 #y1 v18 v10))
           ((calibrate v14 #q5 #y4 v17 v10))
           ((take_image v12 #q11 #y7 v17 v10 v11))
           ((take_image v12 #q7 #y5 v18 v10 v11))
           ((take_image v12 #q8 #y6 v19 v10 v11))
           ((take_image v14 #q1 #y0 v19 v10 v11))
           ((take_image v14 #q2 #y1 v18 v10 v11))
           ((take_image v14 #q5 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y3 v9 v5))
           ((send_analysis v12 #q4 #y3 v9 v7))
           ((send_analysis v12 #q4 #y3 v9 v3))
           ((send_analysis v12 #q4 #y3 v9 v1))
           ((send_analysis v12 #q4 #y3 v9 v4))
           ((send_analysis v12 #q4 #y3 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_image v12 #q4 #y3 v9 v17 v11))
           ((send_image v12 #q4 #y3 v9 v18 v11))
           ((send_image v12 #q4 #y3 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Atomic Axiom Plan: A Detailed Breakdown**
           
           Alright, let's get down to brass tacks. My primary objective is to make `new-axiom@0()` a reality. This hinges on satisfying a set of critical conditions. It's like a checklist, and every item has to be ticked off simultaneously at the very end of the game:
           
           1.  Both rovers, `v12` and `v14`, must be precisely where they started - at locations `v13` and `v15` respectively. We'll need to remember that!
           2.  The storage units, `v16` on both `v12` and `v14`, need to be empty, ready for more work.
           3.  We've got to ensure the lander receives three crucial images: of objectives `v17`, `v18`, and `v19`.
           4.  And, critically, we need the lander to have received analysis reports for at least one rock that's of type `v2` (a "stone"), and one rock of type `v6` (a "soil").
           
           **Initial State Assessment**
           
           Here's what we're starting with:
           
           -   `atconf(v12, v13)` and `atconf(v14, v15)` are true from the jump, and we need these to still be true at the final state.
           -   `free(v12, v16)` and `free(v14, v16)` are initially true, but sampling rocks will temporarily make these stores full, so we'll need a trick up our sleeve to guarantee they remain free at the very end.
           -   Our camera `v10` can work with mode `v11` and is present on both rovers. This camera will need to be calibrated for each picture.
           -   `v9` is our lander, and communication lines are open to it.
           -   Objectives `v17`, `v18`, `v19` need pictures taken from specific positions.
           -   The world of rocks has types, we need to gather at least one representative from type `v2` and type `v6`.
           
           **Strategic Approach**
           
           Let's divide and conquer:
           
           1.  Rover `v12` will take on the image capturing and transmission to the lander, plus handling a specific rock analysis.
           2.  Rover `v14` will tackle the analysis of another rock.
           3.  After analysing, each rover will need to "drop" its rock so the store will again be empty.
           4.  After the rovers complete all tasks, both will return to their start positions, completing the game objective.
           5.  Each move and action needs to come from the list of possible moves.
           
           **Detailed Action Plan**
           
           **Rover v12's Sequence**
           
           1.  Move to sample location for rock `v3`.
           2.  Sample rock `v3`. This creates `analyzed(v12, v3)` and makes `full(v12, v16)`.
           3.  Move to communication location.
           4.  Send analysis of `v3`.
           5.  Drop Rock `v3` to release the storage space again.
           6.  Move to position to capture an image of `v17`.
           7.  Calibrate camera `v10` on `v12`.
           8.  Take image of `v17`, making `haveimage(v12, v17, v11)`. The camera uncalibrates.
           9.  Move to communication location.
           10. Send image of `v17`.
           11. Repeat calibration, taking and sending image cycles for `v18` and `v19`.
           12. Once everything is sent, move `v12` back to its initial location, `v13`.
           
           **Rover v14's Sequence**
           
           1.  Move to position to sample rock `v5`.
           2.  Sample rock `v5`. This leads to `analyzed(v14, v5)` and makes `full(v14, v16)`.
           3.  Move to communication location.
           4.  Send analysis of `v5`.
           5.  Drop Rock `v5` to release the storage space again.
           6.  Move `v14` back to its starting spot, location `v15`.
           
           **In short, we need to carefully coordinate and synchronize all actions to make the needed items true simultaneously, which means handling any possible store usage for both Rovers, and ensuring each rover is returned to its starting spot
)

Model:     **The Atomic Axiom Plan: A Detailed Breakdown**
           
           Alright, let's get down to brass tacks. My primary objective is to make `new-axiom@0()` a reality. This hinges on satisfying a set of critical conditions. It's like a checklist, and every item has to be ticked off simultaneously at the very end of the game:
           
           1.  Both rovers, `v12` and `v14`, must be precisely where they started - at locations `v13` and `v15` respectively. We'll need to remember that!
           2.  The storage units, `v16` on both `v12` and `v14`, need to be empty, ready for more work.
           3.  We've got to ensure the lander receives three crucial images: of objectives `v17`, `v18`, and `v19`.
           4.  And, critically, we need the lander to have received analysis reports for at least one rock that's of type `v2` (a "stone"), and one rock of type `v6` (a "soil").
           
           **Initial State Assessment**
           
           Here's what we're starting with:
           
           -   `atconf(v12, v13)` and `atconf(v14, v15)` are true from the jump, and we need these to still be true at the final state.
           -   `free(v12, v16)` and `free(v14, v16)` are initially true, but sampling rocks will temporarily make these stores full, so we'll need a trick up our sleeve to guarantee they remain free at the very end.
           -   Our camera `v10` can work with mode `v11` and is present on both rovers. This camera will need to be calibrated for each picture.
           -   `v9` is our lander, and communication lines are open to it.
           -   Objectives `v17`, `v18`, `v19` need pictures taken from specific positions.
           -   The world of rocks has types, we need to gather at least one representative from type `v2` and type `v6`.
           
           **Strategic Approach**
           
           Let's divide and conquer:
           
           1.  Rover `v12` will take on the image capturing and transmission to the lander, plus handling a specific rock analysis.
           2.  Rover `v14` will tackle the analysis of another rock.
           3.  After analysing, each rover will need to "drop" its rock so the store will again be empty.
           4.  After the rovers complete all tasks, both will return to their start positions, completing the game objective.
           5.  Each move and action needs to come from the list of possible moves.
           
           **Detailed Action Plan**
           
           **Rover v12's Sequence**
           
           1.  Move to sample location for rock `v3`.
           2.  Sample rock `v3`. This creates `analyzed(v12, v3)` and makes `full(v12, v16)`.
           3.  Move to communication location.
           4.  Send analysis of `v3`.
           5.  Drop Rock `v3` to release the storage space again.
           6.  Move to position to capture an image of `v17`.
           7.  Calibrate camera `v10` on `v12`.
           8.  Take image of `v17`, making `haveimage(v12, v17, v11)`. The camera uncalibrates.
           9.  Move to communication location.
           10. Send image of `v17`.
           11. Repeat calibration, taking and sending image cycles for `v18` and `v19`.
           12. Once everything is sent, move `v12` back to its initial location, `v13`.
           
           **Rover v14's Sequence**
           
           1.  Move to position to sample rock `v5`.
           2.  Sample rock `v5`. This leads to `analyzed(v14, v5)` and makes `full(v14, v16)`.
           3.  Move to communication location.
           4.  Send analysis of `v5`.
           5.  Drop Rock `v5` to release the storage space again.
           6.  Move `v14` back to its starting spot, location `v15`.
           
           **In short, we need to carefully coordinate and synchronize all actions to make the needed items true simultaneously, which means handling any possible store usage for both Rovers, and ensuring each rover is returned to its starting spot

