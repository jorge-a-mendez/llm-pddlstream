User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v19)
           Atom objective(v18)
           Atom rock(v8)
           Atom onboard(v10, v14)
           Atom free(v14, v16)
           Atom rock(v3)
           Atom atconf(v14, v15)
           Atom type(v3, v2)
           Atom camera(v10)
           Atom type(v8, v6)
           Atom mode(v11)
           Atom rover(v12)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom rock(v7)
           Atom objective(v17)
           Atom type(v5, v6)
           Atom type(v4, v2)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom type(v7, v6)
           Atom rock(v5)
           Atom rover(v14)
           Atom rock(v1)
           Atom type(v1, v2)
           Atom conf(v12, v13)
           Atom onboard(v10, v12)
           Atom atconf(v12, v13)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q2, #y1, v18)
           Atom imagerange(v14, #q2, v18)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #q9, v3)
           Atom conf(v14, #q9)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q0, v3)
           Atom conf(v12, #q0)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q4, #y3, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q7, #y5, v18)
           Atom imagerange(v12, #q7, v18)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #o5, v1)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v14, #q1, #y0, v19)
           Atom imagerange(v14, #q1, v19)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom imagevisible(v12, #q8, #y6, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q10, v8)
           Atom conf(v14, #q10)
           Atom above(v12, #q6, v8)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q11, #y7, v17)
           Atom imagerange(v12, #q11, v17)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom imagevisible(v14, #q5, #y4, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v7)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #t9, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, v15, #t12, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #t13, #q3)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q2, #t3, #q3)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #t5, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v14, v15, #t4, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q1, #t2, #q3)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, v13, #t11, #q7)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #t1, v13)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q7, #t10, #q4)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q6, #t8, #q4)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q4, #t6, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q0, #t7, #q4)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q6, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q0 v3 v16))
           ((sample_rock v12 #q6 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q10 v8 v16))
           ((sample_rock v14 #q9 v3 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t7 #q4))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #t1 v13))
           ((move v12 #q4 #t6 #q0))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t8 #q4))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t10 #q4))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t11 #q7))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t2 #q3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t3 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #t9 v15))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t13 #q3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q9))
           ((move v14 v15 #t4 #q1))
           ((move v14 v15 #t5 #q2))
           ((calibrate v12 #q11 #y7 v17 v10))
           ((calibrate v12 #q7 #y5 v18 v10))
           ((calibrate v12 #q8 #y6 v19 v10))
           ((calibrate v14 #q1 #y0 v19 v10))
           ((calibrate v14 #q2 #y1 v18 v10))
           ((calibrate v14 #q5 #y4 v17 v10))
           ((take_image v12 #q11 #y7 v17 v10 v11))
           ((take_image v12 #q7 #y5 v18 v10 v11))
           ((take_image v12 #q8 #y6 v19 v10 v11))
           ((take_image v14 #q1 #y0 v19 v10 v11))
           ((take_image v14 #q2 #y1 v18 v10 v11))
           ((take_image v14 #q5 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y3 v9 v1))
           ((send_analysis v12 #q4 #y3 v9 v4))
           ((send_analysis v12 #q4 #y3 v9 v5))
           ((send_analysis v12 #q4 #y3 v9 v7))
           ((send_analysis v12 #q4 #y3 v9 v3))
           ((send_analysis v12 #q4 #y3 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_image v12 #q4 #y3 v9 v17 v11))
           ((send_image v12 #q4 #y3 v9 v18 v11))
           ((send_image v12 #q4 #y3 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Fulfilling the Axiom: A Detailed Plan for the Rovers Domain**
           
           Okay, so I've been tasked with crafting a plan to achieve `new-axiom@0()` in the `rovers` domain. This axiom's a conjunction of several atoms, meaning I need to make *all* of them true. Let's break it down:
           
           First, I need to ensure the robots are in their specified configurations: `atconf(v12, v13)` and `atconf(v14, v15)`.  I'll need to remember that these are variables within the axiom definition, so the final plan should ensure the robots are in a configuration, not just at a fixed coordinate. Additionally, I need `free(v12, v16)` and `free(v14, v16)`, which refers to their store capacity, which I'll handle later. Also, I have a few `receivedimage` goals, which require me to get images from rovers v17, v18, and v19, and a set of analysis goals with receivedanalysis and type atoms for a stone and soil.
           
           **Imaging Plan:**
           
           The image-related goals require me to use the `send_image` action. The preconditions involve communication visibility (`comvisible`), image visibility (`imagevisible`), having the image (`haveimage`), being in the right mode (`mode`), being at the right configuration (`atconf`), and no blocked communication lines (`~blocked`). Getting `haveimage` means employing the `take_image` action, which needs the camera to be calibrated (`calibrated`) and onboard, and the rover to be visible to the object.  To calibrate, I use the `calibrate` action. I'll utilize rover `v14` for imaging, as I can plan all of this more efficiently.
           
           *   **Move & Calibrate:** I'll begin by moving `v14` to location q1 to take an image of `v19`, q2 for `v18`, and q5 for `v17`, followed by calibrating the camera (`v10`) at each location. I’ll make sure `v14` can communicate with the lander. The move action will depend on motion visibility.
           *   **Take & Send:** I'll then use `take_image` and, after that, I'll send the images using `send_image`. All the while, ensuring the `atconf` variable requirements are met.
           
           **Analysis & Logistics:**
           
           Once the images are out of the way, I have the analysis goals. Rover `v14` will analyze a stone (v3), and rover `v12` will analyze a soil (v8).
           
           *   **Move:** I'll move `v14` to q9, and `v12` to q6, to have the correct location visibility.
           *   **Sample:** I’ll use the `sample_rock` action to analyze the rock/soil, filling up the store `v16`.
           *   **Send:** Once the sampling is complete, I'll move back to the lander and send the analysis.
           *   **Drop Rock/Soil**: After sending, I will use `drop_rock` to ensure the final state of store v16 is free.
           
           **Final Touches & Configuration:**
           
           I have to move `v12` and `v14` back to their initial configurations to ensure their positions satisfy the `atconf` requirements of the axiom.
           
           *   **Re-Position:** After dropping rocks and soils, I will move `v14` back to `v15`, and v12 back to `v13`, making sure the initial conditions of the axiom are met.
           
           And that should be it! A solid plan to satisfy that axiom.
           
)

Model:     **Fulfilling the Axiom: A Detailed Plan for the Rovers Domain**
           
           Okay, so I've been tasked with crafting a plan to achieve `new-axiom@0()` in the `rovers` domain. This axiom's a conjunction of several atoms, meaning I need to make *all* of them true. Let's break it down:
           
           First, I need to ensure the robots are in their specified configurations: `atconf(v12, v13)` and `atconf(v14, v15)`.  I'll need to remember that these are variables within the axiom definition, so the final plan should ensure the robots are in a configuration, not just at a fixed coordinate. Additionally, I need `free(v12, v16)` and `free(v14, v16)`, which refers to their store capacity, which I'll handle later. Also, I have a few `receivedimage` goals, which require me to get images from rovers v17, v18, and v19, and a set of analysis goals with receivedanalysis and type atoms for a stone and soil.
           
           **Imaging Plan:**
           
           The image-related goals require me to use the `send_image` action. The preconditions involve communication visibility (`comvisible`), image visibility (`imagevisible`), having the image (`haveimage`), being in the right mode (`mode`), being at the right configuration (`atconf`), and no blocked communication lines (`~blocked`). Getting `haveimage` means employing the `take_image` action, which needs the camera to be calibrated (`calibrated`) and onboard, and the rover to be visible to the object.  To calibrate, I use the `calibrate` action. I'll utilize rover `v14` for imaging, as I can plan all of this more efficiently.
           
           *   **Move & Calibrate:** I'll begin by moving `v14` to location q1 to take an image of `v19`, q2 for `v18`, and q5 for `v17`, followed by calibrating the camera (`v10`) at each location. I’ll make sure `v14` can communicate with the lander. The move action will depend on motion visibility.
           *   **Take & Send:** I'll then use `take_image` and, after that, I'll send the images using `send_image`. All the while, ensuring the `atconf` variable requirements are met.
           
           **Analysis & Logistics:**
           
           Once the images are out of the way, I have the analysis goals. Rover `v14` will analyze a stone (v3), and rover `v12` will analyze a soil (v8).
           
           *   **Move:** I'll move `v14` to q9, and `v12` to q6, to have the correct location visibility.
           *   **Sample:** I’ll use the `sample_rock` action to analyze the rock/soil, filling up the store `v16`.
           *   **Send:** Once the sampling is complete, I'll move back to the lander and send the analysis.
           *   **Drop Rock/Soil**: After sending, I will use `drop_rock` to ensure the final state of store v16 is free.
           
           **Final Touches & Configuration:**
           
           I have to move `v12` and `v14` back to their initial configurations to ensure their positions satisfy the `atconf` requirements of the axiom.
           
           *   **Re-Position:** After dropping rocks and soils, I will move `v14` back to `v15`, and v12 back to `v13`, making sure the initial conditions of the axiom are met.
           
           And that should be it! A solid plan to satisfy that axiom.
           

