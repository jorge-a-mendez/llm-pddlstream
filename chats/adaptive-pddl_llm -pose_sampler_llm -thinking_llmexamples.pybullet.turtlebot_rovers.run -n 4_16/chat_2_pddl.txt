User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v17)
           Atom atconf(v12, v13)
           Atom rover(v14)
           Atom rock(v1)
           Atom type(v1, v2)
           Atom rover(v12)
           Atom objective(v19)
           Atom onboard(v10, v14)
           Atom rock(v3)
           Atom onboard(v10, v12)
           Atom rock(v8)
           Atom free(v14, v16)
           Atom supports(v10, v11)
           Atom conf(v12, v13)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom mode(v11)
           Atom camera(v10)
           Atom objective(v20)
           Atom rock(v7)
           Atom conf(v14, v15)
           Atom rock(v4)
           Atom rock(v5)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom type(v5, v6)
           Atom type(v8, v6)
           Atom type(v7, v6)
           Atom objective(v18)
           Atom store(v16)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q4, #y2, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #q0, v5)
           Atom conf(v12, #q0)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q2, v1)
           Atom conf(v12, #q2)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #q6, #y4, v20)
           Atom imagerange(v12, #q6, v20)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v12, #q3, #y1, v19)
           Atom imagerange(v12, #q3, v19)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom motion(v12, v13, #t5, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t3, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #t8, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #t0, v13)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q5, #t10, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, v13, #t4, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #t9, #q1)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q1, #t1, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #t6, #q1)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q1, #t2, #q2)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #t7, #q1)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q6, #t11, #q1)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o0, #o2, #o3)
           Atom motion(v14, v15, #o2, #o0)
           Atom motion(v14, #o3, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o0)
           Atom motion(v14, #o5, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o5)
           Atom motion(v14, #o0, #o2, v15)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v5 v16))
           ((sample_rock v12 #q2 v1 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t6 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #t0 v13))
           ((move v12 #q1 #t1 #q0))
           ((move v12 #q1 #t2 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t7 #q1))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t8 #q1))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t9 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t10 #q1))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t11 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t3 #q3))
           ((move v12 v13 #t4 #q4))
           ((move v12 v13 #t5 #q5))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #q3 #y1 v19 v10))
           ((calibrate v12 #q4 #y2 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v20 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q3 #y1 v19 v10 v11))
           ((take_image v12 #q4 #y2 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v20 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Comprehensive Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The objective is `new-axiom@0()`, a conjunction of several atomic conditions.  My primary focus is to ensure *all* these conditions are met at the conclusion of the plan.  The goal, as I understand it, involves sending images of certain objects and analyzing samples, all while adhering to specific constraints like rover locations and available resources.
           
           First, I observe that the initial state satisfies `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)`.  The challenge lies in satisfying the `receivedimage` and `receivedanalysis` conditions.
           
           **Image Acquisition and Transmission Plan**
           
           To satisfy the `receivedimage` conditions, the strategy involves the following:
           
           1.  **Identify Suitable Rovers:** I recognize that `v12` and `v14` are potential candidates for acquiring and transmitting images. Given the provided `imagevisible` and `comvisible` predicates, `v12` seems better suited to capture the images.
           
           2.  **Rover Positioning and Camera Calibration:**  I have to move `v12` to specific locations (`#q3`, `#q4`, `#q5`, `#q6`) where its camera has a clear line of sight to the desired objects (`v17`, `v18`, `v19`, `v20`) using the provided `move` action. The camera also needs to be calibrated at each location using the `calibrate` action.
           
           3.  **Image Capture and Transmission:** I will need to call `take_image` using the appropriate arguments to take the necessary images.  Then I will move the rover to the `comvisible` location `#q1` and send the images to `v9` using the `send_image` action. This will satisfy the `receivedimage` predicates for all four objectives. I will do each image in this order: `v17, v18, v19, v20`.
           
           **Analysis Acquisition and Transmission Plan**
           
           The next step is to meet the `receivedanalysis` conditions. This involves:
           
           1.  **Identifying Rocks:** I will send `v12` to rock `#q2` to analyze a stone (`v1`), and will send the same rover to `#q0` to analyze soil (`v5`).
           
           2.  **Resource Management:** I have to be aware of the `store` resource `v16`. Since I know that the `rover` has to be `free` at the end, I need to make sure to do the `drop_rock` appropriately.
           
           3.  **Sampling and Transmission:** I move `v12` to the correct location using `move`.  Then I `sample_rock`,  which sets `analyzed`, and makes the resource `full`.  I can then move to the `comvisible` location and `send_analysis` of the rock to the target destination. This satisfies `receivedanalysis` for the stone and the soil, and sets the rover `full`
           
           **Crucial Adjustments and Plan Refinement**
           
           Here's the detailed plan I've meticulously crafted to achieve `new-axiom@0()`:
           
           *   **Initial State:**
               *   `atconf(v12, v13)`
               *   `atconf(v14, v15)`
               *   `free(v12, v16)`
               *   `free(v14, v16)`
           
           *   **Move `v12` to image `v17` location**:
               *   `(move v12 v13 #t5 #q5)`
               *   `(calibrate v12 #q5 #y3 v17 v10)`
               *   `(take_image v12 #q5 #y3 v17 v10 v11)`
               *   `(move v12 #q5 #t10 #q1)`
               *   `(send_image v12 #q1 #y0 v9 v17 v11)`
           
           *   **Move `v12` to image `v18` location**:
               *   `(move v12 #q1 #o2 #q4)`
               *   `(calibrate v12 #q4 #y2 v18 v10)`
               *   `(take_image v12 #q4 #y2 v18 v10 v11)`
               *   `(move v12 #q4 #t9 #q1)`
               *   
)

Model:     **Comprehensive Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The objective is `new-axiom@0()`, a conjunction of several atomic conditions.  My primary focus is to ensure *all* these conditions are met at the conclusion of the plan.  The goal, as I understand it, involves sending images of certain objects and analyzing samples, all while adhering to specific constraints like rover locations and available resources.
           
           First, I observe that the initial state satisfies `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)`.  The challenge lies in satisfying the `receivedimage` and `receivedanalysis` conditions.
           
           **Image Acquisition and Transmission Plan**
           
           To satisfy the `receivedimage` conditions, the strategy involves the following:
           
           1.  **Identify Suitable Rovers:** I recognize that `v12` and `v14` are potential candidates for acquiring and transmitting images. Given the provided `imagevisible` and `comvisible` predicates, `v12` seems better suited to capture the images.
           
           2.  **Rover Positioning and Camera Calibration:**  I have to move `v12` to specific locations (`#q3`, `#q4`, `#q5`, `#q6`) where its camera has a clear line of sight to the desired objects (`v17`, `v18`, `v19`, `v20`) using the provided `move` action. The camera also needs to be calibrated at each location using the `calibrate` action.
           
           3.  **Image Capture and Transmission:** I will need to call `take_image` using the appropriate arguments to take the necessary images.  Then I will move the rover to the `comvisible` location `#q1` and send the images to `v9` using the `send_image` action. This will satisfy the `receivedimage` predicates for all four objectives. I will do each image in this order: `v17, v18, v19, v20`.
           
           **Analysis Acquisition and Transmission Plan**
           
           The next step is to meet the `receivedanalysis` conditions. This involves:
           
           1.  **Identifying Rocks:** I will send `v12` to rock `#q2` to analyze a stone (`v1`), and will send the same rover to `#q0` to analyze soil (`v5`).
           
           2.  **Resource Management:** I have to be aware of the `store` resource `v16`. Since I know that the `rover` has to be `free` at the end, I need to make sure to do the `drop_rock` appropriately.
           
           3.  **Sampling and Transmission:** I move `v12` to the correct location using `move`.  Then I `sample_rock`,  which sets `analyzed`, and makes the resource `full`.  I can then move to the `comvisible` location and `send_analysis` of the rock to the target destination. This satisfies `receivedanalysis` for the stone and the soil, and sets the rover `full`
           
           **Crucial Adjustments and Plan Refinement**
           
           Here's the detailed plan I've meticulously crafted to achieve `new-axiom@0()`:
           
           *   **Initial State:**
               *   `atconf(v12, v13)`
               *   `atconf(v14, v15)`
               *   `free(v12, v16)`
               *   `free(v14, v16)`
           
           *   **Move `v12` to image `v17` location**:
               *   `(move v12 v13 #t5 #q5)`
               *   `(calibrate v12 #q5 #y3 v17 v10)`
               *   `(take_image v12 #q5 #y3 v17 v10 v11)`
               *   `(move v12 #q5 #t10 #q1)`
               *   `(send_image v12 #q1 #y0 v9 v17 v11)`
           
           *   **Move `v12` to image `v18` location**:
               *   `(move v12 #q1 #o2 #q4)`
               *   `(calibrate v12 #q4 #y2 v18 v10)`
               *   `(take_image v12 #q4 #y2 v18 v10 v11)`
               *   `(move v12 #q4 #t9 #q1)`
               *   

