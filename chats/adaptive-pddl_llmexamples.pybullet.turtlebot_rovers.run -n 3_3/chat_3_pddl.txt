User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom store(v16)
           Atom objective(v18)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom lander(v9)
           Atom rock(v7)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom atconf(v12, v13)
           Atom conf(v14, v15)
           Atom free(v12, v16)
           Atom rover(v12)
           Atom camera(v10)
           Atom rock(v8)
           Atom atconf(v14, v15)
           Atom type(v8, v6)
           Atom rock(v5)
           Atom rock(v3)
           Atom free(v14, v16)
           Atom type(v7, v6)
           Atom objective(v17)
           Atom type(v3, v2)
           Atom type(v4, v2)
           Atom conf(v12, v13)
           Atom rock(v1)
           Atom supports(v10, v11)
           Atom objective(v19)
           Atom type(v5, v6)
           Atom type(v1, v2)
           Atom rock(v4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q5, v5)
           Atom conf(v12, #q5)
           Atom imagevisible(v12, #q3, #y2, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #q4, #y3, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #o5, v8)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v12, #o5, v3)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #q6, v5)
           Atom conf(v14, #q6)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v8)
           Atom comvisible(v14, #q7, #y4, v9)
           Atom comrange(v14, #q7, v9)
           Atom conf(v14, #q7)
           Atom ray(#y4)
           Atom above(v14, #o5, v7)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t1, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, v13, #t2, #q3)
           Atom motion(v12, #q2, #t13, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q3, #t9, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v14, #q7, #t12, v15)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q3, #t7, #q0)
           Atom motion(v12, #q0, #t5, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #t4, #q5)
           Atom motion(v12, #q0, #t3, #q1)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q4, #t8, #q0)
           Atom motion(v12, #q2, #t6, #q0)
           Atom motion(v12, #q1, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v14, v15, #t10, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #t11, #q7)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, v13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q5 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q6 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #t3 #q1))
           ((move v12 #q0 #t4 #q5))
           ((move v12 #q0 #t5 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q0))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t13 #q3))
           ((move v12 #q2 #t6 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t7 #q0))
           ((move v12 #q3 #t9 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t8 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q2))
           ((move v12 v13 #t2 #q3))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t11 #q7))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #t12 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q6))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v12 #q3 #y2 v18 v10))
           ((calibrate v12 #q4 #y3 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v12 #q3 #y2 v18 v10 v11))
           ((take_image v12 #q4 #y3 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q7 #y4 v9 v1))
           ((send_analysis v14 #q7 #y4 v9 v3))
           ((send_analysis v14 #q7 #y4 v9 v4))
           ((send_analysis v14 #q7 #y4 v9 v7))
           ((send_analysis v14 #q7 #y4 v9 v8))
           ((send_analysis v14 #q7 #y4 v9 v5))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q7 #y4 v9 v17 v11))
           ((send_image v14 #q7 #y4 v9 v18 v11))
           ((send_image v14 #q7 #y4 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to satisfy `new-axiom@0()`. This axiom requires several conditions to be met, specifically:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `type(?stone, v2)` (implicit existential quantifier for `?stone`)
           - `receivedanalysis(?stone)`
           - `type(?soil, v6)` (implicit existential quantifier for `?soil`)
           - `receivedanalysis(?soil)`
           
           Let's check the initial state:
           - `atconf(v12, v13)` is true.
           - `atconf(v14, v15)` is true.
           - `free(v12, v16)` is true.
           - `free(v14, v16)` is true.
           
           So, the remaining conditions are:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedanalysis(?stone)` for a rock of type `v2`
           - `receivedanalysis(?soil)` for a rock of type `v6`
           
           We have rocks of type `v2` (v1, v3, v4) and type `v6` (v5, v7, v8).
           
           To achieve `receivedimage`, we need to `calibrate`, `take_image`, and then `send_image`.
           To achieve `receivedanalysis`, we need to `sample_rock` and then `send_analysis`.
           
           Let's plan for `v17`, `v18`, `v19` images and `v2`, `v6` rock analyses.
           
           For `v17`, `v18`, `v19` images:
           Rover `v12` can take images of `v17`, `v18`, `v19` at different configurations. Let's use `v12` since it's already at `v13` and has a camera `v10`.
           - To get `receivedimage(v17, v11)`:
               - Calibrate `v12` at `q2` for `v17` using camera `v10`. (precondition `imagevisible(v12, #q2, #y1, v17)`)
               - Move `v12` to `#q2` if not already there.
               - Take image of `v17` at `q2`. (precondition `calibrated(v10, v12)`)
               - Move `v12` to `q0` (where `comvisible` is true for `v9`)
               - Send image `v17`.
           - To get `receivedimage(v18, v11)`:
               - Calibrate `v12` at `q3` for `v18` using camera `v10`. (precondition `imagevisible(v12, #q3, #y2, v18)`)
               - Move `v12` to `#q3` if not already there.
               - Take image of `v18` at `q3`. (precondition `calibrated(v10, v12)`)
               - Move `v12` to `q0` (where `comvisible` is true for `v9`)
               - Send image `v18`.
           - To get `receivedimage(v19, v11)`:
               - Calibrate `v12` at `q4` for `v19` using camera `v10`. (precondition `imagevisible(v12, #q4, #y3, v19)`)
               - Move `v12` to `#q4` if not already there.
               - Take image of `v19` at `q4`. (precondition `calibrated(v10, v12)`)
               - Move `v12` to `q0` (where `comvisible` is true for `v9`)
               - Send image `v19`.
           
           We need to ensure `calibrated(v10, v12)` is true when `take_image` is called. The `calibrate` action makes it true, but `take_image` negates it. So we need to recalibrate for each image. This is efficient if we do all calibrations and then all image takes and then move to a single configuration for sending all images.
           
           For `v2` rock analysis:
           We need to find a rock of type `v2`. Let's pick `v1`.
           - `sample_rock(v12, #q1, v1, v16)` is an option.
               - Move `v12` to `#q1`.
               - Sample rock `v1`. (precondition `above(v12, #q1, v1)`, `free(v12, v16)`)
               - Move `v12` to `q0` (where `comvisible` is true for `v9`).
               - Send analysis for `v1`.
           
           For `v6` rock analysis:
           We need to find a rock of type `v6`. Let's pick `v5`.
           - `sample_rock(v12, #q5, v5, v16)` is an option.
               - Move `v12` to `#q5`.
               - Sample rock `v5`. (precondition `above(v12, #q5, v5)`, `free(v12, v16)`). Note `sample_rock` makes `full(v12, v16)` and negates `free(v12, v16)`. After sampling `v1`, we need to drop it or use another rover. Since `v12` has a store and `free(v12, v16)` is initial, `sample_rock` would make it `full`. The goal requires `free(v12, v16)` and `free(v14, v16)` at the end, which means if we sample with `v12`, we must drop the rock later.
               Alternatively, we can use `v14` for the second rock analysis if `v12` gets `full`. `free(v14, v16)` is also true initially. Let's use `v14` for the second rock.
           - Pick `v5` (type `v6`) for `v14`.
               - `move v14 v15 #t10 #q6`
               - `sample_rock v14 #q6 v5 v16`
               - `move v14 #q6 #t11 #q7`
               - `send_analysis v14 #q7 #y4 v9 v5`
           
           Let's refine the plan to keep the `free` predicate true at the end and minimize moves.
           The `new-axiom@0()` doesn't require `atconf` to be `v13` or `v15` specifically, just that the predicate holds for some configuration. But the initial state defines `atconf(v12, v13)` and `atconf(v14, v15)`, and it implies these must hold at the end. So we need to return to these configurations.
           
           However, the goal is just `new-axiom@0()`, which only requires the current state of `atconf(v12,v13)` and `atconf(v14,v15)` to be true, not that it is specifically the final location of the rover. If the rover moves, `atconf` will change. The axiom simply states that those `atconf` facts should be true at the time the goal is checked, which they are initially. Therefore, the interpretation of `atconf` is that the rover is *currently* at a certain configuration. Moving the rover will change its `atconf` predicate. So, the plan needs to either ensure the rovers end up at `v13` and `v15` respectively, or the goal implies the initial configuration is sufficient. Given the formulation, it seems `atconf(v12, v13)` and `atconf(v14, v15)` are meant to be true at the final state. So, after completing tasks, the rovers should return to `v13` and `v15` respectively.
           
           Let's use rover `v12` for all image tasks and one rock analysis (type `v2`), and rover `v14` for the second rock analysis (type `v6`).
           
           Rover `v12` operations:
           1. Calibrate for `v17` at `#q2`.
           2. Take image `v17` at `#q2`. `calibrated` becomes false.
           3. Calibrate for `v18` at `#q3`.
           4. Take image `v18` at `#q3`. `calibrated` becomes false.
           5. Calibrate for `v19` at `#q4`.
           6. Take image `v19` at `#q4`. `calibrated` becomes false.
           7. Move to `#q1` to sample rock `v1` (type `v2`).
           8. Sample rock `v1`. `free(v12, v16)` becomes false, `full(v12, v16)` becomes true.
           9. Move to `#q0` to send all data.
           10. Send image `v17`.
           11. Send image `v18`.
           12. Send image `v19`.
           13. Send analysis for `v1`.
           14. Drop rock `v1` to make `free(v12, v16)` true again.
           15. Return `v12` to `v13`.
           
           Rover `v14` operations:
           1. Move to `#q6` to sample rock `v5` (type `v6`).
           2. Sample rock `v5`. `free(v14, v16)` becomes false, `full(v14, v16)` becomes true.
           3. Move to `#q7` to send analysis.
           4. Send analysis for `v5`.
           5. Drop rock `v5` to make `free(v14, v16)` true again.
           6. Return `v14` to `v15`.
           
           Let's trace the actual action sequence to minimize movement and ensure preconditions.
           
           Initial state for `v12`: `atconf(v12, v13)`, `free(v12, v16)`.
           Initial state for `v14`: `atconf(v14, v15)`, `free(v14, v16)`.
           
           Plan:
           
           1.  **Rover v12: Handle Images and one Rock Analysis (type v2)**
               *   Move v12 from `v13` to `#q2` for `v17`.
                   `(move v12 v13 #t1 #q2)`
               *   Calibrate `v10` for `v17` at `#q2`.
                   `(calibrate v12 #q2 #y1 v17 v10)`
               *   Take image `v17`. `calibrated(v10, v12)` becomes false.
                   `(take_image v12 #q2 #y1 v17 v10 v11)`
               *   Move v12 from `#q2` to `#q3` for `v18`.
                   `(move v12 #q2 #t13 #q3)`
               *   Calibrate `v10` for `v18` at `#q3`.
                   `(calibrate v12 #q3 #y2 v18 v10)`
               *   Take image `v18`.
                   `(take_image v12 #q3 #y2 v18 v10 v11)`
               *   Move v12 from `#q3` to `#q4` for `v19`.
                   `(move v12 #q3 #t9 #q4)`
               *   Calibrate `v10` for `v19` at `#q4`.
                   `(calibrate v12 #q4 #y3 v19 v10)`
               *   Take image `v19`.
                   `(take_image v12 #q4 #y3 v19 v10 v11)`
               *   Move v12 from `#q4` to `#q1` for sampling rock `v1` (type `v2`).
                   `(move v12 #q4 #o2 #q1)` (Note: Direct move from q4 to q1 exists)
               *   Sample rock `v1` (type `v2`). `free(v12, v16)` becomes `full(v12, v16)`.
                   `(sample_rock v12 #q1 v1 v16)`
               *   Move v12 from `#q1` to `#q0` for communication.
                   `(move v12 #q1 #t0 #q0)`
               *   Send images.
                   `(send_image v12 #q0 #y0 v9 v17 v11)`
                   `(send_image v12 #q0 #y0 v9 v18 v11)`
                   `(send_image v12 #q0 #y0 v9 v19 v11)`
               *   Send analysis for rock `v1`.
                   `(send_analysis v12 #q0 #y0 v9 v1)`
               *   Drop the rock `v1`. `full(v12, v16)` becomes `free(v12, v16)`.
                   `(drop_rock v12 v16)`
               *   Move v12 from `#q0` back to `v13`.
                   `(move v12 #q0 #t5 v13)`
           
           2.  **Rover v14: Handle second Rock Analysis (type v6)**
               *   Move v14 from `v15` to `#q6` for sampling rock `v5` (type `v6`).
                   `(move v14 v15 #t10 #q6)`
               *   Sample rock `v5` (type `v6`). `free(v14, v16)` becomes `full(v14, v16)`.
                   `(sample_rock v14 #q6 v5 v16)`
               *   Move v14 from `#q6` to `#q7` for communication.
                   `(move v14 #q6 #t11 #q7)`
               *   Send analysis for rock `v5`.
                   `(send_analysis v14 #q7 #y4 v9 v5)`
               *   Drop the rock `v5`. `full(v14, v16)` becomes `free(v14, v16)`.
                   `(drop_rock v14 v16)`
               *   Move v14 from `#q7` back to `v15`.
                   `(move v14 #q7 #t12 v15)`
           
           All conditions in `new-axiom@0()` will be met with this plan. The initial `atconf` and `free` predicates are restored or kept. `receivedimage` for `v17, v18, v19` are achieved. `receivedanalysis` for a rock of type `v2` (rock `v1`) and type `v6` (rock `v5`) are achieved.
           
           --Plan--:
           (move v12 v13 #t1 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t13 #q3)
           (calibrate v12 #q3 #y2 v18 v10)
           (take_image v12 #q3 #y2 v18 v10 v11)
           (move v12 #q3 #t9 #q4)
           (calibrate v12 #q4 #y3 v19 v10)
           (take_image v12 #q4 #y3 v19 v10 v11)
           (move v12 #q4 #o2 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t0 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_analysis v12 #q0 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q0 #t5 v13)
           (move v14 v15 #t10 #q6)
           (sample_rock v14 #q6 v5 v16)
           (move v14 #q6 #t11 #q7)
           (send_analysis v14 #q7 #y4 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q7 #t12 v15)

