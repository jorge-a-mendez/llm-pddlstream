User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom store(v16)
           Atom objective(v18)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom lander(v9)
           Atom rock(v7)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom atconf(v12, v13)
           Atom conf(v14, v15)
           Atom free(v12, v16)
           Atom rover(v12)
           Atom camera(v10)
           Atom rock(v8)
           Atom atconf(v14, v15)
           Atom type(v8, v6)
           Atom rock(v5)
           Atom rock(v3)
           Atom free(v14, v16)
           Atom type(v7, v6)
           Atom objective(v17)
           Atom type(v3, v2)
           Atom type(v4, v2)
           Atom conf(v12, v13)
           Atom rock(v1)
           Atom supports(v10, v11)
           Atom objective(v19)
           Atom type(v5, v6)
           Atom type(v1, v2)
           Atom rock(v4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #q5, v5)
           Atom conf(v12, #q5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #q3, #y2, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom imagevisible(v12, #q4, #y3, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #o5, v4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #q6, v5)
           Atom conf(v14, #q6)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v7)
           Atom comvisible(v14, #q7, #y4, v9)
           Atom comrange(v14, #q7, v9)
           Atom conf(v14, #q7)
           Atom ray(#y4)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v8)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #t1, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #t12, v15)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #t14, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #t3, #q1)
           Atom motion(v12, #q4, #t8, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q1, #t0, #q0)
           Atom motion(v12, #q0, #t4, #q5)
           Atom motion(v12, #q2, #t6, #q0)
           Atom motion(v12, #q0, #t5, v13)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #t11, #q7)
           Atom motion(v14, v15, #t10, #q6)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v12, #q3, #t7, #q0)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q2, #t13, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, v13, #t2, #q3)
           Atom motion(v12, #q3, #t9, #q4)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q7, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q5 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q6 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #t3 #q1))
           ((move v12 #q0 #t4 #q5))
           ((move v12 #q0 #t5 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q0))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t13 #q3))
           ((move v12 #q2 #t6 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t7 #q0))
           ((move v12 #q3 #t9 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t14 #q1))
           ((move v12 #q4 #t8 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q2))
           ((move v12 v13 #t2 #q3))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t11 #q7))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #t12 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q6))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v12 #q3 #y2 v18 v10))
           ((calibrate v12 #q4 #y3 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v12 #q3 #y2 v18 v10 v11))
           ((take_image v12 #q4 #y3 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q7 #y4 v9 v1))
           ((send_analysis v14 #q7 #y4 v9 v3))
           ((send_analysis v14 #q7 #y4 v9 v4))
           ((send_analysis v14 #q7 #y4 v9 v7))
           ((send_analysis v14 #q7 #y4 v9 v8))
           ((send_analysis v14 #q7 #y4 v9 v5))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q7 #y4 v9 v17 v11))
           ((send_image v14 #q7 #y4 v9 v18 v11))
           ((send_image v14 #q7 #y4 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), and a storage unit (v16). There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19). The goal is to achieve 'new-axiom@0()', which requires `receivedimage` for v17, v18, and v19 (with mode v11), `receivedanalysis` for rocks v7 (type v6) and v3 (type v2), and `free` store v16 for both rovers, while they are at their respective initial configurations.
           
           Looking at the initial state:
           - Both rovers v12 and v14 are at their initial configurations (v13 and v15 respectively) and have free storage (v16).
           - The camera v10 is onboard both rovers and supports mode v11.
           - There are objectives v17, v18, v19 and rocks v1, v3, v4, v5, v7, v8.
           - Rocks v3, v4, v1 are of type v2.
           - Rocks v7, v5, v8 are of type v6.
           
           To achieve `receivedimage` for v17, v18, v19:
           1. Calibrate a camera.
           2. Take images of the objectives.
           3. Send the images to the lander.
           
           To achieve `receivedanalysis` for v7 (type v6) and v3 (type v2):
           1. Sample the rocks.
           2. Send the analysis to the lander.
           
           Since both rovers are initially at their `atconf` positions, and have free stores, we can perform these tasks. Rover v12 can observe v17, v18, v19 at different configurations. Rover v14 can also observe v17, v18, v19 at the same configuration #o3. Since the goal requires the `receivedimage` for v17, v18, and v19, it's efficient to use one rover to take all images. Rover v12 has various configurations from which it can observe all three objectives. It also has communication visibility from #q0.
           
           For rock analysis:
           - Rock v7 (type v6) is above v12 at #o5.
           - Rock v3 (type v2) is also above v12 at #o5.
           - Rover v12 can send analysis from #q0.
           
           Let's plan to use rover v12 for imaging all objectives and analyzing the required rocks.
           
           --Plan--:
           (calibrate v12 #q3 #y2 v18 v10)
           (take_image v12 #q3 #y2 v18 v10 v11)
           (move v12 #q3 #t9 #q4)
           (calibrate v12 #q4 #y3 v19 v10)
           (take_image v12 #q4 #y3 v19 v10 v11)
           (move v12 #q4 #o2 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t6 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t5 v13)
           (move v12 v13 #o2 #o5)
           (sample_rock v12 #o5 v7 v16)
           (sample_rock v12 #o5 v3 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v7)
           (send_analysis v12 #q0 #y0 v9 v3)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. Let's re-examine the goal `new-axiom@0()`. This axiom is satisfied when:
           - `atconf(v12, v13)` and `atconf(v14, v15)` are true (rovers are at their initial positions).
           - `free(v12, v16)` and `free(v14, v16)` are true (both rovers have free stores).
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)` are true (all three objectives have images received).
           - `type(?stone, v2)` and `receivedanalysis(?stone)` are true (a rock of type v2 has analysis received).
           - `type(?soil, v6)` and `receivedanalysis(?soil)` are true (a rock of type v6 has analysis received).
           
           My previous plan only addressed specific rocks v3 (type v2) and v7 (type v6) for analysis, but the axiom states `type(?stone, v2)` and `type(?soil, v6)`, which means *any* rock of type v2 and *any* rock of type v6.
           
           Initial state already provides:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `type(v3, v2)` and `type(v4, v2)` and `type(v1, v2)` (rocks of type v2)
           - `type(v7, v6)` and `type(v5, v6)` and `type(v8, v6)` (rocks of type v6)
           
           Therefore, the main tasks are to:
           1. Get `receivedimage` for v17, v18, v19 (using v11 mode).
           2. Get `receivedanalysis` for one rock of type v2 (e.g., v3).
           3. Get `receivedanalysis` for one rock of type v6 (e.g., v7).
           4. Ensure both rovers are at their initial configurations and have free stores at the end.
           
           Let's use rover v12 for all image tasks and rock sampling/analysis.
           Rover v12 is initially at `v13`.
           - To image v18: move to #q3, calibrate, take image.
           - To image v19: move to #q4, calibrate, take image.
           - To image v17: move to #q2, calibrate, take image.
           - To send images: move to #q0.
           - To sample rocks v3 and v7: move to #o5.
           - To send analysis: move to #q0.
           - Return v12 to v13.
           
           The critical part is ensuring `atconf(v12, v13)` and `atconf(v14, v15)` and `free(v12, v16)` and `free(v14, v16)` are true *at the end of the plan*.
           My previous plan did `drop_rock v12 v16` at the end, which satisfies `free(v12, v16)`. Rover v14 is undisturbed, so `atconf(v14, v15)` and `free(v14, v16)` remain true. The last move for v12 needs to be back to `v13`.
           
           Revised Plan:
           1. Calibrate camera for v12 and take images of v18, v19, v17.
           2. Move v12 to #q0 to send images.
           3. Move v12 to #o5 to sample rocks v3 and v7.
           4. Move v12 to #q0 to send analysis.
           5. Drop rocks to free storage.
           6. Move v12 back to v13.
           
           --Plan--:
           (calibrate v12 #q3 #y2 v18 v10)
           (take_image v12 #q3 #y2 v18 v10 v11)
           (move v12 #q3 #t9 #q4)
           (calibrate v12 #q4 #y3 v19 v10)
           (take_image v12 #q4 #y3 v19 v10 v11)
           (move v12 #q4 #o2 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t6 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (sample_rock v12 #o5 v7 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (send_analysis v12 #q0 #y0 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q0 #t5 v13)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q3) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies for the previous error. The issue was that Rover v12 was not at `#q3` when trying to `calibrate`. Rover v12 starts at `v13`. I need to explicitly move the rover to the correct configuration before attempting to perform actions at that configuration.
           
           Let's refine the plan, ensuring each `move` action correctly sets the `atconf` predicate for subsequent actions.
           
           The goal is `new-axiom@0()`, which requires:
           - `atconf(v12, v13)` and `atconf(v14, v15)` (final positions of rovers).
           - `free(v12, v16)` and `free(v14, v16)` (final state of rover stores).
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)` (images received).
           - `receivedanalysis(?stone)` for a rock of `type(stone, v2)`. I'll use v3.
           - `receivedanalysis(?soil)` for a rock of `type(soil, v6)`. I'll use v7.
           
           Initial State confirms:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `type(v3, v2)`
           - `type(v7, v6)`
           
           Plan steps:
           1. **Move v12 to #q3** (for v18 image).
           2. Calibrate camera and take image of v18.
           3. **Move v12 to #q4** (for v19 image).
           4. Calibrate camera and take image of v19.
           5. **Move v12 to #q2** (for v17 image).
           6. Calibrate camera and take image of v17.
           7. **Move v12 to #q0** (for sending images).
           8. Send images of v18, v19, v17.
           9. **Move v12 to #o5** (for sampling rocks).
           10. Sample rocks v3 and v7.
           11. **Move v12 to #q0** (for sending analysis).
           12. Send analysis for v3 and v7.
           13. Drop rocks to free storage v16.
           14. **Move v12 back to v13** to satisfy final `atconf` requirement.
           
           --Plan--:
           (move v12 v13 #t2 #q3)
           (calibrate v12 #q3 #y2 v18 v10)
           (take_image v12 #q3 #y2 v18 v10 v11)
           (move v12 #q3 #t9 #q4)
           (calibrate v12 #q4 #y3 v19 v10)
           (take_image v12 #q4 #y3 v19 v10 v11)
           (move v12 #q4 #o2 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t6 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (sample_rock v12 #o5 v7 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (send_analysis v12 #q0 #y0 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q0 #t5 v13)

