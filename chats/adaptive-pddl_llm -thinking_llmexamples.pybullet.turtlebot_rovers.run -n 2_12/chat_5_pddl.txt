User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v14, v16)
           Atom atconf(v14, v15)
           Atom objective(v17)
           Atom rover(v14)
           Atom camera(v10)
           Atom store(v16)
           Atom mode(v11)
           Atom type(v8, v6)
           Atom rock(v4)
           Atom conf(v14, v15)
           Atom supports(v10, v11)
           Atom type(v1, v2)
           Atom rock(v3)
           Atom type(v4, v2)
           Atom conf(v12, v13)
           Atom rover(v12)
           Atom type(v3, v2)
           Atom type(v5, v6)
           Atom atconf(v12, v13)
           Atom objective(v18)
           Atom rock(v1)
           Atom onboard(v10, v14)
           Atom rock(v5)
           Atom rock(v8)
           Atom free(v12, v16)
           Atom rock(v7)
           Atom lander(v9)
           Atom onboard(v10, v12)
           Atom type(v7, v6)
           Atom above(v12, #q2, v1)
           Atom conf(v12, #q2)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom comvisible(v12, #q4, #y2, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q3, v8)
           Atom conf(v12, #q3)
           Atom above(v12, #o5, v3)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v7)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v1)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q5, #y3, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t4, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t5, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v14, v15, #t1, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q5, #t19, #q0)
           Atom motion(v14, v15, #t8, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #t7, v13)
           Atom motion(v12, #q4, #t11, #q3)
           Atom motion(v12, #q2, #t2, #q4)
           Atom motion(v12, #q4, #t13, #q2)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q3, #t3, #q4)
           Atom motion(v12, v13, #t12, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #t16, #q4)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #t17, #q4)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q2, #t18, #q8)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q7, #t14, #q1)
           Atom motion(v14, #q1, #t15, #q7)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q1, #t10, #q0)
           Atom motion(v14, #q1, #t6, v15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q5, #t9, #q1)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v12, #o3, #o2, #q3)
           Atom motion(v12, #q4, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q8)
           Atom motion(v12, #o3, #o2, #q2)
           Atom motion(v12, #q8, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q4)
           Atom motion(v12, #q6, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #q2, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q6)
           Atom motion(v12, #q3, #o2, #o3)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q6, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q2 v1 v16))
           ((sample_rock v12 #q3 v8 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q2))
           ((move v12 #o3 #o2 #q3))
           ((move v12 #o3 #o2 #q4))
           ((move v12 #o3 #o2 #q6))
           ((move v12 #o3 #o2 #q8))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q2 #o2 #o3))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t18 #q8))
           ((move v12 #q2 #t2 #q4))
           ((move v12 #q3 #o2 #o3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t3 #q4))
           ((move v12 #q4 #o2 #o3))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #t11 #q3))
           ((move v12 #q4 #t13 #q2))
           ((move v12 #q4 #t7 v13))
           ((move v12 #q6 #o2 #o3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t16 #q4))
           ((move v12 #q8 #o2 #o3))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t17 #q4))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t12 #q6))
           ((move v12 v13 #t4 #q2))
           ((move v12 v13 #t5 #q3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #t10 #q0))
           ((move v14 #q1 #t15 #q7))
           ((move v14 #q1 #t6 v15))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t19 #q0))
           ((move v14 #q5 #t9 #q1))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t14 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((move v14 v15 #t8 #q5))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q5 #y3 v17 v10))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q5 #y3 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Okay, here's my plan to achieve `new-axiom@0()` in the `rovers` domain.**  I'll break it down into a clear sequence of actions, and I'm confident this will work. First, I'll need to use two rovers, `v12` and `v14`, and I'll have them work in parallel, since each can handle half of the goals, specifically, the imaging and analysis components of the axiom.
           
           **Initial Conditions:** The initial state gives us a solid foundation. Both rovers are at their starting locations (`atconf(v12, v13)` and `atconf(v14, v15)`), their stores are empty (`free(v12, v16)` and `free(v14, v16)`), and the relevant communication channels are open (no initial `blocked` rays). We have two cameras onboard, supported by their respective mode.
           
           **Decomposition of the goal:** The `new-axiom@0()` requires us to achieve the following:
           
           1.  **Image Reception:** Secure two received images: `receivedimage(v17, v11)` and `receivedimage(v18, v11)`.
           2.  **Analysis Reception:** Ensure we receive two analyses: one for a stone and one for soil.
           
           **My Strategy:** I'm going to split the workload between the rovers:
           
           *   **Rover `v12`:** Focuses on the objective of capturing an image of `v17` and sending it and also on analyzing a stone, `v1`.
           *   **Rover `v14`:** Focuses on the objective of capturing an image of `v18` and sending it and on analyzing soil, specifically `v5`.
           
           **Here's the detailed plan I've developed:**
           
           **Rover `v12`'s Steps:**
           
           1.  **Move to Image Location:** `move v12 v13 #t12 #q6` (Move to the location needed to image `v17`)
           2.  **Calibrate the Camera:** `calibrate v12 #q6 #y4 v17 v10`
           3.  **Take the Image:** `take_image v12 #q6 #y4 v17 v10 v11`
           4.  **Move to Rock Location:** `move v12 #q6 #o2 #q2` (Move to the location of a stone `v1`)
           5.  **Sample the Stone:** `sample_rock v12 #q2 v1 v16` (Take a sample of the stone and store it)
           6.  **Move to Communication location:** `move v12 #q2 #t2 #q4` (Get to a point to send data)
           7.  **Send the Image:** `send_image v12 #q4 #y2 v9 v17 v11`
           8.  **Send the Analysis:** `send_analysis v12 #q4 #y2 v9 v1`
           9.  **Drop the Rock:** `drop_rock v12 v16` (to fulfill the condition of the axiom and free up the rover)
           10. **Move to initial location:** `move v12 #q4 #t7 v13` (to fulfill the condition of the axiom)
           
           **Rover `v14`'s Steps:**
           
           1.  **Move to Image Location:** `move v14 v15 #t1 #q0` (Move to the location to image `v18`)
           2.  **Calibrate the Camera:** `calibrate v14 #q0 #y0 v18 v10`
           3.  **Take the Image:** `take_image v14 #q0 #y0 v18 v10 v11`
           4.  **Move to Rock Location:** `move v14 #q0 #o2 #q7` (Move to a soil location, `v5`)
           5.  **Sample the Soil:** `sample_rock v14 #q7 v5 v16` (Take a sample of the soil and store it)
           6.  **Move to Communication location:** `move v14 #q7 #t14 #q1` (Get to a point to send data)
           7.  **Send the Image:** `send_image v14 #q1 #y1 v9 v18 v11`
           8.  **Send the Analysis:** `send_analysis v14 #q1 #y1 v9 v5`
           9.  **Drop the Rock
)

Model:     **Okay, here's my plan to achieve `new-axiom@0()` in the `rovers` domain.**  I'll break it down into a clear sequence of actions, and I'm confident this will work. First, I'll need to use two rovers, `v12` and `v14`, and I'll have them work in parallel, since each can handle half of the goals, specifically, the imaging and analysis components of the axiom.
           
           **Initial Conditions:** The initial state gives us a solid foundation. Both rovers are at their starting locations (`atconf(v12, v13)` and `atconf(v14, v15)`), their stores are empty (`free(v12, v16)` and `free(v14, v16)`), and the relevant communication channels are open (no initial `blocked` rays). We have two cameras onboard, supported by their respective mode.
           
           **Decomposition of the goal:** The `new-axiom@0()` requires us to achieve the following:
           
           1.  **Image Reception:** Secure two received images: `receivedimage(v17, v11)` and `receivedimage(v18, v11)`.
           2.  **Analysis Reception:** Ensure we receive two analyses: one for a stone and one for soil.
           
           **My Strategy:** I'm going to split the workload between the rovers:
           
           *   **Rover `v12`:** Focuses on the objective of capturing an image of `v17` and sending it and also on analyzing a stone, `v1`.
           *   **Rover `v14`:** Focuses on the objective of capturing an image of `v18` and sending it and on analyzing soil, specifically `v5`.
           
           **Here's the detailed plan I've developed:**
           
           **Rover `v12`'s Steps:**
           
           1.  **Move to Image Location:** `move v12 v13 #t12 #q6` (Move to the location needed to image `v17`)
           2.  **Calibrate the Camera:** `calibrate v12 #q6 #y4 v17 v10`
           3.  **Take the Image:** `take_image v12 #q6 #y4 v17 v10 v11`
           4.  **Move to Rock Location:** `move v12 #q6 #o2 #q2` (Move to the location of a stone `v1`)
           5.  **Sample the Stone:** `sample_rock v12 #q2 v1 v16` (Take a sample of the stone and store it)
           6.  **Move to Communication location:** `move v12 #q2 #t2 #q4` (Get to a point to send data)
           7.  **Send the Image:** `send_image v12 #q4 #y2 v9 v17 v11`
           8.  **Send the Analysis:** `send_analysis v12 #q4 #y2 v9 v1`
           9.  **Drop the Rock:** `drop_rock v12 v16` (to fulfill the condition of the axiom and free up the rover)
           10. **Move to initial location:** `move v12 #q4 #t7 v13` (to fulfill the condition of the axiom)
           
           **Rover `v14`'s Steps:**
           
           1.  **Move to Image Location:** `move v14 v15 #t1 #q0` (Move to the location to image `v18`)
           2.  **Calibrate the Camera:** `calibrate v14 #q0 #y0 v18 v10`
           3.  **Take the Image:** `take_image v14 #q0 #y0 v18 v10 v11`
           4.  **Move to Rock Location:** `move v14 #q0 #o2 #q7` (Move to a soil location, `v5`)
           5.  **Sample the Soil:** `sample_rock v14 #q7 v5 v16` (Take a sample of the soil and store it)
           6.  **Move to Communication location:** `move v14 #q7 #t14 #q1` (Get to a point to send data)
           7.  **Send the Image:** `send_image v14 #q1 #y1 v9 v18 v11`
           8.  **Send the Analysis:** `send_analysis v14 #q1 #y1 v9 v5`
           9.  **Drop the Rock

