User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v43: object
           v44: object
           v45: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p10 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object v13 is a pose with position (-0.081, -0.232, 0.781) and quaternion (0.0, 0.0, 0.045, 0.999).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           Object v15 is a pose with position (0.205, 0.258, 0.781) and quaternion (0.0, 0.0, 0.989, 0.145).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p8 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v9 is a pose with position (0.14, 0.532, 0.781) and quaternion (0.0, 0.0, -0.076, 0.997).
           Object p12 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v14, p11)
           Atom ataconf(v6, v7)
           Atom stackable(v12, v10)
           Atom handempty(v4)
           Atom handempty(v6)
           Atom bconf(v3)
           Atom supported(v8, p9, v16)
           Atom atpose(v14, v15)
           Atom pose(v12, p13)
           Atom kin(v27, v28, p12, v43, v30, v31)
           Atom aconf(v4, v5)
           Atom supported(v8, p12, v16)
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom kin(v27, v33, p11, v29, v30, v31)
           Atom stackable(v8, v16)
           Atom ataconf(v4, v5)
           Atom kin(v27, v32, p10, v29, v30, v31)
           Atom supported(v12, p10, v16)
           Atom supported(v12, v13, v11)
           Atom pose(v12, p10)
           Atom atpose(v12, v13)
           Atom kin(v27, v28, p9, v29, v30, v31)
           Atom supported(v8, v9, v11)
           Atom atbconf(v3)
           Atom supported(v14, p11, v16)
           Atom pose(v8, p9)
           Atom supported(v12, p13, v16)
           Atom controllable(v4)
           Atom arm(v4)
           Atom supported(v14, p14, v16)
           Atom ~test-cfree-pose-pose-negative(v14, p11, v8, p9)
           Atom atpose(v8, v9)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom pose(v8, v9)
           Atom stackable(v8, v10)
           Atom pose(v14, p8)
           Atom pose(v8, p12)
           Atom graspable(v8)
           Atom supported(v8, p6, v16)
           Atom pose(v14, v15)
           Atom graspable(v14)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom supported(v14, v15, v11)
           Atom arm(v6)
           Atom pose(v12, p7)
           Atom supported(v14, p8, v16)
           Atom pose(v14, p14)
           Atom kin(v27, v33, p14, v45, v30, v31)
           Atom stackable(v14, v10)
           Atom kin(v27, v32, p13, v44, v30, v31)
           Atom stackable(v14, v16)
           Atom canmove()
           Atom graspable(v12)
           Atom pose(v8, p6)
           Atom stackable(v12, v16)
           Atom pose(v12, v13)
           Atom aconf(v6, v7)
           Atom supported(v12, p7, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v12, #g2)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom supported(v14, #o2, v10)
           Atom grasp(v14, #g1)
           Atom grasp(v8, #g0)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom supported(v8, #o2, v16)
           Atom bconf(#q5)
           Atom atraj(#t7)
           Atom kin(v4, v12, v13, #g2, #q5, #t7)
           Atom bconf(#q9)
           Atom atraj(#t36)
           Atom kin(v4, v12, p13, #g2, #q9, #t36)
           Atom bconf(#q4)
           Atom atraj(#t6)
           Atom kin(v4, v12, p10, #g2, #q4, #t6)
           Atom bconf(#q7)
           Atom atraj(#t15)
           Atom kin(v4, v12, p7, #g2, #q7, #t15)
           Atom bconf(#q10)
           Atom atraj(#t38)
           Atom kin(v4, v14, p14, #g1, #q10, #t38)
           Atom bconf(#q3)
           Atom atraj(#t5)
           Atom kin(v4, v14, v15, #g1, #q3, #t5)
           Atom bconf(#q6)
           Atom atraj(#t14)
           Atom kin(v4, v14, p8, #g1, #q6, #t14)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, p11, #g1, #q1, #t1)
           Atom bconf(#q8)
           Atom atraj(#t18)
           Atom kin(v4, v8, p6, #g0, #q8, #t18)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q11)
           Atom atraj(#t47)
           Atom kin(v4, v8, p12, #g0, #q11, #t47)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, p9, #g0, #q2, #t4)
           Atom basemotion(#q5, #o0, v3)
           Atom btraj(#t13)
           Atom basemotion(v3, #t13, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q6)
           Atom btraj(#t16)
           Atom basemotion(#q5, #t16, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom btraj(#t25)
           Atom basemotion(#q6, #t25, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t19)
           Atom basemotion(#q3, #t19, #q6)
           Atom btraj(#t22)
           Atom basemotion(#q6, #t22, #q3)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q10, #o0, v3)
           Atom btraj(#t46)
           Atom basemotion(#q10, #t46, #q5)
           Atom btraj(#t40)
           Atom basemotion(#q5, #t40, #q10)
           Atom btraj(#t44)
           Atom basemotion(#q10, #t44, #q3)
           Atom btraj(#t42)
           Atom basemotion(#q3, #t42, #q10)
           Atom basemotion(#q6, #o0, #q10)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(v3, #o0, #q10)
           Atom basemotion(#q10, #o0, #q6)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q4)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q10, #o0, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q4, #o0, #q10)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t31)
           Atom basemotion(#q4, #t31, #q3)
           Atom btraj(#t33)
           Atom basemotion(#q5, #t33, #q4)
           Atom basemotion(#q10, #o0, #q7)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q7, #o0, #q6)
           Atom btraj(#t17)
           Atom basemotion(#q5, #t17, #q7)
           Atom basemotion(#q6, #o0, #q7)
           Atom btraj(#t26)
           Atom basemotion(#q7, #t26, #q5)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q4, #o0, #q7)
           Atom btraj(#t20)
           Atom basemotion(#q3, #t20, #q7)
           Atom basemotion(#q7, #o0, #q10)
           Atom basemotion(#q7, #o0, v3)
           Atom btraj(#t23)
           Atom basemotion(#q7, #t23, #q3)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q4, #o0, #q2)
           Atom btraj(#t32)
           Atom basemotion(#q2, #t32, #q5)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q10, #o0, #q2)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q2, #o0, #q10)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q11, #o0, #q4)
           Atom basemotion(#q11, #o0, #q3)
           Atom basemotion(#q4, #o0, #q11)
           Atom basemotion(#q7, #o0, #q11)
           Atom basemotion(#q3, #o0, #q11)
           Atom basemotion(#q2, #o0, #q11)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q5, #o0, #q11)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q11, #o0, #q2)
           Atom basemotion(#q11, #o0, #q5)
           Atom basemotion(#q11, #o0, #q6)
           Atom basemotion(#q6, #o0, #q11)
           Atom basemotion(#q11, #o0, #q7)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q9, #o0, #q10)
           Atom basemotion(#q4, #o0, #q9)
           Atom btraj(#t45)
           Atom basemotion(#q9, #t45, #q5)
           Atom btraj(#t39)
           Atom basemotion(#q5, #t39, #q9)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q9, #o0, #q7)
           Atom btraj(#t43)
           Atom basemotion(#q9, #t43, #q3)
           Atom btraj(#t41)
           Atom basemotion(#q3, #t41, #q9)
           Atom basemotion(#q0, #o0, #q10)
           Atom btraj(#t28)
           Atom basemotion(#q0, #t28, #q6)
           Atom basemotion(#q10, #o0, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q11, #o0, #q0)
           Atom btraj(#t2)
           Atom basemotion(#q0, #t2, v3)
           Atom basemotion(#q0, #o0, #q11)
           Atom basemotion(#q3, #o0, #q0)
           Atom btraj(#t35)
           Atom basemotion(#q0, #t35, #q2)
           Atom basemotion(#q9, #o0, #q0)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q0)
           Atom btraj(#t37)
           Atom basemotion(#q0, #t37, #q9)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom btraj(#t29)
           Atom basemotion(#q0, #t29, #q7)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q11, #o0, #q8)
           Atom basemotion(#q10, #o0, #q8)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q8, #o0, #q10)
           Atom btraj(#t27)
           Atom basemotion(#q8, #t27, #q5)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q8, #o0, #q11)
           Atom basemotion(#q2, #o0, #q8)
           Atom btraj(#t30)
           Atom basemotion(#q0, #t30, #q8)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q8, #o0, v3)
           Atom btraj(#t24)
           Atom basemotion(#q8, #t24, #q3)
           Atom basemotion(#q6, #o0, #q8)
           Atom btraj(#t21)
           Atom basemotion(#q3, #t21, #q8)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q7, #o0, #q8)
           Atom btraj(#t34)
           Atom basemotion(#q3, #t34, #q1)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q11, #o0, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q8, #o0, #q1)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q1)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t3)
           Atom basemotion(#q1, #t3, v3)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q9, #o0, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q11)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q10, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q10 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #t2))
           ((move_base #q0 #q6 #t28))
           ((move_base #q0 #q7 #t29))
           ((move_base #q0 #q8 #t30))
           ((move_base #q0 #q2 #t35))
           ((move_base #q0 #q9 #t37))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q10 #o0))
           ((move_base #q1 #q11 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #t3))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q0 #o0))
           ((move_base #q10 #q1 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q2 #o0))
           ((move_base #q10 #q4 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q3 #t44))
           ((move_base #q10 #q5 #t46))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q3 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t32))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q11 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q6 #t19))
           ((move_base #q3 #q7 #t20))
           ((move_base #q3 #q8 #t21))
           ((move_base #q3 #q1 #t34))
           ((move_base #q3 #q9 #t41))
           ((move_base #q3 #q10 #t42))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q10 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q3 #t31))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q6 #t16))
           ((move_base #q5 #q7 #t17))
           ((move_base #q5 #q4 #t33))
           ((move_base #q5 #q9 #t39))
           ((move_base #q5 #q10 #t40))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q10 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q3 #t22))
           ((move_base #q6 #q5 #t25))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q3 #t23))
           ((move_base #q7 #q5 #t26))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q3 #t24))
           ((move_base #q8 #q5 #t27))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q3 #t43))
           ((move_base #q9 #q5 #t45))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t10))
           ((move_base v3 #q3 #t11))
           ((move_base v3 #q4 #t12))
           ((move_base v3 #q5 #t13))
           ((move_base v3 #q0 #t8))
           ((move_base v3 #q1 #t9))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p10 #g2 #q4 #t6))
           ((place v4 v12 p10 #g2 #q4 #t6))
           ((pick v4 v12 p13 #g2 #q9 #t36))
           ((place v4 v12 p13 #g2 #q9 #t36))
           ((pick v4 v12 p7 #g2 #q7 #t15))
           ((place v4 v12 p7 #g2 #q7 #t15))
           ((pick v4 v12 v13 #g2 #q5 #t7))
           ((place v4 v12 v13 #g2 #q5 #t7))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p11 #g1 #q1 #t1))
           ((place v4 v14 p11 #g1 #q1 #t1))
           ((pick v4 v14 p14 #g1 #q10 #t38))
           ((place v4 v14 p14 #g1 #q10 #t38))
           ((pick v4 v14 p8 #g1 #q6 #t14))
           ((place v4 v14 p8 #g1 #q6 #t14))
           ((pick v4 v14 v15 #g1 #q3 #t5))
           ((place v4 v14 v15 #g1 #q3 #t5))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p12 #g0 #q11 #t47))
           ((place v4 v8 p12 #g0 #q11 #t47))
           ((pick v4 v8 p6 #g0 #q8 #t18))
           ((place v4 v8 p6 #g0 #q8 #t18))
           ((pick v4 v8 p9 #g0 #q2 #t4))
           ((place v4 v8 p9 #g0 #q2 #t4))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place objects `v8`, `v12`, and `v14` on the surface `v16`. Currently, `v8` is on `v11` at `v9`, `v12` is on `v11` at `v13`, and `v14` is on `v11` at `v15`. The robot `v4` is at base configuration `v3` and has an empty hand. The arm `v4` has a configuration `v5`. `v16` is a square surface with AABB ((-0.135, -0.135), (0.135, 0.135)).
           We need to pick each object from its current location and place it onto `v16`. Since all target poses are `#o2`, we need to compute three distinct collision-free poses for `v8`, `v12`, and `v14` on `v16`.
           
           First, we will pick `v12` from `v13` (on `v11`) and place it on `v16` at `#o2`.
           Then, we will pick `v14` from `v15` (on `v11`) and place it on `v16` at `#o2`.
           Finally, we will pick `v8` from `v9` (on `v11`) and place it on `v16` at `#o2`.
           We need to ensure that the base configurations and trajectories are correctly chosen from the initial state for pick and place operations.
           
           --Plan--:
           (move_base v3 #q5 #t13)
           (pick v4 v12 v13 #g2 #q5 #t7)
           (place v4 v12 #o2 #g2 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v14 v15 #g1 #q3 #t5)
           (place v4 v14 #o2 #g1 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (place v4 v8 #o2 #g0 #o3 #o4)
           
           --Poses--:
           (#o2 v12 v16): (0.0 0.0 0.782 0.0)
           (#o2 v14 v16): (0.05 0.0 0.782 0.0)
           (#o2 v8 v16): (-0.05 0.0 0.782 0.0)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', v30) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `v30` was not an `atbconf`. Looking at the `kin` predicates, `v30` is used as a base configuration for several pick/place actions with different objects. However, `atbconf(v30)` is not in the initial state, and `v30` is not listed as a `bconf` or a `#q` object that could be moved to. I made an error in assuming that `#o3` could directly satisfy the `atbconf` precondition, as `#o3` is only `bconf` itself, not an `atbconf`. We need to use base configurations `q` that are available in the initial state or can be reached via `move_base`.
           
           Let's re-examine the available `kin` actions and corresponding `bconf` objects:
           - `kin(v4, v12, v13, #g2, #q5, #t7)` requires `atbconf(#q5)`
           - `kin(v4, v14, v15, #g1, #q3, #t5)` requires `atbconf(#q3)`
           - `kin(v4, v8, v9, #g0, #q0, #t0)` requires `atbconf(#q0)`
           And for placing on `#o2`:
           - `kin(v4, v12, #o2, #g2, #o3, #o4)` requires `atbconf(#o3)`
           - `kin(v4, v14, #o2, #g1, #o3, #o4)` requires `atbconf(#o3)`
           - `kin(v4, v8, #o2, #g0, #o3, #o4)` requires `atbconf(#o3)`
           
           The initial state includes `atbconf(v3)`. We also have `bconf(#q0), bconf(#q1), ..., bconf(#q11), bconf(#o3)`. We need to `move_base` to the appropriate `bconf` before picking and placing.
           
           Let's revise the plan:
           1. Move the base to `#q5` (for picking `v12` from `v13`).
           2. Pick `v12` from `v13`.
           3. Move the base to `#o3` (for placing `v12` on `#o2`).
           4. Place `v12` on `#o2`.
           5. Move the base to `#q3` (for picking `v14` from `v15`).
           6. Pick `v14` from `v15`.
           7. Move the base to `#o3` (for placing `v14` on `#o2`).
           8. Place `v14` on `#o2`.
           9. Move the base to `#q0` (for picking `v8` from `v9`).
           10. Pick `v8` from `v9`.
           11. Move the base to `#o3` (for placing `v8` on `#o2`).
           12. Place `v8` on `#o2`.
           
           All `move_base` actions must use `btraj` and `basemotion` facts provided. I will use the `basemotion` facts that connect the current `atbconf` to the next required `bconf`.
           
           --Plan--:
           (move_base v3 #q5 #t13)
           (pick v4 v12 v13 #g2 #q5 #t7)
           (move_base #q5 #o3 #o0)
           (place v4 v12 #o2 #g2 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v14 v15 #g1 #q3 #t5)
           (move_base #q3 #o3 #o0)
           (place v4 v14 #o2 #g1 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 #o2 #g0 #o3 #o4)
           
           --Poses--:
           (#o2 v12 v16): (0.0 0.0 0.782 0.0)
           (#o2 v14 v16): (0.05 0.0 0.782 0.0)
           (#o2 v8 v16): (-0.05 0.0 0.782 0.0)

