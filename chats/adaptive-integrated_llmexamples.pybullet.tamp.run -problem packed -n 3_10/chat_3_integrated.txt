User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p10 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.085), (0.035, -0.015)).
           Object p8 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (0.14, 0.532, 0.781) and quaternion (0.0, 0.0, -0.076, 0.997).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, 0.015), (0.035, 0.085)).
           Object v15 is a pose with position (0.205, 0.258, 0.781) and quaternion (0.0, 0.0, 0.989, 0.145).
           Object v13 is a pose with position (-0.081, -0.232, 0.781) and quaternion (0.0, 0.0, 0.045, 0.999).
           Object p7 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v14, p11)
           Atom ataconf(v6, v7)
           Atom stackable(v12, v10)
           Atom handempty(v4)
           Atom handempty(v6)
           Atom bconf(v3)
           Atom supported(v8, p9, v16)
           Atom atpose(v14, v15)
           Atom aconf(v4, v5)
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom kin(v27, v33, p11, v29, v30, v31)
           Atom stackable(v8, v16)
           Atom ataconf(v4, v5)
           Atom kin(v27, v32, p10, v29, v30, v31)
           Atom supported(v12, p10, v16)
           Atom supported(v12, v13, v11)
           Atom pose(v12, p10)
           Atom atpose(v12, v13)
           Atom kin(v27, v28, p9, v29, v30, v31)
           Atom supported(v8, v9, v11)
           Atom atbconf(v3)
           Atom supported(v14, p11, v16)
           Atom pose(v8, p9)
           Atom controllable(v4)
           Atom arm(v4)
           Atom atpose(v8, v9)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom pose(v8, v9)
           Atom stackable(v8, v10)
           Atom pose(v14, p8)
           Atom graspable(v8)
           Atom supported(v8, p6, v16)
           Atom pose(v14, v15)
           Atom graspable(v14)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom supported(v14, v15, v11)
           Atom arm(v6)
           Atom pose(v12, p7)
           Atom supported(v14, p8, v16)
           Atom stackable(v14, v10)
           Atom stackable(v14, v16)
           Atom canmove()
           Atom graspable(v12)
           Atom pose(v8, p6)
           Atom stackable(v12, v16)
           Atom pose(v12, v13)
           Atom aconf(v6, v7)
           Atom supported(v12, p7, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v12, #g2)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom supported(v14, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom grasp(v14, #g1)
           Atom grasp(v8, #g0)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom bconf(#q4)
           Atom atraj(#t6)
           Atom kin(v4, v12, p10, #g2, #q4, #t6)
           Atom bconf(#q5)
           Atom atraj(#t7)
           Atom kin(v4, v12, v13, #g2, #q5, #t7)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, p7, #g2, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, p9, #g0, #q2, #t4)
           Atom kin(v4, v8, p6, #g0, #o3, #o4)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom kin(v4, v14, p8, #g1, #o3, #o4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, p11, #g1, #q1, #t1)
           Atom bconf(#q3)
           Atom atraj(#t5)
           Atom kin(v4, v14, v15, #g1, #q3, #t5)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom btraj(#t3)
           Atom basemotion(#q1, #t3, v3)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q0)
           Atom btraj(#t2)
           Atom basemotion(#q0, #t2, v3)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q2)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom btraj(#t13)
           Atom basemotion(v3, #t13, #q5)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q0)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #t2))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #t3))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t10))
           ((move_base v3 #q3 #t11))
           ((move_base v3 #q4 #t12))
           ((move_base v3 #q5 #t13))
           ((move_base v3 #q0 #t8))
           ((move_base v3 #q1 #t9))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p10 #g2 #q4 #t6))
           ((place v4 v12 p10 #g2 #q4 #t6))
           ((pick v4 v12 p7 #g2 #o3 #o4))
           ((place v4 v12 p7 #g2 #o3 #o4))
           ((pick v4 v12 v13 #g2 #q5 #t7))
           ((place v4 v12 v13 #g2 #q5 #t7))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p11 #g1 #q1 #t1))
           ((place v4 v14 p11 #g1 #q1 #t1))
           ((pick v4 v14 p8 #g1 #o3 #o4))
           ((place v4 v14 p8 #g1 #o3 #o4))
           ((pick v4 v14 v15 #g1 #q3 #t5))
           ((place v4 v14 v15 #g1 #q3 #t5))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p6 #g0 #o3 #o4))
           ((place v4 v8 p6 #g0 #o3 #o4))
           ((pick v4 v8 p9 #g0 #q2 #t4))
           ((place v4 v8 p9 #g0 #q2 #t4))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place objects v8, v12, and v14 on surface v16.
           Currently, v8 is at v9 (on v11), v12 is at v13 (on v11), and v14 is at v15 (on v11).
           The robot arm v4 is at configuration v5, and its hand is empty. The base is at configuration v3.
           There are potential collision-free poses for these objects on v16 represented by p6, p7, p8, p9, p10, p11 and #o2.
           
           To achieve the goal, we need to pick each object from its current location and place it on surface v16.
           We can pick v8 from v9 and place it on p6 on v16.
           We can pick v12 from v13 and place it on p7 on v16.
           We can pick v14 from v15 and place it on p8 on v16.
           
           We will use a common base configuration for picking and placing to minimize movement cost.
           Since v3 is the current base configuration, we prioritize using pick/place actions with v3 if possible.
           However, the provided kin facts show that `v4` and not `v27` is the actual arm.
           The `kin` predicates provided are all for arm `v4`, so we will use arm `v4`.
           The `kin` predicates have a base configuration which is not `v3`. We have to move the base to the right configuration before picking or placing each object.
           
           Let's break down the plan for each object:
           
           1. **Move v8 to v16**:
              - v8 is at v9. Kinematics for picking v8 from v9 is `kin(v4, v8, v9, #g0, #q0, #t0)`. So we need to move to base config `#q0`.
              - We can place v8 on p6 on v16. Kinematics for placing v8 on p6 is `kin(v4, v8, p6, #g0, #o3, #o4)`. So we need to move to base config `#o3`.
              - This means we have to move base from v3 to #q0, then pick v8. Then move from #q0 to #o3, then place v8.
           
           2. **Move v12 to v16**:
              - v12 is at v13. Kinematics for picking v12 from v13 is `kin(v4, v12, v13, #g2, #q5, #t7)`. So we need to move to base config `#q5`.
              - We can place v12 on p7 on v16. Kinematics for placing v12 on p7 is `kin(v4, v12, p7, #g2, #o3, #o4)`. So we need to move to base config `#o3`.
              - This means we have to move base from current config to #q5, then pick v12. Then move from #q5 to #o3, then place v12.
           
           3. **Move v14 to v16**:
              - v14 is at v15. Kinematics for picking v14 from v15 is `kin(v4, v14, v15, #g1, #q3, #t5)`. So we need to move to base config `#q3`.
              - We can place v14 on p8 on v16. Kinematics for placing v14 on p8 is `kin(v4, v14, p8, #g1, #o3, #o4)`. So we need to move to base config `#o3`.
              - This means we have to move base from current config to #q3, then pick v14. Then move from #q3 to #o3, then place v14.
           
           We'll place them one by one. The `_o2` pose is a generic pose and there is only one available `kin` fact for each object when `_o2` is used for placing. We can use `p6`, `p7`, `p8` as target poses as they are specific.
           
           Plan:
           1. Move base to #q0 for picking v8.
           2. Pick v8 from v9.
           3. Move base to #o3 for placing v8.
           4. Place v8 on p6.
           5. Move base to #q5 for picking v12.
           6. Pick v12 from v13.
           7. Move base to #o3 for placing v12.
           8. Place v12 on p7.
           9. Move base to #q3 for picking v14.
           10. Pick v14 from v15.
           11. Move base to #o3 for placing v14.
           12. Place v14 on p8.
           
           --Plan--:
           (move_base v3 #q0 #t8)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 p6 #g0 #o3 #o4)
           (move_base #o3 #q5 #o0)
           (pick v4 v12 v13 #g2 #q5 #t7)
           (move_base #q5 #o3 #o0)
           (place v4 v12 p7 #g2 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v14 v15 #g1 #q3 #t5)
           (move_base #q3 #o3 #o0)
           (place v4 v14 p8 #g1 #o3 #o4)

