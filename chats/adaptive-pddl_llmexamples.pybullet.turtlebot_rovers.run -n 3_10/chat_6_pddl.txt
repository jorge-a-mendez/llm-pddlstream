User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rover(v12)
           Atom rock(v8)
           Atom type(v4, v2)
           Atom free(v12, v16)
           Atom mode(v11)
           Atom conf(v12, v13)
           Atom type(v1, v2)
           Atom objective(v18)
           Atom rock(v3)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom objective(v17)
           Atom rock(v7)
           Atom supports(v10, v11)
           Atom free(v14, v16)
           Atom rock(v5)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom camera(v10)
           Atom store(v16)
           Atom lander(v9)
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom objective(v19)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q4, #y2, v19)
           Atom imagerange(v14, #q4, v19)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom above(v14, #q0, v1)
           Atom conf(v14, #q0)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q5, #y3, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v12, #q10, v1)
           Atom conf(v12, #q10)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q8, #y6, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom above(v12, #q14, v8)
           Atom conf(v12, #q14)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom comvisible(v12, #q7, #y5, v9)
           Atom comrange(v12, #q7, v9)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #q13, v3)
           Atom conf(v12, #q13)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q3, #y1, v18)
           Atom imagerange(v14, #q3, v18)
           Atom conf(v14, #q3)
           Atom ray(#y1)
           Atom imagevisible(v12, #q9, #y7, v18)
           Atom imagerange(v12, #q9, v18)
           Atom conf(v12, #q9)
           Atom ray(#y7)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q11, v5)
           Atom conf(v12, #q11)
           Atom above(v14, #q2, v5)
           Atom conf(v14, #q2)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, v13, #t30, #q10)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, v15, #t27, #q12)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q12, #o2, #q0)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v12, v13, #t14, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #t17, #q4)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, v15, #t1, #q3)
           Atom motion(v14, #q12, #t28, #q3)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q5, #t7, #q1)
           Atom motion(v14, #q4, #t6, #q1)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q1, #t16, #q12)
           Atom motion(v14, #q1, #t19, #q5)
           Atom motion(v14, #q3, #t5, #q1)
           Atom motion(v14, #q12, #t18, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t4, #q2)
           Atom motion(v14, #q1, #t3, #q0)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q1, #t2, v15)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q10, #t29, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, v13, #t12, #q6)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, v13, #t13, #q8)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q6, #t23, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #t22, #q9)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q6, #t8, #q7)
           Atom motion(v12, #q7, #t21, #q13)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q9, #t20, #q7)
           Atom motion(v12, #q7, #t15, v13)
           Atom motion(v12, #q13, #t24, #q7)
           Atom motion(v12, #q14, #t25, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #t9, #q10)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q10, #t10, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q8, #t26, #q7)
           Atom motion(v12, #q11, #t11, #q7)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q10 v1 v16))
           ((sample_rock v12 #q11 v5 v16))
           ((sample_rock v12 #q13 v3 v16))
           ((sample_rock v12 #q14 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q0 v1 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q2 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t10 #q7))
           ((move v12 #q10 #t29 #q6))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t11 #q7))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t24 #q7))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t25 #q7))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t23 #q8))
           ((move v12 #q6 #t8 #q7))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #t15 v13))
           ((move v12 #q7 #t21 #q13))
           ((move v12 #q7 #t9 #q10))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t22 #q9))
           ((move v12 #q8 #t26 #q7))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t20 #q7))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t12 #q6))
           ((move v12 v13 #t13 #q8))
           ((move v12 v13 #t14 #q9))
           ((move v12 v13 #t30 #q10))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #t16 #q12))
           ((move v14 #q1 #t19 #q5))
           ((move v14 #q1 #t2 v15))
           ((move v14 #q1 #t3 #q0))
           ((move v14 #q1 #t4 #q2))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t18 #q1))
           ((move v14 #q12 #t28 #q3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t5 #q1))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t6 #q1))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t7 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q3))
           ((move v14 v15 #t17 #q4))
           ((move v14 v15 #t27 #q12))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v12 #q8 #y6 v19 v10))
           ((calibrate v12 #q9 #y7 v18 v10))
           ((calibrate v14 #q3 #y1 v18 v10))
           ((calibrate v14 #q4 #y2 v19 v10))
           ((calibrate v14 #q5 #y3 v17 v10))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v12 #q8 #y6 v19 v10 v11))
           ((take_image v12 #q9 #y7 v18 v10 v11))
           ((take_image v14 #q3 #y1 v18 v10 v11))
           ((take_image v14 #q4 #y2 v19 v10 v11))
           ((take_image v14 #q5 #y3 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q7 #y5 v9 v4))
           ((send_analysis v12 #q7 #y5 v9 v7))
           ((send_analysis v12 #q7 #y5 v9 v1))
           ((send_analysis v12 #q7 #y5 v9 v5))
           ((send_analysis v12 #q7 #y5 v9 v3))
           ((send_analysis v12 #q7 #y5 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_image v12 #q7 #y5 v9 v17 v11))
           ((send_image v12 #q7 #y5 v9 v19 v11))
           ((send_image v12 #q7 #y5 v9 v18 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ((send_image v14 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, each equipped with a camera `v10` that supports mode `v11`. There's a lander `v9` for communication. There are several rocks: `v8`, `v3`, `v7`, `v4`, `v1`, `v5`. Each rock has a type (`v2` or `v6`). There are also objectives `v17`, `v18`, `v19`. Both rovers have a storage `v16`, and it's currently free for both.
           
           The goal `new-axiom@0()` can be satisfied if:
           1. Both rovers `v12` and `v14` are at some configuration and are free to store samples in `v16`. (This is partially met as `free(v12, v16)` and `free(v14, v16)` are true, and `atconf(v12, v13)` and `atconf(v14, v15)` are true).
           2. Images of objectives `v17`, `v18`, and `v19` in mode `v11` have been received.
           3. Rocks of type `v2` (stone) and `v6` (soil) have been analyzed and analysis received.
           
           Let's break down the goal into sub-goals:
           
           **Sub-goal 1: Receive images for objectives v17, v18, v19.**
           * To achieve `receivedimage(?o, ?m)`, we need to `send_image`.
           * To `send_image`, we need `haveimage(?v, ?o, ?m)`, `comvisible(?v, ?q, ?y, ?l)`, `atconf(?v, ?q)`, and the ray not blocked.
           * To achieve `haveimage(?v, ?o, ?m)`, we need to `take_image`.
           * To `take_image`, we need `imagevisible(?v, ?q, ?y, ?o)`, `onboard(?c, ?v)`, `supports(?c, ?m)`, `atconf(?v, ?q)`, `calibrated(?c, ?v)`, and the ray not blocked.
           * To achieve `calibrated(?c, ?v)`, we need to `calibrate`.
           
           Let's use rover `v12` for objectives `v17`, `v18`, `v19` and rover `v14` for rocks.
           * **Objective v17:** `imagevisible(v12, #q6, #y4, v17)`, `comvisible(v12, #q7, #y5, v9)`.
               * `calibrate v12 #q6 #y4 v17 v10`
               * `take_image v12 #q6 #y4 v17 v10 v11`
               * Move `v12` to `#q7` to send the image. Current location `v13`. `motion(v12, v13, #o2, #q7)` is not directly available, but we can move to `#q6` first, `(move v12 v13 #t12 #q6)`, then from `#q6` to `#q7` `(move v12 #q6 #t8 #q7)`.
               * `send_image v12 #q7 #y5 v9 v17 v11`
           * **Objective v19:** `imagevisible(v12, #q8, #y6, v19)`, `comvisible(v12, #q7, #y5, v9)`.
               * Move `v12` to `#q8` from `#q7`: `(move v12 #q7 #o2 #q8)`.
               * `calibrate v12 #q8 #y6 v19 v10`
               * `take_image v12 #q8 #y6 v19 v10 v11`
               * Move `v12` to `#q7` to send the image: `(move v12 #q8 #t26 #q7)`.
               * `send_image v12 #q7 #y5 v9 v19 v11`
           * **Objective v18:** `imagevisible(v12, #q9, #y7, v18)`, `comvisible(v12, #q7, #y5, v9)`.
               * Move `v12` to `#q9` from `#q7`: `(move v12 #q7 #o2 #q9)`.
               * `calibrate v12 #q9 #y7 v18 v10`
               * `take_image v12 #q9 #y7 v18 v10 v11`
               * Move `v12` to `#q7` to send the image: `(move v12 #q9 #t20 #q7)`.
               * `send_image v12 #q7 #y5 v9 v18 v11`
           
           **Sub-goal 2: Receive analysis for rocks of type v2 and v6.**
           * To achieve `receivedanalysis(?r)`, we need to `send_analysis`.
           * To `send_analysis`, we need `analyzed(?v, ?r)`, `comvisible(?v, ?q, ?y, ?l)`, `atconf(?v, ?q)`, and the ray not blocked.
           * To achieve `analyzed(?v, ?r)`, we need to `sample_rock`.
           * To `sample_rock`, we need `above(?v, ?q, ?r)`, `store(?s)`, `atconf(?v, ?q)`, and `free(?v, ?s)`.
           
           Use rover `v14` for rock analysis. It starts at `v15`. `comvisible(v14, #q1, #y0, v9)`.
           
           Rocks of type `v2` (stone): `v4`, `v1`, `v3`.
           Rocks of type `v6` (soil): `v8`, `v5`, `v7`.
           
           We need one `v2` rock and one `v6` rock. Let's pick `v3` (type `v2`) and `v8` (type `v6`).
           
           * **Rock v3 (type v2):** `above(v14, #o5, v3)`
               * Move `v14` to `#o5` from `v15`: `(move v14 v15 #o2 #o5)`.
               * `sample_rock v14 #o5 v3 v16`
               * Move `v14` to `#q1` to send analysis from `#o5`: `(move v14 #o5 #o2 #q1)`.
               * `send_analysis v14 #q1 #y0 v9 v3`
           * **Rock v8 (type v6):** `above(v14, #q12, v8)`
               * From `#q1`, move `v14` to `#q12`: `(move v14 #q1 #t16 #q12)`.
               * `sample_rock v14 #q12 v8 v16`
               * From `#q12`, move `v14` to `#q1` to send analysis: `(move v14 #q12 #t18 #q1)`.
               * `send_analysis v14 #q1 #y0 v9 v8`
           
           The goal also implies that both rovers are at some configuration and are free in `v16`. Since we are sampling with `v14`, its store `v16` will be `full`. We need to `drop_rock` to make it `free` again. After sampling `v3` and `v8`, `v14` will be full twice, so we need to drop the rock twice. This is tricky since the goal states that `free(v14, v16)` must be true. Let's adjust. We only need one rock of each type. We sample one `v2` rock. Send its analysis. Then `drop_rock`. Then sample one `v6` rock. Send its analysis. This way, `free(v14, v16)` is true at the end.
           
           Revised rock analysis for v14:
           * **Rock v3 (type v2):**
               * Move `v14` to `#o5` from `v15`: `(move v14 v15 #o2 #o5)`.
               * `sample_rock v14 #o5 v3 v16`
               * Move `v14` to `#q1` to send analysis from `#o5`: `(move v14 #o5 #o2 #q1)`.
               * `send_analysis v14 #q1 #y0 v9 v3`
               * `drop_rock v14 v16` (to make it `free` again for the next sample and satisfy the final goal condition)
           * **Rock v8 (type v6):**
               * From `#q1`, move `v14` to `#q12`: `(move v14 #q1 #t16 #q12)`.
               * `sample_rock v14 #q12 v8 v16`
               * From `#q12`, move `v14` to `#q1` to send analysis: `(move v14 #q12 #t18 #q1)`.
               * `send_analysis v14 #q1 #y0 v9 v8`
               * `drop_rock v14 v16` (to make it `free` again to satisfy the final goal condition)
           
           We need to ensure `atconf(v12, v13)` and `atconf(v14, v15)` are true at the end. Rover v12 will end at `q7` and v14 will end at `q1`. We need to add movements to bring them back to their initial configurations, or to a configuration that satisfies the goal for `atconf`. The goal axiom doesn't specify a particular configuration, only `atconf(v12, v13)` and `atconf(v14, v15)` must be true. So the final movements are:
           * Move `v12` from `#q7` to `v13`: `(move v12 #q7 #t15 v13)`
           * Move `v14` from `#q1` to `v15`: `(move v14 #q1 #t2 v15)`
           
           All `new-axiom@0()` conditions appear to be covered this way.
           
           --Plan--:
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t8 #q7)
           (send_image v12 #q7 #y5 v9 v17 v11)
           (move v12 #q7 #o2 #q8)
           (calibrate v12 #q8 #y6 v19 v10)
           (take_image v12 #q8 #y6 v19 v10 v11)
           (move v12 #q8 #t26 #q7)
           (send_image v12 #q7 #y5 v9 v19 v11)
           (move v12 #q7 #o2 #q9)
           (calibrate v12 #q9 #y7 v18 v10)
           (take_image v12 #q9 #y7 v18 v10 v11)
           (move v12 #q9 #t20 #q7)
           (send_image v12 #q7 #y5 v9 v18 v11)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q1)
           (send_analysis v14 #q1 #y0 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q1 #t16 #q12)
           (sample_rock v14 #q12 v8 v16)
           (move v14 #q12 #t18 #q1)
           (send_analysis v14 #q1 #y0 v9 v8)
           (drop_rock v14 v16)
           (move v12 #q7 #t15 v13)
           (move v14 #q1 #t2 v15)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q6) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `atconf(v12, #q6)` was not satisfied before the `move v12 #q6 #t8 #q7` action. Rover `v12` starts at `v13`. It needs to move to `#q6` first, then to `#q7`.
           
           Let's refine the plan, ensuring all `atconf` preconditions are met.
           
           **Sub-goal 1: Receive images for objectives v17, v18, v19 using rover v12.**
           Rover `v12` starts at `v13`.
           * **Objective v17:** `imagevisible(v12, #q6, #y4, v17)`, `comvisible(v12, #q7, #y5, v9)`.
               * Move `v12` from `v13` to `#q6`: `(move v12 v13 #t12 #q6)`.
               * `calibrate v12 #q6 #y4 v17 v10`.
               * `take_image v12 #q6 #y4 v17 v10 v11`.
               * Move `v12` from `#q6` to `#q7` for communication: `(move v12 #q6 #t8 #q7)`.
               * `send_image v12 #q7 #y5 v9 v17 v11`.
           * **Objective v19:** `imagevisible(v12, #q8, #y6, v19)`, `comvisible(v12, #q7, #y5, v9)`.
               * Move `v12` from `#q7` to `#q8`: `(move v12 #q7 #o2 #q8)`.
               * `calibrate v12 #q8 #y6 v19 v10`.
               * `take_image v12 #q8 #y6 v19 v10 v11`.
               * Move `v12` from `#q8` back to `#q7` for communication: `(move v12 #q8 #t26 #q7)`.
               * `send_image v12 #q7 #y5 v9 v19 v11`.
           * **Objective v18:** `imagevisible(v12, #q9, #y7, v18)`, `comvisible(v12, #q7, #y5, v9)`.
               * Move `v12` from `#q7` to `#q9`: `(move v12 #q7 #o2 #q9)`.
               * `calibrate v12 #q9 #y7 v18 v10`.
               * `take_image v12 #q9 #y7 v18 v10 v11`.
               * Move `v12` from `#q9` back to `#q7` for communication: `(move v12 #q9 #t20 #q7)`.
               * `send_image v12 #q7 #y5 v9 v18 v11`.
           
           **Sub-goal 2: Receive analysis for rocks of type v2 and v6 using rover v14.**
           Rover `v14` starts at `v15`. `comvisible(v14, #q1, #y0, v9)`.
           * **Rock v3 (type v2):** `above(v14, #o5, v3)`
               * Move `v14` from `v15` to `#o5`: `(move v14 v15 #o2 #o5)`.
               * `sample_rock v14 #o5 v3 v16`.
               * Move `v14` from `#o5` to `#q1` for communication: `(move v14 #o5 #o2 #q1)`.
               * `send_analysis v14 #q1 #y0 v9 v3`.
               * `drop_rock v14 v16`.
           * **Rock v8 (type v6):** `above(v14, #q12, v8)`
               * Move `v14` from `#q1` to `#q12`: `(move v14 #q1 #t16 #q12)`.
               * `sample_rock v14 #q12 v8 v16`.
               * Move `v14` from `#q12` back to `#q1` for communication: `(move v14 #q12 #t18 #q1)`.
               * `send_analysis v14 #q1 #y0 v9 v8`.
               * `drop_rock v14 v16`.
           
           **Final State:**
           * Bring `v12` back to `v13`: `(move v12 #q7 #t15 v13)`.
           * Bring `v14` back to `v15`: `(move v14 #q1 #t2 v15)`.
           
           This sequence should ensure all `atconf` preconditions are met.
           
           --Plan--:
           (move v12 v13 #t12 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t8 #q7)
           (send_image v12 #q7 #y5 v9 v17 v11)
           (move v12 #q7 #o2 #q8)
           (calibrate v12 #q8 #y6 v19 v10)
           (take_image v12 #q8 #y6 v19 v10 v11)
           (move v12 #q8 #t26 #q7)
           (send_image v12 #q7 #y5 v9 v19 v11)
           (move v12 #q7 #o2 #q9)
           (calibrate v12 #q9 #y7 v18 v10)
           (take_image v12 #q9 #y7 v18 v10 v11)
           (move v12 #q9 #t20 #q7)
           (send_image v12 #q7 #y5 v9 v18 v11)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q1)
           (send_analysis v14 #q1 #y0 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q1 #t16 #q12)
           (sample_rock v14 #q12 v8 v16)
           (move v14 #q12 #t18 #q1)
           (send_analysis v14 #q1 #y0 v9 v8)
           (drop_rock v14 v16)
           (move v12 #q7 #t15 v13)
           (move v14 #q1 #t2 v15)

