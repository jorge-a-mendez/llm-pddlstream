User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v13 is a base configuration with (x, y, theta) = (1.0, -1.75, 3.142).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.845, 2.035), (-1.773, 2.108)).
           Object v1 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.099, 1.877), (1.201, 1.979)).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.472, 2.153), (0.564, 2.245)).
           Object v7 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.391, -0.275), (-1.271, -0.155)).
           Object v3 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.283, 0.464), (-1.187, 0.56)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.582, 2.093), (-0.506, 2.169)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.187, -1.929), (-0.821, -1.571)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.821, -1.929), (1.187, -1.571)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((2.064, 0.582), (2.191, 0.709)).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((2.05, 1.932), (2.134, 2.016)).
           Object v15 is a base configuration with (x, y, theta) = (-1.0, -1.75, 0.0).
           Object v9 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.405, -2.346), (-1.395, -1.654)).
           Object v5 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.639, 0.036), (-0.519, 0.156)).
           Object v4 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.912, -1.315), (-1.811, -1.214)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v7)
           Atom type(v7, v6)
           Atom type(v4, v2)
           Atom objective(v20)
           Atom onboard(v10, v14)
           Atom conf(v14, v15)
           Atom atconf(v14, v15)
           Atom type(v3, v2)
           Atom rover(v14)
           Atom rock(v3)
           Atom lander(v9)
           Atom free(v12, v16)
           Atom objective(v19)
           Atom free(v14, v16)
           Atom rover(v12)
           Atom atconf(v12, v13)
           Atom objective(v18)
           Atom objective(v17)
           Atom type(v5, v6)
           Atom onboard(v10, v12)
           Atom rock(v4)
           Atom type(v8, v6)
           Atom type(v1, v2)
           Atom store(v16)
           Atom rock(v8)
           Atom mode(v11)
           Atom rock(v1)
           Atom camera(v10)
           Atom rock(v5)
           Atom conf(v12, v13)
           Atom supports(v10, v11)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v1)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom above(v12, #o5, v3)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The problem requires satisfying the `new-axiom@0()` goal, which means that rover `v12` and `v14` are at some configurations, they both have free storage `v16`, a set of objectives (`v17`, `v18`, `v19`, `v20`) have received images in mode `v11`, a stone type (`v2`) rock has been analyzed and its analysis received, and a soil type (`v6`) rock has been analyzed and its analysis received.
           
           Currently, both rovers `v12` and `v14` are at their initial configurations (`v13` and `v15` respectively) and have free storage `v16`. This means the `atconf` and `free` conditions for `new-axiom@0()` are met.
           
           To achieve `receivedimage` for `v17, v18, v19, v20` and `receivedanalysis` for a `stone` and `soil` type rock, we need to perform several actions.
           The provided action instances are very limited. Only `move` and `drop_rock` are available.
           
           Since `new-axiom@0()` includes `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`, `receivedanalysis(?stone)` and `receivedanalysis(?soil)`, and none of the `take_image`, `send_image`, `sample_rock`, or `send_analysis` actions are in the list of available action instances, it is impossible to achieve the goal from the initial state using only the given action instances.
           
           For example, to get `receivedimage(v17, v11)`, the rover needs to `take_image` of `v17` in `v11` mode and then `send_image`. Neither of these actions are available.
           Similarly, to get `receivedanalysis(?stone)`, a rover needs to `sample_rock` of a stone type and then `send_analysis`. Neither of these are available.
           
           Therefore, the goal is not achievable with the provided actions.

