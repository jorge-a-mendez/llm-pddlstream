User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom camera(v10)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom conf(v14, v15)
           Atom supports(v10, v11)
           Atom rover(v14)
           Atom type(v8, v6)
           Atom objective(v18)
           Atom store(v16)
           Atom rock(v4)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom type(v5, v6)
           Atom rock(v3)
           Atom onboard(v10, v12)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom free(v12, v16)
           Atom type(v7, v6)
           Atom free(v14, v16)
           Atom rock(v1)
           Atom lander(v9)
           Atom onboard(v10, v14)
           Atom atconf(v14, v15)
           Atom conf(v12, v13)
           Atom rock(v7)
           Atom objective(v17)
           Atom rock(v8)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q5, v3)
           Atom conf(v14, #q5)
           Atom imagevisible(v14, #q8, #y4, v18)
           Atom imagerange(v14, #q8, v18)
           Atom conf(v14, #q8)
           Atom ray(#y4)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q9, #y5, v17)
           Atom imagerange(v14, #q9, v17)
           Atom conf(v14, #q9)
           Atom ray(#y5)
           Atom above(v14, #q2, v7)
           Atom conf(v14, #q2)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v1)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v1)
           Atom above(v12, #q7, v3)
           Atom conf(v12, #q7)
           Atom above(v12, #o5, v4)
           Atom above(v12, #q6, v8)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q3, #y2, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #o5, v7)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #t10, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #t15, #q0)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q4, #t4, #q0)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, v15, #t8, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, v15, #t7, #q2)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, v15, #t11, #q9)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q8, #t12, #q1)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q2, #t2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q9, #t13, #q1)
           Atom motion(v14, #q1, #t1, v15)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v12, #q3, #t3, #q0)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, v13, #t5, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #t14, #q0)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, v13, #t9, #q6)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q6 v8 v16))
           ((sample_rock v12 #q7 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q2 v7 v16))
           ((sample_rock v14 #q5 v3 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t3 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t4 #q0))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t14 #q0))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t15 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q3))
           ((move v12 v13 #t6 #q4))
           ((move v12 v13 #t9 #q6))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t1 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t2 #q1))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t12 #q1))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t13 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q8))
           ((move v14 v15 #t11 #q9))
           ((move v14 v15 #t7 #q2))
           ((move v14 v15 #t8 #q5))
           ((calibrate v12 #q3 #y2 v17 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v14 #q8 #y4 v18 v10))
           ((calibrate v14 #q9 #y5 v17 v10))
           ((take_image v12 #q3 #y2 v17 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v14 #q8 #y4 v18 v10 v11))
           ((take_image v14 #q9 #y5 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Alright, let's break down this plan to achieve `new-axiom@0()`, a conjunctive goal requiring specific images and analyses.**
           
           My primary objective is to get two images and analyze six rock samples (three stone, three soil). I need to ensure that the rovers return to their initial positions at the plan's end. Here's my strategy:
           
           First, I identified the key tasks:
           1.  **Image Acquisition:** I've got two rovers, v12 and v14, each needing to capture and transmit an image. Rover v12 needs to image object v17, and v14 needs to image object v18.
           2.  **Rock Analysis:** I need to analyze six rock samples, ensuring they get sent back to base.
           
           The initial state sets a few facts I need to respect: v12 is at configuration v13 and free in store v16, same for v14 at configuration v15.
           
           **The Image Strategy:**
           I decided to have v12 handle v17 and v14 handle v18. I need to move each rover to the appropriate image capture location. This requires me to calibrate each rover's camera, take the picture, and then send it to the lander. Next, the rovers need to move to the comms position. I'll make sure each rover returns to its starting configuration at the end to satisfy the axiom.
           
           **Analysis Strategy:**
           Once the images are sent, the rovers will move to sample rock configurations. I've designed a strategy where v12 will process three rocks (v3, v8, v5) and move to configurations accessible by v12. Then, it will send the analyses to the lander and drop the rocks. Rover v14 will repeat a similar process for the other three rocks (v1, v4, v7).
           
           Here's the detailed plan I've come up with:
           
           **Rover v12 - Plan:**
           1.  Move from v13 to #q3
           2.  Calibrate camera v10 for v12 at #q3 to observe v17
           3.  Take image of v17 with v10 from #q3
           4.  Move from #q3 to #q0
           5.  Send image of v17 to lander v9
           6.  Move from #q0 to #q7
           7.  Sample rock v3 (stone) at #q7
           8.  Move from #q7 to #q0
           9.  Send analysis of v3 to lander v9
           10. Drop rock v3
           11. Move from #q0 to #q6
           12. Sample rock v8 (soil) at #q6
           13. Move from #q6 to #q0
           14. Send analysis of v8 to lander v9
           15. Drop rock v8
           16. Move from #q0 to #o5
           17. Sample rock v5 (soil) at #o5
           18. Move from #o5 to #q0
           19. Send analysis of v5 to lander v9
           20. Drop rock v5
           21. Move from #q0 back to v13
           
           **Rover v14 - Plan:**
           1.  Move from v15 to #q8
           2.  Calibrate camera v10 for v14 at #q8 to observe v18
           3.  Take image of v18 with v10 from #q8
           4.  Move from #q8 to #q1
           5.  Send image of v18 to lander v9
           6.  Move from #q1 to #o5
           7.  Sample rock v1 (stone) at #o5
           8.  Move from #o5 to #q1
           9.  Send analysis of v1 to lander v9
           10. Drop rock v1
           11. Move from #q1 to #o5
           12. Sample rock v4 (stone) at #o5
           13. Move from #o5 to #q1
           14. Send analysis of v4 to lander v9
           15. Drop rock v4
           16. Move from #q1 to #q2
           17. Sample rock v7 (soil) at #q2
           18. Move from #q2 to #q1
           19. Send analysis of v7 to lander v9
           20. Drop rock v7
           21. Move from #q1 back to v15
           
           **Final Verification:** I've ensured that each rover returns to its starting location (v1
)

Model:     **Alright, let's break down this plan to achieve `new-axiom@0()`, a conjunctive goal requiring specific images and analyses.**
           
           My primary objective is to get two images and analyze six rock samples (three stone, three soil). I need to ensure that the rovers return to their initial positions at the plan's end. Here's my strategy:
           
           First, I identified the key tasks:
           1.  **Image Acquisition:** I've got two rovers, v12 and v14, each needing to capture and transmit an image. Rover v12 needs to image object v17, and v14 needs to image object v18.
           2.  **Rock Analysis:** I need to analyze six rock samples, ensuring they get sent back to base.
           
           The initial state sets a few facts I need to respect: v12 is at configuration v13 and free in store v16, same for v14 at configuration v15.
           
           **The Image Strategy:**
           I decided to have v12 handle v17 and v14 handle v18. I need to move each rover to the appropriate image capture location. This requires me to calibrate each rover's camera, take the picture, and then send it to the lander. Next, the rovers need to move to the comms position. I'll make sure each rover returns to its starting configuration at the end to satisfy the axiom.
           
           **Analysis Strategy:**
           Once the images are sent, the rovers will move to sample rock configurations. I've designed a strategy where v12 will process three rocks (v3, v8, v5) and move to configurations accessible by v12. Then, it will send the analyses to the lander and drop the rocks. Rover v14 will repeat a similar process for the other three rocks (v1, v4, v7).
           
           Here's the detailed plan I've come up with:
           
           **Rover v12 - Plan:**
           1.  Move from v13 to #q3
           2.  Calibrate camera v10 for v12 at #q3 to observe v17
           3.  Take image of v17 with v10 from #q3
           4.  Move from #q3 to #q0
           5.  Send image of v17 to lander v9
           6.  Move from #q0 to #q7
           7.  Sample rock v3 (stone) at #q7
           8.  Move from #q7 to #q0
           9.  Send analysis of v3 to lander v9
           10. Drop rock v3
           11. Move from #q0 to #q6
           12. Sample rock v8 (soil) at #q6
           13. Move from #q6 to #q0
           14. Send analysis of v8 to lander v9
           15. Drop rock v8
           16. Move from #q0 to #o5
           17. Sample rock v5 (soil) at #o5
           18. Move from #o5 to #q0
           19. Send analysis of v5 to lander v9
           20. Drop rock v5
           21. Move from #q0 back to v13
           
           **Rover v14 - Plan:**
           1.  Move from v15 to #q8
           2.  Calibrate camera v10 for v14 at #q8 to observe v18
           3.  Take image of v18 with v10 from #q8
           4.  Move from #q8 to #q1
           5.  Send image of v18 to lander v9
           6.  Move from #q1 to #o5
           7.  Sample rock v1 (stone) at #o5
           8.  Move from #o5 to #q1
           9.  Send analysis of v1 to lander v9
           10. Drop rock v1
           11. Move from #q1 to #o5
           12. Sample rock v4 (stone) at #o5
           13. Move from #o5 to #q1
           14. Send analysis of v4 to lander v9
           15. Drop rock v4
           16. Move from #q1 to #q2
           17. Sample rock v7 (soil) at #q2
           18. Move from #q2 to #q1
           19. Send analysis of v7 to lander v9
           20. Drop rock v7
           21. Move from #q1 back to v15
           
           **Final Verification:** I've ensured that each rover returns to its starting location (v1

