User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v14, v15)
           Atom ataconf(v4, v5)
           Atom graspable(v14)
           Atom graspable(v12)
           Atom supported(v8, v9, v11)
           Atom canmove()
           Atom stackable(v8, v10)
           Atom supported(v14, v15, v11)
           Atom handempty(v4)
           Atom ataconf(v6, v7)
           Atom bconf(v3)
           Atom stackable(v8, v16)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom controllable(v4)
           Atom stackable(v14, v16)
           Atom aconf(v6, v7)
           Atom atpose(v12, v13)
           Atom pose(v14, v15)
           Atom arm(v6)
           Atom atpose(v8, v9)
           Atom graspable(v8)
           Atom supported(v12, v13, v11)
           Atom stackable(v12, v10)
           Atom stackable(v12, v16)
           Atom atbconf(v3)
           Atom stackable(v14, v10)
           Atom pose(v12, v13)
           Atom pose(v8, v9)
           Atom handempty(v6)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #g2)
           Atom grasp(v12, #g1)
           Atom grasp(v14, #g0)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #p2)
           Atom supported(v14, #p2, v16)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, #p1, #g2, #q2, #t4)
           Atom bconf(#q4)
           Atom atraj(#t6)
           Atom kin(v4, v8, v9, #g2, #q4, #t6)
           Atom bconf(#q3)
           Atom atraj(#t5)
           Atom kin(v4, v12, #p0, #g1, #q3, #t5)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g1, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, v15, #g0, #q0, #t0)
           Atom bconf(#q5)
           Atom atraj(#t7)
           Atom kin(v4, v14, #p2, #g0, #q5, #t7)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t10)
           Atom basemotion(#q4, #t10, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(v3, #o0, #q2)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom btraj(#t11)
           Atom basemotion(#q0, #t11, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom btraj(#t9)
           Atom basemotion(#q5, #t9, #q1)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t8)
           Atom basemotion(#q1, #t8, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q0)
           Atom btraj(#t12)
           Atom basemotion(#q3, #t12, #q4)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q2)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q5 #t11))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q3 #t8))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q4 #t12))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q2 #t10))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q1 #t9))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p0 #g1 #q3 #t5))
           ((place v4 v12 #p0 #g1 #q3 #t5))
           ((pick v4 v12 v13 #g1 #q1 #t1))
           ((place v4 v12 v13 #g1 #q1 #t1))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 #p2 #g0 #q5 #t7))
           ((place v4 v14 #p2 #g0 #q5 #t7))
           ((pick v4 v14 v15 #g0 #q0 #t0))
           ((place v4 v14 v15 #g0 #q0 #t0))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p1 #g2 #q2 #t4))
           ((place v4 v8 #p1 #g2 #q2 #t4))
           ((pick v4 v8 v9 #g2 #q4 #t6))
           ((place v4 v8 v9 #g2 #q4 #t6))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two arms, `v4` and `v6`, with `v4` at configuration `v5` and `v6` at configuration `v7`. Both arms are initially empty. There are three graspable objects: `v14`, `v12`, and `v8`.
           `v14` is at pose `v15` and supported by `v11`. It can also be placed at `#o2` on `v10` or `#p2` on `v16`.
           `v12` is at pose `v13` and supported by `v11`. It can also be placed at `#p0` on `v16` or `#o2` on `v10`.
           `v8` is at pose `v9` and supported by `v11`. It can also be placed at `#p1` on `v16` or `#o2` on `v10`.
           Objects `v8`, `v12`, and `v14` are stackable on `v10` and `v16`.
           
           The robot's base is at `v3`. There are several base configurations (`#q0` to `#q5`, and `#o3`) and associated base motions (`basemotion` facts) and base trajectories (`btraj` facts).
           
           The goal is to have `v8`, `v12`, and `v14` all `on` `v16`. This means `supported` by `v16` at their respective `atpose` locations.
           
           The plan involves picking up each object from its initial location and placing it onto `v16` at a designated pose.
           
           1. **Move to `q4` to pick `v8`**: The robot needs to move its base to `q4` to be able to pick `v8` from `v9` using `kin(v4, v8, v9, #g2, #q4, #t6)`.
           2. **Pick `v8`**: Once at `q4`, `v4` picks `v8` from `v9`.
           3. **Move to `q2` to place `v8` on `v16`**: The robot needs to move its base to `q2` to be able to place `v8` at `#p1` on `v16` using `kin(v4, v8, #p1, #g2, #q2, #t4)`.
           4. **Place `v8`**: Once at `q2`, `v4` places `v8` at `#p1`.
           5. **Move to `q1` to pick `v12`**: The robot needs to move its base to `q1` to be able to pick `v12` from `v13` using `kin(v4, v12, v13, #g1, #q1, #t1)`.
           6. **Pick `v12`**: Once at `q1`, `v4` picks `v12` from `v13`.
           7. **Move to `q3` to place `v12` on `v16`**: The robot needs to move its base to `q3` to be able to place `v12` at `#p0` on `v16` using `kin(v4, v12, #p0, #g1, #q3, #t5)`.
           8. **Place `v12`**: Once at `q3`, `v4` places `v12` at `#p0`.
           9. **Move to `q0` to pick `v14`**: The robot needs to move its base to `q0` to be able to pick `v14` from `v15` using `kin(v4, v14, v15, #g0, #q0, #t0)`.
           10. **Pick `v14`**: Once at `q0`, `v4` picks `v14` from `v15`.
           11. **Move to `q5` to place `v14` on `v16`**: The robot needs to move its base to `q5` to be able to place `v14` at `#p2` on `v16` using `kin(v4, v14, #p2, #g0, #q5, #t7)`.
           12. **Place `v14`**: Once at `q5`, `v4` places `v14` at `#p2`.
           
           --Plan--:
           (move_base v3 #q4 #o0)
           (pick v4 v8 v9 #g2 #q4 #t6)
           (move_base #q4 #q2 #t10)
           (place v4 v8 #p1 #g2 #q2 #t4)
           (move_base #q2 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #q3 #t8)
           (place v4 v12 #p0 #g1 #q3 #t5)
           (move_base #q3 #q0 #o0)
           (pick v4 v14 v15 #g0 #q0 #t0)
           (move_base #q0 #q5 #t11)
           (place v4 v14 #p2 #g0 #q5 #t7)

