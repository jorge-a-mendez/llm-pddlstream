User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v14, v15)
           Atom ataconf(v4, v5)
           Atom graspable(v14)
           Atom graspable(v12)
           Atom supported(v8, v9, v11)
           Atom canmove()
           Atom stackable(v8, v10)
           Atom supported(v14, v15, v11)
           Atom handempty(v4)
           Atom ataconf(v6, v7)
           Atom bconf(v3)
           Atom stackable(v8, v16)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom controllable(v4)
           Atom stackable(v14, v16)
           Atom aconf(v6, v7)
           Atom atpose(v12, v13)
           Atom pose(v14, v15)
           Atom arm(v6)
           Atom atpose(v8, v9)
           Atom graspable(v8)
           Atom supported(v12, v13, v11)
           Atom stackable(v12, v10)
           Atom stackable(v12, v16)
           Atom atbconf(v3)
           Atom stackable(v14, v10)
           Atom pose(v12, v13)
           Atom pose(v8, v9)
           Atom handempty(v6)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #g2)
           Atom grasp(v12, #g1)
           Atom grasp(v14, #g0)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #p2)
           Atom supported(v14, #p2, v16)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, #p1, #g2, #q2, #t4)
           Atom bconf(#q4)
           Atom atraj(#t6)
           Atom kin(v4, v8, v9, #g2, #q4, #t6)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g1, #q1, #t1)
           Atom bconf(#q3)
           Atom atraj(#t5)
           Atom kin(v4, v12, #p0, #g1, #q3, #t5)
           Atom bconf(#q5)
           Atom atraj(#t7)
           Atom kin(v4, v14, #p2, #g0, #q5, #t7)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, v15, #g0, #q0, #t0)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t15)
           Atom basemotion(v3, #t15, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(v3, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t10)
           Atom basemotion(#q4, #t10, #q2)
           Atom btraj(#t14)
           Atom basemotion(#q2, #t14, #q1)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, #q2)
           Atom btraj(#t11)
           Atom basemotion(#q0, #t11, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom btraj(#t9)
           Atom basemotion(#q5, #t9, #q1)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q0, #o0, #q3)
           Atom btraj(#t8)
           Atom basemotion(#q1, #t8, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t12)
           Atom basemotion(#q3, #t12, #q4)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t13)
           Atom basemotion(#q3, #t13, #q0)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q5)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q5 #t11))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q3 #t8))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q1 #t14))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q4 #t12))
           ((move_base #q3 #q0 #t13))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q2 #t10))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q1 #t9))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t15))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p0 #g1 #q3 #t5))
           ((place v4 v12 #p0 #g1 #q3 #t5))
           ((pick v4 v12 v13 #g1 #q1 #t1))
           ((place v4 v12 v13 #g1 #q1 #t1))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 #p2 #g0 #q5 #t7))
           ((place v4 v14 #p2 #g0 #q5 #t7))
           ((pick v4 v14 v15 #g0 #q0 #t0))
           ((place v4 v14 v15 #g0 #q0 #t0))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p1 #g2 #q2 #t4))
           ((place v4 v8 #p1 #g2 #q2 #t4))
           ((pick v4 v8 v9 #g2 #q4 #t6))
           ((place v4 v8 v9 #g2 #q4 #t6))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three objects: `v8`, `v12`, and `v14`. All are graspable and stackable on `v10` and `v16`. Initially, `v8`, `v12`, and `v14` are supported by `v11` at poses `v9`, `v13`, and `v15` respectively. The robot has two arms, `v4` and `v6`, both are handempty. The robot is at base configuration `v3`.
           
           The goal is to place all three objects (`v8`, `v12`, `v14`) on `v16`. This requires picking up each object from its initial location and placing it at a new pose supported by `v16`.
           
           Let's break down the plan for each object:
           
           1.  **Place `v8` on `v16`:**
               *   `v8` is currently at pose `v9` and supported by `v11`. We need to pick it up and place it on `v16`.
               *   There is a `place` action `(place v4 v8 #p1 #g2 #q2 #t4)` where `#p1` is a pose supported by `v16`. This means we need to pick `v8` from `v9` with `g2` using arm `v4`, and then move to base configuration `#q2` to place it at `#p1`. The `pick` action for `v8` from `v9` is `(pick v4 v8 v9 #g2 #q4 #t6)`. This requires the robot to be at base configuration `#q4`.
               *   So, the sequence would be: move to `#q4`, pick `v8`, move to `#q2`, place `v8`.
           
           2.  **Place `v12` on `v16`:**
               *   `v12` is currently at pose `v13` and supported by `v11`. We need to pick it up and place it on `v16`.
               *   There is a `place` action `(place v4 v12 #p0 #g1 #q3 #t5)` where `#p0` is a pose supported by `v16`. This means we need to pick `v12` from `v13` with `g1` using arm `v4`, and then move to base configuration `#q3` to place it at `#p0`. The `pick` action for `v12` from `v13` is `(pick v4 v12 v13 #g1 #q1 #t1)`. This requires the robot to be at base configuration `#q1`.
               *   So, the sequence would be: move to `#q1`, pick `v12`, move to `#q3`, place `v12`.
           
           3.  **Place `v14` on `v16`:**
               *   `v14` is currently at pose `v15` and supported by `v11`. We need to pick it up and place it on `v16`.
               *   There is a `place` action `(place v4 v14 #p2 #g0 #q5 #t7)` where `#p2` is a pose supported by `v16`. This means we need to pick `v14` from `v15` with `g0` using arm `v4`, and then move to base configuration `#q5` to place it at `#p2`. The `pick` action for `v14` from `v15` is `(pick v4 v14 v15 #g0 #q0 #t0)`. This requires the robot to be at base configuration `#q0`.
               *   So, the sequence would be: move to `#q0`, pick `v14`, move to `#q5`, place `v14`.
           
           We need to ensure that the robot's base configuration is correct before each pick and place action, and that the arm `v4` is handempty before each pick and after each place. The initial state shows `atbconf(v3)` and `handempty(v4)`.
           
           Let's sequence these actions:
           
           1.  **Move `v14` to `v16`:**
               *   Move base to `#q0` to pick `v14`.
               *   Pick `v14`.
               *   Move base to `#q5` to place `v14`.
               *   Place `v14`.
           
           2.  **Move `v12` to `v16`:**
               *   Move base from `#q5` to `#q1` to pick `v12`.
               *   Pick `v12`.
               *   Move base to `#q3` to place `v12`.
               *   Place `v12`.
           
           3.  **Move `v8` to `v16`:**
               *   Move base from `#q3` to `#q4` to pick `v8`.
               *   Pick `v8`.
               *   Move base to `#q2` to place `v8`.
               *   Place `v8`.
           
           All actions use arm `v4`.
           --Plan--:
           (move_base v3 #q0 #t2)
           (pick v4 v14 v15 #g0 #q0 #t0)
           (move_base #q0 #q5 #t11)
           (place v4 v14 #p2 #g0 #q5 #t7)
           (move_base #q5 #q1 #t9)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #q3 #t8)
           (place v4 v12 #p0 #g1 #q3 #t5)
           (move_base #q3 #q4 #t12)
           (pick v4 v8 v9 #g2 #q4 #t6)
           (move_base #q4 #q2 #t10)
           (place v4 v8 #p1 #g2 #q2 #t4)

