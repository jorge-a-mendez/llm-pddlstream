User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g1: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t10: object
           #t11: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.416, -0.241), (-4.321, -0.147)).
           Object v9 is a pose with position (4.5, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.315, 0.265), (4.385, 0.335)).
           Object v22 is a grasp with position (0.005, 0.0, -0.04) and quaternion (0.0, 0.0, 0.707, 0.707) relative to the target object.
           Object v3 is a base configuration with (x, y, theta) = (2.5, 0.0, 0.0).
           Object v13 is a pose with position (-4.368, -0.194, 0.801) and quaternion (0.0, 0.0, 0.972, -0.234).
           Object v21 is a grasp with position (0.005, 0.0, -0.04) and quaternion (0.0, 0.0, -0.707, 0.707) relative to the target object.
           Object v16 is a pose with position (4.35, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.0)).
           Object v23 is a grasp with position (0.005, 0.0, -0.04) and quaternion (0.0, 0.0, 0.0, 1.0) relative to the target object.
           Object v20 is a grasp with position (0.005, 0.0, -0.04) and quaternion (0.0, -0.0, 1.0, -0.0) relative to the target object.
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.6)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.8, -0.6), (-4.2, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.465, 0.265), (4.535, 0.335)).
           Object v19 is a pose with position (4.653, -0.136, 0.802) and quaternion (0.0, 0.0, 0.147, 0.989).
           Object v5 is an arm configuration with joint values (0.393, 0.333, 0.0, -1.522, 2.722, -1.219, -2.989).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v15)
           Atom supported(v12, v13, v14)
           Atom graspable(v12)
           Atom pose(v15, v16)
           Atom arm(v4)
           Atom atpose(v15, v16)
           Atom bconf(v3)
           Atom supported(v8, v9, v11)
           Atom atbconf(v3)
           Atom stackable(v12, v18)
           Atom stackable(v8, v18)
           Atom stackable(v8, v10)
           Atom handempty(v4)
           Atom aconf(v4, v5)
           Atom controllable(v4)
           Atom type(v12, v17)
           Atom type(v8, v17)
           Atom canmove()
           Atom atpose(v12, v13)
           Atom graspable(v8)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v23, v15, v16)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom stackable(v12, v10)
           Atom ataconf(v4, v5)
           Atom supported(v15, v16, v11)
           Atom ataconf(v6, v7)
           Atom stackable(v15, v10)
           Atom atpose(v8, v9)
           Atom handempty(v6)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom grasp(v8, v21)
           Atom grasp(v8, v23)
           Atom grasp(v8, v20)
           Atom grasp(v8, v22)
           Atom bconf(#q5)
           Atom atraj(#t10)
           Atom kin(v4, v8, v19, v23, #q5, #t10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v19, v21, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v8, v9, v23, #q4, #t8)
           Atom kin(v4, v8, v19, v22, #o3, #o4)
           Atom kin(v4, v8, v19, v20, #o3, #o4)
           Atom grasp(v15, #o1)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v18)
           Atom grasp(v12, #g1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(v3, #o0, #q5)
           Atom bconf(#q3)
           Atom atraj(#t7)
           Atom kin(v4, v12, #p1, #g1, #q3, #t7)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v12, v13, #g1, #q2, #t5)
           Atom btraj(#t11)
           Atom basemotion(#q4, #t11, #q5)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q5 #t11))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t6))
           ((move_base v3 #q4 #t9))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p1 #g1 #q3 #t7))
           ((place v4 v12 #p1 #g1 #q3 #t7))
           ((pick v4 v12 v13 #g1 #q2 #t5))
           ((place v4 v12 v13 #g1 #q2 #t5))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 #o3 #o4))
           ((place v4 v8 v19 v20 #o3 #o4))
           ((pick v4 v8 v19 v21 #o3 #o4))
           ((place v4 v8 v19 v21 #o3 #o4))
           ((pick v4 v8 v19 v22 #o3 #o4))
           ((place v4 v8 v19 v22 #o3 #o4))
           ((pick v4 v8 v19 v23 #q5 #t10))
           ((place v4 v8 v19 v23 #q5 #t10))
           ((pick v4 v8 v9 v23 #q4 #t8))
           ((place v4 v8 v9 v23 #q4 #t8))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `(on green v18)` and `(type green v17)`. We have `v8` which is of `type v17` and `v18` is a surface. We need to place `v8` on `v18`.
           From the initial state we know `atpose(v8, v9)` and `supported(v8, v9, v11)`. `v11` is a table.
           We need to pick `v8` from `v9` and then place it on `v18`.
           We have a pick action `(pick v4 v8 v9 v23 #q4 #t8)` that picks `v8` from `v9` using `v23` grasp.
           Then we need to place `v8` on `v18`. We have `pose(v8, v19)` and `supported(v8, v19, v18)`. So we can use `v19` as the target pose for `v8` on `v18`.
           The place action will be `(place v4 v8 v19 v23 #q5 #t10)`.
           Before picking, the robot needs to be at `bconf(#q4)`. Before placing, the robot needs to be at `bconf(#q5)`. We can use `move_base` actions to move the robot.
           
           --Plan--:
           (move_base v3 #q4 #t9)
           (pick v4 v8 v9 v23 #q4 #t8)
           (move_base #q4 #q5 #t11)
           (place v4 v8 v19 v23 #q5 #t10)

