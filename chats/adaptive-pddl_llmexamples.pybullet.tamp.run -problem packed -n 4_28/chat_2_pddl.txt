User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v14)
           Atom stackable(v8, v10)
           Atom atbconf(v3)
           Atom handempty(v6)
           Atom supported(v8, v9, v11)
           Atom supported(v16, v17, v11)
           Atom stackable(v16, v18)
           Atom arm(v4)
           Atom arm(v6)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v18)
           Atom aconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom pose(v12, v13)
           Atom controllable(v4)
           Atom pose(v14, v15)
           Atom handempty(v4)
           Atom graspable(v16)
           Atom atpose(v8, v9)
           Atom pose(v8, v9)
           Atom atpose(v12, v13)
           Atom graspable(v12)
           Atom stackable(v14, v18)
           Atom bconf(v3)
           Atom canmove()
           Atom atpose(v14, v15)
           Atom ataconf(v6, v7)
           Atom supported(v12, v13, v11)
           Atom stackable(v14, v10)
           Atom stackable(v12, v10)
           Atom atpose(v16, v17)
           Atom pose(v16, v17)
           Atom graspable(v8)
           Atom stackable(v12, v18)
           Atom aconf(v4, v5)
           Atom stackable(v16, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v8, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #o1)
           Atom supported(v14, #o2, v18)
           Atom grasp(v12, #o1)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #o1)
           Atom grasp(v16, #o1)
           Atom supported(v16, #o2, v18)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v16 #o2 #o1 #o3 #o4))
           ((place v4 v16 #o2 #o1 #o3 #o4))
           ((pick v4 v16 v17 #o1 #o3 #o4))
           ((place v4 v16 v17 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene involves several objects (v8, v12, v14, v16) that are graspable and stackable. Currently, v8, v12, v14, and v16 are at specific poses (v9, v13, v15, v17 respectively) and all are supported by v11. The robot has two arms, v4 and v6, with v4 being controllable and both arms being handempty. The robot's base is at configuration v3. The goal is to move all four objects (v8, v12, v14, v16) onto the object v18.
           
           To achieve this, the robot needs to pick up each object and then place it on v18. The available actions confirm that the robot arm v4 can pick up and place all these objects using a specific grasp (#o1) and base configuration (#o3), and that there are kinematically feasible trajectories (#o4) and object poses (#o2) on v18.
           
           The plan will involve the following sequence for each object:
           1. `move_base` from `v3` to `#o3` (if not already there) to reach a configuration where the `kin` predicates are satisfied for picking and placing.
           2. `pick` the object from its current pose.
           3. `place` the object onto `v18` at a new pose.
           4. Repeat for all objects.
           
           Since the initial `atbconf` is `v3` and the `kin` predicates use `#o3`, the first action will be to move the base. All objects can be placed at pose `#o2` on `v18`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v16 v17 #o1 #o3 #o4)
           (place v4 v16 #o2 #o1 #o3 #o4)

