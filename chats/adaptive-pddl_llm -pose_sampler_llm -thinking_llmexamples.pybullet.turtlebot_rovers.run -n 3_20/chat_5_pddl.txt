User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v8)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom atconf(v12, v13)
           Atom objective(v18)
           Atom rock(v1)
           Atom conf(v14, v15)
           Atom lander(v9)
           Atom store(v16)
           Atom onboard(v10, v14)
           Atom rock(v3)
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom rock(v5)
           Atom rover(v14)
           Atom rock(v7)
           Atom free(v12, v16)
           Atom type(v7, v6)
           Atom objective(v17)
           Atom camera(v10)
           Atom free(v14, v16)
           Atom supports(v10, v11)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom conf(v12, v13)
           Atom type(v8, v6)
           Atom rover(v12)
           Atom rock(v4)
           Atom type(v1, v2)
           Atom objective(v19)
           Atom above(v12, #q2, v1)
           Atom conf(v12, #q2)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom imagevisible(v12, #q0, #y0, v19)
           Atom imagerange(v12, #q0, v19)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q9, v4)
           Atom conf(v12, #q9)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q3, #y2, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #q8, v3)
           Atom conf(v12, #q8)
           Atom above(v12, #q10, v8)
           Atom conf(v12, #q10)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q7, #y4, v9)
           Atom comrange(v14, #q7, v9)
           Atom conf(v14, #q7)
           Atom ray(#y4)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v8)
           Atom above(v14, #q6, v5)
           Atom conf(v14, #q6)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #t5, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q0, #t17, #q3)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, v13, #t4, #q0)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, v15, #t16, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q5, #t18, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, v13, #t6, #q5)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q3, #t14, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q10, #t22, #q1)
           Atom motion(v12, #q8, #t19, #q1)
           Atom motion(v12, #q1, #t12, #q3)
           Atom motion(v12, #q1, #t20, #q9)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q5, #t11, #q1)
           Atom motion(v12, #q1, #t3, #q4)
           Atom motion(v12, #q1, #t10, #q5)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q3, #t1, #q1)
           Atom motion(v12, #q9, #t21, #q1)
           Atom motion(v12, #q4, #t9, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q1, #t2, #q2)
           Atom motion(v12, #q1, #t7, v13)
           Atom motion(v12, #q2, #t8, #q1)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #t15, v15)
           Atom motion(v14, #q6, #t13, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q10 v8 v16))
           ((sample_rock v12 #q2 v1 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v12 #q9 v4 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q6 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t17 #q3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #t10 #q5))
           ((move v12 #q1 #t12 #q3))
           ((move v12 #q1 #t2 #q2))
           ((move v12 #q1 #t20 #q9))
           ((move v12 #q1 #t3 #q4))
           ((move v12 #q1 #t7 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t22 #q1))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t8 #q1))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t1 #q1))
           ((move v12 #q3 #t14 #q5))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t9 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t11 #q1))
           ((move v12 #q5 #t18 #q8))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q1))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t21 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t4 #q0))
           ((move v12 v13 #t5 #q3))
           ((move v12 v13 #t6 #q5))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t13 #q7))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #t15 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t16 #q6))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q3 #y2 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q3 #y2 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q7 #y4 v9 v1))
           ((send_analysis v14 #q7 #y4 v9 v3))
           ((send_analysis v14 #q7 #y4 v9 v4))
           ((send_analysis v14 #q7 #y4 v9 v7))
           ((send_analysis v14 #q7 #y4 v9 v8))
           ((send_analysis v14 #q7 #y4 v9 v5))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q7 #y4 v9 v17 v11))
           ((send_image v14 #q7 #y4 v9 v18 v11))
           ((send_image v14 #q7 #y4 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Finalized Plan for Achieving new-axiom@0() in the rovers Domain**
           
           Okay, here's the game plan. The goal is a conjunction of conditions regarding rovers, images, and rock analysis.  The key is to satisfy all the conditions **at the end** of the plan, and that the objects specified *aren't* variables (like `v12`, they are *instantiated*). This subtly changes the approach, as I have to ensure those specific rovers *end* at their respective, *specific* starting configurations.  This means I need to plan for two rovers initially, even though only one (v12) will be doing work. I need to make sure the rovers remain at their starting locations and the store `v16` becomes *free* after the plan.
           
           First, v12 needs to gather images from objectives 17, 18, and 19. I'll use its camera, v10, with mode v11. Since I am at this level of abstraction, I'll assume I have the correct image locations (based on the `imagevisible` and `above` assumptions), and assume that there are no obstacles in the way.
           
           **The plan:**
           
           1.  **Move v12 to #q0 for Objective v19.**
           2.  **Calibrate v12's camera for v19.**
           3.  **Take the image of v19.**
           4.  **Move v12 to #q3 for Objective v18.**
           5.  **Calibrate v12's camera for v18.**
           6.  **Take the image of v18.**
           7.  **Move v12 to #q5 for Objective v17.**
           8.  **Calibrate v12's camera for v17.**
           9.  **Take the image of v17.**
           10. **Move v12 to #q1 for Communication.**
           11. **Send the image of v19 to the lander.**
           12. **Send the image of v18 to the lander.**
           13. **Send the image of v17 to the lander.**
           
           Now, on to the rocks:
           
           14. **Move v12 to #q2 to sample rock v1.**
           15. **Sample rock v1 (which is a stone) using free store v16.** This makes the store *full*, which is a problem.
           16. **Drop rock v1.** This *frees* store v16.
           17. **Move v12 to #q4 to sample rock v5.**
           18. **Sample rock v5 (which is soil) using store v16.** This makes store v16 full again.
           19. **Move v12 to #q1 to communicate.** I could have saved the move if I sent the messages before dropping, but at the abstraction level, it won't matter.
           20. **Send the analysis of rock v1 to the lander.**
           21. **Send the analysis of rock v5 to the lander.**
           22. **Drop the sampled rock v5.** This returns store v16 to `free`.
           
           Finally, to satisfy the *atconf* condition, and satisfy the end condition, v12 has to return back to v13.
           
           23. **Move v12 to v13.**
           
           That should satisfy every condition: the images and analyses are sent, the store is free, and the rovers are at their original configurations.
)

Model:     **Finalized Plan for Achieving new-axiom@0() in the rovers Domain**
           
           Okay, here's the game plan. The goal is a conjunction of conditions regarding rovers, images, and rock analysis.  The key is to satisfy all the conditions **at the end** of the plan, and that the objects specified *aren't* variables (like `v12`, they are *instantiated*). This subtly changes the approach, as I have to ensure those specific rovers *end* at their respective, *specific* starting configurations.  This means I need to plan for two rovers initially, even though only one (v12) will be doing work. I need to make sure the rovers remain at their starting locations and the store `v16` becomes *free* after the plan.
           
           First, v12 needs to gather images from objectives 17, 18, and 19. I'll use its camera, v10, with mode v11. Since I am at this level of abstraction, I'll assume I have the correct image locations (based on the `imagevisible` and `above` assumptions), and assume that there are no obstacles in the way.
           
           **The plan:**
           
           1.  **Move v12 to #q0 for Objective v19.**
           2.  **Calibrate v12's camera for v19.**
           3.  **Take the image of v19.**
           4.  **Move v12 to #q3 for Objective v18.**
           5.  **Calibrate v12's camera for v18.**
           6.  **Take the image of v18.**
           7.  **Move v12 to #q5 for Objective v17.**
           8.  **Calibrate v12's camera for v17.**
           9.  **Take the image of v17.**
           10. **Move v12 to #q1 for Communication.**
           11. **Send the image of v19 to the lander.**
           12. **Send the image of v18 to the lander.**
           13. **Send the image of v17 to the lander.**
           
           Now, on to the rocks:
           
           14. **Move v12 to #q2 to sample rock v1.**
           15. **Sample rock v1 (which is a stone) using free store v16.** This makes the store *full*, which is a problem.
           16. **Drop rock v1.** This *frees* store v16.
           17. **Move v12 to #q4 to sample rock v5.**
           18. **Sample rock v5 (which is soil) using store v16.** This makes store v16 full again.
           19. **Move v12 to #q1 to communicate.** I could have saved the move if I sent the messages before dropping, but at the abstraction level, it won't matter.
           20. **Send the analysis of rock v1 to the lander.**
           21. **Send the analysis of rock v5 to the lander.**
           22. **Drop the sampled rock v5.** This returns store v16 to `free`.
           
           Finally, to satisfy the *atconf* condition, and satisfy the end condition, v12 has to return back to v13.
           
           23. **Move v12 to v13.**
           
           That should satisfy every condition: the images and analyses are sent, the store is free, and the rovers are at their original configurations.

