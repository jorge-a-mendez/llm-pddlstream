User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v12, v10)
           Atom pose(v8, v9)
           Atom stackable(v8, v10)
           Atom ataconf(v4, v5)
           Atom atpose(v8, v9)
           Atom atpose(v15, v16)
           Atom arm(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v15)
           Atom stackable(v15, v10)
           Atom controllable(v4)
           Atom supported(v15, v16, v11)
           Atom type(v12, v17)
           Atom pose(v15, v16)
           Atom graspable(v12)
           Atom type(v8, v17)
           Atom atbconf(v3)
           Atom pose(v12, v13)
           Atom aconf(v6, v7)
           Atom atpose(v12, v13)
           Atom handempty(v6)
           Atom handempty(v4)
           Atom canmove()
           Atom aconf(v4, v5)
           Atom graspable(v8)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v18)
           Atom stackable(v8, v18)
           Atom bconf(v3)
           Atom supported(v12, v13, v14)
           Atom arm(v4)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom grasp(v8, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v15, #o1)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects and their initial poses. We have three stackable and graspable objects: `v8`, `v12`, and `v15`. `v8` is at `v9` on `v11`, `v12` is at `v13` on `v14`, and `v15` is at `v16` on `v11`. There are two arms, `v4` and `v6`, both are handempty. The robot is at base configuration `v3`.
           
           The goal `new-axiom@0()` is a derived axiom, which means it will be true if its conjunctive components are met. The axiom states: `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, we have `type(v12, v17)` and `type(v8, v17)`. So either `v8` or `v12` could be `?green`. We also have `stackable(v12, v18)` and `stackable(v8, v18)`. This means we need to place either `v8` or `v12` onto `v18`.
           
           However, the only available action is `(move_base v3 v3 #o0)`. This action moves the base from `v3` to `v3` using trajectory `#o0`. This does not change the state in a way that would allow us to pick up an object and place it on `v18`. There are no `pick` or `place` actions available in the allowed action instances, which are necessary to change the `on` predicate. Therefore, the goal is not achievable with the given set of allowed actions.

