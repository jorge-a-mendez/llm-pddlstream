User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p6 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.707, 0.707).
           Object p8 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, -0.707, 0.707).
           Object p3 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.035), (-0.065, 0.035)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p4 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.707, 0.707).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p5 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, -0.707, 0.707).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.065, -0.035), (0.135, 0.035)).
           Object v9 is a pose with position (-0.006, -0.376, 0.781) and quaternion (0.0, 0.0, -0.732, 0.681).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v13 is a pose with position (0.089, -0.251, 0.781) and quaternion (0.0, 0.0, 0.88, 0.475).
           Object v15 is a pose with position (0.257, 0.315, 0.781) and quaternion (0.0, 0.0, -0.608, 0.794).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v14, p7, v16)
           Atom graspable(v12)
           Atom graspable(v14)
           Atom pose(v14, p4)
           Atom arm(v6)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom ataconf(v4, v5)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom pose(v8, v9)
           Atom graspable(v8)
           Atom canmove()
           Atom aconf(v6, v7)
           Atom supported(v12, v13, v11)
           Atom pose(v12, p3)
           Atom pose(v8, p8)
           Atom supported(v14, p4, v16)
           Atom supported(v12, p6, v16)
           Atom atpose(v12, v13)
           Atom pose(v8, p5)
           Atom pose(v12, v13)
           Atom atpose(v14, v15)
           Atom pose(v14, v15)
           Atom pose(v12, p6)
           Atom supported(v8, v9, v11)
           Atom stackable(v8, v10)
           Atom atbconf(v3)
           Atom kin(v27, v28, p3, v29, v30, v31)
           Atom handempty(v6)
           Atom stackable(v12, v10)
           Atom stackable(v12, v16)
           Atom kin(v27, v32, p4, v29, v30, v31)
           Atom stackable(v14, v10)
           Atom controllable(v4)
           Atom stackable(v8, v16)
           Atom pose(v14, p7)
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom supported(v8, p5, v16)
           Atom supported(v8, p8, v16)
           Atom supported(v12, p3, v16)
           Atom stackable(v14, v16)
           Atom kin(v27, v33, p5, v29, v30, v31)
           Atom handempty(v4)
           Atom atpose(v8, v9)
           Atom supported(v14, v15, v11)
           Atom bconf(v3)
           Atom ataconf(v6, v7)
           Atom grasp(v12, #g0)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom grasp(v8, #g2)
           Atom supported(v8, #o2, v16)
           Atom supported(v14, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #g1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, p3, #g0, #o3, #o4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, p6, #g0, #q0, #t0)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v8, p8, #g2, #q4, #t4)
           Atom bconf(#q6)
           Atom atraj(#t13)
           Atom kin(v4, v8, p5, #g2, #q6, #t13)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v8, v9, #g2, #q5, #t5)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v14, p7, #g1, #q3, #t3)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, v15, #g1, #q2, #t2)
           Atom bconf(#q7)
           Atom atraj(#t18)
           Atom kin(v4, v14, p4, #g1, #q7, #t18)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q5)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q5)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q3)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom btraj(#t14)
           Atom basemotion(#q6, #t14, #q5)
           Atom basemotion(#q3, #o0, #q6)
           Atom btraj(#t15)
           Atom basemotion(#q5, #t15, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q0)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q6, #o0, #q4)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q4)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom btraj(#t21)
           Atom basemotion(#q5, #t21, #q4)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q5)
           Atom btraj(#t12)
           Atom basemotion(#q1, #t12, #q0)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q0, #o0, #q7)
           Atom btraj(#t19)
           Atom basemotion(#q7, #t19, #q5)
           Atom btraj(#t20)
           Atom basemotion(#q2, #t20, #q7)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q2)
           Atom btraj(#t17)
           Atom basemotion(#q0, #t17, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q7, #o0, #q2)
           Atom btraj(#t16)
           Atom basemotion(#q2, #t16, #q6)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q5)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q2 #t17))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q0 #t12))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q6 #t16))
           ((move_base #q2 #q7 #t20))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q6 #t15))
           ((move_base #q5 #q4 #t21))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q5 #t14))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q5 #t19))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t10))
           ((move_base v3 #q5 #t11))
           ((move_base v3 #q0 #t6))
           ((move_base v3 #q1 #t7))
           ((move_base v3 #q2 #t8))
           ((move_base v3 #q3 #t9))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 p3 #g0 #o3 #o4))
           ((place v4 v12 p3 #g0 #o3 #o4))
           ((pick v4 v12 p6 #g0 #q0 #t0))
           ((place v4 v12 p6 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q1 #t1))
           ((place v4 v12 v13 #g0 #q1 #t1))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p4 #g1 #q7 #t18))
           ((place v4 v14 p4 #g1 #q7 #t18))
           ((pick v4 v14 p7 #g1 #q3 #t3))
           ((place v4 v14 p7 #g1 #q3 #t3))
           ((pick v4 v14 v15 #g1 #q2 #t2))
           ((place v4 v14 v15 #g1 #q2 #t2))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 p5 #g2 #q6 #t13))
           ((place v4 v8 p5 #g2 #q6 #t13))
           ((pick v4 v8 p8 #g2 #q4 #t4))
           ((place v4 v8 p8 #g2 #q4 #t4))
           ((pick v4 v8 v9 #g2 #q5 #t5))
           ((place v4 v8 v9 #g2 #q5 #t5))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three objects: `v8`, `v12`, and `v14`. The goal is to place all three objects on the `v16` surface.
           Initially, `v12` is at `v13` (supported by `v11`), `v14` is at `v15` (supported by `v11`), and `v8` is at `v9` (supported by `v11`).
           All three objects are graspable. The robot arm `v4` is `handempty` and at `aconf` `v5`. The robot base is at `bconf` `v3`.
           
           The plan will involve picking each object from its current location and placing it on `v16`. Since `v16` is a table-like object, we can place them anywhere on it, and we will try to place them in the collision-free poses specified by the initial state (p6 for v12, p4 for v14, p8 for v8).
           
           1. **Pick v12:** `v12` is currently at `v13`. We can pick `v12` using the `pick` action. The `kin` predicate for picking `v12` from `v13` is `kin(v4, v12, v13, #g0, #q1, #t1)`. This also requires moving the base to `q1`.
           2. **Place v12:** We will place `v12` on `v16` at pose `p6`. The `kin` predicate for placing `v12` at `p6` is `kin(v4, v12, p6, #g0, #q0, #t0)`. This requires moving the base to `q0`.
           3. **Pick v14:** `v14` is currently at `v15`. We can pick `v14` using the `pick` action. The `kin` predicate for picking `v14` from `v15` is `kin(v4, v14, v15, #g1, #q2, #t2)`. This requires moving the base to `q2`.
           4. **Place v14:** We will place `v14` on `v16` at pose `p4`. The `kin` predicate for placing `v14` at `p4` is `kin(v4, v14, p4, #g1, #q7, #t18)`. This requires moving the base to `q7`.
           5. **Pick v8:** `v8` is currently at `v9`. We can pick `v8` using the `pick` action. The `kin` predicate for picking `v8` from `v9` is `kin(v4, v8, v9, #g2, #q5, #t5)`. This requires moving the base to `q5`.
           6. **Place v8:** We will place `v8` on `v16` at pose `p8`. The `kin` predicate for placing `v8` at `p8` is `kin(v4, v8, p8, #g2, #q4, #t4)`. This requires moving the base to `q4`.
           
           We will ensure the base moves to the correct configuration before each pick and place operation.
           
           --Plan--:
           (move_base v3 #q1 #t7)
           (pick v4 v12 v13 #g0 #q1 #t1)
           (move_base #q1 #q0 #t12)
           (place v4 v12 p6 #g0 #q0 #t0)
           (move_base #q0 #q2 #t17)
           (pick v4 v14 v15 #g1 #q2 #t2)
           (move_base #q2 #q7 #t20)
           (place v4 v14 p4 #g1 #q7 #t18)
           (move_base #q7 #q5 #t19)
           (pick v4 v8 v9 #g2 #q5 #t5)
           (move_base #q5 #q4 #t21)
           (place v4 v8 p8 #g2 #q4 #t4)

