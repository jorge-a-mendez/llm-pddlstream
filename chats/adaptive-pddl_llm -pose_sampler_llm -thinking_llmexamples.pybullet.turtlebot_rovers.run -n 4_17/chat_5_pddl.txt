User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v17)
           Atom camera(v10)
           Atom rover(v12)
           Atom objective(v20)
           Atom type(v7, v6)
           Atom rock(v4)
           Atom type(v8, v6)
           Atom rock(v8)
           Atom conf(v12, v13)
           Atom atconf(v14, v15)
           Atom conf(v14, v15)
           Atom type(v3, v2)
           Atom objective(v19)
           Atom onboard(v10, v14)
           Atom free(v14, v16)
           Atom type(v4, v2)
           Atom lander(v9)
           Atom supports(v10, v11)
           Atom type(v5, v6)
           Atom atconf(v12, v13)
           Atom rock(v3)
           Atom store(v16)
           Atom type(v1, v2)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom objective(v18)
           Atom rock(v5)
           Atom onboard(v10, v12)
           Atom rock(v1)
           Atom mode(v11)
           Atom rock(v7)
           Atom imagevisible(v14, #q9, #y7, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y7)
           Atom above(v14, #q14, v4)
           Atom conf(v14, #q14)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom above(v14, #q15, v7)
           Atom conf(v14, #q15)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q13, #y9, v19)
           Atom imagerange(v14, #q13, v19)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q8, #y6, v17)
           Atom imagerange(v14, #q8, v17)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom imagevisible(v14, #q12, #y8, v20)
           Atom imagerange(v14, #q12, v20)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q10, v7)
           Atom conf(v12, #q10)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom above(v12, #q16, v4)
           Atom conf(v12, #q16)
           Atom imagevisible(v12, #q4, #y2, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom imagevisible(v12, #q6, #y4, v20)
           Atom imagerange(v12, #q6, v20)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom imagevisible(v12, #q1, #y0, v19)
           Atom imagerange(v12, #q1, v19)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom comvisible(v14, #q7, #y5, v9)
           Atom comrange(v14, #q7, v9)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom motion(v14, v15, #t26, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q7, #t9, v15)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #t24, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #t19, #q7)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, v15, #t25, #q14)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t21, #q5)
           Atom motion(v12, v13, #t1, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, v13, #t11, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v14, v15, #t13, #q9)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #t8, #q7)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, v15, #t15, #q13)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, v15, #t14, #q12)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v12, #q5, #t23, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q1, #t4, #q2)
           Atom motion(v12, #q2, #t27, #q6)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q2, #t6, v13)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q5, #t28, #q2)
           Atom motion(v12, #q6, #t20, #q2)
           Atom motion(v12, #q11, #t17, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #t32, #q1)
           Atom motion(v12, #q3, #t3, #q2)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #t5, #q2)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q5, #t22, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q4, #t18, #q1)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q2, #t31, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q16)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q16)
           Atom motion(v12, #q11, #o2, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q16, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q16)
           Atom motion(v12, #q5, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q4)
           Atom motion(v12, #q16, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q16)
           Atom motion(v12, #q16, #t33, #q2)
           Atom motion(v12, #q16, #o2, #q3)
           Atom motion(v12, #q2, #t29, #q16)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t2, #q2)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q2, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, v13, #t10, #q10)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q2, #t30, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #t16, #q2)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v14, #q14, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, #q8, #t7, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, v15, #t12, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q16)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q16, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q16 v4 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q14 v4 v16))
           ((sample_rock v14 #q15 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q16))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q16))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t2 #q2))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q16))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t21 #q5))
           ((move v12 #q1 #t4 #q2))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q16))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t16 #q2))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q16))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t17 #q2))
           ((move v12 #q16 #o2 #o5))
           ((move v12 #q16 #o2 #q0))
           ((move v12 #q16 #o2 #q1))
           ((move v12 #q16 #o2 #q10))
           ((move v12 #q16 #o2 #q11))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q3))
           ((move v12 #q16 #o2 #q4))
           ((move v12 #q16 #o2 #q5))
           ((move v12 #q16 #o2 #q6))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t33 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #t0 #q0))
           ((move v12 #q2 #t27 #q6))
           ((move v12 #q2 #t29 #q16))
           ((move v12 #q2 #t30 #q10))
           ((move v12 #q2 #t31 #q4))
           ((move v12 #q2 #t32 #q1))
           ((move v12 #q2 #t6 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q16))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t3 #q2))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q16))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t18 #q1))
           ((move v12 #q4 #t5 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q16))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t22 #q4))
           ((move v12 #q5 #t23 #q6))
           ((move v12 #q5 #t28 #q2))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q16))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t20 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q1))
           ((move v12 v13 #t10 #q10))
           ((move v12 v13 #t11 #q11))
           ((move v12 v13 #t24 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q8))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t19 #q7))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #t9 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t7 #q7))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t8 #q7))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q8))
           ((move v14 v15 #t13 #q9))
           ((move v14 v15 #t14 #q12))
           ((move v14 v15 #t15 #q13))
           ((move v14 v15 #t25 #q14))
           ((move v14 v15 #t26 #q15))
           ((calibrate v12 #q1 #y0 v19 v10))
           ((calibrate v12 #q4 #y2 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v20 v10))
           ((calibrate v14 #q12 #y8 v20 v10))
           ((calibrate v14 #q13 #y9 v19 v10))
           ((calibrate v14 #q8 #y6 v17 v10))
           ((calibrate v14 #q9 #y7 v18 v10))
           ((take_image v12 #q1 #y0 v19 v10 v11))
           ((take_image v12 #q4 #y2 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v20 v10 v11))
           ((take_image v14 #q12 #y8 v20 v10 v11))
           ((take_image v14 #q13 #y9 v19 v10 v11))
           ((take_image v14 #q8 #y6 v17 v10 v11))
           ((take_image v14 #q9 #y7 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q7 #y5 v9 v1))
           ((send_analysis v14 #q7 #y5 v9 v3))
           ((send_analysis v14 #q7 #y5 v9 v5))
           ((send_analysis v14 #q7 #y5 v9 v8))
           ((send_analysis v14 #q7 #y5 v9 v4))
           ((send_analysis v14 #q7 #y5 v9 v7))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v20 v11))
           ((send_image v14 #q7 #y5 v9 v20 v11))
           ((send_image v14 #q7 #y5 v9 v19 v11))
           ((send_image v14 #q7 #y5 v9 v17 v11))
           ((send_image v14 #q7 #y5 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Strategic Plan for Axiom Fulfillment**
           
           Alright, let's break this down. My objective is to achieve `new-axiom@0()`, a conjunctive goal involving several conditions, primarily focusing on image acquisition, analysis, and communication.  The crucial aspects are: securing images, performing analyses, and then transmitting both.
           
           Initially, a few conditions are already true, like being at specific configurations and having store space. This simplifies things. The main thrust involves capturing images of four designated targets (`v17`, `v18`, `v19`, and `v20`), analyzing two samples (a stone and soil, represented as `v1` and `v7`, respectively), and finally, transmitting everything back to base.
           
           The plan I've devised leverages rover `v12` to handle these tasks. It begins at configuration `v13`. It has camera `v10` and store space which it will load and unload.
           
           The plan unfolds as follows:
           
           1.  **Image Acquisition:** I need to move `v12` to positions where these targets are in view (#q5, #q4, #q1, #q6). Each image visible location, is known as a fact: `imagevisible(v12, #q5, #y3, v17)`. Before each image, I must `calibrate` camera `v10` on `v12` (v10) for that particular target, and then utilize the 'take image' action, which requires a calibration action, and also the state `supports(v10, v11)`. I will then store those images.
           2.  **Image Communication:** After acquiring all four images, I will navigate to a designated communication point (#q2). At #q2, the rover can contact a communication hub. From there I'll send all images using `send_image`.
           3.  **Sample Acquisition:** Following image delivery, I'll move to acquire the samples. I need to get one of each soil and stone, (v1 and v7). The analyses must occur in a similar fashion, starting with a move to their positions. Specifically `#q0` for the stone and `#q10` for the soil. Rover `v12` will then `sample_rock`.
           4.  **Analysis Communication:** As before, after `sample_rock` is performed, `v12` returns to the communication point (#q2) and utilizes the `send_analysis` action.
           5.  **Finalize:** After both the images and analyses are transmitted, and with the analyses sent, it's a matter of returning to the initial rover position, and drop the sample, ensuring that all conditions of the final state are satisfied.
           
           In essence, it's a carefully orchestrated sequence of movements, calibrations, image captures, communication transmissions, sample collections, and analysis transmissions, all meticulously timed to ensure that this complex conjunction of facts is simultaneously established.
           
)

Model:     **Strategic Plan for Axiom Fulfillment**
           
           Alright, let's break this down. My objective is to achieve `new-axiom@0()`, a conjunctive goal involving several conditions, primarily focusing on image acquisition, analysis, and communication.  The crucial aspects are: securing images, performing analyses, and then transmitting both.
           
           Initially, a few conditions are already true, like being at specific configurations and having store space. This simplifies things. The main thrust involves capturing images of four designated targets (`v17`, `v18`, `v19`, and `v20`), analyzing two samples (a stone and soil, represented as `v1` and `v7`, respectively), and finally, transmitting everything back to base.
           
           The plan I've devised leverages rover `v12` to handle these tasks. It begins at configuration `v13`. It has camera `v10` and store space which it will load and unload.
           
           The plan unfolds as follows:
           
           1.  **Image Acquisition:** I need to move `v12` to positions where these targets are in view (#q5, #q4, #q1, #q6). Each image visible location, is known as a fact: `imagevisible(v12, #q5, #y3, v17)`. Before each image, I must `calibrate` camera `v10` on `v12` (v10) for that particular target, and then utilize the 'take image' action, which requires a calibration action, and also the state `supports(v10, v11)`. I will then store those images.
           2.  **Image Communication:** After acquiring all four images, I will navigate to a designated communication point (#q2). At #q2, the rover can contact a communication hub. From there I'll send all images using `send_image`.
           3.  **Sample Acquisition:** Following image delivery, I'll move to acquire the samples. I need to get one of each soil and stone, (v1 and v7). The analyses must occur in a similar fashion, starting with a move to their positions. Specifically `#q0` for the stone and `#q10` for the soil. Rover `v12` will then `sample_rock`.
           4.  **Analysis Communication:** As before, after `sample_rock` is performed, `v12` returns to the communication point (#q2) and utilizes the `send_analysis` action.
           5.  **Finalize:** After both the images and analyses are transmitted, and with the analyses sent, it's a matter of returning to the initial rover position, and drop the sample, ensuring that all conditions of the final state are satisfied.
           
           In essence, it's a carefully orchestrated sequence of movements, calibrations, image captures, communication transmissions, sample collections, and analysis transmissions, all meticulously timed to ensure that this complex conjunction of facts is simultaneously established.
           

