User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom arm(v6)
           Atom aconf(v4, v5)
           Atom pose(v12, v13)
           Atom type(v12, v17)
           Atom supported(v15, v16, v11)
           Atom ataconf(v6, v7)
           Atom graspable(v12)
           Atom stackable(v8, v18)
           Atom type(v8, v17)
           Atom supported(v8, v9, v11)
           Atom pose(v8, v9)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom atpose(v15, v16)
           Atom stackable(v8, v10)
           Atom graspable(v15)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v14)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom handempty(v4)
           Atom stackable(v12, v18)
           Atom handempty(v6)
           Atom bconf(v3)
           Atom aconf(v6, v7)
           Atom pose(v15, v16)
           Atom canmove()
           Atom stackable(v15, v10)
           Atom graspable(v8)
           Atom grasp(v8, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v15, #o1)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects: `v3`, `v4`, `v5`, `v6`, `v7`, `v8`, `v9`, `v10`, `v11`, `v12`, `v13`, `v14`, `v15`, `v16`, `v17`, `v18`. There are also continuous parameters `#o0`, `#o1`, `#o2`, `#o3`, `#o4`.
           
           The robot has two arms, `v4` and `v6`, which are currently at configurations `v5` and `v7` respectively. Both hands are empty. The robot's base is at configuration `v3`.
           
           There are three graspable and stackable objects: `v8`, `v12`, and `v15`.
           - `v8` is at `v9` and is supported by `v11`. It has type `v17` and can be stacked on `v10` or `v18`.
           - `v12` is at `v13` and is supported by `v14`. It has type `v17` and can be stacked on `v10` or `v18`.
           - `v15` is at `v16` and is supported by `v11`. It can be stacked on `v10`.
           
           The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true for some object `?green`. We have `v8` and `v12` as objects of type `v17`. To satisfy the `on` predicate, we need to find a pose `?p` such that `supported(?green, ?p, v18)` and `atpose(?green, ?p)`.
           
           Looking at the initial state and available actions, the only action instance provided is `(move_base v3 v3 #o0)`. This action does not change the state of any object or the robot's arm, it only moves the base from `v3` to `v3`. This implies that the robot does not need to move its base.
           
           The critical issue is that no `pick` or `place` actions are available in the provided action instances. Without these actions, the robot cannot move `v8` or `v12` to `v18`. Therefore, the `on(?green, v18)` precondition of the goal cannot be met.
           
           Since no pick/place actions are available, the robot cannot change the support of any object. The objects `v8` and `v12` are currently on `v11` and `v14` respectively, not `v18`.
           
           Therefore, the goal is unreachable with the given set of allowed actions.

