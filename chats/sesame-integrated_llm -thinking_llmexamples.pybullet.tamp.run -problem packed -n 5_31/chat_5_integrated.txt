User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g5: object
           #g6: object
           #g7: object
           #g8: object
           #g9: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q19: object
           #q20: object
           #q21: object
           #q22: object
           #q23: object
           #t28: object
           #t29: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t50: object
           #t51: object
           #t52: object
           #t53: object
           #t54: object
           #t55: object
           #t56: object
           #t57: object
           #t58: object
           #t59: object
           #t60: object
           #t61: object
           #t62: object
           @sink: object
           @stove: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v3: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v44: object
           v45: object
           v46: object
           v47: object
           v48: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v9 is a pose with position (0.248, -0.305, 0.781) and quaternion (0.0, 0.0, -0.703, 0.711).
           Object v19 is a pose with position (-0.156, 0.281, 0.781) and quaternion (0.0, 0.0, 0.906, -0.423).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p5 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (-0.08, -0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p8 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, 0.045), (-0.045, 0.115)).
           Object v13 is a pose with position (-0.031, -0.272, 0.781) and quaternion (0.0, 0.0, 0.972, 0.236).
           Object v21 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p14 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p11 is a pose with position (-0.08, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (0.218, 0.519, 0.781) and quaternion (0.0, 0.0, 0.97, -0.244).
           Object p10 is a pose with position (0.08, -0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.045, -0.115), (0.115, -0.045)).
           Object v17 is a pose with position (-0.157, -0.483, 0.781) and quaternion (0.0, 0.0, 0.827, 0.562).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p13 is a pose with position (0.08, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, -0.115), (-0.045, -0.045)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.045, 0.045), (0.115, 0.115)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom graspable(v16)
           Atom pose(v16, v17)
           Atom atpose(v16, v17)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom graspable(v18)
           Atom pose(v18, v19)
           Atom atpose(v18, v19)
           Atom stackable(v18, v10)
           Atom supported(v18, v19, v11)
           Atom stackable(v8, v20)
           Atom stackable(v12, v20)
           Atom stackable(v14, v20)
           Atom stackable(v16, v20)
           Atom stackable(v18, v20)
           Atom pose(v14, p7)
           Atom supported(v14, p7, v10)
           Atom pose(v18, p9)
           Atom supported(v18, p9, v20)
           Atom pose(v16, p8)
           Atom supported(v16, p8, v20)
           Atom supported(v14, p7, v20)
           Atom pose(v12, p6)
           Atom supported(v12, p6, v20)
           Atom pose(v8, p5)
           Atom supported(v8, p5, v20)
           Atom supported(v12, p6, v10)
           Atom supported(v18, p9, v10)
           Atom supported(v16, p8, v10)
           Atom supported(v8, p5, v10)
           Atom kin(v40, v41, p5, v42, v43, v44)
           Atom kin(v40, v45, p6, v42, v43, v44)
           Atom kin(v40, v46, p7, v42, v43, v44)
           Atom kin(v40, v47, p8, v42, v43, v44)
           Atom kin(v40, v48, p9, v42, v43, v44)
           Atom pose(v16, p10)
           Atom supported(v16, p10, v20)
           Atom kin(v40, v47, p10, v42, v43, v44)
           Atom pose(v12, p11)
           Atom supported(v12, p11, v20)
           Atom kin(v40, v45, p11, v42, v43, v44)
           Atom pose(v18, p12)
           Atom supported(v18, p12, v20)
           Atom kin(v40, v48, p12, v42, v43, v44)
           Atom pose(v8, p13)
           Atom supported(v8, p13, v20)
           Atom kin(v40, v41, p13, v42, v43, v44)
           Atom pose(v14, p14)
           Atom supported(v14, p14, v20)
           Atom kin(v40, v46, p14, v42, v43, v44)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #g9)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v20)
           Atom supported(v14, #o2, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom grasp(v14, #g7)
           Atom supported(v12, #o2, v10)
           Atom supported(v18, #o2, v10)
           Atom grasp(v18, #g5)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #g6)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g8)
           Atom bconf(#q16)
           Atom atraj(#t34)
           Atom kin(v4, v16, p10, #g9, #q16, #t34)
           Atom bconf(#q13)
           Atom atraj(#t31)
           Atom kin(v4, v16, v17, #g9, #q13, #t31)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, p8, #g9, #o3, #o4)
           Atom bconf(#q14)
           Atom atraj(#t32)
           Atom kin(v4, v12, v13, #g6, #q14, #t32)
           Atom bconf(#q18)
           Atom atraj(#t36)
           Atom kin(v4, v12, p11, #g6, #q18, #t36)
           Atom bconf(#q20)
           Atom atraj(#t47)
           Atom kin(v4, v12, p6, #g6, #q20, #t47)
           Atom bconf(#q22)
           Atom atraj(#t61)
           Atom kin(v4, v14, p7, #g7, #q22, #t61)
           Atom bconf(#q12)
           Atom atraj(#t30)
           Atom kin(v4, v14, p14, #g7, #q12, #t30)
           Atom bconf(#q19)
           Atom atraj(#t46)
           Atom kin(v4, v14, v15, #g7, #q19, #t46)
           Atom bconf(#q23)
           Atom atraj(#t62)
           Atom kin(v4, v18, p9, #g5, #q23, #t62)
           Atom bconf(#q17)
           Atom atraj(#t35)
           Atom kin(v4, v18, p12, #g5, #q17, #t35)
           Atom bconf(#q10)
           Atom atraj(#t28)
           Atom kin(v4, v18, v19, #g5, #q10, #t28)
           Atom bconf(#q21)
           Atom atraj(#t55)
           Atom kin(v4, v8, p5, #g8, #q21, #t55)
           Atom bconf(#q11)
           Atom atraj(#t29)
           Atom kin(v4, v8, v9, #g8, #q11, #t29)
           Atom bconf(#q15)
           Atom atraj(#t33)
           Atom kin(v4, v8, p13, #g8, #q15, #t33)
           Atom basemotion(#q14, #o0, v3)
           Atom btraj(#t41)
           Atom basemotion(v3, #t41, #q14)
           Atom basemotion(#q14, #o0, #q14)
           Atom basemotion(#q15, #o0, v3)
           Atom basemotion(#q15, #o0, #q15)
           Atom btraj(#t42)
           Atom basemotion(v3, #t42, #q15)
           Atom basemotion(#q14, #o0, #q15)
           Atom basemotion(#q15, #o0, #q14)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q11, #o0, #q11)
           Atom btraj(#t38)
           Atom basemotion(v3, #t38, #q11)
           Atom basemotion(#q15, #o0, #q11)
           Atom basemotion(#q11, #o0, #q15)
           Atom basemotion(#q14, #o0, #q11)
           Atom basemotion(#q11, #o0, #q14)
           Atom basemotion(#q21, #o0, v3)
           Atom basemotion(v3, #o0, #q21)
           Atom basemotion(#q21, #o0, #q21)
           Atom basemotion(#q11, #o0, #q21)
           Atom btraj(#t60)
           Atom basemotion(#q21, #t60, #q11)
           Atom basemotion(#q15, #o0, #q21)
           Atom basemotion(#q21, #o0, #q15)
           Atom basemotion(#q14, #o0, #q21)
           Atom btraj(#t57)
           Atom basemotion(#q21, #t57, #q14)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q10, #o0, #q15)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q10, #o0, #q21)
           Atom basemotion(#q10, #o0, #q14)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q15, #o0, #q10)
           Atom btraj(#t37)
           Atom basemotion(v3, #t37, #q10)
           Atom basemotion(#q21, #o0, #q10)
           Atom basemotion(#q14, #o0, #q10)
           Atom basemotion(#q13, #o0, #q11)
           Atom basemotion(#q13, #o0, #q15)
           Atom basemotion(#q13, #o0, v3)
           Atom basemotion(#q13, #o0, #q21)
           Atom basemotion(#q13, #o0, #q14)
           Atom basemotion(#q13, #o0, #q13)
           Atom basemotion(#q11, #o0, #q13)
           Atom basemotion(#q15, #o0, #q13)
           Atom btraj(#t40)
           Atom basemotion(v3, #t40, #q13)
           Atom basemotion(#q21, #o0, #q13)
           Atom basemotion(#q14, #o0, #q13)
           Atom basemotion(#q10, #o0, #q13)
           Atom basemotion(#q13, #o0, #q10)
           Atom basemotion(#q17, #o0, #q13)
           Atom basemotion(#q17, #o0, #q11)
           Atom basemotion(#q17, #o0, #q15)
           Atom basemotion(#q17, #o0, v3)
           Atom basemotion(#q17, #o0, #q21)
           Atom basemotion(#q17, #o0, #q14)
           Atom basemotion(#q13, #o0, #q17)
           Atom basemotion(#q17, #o0, #q17)
           Atom basemotion(#q11, #o0, #q17)
           Atom basemotion(#q15, #o0, #q17)
           Atom btraj(#t44)
           Atom basemotion(v3, #t44, #q17)
           Atom basemotion(#q21, #o0, #q17)
           Atom basemotion(#q14, #o0, #q17)
           Atom basemotion(#q10, #o0, #q17)
           Atom basemotion(#q17, #o0, #q10)
           Atom basemotion(#q16, #o0, #q11)
           Atom basemotion(#q16, #o0, #q15)
           Atom basemotion(#q16, #o0, v3)
           Atom basemotion(#q16, #o0, #q21)
           Atom basemotion(#q16, #o0, #q14)
           Atom basemotion(#q16, #o0, #q16)
           Atom basemotion(#q11, #o0, #q16)
           Atom basemotion(#q15, #o0, #q16)
           Atom btraj(#t43)
           Atom basemotion(v3, #t43, #q16)
           Atom basemotion(#q21, #o0, #q16)
           Atom basemotion(#q14, #o0, #q16)
           Atom btraj(#t52)
           Atom basemotion(#q13, #t52, #q16)
           Atom basemotion(#q16, #o0, #q13)
           Atom basemotion(#q17, #o0, #q16)
           Atom basemotion(#q16, #o0, #q17)
           Atom basemotion(#q10, #o0, #q16)
           Atom btraj(#t58)
           Atom basemotion(#q16, #t58, #q10)
           Atom basemotion(#q23, #o0, #q16)
           Atom basemotion(#q23, #o0, #q13)
           Atom basemotion(#q23, #o0, #q11)
           Atom basemotion(#q23, #o0, #q15)
           Atom basemotion(#q23, #o0, v3)
           Atom basemotion(#q23, #o0, #q21)
           Atom basemotion(#q23, #o0, #q14)
           Atom basemotion(#q16, #o0, #q23)
           Atom basemotion(#q13, #o0, #q23)
           Atom basemotion(#q11, #o0, #q23)
           Atom basemotion(#q15, #o0, #q23)
           Atom basemotion(v3, #o0, #q23)
           Atom basemotion(#q21, #o0, #q23)
           Atom basemotion(#q23, #o0, #q23)
           Atom basemotion(#q14, #o0, #q23)
           Atom basemotion(#q17, #o0, #q23)
           Atom basemotion(#q23, #o0, #q17)
           Atom basemotion(#q10, #o0, #q23)
           Atom basemotion(#q23, #o0, #q10)
           Atom basemotion(#q19, #o0, #q11)
           Atom basemotion(#q19, #o0, #q15)
           Atom basemotion(#q19, #o0, v3)
           Atom basemotion(#q19, #o0, #q21)
           Atom basemotion(#q19, #o0, #q14)
           Atom basemotion(#q19, #o0, #q19)
           Atom basemotion(#q11, #o0, #q19)
           Atom basemotion(#q15, #o0, #q19)
           Atom btraj(#t49)
           Atom basemotion(v3, #t49, #q19)
           Atom basemotion(#q21, #o0, #q19)
           Atom basemotion(#q14, #o0, #q19)
           Atom basemotion(#q16, #o0, #q19)
           Atom basemotion(#q19, #o0, #q16)
           Atom basemotion(#q13, #o0, #q19)
           Atom basemotion(#q19, #o0, #q13)
           Atom basemotion(#q23, #o0, #q19)
           Atom basemotion(#q19, #o0, #q23)
           Atom basemotion(#q17, #o0, #q19)
           Atom basemotion(#q19, #o0, #q17)
           Atom basemotion(#q10, #o0, #q19)
           Atom basemotion(#q19, #o0, #q10)
           Atom basemotion(#q12, #o0, #q11)
           Atom basemotion(#q12, #o0, #q15)
           Atom basemotion(#q12, #o0, v3)
           Atom basemotion(#q12, #o0, #q21)
           Atom basemotion(#q12, #o0, #q14)
           Atom basemotion(#q12, #o0, #q12)
           Atom basemotion(#q11, #o0, #q12)
           Atom basemotion(#q15, #o0, #q12)
           Atom btraj(#t39)
           Atom basemotion(v3, #t39, #q12)
           Atom basemotion(#q21, #o0, #q12)
           Atom basemotion(#q14, #o0, #q12)
           Atom basemotion(#q19, #o0, #q12)
           Atom basemotion(#q12, #o0, #q19)
           Atom basemotion(#q16, #o0, #q12)
           Atom basemotion(#q12, #o0, #q16)
           Atom basemotion(#q13, #o0, #q12)
           Atom basemotion(#q12, #o0, #q13)
           Atom basemotion(#q23, #o0, #q12)
           Atom basemotion(#q12, #o0, #q23)
           Atom basemotion(#q17, #o0, #q12)
           Atom basemotion(#q12, #o0, #q17)
           Atom basemotion(#q10, #o0, #q12)
           Atom basemotion(#q12, #o0, #q10)
           Atom btraj(#t59)
           Atom basemotion(#q20, #t59, #q11)
           Atom basemotion(#q20, #o0, #q15)
           Atom basemotion(#q20, #o0, v3)
           Atom basemotion(#q20, #o0, #q21)
           Atom btraj(#t56)
           Atom basemotion(#q20, #t56, #q14)
           Atom btraj(#t54)
           Atom basemotion(#q11, #t54, #q20)
           Atom basemotion(#q15, #o0, #q20)
           Atom basemotion(v3, #o0, #q20)
           Atom basemotion(#q21, #o0, #q20)
           Atom btraj(#t48)
           Atom basemotion(#q14, #t48, #q20)
           Atom basemotion(#q20, #o0, #q20)
           Atom basemotion(#q12, #o0, #q20)
           Atom basemotion(#q20, #o0, #q12)
           Atom btraj(#t50)
           Atom basemotion(#q19, #t50, #q20)
           Atom basemotion(#q20, #o0, #q19)
           Atom basemotion(#q16, #o0, #q20)
           Atom basemotion(#q20, #o0, #q16)
           Atom basemotion(#q13, #o0, #q20)
           Atom btraj(#t51)
           Atom basemotion(#q20, #t51, #q13)
           Atom basemotion(#q23, #o0, #q20)
           Atom basemotion(#q20, #o0, #q23)
           Atom basemotion(#q17, #o0, #q20)
           Atom basemotion(#q20, #o0, #q17)
           Atom btraj(#t53)
           Atom basemotion(#q10, #t53, #q20)
           Atom basemotion(#q20, #o0, #q10)
           Atom basemotion(#q22, #o0, #q11)
           Atom basemotion(#q22, #o0, #q15)
           Atom basemotion(#q22, #o0, v3)
           Atom basemotion(#q22, #o0, #q21)
           Atom basemotion(#q22, #o0, #q14)
           Atom basemotion(#q22, #o0, #q20)
           Atom basemotion(#q22, #o0, #q22)
           Atom basemotion(#q11, #o0, #q22)
           Atom basemotion(#q15, #o0, #q22)
           Atom basemotion(v3, #o0, #q22)
           Atom basemotion(#q21, #o0, #q22)
           Atom basemotion(#q14, #o0, #q22)
           Atom basemotion(#q20, #o0, #q22)
           Atom basemotion(#q12, #o0, #q22)
           Atom basemotion(#q22, #o0, #q12)
           Atom basemotion(#q19, #o0, #q22)
           Atom basemotion(#q22, #o0, #q19)
           Atom basemotion(#q16, #o0, #q22)
           Atom basemotion(#q22, #o0, #q16)
           Atom basemotion(#q13, #o0, #q22)
           Atom basemotion(#q22, #o0, #q13)
           Atom basemotion(#q23, #o0, #q22)
           Atom basemotion(#q22, #o0, #q23)
           Atom basemotion(#q17, #o0, #q22)
           Atom basemotion(#q22, #o0, #q17)
           Atom basemotion(#q10, #o0, #q22)
           Atom basemotion(#q22, #o0, #q10)
           Atom basemotion(#q18, #o0, #q11)
           Atom basemotion(#q18, #o0, #q15)
           Atom basemotion(#q18, #o0, v3)
           Atom basemotion(#q18, #o0, #q21)
           Atom basemotion(#q18, #o0, #q14)
           Atom basemotion(#q18, #o0, #q18)
           Atom basemotion(#q11, #o0, #q18)
           Atom basemotion(#q15, #o0, #q18)
           Atom btraj(#t45)
           Atom basemotion(v3, #t45, #q18)
           Atom basemotion(#q21, #o0, #q18)
           Atom basemotion(#q14, #o0, #q18)
           Atom basemotion(#q20, #o0, #q18)
           Atom basemotion(#q18, #o0, #q20)
           Atom basemotion(#q22, #o0, #q18)
           Atom basemotion(#q18, #o0, #q22)
           Atom basemotion(#q12, #o0, #q18)
           Atom basemotion(#q18, #o0, #q12)
           Atom basemotion(#q19, #o0, #q18)
           Atom basemotion(#q18, #o0, #q19)
           Atom basemotion(#q16, #o0, #q18)
           Atom basemotion(#q18, #o0, #q16)
           Atom basemotion(#q13, #o0, #q18)
           Atom basemotion(#q18, #o0, #q13)
           Atom basemotion(#q23, #o0, #q18)
           Atom basemotion(#q18, #o0, #q23)
           Atom basemotion(#q17, #o0, #q18)
           Atom basemotion(#q18, #o0, #q17)
           Atom basemotion(#q10, #o0, #q18)
           Atom basemotion(#q18, #o0, #q10)
           Atom kin(v4, v12, #o2, #g6, #o3, #o4)
           Atom kin(v4, v8, #o2, #g8, #o3, #o4)
           Atom kin(v4, v18, #o2, #g5, #o3, #o4)
           Atom kin(v4, v16, #o2, #g9, #o3, #o4)
           Atom kin(v4, v14, #o2, #g7, #o3, #o4)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#o3, #o0, #q15)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q21)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#q15, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q21, #o0, #o3)
           Atom basemotion(#q14, #o0, #o3)
           Atom basemotion(#o3, #o0, #q14)
           Atom basemotion(#q18, #o0, #o3)
           Atom basemotion(#o3, #o0, #q18)
           Atom basemotion(#q20, #o0, #o3)
           Atom basemotion(#o3, #o0, #q20)
           Atom basemotion(#q22, #o0, #o3)
           Atom basemotion(#o3, #o0, #q22)
           Atom basemotion(#q12, #o0, #o3)
           Atom basemotion(#o3, #o0, #q12)
           Atom basemotion(#q19, #o0, #o3)
           Atom basemotion(#o3, #o0, #q19)
           Atom basemotion(#q16, #o0, #o3)
           Atom basemotion(#o3, #o0, #q16)
           Atom basemotion(#q13, #o0, #o3)
           Atom basemotion(#o3, #o0, #q13)
           Atom basemotion(#q23, #o0, #o3)
           Atom basemotion(#o3, #o0, #q23)
           Atom basemotion(#q17, #o0, #o3)
           Atom basemotion(#o3, #o0, #q17)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #q10)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q14 #o0))
           ((move_base #o3 #q15 #o0))
           ((move_base #o3 #q16 #o0))
           ((move_base #o3 #q17 #o0))
           ((move_base #o3 #q18 #o0))
           ((move_base #o3 #q19 #o0))
           ((move_base #o3 #q20 #o0))
           ((move_base #o3 #q21 #o0))
           ((move_base #o3 #q22 #o0))
           ((move_base #o3 #q23 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q14 #o0))
           ((move_base #q10 #q15 #o0))
           ((move_base #q10 #q16 #o0))
           ((move_base #q10 #q17 #o0))
           ((move_base #q10 #q18 #o0))
           ((move_base #q10 #q19 #o0))
           ((move_base #q10 #q21 #o0))
           ((move_base #q10 #q22 #o0))
           ((move_base #q10 #q23 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q20 #t53))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q14 #o0))
           ((move_base #q11 #q15 #o0))
           ((move_base #q11 #q16 #o0))
           ((move_base #q11 #q17 #o0))
           ((move_base #q11 #q18 #o0))
           ((move_base #q11 #q19 #o0))
           ((move_base #q11 #q21 #o0))
           ((move_base #q11 #q22 #o0))
           ((move_base #q11 #q23 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q20 #t54))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q13 #o0))
           ((move_base #q12 #q14 #o0))
           ((move_base #q12 #q15 #o0))
           ((move_base #q12 #q16 #o0))
           ((move_base #q12 #q17 #o0))
           ((move_base #q12 #q18 #o0))
           ((move_base #q12 #q19 #o0))
           ((move_base #q12 #q20 #o0))
           ((move_base #q12 #q21 #o0))
           ((move_base #q12 #q22 #o0))
           ((move_base #q12 #q23 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q11 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q14 #o0))
           ((move_base #q13 #q15 #o0))
           ((move_base #q13 #q17 #o0))
           ((move_base #q13 #q18 #o0))
           ((move_base #q13 #q19 #o0))
           ((move_base #q13 #q20 #o0))
           ((move_base #q13 #q21 #o0))
           ((move_base #q13 #q22 #o0))
           ((move_base #q13 #q23 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q13 #q16 #t52))
           ((move_base #q14 #o3 #o0))
           ((move_base #q14 #q10 #o0))
           ((move_base #q14 #q11 #o0))
           ((move_base #q14 #q12 #o0))
           ((move_base #q14 #q13 #o0))
           ((move_base #q14 #q14 #o0))
           ((move_base #q14 #q15 #o0))
           ((move_base #q14 #q16 #o0))
           ((move_base #q14 #q17 #o0))
           ((move_base #q14 #q18 #o0))
           ((move_base #q14 #q19 #o0))
           ((move_base #q14 #q21 #o0))
           ((move_base #q14 #q22 #o0))
           ((move_base #q14 #q23 #o0))
           ((move_base #q14 v3 #o0))
           ((move_base #q14 #q20 #t48))
           ((move_base #q15 #o3 #o0))
           ((move_base #q15 #q10 #o0))
           ((move_base #q15 #q11 #o0))
           ((move_base #q15 #q12 #o0))
           ((move_base #q15 #q13 #o0))
           ((move_base #q15 #q14 #o0))
           ((move_base #q15 #q15 #o0))
           ((move_base #q15 #q16 #o0))
           ((move_base #q15 #q17 #o0))
           ((move_base #q15 #q18 #o0))
           ((move_base #q15 #q19 #o0))
           ((move_base #q15 #q20 #o0))
           ((move_base #q15 #q21 #o0))
           ((move_base #q15 #q22 #o0))
           ((move_base #q15 #q23 #o0))
           ((move_base #q15 v3 #o0))
           ((move_base #q16 #o3 #o0))
           ((move_base #q16 #q11 #o0))
           ((move_base #q16 #q12 #o0))
           ((move_base #q16 #q13 #o0))
           ((move_base #q16 #q14 #o0))
           ((move_base #q16 #q15 #o0))
           ((move_base #q16 #q16 #o0))
           ((move_base #q16 #q17 #o0))
           ((move_base #q16 #q18 #o0))
           ((move_base #q16 #q19 #o0))
           ((move_base #q16 #q20 #o0))
           ((move_base #q16 #q21 #o0))
           ((move_base #q16 #q22 #o0))
           ((move_base #q16 #q23 #o0))
           ((move_base #q16 v3 #o0))
           ((move_base #q16 #q10 #t58))
           ((move_base #q17 #o3 #o0))
           ((move_base #q17 #q10 #o0))
           ((move_base #q17 #q11 #o0))
           ((move_base #q17 #q12 #o0))
           ((move_base #q17 #q13 #o0))
           ((move_base #q17 #q14 #o0))
           ((move_base #q17 #q15 #o0))
           ((move_base #q17 #q16 #o0))
           ((move_base #q17 #q17 #o0))
           ((move_base #q17 #q18 #o0))
           ((move_base #q17 #q19 #o0))
           ((move_base #q17 #q20 #o0))
           ((move_base #q17 #q21 #o0))
           ((move_base #q17 #q22 #o0))
           ((move_base #q17 #q23 #o0))
           ((move_base #q17 v3 #o0))
           ((move_base #q18 #o3 #o0))
           ((move_base #q18 #q10 #o0))
           ((move_base #q18 #q11 #o0))
           ((move_base #q18 #q12 #o0))
           ((move_base #q18 #q13 #o0))
           ((move_base #q18 #q14 #o0))
           ((move_base #q18 #q15 #o0))
           ((move_base #q18 #q16 #o0))
           ((move_base #q18 #q17 #o0))
           ((move_base #q18 #q18 #o0))
           ((move_base #q18 #q19 #o0))
           ((move_base #q18 #q20 #o0))
           ((move_base #q18 #q21 #o0))
           ((move_base #q18 #q22 #o0))
           ((move_base #q18 #q23 #o0))
           ((move_base #q18 v3 #o0))
           ((move_base #q19 #o3 #o0))
           ((move_base #q19 #q10 #o0))
           ((move_base #q19 #q11 #o0))
           ((move_base #q19 #q12 #o0))
           ((move_base #q19 #q13 #o0))
           ((move_base #q19 #q14 #o0))
           ((move_base #q19 #q15 #o0))
           ((move_base #q19 #q16 #o0))
           ((move_base #q19 #q17 #o0))
           ((move_base #q19 #q18 #o0))
           ((move_base #q19 #q19 #o0))
           ((move_base #q19 #q21 #o0))
           ((move_base #q19 #q22 #o0))
           ((move_base #q19 #q23 #o0))
           ((move_base #q19 v3 #o0))
           ((move_base #q19 #q20 #t50))
           ((move_base #q20 #o3 #o0))
           ((move_base #q20 #q10 #o0))
           ((move_base #q20 #q12 #o0))
           ((move_base #q20 #q15 #o0))
           ((move_base #q20 #q16 #o0))
           ((move_base #q20 #q17 #o0))
           ((move_base #q20 #q18 #o0))
           ((move_base #q20 #q19 #o0))
           ((move_base #q20 #q20 #o0))
           ((move_base #q20 #q21 #o0))
           ((move_base #q20 #q22 #o0))
           ((move_base #q20 #q23 #o0))
           ((move_base #q20 v3 #o0))
           ((move_base #q20 #q13 #t51))
           ((move_base #q20 #q14 #t56))
           ((move_base #q20 #q11 #t59))
           ((move_base #q21 #o3 #o0))
           ((move_base #q21 #q10 #o0))
           ((move_base #q21 #q12 #o0))
           ((move_base #q21 #q13 #o0))
           ((move_base #q21 #q15 #o0))
           ((move_base #q21 #q16 #o0))
           ((move_base #q21 #q17 #o0))
           ((move_base #q21 #q18 #o0))
           ((move_base #q21 #q19 #o0))
           ((move_base #q21 #q20 #o0))
           ((move_base #q21 #q21 #o0))
           ((move_base #q21 #q22 #o0))
           ((move_base #q21 #q23 #o0))
           ((move_base #q21 v3 #o0))
           ((move_base #q21 #q14 #t57))
           ((move_base #q21 #q11 #t60))
           ((move_base #q22 #o3 #o0))
           ((move_base #q22 #q10 #o0))
           ((move_base #q22 #q11 #o0))
           ((move_base #q22 #q12 #o0))
           ((move_base #q22 #q13 #o0))
           ((move_base #q22 #q14 #o0))
           ((move_base #q22 #q15 #o0))
           ((move_base #q22 #q16 #o0))
           ((move_base #q22 #q17 #o0))
           ((move_base #q22 #q18 #o0))
           ((move_base #q22 #q19 #o0))
           ((move_base #q22 #q20 #o0))
           ((move_base #q22 #q21 #o0))
           ((move_base #q22 #q22 #o0))
           ((move_base #q22 #q23 #o0))
           ((move_base #q22 v3 #o0))
           ((move_base #q23 #o3 #o0))
           ((move_base #q23 #q10 #o0))
           ((move_base #q23 #q11 #o0))
           ((move_base #q23 #q12 #o0))
           ((move_base #q23 #q13 #o0))
           ((move_base #q23 #q14 #o0))
           ((move_base #q23 #q15 #o0))
           ((move_base #q23 #q16 #o0))
           ((move_base #q23 #q17 #o0))
           ((move_base #q23 #q18 #o0))
           ((move_base #q23 #q19 #o0))
           ((move_base #q23 #q20 #o0))
           ((move_base #q23 #q21 #o0))
           ((move_base #q23 #q22 #o0))
           ((move_base #q23 #q23 #o0))
           ((move_base #q23 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q20 #o0))
           ((move_base v3 #q21 #o0))
           ((move_base v3 #q22 #o0))
           ((move_base v3 #q23 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q10 #t37))
           ((move_base v3 #q11 #t38))
           ((move_base v3 #q12 #t39))
           ((move_base v3 #q13 #t40))
           ((move_base v3 #q14 #t41))
           ((move_base v3 #q15 #t42))
           ((move_base v3 #q16 #t43))
           ((move_base v3 #q17 #t44))
           ((move_base v3 #q18 #t45))
           ((move_base v3 #q19 #t49))
           ((pick v4 v12 #o2 #g6 #o3 #o4))
           ((place v4 v12 #o2 #g6 #o3 #o4))
           ((pick v4 v12 p11 #g6 #q18 #t36))
           ((place v4 v12 p11 #g6 #q18 #t36))
           ((pick v4 v12 p6 #g6 #q20 #t47))
           ((place v4 v12 p6 #g6 #q20 #t47))
           ((pick v4 v12 v13 #g6 #q14 #t32))
           ((place v4 v12 v13 #g6 #q14 #t32))
           ((pick v4 v14 #o2 #g7 #o3 #o4))
           ((place v4 v14 #o2 #g7 #o3 #o4))
           ((pick v4 v14 p14 #g7 #q12 #t30))
           ((place v4 v14 p14 #g7 #q12 #t30))
           ((pick v4 v14 p7 #g7 #q22 #t61))
           ((place v4 v14 p7 #g7 #q22 #t61))
           ((pick v4 v14 v15 #g7 #q19 #t46))
           ((place v4 v14 v15 #g7 #q19 #t46))
           ((pick v4 v16 #o2 #g9 #o3 #o4))
           ((place v4 v16 #o2 #g9 #o3 #o4))
           ((pick v4 v16 p10 #g9 #q16 #t34))
           ((place v4 v16 p10 #g9 #q16 #t34))
           ((pick v4 v16 p8 #g9 #o3 #o4))
           ((place v4 v16 p8 #g9 #o3 #o4))
           ((pick v4 v16 v17 #g9 #q13 #t31))
           ((place v4 v16 v17 #g9 #q13 #t31))
           ((pick v4 v18 #o2 #g5 #o3 #o4))
           ((place v4 v18 #o2 #g5 #o3 #o4))
           ((pick v4 v18 p12 #g5 #q17 #t35))
           ((place v4 v18 p12 #g5 #q17 #t35))
           ((pick v4 v18 p9 #g5 #q23 #t62))
           ((place v4 v18 p9 #g5 #q23 #t62))
           ((pick v4 v18 v19 #g5 #q10 #t28))
           ((place v4 v18 v19 #g5 #q10 #t28))
           ((pick v4 v8 #o2 #g8 #o3 #o4))
           ((place v4 v8 #o2 #g8 #o3 #o4))
           ((pick v4 v8 p13 #g8 #q15 #t33))
           ((place v4 v8 p13 #g8 #q15 #t33))
           ((pick v4 v8 p5 #g8 #q21 #t55))
           ((place v4 v8 p5 #g8 #q21 #t55))
           ((pick v4 v8 v9 #g8 #q11 #t29))
           ((place v4 v8 v9 #g8 #q11 #t29))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q2', '#t11'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g1', '#q2', '#t2'))
           Action(name='move_base', args=('#q2', '#q1', '#t21'))
           Action(name='place', args=('v4', 'v8', 'p5', '#g1', '#q1', '#t1'))
           Action(name='move_base', args=('#q1', '#q9', '#t26'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g2', '#q9', '#t18'))
           Action(name='move_base', args=('#q9', '#q8', '#t25'))
           Action(name='place', args=('v4', 'v12', 'p6', '#g2', '#q8', '#t8'))
           Action(name='move_base', args=('#q8', '#q3', '#t22'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g3', '#q3', '#t3'))
           Action(name='move_base', args=('#q3', '#q7', '#t23'))
           Action(name='place', args=('v4', 'v14', 'p7', '#g3', '#q7', '#t7'))
           Action(name='move_base', args=('#q7', '#q5', '#t27'))
           Action(name='pick', args=('v4', 'v16', 'v17', '#g4', '#q5', '#t5'))
           Action(name='move_base', args=('#q5', '#q4', '#t19'))
           Action(name='place', args=('v4', 'v16', 'p8', '#g4', '#q4', '#t4'))
           Action(name='move_base', args=('#q4', '#q0', '#t20'))
           Action(name='pick', args=('v4', 'v18', 'v19', '#g0', '#q0', '#t0'))
           Action(name='move_base', args=('#q0', '#q6', '#t24'))
           Action(name='place', args=('v4', 'v18', 'p9', '#g0', '#q6', '#t6'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v16', 'p8', 'v14', 'p7')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

(Thoughts: **Comprehensive Plan to Reposition Objects**
           
           Alright, let's break this down systematically. My objective is to move all these objects (v8, v12, v14, v16, v18) onto the surface v20. The key here is the "on" predicate, defined by "supported" and "atpose." I've got to find a way to place each object where it's both supported by v20 and in the desired pose.
           
           Initial analysis reveals the initial states: each object is currently "on" a surface (v11), but I need them all on v20.  There are predefined poses for each object on v20, but the previous plan failed because of a collision between v16 and v14. That suggests I'll need to carefully consider object geometry and placement.
           
           The previous failure report gave me a vital clue: "invalid poses." So, I need to analyze how to redefine these pose parameters for each object. The key insight is that I'm dealing with axis-aligned bounding boxes (AABBs). This means the orientation is fixed, simplifying collision detection, but I have to determine the "origin" of each object based on the AABB given. These origins seem not to be centered in each AABB. Object positions relative to the base of the surface will be critical.
           
           I've got the dimensions of v20 and the AABBs of each object. I already understand that placing `v14` at coordinates (0,0) (with 0.07 * 0.07 world bounding box centered) on v20 will work. It turns out that I can place all objects at various offsets with their *center* at a given pose, as long as it does not exceed `v20` dimensions. Since the origin of an object is where the bounding box's minimum is located, the AABB has to be evaluated relative to each object's pose.
           
           For the other objects, I'm defining new poses `#o2` for each object on v20. This allows me the required flexibility to bypass collisions. I'll define these new poses by determining where each object should be located to fit within the constraints and AABB for the surface. The poses will be placed relative to each other in such a way that no two AABBs will intersect.
           
           With the coordinates of `v14` already set, I'll place v8, v12, v16, v18 such that all world coordinates are valid. This means using `local_center_pose + local_offset`. Then it's just about the mechanics:  moving the base to the object's pickup pose, picking it up, moving the base to the right placement pose, and placing it down. The basic robot's action is `pick` and `place`. So the final plan involves a sequence of pick-and-place actions, with base motions in between.
           
           In my mind, it's something like this: move base, pick up v8, move base, place v8, move base, pick up v12...and so on.
           
)

Model:     **Comprehensive Plan to Reposition Objects**
           
           Alright, let's break this down systematically. My objective is to move all these objects (v8, v12, v14, v16, v18) onto the surface v20. The key here is the "on" predicate, defined by "supported" and "atpose." I've got to find a way to place each object where it's both supported by v20 and in the desired pose.
           
           Initial analysis reveals the initial states: each object is currently "on" a surface (v11), but I need them all on v20.  There are predefined poses for each object on v20, but the previous plan failed because of a collision between v16 and v14. That suggests I'll need to carefully consider object geometry and placement.
           
           The previous failure report gave me a vital clue: "invalid poses." So, I need to analyze how to redefine these pose parameters for each object. The key insight is that I'm dealing with axis-aligned bounding boxes (AABBs). This means the orientation is fixed, simplifying collision detection, but I have to determine the "origin" of each object based on the AABB given. These origins seem not to be centered in each AABB. Object positions relative to the base of the surface will be critical.
           
           I've got the dimensions of v20 and the AABBs of each object. I already understand that placing `v14` at coordinates (0,0) (with 0.07 * 0.07 world bounding box centered) on v20 will work. It turns out that I can place all objects at various offsets with their *center* at a given pose, as long as it does not exceed `v20` dimensions. Since the origin of an object is where the bounding box's minimum is located, the AABB has to be evaluated relative to each object's pose.
           
           For the other objects, I'm defining new poses `#o2` for each object on v20. This allows me the required flexibility to bypass collisions. I'll define these new poses by determining where each object should be located to fit within the constraints and AABB for the surface. The poses will be placed relative to each other in such a way that no two AABBs will intersect.
           
           With the coordinates of `v14` already set, I'll place v8, v12, v16, v18 such that all world coordinates are valid. This means using `local_center_pose + local_offset`. Then it's just about the mechanics:  moving the base to the object's pickup pose, picking it up, moving the base to the right placement pose, and placing it down. The basic robot's action is `pick` and `place`. So the final plan involves a sequence of pick-and-place actions, with base motions in between.
           
           In my mind, it's something like this: move base, pick up v8, move base, place v8, move base, pick up v12...and so on.
           

