User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v8, v6)
           Atom atconf(v14, v15)
           Atom store(v16)
           Atom rock(v1)
           Atom rock(v4)
           Atom mode(v11)
           Atom type(v1, v2)
           Atom supports(v10, v11)
           Atom onboard(v10, v12)
           Atom atconf(v12, v13)
           Atom type(v4, v2)
           Atom conf(v12, v13)
           Atom camera(v10)
           Atom rock(v3)
           Atom rover(v14)
           Atom lander(v9)
           Atom objective(v19)
           Atom rock(v7)
           Atom type(v7, v6)
           Atom type(v5, v6)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom onboard(v10, v14)
           Atom free(v12, v16)
           Atom objective(v18)
           Atom type(v3, v2)
           Atom rock(v8)
           Atom rover(v12)
           Atom rock(v5)
           Atom objective(v20)
           Atom objective(v17)
           Atom imagevisible(v12, #q5, #y3, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #q1, #y0, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #o5, v4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #q4, #y2, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v8)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #o5, v5)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q2, #t2, v13)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, v13, #t7, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #t5, #q1)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #t3, #q2)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q3, #t9, #q2)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q2, #t1, #q3)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q4, #t4, #q2)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #t8, #q2)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q2, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v14, #o0, #o2, v15)
           Atom motion(v14, v15, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o0)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o0, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o0)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o0, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o0)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t8 #q2))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t3 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #t0 #q0))
           ((move v12 #q2 #t1 #q3))
           ((move v12 #q2 #t2 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t9 #q2))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t4 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q1))
           ((move v12 v13 #t6 #q4))
           ((move v12 v13 #t7 #q5))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #q1 #y0 v18 v10))
           ((calibrate v12 #q4 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q1 #y0 v18 v10 v11))
           ((take_image v12 #q4 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v12 #q2 #y1 v9 v20 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), a store (v16), and various rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There's also a specific mode (v11) for the camera. The goal is to achieve 'new-axiom@0()', which translates to receiving images of all four objectives (v17, v18, v19, v20) in mode v11, receiving analysis for all rocks (v1, v3, v4, v5, v7, v8) of type v2 (stone) and type v6 (soil), and having both rovers (v12 and v14) at their initial configurations (v13 and v15 respectively) with free stores (v16).
           
           Currently, no images have been received and no rocks have been analyzed. Both rovers have free stores and are at their initial configurations. The camera v10 supports mode v11 and is onboard both rovers.
           
           To achieve the goal, we need to:
           1. Calibrate a camera.
           2. Take images of objectives (v17, v18, v19, v20).
           3. Send these images to the lander.
           4. Sample rocks (v1, v3, v4, v5, v7, v8).
           5. Send the analysis of these rocks to the lander.
           6. Ensure rovers are back to initial configurations and stores are free.
           
           Rover v12 has visibility to all objectives and a comm link to the lander from configuration #q2. Rover v14 has visibility to all objectives and a comm link to the lander from configuration #o0.
           
           Let's use rover v12 to take all images and analyze all rocks. This rover is at v13 initially. It can move to configurations where it can see the objectives, configurations where it can sample rocks, and a configuration where it can communicate with the lander.
           
           For images:
           - v12 can see v20 at #q5 with ray #y3.
           - v12 can see v17 at #q6 with ray #y4.
           - v12 can see v18 at #q1 with ray #y0.
           - v12 can see v19 at #q4 with ray #y2.
           - v12 can communicate with v9 at #q2 with ray #y1.
           
           For rock analysis:
           - v12 can sample v5 at #q3.
           - v12 can sample v3, v4, v7, v8 at #o5.
           - v12 can sample v1 at #q0.
           
           We need to make sure to calibrate the camera before taking images. We also need to move the rover to the correct location for each action. After sampling, the store will be full, so we will need to drop the rock before sampling another one, or ensure we only sample as many as we need (6 rocks, 1 store). The axiom requires analysis for all listed rocks, implying we need to sample each one. We will use the 'drop_rock' action for the rover if its store becomes full to sample all rocks.
           
           Let's prioritize sampling rocks first as it fills the store, which needs to be managed by dropping. Then we can take and send images.
           
           The goal includes that `receivedanalysis(?r)` for rocks. This implies that all rocks v1, v3, v4, v5, v7, v8 must be analyzed and the analysis sent. The goal also requires `receivedimage(?o, v11)` for v17, v18, v19, v20. This requires taking images and sending them. Finally, both rovers must be at their initial `atconf` and `free` store.
           
           Both rovers are initially at their respective `atconf` and `free` stores. We will use rover v12 for all tasks.
           
           To simplify, let's process all rock analyses first, then all images.
           
           Rocks to analyze: v1, v3, v4, v5, v7, v8.
           v12 can sample v1 at #q0.
           v12 can sample v3 at #o5.
           v12 can sample v4 at #o5.
           v12 can sample v5 at #q3.
           v12 can sample v7 at #o5.
           v12 can sample v8 at #o5.
           
           We only have one store, v16. So after each sample, we need to send analysis, and then drop the rock to free the store. This suggests moving to a comm-visible configuration after each sample.
           
           Sequence for rocks:
           1. Move to #q0 (for v1). Sample v1.
           2. Move to #q2 (for comm). Send analysis for v1. Drop v1.
           3. Move to #q3 (for v5). Sample v5.
           4. Move to #q2. Send analysis for v5. Drop v5.
           5. Move to #o5 (for v3, v4, v7, v8). Sample v3.
           6. Move to #q2. Send analysis for v3. Drop v3.
           7. Move to #o5. Sample v4.
           8. Move to #q2. Send analysis for v4. Drop v4.
           9. Move to #o5. Sample v7.
           10. Move to #q2. Send analysis for v7. Drop v7.
           11. Move to #o5. Sample v8.
           12. Move to #q2. Send analysis for v8. Drop v8.
           
           Sequence for images:
           (The camera will be uncalibrated after each `take_image` action, so it needs to be calibrated before taking each image.)
           1. Move to #q5 (for v20). Calibrate. Take image of v20.
           2. Move to #q2 (for comm). Send image of v20.
           3. Move to #q6 (for v17). Calibrate. Take image of v17.
           4. Move to #q2. Send image of v17.
           5. Move to #q1 (for v18). Calibrate. Take image of v18.
           6. Move to #q2. Send image of v18.
           7. Move to #q4 (for v19). Calibrate. Take image of v19.
           8. Move to #q2. Send image of v19.
           
           Final step: Move rover v12 back to v13.
           
           Let's check initial conditions:
           Rover v12 is at v13, store v16 is free.
           
           The plan will be quite long due to repeated moves, calibrations, and sends.
           
           --Plan--:
           (move v12 v13 #o2 #q0)
           (sample_rock v12 #q0 v1 v16)
           (move v12 #q0 #t8 #q2)
           (send_analysis v12 #q2 #y1 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q2 #t1 #q3)
           (sample_rock v12 #q3 v5 v16)
           (move v12 #q3 #t9 #q2)
           (send_analysis v12 #q2 #y1 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (move v12 #o5 #o2 #q2)
           (send_analysis v12 #q2 #y1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q2)
           (send_analysis v12 #q2 #y1 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #o5)
           (sample_rock v12 #o5 v7 v16)
           (move v12 #o5 #o2 #q2)
           (send_analysis v12 #q2 #y1 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #o5)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q2)
           (send_analysis v12 #q2 #y1 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v20 v11)
           (move v12 #q2 #o2 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (move v12 #q2 #o2 #q1)
           (calibrate v12 #q1 #y0 v18 v10)
           (take_image v12 #q1 #y0 v18 v10 v11)
           (move v12 #q1 #t3 #q2)
           (send_image v12 #q2 #y1 v9 v18 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v19 v10)
           (take_image v12 #q4 #y2 v19 v10 v11)
           (move v12 #q4 #t4 #q2)
           (send_image v12 #q2 #y1 v9 v19 v11)
           (move v12 #q2 #t2 v13)

