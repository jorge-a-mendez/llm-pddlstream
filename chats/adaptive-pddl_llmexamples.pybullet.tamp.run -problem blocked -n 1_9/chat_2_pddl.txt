User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atbconf(v3)
           Atom pose(v15, v16)
           Atom stackable(v12, v18)
           Atom ataconf(v4, v5)
           Atom graspable(v15)
           Atom controllable(v4)
           Atom ataconf(v6, v7)
           Atom handempty(v6)
           Atom stackable(v12, v10)
           Atom bconf(v3)
           Atom supported(v15, v16, v11)
           Atom stackable(v8, v18)
           Atom type(v8, v17)
           Atom supported(v8, v9, v11)
           Atom pose(v12, v13)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom atpose(v12, v13)
           Atom supported(v12, v13, v14)
           Atom type(v12, v17)
           Atom stackable(v15, v10)
           Atom atpose(v8, v9)
           Atom arm(v6)
           Atom stackable(v8, v10)
           Atom atpose(v15, v16)
           Atom graspable(v12)
           Atom canmove()
           Atom aconf(v6, v7)
           Atom graspable(v8)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom grasp(v8, #o1)
           Atom grasp(v12, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v15, #o1)
           Atom supported(v8, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `new-axiom@0()`, which is an axiom representing the conjunction of `on(?green, v18)` and `type(?green, v17)`. In the initial state, we have `type(v12, v17)` and `type(v8, v17)`, which means either `v12` or `v8` could be the object referred to as `?green`. The initial state also has `on(v12, v14)` (derived from `supported(v12, v13, v14)` and `atpose(v12, v13)`) and `on(v8, v11)` (derived from `supported(v8, v9, v11)` and `atpose(v8, v9)`). To achieve the goal, we need to place either `v12` or `v8` onto `v18`. Since `v12` is stackable on `v18` (`stackable(v12, v18)`) and `v8` is stackable on `v18` (`stackable(v8, v18)`), we can choose either one. Let's choose `v12`.
           
           Currently, `v12` is at `v13` and `v14` supports it. We need to pick `v12` from `v13` and place it on `v18` at a new pose. We have a `kin` predicate for `v4` to pick `v12` from `v13` using `g1` at `bconf #o3` and `atraj #o4`, and place it at `#o2` on `v18`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)

