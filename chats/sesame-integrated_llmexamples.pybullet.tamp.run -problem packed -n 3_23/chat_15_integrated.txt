User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g10: object
           #g11: object
           #g9: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q27: object
           #q28: object
           #q29: object
           #q30: object
           #q31: object
           #q32: object
           #t83: object
           #t84: object
           #t85: object
           #t86: object
           #t87: object
           #t88: object
           #t89: object
           #t90: object
           #t91: object
           #t92: object
           @sink: object
           @stove: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p3: object
           p4: object
           p5: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p3 is a pose with position (0.0, 0.0, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (-0.1, 0.1, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (0.1, -0.1, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p12 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p14 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.033, -0.384), (0.117, -0.3)).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, 0.015), (-0.015, 0.085)).
           Object v9 is a pose with position (-0.069, 0.416, 0.781) and quaternion (0.0, 0.0, -0.608, 0.794).
           Object v15 is a pose with position (0.075, -0.342, 0.781) and quaternion (0.0, 0.0, 0.623, 0.782).
           Object v13 is a pose with position (0.22, -0.37, 0.781) and quaternion (0.0, 0.0, 0.153, 0.988).
           Object p11 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p3)
           Atom supported(v8, p3, v16)
           Atom pose(v14, p5)
           Atom supported(v14, p5, v10)
           Atom supported(v14, p5, v16)
           Atom pose(v12, p4)
           Atom supported(v12, p4, v16)
           Atom supported(v12, p4, v10)
           Atom supported(v8, p3, v10)
           Atom kin(v32, v37, p4, v34, v35, v36)
           Atom supported(v14, p5, v11)
           Atom kin(v32, v33, p3, v34, v35, v36)
           Atom supported(v8, p3, v11)
           Atom supported(v12, p4, v11)
           Atom kin(v32, v38, p5, v34, v35, v36)
           Atom pose(v14, p11)
           Atom supported(v14, p11, v10)
           Atom pose(v12, p10)
           Atom supported(v12, p10, v10)
           Atom pose(v8, p9)
           Atom supported(v8, p9, v16)
           Atom supported(v14, p11, v16)
           Atom supported(v12, p10, v16)
           Atom supported(v8, p9, v10)
           Atom kin(v32, v38, p11, v34, v35, v36)
           Atom kin(v32, v33, p9, v34, v35, v36)
           Atom kin(v32, v37, p10, v34, v35, v36)
           Atom pose(v14, p14)
           Atom supported(v14, p14, v10)
           Atom pose(v12, p13)
           Atom supported(v12, p13, v10)
           Atom pose(v8, p12)
           Atom supported(v8, p12, v16)
           Atom supported(v14, p14, v16)
           Atom supported(v12, p13, v16)
           Atom supported(v8, p12, v10)
           Atom kin(v32, v33, p12, v34, v35, v36)
           Atom kin(v32, v37, p13, v34, v35, v36)
           Atom kin(v32, v38, p14, v34, v35, v36)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g9)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g11)
           Atom bconf(#q28)
           Atom atraj(#t84)
           Atom kin(v4, v14, v15, #g10, #q28, #t84)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p5, #g10, #o3, #o4)
           Atom kin(v4, v14, p11, #g10, #o3, #o4)
           Atom bconf(#q32)
           Atom atraj(#t92)
           Atom kin(v4, v14, p14, #g10, #q32, #t92)
           Atom kin(v4, v8, p3, #g11, #o3, #o4)
           Atom bconf(#q29)
           Atom atraj(#t85)
           Atom kin(v4, v8, v9, #g11, #q29, #t85)
           Atom kin(v4, v8, p9, #g11, #o3, #o4)
           Atom bconf(#q31)
           Atom atraj(#t91)
           Atom kin(v4, v8, p12, #g11, #q31, #t91)
           Atom bconf(#q30)
           Atom atraj(#t86)
           Atom kin(v4, v12, p10, #g9, #q30, #t86)
           Atom kin(v4, v12, p4, #g9, #o3, #o4)
           Atom kin(v4, v12, p13, #g9, #o3, #o4)
           Atom bconf(#q27)
           Atom atraj(#t83)
           Atom kin(v4, v12, v13, #g9, #q27, #t83)
           Atom basemotion(#q28, #o0, v3)
           Atom btraj(#t88)
           Atom basemotion(v3, #t88, #q28)
           Atom basemotion(#q28, #o0, #q28)
           Atom basemotion(#q30, #o0, v3)
           Atom btraj(#t90)
           Atom basemotion(v3, #t90, #q30)
           Atom basemotion(#q30, #o0, #q30)
           Atom basemotion(#q28, #o0, #q30)
           Atom basemotion(#q30, #o0, #q28)
           Atom basemotion(#q31, #o0, v3)
           Atom basemotion(#q31, #o0, #q31)
           Atom basemotion(v3, #o0, #q31)
           Atom basemotion(#q30, #o0, #q31)
           Atom basemotion(#q31, #o0, #q30)
           Atom basemotion(#q28, #o0, #q31)
           Atom basemotion(#q31, #o0, #q28)
           Atom basemotion(#q29, #o0, v3)
           Atom basemotion(#q29, #o0, #q29)
           Atom btraj(#t89)
           Atom basemotion(v3, #t89, #q29)
           Atom basemotion(#q31, #o0, #q29)
           Atom basemotion(#q29, #o0, #q31)
           Atom basemotion(#q30, #o0, #q29)
           Atom basemotion(#q29, #o0, #q30)
           Atom basemotion(#q28, #o0, #q29)
           Atom basemotion(#q29, #o0, #q28)
           Atom basemotion(#q32, #o0, #q31)
           Atom basemotion(#q32, #o0, v3)
           Atom basemotion(#q32, #o0, #q30)
           Atom basemotion(#q32, #o0, #q29)
           Atom basemotion(#q32, #o0, #q28)
           Atom basemotion(#q31, #o0, #q32)
           Atom basemotion(v3, #o0, #q32)
           Atom basemotion(#q30, #o0, #q32)
           Atom basemotion(#q29, #o0, #q32)
           Atom basemotion(#q32, #o0, #q32)
           Atom basemotion(#q28, #o0, #q32)
           Atom basemotion(#q27, #o0, #q31)
           Atom basemotion(#q27, #o0, v3)
           Atom basemotion(#q27, #o0, #q30)
           Atom basemotion(#q27, #o0, #q29)
           Atom basemotion(#q31, #o0, #q27)
           Atom btraj(#t87)
           Atom basemotion(v3, #t87, #q27)
           Atom basemotion(#q30, #o0, #q27)
           Atom basemotion(#q29, #o0, #q27)
           Atom basemotion(#q27, #o0, #q27)
           Atom basemotion(#q28, #o0, #q27)
           Atom basemotion(#q27, #o0, #q28)
           Atom basemotion(#q32, #o0, #q27)
           Atom basemotion(#q27, #o0, #q32)
           Atom kin(v4, v8, #o2, #g11, #o3, #o4)
           Atom kin(v4, v12, #o2, #g9, #o3, #o4)
           Atom kin(v4, v14, #o2, #g10, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q29, #o0, #o3)
           Atom basemotion(#o3, #o0, #q29)
           Atom basemotion(#q31, #o0, #o3)
           Atom basemotion(#o3, #o0, #q31)
           Atom basemotion(#q30, #o0, #o3)
           Atom basemotion(#o3, #o0, #q30)
           Atom basemotion(#q27, #o0, #o3)
           Atom basemotion(#o3, #o0, #q27)
           Atom basemotion(#q28, #o0, #o3)
           Atom basemotion(#o3, #o0, #q28)
           Atom basemotion(#q32, #o0, #o3)
           Atom basemotion(#o3, #o0, #q32)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q27 #o0))
           ((move_base #o3 #q28 #o0))
           ((move_base #o3 #q29 #o0))
           ((move_base #o3 #q30 #o0))
           ((move_base #o3 #q31 #o0))
           ((move_base #o3 #q32 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q27 #o3 #o0))
           ((move_base #q27 #q27 #o0))
           ((move_base #q27 #q28 #o0))
           ((move_base #q27 #q29 #o0))
           ((move_base #q27 #q30 #o0))
           ((move_base #q27 #q31 #o0))
           ((move_base #q27 #q32 #o0))
           ((move_base #q27 v3 #o0))
           ((move_base #q28 #o3 #o0))
           ((move_base #q28 #q27 #o0))
           ((move_base #q28 #q28 #o0))
           ((move_base #q28 #q29 #o0))
           ((move_base #q28 #q30 #o0))
           ((move_base #q28 #q31 #o0))
           ((move_base #q28 #q32 #o0))
           ((move_base #q28 v3 #o0))
           ((move_base #q29 #o3 #o0))
           ((move_base #q29 #q27 #o0))
           ((move_base #q29 #q28 #o0))
           ((move_base #q29 #q29 #o0))
           ((move_base #q29 #q30 #o0))
           ((move_base #q29 #q31 #o0))
           ((move_base #q29 #q32 #o0))
           ((move_base #q29 v3 #o0))
           ((move_base #q30 #o3 #o0))
           ((move_base #q30 #q27 #o0))
           ((move_base #q30 #q28 #o0))
           ((move_base #q30 #q29 #o0))
           ((move_base #q30 #q30 #o0))
           ((move_base #q30 #q31 #o0))
           ((move_base #q30 #q32 #o0))
           ((move_base #q30 v3 #o0))
           ((move_base #q31 #o3 #o0))
           ((move_base #q31 #q27 #o0))
           ((move_base #q31 #q28 #o0))
           ((move_base #q31 #q29 #o0))
           ((move_base #q31 #q30 #o0))
           ((move_base #q31 #q31 #o0))
           ((move_base #q31 #q32 #o0))
           ((move_base #q31 v3 #o0))
           ((move_base #q32 #o3 #o0))
           ((move_base #q32 #q27 #o0))
           ((move_base #q32 #q28 #o0))
           ((move_base #q32 #q29 #o0))
           ((move_base #q32 #q30 #o0))
           ((move_base #q32 #q31 #o0))
           ((move_base #q32 #q32 #o0))
           ((move_base #q32 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q31 #o0))
           ((move_base v3 #q32 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q27 #t87))
           ((move_base v3 #q28 #t88))
           ((move_base v3 #q29 #t89))
           ((move_base v3 #q30 #t90))
           ((pick v4 v12 #o2 #g9 #o3 #o4))
           ((place v4 v12 #o2 #g9 #o3 #o4))
           ((pick v4 v12 p10 #g9 #q30 #t86))
           ((place v4 v12 p10 #g9 #q30 #t86))
           ((pick v4 v12 p13 #g9 #o3 #o4))
           ((place v4 v12 p13 #g9 #o3 #o4))
           ((pick v4 v12 p4 #g9 #o3 #o4))
           ((place v4 v12 p4 #g9 #o3 #o4))
           ((pick v4 v12 v13 #g9 #q27 #t83))
           ((place v4 v12 v13 #g9 #q27 #t83))
           ((pick v4 v14 #o2 #g10 #o3 #o4))
           ((place v4 v14 #o2 #g10 #o3 #o4))
           ((pick v4 v14 p11 #g10 #o3 #o4))
           ((place v4 v14 p11 #g10 #o3 #o4))
           ((pick v4 v14 p14 #g10 #q32 #t92))
           ((place v4 v14 p14 #g10 #q32 #t92))
           ((pick v4 v14 p5 #g10 #o3 #o4))
           ((place v4 v14 p5 #g10 #o3 #o4))
           ((pick v4 v14 v15 #g10 #q28 #t84))
           ((place v4 v14 v15 #g10 #q28 #t84))
           ((pick v4 v8 #o2 #g11 #o3 #o4))
           ((place v4 v8 #o2 #g11 #o3 #o4))
           ((pick v4 v8 p12 #g11 #q31 #t91))
           ((place v4 v8 p12 #g11 #q31 #t91))
           ((pick v4 v8 p3 #g11 #o3 #o4))
           ((place v4 v8 p3 #g11 #o3 #o4))
           ((pick v4 v8 p9 #g11 #o3 #o4))
           ((place v4 v8 p9 #g11 #o3 #o4))
           ((pick v4 v8 v9 #g11 #q29 #t85))
           ((place v4 v8 v9 #g11 #q29 #t85))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q20', '#t57'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g8', '#q20', '#t53'))
           Action(name='move_base', args=('#q20', '#q25', '#t71'))
           Action(name='place', args=('v4', 'v8', 'p12', '#g8', '#q25', '#t65'))
           Action(name='move_base', args=('#q25', '#q18', '#t68'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g7', '#q18', '#t51'))
           Action(name='move_base', args=('#q18', '#q24', '#t75'))
           Action(name='place', args=('v4', 'v12', 'p10', '#g7', '#q24', '#t62'))
           Action(name='move_base', args=('#q24', '#q19', '#t73'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g6', '#q19', '#t52'))
           Action(name='move_base', args=('#q19', '#q23', '#t63'))
           Action(name='place', args=('v4', 'v14', 'p14', '#g6', '#q23', '#t60'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v12', 'p10', 'v8', 'p12')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The problem requires moving three objects (v8, v12, and v14) to be on object v16. Currently, all three objects are on v11. The robot must pick up each object and place it on v16. I will try to place them on predefined poses that are supported by v16. I will start with v8, then v12, and finally v14. I will pick up v8 from its initial pose v9 and place it at p12, which is supported by v16. Then I will pick up v12 from v13 and place it at p10 on v16. Lastly, I will pick up v14 from v15 and place it at p14 on v16. I will ensure that the poses selected for placement are collision-free. The previous plan failed because placing v12 at p10 collided with v8 at p12. Therefore, I will try to place the objects in different predefined poses on v16 that do not collide with each other.
           
           I need to place v8, v12, and v14 on v16.
           Initial positions:
           v8 at v9 (supported by v11)
           v12 at v13 (supported by v11)
           v14 at v15 (supported by v11)
           
           Target:
           v8 on v16
           v12 on v16
           v14 on v16
           
           Available poses on v16:
           p3 for v8
           p4 for v12
           p9 for v8
           p10 for v12
           p11 for v14
           p12 for v8
           p13 for v12
           p14 for v14
           #o2 for v8, v12, v14
           
           The previous plan failed because placing v12 at p10 collided with v8 at p12. This suggests that p10 and p12 are too close or occupy overlapping regions. I will try a different combination of poses for the objects on v16.
           I will place v8 at p3, v12 at p4, and v14 at p5 (which is supported by v16 in the initial state). These poses are further apart and should avoid collision.
           
           --Plan--:
           (move_base v3 #q29 #t89)
           (pick v4 v8 v9 #g11 #q29 #t85)
           (move_base #q29 #o3 #o0)
           (place v4 v8 p3 #g11 #o3 #o4)
           (move_base #o3 #q27 #o0)
           (pick v4 v12 v13 #g9 #q27 #t83)
           (move_base #q27 #o3 #o0)
           (place v4 v12 p4 #g9 #o3 #o4)
           (move_base #o3 #q28 #o0)
           (pick v4 v14 v15 #g10 #q28 #t84)
           (move_base #q28 #o3 #o0)
           (place v4 v14 p5 #g10 #o3 #o4)

