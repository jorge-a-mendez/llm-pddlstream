User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g2: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p2: object
           #q4: object
           #q5: object
           #t10: object
           #t11: object
           #t8: object
           #t9: object
           @sink: object
           @stove: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v14)
           Atom graspable(v15)
           Atom pose(v15, v16)
           Atom atpose(v15, v16)
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #p2)
           Atom supported(v12, #p2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g2)
           Atom bconf(#q5)
           Atom atraj(#t9)
           Atom kin(v4, v12, v13, #g2, #q5, #t9)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v12, #p2, #g2, #q4, #t8)
           Atom basemotion(#q5, #o0, v3)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q5)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t10))
           ((move_base v3 #q5 #t11))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 #p2 #g2 #q4 #t8))
           ((place v4 v12 #p2 #g2 #q4 #t8))
           ((pick v4 v12 v13 #g2 #q5 #t9))
           ((place v4 v12 v13 #g2 #q5 #t9))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Planning for new-axiom@0() in pr2-tamp**
           
           Okay, so the goal is to satisfy `new-axiom@0()`. Examining the definition, this translates to having both `on(?green, v18)` and `type(?green, v17)`.  I can see that an object, which I'll call `v12`, satisfies the  `type` condition. Therefore, my actual sub-goal becomes placing `v12` on `v18`. From the axioms, this requires finding a pose, `?p`, where `v12` is supported by `v18` and then moving the object to that particular pose. I already see in the initial state that `supported(v12, #p2, v18)`. Thus, I need `v12` to be at pose `#p2`.
           
           Currently, `v12` is at pose `v13`. I need a plan to pick it up and place it at `#p2`.  I'll use the available `pick` and `place` actions.  To pick `v12` from `v13` with the robot arm `v4`, I must first move the base to the relevant bconf. The arm motion is defined with bconf `#q5` and trajectory `#t9`, and a grasp `#g2`.
           
           The first action, therefore, is `move_base(v3, #q5, #t11)`. The preconditions are all satisfied, so I can use it. After the `move_base`, the base will be at the correct bconf for picking.
           
           Now, I can pick up the object by executing `pick(v4, v12, v13, #g2, #q5, #t9)`. The preconditions for this action are met, and picking up `v12` will result in the `atgrasp` predicate becoming true.
           
           Next, I need to place `v12` at `#p2`. Before doing this, I should move the robot's base. The `place` action uses bconf `#q4`. To reach this I must perform `move_base(#q5, #q4, #o0)`. The preconditions of this are, once again, true, so I will add it to the plan.
           
           Finally, I will use `place(v4, v12, #p2, #g2, #q4, #t8)`. The preconditions are met. This will cause `v12` to be `atpose #p2`.
           
           Therefore, the final plan is: `move_base(v3, #q5, #t11)`, `pick(v4, v12, v13, #g2, #q5, #t9)`, `move_base(#q5, #q4, #o0)`, and `place(v4, v12, #p2, #g2, #q4, #t8)`. This satisfies the final state of the problem.
           
)

Model:     **Planning for new-axiom@0() in pr2-tamp**
           
           Okay, so the goal is to satisfy `new-axiom@0()`. Examining the definition, this translates to having both `on(?green, v18)` and `type(?green, v17)`.  I can see that an object, which I'll call `v12`, satisfies the  `type` condition. Therefore, my actual sub-goal becomes placing `v12` on `v18`. From the axioms, this requires finding a pose, `?p`, where `v12` is supported by `v18` and then moving the object to that particular pose. I already see in the initial state that `supported(v12, #p2, v18)`. Thus, I need `v12` to be at pose `#p2`.
           
           Currently, `v12` is at pose `v13`. I need a plan to pick it up and place it at `#p2`.  I'll use the available `pick` and `place` actions.  To pick `v12` from `v13` with the robot arm `v4`, I must first move the base to the relevant bconf. The arm motion is defined with bconf `#q5` and trajectory `#t9`, and a grasp `#g2`.
           
           The first action, therefore, is `move_base(v3, #q5, #t11)`. The preconditions are all satisfied, so I can use it. After the `move_base`, the base will be at the correct bconf for picking.
           
           Now, I can pick up the object by executing `pick(v4, v12, v13, #g2, #q5, #t9)`. The preconditions for this action are met, and picking up `v12` will result in the `atgrasp` predicate becoming true.
           
           Next, I need to place `v12` at `#p2`. Before doing this, I should move the robot's base. The `place` action uses bconf `#q4`. To reach this I must perform `move_base(#q5, #q4, #o0)`. The preconditions of this are, once again, true, so I will add it to the plan.
           
           Finally, I will use `place(v4, v12, #p2, #g2, #q4, #t8)`. The preconditions are met. This will cause `v12` to be `atpose #p2`.
           
           Therefore, the final plan is: `move_base(v3, #q5, #t11)`, `pick(v4, v12, v13, #g2, #q5, #t9)`, `move_base(#q5, #q4, #o0)`, and `place(v4, v12, #p2, #g2, #q4, #t8)`. This satisfies the final state of the problem.
           

