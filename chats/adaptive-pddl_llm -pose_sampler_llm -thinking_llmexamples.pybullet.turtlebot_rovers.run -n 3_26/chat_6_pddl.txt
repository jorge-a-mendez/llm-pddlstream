User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q19: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom type(v5, v6)
           Atom rock(v3)
           Atom store(v16)
           Atom type(v3, v2)
           Atom supports(v10, v11)
           Atom free(v14, v16)
           Atom objective(v19)
           Atom rock(v1)
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom rock(v7)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom free(v12, v16)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom rock(v5)
           Atom rover(v12)
           Atom conf(v14, v15)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom rock(v8)
           Atom rock(v4)
           Atom objective(v17)
           Atom type(v8, v6)
           Atom lander(v9)
           Atom atconf(v12, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #q8, #y6, v17)
           Atom imagerange(v12, #q8, v17)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom imagevisible(v12, #q7, #y5, v18)
           Atom imagerange(v12, #q7, v18)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #q2, v4)
           Atom conf(v12, #q2)
           Atom above(v12, #q10, v8)
           Atom conf(v12, #q10)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom above(v14, #q17, v4)
           Atom conf(v14, #q17)
           Atom above(v14, #q18, v8)
           Atom conf(v14, #q18)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q4, #y2, v17)
           Atom imagerange(v14, #q4, v17)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom above(v14, #q19, v5)
           Atom conf(v14, #q19)
           Atom comvisible(v14, #q5, #y3, v9)
           Atom comrange(v14, #q5, v9)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #q14, v7)
           Atom conf(v14, #q14)
           Atom above(v12, #q11, v7)
           Atom conf(v12, #q11)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q12, v1)
           Atom conf(v12, #q12)
           Atom above(v14, #q15, v1)
           Atom conf(v14, #q15)
           Atom above(v12, #q13, v3)
           Atom conf(v12, #q13)
           Atom above(v14, #q16, v3)
           Atom conf(v14, #q16)
           Atom imagevisible(v14, #q0, #y0, v19)
           Atom imagerange(v14, #q0, v19)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q9, #y7, v19)
           Atom imagerange(v12, #q9, v19)
           Atom conf(v12, #q9)
           Atom ray(#y7)
           Atom motion(v12, v13, #t1, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t7, #q0)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, v13, #t10, #q7)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, v13, #t17, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v14, #q5, #t9, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #t2, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #t40, #q3)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, v13, #t24, #q8)
           Atom motion(v12, #q8, #t32, #q7)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, v13, #t19, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v14, #q5, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q0)
           Atom motion(v14, #q19, #o2, v15)
           Atom motion(v14, #q0, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q19)
           Atom motion(v14, v15, #t39, #q19)
           Atom motion(v14, #q19, #t31, #q5)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, v13, #t18, #q11)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v14, v15, #t8, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q4, #t3, #q5)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q0, #t22, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q19, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q19)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #t21, #q3)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q1, #t41, #q13)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q10, #t15, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q3, #t5, #q1)
           Atom motion(v12, #q8, #t12, #q1)
           Atom motion(v12, #q1, #t6, v13)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q1, #t16, #q10)
           Atom motion(v12, #q7, #t11, #q1)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q6, #t20, #q5)
           Atom motion(v14, #q4, #t23, #q6)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q19, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q6, #o2, #q19)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #t25, #q1)
           Atom motion(v12, #q7, #t33, #q9)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v14, #q18, #t30, #q5)
           Atom motion(v14, #q18, #o2, #q6)
           Atom motion(v14, #q18, #o2, #q0)
           Atom motion(v14, #q18, #o2, #q4)
           Atom motion(v14, #q18, #o2, #q19)
           Atom motion(v14, #q18, #o2, v15)
           Atom motion(v14, #q5, #o2, #q18)
           Atom motion(v14, #q6, #o2, #q18)
           Atom motion(v14, #q0, #o2, #q18)
           Atom motion(v14, #q18, #o2, #q18)
           Atom motion(v14, #q4, #o2, #q18)
           Atom motion(v14, #q19, #o2, #q18)
           Atom motion(v14, v15, #t38, #q18)
           Atom motion(v14, #q18, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v14, v15, #t34, #q14)
           Atom motion(v14, #q14, #o2, #q18)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v14, #q14, #o2, #q6)
           Atom motion(v14, #q14, #t26, #q5)
           Atom motion(v14, #q5, #o2, #q14)
           Atom motion(v14, #q0, #o2, #q14)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q6, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, v15, #t37, #q17)
           Atom motion(v14, #q0, #o2, #q17)
           Atom motion(v14, #q4, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q5, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q6)
           Atom motion(v14, #q18, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q0)
           Atom motion(v14, #q17, #o2, #q18)
           Atom motion(v14, #q6, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q4)
           Atom motion(v14, #q19, #o2, #q17)
           Atom motion(v14, #q17, #t29, #q5)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q17, #o2, #q19)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, v15, #t35, #q15)
           Atom motion(v14, #q18, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q6)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q18)
           Atom motion(v14, #q6, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q4)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q15, #t27, #q5)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q4, #o2, #q15)
           Atom motion(v14, #q19, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q19)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q0, #o2, #q15)
           Atom motion(v14, v15, #t36, #q16)
           Atom motion(v14, #q18, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q16)
           Atom motion(v14, #q6, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q18)
           Atom motion(v14, #q16, #t28, #q5)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q6)
           Atom motion(v14, #q19, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q19)
           Atom motion(v14, #q0, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q0)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q4, #o2, #q16)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #t14, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q2, #t4, #q1)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, v13, #t0, #q2)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q1, #t13, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v8 v16))
           ((sample_rock v12 #q11 v7 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v12 #q13 v3 v16))
           ((sample_rock v12 #q2 v4 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v14 #q14 v7 v16))
           ((sample_rock v14 #q15 v1 v16))
           ((sample_rock v14 #q16 v3 v16))
           ((sample_rock v14 #q17 v4 v16))
           ((sample_rock v14 #q18 v8 v16))
           ((sample_rock v14 #q19 v5 v16))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #t13 #q2))
           ((move v12 #q1 #t16 #q10))
           ((move v12 #q1 #t21 #q3))
           ((move v12 #q1 #t41 #q13))
           ((move v12 #q1 #t6 v13))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t15 #q1))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t40 #q3))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t14 #q3))
           ((move v12 #q2 #t4 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t5 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t11 #q1))
           ((move v12 #q7 #t33 #q9))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t12 #q1))
           ((move v12 #q8 #t32 #q7))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t25 #q1))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q2))
           ((move v12 v13 #t1 #q3))
           ((move v12 v13 #t10 #q7))
           ((move v12 v13 #t17 #q10))
           ((move v12 v13 #t18 #q11))
           ((move v12 v13 #t19 #q12))
           ((move v12 v13 #t24 #q8))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #o2 #q15))
           ((move v14 #q0 #o2 #q16))
           ((move v14 #q0 #o2 #q17))
           ((move v14 #q0 #o2 #q18))
           ((move v14 #q0 #o2 #q19))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t2 #q5))
           ((move v14 #q0 #t22 #q4))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q18))
           ((move v14 #q14 #o2 #q19))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q6))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t26 #q5))
           ((move v14 #q15 #o2 #q0))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q18))
           ((move v14 #q15 #o2 #q19))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 #q6))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t27 #q5))
           ((move v14 #q16 #o2 #q0))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q18))
           ((move v14 #q16 #o2 #q19))
           ((move v14 #q16 #o2 #q4))
           ((move v14 #q16 #o2 #q6))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t28 #q5))
           ((move v14 #q17 #o2 #q0))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q18))
           ((move v14 #q17 #o2 #q19))
           ((move v14 #q17 #o2 #q4))
           ((move v14 #q17 #o2 #q6))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t29 #q5))
           ((move v14 #q18 #o2 #q0))
           ((move v14 #q18 #o2 #q14))
           ((move v14 #q18 #o2 #q15))
           ((move v14 #q18 #o2 #q16))
           ((move v14 #q18 #o2 #q17))
           ((move v14 #q18 #o2 #q18))
           ((move v14 #q18 #o2 #q19))
           ((move v14 #q18 #o2 #q4))
           ((move v14 #q18 #o2 #q6))
           ((move v14 #q18 #o2 v15))
           ((move v14 #q18 #t30 #q5))
           ((move v14 #q19 #o2 #q0))
           ((move v14 #q19 #o2 #q14))
           ((move v14 #q19 #o2 #q15))
           ((move v14 #q19 #o2 #q16))
           ((move v14 #q19 #o2 #q17))
           ((move v14 #q19 #o2 #q18))
           ((move v14 #q19 #o2 #q19))
           ((move v14 #q19 #o2 #q4))
           ((move v14 #q19 #o2 #q6))
           ((move v14 #q19 #o2 v15))
           ((move v14 #q19 #t31 #q5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q16))
           ((move v14 #q4 #o2 #q17))
           ((move v14 #q4 #o2 #q18))
           ((move v14 #q4 #o2 #q19))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t23 #q6))
           ((move v14 #q4 #t3 #q5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q16))
           ((move v14 #q5 #o2 #q17))
           ((move v14 #q5 #o2 #q18))
           ((move v14 #q5 #o2 #q19))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #t9 v15))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q14))
           ((move v14 #q6 #o2 #q15))
           ((move v14 #q6 #o2 #q16))
           ((move v14 #q6 #o2 #q17))
           ((move v14 #q6 #o2 #q18))
           ((move v14 #q6 #o2 #q19))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t20 #q5))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t34 #q14))
           ((move v14 v15 #t35 #q15))
           ((move v14 v15 #t36 #q16))
           ((move v14 v15 #t37 #q17))
           ((move v14 v15 #t38 #q18))
           ((move v14 v15 #t39 #q19))
           ((move v14 v15 #t7 #q0))
           ((move v14 v15 #t8 #q4))
           ((calibrate v12 #q7 #y5 v18 v10))
           ((calibrate v12 #q8 #y6 v17 v10))
           ((calibrate v12 #q9 #y7 v19 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q4 #y2 v17 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((take_image v12 #q7 #y5 v18 v10 v11))
           ((take_image v12 #q8 #y6 v17 v10 v11))
           ((take_image v12 #q9 #y7 v19 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q4 #y2 v17 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q5 #y3 v9 v7))
           ((send_analysis v14 #q5 #y3 v9 v1))
           ((send_analysis v14 #q5 #y3 v9 v3))
           ((send_analysis v14 #q5 #y3 v9 v4))
           ((send_analysis v14 #q5 #y3 v9 v8))
           ((send_analysis v14 #q5 #y3 v9 v5))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q5 #y3 v9 v19 v11))
           ((send_image v14 #q5 #y3 v9 v17 v11))
           ((send_image v14 #q5 #y3 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Strategic Approach to Achieving the Axiom**
           
           My primary goal is to fulfill the conditions outlined in the `new-axiom@0()` axiom. This boils down to ensuring the receipt of three images and two analyses, all while leveraging the initial state's established conditions.  I've identified two rovers, v12 and v14, each with unique capabilities, making them ideal for a coordinated effort.
           
           I've determined that v14, positioned at location v15, is best suited for image acquisition.  It has a camera supporting the necessary mode, and its vantage points are advantageous for capturing the required images (v17, v18, and v19).  I'll task v14 with moving to the correct locations, calibrating its camera, taking the images, and transmitting them to the lander. Each calibration step is crucial and must precede the image capture.
           
           Meanwhile, rover v12, initially at location v13, will focus on acquiring and transmitting the required rock analyses. It can be moved to the locations above rocks (v4 - type v2, and v8 - type v6), sample them, and then send the analysis to the lander. The store state will be handled correctly by these operations.
           
           This dual-rover strategy is promising, as the two tasks should not interfere with each other.  I've detailed a precise action sequence for both rovers to reach the objectives, confirming that each step is feasible based on the available information and initial state.  The sequence is designed to maximize parallel processing and efficiency.  Crucially, I've verified that all the necessary actions, such as movement, calibration, image capture, and analysis, are permissible within the given context. This confirms that all requirements can be met.
           
)

Model:     **A Strategic Approach to Achieving the Axiom**
           
           My primary goal is to fulfill the conditions outlined in the `new-axiom@0()` axiom. This boils down to ensuring the receipt of three images and two analyses, all while leveraging the initial state's established conditions.  I've identified two rovers, v12 and v14, each with unique capabilities, making them ideal for a coordinated effort.
           
           I've determined that v14, positioned at location v15, is best suited for image acquisition.  It has a camera supporting the necessary mode, and its vantage points are advantageous for capturing the required images (v17, v18, and v19).  I'll task v14 with moving to the correct locations, calibrating its camera, taking the images, and transmitting them to the lander. Each calibration step is crucial and must precede the image capture.
           
           Meanwhile, rover v12, initially at location v13, will focus on acquiring and transmitting the required rock analyses. It can be moved to the locations above rocks (v4 - type v2, and v8 - type v6), sample them, and then send the analysis to the lander. The store state will be handled correctly by these operations.
           
           This dual-rover strategy is promising, as the two tasks should not interfere with each other.  I've detailed a precise action sequence for both rovers to reach the objectives, confirming that each step is feasible based on the available information and initial state.  The sequence is designed to maximize parallel processing and efficiency.  Crucially, I've verified that all the necessary actions, such as movement, calibration, image capture, and analysis, are permissible within the given context. This confirms that all requirements can be met.
           

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

(Thoughts: **A Deep Dive into Axiom Failure: A Revised Plan for Success**
           
           Okay, so the last plan failed. The culprit?  It seems to be this `new-axiom@0()` goal, a beast of a condition with multiple conjunctions.  Let's unpack this and ensure we're not missing something subtle. I initially believed the plan was sound, but upon closer examination, I realize that I missed a key detail.
           
           I meticulously verified each clause. The initial state and actions seemed to satisfy the *atconf* and *free* predicates.  The image transmission sequence was correct, utilizing *move*, *calibrate*, *take_image*, and *send_image* correctly with the *imagevisible*, *comvisible* constraints. The rock analysis sequence seemed correct: *move_to_rock*, *sample_rock*, *drop_rock*, *move_to_com_pos*, *send_analysis*, and ensuring all preconditions (*analyzed*, *rock*, *comvisible* ) were present.
           
           The crucial parts are, indeed, the `receivedimage` and `receivedanalysis`. These are achievable through `send_image` and `send_analysis`. I verified that all preconditions were present for those crucial actions, including checking for any negative conditions like *blocked*. The cameras are not blocked, and everything should be okay.
           
           After a deep review, something still seems a bit off, even with all of the actions being used and the preconditions met. Maybe the issue lies in *how* these predicates are checked.  It's likely that a continuous parameter is at fault, or perhaps an implicit dependency.
           
           The goal structure is `new-axiom@0()` which is an odd conjunction because it's repeated multiple times and the conjunctions all seem to have the same conditions.  This could point to a more complex check than I first imagined.
           
           I went back and re-examined the actions closely, tracing the state changes meticulously.  The camera robot *v14*, for its *move*, *calibrate*, *take_image* and *send_image* actions, all seemed correct. Also the lab rover's *sample_rock*, *drop_rock*, *send_analysis* actions seemed to be correct and to have all preconditions.
           
           *That's when it hit me*.
           
           The plan failed because I wasn't considering the *final* configuration of the rovers. The goal requires that the robot's state be correct *at the end of the plan*. I realized I was forgetting that the rovers need to be at their starting positions, configurations (`v13`, `v15`), which is a *requirement* of `new-axiom@0()`.
           
           With the original plan, the rovers were ending in the wrong *atconf* positions! This is where I went wrong.  After the analysis, I needed to have the rover move back to where it began. So it's not enough to be correct in the middle of a plan to satisfy the goal, it's the *end* state that's important.
           
           I've revised the plan: I added the critical moves at the end of the image sequence, moving *v14* back to *v15*, and after analysis, moving *v12* back to *v13*.  With that correction, all the preconditions should be met, and the crucial goal met! Let's hope this revised plan delivers the desired results.
           
           Here is the plan:
           1.  `(move v14 v15 #t8 #q4)`
           2.  `(calibrate v14 #q4 #y2 v17 v10)`
           3.  `(take_image v14 #q4 #y2 v17 v10 v11)`
           4.  `(move v14 #q4 #t3 #q5)`
           5.  `(send_image v14 #q5 #y3 v9 v17 v11)`
           6.  `(move v14 #q5 #o2 #q6)`
           7.  `(calibrate v14 #q6 #y4 v18 v10)`
           8.  `(take_image v14 #q6 #y4 v18 v10 v11)`
           9.  `(move v14 #q6 #t20 #q5)`
           10. `(send_image v14 #q5 #y3 v9 v18 v11)`
           11. `(move v14 #q5 #o2 #q0)`
           12. `(calibrate v14 #q0 #y0 v19 v10)`
           13. `(take_image v14 #q0 #y0 v19 v10 v
)

Model:     **A Deep Dive into Axiom Failure: A Revised Plan for Success**
           
           Okay, so the last plan failed. The culprit?  It seems to be this `new-axiom@0()` goal, a beast of a condition with multiple conjunctions.  Let's unpack this and ensure we're not missing something subtle. I initially believed the plan was sound, but upon closer examination, I realize that I missed a key detail.
           
           I meticulously verified each clause. The initial state and actions seemed to satisfy the *atconf* and *free* predicates.  The image transmission sequence was correct, utilizing *move*, *calibrate*, *take_image*, and *send_image* correctly with the *imagevisible*, *comvisible* constraints. The rock analysis sequence seemed correct: *move_to_rock*, *sample_rock*, *drop_rock*, *move_to_com_pos*, *send_analysis*, and ensuring all preconditions (*analyzed*, *rock*, *comvisible* ) were present.
           
           The crucial parts are, indeed, the `receivedimage` and `receivedanalysis`. These are achievable through `send_image` and `send_analysis`. I verified that all preconditions were present for those crucial actions, including checking for any negative conditions like *blocked*. The cameras are not blocked, and everything should be okay.
           
           After a deep review, something still seems a bit off, even with all of the actions being used and the preconditions met. Maybe the issue lies in *how* these predicates are checked.  It's likely that a continuous parameter is at fault, or perhaps an implicit dependency.
           
           The goal structure is `new-axiom@0()` which is an odd conjunction because it's repeated multiple times and the conjunctions all seem to have the same conditions.  This could point to a more complex check than I first imagined.
           
           I went back and re-examined the actions closely, tracing the state changes meticulously.  The camera robot *v14*, for its *move*, *calibrate*, *take_image* and *send_image* actions, all seemed correct. Also the lab rover's *sample_rock*, *drop_rock*, *send_analysis* actions seemed to be correct and to have all preconditions.
           
           *That's when it hit me*.
           
           The plan failed because I wasn't considering the *final* configuration of the rovers. The goal requires that the robot's state be correct *at the end of the plan*. I realized I was forgetting that the rovers need to be at their starting positions, configurations (`v13`, `v15`), which is a *requirement* of `new-axiom@0()`.
           
           With the original plan, the rovers were ending in the wrong *atconf* positions! This is where I went wrong.  After the analysis, I needed to have the rover move back to where it began. So it's not enough to be correct in the middle of a plan to satisfy the goal, it's the *end* state that's important.
           
           I've revised the plan: I added the critical moves at the end of the image sequence, moving *v14* back to *v15*, and after analysis, moving *v12* back to *v13*.  With that correction, all the preconditions should be met, and the crucial goal met! Let's hope this revised plan delivers the desired results.
           
           Here is the plan:
           1.  `(move v14 v15 #t8 #q4)`
           2.  `(calibrate v14 #q4 #y2 v17 v10)`
           3.  `(take_image v14 #q4 #y2 v17 v10 v11)`
           4.  `(move v14 #q4 #t3 #q5)`
           5.  `(send_image v14 #q5 #y3 v9 v17 v11)`
           6.  `(move v14 #q5 #o2 #q6)`
           7.  `(calibrate v14 #q6 #y4 v18 v10)`
           8.  `(take_image v14 #q6 #y4 v18 v10 v11)`
           9.  `(move v14 #q6 #t20 #q5)`
           10. `(send_image v14 #q5 #y3 v9 v18 v11)`
           11. `(move v14 #q5 #o2 #q0)`
           12. `(calibrate v14 #q0 #y0 v19 v10)`
           13. `(take_image v14 #q0 #y0 v19 v10 v

