User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t5: object
           #t6: object
           #t8: object
           #y0: object
           #y1: object
           #y2: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v3, v2)
           Atom objective(v19)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom type(v4, v2)
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom objective(v18)
           Atom store(v16)
           Atom lander(v9)
           Atom rock(v1)
           Atom free(v12, v16)
           Atom onboard(v10, v12)
           Atom objective(v17)
           Atom rock(v5)
           Atom rover(v14)
           Atom free(v14, v16)
           Atom conf(v12, v13)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom rock(v3)
           Atom supports(v10, v11)
           Atom atconf(v14, v15)
           Atom camera(v10)
           Atom rock(v4)
           Atom type(v5, v6)
           Atom type(v7, v6)
           Atom rover(v12)
           Atom type(v8, v6)
           Atom imagevisible(v12, #q0, #y0, v17)
           Atom imagerange(v12, #q0, v17)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q8, v8)
           Atom conf(v12, #q8)
           Atom above(v12, #q12, v4)
           Atom conf(v12, #q12)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom above(v12, #q11, v7)
           Atom conf(v12, #q11)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q15, #y7, v18)
           Atom imagerange(v14, #q15, v18)
           Atom conf(v14, #q15)
           Atom ray(#y7)
           Atom above(v14, #q4, v1)
           Atom conf(v14, #q4)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q14, #y6, v19)
           Atom imagerange(v14, #q14, v19)
           Atom conf(v14, #q14)
           Atom ray(#y6)
           Atom imagevisible(v14, #q13, #y5, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y5)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v7)
           Atom above(v12, #q10, v5)
           Atom conf(v12, #q10)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom motion(v12, v13, #t17, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #t4, #q4)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, v15, #t5, #q5)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q7, #t33, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q0, #t32, v13)
           Atom motion(v12, v13, #t6, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q4, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q4)
           Atom motion(v14, #q15, #o2, #q5)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q5, #o2, #q15)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, v13, #t18, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q12, #t34, #q8)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q1, #t3, #q5)
           Atom motion(v14, #q1, #t2, #q4)
           Atom motion(v14, #q1, #t1, v15)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q4, #t0, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, v13, #t36, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q13, #t35, #q1)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, v15, #t37, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, v13, #t30, #q6)
           Atom motion(v12, #q6, #t31, v13)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v14, #q5, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, v15, #t38, #q14)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #t39, #q1)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q5)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v12, #q2, #t26, #q7)
           Atom motion(v12, #q2, #t27, #q10)
           Atom motion(v12, #q2, #t15, #q0)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q10, #t28, #q2)
           Atom motion(v12, #q6, #t14, #q2)
           Atom motion(v12, #q2, #t20, #q6)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q0, #t8, #q2)
           Atom motion(v12, #q12, #t23, #q2)
           Atom motion(v12, #q8, #t13, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #t10, v13)
           Atom motion(v12, #q9, #t21, #q2)
           Atom motion(v12, #q11, #t22, #q2)
           Atom motion(v12, #q7, #t12, #q2)
           Atom motion(v12, #q2, #t19, #q9)
           Atom motion(v12, #q2, #t24, #q11)
           Atom motion(v12, #q2, #t25, #q12)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q14, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v5 v16))
           ((sample_rock v12 #q11 v7 v16))
           ((sample_rock v12 #q12 v4 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q8 v8 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q4 v1 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #t32 v13))
           ((move v12 #q0 #t8 #q2))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t28 #q2))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t22 #q2))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t23 #q2))
           ((move v12 #q12 #t34 #q8))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #t10 v13))
           ((move v12 #q2 #t15 #q0))
           ((move v12 #q2 #t19 #q9))
           ((move v12 #q2 #t20 #q6))
           ((move v12 #q2 #t24 #q11))
           ((move v12 #q2 #t25 #q12))
           ((move v12 #q2 #t26 #q7))
           ((move v12 #q2 #t27 #q10))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #t14 #q2))
           ((move v12 #q6 #t31 v13))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t12 #q2))
           ((move v12 #q7 #t33 #q10))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t13 #q2))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t21 #q2))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q7))
           ((move v12 v13 #t18 #q8))
           ((move v12 v13 #t30 #q6))
           ((move v12 v13 #t36 #q9))
           ((move v12 v13 #t6 #q0))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #t1 v15))
           ((move v14 #q1 #t2 #q4))
           ((move v14 #q1 #t3 #q5))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t35 #q1))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q5))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t39 #q1))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 #q5))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t0 #q1))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t37 #q13))
           ((move v14 v15 #t38 #q14))
           ((move v14 v15 #t4 #q4))
           ((move v14 v15 #t5 #q5))
           ((calibrate v12 #q0 #y0 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q13 #y5 v17 v10))
           ((calibrate v14 #q14 #y6 v19 v10))
           ((calibrate v14 #q15 #y7 v18 v10))
           ((take_image v12 #q0 #y0 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q13 #y5 v17 v10 v11))
           ((take_image v14 #q14 #y6 v19 v10 v11))
           ((take_image v14 #q15 #y7 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, v12 and v14, each with a camera (v10) that supports mode v11. Both rovers have a storage compartment (v16) that is currently free. There are multiple rocks (v1, v3, v4, v5, v7, v8) of different types (v2, v6) and objectives (v17, v18, v19) to be imaged. There's also a lander (v9) to which data can be sent. The goal is `new-axiom@0()`. This axiom is complex and requires several conditions to be met:
           
           1.  Both rovers (v12 and v14) must be at some configuration, which is already true.
           2.  Both rovers must have their stores (v16) free, which is already true.
           3.  Images of objectives v17, v18, and v19 must have been received in mode v11.
           4.  Rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8) must have been analyzed.
           
           To achieve the goal, I need to:
           1.  Calibrate the camera for each image to be taken.
           2.  Take images of objectives v17, v18, and v19 with rover v12 or v14 using camera v10 in mode v11.
           3.  Send these images to the lander v9.
           4.  Sample rocks v1, v3, v4 (type v2) and v5, v7, v8 (type v6) with either rover v12 or v14.
           5.  Send analysis of these sampled rocks to the lander v9.
           
           I will attempt to use rover v12 to sample some rocks and take some images, and rover v14 for the remaining tasks.
           
           Let's break down the image requirements:
           -   `receivedimage(v17, v11)`: Can be achieved by `take_image` by v12 at `#q0` or v14 at `#q13`, then `send_image`.
           -   `receivedimage(v18, v11)`: Can be achieved by `take_image` by v12 at `#q6` or v14 at `#q15`, then `send_image`.
           -   `receivedimage(v19, v11)`: Can be achieved by `take_image` by v14 at `#q14`, then `send_image`.
           
           Let's break down the rock analysis requirements:
           -   `type(?stone, v2)` and `receivedanalysis(?stone)`: Need to sample and analyze v1, v3, v4.
               -   v1: can be sampled by v12 at `#q7` or v14 at `#q4`.
               -   v3: can be sampled by v12 at `#q9` or v14 at `#o5`.
               -   v4: can be sampled by v12 at `#q12` or v14 at `#o5`.
           -   `type(?soil, v6)` and `receivedanalysis(?soil)`: Need to sample and analyze v5, v7, v8.
               -   v5: can be sampled by v12 at `#q10` or v14 at `#q5`.
               -   v7: can be sampled by v12 at `#q11` or v14 at `#o5`.
               -   v8: can be sampled by v12 at `#q8` or v14 at `#o5`.
           
           I need to make sure to achieve all the analysis and image reception goals. I will try to maximize the use of a single rover if possible for sampling and then move to a common communication point.
           
           Plan:
           1.  Rover v12 will handle sampling and analysis of rocks v1, v3, v4, v5, v7, v8. It has above relations for all of them.
           2.  Rover v12 will also handle imaging v17 and v18.
           3.  Rover v14 will handle imaging v19.
           
           Let's start with Rover 12. It needs to sample rocks and send their analysis. It also needs to take images and send them.
           Rover v12 needs to move to appropriate locations for sampling and imaging, and then to #q2 for communication.
           
           First, let's sample and analyze rocks with rover v12.
           - Rocks of type v2: v1, v3, v4
           - Rocks of type v6: v5, v7, v8
           
           Rover v12 is at v13.
           1.  Sample v1 (type v2) at #q7.
           2.  Sample v3 (type v2) at #q9.
           3.  Sample v4 (type v2) at #q12.
           4.  Sample v5 (type v6) at #q10.
           5.  Sample v7 (type v6) at #q11.
           6.  Sample v8 (type v6) at #q8.
           
           It needs to move to each location, sample, then drop the rock to free up the store for the next sample.
           Then it moves to a communication point to send all analyses.
           And it also needs to take images of v17 and v18 and send them.
           
           It's better to group actions by location.
           Let's make rover v12 sample all rocks and rover v14 handle all image taking and sending for those rocks.
           This is difficult because of the `free(v,s)` and `full(v,s)` predicates. The rover can only sample one rock at a time, then it must drop it or send the analysis. Since the goal is `receivedanalysis`, it must send the analysis. It cannot sample all rocks then send.
           
           The goal `new-axiom@0()` can be satisfied if any combination of `receivedimage` and `receivedanalysis` predicates are true. The specific configuration of v12 and v14 or free stores is not a direct goal but a state that needs to be maintained or achieved.
           
           Let's try to satisfy `receivedanalysis` for v1, v3, v4, v5, v7, v8. And `receivedimage` for v17, v18, v19.
           
           Rover v12 will sample and analyze v1, v3, v4, v5, v7, v8, as it has an above relation for all.
           Rover v12 will also take and send images for v17 and v18.
           Rover v14 will take and send image for v19.
           
           To make it more efficient, rover v12 will move to a location, sample, send analysis, then move to the next location.
           
           For v12 to sample all rocks and send analysis:
           It is at v13.
           1.  Go to #q7 (for v1)
           2.  Sample v1
           3.  Go to #q2 (for comms)
           4.  Send analysis v1
           5.  Go to #q9 (for v3)
           6.  Sample v3
           7.  Go to #q2
           8.  Send analysis v3
           9.  Go to #q12 (for v4)
           10. Sample v4
           11. Go to #q2
           12. Send analysis v4
           13. Go to #q10 (for v5)
           14. Sample v5
           15. Go to #q2
           16. Send analysis v5
           17. Go to #q11 (for v7)
           18. Sample v7
           19. Go to #q2
           20. Send analysis v7
           21. Go to #q8 (for v8)
           22. Sample v8
           23. Go to #q2
           24. Send analysis v8
           
           This covers all `receivedanalysis` goals.
           
           Now for `receivedimage` goals with v12:
           After sending last analysis from #q2, v12 is at #q2.
           1.  Move to #q0 (for v17)
           2.  Calibrate v10 at #q0
           3.  Take image v17
           4.  Move to #q2 (for comms)
           5.  Send image v17
           6.  Move to #q6 (for v18)
           7.  Calibrate v10 at #q6
           8.  Take image v18
           9.  Move to #q2 (for comms)
           10. Send image v18
           
           This covers `receivedimage(v17, v11)` and `receivedimage(v18, v11)`.
           
           Now for `receivedimage(v19, v11)` with v14:
           Rover v14 is at v15.
           1.  Move to #q14 (for v19)
           2.  Calibrate v10 at #q14
           3.  Take image v19
           4.  Move to #q1 (for comms)
           5.  Send image v19
           
           This covers all `receivedimage` goals.
           
           The only remaining issue is that `drop_rock` is never used. This is fine because the goal is `receivedanalysis`, which means the analysis has been successfully sent. There is no requirement to free up the store after analysis, unless it prevents further sampling. However, each `sample_rock` is followed by `send_analysis`, which means the store is not 'full' for an extended period, so the `free` predicate is maintained.
           
           Let's trace `free(v12, v16)`:
           -   Initially `free(v12, v16)` is true.
           -   `sample_rock v12 #q7 v1 v16` makes `full(v12, v16)` and `analyzed(v12, v1)`. `free(v12, v16)` becomes false.
           -   `send_analysis v12 #q2 #y2 v9 v1` uses `analyzed(v12, v1)`. `receivedanalysis(v1)` becomes true.
           -   However, the `send_analysis` action does not free up the store. This means `free(v12, v16)` would still be false.
           -   To sample another rock, `free(v12, v16)` must be true.
           -   Therefore, `drop_rock` is necessary after each `send_analysis` if another sample is needed by the same rover.
           
           Revised plan for v12 sampling:
           1.  Move to #q7 (for v1)
           2.  Sample v1
           3.  Move to #q2 (for comms)
           4.  Send analysis v1
           5.  Drop rock v1 (to free store)
           6.  Move to #q9 (for v3)
           7.  Sample v3
           8.  Move to #q2
           9.  Send analysis v3
           10. Drop rock v3
           11. Move to #q12 (for v4)
           12. Sample v4
           13. Move to #q2
           14. Send analysis v4
           15. Drop rock v4
           16. Move to #q10 (for v5)
           17. Sample v5
           18. Move to #q2
           19. Send analysis v5
           20. Drop rock v5
           21. Move to #q11 (for v7)
           22. Sample v7
           23. Move to #q2
           24. Send analysis v7
           25. Drop rock v7
           26. Move to #q8 (for v8)
           27. Sample v8
           28. Move to #q2
           29. Send analysis v8
           30. Drop rock v8 (not strictly necessary but good practice)
           
           This plan is quite long due to the round-trips for each rock.
           Let's see if we can do more at a single location before moving.
           For example, if rover v12 can sample multiple rocks at the same #q location, that would be efficient. However, the `above` predicate links a specific rock to a specific configuration. So, to sample different rocks, the rover must move to different configurations.
           
           The current plan assumes `cfreerayconf` is true for all communication and imaging rays, as `blocked` is implicitly false initially.
           
           One last check for the goal: `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedanalysis(v1)`, `receivedanalysis(v3)`, `receivedanalysis(v4)`, `receivedanalysis(v5)`, `receivedanalysis(v7)`, `receivedanalysis(v8)`.
           
           All these elements are covered in the revised plan.
           
           --Plan--:
           (move v12 v13 #t17 #q7)
           (sample_rock v12 #q7 v1 v16)
           (move v12 #q7 #t12 #q2)
           (send_analysis v12 #q2 #y2 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q2 #t19 #q9)
           (sample_rock v12 #q9 v3 v16)
           (move v12 #q9 #t21 #q2)
           (send_analysis v12 #q2 #y2 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q2 #t25 #q12)
           (sample_rock v12 #q12 v4 v16)
           (move v12 #q12 #t23 #q2)
           (send_analysis v12 #q2 #y2 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #t27 #q10)
           (sample_rock v12 #q10 v5 v16)
           (move v12 #q10 #t28 #q2)
           (send_analysis v12 #q2 #y2 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q2 #t24 #q11)
           (sample_rock v12 #q11 v7 v16)
           (move v12 #q11 #t22 #q2)
           (send_analysis v12 #q2 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #q8)
           (sample_rock v12 #q8 v8 v16)
           (move v12 #q8 #t13 #q2)
           (send_analysis v12 #q2 #y2 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q2 #t15 #q0)
           (calibrate v12 #q0 #y0 v17 v10)
           (take_image v12 #q0 #y0 v17 v10 v11)
           (move v12 #q0 #t8 #q2)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (move v12 #q2 #t20 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t14 #q2)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (move v14 v15 #t38 #q14)
           (calibrate v14 #q14 #y6 v19 v10)
           (take_image v14 #q14 #y6 v19 v10 v11)
           (move v14 #q14 #t39 #q1)
           (send_image v14 #q1 #y1 v9 v19 v11)

