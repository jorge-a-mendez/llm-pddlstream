User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom type(v8, v6)
           Atom rock(v8)
           Atom rock(v3)
           Atom onboard(v10, v14)
           Atom rock(v7)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom lander(v9)
           Atom rover(v14)
           Atom objective(v17)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom atconf(v12, v13)
           Atom mode(v11)
           Atom objective(v19)
           Atom type(v4, v2)
           Atom store(v16)
           Atom rock(v4)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom type(v1, v2)
           Atom free(v14, v16)
           Atom camera(v10)
           Atom free(v12, v16)
           Atom rock(v5)
           Atom rover(v12)
           Atom supports(v10, v11)
           Atom imagevisible(v12, #q1, #y1, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom above(v14, #q12, v3)
           Atom conf(v14, #q12)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q15, v8)
           Atom conf(v14, #q15)
           Atom above(v12, #q10, v8)
           Atom conf(v12, #q10)
           Atom above(v14, #q16, v1)
           Atom conf(v14, #q16)
           Atom above(v12, #q4, v1)
           Atom conf(v12, #q4)
           Atom above(v14, #q14, v4)
           Atom conf(v14, #q14)
           Atom above(v12, #q9, v4)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q5, #y3, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v12, #q7, v7)
           Atom conf(v12, #q7)
           Atom above(v14, #q13, v7)
           Atom conf(v14, #q13)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #t13, #q8)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #t12, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, v13, #t5, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q1, #t17, #q6)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q8, #t9, #q4)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q7, #t8, #q4)
           Atom motion(v12, #q1, #t11, #q5)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #t10, #q6)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q6, #t21, #q5)
           Atom motion(v12, #q5, #t18, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q6, #t16, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #t20, #q8)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #t0, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q0)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q0, #t30, #q15)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q6, #t14, #q9)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, v15, #t25, #q13)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q0, #t28, #q13)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q6, #t15, #q10)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q2, #t2, v13)
           Atom motion(v12, #q2, #t3, #q4)
           Atom motion(v12, #q5, #t31, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q1, #t1, #q2)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q4, #t4, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q8, #t19, #q2)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #t7, #q3)
           Atom motion(v14, #q3, #t6, #q0)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q0, #t23, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, v15, #t26, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q0, #t29, #q14)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, v15, #t24, #q12)
           Atom motion(v14, #q12, #t22, #q0)
           Atom motion(v14, #q0, #t27, #q12)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q0)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q0, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q16, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q14)
           Atom motion(v14, #o3, #o2, #q15)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q3)
           Atom motion(v14, #q13, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, #o3, #o2, #q16)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, #o3, #o2, #q13)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q14, #o2, #o3)
           Atom motion(v14, #q3, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v8 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q4 v1 v16))
           ((sample_rock v12 #q7 v7 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v12 #q9 v4 v16))
           ((sample_rock v14 #q12 v3 v16))
           ((sample_rock v14 #q13 v7 v16))
           ((sample_rock v14 #q14 v4 v16))
           ((sample_rock v14 #q15 v8 v16))
           ((sample_rock v14 #q16 v1 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q2))
           ((move v12 #q1 #t11 #q5))
           ((move v12 #q1 #t17 #q6))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t20 #q8))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #t2 v13))
           ((move v12 #q2 #t3 #q4))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t4 #q2))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t10 #q6))
           ((move v12 #q5 #t18 #q11))
           ((move v12 #q5 #t31 #q2))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q7))
           ((move v12 #q6 #t13 #q8))
           ((move v12 #q6 #t14 #q9))
           ((move v12 #q6 #t15 #q10))
           ((move v12 #q6 #t16 #q11))
           ((move v12 #q6 #t21 #q5))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t8 #q4))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q2))
           ((move v12 #q8 #t9 #q4))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q1))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q13))
           ((move v14 #o3 #o2 #q14))
           ((move v14 #o3 #o2 #q15))
           ((move v14 #o3 #o2 #q16))
           ((move v14 #o3 #o2 #q3))
           ((move v14 #o3 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q16))
           ((move v14 #q0 #t0 v15))
           ((move v14 #q0 #t23 #q3))
           ((move v14 #q0 #t27 #q12))
           ((move v14 #q0 #t28 #q13))
           ((move v14 #q0 #t29 #q14))
           ((move v14 #q0 #t30 #q15))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t22 #q0))
           ((move v14 #q13 #o2 #o3))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q14 #o2 #o3))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q15 #o2 #o3))
           ((move v14 #q15 #o2 #q0))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q16 #o2 #o3))
           ((move v14 #q16 #o2 #q0))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q3 #o2 #o3))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t6 #q0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t24 #q12))
           ((move v14 v15 #t25 #q13))
           ((move v14 v15 #t26 #q14))
           ((move v14 v15 #t7 #q3))
           ((calibrate v12 #q1 #y1 v18 v10))
           ((calibrate v12 #q5 #y3 v19 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q1 #y1 v18 v10 v11))
           ((take_image v12 #q5 #y3 v19 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), a store (v16), a mode (v11), three objectives (v17, v18, v19), and several rocks (v1, v3, v4, v5, v7, v8) of different types (v2, v6). Both rovers are currently at their respective home configurations (v13 for v12, v15 for v14) and have free storage space. The camera is onboard both rovers and supports the mode v11.
           
           The goal `new-axiom@0()` can be satisfied by a combination of the following:
           1. Both rovers are at some configuration. This is already true.
           2. Both rovers have free storage space. This is already true.
           3. Images of objectives v17, v18, and v19 are received.
           4. Rocks of type v2 and v6 are analyzed and the analysis received.
           
           To achieve the goal, we need to:
           1. Calibrate the camera on one of the rovers.
           2. Take images of objectives v17, v18, and v19.
           3. Send the images to the lander.
           4. Sample rocks of type v2 and v6.
           5. Send the analysis of these rocks to the lander.
           
           Let's use rover v12 for taking images and sending data, and rover v14 for sampling rocks.
           
           For rover v12:
           - Calibrate the camera at a visible objective.
           - Take images of v17, v18, v19.
           - Move to a configuration where it can communicate with the lander.
           - Send the images.
           
           For rover v14:
           - Move to configurations where it can sample rocks of type v2 and v6.
           - Sample a rock of type v2 (e.g., v3 or v4 or v1).
           - Sample a rock of type v6 (e.g., v5 or v7 or v8).
           - Move to a configuration where it can communicate with the lander.
           - Send the analysis of the sampled rocks.
           
           We can simplify and have rover v12 do everything.
           
           1. **Calibrate Camera (v10) on Rover (v12) for an Objective (v18) at configuration #q1 using ray #y1**: `(calibrate v12 #q1 #y1 v18 v10)`
           2. **Take image of Objective (v18) using calibrated camera (v10) on Rover (v12) at configuration #q1 in mode v11**: `(take_image v12 #q1 #y1 v18 v10 v11)`
           3. **Calibrate Camera (v10) on Rover (v12) for an Objective (v17) at configuration #q6 using ray #y4**: `(calibrate v12 #q6 #y4 v17 v10)` (Camera needs to be re-calibrated as `take_image` invalidates calibration)
           4. **Take image of Objective (v17) using calibrated camera (v10) on Rover (v12) at configuration #q6 in mode v11**: `(take_image v12 #q6 #y4 v17 v10 v11)`
           5. **Calibrate Camera (v10) on Rover (v12) for an Objective (v19) at configuration #q5 using ray #y3**: `(calibrate v12 #q5 #y3 v19 v10)`
           6. **Take image of Objective (v19) using calibrated camera (v10) on Rover (v12) at configuration #q5 in mode v11**: `(take_image v12 #q5 #y3 v19 v10 v11)`
           7. **Move Rover (v12) from current config #q5 to communication config #q2**: `(move v12 #q5 #t31 #q2)`
           8. **Send image of Objective (v18) from Rover (v12) at config #q2 to Lander (v9) using ray #y2 in mode v11**: `(send_image v12 #q2 #y2 v9 v18 v11)`
           9. **Send image of Objective (v17) from Rover (v12) at config #q2 to Lander (v9) using ray #y2 in mode v11**: `(send_image v12 #q2 #y2 v9 v17 v11)`
           10. **Send image of Objective (v19) from Rover (v12) at config #q2 to Lander (v9) using ray #y2 in mode v11**: `(send_image v12 #q2 #y2 v9 v19 v11)`
           11. **Move Rover (v12) from current config #q2 to rock sampling config #q11 (rock v3, type v2)**: `(move v12 #q2 #o2 #q11)`
           12. **Sample Rock (v3) of type v2 by Rover (v12) at config #q11 using store v16**: `(sample_rock v12 #q11 v3 v16)`
           13. **Move Rover (v12) from current config #q11 to rock sampling config #q8 (rock v5, type v6)**: `(move v12 #q11 #t20 #q8)`
           14. **Sample Rock (v5) of type v6 by Rover (v12) at config #q8 using store v16**: `(sample_rock v12 #q8 v5 v16)`
           15. **Move Rover (v12) from current config #q8 to communication config #q2**: `(move v12 #q8 #t19 #q2)`
           16. **Send analysis of Rock (v3) from Rover (v12) at config #q2 to Lander (v9) using ray #y2**: `(send_analysis v12 #q2 #y2 v9 v3)`
           17. **Send analysis of Rock (v5) from Rover (v12) at config #q2 to Lander (v9) using ray #y2**: `(send_analysis v12 #q2 #y2 v9 v5)`
           
           This plan satisfies all conditions of the goal.
           
           --Plan--:
           (calibrate v12 #q1 #y1 v18 v10)
           (take_image v12 #q1 #y1 v18 v10 v11)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t31 #q2)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (move v12 #q2 #o2 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #t20 #q8)
           (sample_rock v12 #q8 v5 v16)
           (move v12 #q8 #t19 #q2)
           (send_analysis v12 #q2 #y2 v9 v3)
           (send_analysis v12 #q2 #y2 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. This axiom requires:
           1. `atconf(v12, v13)`
           2. `atconf(v14, v15)`
           3. `free(v12, v16)`
           4. `free(v14, v16)`
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `type(?stone, v2)` and `receivedanalysis(?stone)`
           9. `type(?soil, v6)` and `receivedanalysis(?soil)`
           
           Let's re-evaluate the plan to ensure all these conditions are met at the end.
           
           Initial state:
           - `atconf(v12, v13)` and `atconf(v14, v15)` are true.
           - `free(v12, v16)` and `free(v14, v16)` are true.
           - No `receivedimage` or `receivedanalysis` predicates are true.
           
           We need to make sure that:
           - Images of `v17`, `v18`, `v19` are sent.
           - At least one rock of `type v2` and one rock of `type v6` are sampled and their analysis sent.
           
           Let's use rover v12 to handle all imaging and analysis.
           
           1. **Calibrate for v18**: `(calibrate v12 #q1 #y1 v18 v10)` (atconf v12 #q1 needed, need to move there first if not at v13)
           2. **Take image of v18**: `(take_image v12 #q1 #y1 v18 v10 v11)`
           3. **Calibrate for v17**: `(calibrate v12 #q6 #y4 v17 v10)`
           4. **Take image of v17**: `(take_image v12 #q6 #y4 v17 v10 v11)`
           5. **Calibrate for v19**: `(calibrate v12 #q5 #y3 v19 v10)`
           6. **Take image of v19**: `(take_image v12 #q5 #y3 v19 v10 v11)`
           7. **Move to comms config**: `(move v12 #q5 #t31 #q2)`
           8. **Send images of v18, v17, v19**: `(send_image v12 #q2 #y2 v9 v18 v11)`, `(send_image v12 #q2 #y2 v9 v17 v11)`, `(send_image v12 #q2 #y2 v9 v19 v11)`
           
           9. **Move to sample rock v3 (type v2)**: `(move v12 #q2 #o2 #q11)`
           10. **Sample rock v3**: `(sample_rock v12 #q11 v3 v16)`
           11. **Move to sample rock v5 (type v6)**: `(move v12 #q11 #t20 #q8)`
           12. **Sample rock v5**: `(sample_rock v12 #q8 v5 v16)`
           13. **Move to comms config**: `(move v12 #q8 #t19 #q2)`
           14. **Send analysis of v3**: `(send_analysis v12 #q2 #y2 v9 v3)`
           15. **Send analysis of v5**: `(send_analysis v12 #q2 #y2 v9 v5)`
           
           One crucial part is to ensure that `atconf(v12, v13)` and `atconf(v14, v15)` and `free(v12, v16)` and `free(v14, v16)` are true at the *end* of the plan. Since we are using `sample_rock`, `free(v12, v16)` will become false (replaced by `full(v12, v16)`). We need to `drop_rock` to make `free(v12, v16)` true again. Also, rover v14's state is not altered, so its `atconf` and `free` predicates will remain true.
           
           Let's refine the plan to incorporate `drop_rock`.
           
           We need to ensure rover v12 is at the correct configuration to take images. It starts at `v13`.
           - `imagevisible(v12, #q1, #y1, v18)` requires `atconf(v12, #q1)`.
           - `imagevisible(v12, #q6, #y4, v17)` requires `atconf(v12, #q6)`.
           - `imagevisible(v12, #q5, #y3, v19)` requires `atconf(v12, #q5)`.
           
           So, rover v12 needs to move between these configurations.
           
           Also, `blocked(?y)` must be false for `calibrate`, `take_image`, `send_image`, and `send_analysis`. There are no `blocked` facts in the initial state, and no actions produce `blocked` facts, so this condition will remain false.
           
           Revised Plan:
           
           --Plan--:
           (move v12 v13 #t5 #q1)
           (calibrate v12 #q1 #y1 v18 v10)
           (take_image v12 #q1 #y1 v18 v10 v11)
           (move v12 #q1 #t17 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t21 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t31 #q2)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (move v12 #q2 #o2 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #t20 #q8)
           (sample_rock v12 #q8 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q8 #t19 #q2)
           (send_analysis v12 #q2 #y2 v9 v3)
           (send_analysis v12 #q2 #y2 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan still resulted in `Atom new-axiom@0()` not being satisfied. Let's break down the `new-axiom@0()` goal and check each condition after the proposed plan.
           
           The goal `new-axiom@0()` is defined as:
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           
           Let's check each part:
           
           1.  `atconf(v12, v13)`: The plan ends with `(move v12 #q8 #t19 #q2)`. So `atconf(v12, #q2)` is true, not `atconf(v12, v13)`. This is a problem.
           2.  `atconf(v14, v15)`: Rover v14 is not moved in the plan, so `atconf(v14, v15)` remains true. This condition is met.
           3.  `free(v12, v16)`: The plan samples two rocks and then `drop_rock v12 v16`, so `free(v12, v16)` should be true. This condition is met.
           4.  `free(v14, v16)`: Rover v14 is not used for sampling, so `free(v14, v16)` remains true. This condition is met.
           5.  `receivedimage(v17, v11)`: This is achieved by `(send_image v12 #q2 #y2 v9 v17 v11)`. This condition is met.
           6.  `receivedimage(v18, v11)`: This is achieved by `(send_image v12 #q2 #y2 v9 v18 v11)`. This condition is met.
           7.  `receivedimage(v19, v11)`: This is achieved by `(send_image v12 #q2 #y2 v9 v19 v11)`. This condition is met.
           8.  `type(?stone, v2)` and `receivedanalysis(?stone)`: The plan samples `v3` which is `type v2`, and sends its analysis. This is met.
           9.  `type(?soil, v6)` and `receivedanalysis(?soil)`: The plan samples `v5` which is `type v6`, and sends its analysis. This is met.
           
           The only unmet condition from the previous plan is `atconf(v12, v13)`. We need to add a final move action for rover v12 to return to `v13`.
           
           Revised Plan:
           
           --Plan--:
           (move v12 v13 #t5 #q1)
           (calibrate v12 #q1 #y1 v18 v10)
           (take_image v12 #q1 #y1 v18 v10 v11)
           (move v12 #q1 #t17 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t21 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t31 #q2)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (move v12 #q2 #o2 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #t20 #q8)
           (sample_rock v12 #q8 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q8 #t19 #q2)
           (send_analysis v12 #q2 #y2 v9 v3)
           (send_analysis v12 #q2 #y2 v9 v5)
           (move v12 #q2 #t2 v13)

