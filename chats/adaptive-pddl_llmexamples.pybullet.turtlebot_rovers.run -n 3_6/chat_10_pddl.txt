User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom type(v8, v6)
           Atom rock(v8)
           Atom rock(v3)
           Atom onboard(v10, v14)
           Atom rock(v7)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom lander(v9)
           Atom rover(v14)
           Atom objective(v17)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom atconf(v12, v13)
           Atom mode(v11)
           Atom objective(v19)
           Atom type(v4, v2)
           Atom store(v16)
           Atom rock(v4)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom type(v1, v2)
           Atom free(v14, v16)
           Atom camera(v10)
           Atom free(v12, v16)
           Atom rock(v5)
           Atom rover(v12)
           Atom supports(v10, v11)
           Atom imagevisible(v12, #q1, #y1, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom above(v14, #q12, v3)
           Atom conf(v14, #q12)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q10, v8)
           Atom conf(v12, #q10)
           Atom above(v14, #q15, v8)
           Atom conf(v14, #q15)
           Atom above(v14, #q16, v1)
           Atom conf(v14, #q16)
           Atom above(v12, #q4, v1)
           Atom conf(v12, #q4)
           Atom above(v12, #q9, v4)
           Atom conf(v12, #q9)
           Atom above(v14, #q14, v4)
           Atom conf(v14, #q14)
           Atom imagevisible(v12, #q5, #y3, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #q13, v7)
           Atom conf(v14, #q13)
           Atom above(v12, #q7, v7)
           Atom conf(v12, #q7)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #t13, #q8)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, v15, #t25, #q13)
           Atom motion(v12, #q1, #t17, #q6)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, v13, #t5, #q1)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q8, #t9, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #t10, #q6)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #t11, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q6, #t21, #q5)
           Atom motion(v12, #q11, #t20, #q8)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q5, #t18, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q6, #t16, #q11)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v14, #q0, #t0, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t28, #q13)
           Atom motion(v14, #q13, #t38, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q6, #t15, #q10)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q11, #t36, #q10)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q5, #t37, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q0, #t29, #q14)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, v15, #t26, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #t39, #q13)
           Atom motion(v12, #q6, #t12, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q7, #t8, #q4)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q0, #t30, #q15)
           Atom motion(v14, #q15, #o2, #q0)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v12, #q8, #t19, #q2)
           Atom motion(v12, #q2, #t32, #q11)
           Atom motion(v12, #q10, #t33, #q2)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q5, #t31, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q2, #t3, #q4)
           Atom motion(v12, #q11, #t35, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #t2, v13)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q2, #t34, #q10)
           Atom motion(v12, #q1, #t1, #q2)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q4, #t4, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v14, #q12, #t22, #q0)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q0, #t27, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, v15, #t24, #q12)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, v15, #t7, #q3)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q3, #t6, #q0)
           Atom motion(v14, #q0, #t23, #q3)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q6, #t14, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q0)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q0, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, #q16, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q13)
           Atom motion(v14, #o3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q14)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q15, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q14, #o2, #o3)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q16)
           Atom motion(v14, #q13, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q15)
           Atom motion(v14, #o3, #o2, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v8 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q4 v1 v16))
           ((sample_rock v12 #q7 v7 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v12 #q9 v4 v16))
           ((sample_rock v14 #q12 v3 v16))
           ((sample_rock v14 #q13 v7 v16))
           ((sample_rock v14 #q14 v4 v16))
           ((sample_rock v14 #q15 v8 v16))
           ((sample_rock v14 #q16 v1 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q2))
           ((move v12 #q1 #t11 #q5))
           ((move v12 #q1 #t17 #q6))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t33 #q2))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t20 #q8))
           ((move v12 #q11 #t35 #q2))
           ((move v12 #q11 #t36 #q10))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #t2 v13))
           ((move v12 #q2 #t3 #q4))
           ((move v12 #q2 #t32 #q11))
           ((move v12 #q2 #t34 #q10))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t4 #q2))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t10 #q6))
           ((move v12 #q5 #t18 #q11))
           ((move v12 #q5 #t31 #q2))
           ((move v12 #q5 #t37 #q10))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q7))
           ((move v12 #q6 #t13 #q8))
           ((move v12 #q6 #t14 #q9))
           ((move v12 #q6 #t15 #q10))
           ((move v12 #q6 #t16 #q11))
           ((move v12 #q6 #t21 #q5))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t8 #q4))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q2))
           ((move v12 #q8 #t9 #q4))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q1))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q13))
           ((move v14 #o3 #o2 #q14))
           ((move v14 #o3 #o2 #q15))
           ((move v14 #o3 #o2 #q16))
           ((move v14 #o3 #o2 #q3))
           ((move v14 #o3 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q16))
           ((move v14 #q0 #t0 v15))
           ((move v14 #q0 #t23 #q3))
           ((move v14 #q0 #t27 #q12))
           ((move v14 #q0 #t28 #q13))
           ((move v14 #q0 #t29 #q14))
           ((move v14 #q0 #t30 #q15))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t22 #q0))
           ((move v14 #q13 #o2 #o3))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t38 #q0))
           ((move v14 #q14 #o2 #o3))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t39 #q13))
           ((move v14 #q15 #o2 #o3))
           ((move v14 #q15 #o2 #q0))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q16 #o2 #o3))
           ((move v14 #q16 #o2 #q0))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q3 #o2 #o3))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t6 #q0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t24 #q12))
           ((move v14 v15 #t25 #q13))
           ((move v14 v15 #t26 #q14))
           ((move v14 v15 #t7 #q3))
           ((calibrate v12 #q1 #y1 v18 v10))
           ((calibrate v12 #q5 #y3 v19 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q1 #y1 v18 v10 v11))
           ((take_image v12 #q5 #y3 v19 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), a store (v16), a mode (v11), and various objectives (v17, v18, v19) and rocks (v1, v3, v4, v5, v7, v8) of different types (v2, v6). Both rovers are currently at their respective home configurations (v13 for v12 and v15 for v14) and have free storage space. The camera is onboard both rovers and supports the mode. Numerous motion and visibility predicates define possible movements and observation points for the rovers.
           
           The goal is to satisfy `new-axiom@0()`, which requires:
           1. `atconf(v12, v13)` and `atconf(v14, v15)` - These are already true.
           2. `free(v12, v16)` and `free(v14, v16)` - These are already true.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)` - This means we need to take images of objectives v17, v18, and v19 using mode v11 and send them to the lander.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)` - We need to analyze and send the analysis of any rock of type v2. From the initial state, rocks v1, v3, and v4 are of type v2.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)` - We need to analyze and send the analysis of any rock of type v6. From the initial state, rocks v5, v7, and v8 are of type v6.
           
           To achieve the image objectives, both rovers have configurations from which they can take images of v17, v18, and v19 and send them.
           To achieve the analysis objectives, we need to sample rocks of type v2 (e.g., v1) and type v6 (e.g., v5) and then send their analysis.
           
           The plan will involve the following steps:
           1. Calibrate a camera on a rover.
           2. Take images of the three objectives.
           3. Send these images to the lander.
           4. Move a rover to a position above a rock of type v2.
           5. Sample the rock.
           6. Move the same rover (or another) to a position above a rock of type v6.
           7. Sample the rock.
           8. Send the analysis of both sampled rocks to the lander.
           
           Let's use rover v12 for image tasks and rover v14 for rock sampling, or rover v12 for all tasks if it's more efficient.
           For images:
           - v12 at #q1 can see v18
           - v12 at #q6 can see v17
           - v12 at #q5 can see v19
           
           For rock analysis:
           - Rover v12 can sample v8 (type v6) at #q10, v3 (type v2) at #q11, v1 (type v2) at #q4, v7 (type v6) at #q7, v5 (type v6) at #q8, v4 (type v2) at #q9.
           - Rover v14 can sample v3 (type v2) at #q12, v7 (type v6) at #q13, v4 (type v2) at #q14, v8 (type v6) at #q15, v1 (type v2) at #q16, v5 (type v6) at #q3.
           
           We will use rover v12 for taking images and rover v14 for sampling rocks.
           
           Detailed Plan:
           1. Calibrate camera v10 on rover v12 at #q1 to observe v18.
           2. Take image of v18.
           3. Move v12 to #q6.
           4. Calibrate camera v10 on rover v12 at #q6 to observe v17.
           5. Take image of v17.
           6. Move v12 to #q5.
           7. Calibrate camera v10 on rover v12 at #q5 to observe v19.
           8. Take image of v19.
           9. Move v12 to #q2 (a common communication point).
           10. Send all three images.
           11. Rover v14 samples rock v3 (type v2) at #q12.
           12. Rover v14 samples rock v7 (type v6) at #q13.
           13. Rover v14 moves to #q0 (a common communication point).
           14. Send analysis of rock v3.
           15. Send analysis of rock v7.
           
           This plan aims to satisfy all goal conditions.
           
           --Plan--:
           (calibrate v12 #q1 #y1 v18 v10)
           (take_image v12 #q1 #y1 v18 v10 v11)
           (move v12 #q1 #t17 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t21 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t31 #q2)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (sample_rock v14 #q12 v3 v16)
           (sample_rock v14 #q13 v7 v16)
           (move v14 #q13 #t38 #q0)
           (send_analysis v14 #q0 #y0 v9 v3)
           (send_analysis v14 #q0 #y0 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not fully satisfied. I need to ensure all conditions of `new-axiom@0()` are met, particularly the `receivedanalysis` for both a stone (type v2) and soil (type v6) and `receivedimage` for all three objectives.
           
           Let's re-evaluate the plan, making sure to hit all the conditions.
           The goal `new-axiom@0()` simplifies to:
           1. Rovers v12 and v14 must be at their initial configs (v13 and v15 respectively) - This is true initially and the plan doesn't move them from these final states, so it should remain true.
           2. Both rovers must have free storage (v16) - This is true initially. Sampling rocks will temporarily make storage full, but the axiom only requires *free* storage, implying it should be free *at some point* or perhaps *at the end*. If it is a final state condition, then we need to drop the rocks.
           3. Images of objectives v17, v18, v19 must be received by the lander.
           4. Analysis of a rock of type v2 (stone) must be received by the lander.
           5. Analysis of a rock of type v6 (soil) must be received by the lander.
           
           I will use Rover v12 to handle all image acquisition and transmission, and Rover v14 to handle all rock sampling and analysis transmission.
           
           Revised Plan:
           
           **Rover v12 (Images):**
           1. Calibrate camera v10 at #q1 to see v18.
           2. Take image of v18.
           3. Move v12 to #q6.
           4. Calibrate camera v10 at #q6 to see v17.
           5. Take image of v17.
           6. Move v12 to #q5.
           7. Calibrate camera v10 at #q5 to see v19.
           8. Take image of v19.
           9. Move v12 to #q2 (a communication point).
           10. Send all three images.
           
           **Rover v14 (Rock Analysis):**
           1. Move v14 to #q12, which is above rock v3 (type v2 - stone).
           2. Sample rock v3.
           3. Move v14 to #q13, which is above rock v7 (type v6 - soil).
           4. Sample rock v7.
           5. Move v14 to #q0 (a communication point).
           6. Send analysis of rock v3.
           7. Send analysis of rock v7.
           
           This plan aims to fulfill all conditions. The atconf and free predicates are checked at the end. After sampling, the storage will be `full`, not `free`. The goal states `free(v12, v16)` and `free(v14, v16)`. This means after sampling, we need to drop the rocks to make the store free again.
           
           Let's re-revise to include dropping rocks.
           
           Revised Plan (incorporating dropping rocks to meet `free` condition):
           
           **Rover v12 (Images):**
           1. Calibrate camera v10 on rover v12 at #q1 to observe v18.
           2. Take image of v18.
           3. Move v12 to #q6.
           4. Calibrate camera v10 on rover v12 at #q6 to observe v17.
           5. Take image of v17.
           6. Move v12 to #q5.
           7. Calibrate camera v10 on rover v12 at #q5 to observe v19.
           8. Take image of v19.
           9. Move v12 to #q2 (a communication point).
           10. Send all three images.
           
           **Rover v14 (Rock Analysis):**
           1. Move v14 from v15 to #q12 (above rock v3, type v2).
           2. Sample rock v3.
           3. Drop rock v3 to make v14's store free again. (This is important for the `free` axiom condition).
           4. Move v14 from #q12 to #q13 (above rock v7, type v6).
           5. Sample rock v7.
           6. Drop rock v7.
           7. Move v14 from #q13 to #q0 (a communication point).
           8. Send analysis of rock v3.
           9. Send analysis of rock v7.
           
           It's important that `atconf(v12, v13)` and `atconf(v14, v15)` are true at the *end* of the plan, as these are part of the `new-axiom@0()` goal. My previous plan did not ensure that. I need to add move actions to return them to their original positions if they moved. However, the available `motion` actions show a loop: `motion(v12, v13, #o2, v13)` and `motion(v14, v15, #o2, v15)` so they can return to their original configurations.
           
           Final Revised Plan:
           
           **Rover v12 (Images):**
           1. Calibrate camera v10 at #q1 for v18.
           2. Take image of v18.
           3. Move v12 from #q1 to #q6.
           4. Calibrate camera v10 at #q6 for v17.
           5. Take image of v17.
           6. Move v12 from #q6 to #q5.
           7. Calibrate camera v10 at #q5 for v19.
           8. Take image of v19.
           9. Move v12 from #q5 to #q2 (comms).
           10. Send image of v18.
           11. Send image of v17.
           12. Send image of v19.
           13. Move v12 from #q2 back to v13 (original config).
           
           **Rover v14 (Rock Analysis):**
           1. Move v14 from v15 to #q12 (above v3, type v2).
           2. Sample rock v3.
           3. Drop rock (to satisfy `free` goal at end).
           4. Move v14 from #q12 to #q13 (above v7, type v6).
           5. Sample rock v7.
           6. Drop rock.
           7. Move v14 from #q13 to #q0 (comms).
           8. Send analysis of v3.
           9. Send analysis of v7.
           10. Move v14 from #q0 back to v15 (original config).
           
           --Plan--:
           (calibrate v12 #q1 #y1 v18 v10)
           (take_image v12 #q1 #y1 v18 v10 v11)
           (move v12 #q1 #t17 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t21 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t31 #q2)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (move v12 #q2 #t2 v13)
           (move v14 v15 #t24 #q12)
           (sample_rock v14 #q12 v3 v16)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #q13)
           (sample_rock v14 #q13 v7 v16)
           (drop_rock v14 v16)
           (move v14 #q13 #t38 #q0)
           (send_analysis v14 #q0 #y0 v9 v3)
           (send_analysis v14 #q0 #y0 v9 v7)
           (move v14 #q0 #t0 v15)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q1) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `atconf(v12, #q1)` was not satisfied for the first `calibrate` action. Rover v12 starts at `atconf(v12, v13)`. I need to move v12 to `#q1` *before* attempting to calibrate or take an image there. The same applies for any other position where actions are performed. I need to explicitly include all move actions.
           
           Let's re-verify the initial configuration of the rovers and the movement paths:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           
           The goal `new-axiom@0()` still requires:
           1. `atconf(v12, v13)` and `atconf(v14, v15)` at the *end*.
           2. `free(v12, v16)` and `free(v14, v16)` at the *end*.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`.
           4. `receivedanalysis(?stone)` for some rock of type v2.
           5. `receivedanalysis(?soil)` for some rock of type v6.
           
           I will ensure each action's preconditions are met by adding necessary `move` actions and `drop_rock` actions to reset storage to `free`.
           
           **Revised Plan Logic:**
           
           **Rover v12 (Images):**
           1. Move v12 from `v13` to `#q1`.
           2. Calibrate camera v10 at `#q1` for `v18`.
           3. Take image of `v18`.
           4. Move v12 from `#q1` to `#q6`.
           5. Calibrate camera v10 at `#q6` for `v17`.
           6. Take image of `v17`.
           7. Move v12 from `#q6` to `#q5`.
           8. Calibrate camera v10 at `#q5` for `v19`.
           9. Take image of `v19`.
           10. Move v12 from `#q5` to `#q2` (communication point).
           11. Send image of `v18`.
           12. Send image of `v17`.
           13. Send image of `v19`.
           14. Move v12 from `#q2` back to `v13`.
           
           **Rover v14 (Rock Analysis):**
           1. Move v14 from `v15` to `#q12` (above rock `v3`, type `v2`).
           2. Sample rock `v3`.
           3. Drop rock `v3` (to make store `free` at the end).
           4. Move v14 from `#q12` to `#q13` (above rock `v7`, type `v6`).
           5. Sample rock `v7`.
           6. Drop rock `v7` (to make store `free` at the end).
           7. Move v14 from `#q13` to `#q0` (communication point).
           8. Send analysis of `v3`.
           9. Send analysis of `v7`.
           10. Move v14 from `#q0` back to `v15`.
           
           Let's construct the plan using the allowed actions.
           
           --Plan--:
           (move v12 v13 #t5 #q1)
           (calibrate v12 #q1 #y1 v18 v10)
           (take_image v12 #q1 #y1 v18 v10 v11)
           (move v12 #q1 #t17 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t21 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t31 #q2)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (move v12 #q2 #t2 v13)
           (move v14 v15 #t24 #q12)
           (sample_rock v14 #q12 v3 v16)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #q13)
           (sample_rock v14 #q13 v7 v16)
           (drop_rock v14 v16)
           (move v14 #q13 #t38 #q0)
           (send_analysis v14 #q0 #y0 v9 v3)
           (send_analysis v14 #q0 #y0 v9 v7)
           (move v14 #q0 #t0 v15)

