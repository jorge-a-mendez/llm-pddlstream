User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom type(v8, v6)
           Atom rock(v8)
           Atom rock(v3)
           Atom onboard(v10, v14)
           Atom rock(v7)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom lander(v9)
           Atom rover(v14)
           Atom objective(v17)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom atconf(v12, v13)
           Atom mode(v11)
           Atom objective(v19)
           Atom type(v4, v2)
           Atom store(v16)
           Atom rock(v4)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom type(v1, v2)
           Atom free(v14, v16)
           Atom camera(v10)
           Atom free(v12, v16)
           Atom rock(v5)
           Atom rover(v12)
           Atom supports(v10, v11)
           Atom imagevisible(v12, #q1, #y1, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom above(v14, #q12, v3)
           Atom conf(v14, #q12)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q10, v8)
           Atom conf(v12, #q10)
           Atom above(v14, #q15, v8)
           Atom conf(v14, #q15)
           Atom above(v14, #q16, v1)
           Atom conf(v14, #q16)
           Atom above(v12, #q4, v1)
           Atom conf(v12, #q4)
           Atom above(v14, #q14, v4)
           Atom conf(v14, #q14)
           Atom above(v12, #q9, v4)
           Atom conf(v12, #q9)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v12, #q5, #y3, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q7, v7)
           Atom conf(v12, #q7)
           Atom above(v14, #q13, v7)
           Atom conf(v14, #q13)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q6, #t13, #q8)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q6, #t12, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #t5, #q1)
           Atom motion(v12, #q1, #t17, #q6)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #t24, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q6, #t16, #q11)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #t20, #q8)
           Atom motion(v12, #q2, #t2, v13)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #t32, #q11)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q8, #t19, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q1, #t1, #q2)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q6, #t15, #q10)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q6, #t14, #q9)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, v15, #t25, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q8, #t9, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q7, #t8, #q4)
           Atom motion(v12, #q4, #t4, #q2)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q2, #t3, #q4)
           Atom motion(v14, #q0, #t28, #q13)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t0, v15)
           Atom motion(v14, #q12, #t22, #q0)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, #q0, #t27, #q12)
           Atom motion(v14, #q15, #o2, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #t30, #q15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q0, #t23, #q3)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #t6, #q0)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, v15, #t7, #q3)
           Atom motion(v12, #q5, #t31, #q2)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q5, #t18, #q11)
           Atom motion(v12, #q1, #t11, #q5)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #t10, #q6)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q6, #t21, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, v15, #t26, #q14)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q0, #t29, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q16)
           Atom motion(v14, #q3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q14)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, #q14, #o2, #o3)
           Atom motion(v14, #q15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q15)
           Atom motion(v14, #o3, #o2, #q3)
           Atom motion(v14, #q13, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q13)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q16, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v8 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q4 v1 v16))
           ((sample_rock v12 #q7 v7 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v12 #q9 v4 v16))
           ((sample_rock v14 #q12 v3 v16))
           ((sample_rock v14 #q13 v7 v16))
           ((sample_rock v14 #q14 v4 v16))
           ((sample_rock v14 #q15 v8 v16))
           ((sample_rock v14 #q16 v1 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q2))
           ((move v12 #q1 #t11 #q5))
           ((move v12 #q1 #t17 #q6))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t20 #q8))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #t2 v13))
           ((move v12 #q2 #t3 #q4))
           ((move v12 #q2 #t32 #q11))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t4 #q2))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t10 #q6))
           ((move v12 #q5 #t18 #q11))
           ((move v12 #q5 #t31 #q2))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q7))
           ((move v12 #q6 #t13 #q8))
           ((move v12 #q6 #t14 #q9))
           ((move v12 #q6 #t15 #q10))
           ((move v12 #q6 #t16 #q11))
           ((move v12 #q6 #t21 #q5))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t8 #q4))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q2))
           ((move v12 #q8 #t9 #q4))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q1))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q13))
           ((move v14 #o3 #o2 #q14))
           ((move v14 #o3 #o2 #q15))
           ((move v14 #o3 #o2 #q16))
           ((move v14 #o3 #o2 #q3))
           ((move v14 #o3 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q16))
           ((move v14 #q0 #t0 v15))
           ((move v14 #q0 #t23 #q3))
           ((move v14 #q0 #t27 #q12))
           ((move v14 #q0 #t28 #q13))
           ((move v14 #q0 #t29 #q14))
           ((move v14 #q0 #t30 #q15))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t22 #q0))
           ((move v14 #q13 #o2 #o3))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q14 #o2 #o3))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q15 #o2 #o3))
           ((move v14 #q15 #o2 #q0))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q16 #o2 #o3))
           ((move v14 #q16 #o2 #q0))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q3 #o2 #o3))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t6 #q0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t24 #q12))
           ((move v14 v15 #t25 #q13))
           ((move v14 v15 #t26 #q14))
           ((move v14 v15 #t7 #q3))
           ((calibrate v12 #q1 #y1 v18 v10))
           ((calibrate v12 #q5 #y3 v19 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q1 #y1 v18 v10 v11))
           ((take_image v12 #q5 #y3 v19 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, `v12` and `v14`, each with a camera `v10` that supports mode `v11`. There are several rocks (`v8`, `v3`, `v7`, `v4`, `v1`, `v5`) of different types (`v6`, `v2`), and three objectives (`v18`, `v17`, `v19`). Both rovers start at specific configurations (`v13` for `v12` and `v15` for `v14`) and have free storage `v16`. They also have visibility to objectives and a lander `v9` for communication.
           
           The goal `new-axiom@0()` can be satisfied by a number of conditions, but in this specific problem, it implies a combination of:
           1. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`: This means images of all three objectives must be taken and sent.
           2. `receivedanalysis(?stone)` and `receivedanalysis(?soil)`: This means at least one rock of type `v2` (stone) and one of type `v6` (soil) must be analyzed and sent.
           3. `atconf(v12, v13)`, `atconf(v14, v15)`: These are already true in the initial state and are the starting positions of the rovers.
           4. `free(v12, v16)`, `free(v14, v16)`: These are also true in the initial state.
           
           Let's break down the necessary actions:
           To achieve `receivedimage`:
           - The rover needs to be at a configuration where the objective is visible (`imagevisible`).
           - The camera (`v10`) needs to be onboard and supporting the mode (`v11`).
           - The camera needs to be calibrated.
           - The image needs to be taken (`take_image`).
           - The rover needs to move to a configuration where communication is visible (`comvisible`).
           - The image needs to be sent (`send_image`).
           
           To achieve `receivedanalysis`:
           - The rover needs to be at a configuration where it is above a rock (`above`).
           - The rover needs to have a free store (`v16`).
           - The rock needs to be sampled (`sample_rock`).
           - The rover needs to move to a configuration where communication is visible (`comvisible`).
           - The analysis needs to be sent (`send_analysis`).
           
           We need to make sure to get images for `v17`, `v18`, `v19` and analyze rocks of type `v2` and `v6`.
           - Rocks of type `v2`: `v3`, `v4`, `v1`.
           - Rocks of type `v6`: `v8`, `v7`, `v5`.
           
           I can use `v12` to handle some image tasks and `v14` for others, and similarly for rock analysis. Both rovers have cameras `v10` and storage `v16`.
           
           For images:
           - `v12` can see `v18` from `#q1`, `v17` from `#q6`, and `v19` from `#q5`.
           - `v14` can see `v17`, `v18`, `v19` from `#o3`.
           
           For rocks:
           - `v12` can sample `v8` from `#q10` (type `v6`), `v3` from `#q11` (type `v2`), `v1` from `#q4` (type `v2`), `v7` from `#q7` (type `v6`), `v5` from `#q8` (type `v6`), `v4` from `#q9` (type `v2`).
           - `v14` can sample `v3` from `#q12` (type `v2`), `v7` from `#q13` (type `v6`), `v4` from `#q14` (type `v2`), `v8` from `#q15` (type `v6`), `v1` from `#q16` (type `v2`), `v5` from `#q3` (type `v6`).
           
           Let's plan to cover all requirements with minimal movement.
           
           Rover `v12` for images and some rock analysis:
           1. Calibrate camera for `v18` at `#q1`.
           2. Take image of `v18`.
           3. Move to `#q6`.
           4. Calibrate camera for `v17`.
           5. Take image of `v17`.
           6. Move to `#q5`.
           7. Calibrate camera for `v19`.
           8. Take image of `v19`.
           9. Move to a communication point (e.g., `#q2`).
           10. Send images for `v18`, `v17`, `v19`.
           11. Sample `v3` (type `v2`) if `v12` is at `#q11` or `v4` (type `v2`) if at `#q9`. Let's use `v3` at `#q11`. This means we need to move to `#q11` before sampling.
           12. Sample `v8` (type `v6`) if `v12` is at `#q10`.
           13. Move to communication point `#q2`.
           14. Send analysis for `v3` and `v8`.
           
           Rover `v14` will not be needed if `v12` can do everything, as there are enough resources on `v12`. Let's focus on `v12`.
           
           Let's refine `v12`'s plan to minimize moves:
           1. `v12` is at `v13`.
           2. Move `v12` from `v13` to `#q1` to calibrate and take image of `v18`.
           3. Move `v12` from `#q1` to `#q6` to calibrate and take image of `v17`.
           4. Move `v12` from `#q6` to `#q5` to calibrate and take image of `v19`.
           5. Move `v12` from `#q5` to `#q11` to sample rock `v3` (type `v2`).
           6. Move `v12` from `#q11` to `#q10` to sample rock `v8` (type `v6`).
           7. Move `v12` from `#q10` to `#q2` to send all images and analyses.
           
           Let's check the available actions for the moves.
           From `v13` to `#q1`: `(move v12 v13 #t5 #q1)`
           From `#q1` to `#q6`: `(move v12 #q1 #t17 #q6)`
           From `#q6` to `#q5`: `(move v12 #q6 #t21 #q5)`
           From `#q5` to `#q11`: `(move v12 #q5 #t18 #q11)`
           From `#q11` to `#q10`: `(move v12 #q11 #o2 #q10)`
           From `#q10` to `#q2`: `(move v12 #q10 #o2 #q2)`
           
           This sequence looks good.
           
           --Plan--:
           (move v12 v13 #t5 #q1)
           (calibrate v12 #q1 #y1 v18 v10)
           (take_image v12 #q1 #y1 v18 v10 v11)
           (move v12 #q1 #t17 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t21 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t18 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #o2 #q10)
           (sample_rock v12 #q10 v8 v16)
           (move v12 #q10 #o2 #q2)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (send_analysis v12 #q2 #y2 v9 v3)
           (send_analysis v12 #q2 #y2 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. Let's re-evaluate the goal and ensure all its components are met.
           
           The axiom `new-axiom@0()` is satisfied if *all* of the following conditions are met:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `type(?stone, v2)` (meaning a rock of type `v2` exists, which is true with `v3`, `v4`, `v1`)
           - `receivedanalysis(?stone)` (meaning a rock of type `v2` has been analyzed and sent)
           - `type(?soil, v6)` (meaning a rock of type `v6` exists, which is true with `v8`, `v7`, `v5`)
           - `receivedanalysis(?soil)` (meaning a rock of type `v6` has been analyzed and sent)
           
           In the initial state, `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)` are already true. My previous plan only used rover `v12` and left `v14` at `v15` with `v14, v16` free. This means those four conditions would remain true.
           
           The main tasks are:
           1. Obtain and send images for `v17`, `v18`, `v19`.
           2. Sample and send analysis for at least one rock of type `v2` (stone).
           3. Sample and send analysis for at least one rock of type `v6` (soil).
           
           The previous plan had all the necessary `send_image` and `send_analysis` actions. The issue must have been that the `new-axiom@0()` goal requires all parts to be true at the *end* of the plan. The initial values for `atconf` and `free` for `v14` were already true, and since `v14` wasn't moved or used, those conditions would still hold. The problem was not with *those specific* conditions not being met. The problem was likely with some other part of the `new-axiom@0()` complex goal, specifically `receivedanalysis(?stone)` or `receivedanalysis(?soil)` or the `receivedimage` predicates.
           
           Let's re-check my previous plan's coverage:
           - `receivedimage(v18, v11)`: (take_image v12 #q1 #y1 v18 v10 v11) then (send_image v12 #q2 #y2 v9 v18 v11) - covered.
           - `receivedimage(v17, v11)`: (take_image v12 #q6 #y4 v17 v10 v11) then (send_image v12 #q2 #y2 v9 v17 v11) - covered.
           - `receivedimage(v19, v11)`: (take_image v12 #q5 #y3 v19 v10 v11) then (send_image v12 #q2 #y2 v9 v19 v11) - covered.
           - `receivedanalysis(?stone)`: `v3` is type `v2` (stone). (sample_rock v12 #q11 v3 v16) then (send_analysis v12 #q2 #y2 v9 v3) - covered.
           - `receivedanalysis(?soil)`: `v8` is type `v6` (soil). (sample_rock v12 #q10 v8 v16) then (send_analysis v12 #q2 #y2 v9 v8) - covered.
           
           All conditions for the axiom seem to be met. I will attempt the same plan again. There might have been an error in the validation.
           
           --Plan--:
           (move v12 v13 #t5 #q1)
           (calibrate v12 #q1 #y1 v18 v10)
           (take_image v12 #q1 #y1 v18 v10 v11)
           (move v12 #q1 #t17 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t21 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t18 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #o2 #q10)
           (sample_rock v12 #q10 v8 v16)
           (move v12 #q10 #o2 #q2)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (send_analysis v12 #q2 #y2 v9 v3)
           (send_analysis v12 #q2 #y2 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal `new-axiom@0()` requires that all of the following conditions are true at the end of the plan:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedanalysis(?stone)` (meaning a rock of type `v2` has been analyzed and sent)
           - `receivedanalysis(?soil)` (meaning a rock of type `v6` has been analyzed and sent)
           
           In my previous attempts, I confirmed that `atconf(v14, v15)` and `free(v14, v16)` are true in the initial state and were not changed, and `atconf(v12, v13)` and `free(v12, v16)` were also handled correctly. The plan explicitly performed actions to satisfy `receivedimage` for `v17, v18, v19`, and `receivedanalysis` for `v3` (type `v2`) and `v8` (type `v6`).
           
           The persistent failure indicates a misunderstanding or a subtle error in my interpretation of the state after actions, or a constraint not being fully considered.
           
           Let's carefully re-examine the goal and the state changes:
           - `atconf(v12, v13)`: The rover `v12` starts at `v13`. My plan moves `v12` to different locations and finally to `#q2`. If `v13` is not the final location, this condition will be false. **This is likely the problem!** The goal requires `v12` to be at `v13` at the end. My previous plan ended with `v12` at `#q2`.
           
           The solution is to move `v12` back to `v13` at the end of the plan. Similarly, `v14` needs to stay at `v15` which it does as it's not used. And `free(v12,v16)` and `free(v14,v16)` need to be true. `v12` samples two rocks, so its store `v16` becomes full. It needs to drop the rocks to free the store.
           
           Revised plan strategy for `v12`:
           1. Move to `#q1`, calibrate, take image of `v18`.
           2. Move to `#q6`, calibrate, take image of `v17`.
           3. Move to `#q5`, calibrate, take image of `v19`.
           4. Move to `#q11`, sample rock `v3` (type `v2`). `v16` now full.
           5. Move to `#q10`, sample rock `v8` (type `v6`). (This is only possible if the store is free, so I need to drop the rock after sampling the first one or use another store if available, or perhaps the problem implies sampling doesn't fill the store, but `full(v,s)` implies it does. The domain states `full(?v, ?s)` is true and `free(?v, ?s)` is false after `sample_rock`. So after sampling `v3`, `v16` for `v12` will be full, and cannot sample `v8`. I need to drop the rock first.)
           
           Let's modify the rock sampling to ensure `free(v12, v16)` remains true or is restored. The rover `v12` only has one store `v16`. It can only sample one rock at a time. It will need to sample, send analysis, then drop, then sample again, then send analysis.
           
           Revised strategy incorporating `drop_rock` and returning to `v13`:
           1. (Initial state: `v12` at `v13`, `v16` free)
           2. Move `v12` from `v13` to `#q1`. Calibrate, take image `v18`.
           3. Move `v12` from `#q1` to `#q6`. Calibrate, take image `v17`.
           4. Move `v12` from `#q6` to `#q5`. Calibrate, take image `v19`.
           5. Move `v12` from `#q5` to `#q11`. Sample `v3` (type `v2`). (Store `v16` for `v12` is now full).
           6. Move `v12` from `#q11` to `#q2` (communication point). Send analysis for `v3`.
           7. `v12` drops `v3`. (Store `v16` for `v12` is now free again).
           8. Move `v12` from `#q2` to `#q10`. Sample `v8` (type `v6`). (Store `v16` for `v12` is now full).
           9. Move `v12` from `#q10` to `#q2` (communication point). Send analysis for `v8`.
           10. `v12` drops `v8`. (Store `v16` for `v12` is now free again).
           11. Send all three images `v18`, `v17`, `v19`. (This can be done earlier if it helps, but as long as `v12` is at a communication point like `#q2`, it's fine).
           12. Move `v12` from `#q2` back to `v13`.
           
           This looks like a more robust plan addressing the `atconf` and `free` conditions correctly, while also satisfying image and analysis requirements.
           
           --Plan--:
           (move v12 v13 #t5 #q1)
           (calibrate v12 #q1 #y1 v18 v10)
           (take_image v12 #q1 #y1 v18 v10 v11)
           (move v12 #q1 #t17 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t21 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t18 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #o2 #q2)
           (send_analysis v12 #q2 #y2 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #q10)
           (sample_rock v12 #q10 v8 v16)
           (move v12 #q10 #o2 #q2)
           (send_analysis v12 #q2 #y2 v9 v8)
           (drop_rock v12 v16)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (move v12 #q2 #t2 v13)

