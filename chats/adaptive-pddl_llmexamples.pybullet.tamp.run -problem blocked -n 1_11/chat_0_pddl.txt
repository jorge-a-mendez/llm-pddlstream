User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom pose(v8, v9)
           Atom handempty(v6)
           Atom atpose(v15, v16)
           Atom atbconf(v3)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom stackable(v15, v10)
           Atom type(v12, v17)
           Atom atpose(v8, v9)
           Atom canmove()
           Atom handempty(v4)
           Atom ataconf(v6, v7)
           Atom arm(v4)
           Atom arm(v6)
           Atom type(v8, v17)
           Atom graspable(v8)
           Atom atpose(v12, v13)
           Atom stackable(v8, v10)
           Atom stackable(v12, v18)
           Atom stackable(v12, v10)
           Atom graspable(v15)
           Atom controllable(v4)
           Atom pose(v15, v16)
           Atom supported(v15, v16, v11)
           Atom supported(v12, v13, v14)
           Atom bconf(v3)
           Atom aconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom stackable(v8, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v8, #o1)
           Atom grasp(v12, #o1)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, `v3` to `v18`, and some continuous parameters represented by `#o0`, `#o1`, and `#o2`. The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true. From the initial state, we know that `type(v12, v17)` and `type(v8, v17)`. This means that either `v12` or `v8` can be the `?green` object in the axiom.
           
           Let's analyze the conditions for `on(?green, v18)`.
           If `?green` is `v12`, then we need `on(v12, v18)`. This means there must exist a pose `p` such that `supported(v12, p, v18)` and `atpose(v12, p)`.
           If `?green` is `v8`, then we need `on(v8, v18)`. This means there must exist a pose `p` such that `supported(v8, p, v18)` and `atpose(v8, p)`.
           
           From the initial state, we have:
           - `atpose(v12, v13)` and `supported(v12, v13, v14)`. This means `on(v12, v14)`.
           - `atpose(v8, v9)` and `supported(v8, v9, v11)`. This means `on(v8, v11)`.
           
           We also have the following facts:
           - `supported(v12, #o2, v18)`: This means `v12` *can be* on `v18` at pose `#o2`.
           - `supported(v8, #o2, v18)`: This means `v8` *can be* on `v18` at pose `#o2`.
           
           The only available action instance is `(move_base v3 v3 #o0)`. This action moves the base from `v3` to `v3` using trajectory `#o0`. However, the goal requires `on(?, v18)`, which means an object needs to be placed on `v18`. There are no `pick` or `place` actions available in the provided action instances. The `move_base` action only changes the robot's base configuration and `canmove()` predicate, but it does not affect the `on` predicate.
           
           Since there are no `pick` or `place` actions available, the robot cannot move any object from its current location (`v12` on `v14` and `v8` on `v11`) to `v18`. Therefore, the `on(?, v18)` condition cannot be met.
           
           Thus, the goal is unreachable with the given set of available actions.

