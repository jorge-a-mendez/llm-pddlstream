User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom pose(v8, v9)
           Atom handempty(v6)
           Atom atpose(v15, v16)
           Atom atbconf(v3)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom stackable(v15, v10)
           Atom type(v12, v17)
           Atom atpose(v8, v9)
           Atom canmove()
           Atom handempty(v4)
           Atom ataconf(v6, v7)
           Atom arm(v4)
           Atom arm(v6)
           Atom type(v8, v17)
           Atom graspable(v8)
           Atom atpose(v12, v13)
           Atom stackable(v8, v10)
           Atom stackable(v12, v18)
           Atom stackable(v12, v10)
           Atom graspable(v15)
           Atom controllable(v4)
           Atom pose(v15, v16)
           Atom supported(v15, v16, v11)
           Atom supported(v12, v13, v14)
           Atom bconf(v3)
           Atom aconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom stackable(v8, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v18)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v8, #g0)
           Atom grasp(v12, #o1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v8, #p0, #g0, #q1, #t2)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(v3, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p0 #g0 #q1 #t2))
           ((place v4 v8 #p0 #g0 #q1 #t2))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The robot has two arms, `v4` and `v6`, both of which are initially empty. The robot is at base configuration `v3`. There are three graspable objects: `v8`, `v12`, and `v15`.
           - `v8` is at pose `v9` and is supported by `v11`. It is also type `v17` and stackable on `v10` and `v18`. It can be grasped with `#g0`.
           - `v12` is at pose `v13` and is supported by `v14`. It is also type `v17` and stackable on `v18` and `v10`. It can be grasped with `#o1`.
           - `v15` is at pose `v16` and is supported by `v11`. It is stackable on `v10`. It can be grasped with `#o1`.
           
           The goal is `new-axiom@0()`, which states `on(?green, v18)` and `type(?green, v17)`. From the initial state, we know that `v8` and `v12` are of type `v17`. So we need to place either `v8` or `v12` on `v18`.
           - `v8` is stackable on `v18`.
           - `v12` is stackable on `v18`.
           
           Let's try to place `v8` on `v18`. This means we need to achieve `supported(v8, ?p, v18)` and `atpose(v8, ?p)`. We already have `pose(v8, #p0)` and `supported(v8, #p0, v18)`. So if we place `v8` at `#p0`, the goal will be achieved.
           
           To place `v8` at `#p0` using arm `v4`, we need to pick it from its initial pose `v9` with grasp `#g0`, move the base to `#q1`, and then place it at `#p0` with grasp `#g0`. The initial base configuration is `v3`. So we need to move the base from `v3` to `q0` to pick `v8` at `v9`, then move the base from `q0` to `q1` to place it at `#p0`.
           
           Let's use the provided actions:
           1. `pick v4 v8 v9 #g0 #q0 #t0`: This picks `v8` from `v9` using arm `v4` at base config `#q0`. We need to move the base to `#q0` first.
           2. `move_base v3 #q0 #t1`: Moves the base from `v3` to `#q0`.
           3. `place v4 v8 #p0 #g0 #q1 #t2`: This places `v8` at `#p0` using arm `v4` at base config `#q1`. We need to move the base from `#q0` to `#q1` after picking.
           4. `move_base #q0 #q1 #o0`: Moves the base from `#q0` to `#q1`.
           
           So the sequence will be:
           1. Move base to the configuration required for picking (`#q0`).
           2. Pick `v8` using arm `v4`.
           3. Move base to the configuration required for placing (`#q1`).
           4. Place `v8` at `#p0`.
           
           --Plan--:
           (move_base v3 #q0 #t1)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q1 #o0)
           (place v4 v8 #p0 #g0 #q1 #t2)

