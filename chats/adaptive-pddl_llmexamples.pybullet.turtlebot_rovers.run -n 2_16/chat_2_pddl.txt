User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v17)
           Atom rover(v12)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom onboard(v10, v12)
           Atom camera(v10)
           Atom type(v5, v6)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom store(v16)
           Atom type(v7, v6)
           Atom type(v4, v2)
           Atom rock(v4)
           Atom rock(v1)
           Atom rock(v7)
           Atom objective(v18)
           Atom mode(v11)
           Atom lander(v9)
           Atom conf(v14, v15)
           Atom supports(v10, v11)
           Atom rock(v5)
           Atom free(v14, v16)
           Atom atconf(v14, v15)
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom type(v3, v2)
           Atom free(v12, v16)
           Atom rock(v3)
           Atom conf(v12, v13)
           Atom above(v12, #q2, v1)
           Atom conf(v12, #q2)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #q0, #y0, v17)
           Atom imagerange(v12, #q0, v17)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v5)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v3)
           Atom comvisible(v14, #q4, #y3, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v12, #q1, #y1, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v7)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #t1, v15)
           Atom motion(v12, v13, #t7, #q0)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #t2, #q4)
           Atom motion(v14, v15, #t6, #q5)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, v13, #t8, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q3, #t4, #q0)
           Atom motion(v12, #q3, #t5, #q1)
           Atom motion(v12, #q0, #t9, #q3)
           Atom motion(v12, #q2, #t0, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q1, #t10, #q3)
           Atom motion(v12, #q3, #t11, v13)
           Atom motion(v12, #q3, #t3, #q2)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q5, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, v15)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v1 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t9 #q3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t10 #q3))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t0 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #t11 v13))
           ((move v12 #q3 #t3 #q2))
           ((move v12 #q3 #t4 #q0))
           ((move v12 #q3 #t5 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t7 #q0))
           ((move v12 v13 #t8 #q1))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 #q5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #t1 v15))
           ((move v14 #q5 #o2 #o3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t2 #q4))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t6 #q5))
           ((calibrate v12 #q0 #y0 v17 v10))
           ((calibrate v12 #q1 #y1 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((take_image v12 #q0 #y0 v17 v10 v11))
           ((take_image v12 #q1 #y1 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y3 v9 v1))
           ((send_analysis v14 #q4 #y3 v9 v3))
           ((send_analysis v14 #q4 #y3 v9 v4))
           ((send_analysis v14 #q4 #y3 v9 v7))
           ((send_analysis v14 #q4 #y3 v9 v8))
           ((send_analysis v14 #q4 #y3 v9 v5))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q4 #y3 v9 v17 v11))
           ((send_image v14 #q4 #y3 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a camera (v10) which supports the imaging mode (v11), a lander (v9), a store (v16), and several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18). The rocks are classified as either type v2 (stone) or v6 (soil).
           
           The initial state shows that both rovers are at their respective initial configurations (v12 at v13, v14 at v15) and have a free storage unit (v16). The rovers have visibility of various rocks (above predicate) and objectives (imagevisible predicate) from different configurations. They also have communication visibility to the lander (comvisible predicate). No cameras are initially calibrated, and no images or analyses have been received by the lander.
           
           The goal `new-axiom@0()` represents a complex state that requires several conditions to be met:
           1. Both rovers must be at their initial configurations (`atconf(v12, v13)` and `atconf(v14, v15)`).
           2. Both rovers must have a free storage unit (`free(v12, v16)` and `free(v14, v16)`).
           3. Images of objectives v17 and v18 in mode v11 must have been received by the lander (`receivedimage(v17, v11)` and `receivedimage(v18, v11)`).
           4. Rocks of type v2 (stone) and v6 (soil) must have been analyzed and the analysis received by the lander (`receivedanalysis(?stone)` and `receivedanalysis(?soil)`).
           
           Let's break down the plan to achieve these goals:
           
           First, we need to ensure that `atconf(v12, v13)` and `atconf(v14, v15)` are maintained. This means we should return the rovers to their initial positions if they move.
           Second, `free(v12, v16)` and `free(v14, v16)` are already true in the initial state, and we need to ensure they remain true. This means after sampling a rock, we need to drop it.
           Third, for `receivedimage(v17, v11)` and `receivedimage(v18, v11)`:
               - The rovers need to move to a configuration where the objective is visible.
               - The camera needs to be calibrated.
               - An image needs to be taken.
               - The image needs to be sent to the lander.
           Fourth, for `receivedanalysis(?stone)` and `receivedanalysis(?soil)`:
               - A rock of type v2 (stone) and a rock of type v6 (soil) need to be sampled.
               - The analysis needs to be sent to the lander.
               - The sampled rock needs to be dropped to free up storage.
           
           Let's pick specific rocks for analysis:
           - For `type(?stone, v2)`: We can pick `v1` (type v2).
           - For `type(?soil, v6)`: We can pick `v5` (type v6).
           
           We can use Rover v12 for objectives v17 and v18, and Rover v14 for rock analysis. Or vice-versa. Since both rovers have initial free storage and are at their initial configurations, we can try to optimize the path.
           
           Rover v12 has `imagevisible(v12, #q0, #y0, v17)` and `imagevisible(v12, #q1, #y1, v18)`, and `comvisible(v12, #q3, #y2, v9)`.
           Rover v12 has `above(v12, #q2, v1)` (rock v1, type v2 - stone) and `above(v12, #o5, v5)` (rock v5, type v6 - soil).
           Rover v14 has `imagevisible(v14, #o3, #o4, v17)` and `imagevisible(v14, #o3, #o4, v18)`, and `comvisible(v14, #q4, #y3, v9)`.
           Rover v14 has `above(v14, #q5, v5)` (rock v5, type v6 - soil) and `above(v14, #o5, v1)` (rock v1, type v2 - stone).
           
           Let's use v12 to get both images and analyses, as it can reach configurations for both objectives and rocks, and a communication configuration.
           
           Plan for v12:
           1. Calibrate camera for v17.
           2. Take image of v17.
           3. Calibrate camera for v18.
           4. Take image of v18.
           5. Move to a communication configuration and send both images.
           6. Move to a rock sampling configuration for a stone (v1).
           7. Sample rock v1.
           8. Move to communication configuration.
           9. Send analysis of v1.
           10. Drop rock v1.
           11. Move to a rock sampling configuration for soil (v5).
           12. Sample rock v5.
           13. Move to communication configuration.
           14. Send analysis of v5.
           15. Drop rock v5.
           16. Ensure v12 is at v13 and v14 is at v15 and free.
           
           Let's refine the sequence of actions for v12:
           - Initial state: `atconf(v12, v13)`, `free(v12, v16)`.
           - Calibrate and take image for v17: `calibrate(v12, #q0, #y0, v17, v10)`, `take_image(v12, #q0, #y0, v17, v10, v11)`. Needs to move to #q0.
           - Calibrate and take image for v18: `calibrate(v12, #q1, #y1, v18, v10)`, `take_image(v12, #q1, #y1, v18, v10, v11)`. Needs to move to #q1.
           - Send images: `send_image(v12, #q3, #y2, v9, v17, v11)`, `send_image(v12, #q3, #y2, v9, v18, v11)`. Needs to move to #q3.
           - Sample v1 (stone): `sample_rock(v12, #q2, v1, v16)`. Needs to move to #q2.
           - Send analysis for v1: `send_analysis(v12, #q3, #y2, v9, v1)`. Needs to move to #q3.
           - Drop v1: `drop_rock(v12, v16)`.
           - Sample v5 (soil): `sample_rock(v12, #o5, v5, v16)`. Needs to move to #o5.
           - Send analysis for v5: `send_analysis(v12, #q3, #y2, v9, v5)`. Needs to move to #q3.
           - Drop v5: `drop_rock(v12, v16)`.
           
           Let's put it all together.
           
           --Plan--:
           (move v12 v13 #t7 #q0)
           (calibrate v12 #q0 #y0 v17 v10)
           (take_image v12 #q0 #y0 v17 v10 v11)
           (move v12 #q0 #o2 #q1)
           (calibrate v12 #q1 #y1 v18 v10)
           (take_image v12 #q1 #y1 v18 v10 v11)
           (move v12 #q1 #t10 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (move v12 #q3 #t3 #q2)
           (sample_rock v12 #q2 v1 v16)
           (move v12 #q2 #t0 #q3)
           (send_analysis v12 #q3 #y2 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q3 #o2 #o5)
           (sample_rock v12 #o5 v5 v16)
           (move v12 #o5 #o2 #q3)
           (send_analysis v12 #q3 #y2 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q3 #t11 v13)

