User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v14, v15)
           Atom objective(v17)
           Atom type(v7, v6)
           Atom rock(v5)
           Atom store(v16)
           Atom type(v1, v2)
           Atom atconf(v14, v15)
           Atom free(v14, v16)
           Atom rock(v1)
           Atom type(v5, v6)
           Atom supports(v10, v11)
           Atom objective(v19)
           Atom type(v8, v6)
           Atom mode(v11)
           Atom rock(v3)
           Atom objective(v18)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom free(v12, v16)
           Atom rock(v7)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom lander(v9)
           Atom onboard(v10, v12)
           Atom rover(v12)
           Atom atconf(v12, v13)
           Atom conf(v12, v13)
           Atom onboard(v10, v14)
           Atom rock(v8)
           Atom rover(v14)
           Atom above(v14, #q0, v8)
           Atom conf(v14, #q0)
           Atom imagevisible(v14, #q8, #y5, v17)
           Atom imagerange(v14, #q8, v17)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q14, v8)
           Atom conf(v12, #q14)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q11, #y7, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom comvisible(v12, #q5, #y3, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q10, v5)
           Atom conf(v12, #q10)
           Atom above(v14, #q17, v5)
           Atom conf(v14, #q17)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom above(v14, #q3, v1)
           Atom conf(v14, #q3)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v14, #q16, v7)
           Atom conf(v14, #q16)
           Atom above(v12, #q15, v4)
           Atom conf(v12, #q15)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom imagevisible(v12, #q4, #y2, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom imagevisible(v14, #q9, #y6, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom above(v12, #q13, v3)
           Atom conf(v12, #q13)
           Atom above(v14, #q12, v3)
           Atom conf(v14, #q12)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, v13, #t25, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #t23, #q12)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v12, v13, #t24, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v14, #q0, #t15, #q8)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q0, #t17, #q11)
           Atom motion(v14, #q12, #o2, #q0)
           Atom motion(v14, v15, #t7, #q0)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q0, #t16, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, v13, #t1, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q13, #t26, #q2)
           Atom motion(v12, #q14, #t27, #q2)
           Atom motion(v12, #q2, #t22, #q4)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, v13, #t34, #q15)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, v13, #t18, #q7)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v14, #q12, #t21, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q11, #t14, #q1)
           Atom motion(v14, #q9, #t13, #q1)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q1, #t0, #q0)
           Atom motion(v14, #q0, #t2, #q1)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q1, #t3, v15)
           Atom motion(v14, #q8, #t12, #q1)
           Atom motion(v14, #q17, #o2, #q0)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, #q1, #t39, #q17)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, #q0, #o2, #q17)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q11)
           Atom motion(v14, #q17, #t41, #q1)
           Atom motion(v14, #q11, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q8, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q15)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, v13, #t19, #q10)
           Atom motion(v12, #q15, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q5, #t9, v13)
           Atom motion(v12, #q5, #t33, #q4)
           Atom motion(v12, #q5, #t28, #q10)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, #q10, #t29, #q5)
           Atom motion(v12, #q5, #t30, #q2)
           Atom motion(v12, #q7, #t11, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q13, #t36, #q5)
           Atom motion(v12, #q5, #t10, #q7)
           Atom motion(v12, #q5, #t37, #q13)
           Atom motion(v12, #q2, #t4, #q5)
           Atom motion(v12, #q15, #t31, #q5)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q4, #t5, #q5)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q17)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q3, #t40, #q1)
           Atom motion(v14, #q17, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, v15, #t8, #q3)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, v15, #t38, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q0)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q0, #o2, #q16)
           Atom motion(v14, #q16, #t35, #q1)
           Atom motion(v12, #q5, #t32, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q4, #t20, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q6, #t6, #q5)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q17)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #q17, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, v13, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q10 v5 v16))
           ((sample_rock v12 #q13 v3 v16))
           ((sample_rock v12 #q14 v8 v16))
           ((sample_rock v12 #q15 v4 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #q0 v8 v16))
           ((sample_rock v14 #q12 v3 v16))
           ((sample_rock v14 #q16 v7 v16))
           ((sample_rock v14 #q17 v5 v16))
           ((sample_rock v14 #q3 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q15))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t29 #q5))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t26 #q2))
           ((move v12 #q13 #t36 #q5))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t27 #q2))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q10))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t31 #q5))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t22 #q4))
           ((move v12 #q2 #t4 #q5))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t20 #q6))
           ((move v12 #q4 #t5 #q5))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t10 #q7))
           ((move v12 #q5 #t28 #q10))
           ((move v12 #q5 #t30 #q2))
           ((move v12 #q5 #t32 #q6))
           ((move v12 #q5 #t33 #q4))
           ((move v12 #q5 #t37 #q13))
           ((move v12 #q5 #t9 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t6 #q5))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t11 #q5))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q2))
           ((move v12 v13 #t18 #q7))
           ((move v12 v13 #t19 #q10))
           ((move v12 v13 #t24 #q13))
           ((move v12 v13 #t25 #q14))
           ((move v12 v13 #t34 #q15))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q17))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q16))
           ((move v14 #q0 #o2 #q17))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t15 #q8))
           ((move v14 #q0 #t16 #q9))
           ((move v14 #q0 #t17 #q11))
           ((move v14 #q0 #t2 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t0 #q0))
           ((move v14 #q1 #t3 v15))
           ((move v14 #q1 #t39 #q17))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q17))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t14 #q1))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t21 #q1))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q0))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t35 #q1))
           ((move v14 #q17 #o2 #o5))
           ((move v14 #q17 #o2 #q0))
           ((move v14 #q17 #o2 #q11))
           ((move v14 #q17 #o2 #q12))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q3))
           ((move v14 #q17 #o2 #q8))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t41 #q1))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q17))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t40 #q1))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q17))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t12 #q1))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t13 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t23 #q12))
           ((move v14 v15 #t38 #q16))
           ((move v14 v15 #t7 #q0))
           ((move v14 v15 #t8 #q3))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v12 #q4 #y2 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #q11 #y7 v19 v10))
           ((calibrate v14 #q8 #y5 v17 v10))
           ((calibrate v14 #q9 #y6 v18 v10))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v12 #q4 #y2 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #q11 #y7 v19 v10 v11))
           ((take_image v14 #q8 #y5 v17 v10 v11))
           ((take_image v14 #q9 #y6 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y3 v9 v7))
           ((send_analysis v12 #q5 #y3 v9 v5))
           ((send_analysis v12 #q5 #y3 v9 v3))
           ((send_analysis v12 #q5 #y3 v9 v8))
           ((send_analysis v12 #q5 #y3 v9 v4))
           ((send_analysis v12 #q5 #y3 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_image v12 #q5 #y3 v9 v17 v11))
           ((send_image v12 #q5 #y3 v9 v18 v11))
           ((send_image v12 #q5 #y3 v9 v19 v11))
           ((send_image v14 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene involves two rovers, v12 and v14, equipped with a camera v10 that supports mode v11. There are several objectives (v17, v18, v19) and rocks (v1, v3, v4, v5, v7, v8) of two types (v2 for v1, v3, v4 and v6 for v5, v7, v8). Both rovers have a storage unit v16, and initially, both v12 and v14 have free storage. The lander v9 is available for communication.
           
           The goal `new-axiom@0()` can be satisfied in multiple ways, as indicated by the many axioms. However, all the axioms share a common structure:
           - `atconf(v12, v13)` and `atconf(v14, v15)` (These are already true in the initial state).
           - `free(v12, v16)` and `free(v14, v16)` (These are also already true in the initial state).
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`: This means images of all three objectives (v17, v18, v19) need to be taken and sent to the lander in mode v11.
           - `type(?stone, v2)` and `receivedanalysis(?stone)`: This means at least one rock of type v2 needs to be sampled and its analysis sent. Rocks of type v2 are v1, v3, v4.
           - `type(?soil, v6)` and `receivedanalysis(?soil)`: This means at least one rock of type v6 needs to be sampled and its analysis sent. Rocks of type v6 are v5, v7, v8.
           
           Since both rovers are already at their initial configurations (v13 for v12, v15 for v14) and have free storage, the plan needs to focus on:
           1. Taking and sending images of v17, v18, v19.
           2. Sampling and sending analysis for one rock of type v2 (e.g., v1, v3, or v4).
           3. Sampling and sending analysis for one rock of type v6 (e.g., v5, v7, or v8).
           
           Let's break down how to achieve these:
           
           **Image Tasks:**
           - To take an image, a rover needs to be at the correct configuration, have the camera calibrated, and the ray not blocked.
           - To send an image, a rover needs to be at a configuration where it can communicate with the lander, and the ray not blocked.
           
           Rover v12 can see:
           - v17 at #q2
           - v19 at #q6
           - v18 at #q4
           Rover v14 can see:
           - v17 at #q8
           - v19 at #q11
           - v18 at #q9
           
           Both rovers can communicate with the lander:
           - v12 at #q5
           - v14 at #q1
           
           **Rock Analysis Tasks:**
           - To sample a rock, a rover needs to be above the rock at a certain configuration and have free storage.
           - To send analysis, a rover needs to have analyzed the rock, be at a communication configuration with the lander, and the ray not blocked.
           
           Rover v12 can be above:
           - v8 at #q14 (type v6)
           - v5 at #q10 (type v6)
           - v1 at #q7 (type v2)
           - v7 at #o5 (type v6)
           - v4 at #q15 (type v2)
           - v3 at #q13 (type v2)
           
           Rover v14 can be above:
           - v8 at #q0 (type v6)
           - v5 at #q17 (type v6)
           - v1 at #q3 (type v2)
           - v7 at #q16 (type v6)
           - v4 at #o5 (type v2)
           - v3 at #q12 (type v2)
           
           Let's use rover v12 for image tasks and one rock analysis, and rover v14 for the other rock analysis.
           
           **Rover v12 Plan:**
           1. Calibrate camera for v17, take image, send image.
           2. Calibrate camera for v18, take image, send image.
           3. Calibrate camera for v19, take image, send image.
           4. Move to a rock of type v2, sample it, and send analysis.
           
           **Rover v14 Plan:**
           1. Move to a rock of type v6, sample it, and send analysis.
           
           Let's refine the plan:
           
           **Rover v12:**
           - Calibrate and take image of v17 at #q2. Current at v13.
             - `move v12 v13 #t1 #q2`
             - `calibrate v12 #q2 #y1 v17 v10`
             - `take_image v12 #q2 #y1 v17 v10 v11`
           - Move to #q5 to send image of v17.
             - `move v12 #q2 #t4 #q5`
             - `send_image v12 #q5 #y3 v9 v17 v11`
           - Calibrate and take image of v18 at #q4. Current at #q5.
             - `move v12 #q5 #t33 #q4`
             - `calibrate v12 #q4 #y2 v18 v10`
             - `take_image v12 #q4 #y2 v18 v10 v11`
           - Move to #q5 to send image of v18.
             - `move v12 #q4 #t5 #q5`
             - `send_image v12 #q5 #y3 v9 v18 v11`
           - Calibrate and take image of v19 at #q6. Current at #q5.
             - `move v12 #q5 #t32 #q6`
             - `calibrate v12 #q6 #y4 v19 v10`
             - `take_image v12 #q6 #y4 v19 v10 v11`
           - Move to #q5 to send image of v19.
             - `move v12 #q6 #t6 #q5`
             - `send_image v12 #q5 #y3 v9 v19 v11`
           - Sample a rock of type v2 (e.g., v1) at #q7. Current at #q5.
             - `move v12 #q5 #t10 #q7`
             - `sample_rock v12 #q7 v1 v16`
           - Send analysis for v1 at #q5. Current at #q7.
             - `move v12 #q7 #t11 #q5`
             - `send_analysis v12 #q5 #y3 v9 v1`
           
           **Rover v14:**
           - Sample a rock of type v6 (e.g., v8) at #q0. Current at v15.
             - `move v14 v15 #t7 #q0`
             - `sample_rock v14 #q0 v8 v16`
           - Send analysis for v8 at #q1. Current at #q0.
             - `move v14 #q0 #t2 #q1`
             - `send_analysis v14 #q1 #y0 v9 v8`
           
           All conditions for `new-axiom@0()` will be met.
           
           --Plan--:
           (move v12 v13 #t1 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t4 #q5)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (move v12 #q5 #t33 #q4)
           (calibrate v12 #q4 #y2 v18 v10)
           (take_image v12 #q4 #y2 v18 v10 v11)
           (move v12 #q4 #t5 #q5)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (move v12 #q5 #t32 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t6 #q5)
           (send_image v12 #q5 #y3 v9 v19 v11)
           (move v12 #q5 #t10 #q7)
           (sample_rock v12 #q7 v1 v16)
           (move v12 #q7 #t11 #q5)
           (send_analysis v12 #q5 #y3 v9 v1)
           (move v14 v15 #t7 #q0)
           (sample_rock v14 #q0 v8 v16)
           (move v14 #q0 #t2 #q1)
           (send_analysis v14 #q1 #y0 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. Let's re-examine the goal and the required conditions from the axiom `new-axiom@0()`.
           
           The axiom states that for the goal to be true, the following conditions must hold:
           - `atconf(v12, v13)`: Rover v12 must be at configuration v13.
           - `atconf(v14, v15)`: Rover v14 must be at configuration v15.
           - `free(v12, v16)`: Rover v12 must have free storage v16.
           - `free(v14, v16)`: Rover v14 must have free storage v16.
           - `receivedimage(v17, v11)`: Image of objective v17 in mode v11 must be received.
           - `receivedimage(v18, v11)`: Image of objective v18 in mode v11 must be received.
           - `receivedimage(v19, v11)`: Image of objective v19 in mode v11 must be received.
           - `type(?stone, v2)` AND `receivedanalysis(?stone)`: Analysis of at least one rock of type v2 must be received.
           - `type(?soil, v6)` AND `receivedanalysis(?soil)`: Analysis of at least one rock of type v6 must be received.
           
           My previous plan did successfully take and send all images and sample/send analysis for rocks v1 (type v2) and v8 (type v6). However, the critical part that was missed is that after sampling a rock, the `free` predicate for the store becomes `full`, and to satisfy `free(v12, v16)` and `free(v14, v16)` at the end, the sampled rocks must be dropped.
           
           So, the corrected strategy will be:
           For each rover that samples a rock, it must drop the rock after sending the analysis to ensure its store is free by the end.
           
           Let's adjust the plan:
           
           **Rover v12:**
           - Calibrate camera for v17, take image, send image.
           - Calibrate camera for v18, take image, send image.
           - Calibrate camera for v19, take image, send image.
           - Move to a rock of type v2, sample it, send analysis, then **drop the rock**.
           
           **Rover v14:**
           - Move to a rock of type v6, sample it, send analysis, then **drop the rock**.
           
           Let's reconstruct the plan with the `drop_rock` actions.
           
           **Rover v12 Steps:**
           1.  **Move to #q2 for v17 image:** `(move v12 v13 #t1 #q2)`
           2.  **Calibrate v10 for v17:** `(calibrate v12 #q2 #y1 v17 v10)`
           3.  **Take image of v17:** `(take_image v12 #q2 #y1 v17 v10 v11)`
           4.  **Move to #q5 for communication:** `(move v12 #q2 #t4 #q5)`
           5.  **Send image of v17:** `(send_image v12 #q5 #y3 v9 v17 v11)`
           
           6.  **Move to #q4 for v18 image:** `(move v12 #q5 #t33 #q4)`
           7.  **Calibrate v10 for v18:** `(calibrate v12 #q4 #y2 v18 v10)`
           8.  **Take image of v18:** `(take_image v12 #q4 #y2 v18 v10 v11)`
           9.  **Move to #q5 for communication:** `(move v12 #q4 #t5 #q5)`
           10. **Send image of v18:** `(send_image v12 #q5 #y3 v9 v18 v11)`
           
           11. **Move to #q6 for v19 image:** `(move v12 #q5 #t32 #q6)`
           12. **Calibrate v10 for v19:** `(calibrate v12 #q6 #y4 v19 v10)`
           13. **Take image of v19:** `(take_image v12 #q6 #y4 v19 v10 v11)`
           14. **Move to #q5 for communication:** `(move v12 #q6 #t6 #q5)`
           15. **Send image of v19:** `(send_image v12 #q5 #y3 v9 v19 v11)`
           
           16. **Move to #q7 for v1 rock (type v2):** `(move v12 #q5 #t10 #q7)`
           17. **Sample rock v1:** `(sample_rock v12 #q7 v1 v16)`
           18. **Move to #q5 for communication:** `(move v12 #q7 #t11 #q5)`
           19. **Send analysis of v1:** `(send_analysis v12 #q5 #y3 v9 v1)`
           20. **Drop rock v1:** `(drop_rock v12 v16)`
           
           **Rover v14 Steps:**
           1.  **Move to #q0 for v8 rock (type v6):** `(move v14 v15 #t7 #q0)`
           2.  **Sample rock v8:** `(sample_rock v14 #q0 v8 v16)`
           3.  **Move to #q1 for communication:** `(move v14 #q0 #t2 #q1)`
           4.  **Send analysis of v8:** `(send_analysis v14 #q1 #y0 v9 v8)`
           5.  **Drop rock v8:** `(drop_rock v14 v16)`
           
           This revised plan addresses the `free` store requirement for the goal state.
           
           --Plan--:
           (move v12 v13 #t1 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t4 #q5)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (move v12 #q5 #t33 #q4)
           (calibrate v12 #q4 #y2 v18 v10)
           (take_image v12 #q4 #y2 v18 v10 v11)
           (move v12 #q4 #t5 #q5)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (move v12 #q5 #t32 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t6 #q5)
           (send_image v12 #q5 #y3 v9 v19 v11)
           (move v12 #q5 #t10 #q7)
           (sample_rock v12 #q7 v1 v16)
           (move v12 #q7 #t11 #q5)
           (send_analysis v12 #q5 #y3 v9 v1)
           (drop_rock v12 v16)
           (move v14 v15 #t7 #q0)
           (sample_rock v14 #q0 v8 v16)
           (move v14 #q0 #t2 #q1)
           (send_analysis v14 #q1 #y0 v9 v8)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan was still invalid, which indicates a misunderstanding or a subtle issue with the axiom. Let's re-examine the goal `new-axiom@0()` and its conditions carefully.
           
           The goal `new-axiom@0()` is a conjunction of several predicates:
           1.  `atconf(v12, v13)`: Rover v12 must be at configuration v13.
           2.  `atconf(v14, v15)`: Rover v14 must be at configuration v15.
           3.  `free(v12, v16)`: Rover v12 must have free storage v16.
           4.  `free(v14, v16)`: Rover v14 must have free storage v16.
           5.  `receivedimage(v17, v11)`: Image of objective v17 in mode v11 must be received.
           6.  `receivedimage(v18, v11)`: Image of objective v18 in mode v11 must be received.
           7.  `receivedimage(v19, v11)`: Image of objective v19 in mode v11 must be received.
           8.  `type(?stone, v2)` AND `receivedanalysis(?stone)`: Analysis of at least one rock of type v2 must be received.
           9.  `type(?soil, v6)` AND `receivedanalysis(?soil)`: Analysis of at least one rock of type v6 must be received.
           
           My previous attempt addressed the `free` storage by adding `drop_rock` actions. The `atconf` requirements mean that at the *end* of the plan, the rovers must be at their initial positions. This means any movement away from `v13` or `v15` must be followed by a move back to `v13` or `v15` respectively.
           
           Let's trace the `atconf` predicates for each rover:
           
           **Initial State:**
           `atconf(v12, v13)`
           `atconf(v14, v15)`
           
           **Revised Rover v12 Strategy:**
           1.  Move to a position to take an image, calibrate, take image.
           2.  Move to a communication position, send image.
           3.  Repeat for all 3 objectives.
           4.  Move to a position to sample a type v2 rock, sample it.
           5.  Move to a communication position, send analysis.
           6.  Drop the rock.
           7.  **Move v12 back to its initial configuration v13.**
           
           **Revised Rover v14 Strategy:**
           1.  Move to a position to sample a type v6 rock, sample it.
           2.  Move to a communication position, send analysis.
           3.  Drop the rock.
           4.  **Move v14 back to its initial configuration v15.**
           
           Let's meticulously build the plan, ensuring the final `atconf` states.
           
           **Rover v12 Actions:**
           - To take image of v17 (at #q2):
               - `(move v12 v13 #t1 #q2)` (at #q2)
               - `(calibrate v12 #q2 #y1 v17 v10)`
               - `(take_image v12 #q2 #y1 v17 v10 v11)`
           - To send image of v17 (from #q2 to #q5):
               - `(move v12 #q2 #t4 #q5)` (at #q5)
               - `(send_image v12 #q5 #y3 v9 v17 v11)`
           - To take image of v18 (at #q4, from #q5):
               - `(move v12 #q5 #t33 #q4)` (at #q4)
               - `(calibrate v12 #q4 #y2 v18 v10)`
               - `(take_image v12 #q4 #y2 v18 v10 v11)`
           - To send image of v18 (from #q4 to #q5):
               - `(move v12 #q4 #t5 #q5)` (at #q5)
               - `(send_image v12 #q5 #y3 v9 v18 v11)`
           - To take image of v19 (at #q6, from #q5):
               - `(move v12 #q5 #t32 #q6)` (at #q6)
               - `(calibrate v12 #q6 #y4 v19 v10)`
               - `(take_image v12 #q6 #y4 v19 v10 v11)`
           - To send image of v19 (from #q6 to #q5):
               - `(move v12 #q6 #t6 #q5)` (at #q5)
               - `(send_image v12 #q5 #y3 v9 v19 v11)`
           - To sample rock v1 (type v2, at #q7, from #q5):
               - `(move v12 #q5 #t10 #q7)` (at #q7)
               - `(sample_rock v12 #q7 v1 v16)`
           - To send analysis of v1 (from #q7 to #q5):
               - `(move v12 #q7 #t11 #q5)` (at #q5)
               - `(send_analysis v12 #q5 #y3 v9 v1)`
           - To drop rock v1 (at #q5):
               - `(drop_rock v12 v16)`
           - **Return v12 to v13 (from #q5):**
               - `(move v12 #q5 #t9 v13)` (at v13)
           
           **Rover v14 Actions:**
           - To sample rock v8 (type v6, at #q0, from v15):
               - `(move v14 v15 #t7 #q0)` (at #q0)
               - `(sample_rock v14 #q0 v8 v16)`
           - To send analysis of v8 (from #q0 to #q1):
               - `(move v14 #q0 #t2 #q1)` (at #q1)
               - `(send_analysis v14 #q1 #y0 v9 v8)`
           - To drop rock v8 (at #q1):
               - `(drop_rock v14 v16)`
           - **Return v14 to v15 (from #q1):**
               - `(move v14 #q1 #t3 v15)` (at v15)
           
           This detailed step-by-step plan ensures all conditions of `new-axiom@0()` are met, including the final `atconf` states for both rovers and `free` storage for both.
           
           --Plan--:
           (move v12 v13 #t1 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t4 #q5)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (move v12 #q5 #t33 #q4)
           (calibrate v12 #q4 #y2 v18 v10)
           (take_image v12 #q4 #y2 v18 v10 v11)
           (move v12 #q4 #t5 #q5)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (move v12 #q5 #t32 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t6 #q5)
           (send_image v12 #q5 #y3 v9 v19 v11)
           (move v12 #q5 #t10 #q7)
           (sample_rock v12 #q7 v1 v16)
           (move v12 #q7 #t11 #q5)
           (send_analysis v12 #q5 #y3 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q5 #t9 v13)
           (move v14 v15 #t7 #q0)
           (sample_rock v14 #q0 v8 v16)
           (move v14 #q0 #t2 #q1)
           (send_analysis v14 #q1 #y0 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q1 #t3 v15)

