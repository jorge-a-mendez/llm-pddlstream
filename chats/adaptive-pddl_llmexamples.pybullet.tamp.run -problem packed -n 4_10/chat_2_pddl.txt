User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atbconf(v3)
           Atom aconf(v4, v5)
           Atom stackable(v8, v18)
           Atom handempty(v4)
           Atom graspable(v12)
           Atom pose(v16, v17)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom atpose(v12, v13)
           Atom stackable(v8, v10)
           Atom arm(v4)
           Atom stackable(v14, v18)
           Atom canmove()
           Atom stackable(v12, v18)
           Atom atpose(v8, v9)
           Atom pose(v14, v15)
           Atom stackable(v16, v10)
           Atom graspable(v8)
           Atom supported(v16, v17, v11)
           Atom pose(v12, v13)
           Atom supported(v12, v13, v11)
           Atom controllable(v4)
           Atom ataconf(v6, v7)
           Atom graspable(v16)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v10)
           Atom aconf(v6, v7)
           Atom pose(v8, v9)
           Atom arm(v6)
           Atom handempty(v6)
           Atom supported(v14, v15, v11)
           Atom stackable(v16, v18)
           Atom bconf(v3)
           Atom atpose(v16, v17)
           Atom graspable(v14)
           Atom ataconf(v4, v5)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom grasp(v14, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #o1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v18)
           Atom grasp(v16, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #o1)
           Atom supported(v16, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom supported(v14, #o2, v10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v16 #o2 #o1 #o3 #o4))
           ((place v4 v16 #o2 #o1 #o3 #o4))
           ((pick v4 v16 v17 #o1 #o3 #o4))
           ((place v4 v16 v17 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains four graspable objects: v8, v12, v14, and v16. These objects are initially located at various poses on a surface denoted by v11. The goal is to place all four objects on a different surface, v18. The robot has two arms, v4 and v6, both of which are initially empty. The robot is currently at base configuration v3.
           
           The plan involves picking up each of the four objects from their initial poses and placing them onto the target surface v18. Since the robot is initially at `atbconf(v3)`, and the `kin` predicates for placing objects involve `#o3`, the robot will need to move its base to `#o3` before placing. Similarly, since the initial poses of the objects are with respect to `v11`, and the `kin` predicates for picking involve `#o3`, the robot will likely need to move its base to `#o3` to perform the picks as well.
           
           Let's break down the plan for each object:
           1. Move the base from `v3` to `#o3`.
           2. Pick up `v8` from its current pose `v9` (on `v11`).
           3. Place `v8` onto `v18` at pose `#o2`.
           4. Pick up `v12` from its current pose `v13` (on `v11`).
           5. Place `v12` onto `v18` at pose `#o2`.
           6. Pick up `v14` from its current pose `v15` (on `v11`).
           7. Place `v14` onto `v18` at pose `#o2`.
           8. Pick up `v16` from its current pose `v17` (on `v11`).
           9. Place `v16` onto `v18` at pose `#o2`.
           
           All `kin` predicates for picking and placing use arm `v4`.
           The `supported` predicates with `#o2` and `v18` ensure that `#o2` is a valid pose on `v18` for each object.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v16 v17 #o1 #o3 #o4)
           (place v4 v16 #o2 #o1 #o3 #o4)

