User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v1, v2)
           Atom atconf(v14, v15)
           Atom rover(v14)
           Atom type(v8, v6)
           Atom rock(v3)
           Atom store(v16)
           Atom type(v4, v2)
           Atom rock(v5)
           Atom camera(v10)
           Atom rock(v8)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom onboard(v10, v14)
           Atom type(v5, v6)
           Atom objective(v18)
           Atom rock(v7)
           Atom objective(v19)
           Atom objective(v20)
           Atom objective(v17)
           Atom rover(v12)
           Atom conf(v14, v15)
           Atom rock(v4)
           Atom atconf(v12, v13)
           Atom type(v3, v2)
           Atom mode(v11)
           Atom type(v7, v6)
           Atom free(v14, v16)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom onboard(v10, v12)
           Atom conf(v12, v13)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q8, #y6, v17)
           Atom imagerange(v12, #q8, v17)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom imagevisible(v12, #q11, #y7, v20)
           Atom imagerange(v12, #q11, v20)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom imagevisible(v12, #q15, #y8, v19)
           Atom imagerange(v12, #q15, v19)
           Atom conf(v12, #q15)
           Atom ray(#y8)
           Atom above(v12, #o5, v3)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v12, #o5, v8)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #q9, v4)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #q6, #y5, v20)
           Atom imagerange(v14, #q6, v20)
           Atom conf(v14, #q6)
           Atom ray(#y5)
           Atom above(v14, #q13, v3)
           Atom conf(v14, #q13)
           Atom imagevisible(v14, #q4, #y3, v19)
           Atom imagerange(v14, #q4, v19)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom above(v14, #q10, v1)
           Atom conf(v14, #q10)
           Atom above(v14, #q17, v8)
           Atom conf(v14, #q17)
           Atom imagevisible(v14, #q2, #y1, v17)
           Atom imagerange(v14, #q2, v17)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom above(v14, #q12, v5)
           Atom conf(v14, #q12)
           Atom above(v12, #q7, v5)
           Atom conf(v12, #q7)
           Atom above(v12, #o5, v7)
           Atom above(v14, #q14, v7)
           Atom conf(v14, #q14)
           Atom imagevisible(v14, #q5, #y4, v18)
           Atom imagerange(v14, #q5, v18)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom imagevisible(v12, #q16, #y9, v18)
           Atom imagerange(v12, #q16, v18)
           Atom conf(v12, #q16)
           Atom ray(#y9)
           Atom motion(v12, v13, #t15, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v14, #q3, #t9, v15)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v12, #q16, #o2, #q11)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q15, #o2, #q16)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q11, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, v15, #t7, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q14, #t29, #q3)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q5, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q5)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, v15, #t24, #q14)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, v15, #t22, #q12)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q12, #t27, #q3)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v12, v13, #t14, #q8)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q16)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, v15, #t5, #q2)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v14, #q2, #t2, #q3)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q12)
           Atom motion(v14, #q5, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q2)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q17, #t30, #q3)
           Atom motion(v14, #q3, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q17, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q17)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q16)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #t10, #q1)
           Atom motion(v12, #q16, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q3, #t13, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, v15, #t21, #q10)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q17, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q10, #t26, #q3)
           Atom motion(v14, #q10, #o2, #q17)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q17)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, v15, #t6, #q4)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q17, #o2, #q4)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q16)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q1, #t3, #q0)
           Atom motion(v12, #q8, #t16, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q16, #t19, #q0)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t1, v13)
           Atom motion(v12, #q11, #t17, #q0)
           Atom motion(v12, #q15, #t18, #q0)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #t28, #q3)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, v15, #t23, #q13)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, v13, #t11, #q7)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q16, #o2, #q7)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q16)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q7, #t4, #q0)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q17)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q14)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, v15, #t8, #q6)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q17, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q14, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q3, #t12, #q9)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, v15, #t20, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #t25, #q3)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q16, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q16)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v14 #q10 v1 v16))
           ((sample_rock v14 #q12 v5 v16))
           ((sample_rock v14 #q13 v3 v16))
           ((sample_rock v14 #q14 v7 v16))
           ((sample_rock v14 #q17 v8 v16))
           ((sample_rock v14 #q9 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q16))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q16))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t1 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q16))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t3 #q0))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q16))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t17 #q0))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q16))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t18 #q0))
           ((move v12 #q16 #o2 #o5))
           ((move v12 #q16 #o2 #q1))
           ((move v12 #q16 #o2 #q11))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q7))
           ((move v12 #q16 #o2 #q8))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t19 #q0))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q16))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t4 #q0))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q16))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t16 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q1))
           ((move v12 v13 #t11 #q7))
           ((move v12 v13 #t14 #q8))
           ((move v12 v13 #t15 #q11))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q17))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t26 #q3))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t27 #q3))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t28 #q3))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q5))
           ((move v14 #q14 #o2 #q6))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t29 #q3))
           ((move v14 #q17 #o2 #q10))
           ((move v14 #q17 #o2 #q12))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q2))
           ((move v14 #q17 #o2 #q4))
           ((move v14 #q17 #o2 #q5))
           ((move v14 #q17 #o2 #q6))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t30 #q3))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q17))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t2 #q3))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q17))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #t12 #q9))
           ((move v14 #q3 #t13 #q10))
           ((move v14 #q3 #t9 v15))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q17))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q17))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q14))
           ((move v14 #q6 #o2 #q17))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t25 #q3))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t20 #q9))
           ((move v14 v15 #t21 #q10))
           ((move v14 v15 #t22 #q12))
           ((move v14 v15 #t23 #q13))
           ((move v14 v15 #t24 #q14))
           ((move v14 v15 #t5 #q2))
           ((move v14 v15 #t6 #q4))
           ((move v14 v15 #t7 #q5))
           ((move v14 v15 #t8 #q6))
           ((calibrate v12 #q11 #y7 v20 v10))
           ((calibrate v12 #q15 #y8 v19 v10))
           ((calibrate v12 #q16 #y9 v18 v10))
           ((calibrate v12 #q8 #y6 v17 v10))
           ((calibrate v14 #q2 #y1 v17 v10))
           ((calibrate v14 #q4 #y3 v19 v10))
           ((calibrate v14 #q5 #y4 v18 v10))
           ((calibrate v14 #q6 #y5 v20 v10))
           ((take_image v12 #q11 #y7 v20 v10 v11))
           ((take_image v12 #q15 #y8 v19 v10 v11))
           ((take_image v12 #q16 #y9 v18 v10 v11))
           ((take_image v12 #q8 #y6 v17 v10 v11))
           ((take_image v14 #q2 #y1 v17 v10 v11))
           ((take_image v14 #q4 #y3 v19 v10 v11))
           ((take_image v14 #q5 #y4 v18 v10 v11))
           ((take_image v14 #q6 #y5 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a camera (v10), a lander (v9), a storage unit (v16), and several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). The camera supports a particular mode (v11) and is onboard both rovers. Both rovers are initially at specific configurations (v13 and v15, respectively) and have their storage free.
           
           The goal is to satisfy the `new-axiom@0()`, which requires that:
           1. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)` are all true. This means all four objectives must have their images taken and sent back to the lander.
           2. `receivedanalysis(?stone)` for any object of type `v2` (stone). The rocks v1, v3, v4 are of type `v2`.
           3. `receivedanalysis(?soil)` for any object of type `v6` (soil). The rocks v5, v7, v8 are of type `v6`.
           4. `atconf(v12, v13)` and `atconf(v14, v15)` are true, which they are in the initial state.
           5. `free(v12, v16)` and `free(v14, v16)` are true, which they are in the initial state.
           
           To achieve the goal, the rovers need to:
           1. Calibrate the camera, take images of the objectives, and send them to the lander.
           2. Sample the rocks and send their analysis to the lander.
           
           I will attempt to use rover v14 for all image tasks and rover v12 for all analysis tasks to minimize movement and make the plan more efficient.
           
           **Image Tasks for Rover v14:**
           * Calibrate camera v10 for objective v17 at configuration #q2 and ray #y1.
           * Take image of v17.
           * Calibrate camera v10 for objective v19 at configuration #q4 and ray #y3.
           * Take image of v19.
           * Calibrate camera v10 for objective v18 at configuration #q5 and ray #y4.
           * Take image of v18.
           * Calibrate camera v10 for objective v20 at configuration #q6 and ray #y5.
           * Take image of v20.
           * Send all images. This will require moving to a configuration where comvisible is true, which is #q3 for rover v14.
           
           **Analysis Tasks for Rover v12:**
           * Sample all rocks: v1, v3, v4, v5, v7, v8. This will fill the store v16.
           * Send analysis for all sampled rocks. This will require moving to a configuration where comvisible is true, which is #q0 for rover v12.
           * Since v12 can only sample 1 rock at a time (as it fills the store and it only has one store), it needs to sample a rock, send its analysis, and then drop the rock to free the store before sampling the next one. This will be repeated for all 6 rocks.
           
           Let's refine the analysis plan for v12. It has one store (v16). Once a rock is sampled, the store becomes full. To sample another rock, the first rock must be dropped. However, the goal only requires `receivedanalysis(?r)`, not that the rocks remain stored. Thus, the rover can sample, send analysis, drop, and repeat.
           
           **Detailed Analysis Plan for v12:**
           1. Sample v1. (at #q1)
           2. Move to a communication configuration #q0.
           3. Send analysis for v1.
           4. Drop v1.
           5. Move back to a rock sampling configuration. Need to pick a rock. Let's say v3 at #o5.
           6. Sample v3.
           7. Move to #q0.
           8. Send analysis for v3.
           9. Drop v3.
           ... and so on for all 6 rocks.
           
           Let's prioritize completing all image tasks first with rover v14 and then all analysis tasks with rover v12.
           
           **Rover v14 Plan (Images):**
           * Rover v14 is at v15.
           * Move to #q2 to image v17.
           * Calibrate for v17.
           * Take image of v17.
           * Move to #q4 to image v19.
           * Calibrate for v19.
           * Take image of v19.
           * Move to #q5 to image v18.
           * Calibrate for v18.
           * Take image of v18.
           * Move to #q6 to image v20.
           * Calibrate for v20.
           * Take image of v20.
           * Move to #q3 for communication.
           * Send images for v17, v18, v19, v20.
           
           **Rover v12 Plan (Analysis):**
           * Rover v12 is at v13.
           * For rock v1 (type v2, stone):
               * Move to #q1.
               * Sample v1.
               * Move to #q0.
               * Send analysis for v1.
               * Drop v1.
           * For rock v3 (type v2, stone):
               * Move to #o5.
               * Sample v3.
               * Move to #q0.
               * Send analysis for v3.
               * Drop v3.
           * For rock v4 (type v2, stone):
               * Move to #o5. (assuming #o5 is also above v4) - yes, it is.
               * Sample v4.
               * Move to #q0.
               * Send analysis for v4.
               * Drop v4.
           * For rock v5 (type v6, soil):
               * Move to #q7.
               * Sample v5.
               * Move to #q0.
               * Send analysis for v5.
               * Drop v5.
           * For rock v7 (type v6, soil):
               * Move to #o5. (assuming #o5 is also above v7) - yes, it is.
               * Sample v7.
               * Move to #q0.
               * Send analysis for v7.
               * Drop v7.
           * For rock v8 (type v6, soil):
               * Move to #o5. (assuming #o5 is also above v8) - yes, it is.
               * Sample v8.
               * Move to #q0.
               * Send analysis for v8.
               * Drop v8.
           
           This strategy ensures both parts of the goal are met.
           
           --Plan--:
           (move v14 v15 #t5 #q2)
           (calibrate v14 #q2 #y1 v17 v10)
           (take_image v14 #q2 #y1 v17 v10 v11)
           (move v14 #q2 #o2 #q4)
           (calibrate v14 #q4 #y3 v19 v10)
           (take_image v14 #q4 #y3 v19 v10 v11)
           (move v14 #q4 #o2 #q5)
           (calibrate v14 #q5 #y4 v18 v10)
           (take_image v14 #q5 #y4 v18 v10 v11)
           (move v14 #q5 #o2 #q6)
           (calibrate v14 #q6 #y5 v20 v10)
           (take_image v14 #q6 #y5 v20 v10 v11)
           (move v14 #q6 #o2 #q3)
           (send_image v14 #q3 #y2 v9 v17 v11)
           (send_image v14 #q3 #y2 v9 v19 v11)
           (send_image v14 #q3 #y2 v9 v18 v11)
           (send_image v14 #q3 #y2 v9 v20 v11)
           (move v12 v13 #t10 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t3 #q0)
           (send_analysis v12 #q0 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #q7)
           (sample_rock v12 #q7 v5 v16)
           (move v12 #q7 #t4 #q0)
           (send_analysis v12 #q0 #y0 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #o5)
           (sample_rock v12 #o5 v7 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #o5)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v8)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. This goal is an axiom that bundles multiple subgoals:
           1. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`
           2. `receivedanalysis(?stone)` for rocks of type `v2` (v1, v3, v4)
           3. `receivedanalysis(?soil)` for rocks of type `v6` (v5, v7, v8)
           4. `atconf(v12, v13)` and `atconf(v14, v15)`
           5. `free(v12, v16)` and `free(v14, v16)`
           
           My previous plan should have achieved all these subgoals. Let's re-examine the plan and ensure each action is valid and contributes to the goal.
           
           The current initial state ensures:
           * `atconf(v12, v13)`
           * `atconf(v14, v15)`
           * `free(v12, v16)`
           * `free(v14, v16)`
           
           So, the plan needs to focus on:
           * Imaging and sending all four objectives (v17, v18, v19, v20).
           * Sampling and sending analysis for all six rocks (v1, v3, v4, v5, v7, v8).
           
           I will use rover v14 to handle all image tasks and rover v12 to handle all analysis tasks. This division of labor should be efficient.
           
           **Rover v14 (Images):**
           The rover v14 starts at v15. It needs to move to appropriate configurations, calibrate the camera, take images, and then move to a communication configuration to send the images.
           1. **v17:** at #q2.
              * `move v14 v15 #t5 #q2`
              * `calibrate v14 #q2 #y1 v17 v10` (requires `imagevisible`, `onboard`, `atconf`, `not blocked`, all seem to be satisfied)
              * `take_image v14 #q2 #y1 v17 v10 v11` (requires `haveimage` not already existing, `calibrated`)
           2. **v19:** at #q4.
              * `move v14 #q2 #o2 #q4`
              * `calibrate v14 #q4 #y3 v19 v10`
              * `take_image v14 #q4 #y3 v19 v10 v11`
           3. **v18:** at #q5.
              * `move v14 #q4 #o2 #q5`
              * `calibrate v14 #q5 #y4 v18 v10`
              * `take_image v14 #q5 #y4 v18 v10 v11`
           4. **v20:** at #q6.
              * `move v14 #q5 #o2 #q6`
              * `calibrate v14 #q6 #y5 v20 v10`
              * `take_image v14 #q6 #y5 v20 v10 v11`
           5. **Send Images:** to #q3 (comvisible).
              * `move v14 #q6 #o2 #q3`
              * `send_image v14 #q3 #y2 v9 v17 v11`
              * `send_image v14 #q3 #y2 v9 v19 v11`
              * `send_image v14 #q3 #y2 v9 v18 v11`
              * `send_image v14 #q3 #y2 v9 v20 v11`
           
           This sequence for v14 appears correct and should achieve the `receivedimage` predicates. The camera needs to be recalibrated for each image.
           
           **Rover v12 (Analysis):**
           The rover v12 starts at v13. It has one store `v16`. It needs to sample each rock, send the analysis, and then drop the rock to free the store for the next sample. It needs to move to configurations where it is `above` the rocks. The communication configuration for v12 is #q0.
           
           1. **v1 (stone):** above at #q1.
              * `move v12 v13 #t10 #q1`
              * `sample_rock v12 #q1 v1 v16`
              * `move v12 #q1 #t3 #q0` (move to coms config)
              * `send_analysis v12 #q0 #y0 v9 v1`
              * `drop_rock v12 v16`
           2. **v3 (stone):** above at #o5.
              * `move v12 #q0 #o2 #o5` (move from coms config to rock config)
              * `sample_rock v12 #o5 v3 v16`
              * `move v12 #o5 #o2 #q0`
              * `send_analysis v12 #q0 #y0 v9 v3`
              * `drop_rock v12 v16`
           3. **v4 (stone):** above at #o5.
              * `move v12 #q0 #o2 #o5`
              * `sample_rock v12 #o5 v4 v16`
              * `move v12 #o5 #o2 #q0`
              * `send_analysis v12 #q0 #y0 v9 v4`
              * `drop_rock v12 v16`
           4. **v5 (soil):** above at #q7.
              * `move v12 #q0 #o2 #q7`
              * `sample_rock v12 #q7 v5 v16`
              * `move v12 #q7 #t4 #q0`
              * `send_analysis v12 #q0 #y0 v9 v5`
              * `drop_rock v12 v16`
           5. **v7 (soil):** above at #o5.
              * `move v12 #q0 #o2 #o5`
              * `sample_rock v12 #o5 v7 v16`
              * `move v12 #o5 #o2 #q0`
              * `send_analysis v12 #q0 #y0 v9 v7`
              * `drop_rock v12 v16`
           6. **v8 (soil):** above at #o5.
              * `move v12 #q0 #o2 #o5`
              * `sample_rock v12 #o5 v8 v16`
              * `move v12 #o5 #o2 #q0`
              * `send_analysis v12 #q0 #y0 v9 v8`
              * `drop_rock v12 v16`
           
           This plan addresses all subgoals. The previous plan logic seems to be identical to this one. The error message `Fact is not satisfied: Atom new-axiom@0()` means that one or more of the predicates composing the axiom `new-axiom@0()` were not true at the end. I will check the available actions carefully, especially for the `move` actions and the parameters used. All listed moves are valid. The sequence is logical. I will resubmit the same plan after careful re-verification of the actions and their parameters against the provided list.
           
           One potential issue could be if one of the `above` or `imagevisible` preconditions for a specific continuous parameter (e.g., #o5) is not true when the robot tries to `sample_rock` or `take_image` there, even if it was true in the initial state or at a prior configuration. However, the action instances provided are exactly those that satisfy these preconditions, so as long as I use the exact instances, it should be fine. The problem statement says "Any action instance that is not in the given list is not allowed to be used in the plan." and my plan only uses actions from the list.
           
           It is possible that the axiom also implicitly checks for the rovers to be in their initial configuration AND for the stores to be free at the end. My plan correctly ends with both `atconf(v12, v13)` (or whatever final pose v12 happens to be in, but the axiom requires v13) and `atconf(v14, v15)` (similarly for v14) and `free(v12, v16)` and `free(v14, v16)`. Since the rovers `drop_rock` after each analysis, their stores will be free. However, the rovers are left in the communication configurations (`#q0` for v12 and `#q3` for v14) at the end of the current plan, not their initial configurations (v13 and v15). This is a crucial detail that my previous plan might have missed, if `atconf(v12, v13)` and `atconf(v14, v15)` are required *at the end*. If this is the case, I need to add two more move actions to get them back to their initial configurations.
           
           Let's assume the final configurations (`atconf(v12, v13)` and `atconf(v14, v15)`) are indeed required for the goal `new-axiom@0()`. This is a common pattern in PDDL goals.
           
           **Revised Rover v14 Plan (Images):**
           ... (same as before) ...
           * Send images for v17, v18, v19, v20.
           * `move v14 #q3 #t9 v15` (Move v14 back to v15)
           
           **Revised Rover v12 Plan (Analysis):**
           ... (same as before) ...
           * Send analysis for v8.
           * Drop v8.
           * `move v12 #q0 #t1 v13` (Move v12 back to v13)
           
           This modification should ensure the rovers are in their initial `atconf` positions at the end.
           
           --Plan--:
           (move v14 v15 #t5 #q2)
           (calibrate v14 #q2 #y1 v17 v10)
           (take_image v14 #q2 #y1 v17 v10 v11)
           (move v14 #q2 #o2 #q4)
           (calibrate v14 #q4 #y3 v19 v10)
           (take_image v14 #q4 #y3 v19 v10 v11)
           (move v14 #q4 #o2 #q5)
           (calibrate v14 #q5 #y4 v18 v10)
           (take_image v14 #q5 #y4 v18 v10 v11)
           (move v14 #q5 #o2 #q6)
           (calibrate v14 #q6 #y5 v20 v10)
           (take_image v14 #q6 #y5 v20 v10 v11)
           (move v14 #q6 #o2 #q3)
           (send_image v14 #q3 #y2 v9 v17 v11)
           (send_image v14 #q3 #y2 v9 v19 v11)
           (send_image v14 #q3 #y2 v9 v18 v11)
           (send_image v14 #q3 #y2 v9 v20 v11)
           (move v14 #q3 #t9 v15)
           (move v12 v13 #t10 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t3 #q0)
           (send_analysis v12 #q0 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #q7)
           (sample_rock v12 #q7 v5 v16)
           (move v12 #q7 #t4 #q0)
           (send_analysis v12 #q0 #y0 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #o5)
           (sample_rock v12 #o5 v7 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #o5)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q0 #t1 v13)

