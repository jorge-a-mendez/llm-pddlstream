User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v4, v2)
           Atom type(v8, v6)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom type(v1, v2)
           Atom mode(v11)
           Atom rock(v8)
           Atom rock(v1)
           Atom camera(v10)
           Atom conf(v14, v15)
           Atom rover(v12)
           Atom atconf(v14, v15)
           Atom rock(v7)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom type(v5, v6)
           Atom rock(v5)
           Atom type(v7, v6)
           Atom rock(v3)
           Atom onboard(v10, v14)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom atconf(v12, v13)
           Atom free(v12, v16)
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom lander(v9)
           Atom rock(v4)
           Atom objective(v19)
           Atom rover(v14)
           Atom imagevisible(v14, #q1, #y0, v19)
           Atom imagerange(v14, #q1, v19)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #q4, #y3, v18)
           Atom imagerange(v14, #q4, v18)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v12, #q9, #y7, v19)
           Atom imagerange(v12, #q9, v19)
           Atom conf(v12, #q9)
           Atom ray(#y7)
           Atom imagevisible(v12, #q7, #y5, v18)
           Atom imagerange(v12, #q7, v18)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #q5, v4)
           Atom conf(v12, #q5)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #q0, v7)
           Atom conf(v12, #q0)
           Atom imagevisible(v12, #q8, #y6, v17)
           Atom imagerange(v12, #q8, v17)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q10, v3)
           Atom conf(v12, #q10)
           Atom above(v14, #o5, v1)
           Atom above(v12, #q11, v1)
           Atom conf(v12, #q11)
           Atom above(v12, #q12, v5)
           Atom conf(v12, #q12)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q13, v8)
           Atom conf(v12, #q13)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #t29, #q13)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v14, v15, #t1, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q1, #t31, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v12, #q0, #t2, #q3)
           Atom motion(v12, #q3, #t7, #q0)
           Atom motion(v12, #q13, #t32, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #t3, v13)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #t21, #q12)
           Atom motion(v12, #q3, #t22, #q13)
           Atom motion(v12, #q0, #t11, #q5)
           Atom motion(v12, #q5, #t33, #q13)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #t12, #q3)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q13, #t26, #q5)
           Atom motion(v12, v13, #t34, #q5)
           Atom motion(v12, #q3, #t16, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q8, #t10, #q3)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #t35, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q7, #t9, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, v13, #t8, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q3, #t19, #q10)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q10, #t17, #q3)
           Atom motion(v12, #q0, #t28, #q10)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #t13, #q10)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q10, #t27, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #t18, #q3)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q3, #t20, #q11)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, v13, #t14, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #t25, #q12)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v14, #q2, #t23, #q4)
           Atom motion(v14, #q4, #t5, #q2)
           Atom motion(v14, #q2, #t6, v15)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q1, #t4, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q4, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v7 v16))
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q11 v1 v16))
           ((sample_rock v12 #q12 v5 v16))
           ((sample_rock v12 #q13 v8 v16))
           ((sample_rock v12 #q5 v4 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t11 #q5))
           ((move v12 #q0 #t2 #q3))
           ((move v12 #q0 #t28 #q10))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t17 #q3))
           ((move v12 #q10 #t27 #q11))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t18 #q3))
           ((move v12 #q11 #t25 #q12))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t29 #q13))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t26 #q5))
           ((move v12 #q13 #t32 #q3))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #t16 #q5))
           ((move v12 #q3 #t19 #q10))
           ((move v12 #q3 #t20 #q11))
           ((move v12 #q3 #t21 #q12))
           ((move v12 #q3 #t22 #q13))
           ((move v12 #q3 #t3 v13))
           ((move v12 #q3 #t7 #q0))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t12 #q3))
           ((move v12 #q5 #t33 #q13))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t9 #q3))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t10 #q3))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t13 #q10))
           ((move v12 v13 #t14 #q11))
           ((move v12 v13 #t34 #q5))
           ((move v12 v13 #t35 #q8))
           ((move v12 v13 #t8 #q7))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t31 #q4))
           ((move v14 #q1 #t4 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #t23 #q4))
           ((move v14 #q2 #t6 v15))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t5 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q1))
           ((calibrate v12 #q7 #y5 v18 v10))
           ((calibrate v12 #q8 #y6 v17 v10))
           ((calibrate v12 #q9 #y7 v19 v10))
           ((calibrate v14 #q1 #y0 v19 v10))
           ((calibrate v14 #q4 #y3 v18 v10))
           ((take_image v12 #q7 #y5 v18 v10 v11))
           ((take_image v12 #q8 #y6 v17 v10 v11))
           ((take_image v12 #q9 #y7 v19 v10 v11))
           ((take_image v14 #q1 #y0 v19 v10 v11))
           ((take_image v14 #q4 #y3 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q2 #y1 v9 v19 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Path to New Knowledge**
           
           Alright, let's break this down. The objective is to achieve `new-axiom@0()`, a pretty specific goal in this *rovers* domain.  I can see that it essentially boils down to gathering and transmitting information: images of three objectives (`v17`, `v18`, `v19`) and analyses of two types of materials – stone and soil.  We need to send those images and analyses back to the lander (`v9`).
           
           First, it's clear we have some initial conditions met, like the rovers being at certain initial configurations. So, we have two rovers: `v12` and `v14`.  I'm thinking, let's divide and conquer. Rover `v12` will take on image-related tasks, and `v14` will tackle the analyses.
           
           Now, for those images. I've mapped out the *imagevisible* and *comvisible* relationships – essentially, where each rover can "see" each objective and where each rover can communicate.  It looks like both rovers can image and communicate, and they both have access to all the objectives, which gives us some flexibility.
           
           Rover `v12` is best positioned to gather all the images. I'll need to move it to the right positions, calibrate its camera (`v10`) for each objective, take the image using mode `v11`, and then transmit them. `v12` also has the communication configuration, which is convenient.
           
           For the analyses, I need to get `v14` to the correct rocks: a stone (type `v2`, like `v4`) and soil (type `v6`, like `v8`). Then I'll sample, get the analysis, and send it back to the lander. The store needs to be free for both rovers when the goal is met.
           
           The sequence looks something like this (in parallel):
           
           *   **v12:**
               1.  Move to and sample soil (v8) then send the results and drop the soil.
               2.  Move, Calibrate, and Capture and Send images from the three objectives.
               3.  Return to its initial configuration.
           *   **v14:**
               1.  Move to and sample stone (v4) then send the results and drop the stone.
               2.  Return to its initial configuration.
           
           Looks like a good plan! Now, just execute... and we will reach the goal state!
           
)

Model:     **The Path to New Knowledge**
           
           Alright, let's break this down. The objective is to achieve `new-axiom@0()`, a pretty specific goal in this *rovers* domain.  I can see that it essentially boils down to gathering and transmitting information: images of three objectives (`v17`, `v18`, `v19`) and analyses of two types of materials – stone and soil.  We need to send those images and analyses back to the lander (`v9`).
           
           First, it's clear we have some initial conditions met, like the rovers being at certain initial configurations. So, we have two rovers: `v12` and `v14`.  I'm thinking, let's divide and conquer. Rover `v12` will take on image-related tasks, and `v14` will tackle the analyses.
           
           Now, for those images. I've mapped out the *imagevisible* and *comvisible* relationships – essentially, where each rover can "see" each objective and where each rover can communicate.  It looks like both rovers can image and communicate, and they both have access to all the objectives, which gives us some flexibility.
           
           Rover `v12` is best positioned to gather all the images. I'll need to move it to the right positions, calibrate its camera (`v10`) for each objective, take the image using mode `v11`, and then transmit them. `v12` also has the communication configuration, which is convenient.
           
           For the analyses, I need to get `v14` to the correct rocks: a stone (type `v2`, like `v4`) and soil (type `v6`, like `v8`). Then I'll sample, get the analysis, and send it back to the lander. The store needs to be free for both rovers when the goal is met.
           
           The sequence looks something like this (in parallel):
           
           *   **v12:**
               1.  Move to and sample soil (v8) then send the results and drop the soil.
               2.  Move, Calibrate, and Capture and Send images from the three objectives.
               3.  Return to its initial configuration.
           *   **v14:**
               1.  Move to and sample stone (v4) then send the results and drop the stone.
               2.  Return to its initial configuration.
           
           Looks like a good plan! Now, just execute... and we will reach the goal state!
           

