User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom rock(v3)
           Atom type(v4, v2)
           Atom objective(v20)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom type(v7, v6)
           Atom free(v14, v16)
           Atom store(v16)
           Atom conf(v12, v13)
           Atom type(v1, v2)
           Atom lander(v9)
           Atom supports(v10, v11)
           Atom type(v5, v6)
           Atom type(v8, v6)
           Atom rover(v14)
           Atom objective(v17)
           Atom camera(v10)
           Atom rock(v8)
           Atom onboard(v10, v14)
           Atom rock(v5)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom onboard(v10, v12)
           Atom free(v12, v16)
           Atom rock(v7)
           Atom objective(v19)
           Atom rock(v4)
           Atom rover(v12)
           Atom mode(v11)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q8, v4)
           Atom conf(v12, #q8)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom above(v12, #q9, v7)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q0, #y0, v19)
           Atom imagerange(v12, #q0, v19)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q7, #y5, v20)
           Atom imagerange(v12, #q7, v20)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q13, v1)
           Atom conf(v12, #q13)
           Atom imagevisible(v12, #q3, #y3, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y3)
           Atom above(v12, #q15, v5)
           Atom conf(v12, #q15)
           Atom above(v12, #q14, v8)
           Atom conf(v12, #q14)
           Atom above(v12, #q6, v3)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q4, #y4, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y4)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q10, #y6, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y6)
           Atom above(v14, #o5, v4)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #q11, #y7, v20)
           Atom imagerange(v14, #q11, v20)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom imagevisible(v14, #q12, #y8, v18)
           Atom imagerange(v14, #q12, v18)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v1)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t0, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #t32, #q12)
           Atom motion(v12, #q2, #t10, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #t15, #q2)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, v15, #t20, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q8, #t34, #q9)
           Atom motion(v12, #q2, #t25, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #t16, #q2)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #t11, #q2)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #t30, #q8)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v14, #q1, #t21, #q11)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t6, v15)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q11, #t26, #q1)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q13, #t37, #q8)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q2, #t35, #q13)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v14, #q10, #t27, #q1)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, v15, #t19, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q12, #t33, #q10)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #t2, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q3, #t29, #q2)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q2, #t24, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #t39, #q8)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v14, #q11, #t18, #q5)
           Atom motion(v14, #q5, #t4, #q1)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, v15, #t3, #q5)
           Atom motion(v14, #q10, #t17, #q5)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q14, #t38, #q8)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q3, #t12, #q4)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q4, #t14, #q7)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q2, #t28, #q0)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, v13, #t1, #q0)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q0, #t22, #q2)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q0, #t31, #q7)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q0, #t13, #q3)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q0, #t7, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q4, #t9, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q6, #t5, #q2)
           Atom motion(v12, #q3, #t8, #q6)
           Atom motion(v12, #q6, #t36, v13)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, v13, #t23, #q6)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q9, #t40, #q6)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q5)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #q5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q13 v1 v16))
           ((sample_rock v12 #q14 v8 v16))
           ((sample_rock v12 #q15 v5 v16))
           ((sample_rock v12 #q6 v3 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t13 #q3))
           ((move v12 #q0 #t22 #q2))
           ((move v12 #q0 #t31 #q7))
           ((move v12 #q0 #t7 #q6))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t37 #q8))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t38 #q8))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 #q9))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t39 #q8))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #t0 v13))
           ((move v12 #q2 #t10 #q8))
           ((move v12 #q2 #t24 #q3))
           ((move v12 #q2 #t25 #q9))
           ((move v12 #q2 #t28 #q0))
           ((move v12 #q2 #t35 #q13))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t12 #q4))
           ((move v12 #q3 #t29 #q2))
           ((move v12 #q3 #t8 #q6))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t14 #q7))
           ((move v12 #q4 #t9 #q6))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #t36 v13))
           ((move v12 #q6 #t5 #q2))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t11 #q2))
           ((move v12 #q7 #t30 #q8))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t15 #q2))
           ((move v12 #q8 #t34 #q9))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q15))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t16 #q2))
           ((move v12 #q9 #t40 #q6))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q0))
           ((move v12 v13 #t2 #q3))
           ((move v12 v13 #t23 #q6))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #t21 #q11))
           ((move v14 #q1 #t6 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t17 #q5))
           ((move v14 #q10 #t27 #q1))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t18 #q5))
           ((move v14 #q11 #t26 #q1))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t33 #q10))
           ((move v14 #q5 #o2 #o3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t4 #q1))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t19 #q10))
           ((move v14 v15 #t20 #q11))
           ((move v14 v15 #t3 #q5))
           ((move v14 v15 #t32 #q12))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q3 #y3 v18 v10))
           ((calibrate v12 #q4 #y4 v17 v10))
           ((calibrate v12 #q7 #y5 v20 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #q10 #y6 v17 v10))
           ((calibrate v14 #q11 #y7 v20 v10))
           ((calibrate v14 #q12 #y8 v18 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q3 #y3 v18 v10 v11))
           ((take_image v12 #q4 #y4 v17 v10 v11))
           ((take_image v12 #q7 #y5 v20 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #q10 #y6 v17 v10 v11))
           ((take_image v14 #q11 #y7 v20 v10 v11))
           ((take_image v14 #q12 #y8 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. Both rovers have a camera `v10` onboard which supports mode `v11`. There is a store `v16` which is free for both rovers. There are several objectives (v17, v18, v19, v20) and rocks (v1, v3, v4, v5, v7, v8). Some rocks are of type `v2` (v1, v3, v4) and some of type `v6` (v5, v7, v8).
           
           The goal is `new-axiom@0()`, which means we need to satisfy several conditions:
           1. `atconf(v12, v13)`
           2. `atconf(v14, v15)`
           3. `free(v12, v16)`
           4. `free(v14, v16)`
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `type(?stone, v2)` and `receivedanalysis(?stone)` for a rock of type `v2`.
           10. `type(?soil, v6)` and `receivedanalysis(?soil)` for a rock of type `v6`.
           
           From the initial state:
           - Conditions 1, 2, 3, 4 are already true.
           - We need to receive images for all objectives (v17, v18, v19, v20). This involves `calibrate`, `take_image`, and `send_image` actions.
           - We need to analyze one rock of type `v2` (e.g., v1, v3, or v4) and one rock of type `v6` (e.g., v5, v7, or v8). This involves `sample_rock` and `send_analysis` actions.
           
           Let's break down the image reception:
           - For v17:
               - Rover v12 can take image from #q4 with #y4.
               - Rover v14 can take image from #q10 with #y6.
           - For v18:
               - Rover v12 can take image from #q3 with #y3.
               - Rover v14 can take image from #q12 with #y8.
           - For v19:
               - Rover v12 can take image from #q0 with #y0.
               - Rover v14 can take image from #o3 with #o4.
           - For v20:
               - Rover v12 can take image from #q7 with #y5.
               - Rover v14 can take image from #q11 with #y7.
           
           All rovers are initially at their `v13` or `v15` configurations, but need to move to the image-taking configurations. Then calibrate, take image and send.
           All `send_image` actions require the rover to be at a `comvisible` configuration. Rover `v12` is comvisible at `#q2` with `#y2` to `v9`, and Rover `v14` is comvisible at `#q1` with `#y1` to `v9`.
           
           For rock analysis:
           - Rocks of type v2: v1, v3, v4.
           - Rocks of type v6: v5, v7, v8.
           - Rover v12 can sample v1 at #q13, v3 at #q6, v4 at #q8, v5 at #q15, v7 at #q9, v8 at #q14.
           - Rover v14 can sample v1, v3, v4, v7, v8 at #o5, and v5 at #q5.
           - We need to pick one rock of type v2 and one of type v6, sample them, and send analysis. Since the store `v16` is free for both rovers, we can sample one rock with `v12` and another with `v14` or both with one rover if they are at the same location.
           
           Let's plan for rover `v12` to handle one of each type of rock analysis and some images, and `v14` to handle the remaining images.
           
           Rover `v12` is at `v13`.
           - Take image of v19 (at #q0), v18 (at #q3), v17 (at #q4), v20 (at #q7).
           - Sample rock v4 (type v2) at #q8.
           - Sample rock v7 (type v6) at #q9.
           - Send all data from #q2.
           
           Rover `v14` is at `v15`.
           - Take image of v17 (at #q10), v20 (at #q11), v18 (at #q12), v19 (at #o3).
           - Send all data from #q1.
           
           Since the goal requires `receivedanalysis` for both types, we need to make sure we sample and send for both. Let's say v12 samples v4 (type v2) and v7 (type v6).
           
           Let's consider the initial positions and movements.
           `v12` starts at `v13`.
           `v14` starts at `v15`.
           
           Plan:
           1. `v12` moves to `#q8` to sample `v4` (type v2).
           2. `v12` samples `v4`.
           3. `v12` moves to `#q9` to sample `v7` (type v6).
           4. `v12` samples `v7`.
           5. `v12` moves to `#q0` to take image of `v19`. Calibrate first, then take image.
           6. `v12` moves to `#q3` to take image of `v18`. Calibrate first, then take image.
           7. `v12` moves to `#q4` to take image of `v17`. Calibrate first, then take image.
           8. `v12` moves to `#q7` to take image of `v20`. Calibrate first, then take image.
           9. `v12` moves to `#q2` to send all gathered data.
           
           Since `v12` is taking all the images, we just need to send them.
           However, it's more efficient to use both rovers if possible for images. But all targets are visible to `v12` or `v14` from various positions.
           Let's try to minimize movement and make sure all preconditions are met.
           
           Let Rover `v12` handle analysis and Rover `v14` handle image gathering. This will make the plan clear.
           
           Rover `v12` (at `v13`):
           - Samples `v4` (type `v2`) at `#q8`.
           - Samples `v7` (type `v6`) at `#q9`.
           - Moves to `#q2` and sends analysis for `v4` and `v7`.
           
           Rover `v14` (at `v15`):
           - Calibrates camera and takes image for `v17` at `#q10`.
           - Calibrates camera and takes image for `v20` at `#q11`.
           - Calibrates camera and takes image for `v18` at `#q12`.
           - Calibrates camera and takes image for `v19` at `#o3`.
           - Moves to `#q1` and sends all images.
           
           This fulfills all goal conditions.
           
           --Plan--:
           (move v12 v13 #o2 #q8)
           (sample_rock v12 #q8 v4 v16)
           (move v12 #q8 #t34 #q9)
           (sample_rock v12 #q9 v7 v16)
           (move v12 #q9 #t16 #q2)
           (send_analysis v12 #q2 #y2 v9 v4)
           (send_analysis v12 #q2 #y2 v9 v7)
           (calibrate v14 #q10 #y6 v17 v10)
           (take_image v14 #q10 #y6 v17 v10 v11)
           (move v14 #q10 #o2 #q11)
           (calibrate v14 #q11 #y7 v20 v10)
           (take_image v14 #q11 #y7 v20 v10 v11)
           (move v14 #q11 #o2 #q12)
           (calibrate v14 #q12 #y8 v18 v10)
           (take_image v14 #q12 #y8 v18 v10 v11)
           (move v14 #q12 #o2 #o3)
           (calibrate v14 #o3 #o4 v19 v10)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (move v14 #o3 #o2 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies, I misunderstood the output of `new-axiom@0()`. It is not a predicate that can be directly achieved, but rather an axiom that becomes true when all of its conjunctive components are satisfied. My previous plan did not explicitly list out all the steps to achieve the axiom components in the final state.
           
           Let's re-evaluate the goal and ensure all components are explicitly achieved.
           
           The goal `new-axiom@0()` is true if:
           1. `atconf(v12, v13)`: Rover `v12` must be at configuration `v13`.
           2. `atconf(v14, v15)`: Rover `v14` must be at configuration `v15`.
           3. `free(v12, v16)`: Rover `v12` must have its store `v16` free.
           4. `free(v14, v16)`: Rover `v14` must have its store `v16` free.
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `type(?stone, v2)` AND `receivedanalysis(?stone)` for some rock of type `v2`.
           10. `type(?soil, v6)` AND `receivedanalysis(?soil)` for some rock of type `v6`.
           
           Initial state:
           - `atconf(v12, v13)` is true.
           - `atconf(v14, v15)` is true.
           - `free(v12, v16)` is true.
           - `free(v14, v16)` is true.
           
           This means that if we move the rovers away from their initial configurations to perform actions, we must ensure they return to `v13` and `v15` respectively, and if they sample rocks, they must drop them to make their stores free again.
           
           Let's outline a new strategy:
           Rover `v12` will take care of all rock analyses and then return to `v13`.
           Rover `v14` will take care of all image capturing and sending, then return to `v15`.
           
           **Rover v12 Actions (for analysis):**
           1. Move `v12` to `#q8` (where `v4` of type `v2` is above).
           2. Sample `v4`. `v12` will now have `full(v12, v16)` and `analyzed(v12, v4)`.
           3. Move `v12` to `#q9` (where `v7` of type `v6` is above).
           4. Sample `v7`. `v12` will still have `full(v12, v16)` (since the store can hold only one, this implies we need to drop the first one). Let's assume store `v16` is a general store and it can hold multiple samples or the problem implies we can sample sequentially. The `sample_rock` action adds `full(v, s)` and `analyzed(v, r)` and removes `free(v, s)`. To sample another rock, `free(v, s)` needs to be true. So we need to drop the rock.
           Okay, let's re-read the `sample_rock` and `drop_rock` actions. `sample_rock` adds `full(v,s)` and `analyzed(v,r)`, and removes `free(v,s)`. `drop_rock` adds `free(v,s)` and removes `full(v,s)`. This means to sample a second rock, the first rock must be dropped.
           
           Corrected Rover `v12` Actions (for analysis):
           1. Move `v12` from `v13` to `#q8`.
           2. Sample `v4` (type `v2`).
           3. Move `v12` from `#q8` to `#q2` (comms location for `v12`).
           4. Send analysis for `v4`.
           5. Drop `v4` (to free up `v16`).
           6. Move `v12` from `#q2` to `#q9`.
           7. Sample `v7` (type `v6`).
           8. Move `v12` from `#q9` to `#q2`.
           9. Send analysis for `v7`.
           10. Drop `v7`.
           11. Move `v12` from `#q2` back to `v13`.
           
           **Rover v14 Actions (for images):**
           1. Calibrate camera for `v17` at `#q10`.
           2. Take image for `v17` at `#q10`.
           3. Move `v14` to `#q11`.
           4. Calibrate camera for `v20` at `#q11`.
           5. Take image for `v20` at `#q11`.
           6. Move `v14` to `#q12`.
           7. Calibrate camera for `v18` at `#q12`.
           8. Take image for `v18` at `#q12`.
           9. Move `v14` to `#o3`.
           10. Calibrate camera for `v19` at `#o3`.
           11. Take image for `v19` at `#o3`.
           12. Move `v14` to `#q1` (comms location for `v14`).
           13. Send images for `v17`, `v20`, `v18`, `v19`.
           14. Move `v14` from `#q1` back to `v15`.
           
           This plan ensures all goal conditions related to state (`atconf`, `free`) and derived facts (`receivedimage`, `receivedanalysis`) are met.
           
           --Plan--:
           (move v12 v13 #o2 #q8)
           (sample_rock v12 #q8 v4 v16)
           (move v12 #q8 #t15 #q2)
           (send_analysis v12 #q2 #y2 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #t25 #q9)
           (sample_rock v12 #q9 v7 v16)
           (move v12 #q9 #t16 #q2)
           (send_analysis v12 #q2 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q2 #t0 v13)
           (calibrate v14 #q10 #y6 v17 v10)
           (take_image v14 #q10 #y6 v17 v10 v11)
           (move v14 #q10 #o2 #q11)
           (calibrate v14 #q11 #y7 v20 v10)
           (take_image v14 #q11 #y7 v20 v10 v11)
           (move v14 #q11 #o2 #q12)
           (calibrate v14 #q12 #y8 v18 v10)
           (take_image v14 #q12 #y8 v18 v10 v11)
           (move v14 #q12 #o2 #o3)
           (calibrate v14 #o3 #o4 v19 v10)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (move v14 #o3 #o2 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (move v14 #q1 #t6 v15)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v14, #q10) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies again. I missed an essential `move` action for `v14` to the initial image-taking configuration. I assumed `v14` started at `#q10` or a similar configuration which is incorrect, `v14` starts at `v15`.
           
           Let's re-evaluate the plan, focusing on every single precondition.
           
           The goal `new-axiom@0()` is true if:
           1. `atconf(v12, v13)`: Rover `v12` must be at configuration `v13`. (Initial: True)
           2. `atconf(v14, v15)`: Rover `v14` must be at configuration `v15`. (Initial: True)
           3. `free(v12, v16)`: Rover `v12` must have its store `v16` free. (Initial: True)
           4. `free(v14, v16)`: Rover `v14` must have its store `v16` free. (Initial: True)
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `type(?stone, v2)` AND `receivedanalysis(?stone)` for some rock of type `v2`.
           10. `type(?soil, v6)` AND `receivedanalysis(?soil)` for some rock of type `v6`.
           
           **Rover v12 Actions (for analysis):**
           1. Move `v12` from `v13` to `#q8` (where `v4` of type `v2` is above).
           2. Sample `v4`.
           3. Move `v12` from `#q8` to `#q2` (comms location for `v12`).
           4. Send analysis for `v4`.
           5. Drop `v4` (to free up `v16`).
           6. Move `v12` from `#q2` to `#q9` (where `v7` of type `v6` is above).
           7. Sample `v7`.
           8. Move `v12` from `#q9` to `#q2`.
           9. Send analysis for `v7`.
           10. Drop `v7`.
           11. Move `v12` from `#q2` back to `v13`.
           
           **Rover v14 Actions (for images):**
           1. Move `v14` from `v15` to `#q10`.
           2. Calibrate camera for `v17` at `#q10`.
           3. Take image for `v17` at `#q10`.
           4. Move `v14` to `#q11`.
           5. Calibrate camera for `v20` at `#q11`.
           6. Take image for `v20` at `#q11`.
           7. Move `v14` to `#q12`.
           8. Calibrate camera for `v18` at `#q12`.
           9. Take image for `v18` at `#q12`.
           10. Move `v14` to `#o3`.
           11. Calibrate camera for `v19` at `#o3`.
           12. Take image for `v19` at `#o3`.
           13. Move `v14` to `#q1` (comms location for `v14`).
           14. Send images for `v17`, `v20`, `v18`, `v19`.
           15. Move `v14` from `#q1` back to `v15`.
           
           This detailed step-by-step approach addresses all preconditions, including the initial movements.
           
           --Plan--:
           (move v12 v13 #o2 #q8)
           (sample_rock v12 #q8 v4 v16)
           (move v12 #q8 #t15 #q2)
           (send_analysis v12 #q2 #y2 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #t25 #q9)
           (sample_rock v12 #q9 v7 v16)
           (move v12 #q9 #t16 #q2)
           (send_analysis v12 #q2 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q2 #t0 v13)
           (move v14 v15 #t19 #q10)
           (calibrate v14 #q10 #y6 v17 v10)
           (take_image v14 #q10 #y6 v17 v10 v11)
           (move v14 #q10 #o2 #q11)
           (calibrate v14 #q11 #y7 v20 v10)
           (take_image v14 #q11 #y7 v20 v10 v11)
           (move v14 #q11 #o2 #q12)
           (calibrate v14 #q12 #y8 v18 v10)
           (take_image v14 #q12 #y8 v18 v10 v11)
           (move v14 #q12 #o2 #o3)
           (calibrate v14 #o3 #o4 v19 v10)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (move v14 #o3 #o2 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (move v14 #q1 #t6 v15)

