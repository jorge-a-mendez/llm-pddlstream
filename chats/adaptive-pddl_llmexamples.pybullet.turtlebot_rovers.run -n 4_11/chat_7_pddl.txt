User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom rock(v3)
           Atom type(v4, v2)
           Atom objective(v20)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom type(v7, v6)
           Atom free(v14, v16)
           Atom store(v16)
           Atom conf(v12, v13)
           Atom type(v1, v2)
           Atom lander(v9)
           Atom supports(v10, v11)
           Atom type(v5, v6)
           Atom type(v8, v6)
           Atom rover(v14)
           Atom objective(v17)
           Atom camera(v10)
           Atom rock(v8)
           Atom onboard(v10, v14)
           Atom rock(v5)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom onboard(v10, v12)
           Atom free(v12, v16)
           Atom rock(v7)
           Atom objective(v19)
           Atom rock(v4)
           Atom rover(v12)
           Atom mode(v11)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q8, v4)
           Atom conf(v12, #q8)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom above(v12, #q9, v7)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q0, #y0, v19)
           Atom imagerange(v12, #q0, v19)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q7, #y5, v20)
           Atom imagerange(v12, #q7, v20)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q3, #y3, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y3)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #q6, v3)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q4, #y4, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y4)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom imagevisible(v14, #q11, #y7, v20)
           Atom imagerange(v14, #q11, v20)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q10, #y6, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y6)
           Atom imagevisible(v14, #q12, #y8, v18)
           Atom imagerange(v14, #q12, v18)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v7)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t0, v13)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q2, #t10, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #t15, #q2)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, v15, #t3, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, v15, #t32, #q12)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v12, #q2, #t25, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q8, #t34, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #t16, #q2)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q10, #t17, #q5)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, v15, #t19, #q10)
           Atom motion(v14, #q12, #t33, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #t30, #q8)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #t11, #q2)
           Atom motion(v14, #q11, #t18, #q5)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, v15, #t20, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q3, #t29, #q2)
           Atom motion(v12, v13, #t2, #q3)
           Atom motion(v12, #q2, #t24, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v14, #q1, #t6, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q1, #t21, #q11)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q11, #t26, #q1)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q10, #t27, #q1)
           Atom motion(v14, #q5, #t4, #q1)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q2, #t28, #q0)
           Atom motion(v12, v13, #t1, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #t13, #q3)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #t22, #q2)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q0, #t31, #q7)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, v13, #t23, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q3, #t8, #q6)
           Atom motion(v12, #q0, #t7, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q6, #t5, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #t14, #q7)
           Atom motion(v12, #q4, #t9, #q6)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q3, #t12, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q5)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q5, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q6 v3 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t13 #q3))
           ((move v12 #q0 #t22 #q2))
           ((move v12 #q0 #t31 #q7))
           ((move v12 #q0 #t7 #q6))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #t0 v13))
           ((move v12 #q2 #t10 #q8))
           ((move v12 #q2 #t24 #q3))
           ((move v12 #q2 #t25 #q9))
           ((move v12 #q2 #t28 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t12 #q4))
           ((move v12 #q3 #t29 #q2))
           ((move v12 #q3 #t8 #q6))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t14 #q7))
           ((move v12 #q4 #t9 #q6))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t5 #q2))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t11 #q2))
           ((move v12 #q7 #t30 #q8))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t15 #q2))
           ((move v12 #q8 #t34 #q9))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t16 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q0))
           ((move v12 v13 #t2 #q3))
           ((move v12 v13 #t23 #q6))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #t21 #q11))
           ((move v14 #q1 #t6 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t17 #q5))
           ((move v14 #q10 #t27 #q1))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t18 #q5))
           ((move v14 #q11 #t26 #q1))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t33 #q10))
           ((move v14 #q5 #o2 #o3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t4 #q1))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t19 #q10))
           ((move v14 v15 #t20 #q11))
           ((move v14 v15 #t3 #q5))
           ((move v14 v15 #t32 #q12))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q3 #y3 v18 v10))
           ((calibrate v12 #q4 #y4 v17 v10))
           ((calibrate v12 #q7 #y5 v20 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #q10 #y6 v17 v10))
           ((calibrate v14 #q11 #y7 v20 v10))
           ((calibrate v14 #q12 #y8 v18 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q3 #y3 v18 v10 v11))
           ((take_image v12 #q4 #y4 v17 v10 v11))
           ((take_image v12 #q7 #y5 v20 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #q10 #y6 v17 v10 v11))
           ((take_image v14 #q11 #y7 v20 v10 v11))
           ((take_image v14 #q12 #y8 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. Both rovers have a camera `v10` and a store `v16` for samples. There are several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`, `v19`, `v20`). The goal is to achieve `new-axiom@0()`, which requires that two rovers `v12` and `v14` are at specific configurations (`v13` and `v15` respectively), both stores `v16` are free, all four objectives `v17, v18, v19, v20` have received images with mode `v11`, and all rocks are analyzed and their analysis received.
           
           Let's break down the goal:
           1. `atconf(v12, v13)`: Rover `v12` is at configuration `v13`. It is already at `v13`.
           2. `atconf(v14, v15)`: Rover `v14` is at configuration `v15`. It is already at `v15`.
           3. `free(v12, v16)`: The store `v16` on rover `v12` is free. It is currently free.
           4. `free(v14, v16)`: The store `v16` on rover `v14` is free. It is currently free.
           5. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: Images of all four objectives must be taken and sent.
           6. `receivedanalysis(?stone)` and `receivedanalysis(?soil)` for all rocks: All rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) must be sampled and their analysis sent. Rocks `v1`, `v3`, `v4` are type `v2` (stone). Rocks `v5`, `v7`, `v8` are type `v6` (soil).
           
           Since both rovers are at their desired final configurations and their stores are free, we need to focus on taking and sending images for all objectives and sampling and sending analyses for all rocks.
           
           We need to make sure we don't block any rays and that the camera is calibrated before taking an image. After taking an image, the camera needs to be recalibrated for subsequent images. After sampling a rock, the analysis can be sent if `comvisible` is true.
           
           Let's prioritize the tasks to ensure preconditions are met. We can send images and analyses from `v12` at `v13` and `v14` at `v15` by moving to other configurations if needed for visibility.
           
           For rover `v12`:
           - Objectives to image and send: `v17`, `v18`, `v19`, `v20`.
           - Rocks to sample and send analysis: `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
           
           For rover `v14`:
           - Objectives to image and send: `v17`, `v18`, `v19`, `v20`.
           - Rocks to sample and send analysis: `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
           
           It seems beneficial to have each rover perform as many tasks as possible without moving unnecessarily.
           Let's analyze the `comvisible` and `imagevisible` predicates for each rover at their initial configurations (`v12` at `v13`, `v14` at `v15`):
           
           Rover `v12` at `v13`:
           - Can move to `q0`, `q2`, `q3`, `q4`, `q6`, `q7`, `q8`, `q9`, `o5`.
           - `comvisible(v12, #q2, #y2, v9)`: Can send data from `q2`.
           - `imagevisible(v12, #q0, #y0, v19)`: Can image `v19` from `q0`.
           - `imagevisible(v12, #q7, #y5, v20)`: Can image `v20` from `q7`.
           - `imagevisible(v12, #q3, #y3, v18)`: Can image `v18` from `q3`.
           - `imagevisible(v12, #q4, #y4, v17)`: Can image `v17` from `q4`.
           - `above(v12, #o5, v1)`, `above(v12, #o5, v5)`, `above(v12, #o5, v8)`: Can sample `v1`, `v5`, `v8` from `o5`.
           - `above(v12, #q8, v4)`: Can sample `v4` from `q8`.
           - `above(v12, #q9, v7)`: Can sample `v7` from `q9`.
           - `above(v12, #q6, v3)`: Can sample `v3` from `q6`.
           
           Rover `v14` at `v15`:
           - Can move to `q1`, `q5`, `q10`, `q11`, `q12`, `o3`, `o5`.
           - `comvisible(v14, #q1, #y1, v9)`: Can send data from `q1`.
           - `imagevisible(v14, #q11, #y7, v20)`: Can image `v20` from `q11`.
           - `imagevisible(v14, #q10, #y6, v17)`: Can image `v17` from `q10`.
           - `imagevisible(v14, #q12, #y8, v18)`: Can image `v18` from `q12`.
           - `imagevisible(v14, #o3, #o4, v19)`: Can image `v19` from `o3`.
           - `above(v14, #o5, v1)`, `above(v14, #o5, v4)`, `above(v14, #o5, v8)`, `above(v14, #o5, v7)`: Can sample `v1`, `v4`, `v8`, `v7` from `o5`.
           - `above(v14, #o5, v3)`: Can sample `v3` from `o5`.
           - `above(v14, #q5, v5)`: Can sample `v5` from `q5`.
           
           Let's plan for `v12` to handle its image and sample tasks, and then `v14` for its remaining tasks.
           `v12` will handle all image objectives and send them. It will also sample and send analysis for some rocks.
           `v14` will sample remaining rocks and send their analysis.
           
           **Rover v12 Strategy:**
           1. Image all objectives from `v12` and send them to the lander `v9` via `q2`.
           2. Sample all rocks visible to `v12` and send their analyses to the lander `v9` via `q2`.
           
           **Rover v14 Strategy:**
           1. Sample any remaining unsampled rocks and send their analyses to the lander `v9` via `q1`. (Potentially not needed if v12 does all rocks)
           
           Let's assume the rovers only have one store and the rocks are of different types. The `new-axiom@0` goal implies that all rocks of `type v2` and `type v6` are analyzed and sent. This means we need to handle all 6 rocks.
           
           Let's start with `v12` for imaging and some sampling.
           The camera `v10` is on `v12` and `v14`.
           When an image is taken, `calibrated(v10, v12)` becomes false. We need to `calibrate` again before taking another image.
           
           **Rover v12 Plan:**
           Move to `q0` (for `v19`), calibrate, take image, move to `q3` (for `v18`), calibrate, take image, move to `q4` (for `v17`), calibrate, take image, move to `q7` (for `v20`), calibrate, take image.
           Then move to `q2` and send all collected images.
           
           Then move to `o5` (for `v1, v5, v8`), sample `v1`, send analysis, drop, sample `v5`, send analysis, drop, sample `v8`, send analysis, drop.
           Then move to `q8` (for `v4`), sample `v4`, send analysis, drop.
           Then move to `q9` (for `v7`), sample `v7`, send analysis, drop.
           Then move to `q6` (for `v3`), sample `v3`, send analysis, drop.
           
           This will complete all image and analysis tasks for `v12`. Since all rocks and objectives are listed as visible to `v12` (or `v14` which has overlapping visibility), this single rover should be able to complete all tasks. This seems to be the most efficient path.
           
           Let's verify the initial state for calibration. `calibrated(v10, v12)` and `calibrated(v10, v14)` are not explicitly stated, meaning they are false. So we need to calibrate before the first image.
           
           Here's a detailed plan:
           
           **Rover v12 - Image Acquisition and Transmission**
           - `v12` is at `v13`.
           - Move to `q0` to image `v19`.
           - Calibrate camera `v10`.
           - Take image of `v19`.
           - Move to `q3` to image `v18`.
           - Calibrate camera `v10`.
           - Take image of `v18`.
           - Move to `q4` to image `v17`.
           - Calibrate camera `v10`.
           - Take image of `v17`.
           - Move to `q7` to image `v20`.
           - Calibrate camera `v10`.
           - Take image of `v20`.
           - Move to `q2` to send images.
           - Send images of `v19`, `v18`, `v17`, `v20`.
           
           **Rover v12 - Rock Sampling and Analysis Transmission**
           - From `q2`, move to `o5` for `v1, v5, v8`.
           - Sample `v1`, send analysis, drop rock.
           - Sample `v5`, send analysis, drop rock.
           - Sample `v8`, send analysis, drop rock.
           - Move to `q8` for `v4`.
           - Sample `v4`, send analysis, drop rock.
           - Move to `q9` for `v7`.
           - Sample `v7`, send analysis, drop rock.
           - Move to `q6` for `v3`.
           - Sample `v3`, send analysis, drop rock.
           
           The goal `new-axiom@0()` also requires `atconf(v12, v13)` and `atconf(v14, v15)`, and `free(v12, v16)` and `free(v14, v16)`. The final moves should return `v12` to `v13`. `v14` already at `v15`. `free(v12, v16)` and `free(v14, v16)` are maintained by `drop_rock`.
           
           Final check of path for v12: `v13` -> `q0` -> `q3` -> `q4` -> `q7` -> `q2` -> `o5` -> `q8` -> `q9` -> `q6` -> `v13`. All move actions are available.
           
           --Plan--:
           (move v12 v13 #t1 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #t13 #q3)
           (calibrate v12 #q3 #y3 v18 v10)
           (take_image v12 #q3 #y3 v18 v10 v11)
           (move v12 #q3 #t12 #q4)
           (calibrate v12 #q4 #y4 v17 v10)
           (take_image v12 #q4 #y4 v17 v10 v11)
           (move v12 #q4 #t14 #q7)
           (calibrate v12 #q7 #y5 v20 v10)
           (take_image v12 #q7 #y5 v20 v10 v11)
           (move v12 #q7 #t11 #q2)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v20 v11)
           (move v12 #q2 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (send_analysis v12 #q2 #y2 v9 v1)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v5 v16)
           (send_analysis v12 #q2 #y2 v9 v5)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v8 v16)
           (send_analysis v12 #q2 #y2 v9 v8)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q8)
           (sample_rock v12 #q8 v4 v16)
           (send_analysis v12 #q2 #y2 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q8 #t34 #q9)
           (sample_rock v12 #q9 v7 v16)
           (send_analysis v12 #q2 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q9 #o2 #q6)
           (sample_rock v12 #q6 v3 v16)
           (send_analysis v12 #q2 #y2 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 v13)

