User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom rock(v3)
           Atom type(v4, v2)
           Atom objective(v20)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom type(v7, v6)
           Atom free(v14, v16)
           Atom store(v16)
           Atom conf(v12, v13)
           Atom type(v1, v2)
           Atom lander(v9)
           Atom supports(v10, v11)
           Atom type(v5, v6)
           Atom type(v8, v6)
           Atom rover(v14)
           Atom objective(v17)
           Atom camera(v10)
           Atom rock(v8)
           Atom onboard(v10, v14)
           Atom rock(v5)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom onboard(v10, v12)
           Atom free(v12, v16)
           Atom rock(v7)
           Atom objective(v19)
           Atom rock(v4)
           Atom rover(v12)
           Atom mode(v11)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q8, v4)
           Atom conf(v12, #q8)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom above(v12, #q9, v7)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q0, #y0, v19)
           Atom imagerange(v12, #q0, v19)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q7, #y5, v20)
           Atom imagerange(v12, #q7, v20)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q3, #y3, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y3)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #q6, v3)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q4, #y4, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y4)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #q10, #y6, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y6)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q11, #y7, v20)
           Atom imagerange(v14, #q11, v20)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q12, #y8, v18)
           Atom imagerange(v14, #q12, v18)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v7)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #t0, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #t32, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, #q2, #t10, #q8)
           Atom motion(v12, #q8, #t15, #q2)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, v15, #t3, #q5)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #t16, #q2)
           Atom motion(v12, #q2, #t25, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q5, #t4, #q1)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q1, #t6, v15)
           Atom motion(v12, #q7, #t11, #q2)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #t30, #q8)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, v15, #t20, #q11)
           Atom motion(v14, #q1, #t21, #q11)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #t18, #q5)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q11, #t26, #q1)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, v13, #t2, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q2, #t24, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #t29, #q2)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #t17, #q5)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q12, #t33, #q10)
           Atom motion(v14, v15, #t19, #q10)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q10, #t27, #q1)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q2, #t28, #q0)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, v13, #t1, #q0)
           Atom motion(v12, #q0, #t13, #q3)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q0, #t31, #q7)
           Atom motion(v12, #q0, #t22, #q2)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q0, #t7, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q3, #t8, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #t5, #q2)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #t23, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q4, #t14, #q7)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #t9, #q6)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q3, #t12, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #o3, #o2, #q5)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q5, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q6 v3 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t13 #q3))
           ((move v12 #q0 #t22 #q2))
           ((move v12 #q0 #t31 #q7))
           ((move v12 #q0 #t7 #q6))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #t0 v13))
           ((move v12 #q2 #t10 #q8))
           ((move v12 #q2 #t24 #q3))
           ((move v12 #q2 #t25 #q9))
           ((move v12 #q2 #t28 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t12 #q4))
           ((move v12 #q3 #t29 #q2))
           ((move v12 #q3 #t8 #q6))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t14 #q7))
           ((move v12 #q4 #t9 #q6))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t5 #q2))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t11 #q2))
           ((move v12 #q7 #t30 #q8))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t15 #q2))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t16 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q0))
           ((move v12 v13 #t2 #q3))
           ((move v12 v13 #t23 #q6))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #t21 #q11))
           ((move v14 #q1 #t6 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t17 #q5))
           ((move v14 #q10 #t27 #q1))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t18 #q5))
           ((move v14 #q11 #t26 #q1))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t33 #q10))
           ((move v14 #q5 #o2 #o3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t4 #q1))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t19 #q10))
           ((move v14 v15 #t20 #q11))
           ((move v14 v15 #t3 #q5))
           ((move v14 v15 #t32 #q12))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q3 #y3 v18 v10))
           ((calibrate v12 #q4 #y4 v17 v10))
           ((calibrate v12 #q7 #y5 v20 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #q10 #y6 v17 v10))
           ((calibrate v14 #q11 #y7 v20 v10))
           ((calibrate v14 #q12 #y8 v18 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q3 #y3 v18 v10 v11))
           ((take_image v12 #q4 #y4 v17 v10 v11))
           ((take_image v12 #q7 #y5 v20 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #q10 #y6 v17 v10 v11))
           ((take_image v14 #q11 #y7 v20 v10 v11))
           ((take_image v14 #q12 #y8 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, each equipped with a camera `v10` that supports mode `v11`. There are various rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`, `v19`, `v20`) to be analyzed or imaged. Both rovers have a storage unit `v16`. The goal is `new-axiom@0()`, which implies several conditions must be met:
           1. Both rovers `v12` and `v14` must be at some configuration, which is already true (`atconf(v12, v13)`, `atconf(v14, v15)`).
           2. Both rovers must have their storage `v16` free. This is also true (`free(v12, v16)`, `free(v14, v16)`).
           3. Images for all four objectives (`v17`, `v18`, `v19`, `v20`) must be received in mode `v11`.
           4. All rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) must be analyzed and the analysis received. The problem statement refers to `type(?stone, v2)` and `type(?soil, v6)`, so we need to ensure analysis for rocks of type `v2` and `v6`.
           
           Let's break down the goal into subgoals and plan the actions for each rover.
           
           **Rover `v12` Plan:**
           
           *   **Analyze rocks:** Rover `v12` is above several rocks at different configurations.
               *   `v4` at `#q8` (type `v2`)
               *   `v7` at `#q9` (type `v6`)
               *   `v3` at `#q6` (type `v2`)
               *   `v1`, `v5`, `v8` at `#o5` (types `v2`, `v6`, `v6` respectively)
               Since `v12` currently at `v13`, it will need to move to the configurations where it can sample rocks. It can then send analysis.
           *   **Take and send images:** Rover `v12` can image `v19` at `#q0`, `v20` at `#q7`, `v18` at `#q3`, and `v17` at `#q4`. It can send images from `#q2`.
           
           **Rover `v14` Plan:**
           
           *   **Analyze rocks:** Rover `v14` is above several rocks at different configurations.
               *   `v3` at `#o5` (type `v2`)
               *   `v4` at `#o5` (type `v2`)
               *   `v1`, `v7`, `v8` at `#o5` (types `v2`, `v6`, `v6` respectively)
               *   `v5` at `#q5` (type `v6`)
               Since `v14` currently at `v15`, it will need to move to the configurations where it can sample rocks. It can then send analysis.
           *   **Take and send images:** Rover `v14` can image `v19` at `#o3`, `v17` at `#q10`, `v20` at `#q11`, and `v18` at `#q12`. It can send images from `#q1`.
           
           We need to ensure all analysis and image reception happens. We will use `v12` for all image and analysis tasks, and `v14` will focus on sampling rocks that `v12` can't easily reach or to speed up the process. Since the goal requires *all* analysis and images, it is efficient to use both rovers.
           However, the axiom `new-axiom@0()` contains a check for `type(?stone, v2)` and `type(?soil, v6)`. This means we need to analyze at least one rock of type `v2` and at least one rock of type `v6`.
           
           Let's choose `v12` to handle most of the tasks, especially imaging, as it has more direct image visible positions to different objectives.
           
           **Rover v12 Strategy:**
           1.  Calibrate at a config where it can take images.
           2.  Take images for all objectives `v17`, `v18`, `v19`, `v20`.
           3.  Move to a config where it can send images.
           4.  Send all taken images.
           5.  Move to configs where it can sample rocks (v1, v3, v4, v5, v7, v8). Since `v12` has multiple rocks visible from `#o5`, `#q6`, `#q8`, `#q9`, we'll focus on getting at least one rock of type v2 and v6.
           6.  Send analysis for the sampled rocks.
           
           **Rover v14 Strategy:**
           1.  Sample any remaining rocks needed to ensure both type `v2` and `v6` are analyzed.
           2.  Move to a config where it can send analysis.
           3.  Send analysis for sampled rocks.
           
           Let's check the types:
           Rocks:
           `v1`: type `v2` (stone)
           `v3`: type `v2` (stone)
           `v4`: type `v2` (stone)
           `v5`: type `v6` (soil)
           `v7`: type `v6` (soil)
           `v8`: type `v6` (soil)
           
           So we need to analyze at least one of (`v1`, `v3`, `v4`) and at least one of (`v5`, `v7`, `v8`).
           
           Let's use `v12` to analyze `v4` (type `v2`) and `v7` (type `v6`).
           Let's use `v14` to analyze `v5` (type `v6`).
           
           First, rover `v12` will take images and send them. Then, it will sample rocks and send analysis.
           
           **Plan for v12:**
           1. Calibrate for an objective (e.g., `v19` at `#q0`).
           2. Take image of `v19`.
           3. Move to another objective (`v18` at `#q3`).
           4. Calibrate for `v18`.
           5. Take image of `v18`.
           6. Move to another objective (`v17` at `#q4`).
           7. Calibrate for `v17`.
           8. Take image of `v17`.
           9. Move to another objective (`v20` at `#q7`).
           10. Calibrate for `v20`.
           11. Take image of `v20`.
           12. Move to `comvisible` config (`#q2`).
           13. Send all four images.
           14. Move to `#q8` to sample `v4`.
           15. Sample `v4`.
           16. Move to `#q9` to sample `v7`.
           17. Sample `v7`.
           18. Move back to `#q2` to send analysis.
           19. Send analysis for `v4` and `v7`.
           
           This covers all image and analysis requirements, since `v4` is type `v2` and `v7` is type `v6`, and all images of objectives `v17, v18, v19, v20` are received. The rovers start with free stores, so `free(?v, v16)` is true initially. The goal also requires that `atconf(v12, v13)` and `atconf(v14, v15)` eventually become true, which they are initially. So we don't necessarily have to return to `v13` or `v15` for these rovers.
           
           Let's trace the plan for `v12`:
           
           Initial state: `atconf(v12, v13)`
           
           1.  Move from `v13` to `#q0` for `v19` imaging.
               `(move v12 v13 #t1 #q0)`
           2.  Calibrate for `v19`.
               `(calibrate v12 #q0 #y0 v19 v10)`
           3.  Take image of `v19`.
               `(take_image v12 #q0 #y0 v19 v10 v11)`
           4.  Move from `#q0` to `#q3` for `v18` imaging.
               `(move v12 #q0 #t13 #q3)`
           5.  Calibrate for `v18`.
               `(calibrate v12 #q3 #y3 v18 v10)`
           6.  Take image of `v18`.
               `(take_image v12 #q3 #y3 v18 v10 v11)`
           7.  Move from `#q3` to `#q4` for `v17` imaging.
               `(move v12 #q3 #t12 #q4)`
           8.  Calibrate for `v17`.
               `(calibrate v12 #q4 #y4 v17 v10)`
           9.  Take image of `v17`.
               `(take_image v12 #q4 #y4 v17 v10 v11)`
           10. Move from `#q4` to `#q7` for `v20` imaging.
               `(move v12 #q4 #t14 #q7)`
           11. Calibrate for `v20`.
               `(calibrate v12 #q7 #y5 v20 v10)`
           12. Take image of `v20`.
               `(take_image v12 #q7 #y5 v20 v10 v11)`
           13. Move from `#q7` to `#q2` for communication.
               `(move v12 #q7 #t11 #q2)`
           14. Send image of `v19`.
               `(send_image v12 #q2 #y2 v9 v19 v11)`
           15. Send image of `v18`.
               `(send_image v12 #q2 #y2 v9 v18 v11)`
           16. Send image of `v17`.
               `(send_image v12 #q2 #y2 v9 v17 v11)`
           17. Send image of `v20`.
               `(send_image v12 #q2 #y2 v9 v20 v11)`
           18. Move from `#q2` to `#q8` for sampling `v4`.
               `(move v12 #q2 #t10 #q8)`
           19. Sample `v4`.
               `(sample_rock v12 #q8 v4 v16)`
           20. Move from `#q8` to `#q9` for sampling `v7`.
               `(move v12 #q8 #o2 #q9)` (Using a simple path for continuous parameters)
               *Correction*: Must check for existing `motion` actions. `(move v12 #q8 #o2 #q9)` is available.
           21. Sample `v7`.
               `(sample_rock v12 #q9 v7 v16)`
           22. Move from `#q9` to `#q2` for sending analysis.
               `(move v12 #q9 #t16 #q2)`
           23. Send analysis for `v4`.
               `(send_analysis v12 #q2 #y2 v9 v4)`
           24. Send analysis for `v7`.
               `(send_analysis v12 #q2 #y2 v9 v7)`
           
           This plan achieves all necessary goals. The analysis of `v4` (type `v2`) and `v7` (type `v6`) satisfies the `receivedanalysis(?stone)` and `receivedanalysis(?soil)` conditions in the axiom. All four images are received. The rovers remain at valid configurations. Stores start free, `sample_rock` fills them, but the goal does not require them to be free at the end, just that they were free for sampling and that analysis was received.
           
           --Plan--:
           (move v12 v13 #t1 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #t13 #q3)
           (calibrate v12 #q3 #y3 v18 v10)
           (take_image v12 #q3 #y3 v18 v10 v11)
           (move v12 #q3 #t12 #q4)
           (calibrate v12 #q4 #y4 v17 v10)
           (take_image v12 #q4 #y4 v17 v10 v11)
           (move v12 #q4 #t14 #q7)
           (calibrate v12 #q7 #y5 v20 v10)
           (take_image v12 #q7 #y5 v20 v10 v11)
           (move v12 #q7 #t11 #q2)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v20 v11)
           (move v12 #q2 #t10 #q8)
           (sample_rock v12 #q8 v4 v16)
           (move v12 #q8 #o2 #q9)
           (sample_rock v12 #q9 v7 v16)
           (move v12 #q9 #t16 #q2)
           (send_analysis v12 #q2 #y2 v9 v4)
           (send_analysis v12 #q2 #y2 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies, I misinterpreted the `new-axiom@0()` goal. The axiom means that *all* conditions within it must be met for the goal to be true. The axiom states:
           
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           The key conditions I missed are `free(v12, v16)` and `free(v14, v16)` *at the end of the plan*. My previous plan sampled rocks, which changed `free(v12, v16)` to `full(v12, v16)`, thereby making the goal condition `free(v12, v16)` false. I also need to ensure that *both* rovers are at their initial configurations (`v13` for `v12` and `v15` for `v14`) at the end, though this is implicitly covered if they don't move. However, my plan moved `v12` away from `v13` and did not return it.
           
           To correct this, I need to:
           1.  Ensure all `receivedimage` predicates are true.
           2.  Ensure `receivedanalysis` for *some* rock of type `v2` and *some* rock of type `v6`.
           3.  Ensure `free(v12, v16)` and `free(v14, v16)` are true at the end. This means any sampled rock must be dropped.
           4.  Ensure `atconf(v12, v13)` and `atconf(v14, v15)` are true at the end.
           
           Let's revise the plan using rover `v12` for imaging and analysis of a rock of type `v2` and `v6`, and then returning sampled rocks. Rover `v14` will remain at `v15` with its store free.
           
           **Revised Plan for v12:**
           1.  Move from `v13` to `#q0` for `v19` imaging.
           2.  Calibrate for `v19`.
           3.  Take image of `v19`.
           4.  Move from `#q0` to `#q3` for `v18` imaging.
           5.  Calibrate for `v18`.
           6.  Take image of `v18`.
           7.  Move from `#q3` to `#q4` for `v17` imaging.
           8.  Calibrate for `v17`.
           9.  Take image of `v17`.
           10. Move from `#q4` to `#q7` for `v20` imaging.
           11. Calibrate for `v20`.
           12. Take image of `v20`.
           13. Move from `#q7` to `#q2` for communication.
           14. Send all four images.
           15. Move from `#q2` to `#q8` to sample `v4` (type `v2`).
           16. Sample `v4`. (Store `v16` on `v12` becomes full)
           17. Move from `#q8` to `#q9` to sample `v7` (type `v6`).
           18. Drop `v4` to free the store for `v7`.
           19. Sample `v7`. (Store `v16` on `v12` becomes full with `v7`)
           20. Move from `#q9` to `#q2` for sending analysis.
           21. Send analysis for `v4`. (Even though `v4` was dropped, analysis was done and can be sent).
           22. Send analysis for `v7`.
           23. Drop `v7` to free the store. (Store `v16` on `v12` becomes free again)
           24. Move from `#q2` back to `v13`.
           
           This plan ensures:
           *   All images are taken and sent.
           *   Rocks `v4` (type `v2`) and `v7` (type `v6`) are sampled and analyzed, and analysis sent.
           *   Rover `v12`'s store `v16` is `free` at the end of the plan.
           *   Rover `v12` is `atconf(v12, v13)` at the end.
           *   Rover `v14` stays at `v15` with a free store.
           
           Let's double-check the `drop_rock` action: `(drop_rock ?v ?s)` - Precondition: `full(?v, ?s)`. Effect: `free(?v, ?s)`. This allows dropping the rock after sampling.
           
           The analysis is linked to the rock object (`receivedanalysis(?r)`), not whether it is currently in the store, so dropping the rock after analysis is fine.
           
           The sequence:
           1.  (move v12 v13 #t1 #q0)
           2.  (calibrate v12 #q0 #y0 v19 v10)
           3.  (take_image v12 #q0 #y0 v19 v10 v11)
           4.  (move v12 #q0 #t13 #q3)
           5.  (calibrate v12 #q3 #y3 v18 v10)
           6.  (take_image v12 #q3 #y3 v18 v10 v11)
           7.  (move v12 #q3 #t12 #q4)
           8.  (calibrate v12 #q4 #y4 v17 v10)
           9.  (take_image v12 #q4 #y4 v17 v10 v11)
           10. (move v12 #q4 #t14 #q7)
           11. (calibrate v12 #q7 #y5 v20 v10)
           12. (take_image v12 #q7 #y5 v20 v10 v11)
           13. (move v12 #q7 #t11 #q2)
           14. (send_image v12 #q2 #y2 v9 v19 v11)
           15. (send_image v12 #q2 #y2 v9 v18 v11)
           16. (send_image v12 #q2 #y2 v9 v17 v11)
           17. (send_image v12 #q2 #y2 v9 v20 v11)
           18. (move v12 #q2 #t10 #q8)
           19. (sample_rock v12 #q8 v4 v16) (Now `full(v12, v16)` and `analyzed(v12, v4)`)
           20. (drop_rock v12 v16) (Now `free(v12, v16)`)
           21. (move v12 #q8 #o2 #q9)
           22. (sample_rock v12 #q9 v7 v16) (Now `full(v12, v16)` and `analyzed(v12, v7)`)
           23. (move v12 #q9 #t16 #q2)
           24. (send_analysis v12 #q2 #y2 v9 v4)
           25. (send_analysis v12 #q2 #y2 v9 v7)
           26. (drop_rock v12 v16) (Now `free(v12, v16)`)
           27. (move v12 #q2 #t0 v13)
           
           This seems to satisfy all conditions of the axiom.
           
           --Plan--:
           (move v12 v13 #t1 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #t13 #q3)
           (calibrate v12 #q3 #y3 v18 v10)
           (take_image v12 #q3 #y3 v18 v10 v11)
           (move v12 #q3 #t12 #q4)
           (calibrate v12 #q4 #y4 v17 v10)
           (take_image v12 #q4 #y4 v17 v10 v11)
           (move v12 #q4 #t14 #q7)
           (calibrate v12 #q7 #y5 v20 v10)
           (take_image v12 #q7 #y5 v20 v10 v11)
           (move v12 #q7 #t11 #q2)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v20 v11)
           (move v12 #q2 #t10 #q8)
           (sample_rock v12 #q8 v4 v16)
           (drop_rock v12 v16)
           (move v12 #q8 #o2 #q9)
           (sample_rock v12 #q9 v7 v16)
           (move v12 #q9 #t16 #q2)
           (send_analysis v12 #q2 #y2 v9 v4)
           (send_analysis v12 #q2 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q2 #t0 v13)

