User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom onboard(v10, v14)
           Atom rover(v14)
           Atom objective(v19)
           Atom rock(v4)
           Atom rock(v5)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom lander(v9)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom type(v5, v6)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom store(v16)
           Atom onboard(v10, v12)
           Atom rock(v7)
           Atom free(v14, v16)
           Atom atconf(v14, v15)
           Atom conf(v12, v13)
           Atom type(v1, v2)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom rock(v1)
           Atom objective(v17)
           Atom atconf(v12, v13)
           Atom rock(v8)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q17, v8)
           Atom conf(v12, #q17)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q14, v1)
           Atom conf(v12, #q14)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q10, v5)
           Atom conf(v12, #q10)
           Atom above(v12, #q16, v7)
           Atom conf(v12, #q16)
           Atom above(v12, #q18, v4)
           Atom conf(v12, #q18)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q2, #y2, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom imagevisible(v14, #q8, #y6, v18)
           Atom imagerange(v14, #q8, v18)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom imagevisible(v14, #q7, #y5, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #q12, v7)
           Atom conf(v14, #q12)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom imagevisible(v14, #q11, #y7, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom above(v14, #q13, v4)
           Atom conf(v14, #q13)
           Atom above(v14, #q15, v8)
           Atom conf(v14, #q15)
           Atom above(v14, #q4, v1)
           Atom conf(v14, #q4)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, v13, #o2, #q17)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, #q18, #o2, v13)
           Atom motion(v12, #q18, #o2, #q18)
           Atom motion(v12, #q17, #o2, #q18)
           Atom motion(v12, v13, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q17)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v12, #q17, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q17)
           Atom motion(v12, #q18, #o2, #q16)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q16, #o2, #q18)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v12, v13, #t9, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q18, #o2, #q10)
           Atom motion(v12, #q16, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q17)
           Atom motion(v12, #q10, #o2, #q16)
           Atom motion(v12, #q17, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q18)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, v15, #t2, #q3)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q3, #t21, #q12)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q18)
           Atom motion(v12, v13, #t3, #q0)
           Atom motion(v12, #q18, #o2, #q0)
           Atom motion(v12, #q17, #o2, #q0)
           Atom motion(v12, #q16, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q16)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q17)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q17, #o2, #q9)
           Atom motion(v12, v13, #t8, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q16, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q18)
           Atom motion(v12, #q9, #o2, #q17)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q16)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q18, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q11)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, v15, #t14, #q7)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v12, #q1, #t4, #q0)
           Atom motion(v12, #q1, #t6, v13)
           Atom motion(v12, #q16, #t33, #q1)
           Atom motion(v12, #q10, #t13, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t17, #q10)
           Atom motion(v12, #q17, #o2, #q1)
           Atom motion(v12, #q1, #t16, #q9)
           Atom motion(v12, #q1, #o2, #q17)
           Atom motion(v12, #q1, #o2, #q18)
           Atom motion(v12, #q9, #t12, #q1)
           Atom motion(v12, #q1, #t34, #q16)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q18, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q17, #o2, #q14)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q1, #t30, #q14)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, v13, #t27, #q14)
           Atom motion(v12, #q14, #o2, #q17)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q14, #t29, #q1)
           Atom motion(v12, #q18, #o2, #q14)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q18)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, v15, #t15, #q8)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q16)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #t19, #q1)
           Atom motion(v12, #q18, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q16, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q17)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q17, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q1, #t32, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q18)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v14, #q13, #t23, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t25, #q12)
           Atom motion(v14, #q3, #t5, #q2)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q2, #t7, v15)
           Atom motion(v14, #q2, #t26, #q13)
           Atom motion(v14, #q8, #t11, #q2)
           Atom motion(v14, #q12, #t22, #q2)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q2, #t1, #q3)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, #q7, #t10, #q2)
           Atom motion(v14, #q15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q0, #t20, #q5)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, v13, #t31, #q5)
           Atom motion(v12, #q5, #t24, #q1)
           Atom motion(v12, #q18, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q17)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q1, #t28, #q5)
           Atom motion(v12, #q5, #t18, #q6)
           Atom motion(v12, #q5, #o2, #q16)
           Atom motion(v12, #q5, #o2, #q18)
           Atom motion(v12, #q17, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q16, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v5 v16))
           ((sample_rock v12 #q14 v1 v16))
           ((sample_rock v12 #q16 v7 v16))
           ((sample_rock v12 #q17 v8 v16))
           ((sample_rock v12 #q18 v4 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #q12 v7 v16))
           ((sample_rock v14 #q13 v4 v16))
           ((sample_rock v14 #q15 v8 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((sample_rock v14 #q4 v1 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q16))
           ((move v12 #q0 #o2 #q17))
           ((move v12 #q0 #o2 #q18))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t20 #q5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q17))
           ((move v12 #q1 #o2 #q18))
           ((move v12 #q1 #t16 #q9))
           ((move v12 #q1 #t17 #q10))
           ((move v12 #q1 #t28 #q5))
           ((move v12 #q1 #t30 #q14))
           ((move v12 #q1 #t32 #q6))
           ((move v12 #q1 #t34 #q16))
           ((move v12 #q1 #t4 #q0))
           ((move v12 #q1 #t6 v13))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q16))
           ((move v12 #q10 #o2 #q17))
           ((move v12 #q10 #o2 #q18))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t13 #q1))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 #q17))
           ((move v12 #q14 #o2 #q18))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t29 #q1))
           ((move v12 #q16 #o2 #q0))
           ((move v12 #q16 #o2 #q10))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q17))
           ((move v12 #q16 #o2 #q18))
           ((move v12 #q16 #o2 #q5))
           ((move v12 #q16 #o2 #q6))
           ((move v12 #q16 #o2 #q9))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t33 #q1))
           ((move v12 #q17 #o2 #q0))
           ((move v12 #q17 #o2 #q1))
           ((move v12 #q17 #o2 #q10))
           ((move v12 #q17 #o2 #q14))
           ((move v12 #q17 #o2 #q16))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q18))
           ((move v12 #q17 #o2 #q5))
           ((move v12 #q17 #o2 #q6))
           ((move v12 #q17 #o2 #q9))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q18 #o2 #q0))
           ((move v12 #q18 #o2 #q1))
           ((move v12 #q18 #o2 #q10))
           ((move v12 #q18 #o2 #q14))
           ((move v12 #q18 #o2 #q16))
           ((move v12 #q18 #o2 #q17))
           ((move v12 #q18 #o2 #q18))
           ((move v12 #q18 #o2 #q5))
           ((move v12 #q18 #o2 #q6))
           ((move v12 #q18 #o2 #q9))
           ((move v12 #q18 #o2 v13))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q16))
           ((move v12 #q5 #o2 #q17))
           ((move v12 #q5 #o2 #q18))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t18 #q6))
           ((move v12 #q5 #t24 #q1))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q16))
           ((move v12 #q6 #o2 #q17))
           ((move v12 #q6 #o2 #q18))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t19 #q1))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q16))
           ((move v12 #q9 #o2 #q17))
           ((move v12 #q9 #o2 #q18))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t12 #q1))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q18))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t27 #q14))
           ((move v12 v13 #t3 #q0))
           ((move v12 v13 #t31 #q5))
           ((move v12 v13 #t8 #q9))
           ((move v12 v13 #t9 #q10))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 #q4))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t22 #q2))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t23 #q2))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #t1 #q3))
           ((move v14 #q2 #t25 #q12))
           ((move v14 #q2 #t26 #q13))
           ((move v14 #q2 #t7 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t21 #q12))
           ((move v14 #q3 #t5 #q2))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t10 #q2))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t11 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q7))
           ((move v14 v15 #t15 #q8))
           ((move v14 v15 #t2 #q3))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #q11 #y7 v19 v10))
           ((calibrate v14 #q7 #y5 v17 v10))
           ((calibrate v14 #q8 #y6 v18 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #q11 #y7 v19 v10 v11))
           ((take_image v14 #q7 #y5 v17 v10 v11))
           ((take_image v14 #q8 #y6 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y2 v9 v3))
           ((send_analysis v14 #q2 #y2 v9 v7))
           ((send_analysis v14 #q2 #y2 v9 v4))
           ((send_analysis v14 #q2 #y2 v9 v8))
           ((send_analysis v14 #q2 #y2 v9 v5))
           ((send_analysis v14 #q2 #y2 v9 v1))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q2 #y2 v9 v19 v11))
           ((send_image v14 #q2 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, each with a camera `v10` and a store `v16`. There are several rock objectives: `v1`, `v3`, `v4`, `v5`, `v7`, `v8`, and image objectives `v17`, `v18`, `v19`. The lander `v9` is the target for sending data. The goal `new-axiom@0()` can be satisfied if at least two rovers are at different configurations, at least two stores are free, at least three images are received for a given mode, and at least two rocks of specified types (stone and soil) have their analyses received.
           
           Looking at the initial state:
           - Both rovers `v12` and `v14` are at specific configurations (`v13` and `v15` respectively) and have free stores (`v16`).
           - Rover `v12` has its camera `v10` onboard and supports mode `v11`.
           - Rover `v14` also has its camera `v10` onboard and supports mode `v11`.
           
           To achieve the goal, we need to:
           1. Ensure `atconf(v12, v13)` and `atconf(v14, v15)` are true (they are in the initial state).
           2. Ensure `free(v12, v16)` and `free(v14, v16)` are true (they are in the initial state).
           3. Achieve `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, and `receivedimage(v19, v11)`.
           4. Achieve `receivedanalysis(?stone)` for a stone type (e.g., `v3`, `v4`, `v1`).
           5. Achieve `receivedanalysis(?soil)` for a soil type (e.g., `v5`, `v7`, `v8`).
           
           Let's break down how to get the images and analyses:
           - **Images:** For each image objective (v17, v18, v19), a rover needs to calibrate its camera, take an image, and send it to the lander.
             - For `v17`: Rover `v12` can see `v17` at `#q5` and `v14` can see `v17` at `#q7`.
             - For `v18`: Rover `v12` can see `v18` at `#q0` and `v14` can see `v18` at `#q8`.
             - For `v19`: Rover `v12` can see `v19` at `#q6` and `v14` can see `v19` at `#q11`.
             - Both rovers can communicate with the lander `v9` (v12 at `#q1`, v14 at `#q2`).
           - **Analyses:** For each rock objective, a rover needs to be above it, sample it, and send the analysis to the lander.
             - Rocks of type `v2` (stone): `v1`, `v3`, `v4`.
             - Rocks of type `v6` (soil): `v5`, `v7`, `v8`.
             - Rover `v12` can sample `v5` (soil), `v1` (stone), `v7` (soil), `v8` (soil), `v4` (stone), `v3` (stone).
             - Rover `v14` can sample `v3` (stone), `v7` (soil), `v4` (stone), `v8` (soil), `v5` (soil), `v1` (stone).
           
           We can leverage both rovers to accomplish these tasks efficiently.
           
           Plan Strategy:
           1. Use `v12` to handle some image tasks and sample a stone rock.
           2. Use `v14` to handle other image tasks and sample a soil rock.
           3. Send all collected images and analyses.
           
           Detailed Steps:
           - **Images:**
               - `v12` at `v13` (current position). Move to `#q5` to observe `v17`. Calibrate, take image, then move to `#q1` to send.
               - `v12` from `v13` can also move to `#q0` for `v18` or `#q6` for `v19`.
               - `v14` at `v15` (current position). Move to `#q11` to observe `v19`. Calibrate, take image, then move to `#q2` to send.
               - `v14` from `v15` can also move to `#q7` for `v17` or `#q8` for `v18`.
           - **Analyses:**
               - `v12` can sample `v3` (stone) at `#q9`.
               - `v14` can sample `v5` (soil) at `#q3`.
           
           Let's use `v12` to get images of `v17`, `v18`, `v19` and analyze a stone. Let `v14` analyze a soil, though `v12` is also perfectly capable of doing it. The goal needs `receivedanalysis(?stone)` and `receivedanalysis(?soil)`.
           
           **Rover v12:**
           1. Move to `#q5` to see `v17`.
           2. Calibrate camera `v10`.
           3. Take image of `v17`.
           4. Move to `#q0` to see `v18`.
           5. Calibrate camera `v10`. (camera might already be calibrated but it's okay)
           6. Take image of `v18`.
           7. Move to `#q6` to see `v19`.
           8. Calibrate camera `v10`.
           9. Take image of `v19`.
           10. Move to `#q9` to sample `v3` (stone).
           11. Sample `v3`.
           12. Move to `#q1` to communicate with `v9`.
           13. Send images of `v17`, `v18`, `v19`.
           14. Send analysis of `v3`.
           
           This plan ensures `receivedimage` for all three objectives and `receivedanalysis` for a stone. We still need `receivedanalysis(?soil)`.
           The initial state shows that rover `v14` is at `v15` and `free(v14, v16)` is true. Rover `v14` can sample `v5` (soil) at `#q3`.
           
           **Rover v14:**
           1. Move to `#q3` to sample `v5`.
           2. Sample `v5`.
           3. Move to `#q2` to communicate with `v9`.
           4. Send analysis of `v5`.
           
           This covers all aspects of `new-axiom@0()`.
           
           --Plan--:
           (move v12 v13 #t31 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #o2 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #o2 #q9)
           (sample_rock v12 #q9 v3 v16)
           (move v12 #q9 #t12 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (send_analysis v12 #q1 #y1 v9 v3)
           (move v14 v15 #t2 #q3)
           (sample_rock v14 #q3 v5 v16)
           (move v14 #q3 #t5 #q2)
           (send_analysis v14 #q2 #y2 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. Let's re-examine the goal `new-axiom@0()`:
           `Atconf(v12, v13)` and `Atconf(v14, v15)`: These are true in the initial state.
           `Free(v12, v16)` and `Free(v14, v16)`: These are true in the initial state.
           `Receivedimage(v17, v11)`, `Receivedimage(v18, v11)`, `Receivedimage(v19, v11)`: This requires taking and sending images for all three objectives.
           `Type(?stone, v2)` and `Receivedanalysis(?stone)`: This requires analyzing a rock of type `v2` (stone). `v1`, `v3`, `v4` are stones.
           `Type(?soil, v6)` and `Receivedanalysis(?soil)`: This requires analyzing a rock of type `v6` (soil). `v5`, `v7`, `v8` are soils.
           
           My previous plan attempted to achieve all these, but it seems there might have been a subtle issue. Let's make sure each step's precondition is strictly met.
           
           The core issue might be that I used the same camera `v10` for `v12` and `v14` in the initial state. Let's check:
           `onboard(v10, v14)` and `onboard(v10, v12)`. This indicates that `v10` is on *both* rovers. This is unusual but not explicitly forbidden by the domain, however, it makes sense to assume it means 'rover v12 has a camera v10, and rover v14 has a camera v10'. If it meant a single camera being physically on two rovers, that would be an invalid state. Assuming it means two cameras, both named 'v10' in their respective contexts (or simply that the predicate means "rover v has *a* camera and *that* camera is referred to as c"), the plan should work. Let's assume it means separate cameras with the same identifier, or that the system handles multiple cameras with the same internal representation.
           
           The plan should be:
           1. Calibrate camera for each image, take image, send image.
           2. Sample one stone rock, send analysis.
           3. Sample one soil rock, send analysis.
           
           Let's use `v12` to take all three images and sample one stone, then send.
           Let's use `v14` to sample one soil, then send.
           
           **Rover v12 actions:**
           - Move to `#q5` (config for v17)
           - Calibrate v10 at `#q5` for `v17`
           - Take image of `v17`
           - Move to `#q0` (config for v18)
           - Calibrate v10 at `#q0` for `v18`
           - Take image of `v18`
           - Move to `#q6` (config for v19)
           - Calibrate v10 at `#q6` for `v19`
           - Take image of `v19`
           - Move to `#q9` (config for v3, a stone rock)
           - Sample `v3`
           - Move to `#q1` (config for communication with lander)
           - Send image of `v17`
           - Send image of `v18`
           - Send image of `v19`
           - Send analysis of `v3`
           
           **Rover v14 actions:**
           - Move to `#q3` (config for v5, a soil rock)
           - Sample `v5`
           - Move to `#q2` (config for communication with lander)
           - Send analysis of `v5`
           
           This ensures that we get all three images `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedanalysis(v3)` (stone), and `receivedanalysis(v5)` (soil). All initial conditions like `atconf` and `free` are maintained. The `calibrated` predicate is reset after `take_image`, so we need to recalibrate for each image.
           
           --Plan--:
           (move v12 v13 #t31 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #o2 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #o2 #q9)
           (sample_rock v12 #q9 v3 v16)
           (move v12 #q9 #t12 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (send_analysis v12 #q1 #y1 v9 v3)
           (move v14 v15 #t2 #q3)
           (sample_rock v14 #q3 v5 v16)
           (move v14 #q3 #t5 #q2)
           (send_analysis v14 #q2 #y2 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan again failed to satisfy `new-axiom@0()`. Let's scrutinize the goal and the domain very carefully.
           
           The `new-axiom@0()` definition is:
           `Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)`
           
           Let's break down each part and confirm how it's achieved:
           
           1.  `atconf(v12, v13)`: This is true initially. My plan moves `v12` away from `v13` and doesn't explicitly move it back. However, the requirement is that this is true *at the end* of the plan. This implies that the rovers must end up in these specific configurations, or that they are allowed to move and the final state needs to reflect these exact `atconf` predicates. The problem statement says "Any fact that is not explicitly stated in the initial state is false. Never assume that any precondition is true by default: it must either be explicitly stated in the initial state, or be achieved by a previous action (and not undone by another action)." If the final `atconf` is required, then the rover needs to move back to `v13` and `v15` respectively. This is a critical point.
           
               Let's re-read the axiom carefully: "Atom atconf(v12, v13) Atom atconf(v14, v15)". This is a *state-holding* predicate in the final state, not just something that must be true at some point. So if a rover moves, it *must* return to its initial position.
           
           2.  `free(v12, v16)` and `free(v14, v16)`: These are true initially. When a rover samples a rock (`sample_rock`), `full` becomes true and `free` becomes false. To satisfy `free` at the end, the `drop_rock` action must be used.
           
           3.  `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`: This requires taking 3 images and sending them.
               - `v17` can be imaged by `v12` at `#q5` or `v14` at `#q7`.
               - `v18` can be imaged by `v12` at `#q0` or `v14` at `#q8`.
               - `v19` can be imaged by `v12` at `#q6` or `v14` at `#q11`.
               - `v12` communicates at `#q1`.
               - `v14` communicates at `#q2`.
           
           4.  `type(?stone, v2)` and `receivedanalysis(?stone)`: Needs one stone (`v1`, `v3`, `v4`) to be analyzed.
               - `v12` can sample `v3` at `#q9`. `v3` is type `v2`.
               - `v12` can sample `v1` at `#q14`. `v1` is type `v2`.
               - `v12` can sample `v4` at `#q18`. `v4` is type `v2`.
           
           5.  `type(?soil, v6)` and `receivedanalysis(?soil)`: Needs one soil (`v5`, `v7`, `v8`) to be analyzed.
               - `v12` can sample `v5` at `#q10`. `v5` is type `v6`.
               - `v12` can sample `v7` at `#q16`. `v7` is type `v6`.
               - `v12` can sample `v8` at `#q17`. `v8` is type `v6`.
           
           My previous plan failed to ensure `atconf(v12, v13)` and `atconf(v14, v15)` at the *end* of the plan, and also `free(v12, v16)` and `free(v14, v16)` after sampling. The `drop_rock` action is necessary.
           
           Let's refine the plan:
           
           **Goals:**
           *   `receivedimage(v17, v11)`
           *   `receivedimage(v18, v11)`
           *   `receivedimage(v19, v11)`
           *   `receivedanalysis(v3)` (stone)
           *   `receivedanalysis(v5)` (soil)
           *   Final positions: `atconf(v12, v13)` and `atconf(v14, v15)`
           *   Final stores: `free(v12, v16)` and `free(v14, v16)`
           
           **Revised Plan using Rover v12 for all images and stone analysis, Rover v14 for soil analysis:**
           
           **Rover v12:**
           1.  **Move for v17 image:** `v12` from `v13` to `#q5`.
           2.  **Calibrate:** `v10` for `v17`.
           3.  **Take image:** `v17`.
           4.  **Move for v18 image:** `v12` from `#q5` to `#q0`.
           5.  **Calibrate:** `v10` for `v18`.
           6.  **Take image:** `v18`.
           7.  **Move for v19 image:** `v12` from `#q0` to `#q6`.
           8.  **Calibrate:** `v10` for `v19`.
           9.  **Take image:** `v19`.
           10. **Move for v3 sample (stone):** `v12` from `#q6` to `#q9`.
           11. **Sample rock:** `v3`. This will make `full(v12, v16)` true and `free(v12, v16)` false.
           12. **Move for communication:** `v12` from `#q9` to `#q1`.
           13. **Send images:** `v17`, `v18`, `v19`.
           14. **Send analysis:** `v3`.
           15. **Drop rock:** `v12` drops the rock, making `free(v12, v16)` true again.
           16. **Return to initial config:** `v12` from `#q1` to `v13`.
           
           **Rover v14:**
           1.  **Move for v5 sample (soil):** `v14` from `v15` to `#q3`.
           2.  **Sample rock:** `v5`. This will make `full(v14, v16)` true and `free(v14, v16)` false.
           3.  **Move for communication:** `v14` from `#q3` to `#q2`.
           4.  **Send analysis:** `v5`.
           5.  **Drop rock:** `v14` drops the rock, making `free(v14, v16)` true again.
           6.  **Return to initial config:** `v14` from `#q2` to `v15`.
           
           This detailed plan addresses the conditions that were likely missed.
           
           --Plan--:
           (move v12 v13 #t31 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #o2 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #o2 #q9)
           (sample_rock v12 #q9 v3 v16)
           (move v12 #q9 #t12 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (send_analysis v12 #q1 #y1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q1 #t6 v13)
           (move v14 v15 #t2 #q3)
           (sample_rock v14 #q3 v5 v16)
           (move v14 #q3 #t5 #q2)
           (send_analysis v14 #q2 #y2 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q2 #t7 v15)

