User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom onboard(v10, v14)
           Atom rover(v14)
           Atom objective(v19)
           Atom rock(v4)
           Atom rock(v5)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom lander(v9)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom type(v5, v6)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom store(v16)
           Atom onboard(v10, v12)
           Atom rock(v7)
           Atom free(v14, v16)
           Atom atconf(v14, v15)
           Atom conf(v12, v13)
           Atom type(v1, v2)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom rock(v1)
           Atom objective(v17)
           Atom atconf(v12, v13)
           Atom rock(v8)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q14, v1)
           Atom conf(v12, #q14)
           Atom above(v12, #q16, v7)
           Atom conf(v12, #q16)
           Atom above(v12, #q10, v5)
           Atom conf(v12, #q10)
           Atom above(v12, #q17, v8)
           Atom conf(v12, #q17)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q18, v4)
           Atom conf(v12, #q18)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q12, v7)
           Atom conf(v14, #q12)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom above(v14, #q15, v8)
           Atom conf(v14, #q15)
           Atom above(v14, #q13, v4)
           Atom conf(v14, #q13)
           Atom comvisible(v14, #q2, #y2, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q11, #y7, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom imagevisible(v14, #q8, #y6, v18)
           Atom imagerange(v14, #q8, v18)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom imagevisible(v14, #q7, #y5, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #q4, v1)
           Atom conf(v14, #q4)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, v13, #t3, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #o2, #q18)
           Atom motion(v12, #q18, #o2, v13)
           Atom motion(v12, #q18, #o2, #q0)
           Atom motion(v12, #q18, #o2, #q18)
           Atom motion(v12, #q0, #o2, #q18)
           Atom motion(v14, v15, #t14, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v12, #q5, #o2, #q18)
           Atom motion(v12, #q0, #t20, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q18, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #t31, #q5)
           Atom motion(v12, #q5, #t35, #q0)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #t15, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q18)
           Atom motion(v12, #q17, #o2, #q0)
           Atom motion(v12, #q17, #o2, #q5)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, v13, #o2, #q17)
           Atom motion(v12, #q18, #o2, #q17)
           Atom motion(v12, #q0, #o2, #q17)
           Atom motion(v12, #q5, #o2, #q17)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q17)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q17, #o2, #q9)
           Atom motion(v12, #q18, #o2, #q9)
           Atom motion(v12, v13, #t8, #q9)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q18)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q11)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q11, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q17)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q18)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q17, #o2, #q10)
           Atom motion(v12, v13, #t9, #q10)
           Atom motion(v12, #q18, #o2, #q10)
           Atom motion(v12, #q1, #t17, #q10)
           Atom motion(v12, #q1, #t4, #q0)
           Atom motion(v12, #q10, #t13, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q17)
           Atom motion(v12, #q1, #t28, #q5)
           Atom motion(v12, #q5, #t24, #q1)
           Atom motion(v12, #q1, #t16, #q9)
           Atom motion(v12, #q9, #t12, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q17, #o2, #q1)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q18, #o2, #q1)
           Atom motion(v12, #q1, #t6, v13)
           Atom motion(v12, #q1, #o2, #q18)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q2, #t7, v15)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q7, #t10, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, #q8, #t11, #q2)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v12, #q16, #o2, #q9)
           Atom motion(v12, #q16, #t33, #q1)
           Atom motion(v12, #q18, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q10)
           Atom motion(v12, #q16, #o2, #q5)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q10, #o2, #q16)
           Atom motion(v12, #q5, #o2, #q16)
           Atom motion(v12, #q0, #o2, #q16)
           Atom motion(v12, #q9, #o2, #q16)
           Atom motion(v12, #q17, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q16, #o2, #q17)
           Atom motion(v12, #q1, #t34, #q16)
           Atom motion(v12, #q16, #o2, #q18)
           Atom motion(v12, #q16, #o2, #q0)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q13, #t23, #q2)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q2, #t26, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v12, #q18, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q16)
           Atom motion(v12, #q17, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #t19, #q1)
           Atom motion(v12, #q6, #o2, #q17)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q16, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q18)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #t18, #q6)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t37, #q9)
           Atom motion(v12, #q0, #t36, #q6)
           Atom motion(v12, #q1, #t32, #q6)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q2)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q4)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q4, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q18, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q17)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, v13, #t27, #q14)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q17, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q1, #t30, #q14)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q18)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q14, #t29, #q1)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q2, #t1, #q3)
           Atom motion(v14, #q3, #t5, #q2)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, v15, #t2, #q3)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q2, #t25, #q12)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q3, #t21, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q12, #t22, #q2)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q12)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v5 v16))
           ((sample_rock v12 #q14 v1 v16))
           ((sample_rock v12 #q16 v7 v16))
           ((sample_rock v12 #q17 v8 v16))
           ((sample_rock v12 #q18 v4 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #q12 v7 v16))
           ((sample_rock v14 #q13 v4 v16))
           ((sample_rock v14 #q15 v8 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((sample_rock v14 #q4 v1 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q16))
           ((move v12 #q0 #o2 #q17))
           ((move v12 #q0 #o2 #q18))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t20 #q5))
           ((move v12 #q0 #t36 #q6))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q17))
           ((move v12 #q1 #o2 #q18))
           ((move v12 #q1 #t16 #q9))
           ((move v12 #q1 #t17 #q10))
           ((move v12 #q1 #t28 #q5))
           ((move v12 #q1 #t30 #q14))
           ((move v12 #q1 #t32 #q6))
           ((move v12 #q1 #t34 #q16))
           ((move v12 #q1 #t4 #q0))
           ((move v12 #q1 #t6 v13))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q16))
           ((move v12 #q10 #o2 #q17))
           ((move v12 #q10 #o2 #q18))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t13 #q1))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 #q17))
           ((move v12 #q14 #o2 #q18))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t29 #q1))
           ((move v12 #q16 #o2 #q0))
           ((move v12 #q16 #o2 #q10))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q17))
           ((move v12 #q16 #o2 #q18))
           ((move v12 #q16 #o2 #q5))
           ((move v12 #q16 #o2 #q6))
           ((move v12 #q16 #o2 #q9))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t33 #q1))
           ((move v12 #q17 #o2 #q0))
           ((move v12 #q17 #o2 #q1))
           ((move v12 #q17 #o2 #q10))
           ((move v12 #q17 #o2 #q14))
           ((move v12 #q17 #o2 #q16))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q18))
           ((move v12 #q17 #o2 #q5))
           ((move v12 #q17 #o2 #q6))
           ((move v12 #q17 #o2 #q9))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q18 #o2 #q0))
           ((move v12 #q18 #o2 #q1))
           ((move v12 #q18 #o2 #q10))
           ((move v12 #q18 #o2 #q14))
           ((move v12 #q18 #o2 #q16))
           ((move v12 #q18 #o2 #q17))
           ((move v12 #q18 #o2 #q18))
           ((move v12 #q18 #o2 #q5))
           ((move v12 #q18 #o2 #q6))
           ((move v12 #q18 #o2 #q9))
           ((move v12 #q18 #o2 v13))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q16))
           ((move v12 #q5 #o2 #q17))
           ((move v12 #q5 #o2 #q18))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t18 #q6))
           ((move v12 #q5 #t24 #q1))
           ((move v12 #q5 #t35 #q0))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q16))
           ((move v12 #q6 #o2 #q17))
           ((move v12 #q6 #o2 #q18))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t19 #q1))
           ((move v12 #q6 #t37 #q9))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q16))
           ((move v12 #q9 #o2 #q17))
           ((move v12 #q9 #o2 #q18))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t12 #q1))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q18))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t27 #q14))
           ((move v12 v13 #t3 #q0))
           ((move v12 v13 #t31 #q5))
           ((move v12 v13 #t8 #q9))
           ((move v12 v13 #t9 #q10))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 #q4))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t22 #q2))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t23 #q2))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #t1 #q3))
           ((move v14 #q2 #t25 #q12))
           ((move v14 #q2 #t26 #q13))
           ((move v14 #q2 #t7 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t21 #q12))
           ((move v14 #q3 #t5 #q2))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t10 #q2))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t11 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q7))
           ((move v14 v15 #t15 #q8))
           ((move v14 v15 #t2 #q3))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #q11 #y7 v19 v10))
           ((calibrate v14 #q7 #y5 v17 v10))
           ((calibrate v14 #q8 #y6 v18 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #q11 #y7 v19 v10 v11))
           ((take_image v14 #q7 #y5 v17 v10 v11))
           ((take_image v14 #q8 #y6 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y2 v9 v3))
           ((send_analysis v14 #q2 #y2 v9 v7))
           ((send_analysis v14 #q2 #y2 v9 v4))
           ((send_analysis v14 #q2 #y2 v9 v8))
           ((send_analysis v14 #q2 #y2 v9 v5))
           ((send_analysis v14 #q2 #y2 v9 v1))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q2 #y2 v9 v19 v11))
           ((send_image v14 #q2 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, each equipped with a camera, `v10`, that supports mode `v11`. Both rovers are currently at different configurations (`v13` for `v12` and `v15` for `v14`) and have an empty storage `v16`. There's a lander `v9` for communication. Several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`, `v19`) are present. The goal `new-axiom@0()` represents a complex state that requires several conditions to be met, including:
           - Rover `v12` and `v14` are at some configurations. (Initially true for `v13` and `v15`)
           - Rover `v12` and `v14` have free storage `v16`. (Initially true)
           - Images for objectives `v17`, `v18`, `v19` in mode `v11` must be received.
           - Rocks of type `v2` (which are `v1`, `v3`, `v4`) and `v6` (which are `v5`, `v7`, `v8`) must be analyzed.
           
           To achieve the goal, we need to:
           1. Capture images of all three objectives (`v17`, `v18`, `v19`) and send them to the lander.
           2. Sample all the rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and send their analyses to the lander.
           
           Let's break down how to achieve this with the available actions and states.
           
           **Objectives Imaging:**
           - Rover `v12` can image `v18` at `#q0`, `v17` at `#q5`, and `v19` at `#q6`.
           - Rover `v14` can image `v19` at `#q11`, `v17` at `#q7`, and `v18` at `#q8`.
           
           Since both rovers can image all objectives, we can distribute the tasks. Let's use `v12` for `v18` and `v17`, and `v14` for `v19`.
           
           **Rock Analysis:**
           - Rover `v12` can sample `v1` at `#q14`, `v3` at `#q9`, `v4` at `#q18`, `v5` at `#q10`, `v7` at `#q16`, `v8` at `#q17`.
           - Rover `v14` can sample `v1` at `#q4`, `v3` at `#o5`, `v4` at `#q13`, `v5` at `#q3`, `v7` at `#q12`, `v8` at `#q15`.
           
           Both rovers have free storage initially, but they can only carry one rock at a time (since `free` becomes `full` and `full` becomes `free` when dropped). So, we will need to sample, then send analysis, then drop the rock, and repeat for all rocks.
           
           **Communication:**
           - Rover `v12` can communicate at `#q1` with lander `v9`.
           - Rover `v14` can communicate at `#q2` with lander `v9`.
           
           We will ensure the rovers are at communication-visible positions for sending images and analyses.
           
           **Plan Strategy:**
           
           1.  **Rover `v12` tasks:**
               *   Image `v18`, `v17`.
               *   Sample `v3`, `v4`, `v1`, `v5`, `v7`, `v8` (in sequence, dropping after each analysis).
               *   Send images and analyses.
           2.  **Rover `v14` tasks:**
               *   Image `v19`.
               *   Sample remaining rocks (if any, but it seems `v12` can handle all).
               *   Send images and analyses.
           
           Let's optimize for minimal movement and efficient use of each rover.
           
           **Rover v12:**
           1.  Calibrate and take image of `v18` at `#q0`.
           2.  Move to `#q1` to send image of `v18`.
           3.  Calibrate and take image of `v17` at `#q5`.
           4.  Move to `#q1` to send image of `v17`.
           5.  Calibrate and take image of `v19` at `#q6`.
           6.  Move to `#q1` to send image of `v19`. Now all images are taken and sent by `v12`.
           7.  Sample rock `v3` at `#q9`.
           8.  Move to `#q1` to send analysis of `v3`.
           9.  Drop `v3`.
           10. Sample rock `v4` at `#q18`.
           11. Move to `#q1` to send analysis of `v4`.
           12. Drop `v4`.
           13. Sample rock `v1` at `#q14`.
           14. Move to `#q1` to send analysis of `v1`.
           15. Drop `v1`.
           16. Sample rock `v5` at `#q10`.
           17. Move to `#q1` to send analysis of `v5`.
           18. Drop `v5`.
           19. Sample rock `v7` at `#q16`.
           20. Move to `#q1` to send analysis of `v7`.
           21. Drop `v7`.
           22. Sample rock `v8` at `#q17`.
           23. Move to `#q1` to send analysis of `v8`.
           24. Drop `v8`.
           
           The `new-axiom@0()` goal states that received images for `v17`, `v18`, `v19` and received analysis for `v2` (type of v1,v3,v4) and `v6` (type of v5,v7,v8) are needed. All these can be achieved by Rover `v12`. Rover `v14` does not need to perform any action for this goal.
           
           --Plan--:
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #t0 #q1)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (move v12 #q1 #t28 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t24 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (move v12 #q1 #t32 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t19 #q1)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (move v12 #q1 #t16 #q9)
           (sample_rock v12 #q9 v3 v16)
           (send_analysis v12 #q1 #y1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q18)
           (sample_rock v12 #q18 v4 v16)
           (move v12 #q18 #o2 #q1)
           (send_analysis v12 #q1 #y1 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q1 #t30 #q14)
           (sample_rock v12 #q14 v1 v16)
           (send_analysis v12 #q1 #y1 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q1 #t17 #q10)
           (sample_rock v12 #q10 v5 v16)
           (send_analysis v12 #q1 #y1 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q1 #t34 #q16)
           (sample_rock v12 #q16 v7 v16)
           (send_analysis v12 #q1 #y1 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q17)
           (sample_rock v12 #q17 v8 v16)
           (move v12 #q17 #o2 #q1)
           (send_analysis v12 #q1 #y1 v9 v8)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q0) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `v12` was not at `#q0` when `calibrate` was called. `v12` starts at `v13`.
           
           Let's re-evaluate the plan, ensuring each action's preconditions are met.
           
           **Initial State of `v12`:** `atconf(v12, v13)`
           
           **Goal Analysis:**
           The goal `new-axiom@0()` requires:
           1.  `atconf(v12, v13)` or `atconf(v14, v15)` (among other configurations for v12 and v14, but we only need one for each rover, and the initial state already satisfies this).
           2.  `free(v12, v16)` and `free(v14, v16)` (initially true).
           3.  `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`.
           4.  `type(?stone, v2)` and `receivedanalysis(?stone)`. The rocks of type `v2` are `v1`, `v3`, `v4`. So, `receivedanalysis(v1)`, `receivedanalysis(v3)`, `receivedanalysis(v4)` are needed.
           5.  `type(?soil, v6)` and `receivedanalysis(?soil)`. The rocks of type `v6` are `v5`, `v7`, `v8`. So, `receivedanalysis(v5)`, `receivedanalysis(v7)`, `receivedanalysis(v8)` are needed.
           
           We will focus on Rover `v12` to achieve all imaging and analysis tasks. Rover `v14` can remain at its initial position.
           
           **Revised Plan for `v12`:**
           
           1.  **Move `v12` to `#q0` for imaging `v18`.**
               *   `v12` is at `v13`. Need to move to `#q0`. Action: `(move v12 v13 #t3 #q0)`
           2.  **Image `v18` and send it.**
               *   Calibrate camera `v10` for `v18` at `#q0`.
               *   Take image of `v18` with camera `v10` in mode `v11` at `#q0`.
               *   Move to `#q1` for communication. Action: `(move v12 #q0 #t0 #q1)`
               *   Send image of `v18` to lander `v9` at `#q1`.
           3.  **Image `v17` and send it.**
               *   Move to `#q5` for imaging `v17`. Action: `(move v12 #q1 #t28 #q5)`
               *   Calibrate camera `v10` for `v17` at `#q5`.
               *   Take image of `v17` with camera `v10` in mode `v11` at `#q5`.
               *   Move to `#q1` for communication. Action: `(move v12 #q5 #t24 #q1)`
               *   Send image of `v17` to lander `v9` at `#q1`.
           4.  **Image `v19` and send it.**
               *   Move to `#q6` for imaging `v19`. Action: `(move v12 #q1 #t32 #q6)`
               *   Calibrate camera `v10` for `v19` at `#q6`.
               *   Take image of `v19` with camera `v10` in mode `v11` at `#q6`.
               *   Move to `#q1` for communication. Action: `(move v12 #q6 #t19 #q1)`
               *   Send image of `v19` to lander `v9` at `#q1`.
               *   All images are now received.
           5.  **Sample and analyze rocks of type `v2` (`v1`, `v3`, `v4`).**
               *   **Rock `v3`:**
                   *   Move to `#q9` to be above `v3`. Action: `(move v12 #q1 #t16 #q9)`
                   *   Sample `v3` into `v16`.
                   *   Send analysis of `v3` from `#q1` (need to move back). Action: `(move v12 #q9 #t12 #q1)`
                   *   Drop `v3` to free storage.
               *   **Rock `v4`:**
                   *   Move to `#q18` to be above `v4`. Action: `(move v12 #q1 #o2 #q18)`
                   *   Sample `v4` into `v16`.
                   *   Send analysis of `v4` from `#q1` (need to move back). Action: `(move v12 #q18 #o2 #q1)`
                   *   Drop `v4`.
               *   **Rock `v1`:**
                   *   Move to `#q14` to be above `v1`. Action: `(move v12 #q1 #t30 #q14)`
                   *   Sample `v1` into `v16`.
                   *   Send analysis of `v1` from `#q1` (need to move back). Action: `(move v12 #q14 #t29 #q1)`
                   *   Drop `v1`.
           6.  **Sample and analyze rocks of type `v6` (`v5`, `v7`, `v8`).**
               *   **Rock `v5`:**
                   *   Move to `#q10` to be above `v5`. Action: `(move v12 #q1 #t17 #q10)`
                   *   Sample `v5` into `v16`.
                   *   Send analysis of `v5` from `#q1` (need to move back). Action: `(move v12 #q10 #t13 #q1)`
                   *   Drop `v5`.
               *   **Rock `v7`:**
                   *   Move to `#q16` to be above `v7`. Action: `(move v12 #q1 #t34 #q16)`
                   *   Sample `v7` into `v16`.
                   *   Send analysis of `v7` from `#q1` (need to move back). Action: `(move v12 #q16 #t33 #q1)`
                   *   Drop `v7`.
               *   **Rock `v8`:**
                   *   Move to `#q17` to be above `v8`. Action: `(move v12 #q1 #o2 #q17)`
                   *   Sample `v8` into `v16`.
                   *   Send analysis of `v8` from `#q1` (need to move back). Action: `(move v12 #q17 #o2 #q1)`
                   *   Drop `v8`.
           
           All conditions for `new-axiom@0()` should now be met.
           
           --Plan--:
           (move v12 v13 #t3 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #t0 #q1)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (move v12 #q1 #t28 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t24 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (move v12 #q1 #t32 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t19 #q1)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (move v12 #q1 #t16 #q9)
           (sample_rock v12 #q9 v3 v16)
           (send_analysis v12 #q1 #y1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q18)
           (sample_rock v12 #q18 v4 v16)
           (move v12 #q18 #o2 #q1)
           (send_analysis v12 #q1 #y1 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q1 #t30 #q14)
           (sample_rock v12 #q14 v1 v16)
           (send_analysis v12 #q1 #y1 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q1 #t17 #q10)
           (sample_rock v12 #q10 v5 v16)
           (send_analysis v12 #q1 #y1 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q1 #t34 #q16)
           (sample_rock v12 #q16 v7 v16)
           (send_analysis v12 #q1 #y1 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q17)
           (sample_rock v12 #q17 v8 v16)
           (move v12 #q17 #o2 #q1)
           (send_analysis v12 #q1 #y1 v9 v8)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan was syntactically correct and the preconditions were met for each step. The issue "Fact is not satisfied: Atom new-axiom@0()" indicates that the overall goal, derived from the axiom, was not achieved. Let's re-examine the goal `new-axiom@0()` carefully, specifically its component atoms, and verify that all are indeed satisfied by the plan.
           
           The axiom `new-axiom@0()` has a conjunction of multiple conditions. Let's list them and cross-check:
           
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           1.  **`atconf(v12, v13)`:** In the initial state, `atconf(v12, v13)` is true. The plan moves `v12` around, but the final position of `v12` is `#q1`. This means `atconf(v12, v13)` is **NOT** true at the end of the plan. This is a crucial point. The axiom requires `atconf(v12, v13)` and `atconf(v14, v15)` to be true *simultaneously* at the end of the plan. This implies that rover `v12` must return to `v13` (or `v14` to `v15` if `v14` moved) at the end, or `v13` refers to a general configuration `v12` could be in.
               Given `conf(v12, v13)` and `atconf(v12, v13)` in the initial state, it's highly likely that the axiom implicitly means that there must *exist* a configuration `q` such that `atconf(v12, q)` and `atconf(v14, q')` for some `q'` are true, and that the original `v13` and `v15` are not necessarily the *final* configurations. However, if the checker is strict, it requires *exactly* `atconf(v12, v13)` and `atconf(v14, v15)`. Since `v14` does not move, `atconf(v14, v15)` remains true. For `v12`, it will end at `#q1`, not `v13`.
           
               Let's assume the checker is strict and requires `atconf(v12, v13)` and `atconf(v14, v15)` at the very end. This means `v12` must return to `v13`.
           
           2.  **`free(v12, v16)`:** This is true initially. The plan samples rocks, making `full(v12, v16)`, but then `drop_rock` is called, making `free(v12, v16)` again. So, `free(v12, v16)` will be true at the end.
           3.  **`free(v14, v16)`:** `v14` does not sample any rocks, so `free(v14, v16)` remains true throughout.
           4.  **`receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`:** The plan includes `take_image` and `send_image` for `v17`, `v18`, `v19` using `v12`. These should be satisfied.
           5.  **`type(?stone, v2)` and `receivedanalysis(?stone)`:** The rocks of type `v2` are `v1`, `v3`, `v4`. The plan samples and sends analysis for `v1`, `v3`, `v4`. These should be satisfied.
           6.  **`type(?soil, v6)` and `receivedanalysis(?soil)`:** The rocks of type `v6` are `v5`, `v7`, `v8`. The plan samples and sends analysis for `v5`, `v7`, `v8`. These should be satisfied.
           
           The only problematic part is the final configuration of `v12`. We must ensure `v12` is at `v13` at the end of the plan.
           
           **Revised Strategy for `v12`:**
           
           Perform all necessary actions, and as the *very last step*, move `v12` back to `v13`.
           
           1.  **Move `v12` to `#q0` for imaging `v18`.**
               *   `atconf(v12, v13)` initially.
               *   `(move v12 v13 #t3 #q0)`
           2.  **Image `v18` and send it.**
               *   `(calibrate v12 #q0 #y0 v18 v10)`
               *   `(take_image v12 #q0 #y0 v18 v10 v11)`
               *   `(move v12 #q0 #t0 #q1)`
               *   `(send_image v12 #q1 #y1 v9 v18 v11)`
           3.  **Image `v17` and send it.**
               *   `(move v12 #q1 #t28 #q5)`
               *   `(calibrate v12 #q5 #y3 v17 v10)`
               *   `(take_image v12 #q5 #y3 v17 v10 v11)`
               *   `(move v12 #q5 #t24 #q1)`
               *   `(send_image v12 #q1 #y1 v9 v17 v11)`
           4.  **Image `v19` and send it.**
               *   `(move v12 #q1 #t32 #q6)`
               *   `(calibrate v12 #q6 #y4 v19 v10)`
               *   `(take_image v12 #q6 #y4 v19 v10 v11)`
               *   `(move v12 #q6 #t19 #q1)`
               *   `(send_image v12 #q1 #y1 v9 v19 v11)`
           5.  **Sample and analyze rocks of type `v2` (`v1`, `v3`, `v4`).**
               *   **Rock `v3`:**
                   *   `(move v12 #q1 #t16 #q9)`
                   *   `(sample_rock v12 #q9 v3 v16)`
                   *   `(move v12 #q9 #t12 #q1)`
                   *   `(send_analysis v12 #q1 #y1 v9 v3)`
                   *   `(drop_rock v12 v16)`
               *   **Rock `v4`:**
                   *   `(move v12 #q1 #o2 #q18)`
                   *   `(sample_rock v12 #q18 v4 v16)`
                   *   `(move v12 #q18 #o2 #q1)`
                   *   `(send_analysis v12 #q1 #y1 v9 v4)`
                   *   `(drop_rock v12 v16)`
               *   **Rock `v1`:**
                   *   `(move v12 #q1 #t30 #q14)`
                   *   `(sample_rock v12 #q14 v1 v16)`
                   *   `(move v12 #q14 #t29 #q1)`
                   *   `(send_analysis v12 #q1 #y1 v9 v1)`
                   *   `(drop_rock v12 v16)`
           6.  **Sample and analyze rocks of type `v6` (`v5`, `v7`, `v8`).**
               *   **Rock `v5`:**
                   *   `(move v12 #q1 #t17 #q10)`
                   *   `(sample_rock v12 #q10 v5 v16)`
                   *   `(move v12 #q10 #t13 #q1)`
                   *   `(send_analysis v12 #q1 #y1 v9 v5)`
                   *   `(drop_rock v12 v16)`
               *   **Rock `v7`:**
                   *   `(move v12 #q1 #t34 #q16)`
                   *   `(sample_rock v12 #q16 v7 v16)`
                   *   `(move v12 #q16 #t33 #q1)`
                   *   `(send_analysis v12 #q1 #y1 v9 v7)`
                   *   `(drop_rock v12 v16)`
               *   **Rock `v8`:**
                   *   `(move v12 #q1 #o2 #q17)`
                   *   `(sample_rock v12 #q17 v8 v16)`
                   *   `(move v12 #q17 #o2 #q1)`
                   *   `(send_analysis v12 #q1 #y1 v9 v8)`
                   *   `(drop_rock v12 v16)`
           7.  **Return `v12` to `v13`.**
               *   `(move v12 #q1 #t6 v13)`
           
           This ensures all previous steps are done and `v12` is in the required final configuration.
           
           --Plan--:
           (move v12 v13 #t3 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #t0 #q1)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (move v12 #q1 #t28 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t24 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (move v12 #q1 #t32 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t19 #q1)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (move v12 #q1 #t16 #q9)
           (sample_rock v12 #q9 v3 v16)
           (send_analysis v12 #q1 #y1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q18)
           (sample_rock v12 #q18 v4 v16)
           (move v12 #q18 #o2 #q1)
           (send_analysis v12 #q1 #y1 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q1 #t30 #q14)
           (sample_rock v12 #q14 v1 v16)
           (send_analysis v12 #q1 #y1 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q1 #t17 #q10)
           (sample_rock v12 #q10 v5 v16)
           (send_analysis v12 #q1 #y1 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q1 #t34 #q16)
           (sample_rock v12 #q16 v7 v16)
           (send_analysis v12 #q1 #y1 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q17)
           (sample_rock v12 #q17 v8 v16)
           (move v12 #q17 #o2 #q1)
           (send_analysis v12 #q1 #y1 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q1 #t6 v13)

