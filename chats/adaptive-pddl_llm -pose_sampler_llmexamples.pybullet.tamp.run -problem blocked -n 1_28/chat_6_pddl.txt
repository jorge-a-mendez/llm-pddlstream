User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #t4: object
           #t5: object
           #t6: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom arm(v6)
           Atom graspable(v8)
           Atom stackable(v8, v10)
           Atom aconf(v6, v7)
           Atom bconf(v3)
           Atom supported(v15, v16, v11)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)
           Atom supported(v8, v9, v11)
           Atom aconf(v4, v5)
           Atom atpose(v15, v16)
           Atom stackable(v12, v18)
           Atom stackable(v8, v18)
           Atom arm(v4)
           Atom handempty(v4)
           Atom canmove()
           Atom stackable(v15, v10)
           Atom pose(v15, v16)
           Atom atpose(v8, v9)
           Atom ataconf(v6, v7)
           Atom handempty(v6)
           Atom supported(v12, v13, v14)
           Atom atpose(v12, v13)
           Atom type(v8, v17)
           Atom graspable(v12)
           Atom graspable(v15)
           Atom stackable(v12, v10)
           Atom atbconf(v3)
           Atom controllable(v4)
           Atom type(v12, v17)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom ataconf(v4, v5)
           Atom grasp(v8, v22)
           Atom grasp(v8, v20)
           Atom grasp(v8, v21)
           Atom grasp(v8, v23)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, v9, v22, #q2, #t4)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v12, #o2, v18)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v19, v20, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v8, v19, v22, #q3, #t6)
           Atom kin(v4, v8, v19, v23, #o3, #o4)
           Atom kin(v4, v8, v19, v21, #o3, #o4)
           Atom grasp(v12, #o1)
           Atom grasp(v15, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(v3, #o0, #q3)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 #o3 #o4))
           ((place v4 v8 v19 v20 #o3 #o4))
           ((pick v4 v8 v19 v21 #o3 #o4))
           ((place v4 v8 v19 v21 #o3 #o4))
           ((pick v4 v8 v19 v22 #q3 #t6))
           ((place v4 v8 v19 v22 #q3 #t6))
           ((pick v4 v8 v19 v23 #o3 #o4))
           ((place v4 v8 v19 v23 #o3 #o4))
           ((pick v4 v8 v9 v22 #q2 #t4))
           ((place v4 v8 v9 v22 #q2 #t4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, some of which are stackable and graspable. We have two arms, `v4` and `v6`, both currently handempty. There are three objects, `v8`, `v12`, and `v15`, located at various poses. `v8` and `v12` are of type `v17`. `v8` is currently at `v9` on `v11`, and `v15` is at `v16` on `v11`. `v12` is at `v13` on `v14`. The robot's base is at `v3`.
           
           The goal `new-axiom@0()` translates to `on(?green, v18)` and `type(?green, v17)`. From the initial state, we know `type(v8, v17)` and `type(v12, v17)`. This means that either `v8` or `v12` can be the `?green` object.
           The goal then becomes to place either `v8` or `v12` on `v18`.
           
           Let's choose `v8` to be the `?green` object. `v8` is currently at `v9` on `v11`. We need to pick it up and place it on `v18`.
           From the initial state, we have `atpose(v8, v9)` and `handempty(v4)`. We also have `kin(v4, v8, v9, v22, #q2, #t4)`, which allows us to pick `v8` with arm `v4` at pose `v9` using grasp `v22` when the base is at `#q2`.
           However, the initial base configuration is `v3`. So, we need to move the base from `v3` to `#q2`. The action `(move_base v3 #q2 #t5)` is available and will achieve this.
           
           After picking `v8`, we need to place it on `v18`. We have `pose(v8, v19)` and `supported(v8, v19, v18)`. This means we can place `v8` at pose `v19` on `v18`. The action `(place v4 v8 v19 v22 #q3 #t6)` is available for placing `v8` at `v19` using grasp `v22` with base at `#q3`. Therefore, after picking, we need to move the base from `#q2` to `#q3`. The action `(move_base #q2 #q3 #o0)` is available.
           
           So, the plan would be:
           1. Move the base to a configuration where `v4` can pick up `v8`.
           2. Pick up `v8` with `v4`.
           3. Move the base to a configuration where `v4` can place `v8` on `v18`.
           4. Place `v8` on `v18`.
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v8 v9 v22 #q2 #t4)
           (move_base #q2 #q3 #o0)
           (place v4 v8 v19 v22 #q3 #t6)

