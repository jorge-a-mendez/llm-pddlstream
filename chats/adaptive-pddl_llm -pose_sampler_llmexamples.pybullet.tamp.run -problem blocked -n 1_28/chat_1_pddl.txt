User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom arm(v6)
           Atom graspable(v8)
           Atom stackable(v8, v10)
           Atom aconf(v6, v7)
           Atom bconf(v3)
           Atom supported(v15, v16, v11)
           Atom supported(v8, v9, v11)
           Atom aconf(v4, v5)
           Atom atpose(v15, v16)
           Atom stackable(v12, v18)
           Atom stackable(v8, v18)
           Atom arm(v4)
           Atom handempty(v4)
           Atom canmove()
           Atom stackable(v15, v10)
           Atom pose(v15, v16)
           Atom atpose(v8, v9)
           Atom ataconf(v6, v7)
           Atom handempty(v6)
           Atom supported(v12, v13, v14)
           Atom atpose(v12, v13)
           Atom type(v8, v17)
           Atom graspable(v12)
           Atom graspable(v15)
           Atom stackable(v12, v10)
           Atom atbconf(v3)
           Atom controllable(v4)
           Atom type(v12, v17)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom ataconf(v4, v5)
           Atom grasp(v8, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v15, #o1)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom supported(v12, #o2, v18)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, `v8`, `v12`, and `v15` which are graspable and stackable. `v11` and `v14` are surfaces on which objects `v8`, `v12`, `v15` are supported. `v10` and `v18` are also surfaces. `v6` and `v4` are arms, and both are currently empty. The robot is at base configuration `v3`. The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)`. In this specific problem, `?green` is `v8` or `v12`, as they are of type `v17`. So the goal is to have `v8` or `v12` on `v18`. Currently, `v8` is on `v11` at pose `v9`, and `v12` is on `v14` at pose `v13`.
           
           The only available action is `move_base v3 v3 #o0`, which moves the robot from `v3` to `v3` using trajectory `#o0`. This action doesn't change the state of any object being on a surface. Since no pick or place actions are available, and the goal requires moving an object to a new surface, the goal is not achievable.

