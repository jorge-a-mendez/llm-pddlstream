User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v16, v18)
           Atom graspable(v14)
           Atom supported(v12, v13, v11)
           Atom canmove()
           Atom graspable(v16)
           Atom atpose(v14, v15)
           Atom controllable(v4)
           Atom atpose(v12, v13)
           Atom stackable(v14, v10)
           Atom aconf(v4, v5)
           Atom pose(v16, v17)
           Atom atbconf(v3)
           Atom bconf(v3)
           Atom stackable(v14, v18)
           Atom supported(v16, v17, v11)
           Atom ataconf(v6, v7)
           Atom pose(v8, v9)
           Atom stackable(v12, v10)
           Atom atpose(v16, v17)
           Atom graspable(v12)
           Atom stackable(v12, v18)
           Atom supported(v14, v15, v11)
           Atom arm(v6)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom stackable(v8, v18)
           Atom graspable(v8)
           Atom pose(v14, v15)
           Atom stackable(v8, v10)
           Atom pose(v12, v13)
           Atom atpose(v8, v9)
           Atom handempty(v6)
           Atom arm(v4)
           Atom supported(v8, v9, v11)
           Atom stackable(v16, v10)
           Atom aconf(v6, v7)
           Atom grasp(v14, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v16, #o1)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v16, #o2, v18)
           Atom grasp(v12, #o1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom supported(v14, #o2, v18)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v16 #o2 #o1 #o3 #o4))
           ((place v4 v16 #o2 #o1 #o3 #o4))
           ((pick v4 v16 v17 #o1 #o3 #o4))
           ((place v4 v16 v17 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place objects v8, v12, v14, and v16 onto object v18.
           Currently, all these objects (v8, v12, v14, v16) are supported by v11, and some are also supported by v10 or v18 at different poses. We need to use the robot arm v4 to pick each object from its current pose and place it onto a pose on v18. Since we want to place all objects on v18, we can use the poses `(#o2)` that are supported by `v18`.
           
           The current state indicates the following:
           - Arm `v4` is `handempty` and at `aconf v5`.
           - Robot base is at `bconf v3`.
           - Objects `v8`, `v12`, `v14`, `v16` are `graspable`.
           - `v8` is at `atpose v9` and `supported` by `v11` at `v9`.
           - `v12` is at `atpose v13` and `supported` by `v11` at `v13`.
           - `v14` is at `atpose v15` and `supported` by `v11` at `v15`.
           - `v16` is at `atpose v17` and `supported` by `v11` at `v17`.
           - `v18` is an object that can support `v8`, `v12`, `v14`, and `v16` at pose `#o2`.
           
           The plan will involve picking each object and placing it on v18. We can use the `#o2` pose for placing on `v18`. We can also move the base to `#o3` if needed, but it seems that all pick and place actions are available with `bconf #o3`. Since `v3` and `#o3` are available with `basemotion` `v3 -> #o3 -> v3`, we can pick at `bconf #o3` and place at `bconf #o3`. The `pick` and `place` actions provided use `#o3` as the `bconf`. We need to move the base from `v3` to `#o3` once, then perform all pick and place operations, and then move back to `v3` (although the problem doesn't require moving back).
           
           1. **Move base to #o3**: The pick/place actions use `bconf #o3`. So, we need to move the base from `v3` to `#o3`.
           2. **Pick v8**: Pick `v8` from `v9`.
           3. **Place v8**: Place `v8` onto `v18` at pose `#o2`.
           4. **Pick v12**: Pick `v12` from `v13`.
           5. **Place v12**: Place `v12` onto `v18` at pose `#o2`.
           6. **Pick v14**: Pick `v14` from `v15`.
           7. **Place v14**: Place `v14` onto `v18` at pose `#o2`.
           8. **Pick v16**: Pick `v16` from `v17`.
           9. **Place v16**: Place `v16` onto `v18` at pose `#o2`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v16 v17 #o1 #o3 #o4)
           (place v4 v16 #o2 #o1 #o3 #o4)

