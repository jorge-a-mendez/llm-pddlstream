User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v4 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.413, -0.886), (0.49, -0.809)).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.521, 1.987), (-0.431, 2.077)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.454, -0.303), (-1.332, -0.182)).
           Object v15 is a base configuration with (x, y, theta) = (-1.0, -1.75, 0.0).
           Object v9 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.405, -2.346), (-1.395, -1.654)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.924, 1.966), (2.013, 2.055)).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.863, 2.002), (-1.78, 2.084)).
           Object v7 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.208, 0.246), (-2.067, 0.387)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.487, 1.794), (0.573, 1.88)).
           Object v1 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.862, -1.224), (-0.759, -1.121)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.187, -1.929), (-0.821, -1.571)).
           Object v3 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.221, 1.787), (1.317, 1.883)).
           Object v5 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.532, 0.537), (1.67, 0.675)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.821, -1.929), (1.187, -1.571)).
           Object v13 is a base configuration with (x, y, theta) = (1.0, -1.75, 3.142).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v3, v2)
           Atom rock(v1)
           Atom lander(v9)
           Atom atconf(v12, v13)
           Atom rock(v4)
           Atom objective(v19)
           Atom rock(v5)
           Atom objective(v18)
           Atom rover(v14)
           Atom type(v8, v6)
           Atom type(v4, v2)
           Atom conf(v14, v15)
           Atom rock(v3)
           Atom camera(v10)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom supports(v10, v11)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom store(v16)
           Atom mode(v11)
           Atom rock(v8)
           Atom onboard(v10, v12)
           Atom conf(v12, v13)
           Atom free(v14, v16)
           Atom type(v7, v6)
           Atom objective(v17)
           Atom objective(v20)
           Atom free(v12, v16)
           Atom rock(v7)
           Atom atconf(v14, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v4)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom conf(v14, #o3)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v8)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #o5, v5)
           Atom above(v14, #o5, v5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `new-axiom@0()`, which is an axiom representing a complex state involving two rovers (`v12`, `v14`), a store (`v16`), multiple `receivedimage` predicates for objectives (`v17`, `v18`, `v19`, `v20`) with mode `v11`, and `receivedanalysis` for rocks `v2` (stone) and `v6` (soil).
           
           Looking at the initial state and the available actions, several critical observations can be made:
           
           1.  **Limited Actions:** The only available actions are `move`, `drop_rock`.
           2.  **No Image or Analysis Actions:** There are no `take_image`, `calibrate`, `send_image`, `sample_rock`, or `send_analysis` actions available in the provided list of valid action instances. This is a severe limitation, as the goal explicitly requires `receivedimage` and `receivedanalysis` predicates to be true.
           3.  **Axiom Dependencies:** The axiom `new-axiom@0()` requires `receivedimage` for four objectives and `receivedanalysis` for two types of rocks. Without the actions to generate these, the goal cannot be achieved.
           4.  **Initial State Analysis:**
               *   `atconf(v12, v13)` and `atconf(v14, v15)` are true.
               *   `free(v12, v16)` and `free(v14, v16)` are true.
               *   There are no `receivedimage` or `receivedanalysis` predicates in the initial state.
           
           Given that the goal requires conditions (like `receivedimage` and `receivedanalysis`) that can only be met by actions not present in the allowed action instances (e.g., `take_image`, `send_image`, `sample_rock`, `send_analysis`), the goal is unreachable. The `move` actions only change the rover's configuration, and `drop_rock` would only change the `full/free` state of the store, neither of which directly contributes to the `receivedimage` or `receivedanalysis` requirements.
           
           Therefore, the problem is unsolvable with the given allowed actions.

