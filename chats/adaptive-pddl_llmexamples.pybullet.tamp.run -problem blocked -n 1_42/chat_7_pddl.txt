User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #q4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v4, v5)
           Atom pose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom ~test-cfree-traj-pose-negative(v30, v15, v16)
           Atom supported(v15, v16, v11)
           Atom stackable(v15, v10)
           Atom graspable(v8)
           Atom canmove()
           Atom arm(v6)
           Atom stackable(v8, v18)
           Atom bconf(v3)
           Atom arm(v4)
           Atom controllable(v4)
           Atom stackable(v8, v10)
           Atom type(v12, v17)
           Atom ataconf(v4, v5)
           Atom atpose(v12, v13)
           Atom graspable(v12)
           Atom pose(v15, v16)
           Atom graspable(v15)
           Atom stackable(v12, v10)
           Atom handempty(v4)
           Atom atpose(v8, v9)
           Atom type(v8, v17)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)
           Atom aconf(v6, v7)
           Atom pose(v12, v13)
           Atom atbconf(v3)
           Atom supported(v12, v13, v14)
           Atom atpose(v15, v16)
           Atom stackable(v12, v18)
           Atom ataconf(v6, v7)
           Atom handempty(v6)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom grasp(v15, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #o1)
           Atom pose(v8, v35)
           Atom supported(v8, v35, v18)
           Atom pose(v8, v28)
           Atom supported(v8, v28, v18)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, v20)
           Atom grasp(v8, v22)
           Atom grasp(v8, v23)
           Atom grasp(v8, v21)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v8, v28, v22, #q4, #t8)
           Atom bconf(#q3)
           Atom atraj(#t7)
           Atom kin(v4, v8, v19, v22, #q3, #t7)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v8, v9, v22, #q2, #t5)
           Atom bconf(v33)
           Atom atraj(v34)
           Atom kin(v4, v8, v28, v21, v33, v34)
           Atom bconf(v31)
           Atom atraj(v32)
           Atom kin(v4, v8, v28, v23, v31, v32)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v23, v26, v27)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v3, #o0, v26)
           Atom bconf(v29)
           Atom atraj(v30)
           Atom kin(v4, v8, v28, v20, v29, v30)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v20, v24, v25)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v24, #o0, v26)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(v26, #o0, #q2)
           Atom basemotion(v24, #o0, #q2)
           Atom basemotion(#q2, #o0, v26)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, v24)
           Atom basemotion(v24, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, v24)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, v26)
           Atom basemotion(v26, #o0, #q3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, v24)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(v24, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v24 #o0))
           ((move_base #q3 v26 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q3 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q3 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t6))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 v24 v25))
           ((place v4 v8 v19 v20 v24 v25))
           ((pick v4 v8 v19 v22 #q3 #t7))
           ((place v4 v8 v19 v22 #q3 #t7))
           ((pick v4 v8 v19 v23 v26 v27))
           ((place v4 v8 v19 v23 v26 v27))
           ((pick v4 v8 v9 v22 #q2 #t5))
           ((place v4 v8 v9 v22 #q2 #t5))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, including `v8`, `v12`, and `v15`, which are described as `graspable` and `stackable`. There are two arms, `v4` and `v6`, and both are `handempty`. The robot's base is at configuration `v3`. There are various poses for the objects (e.g., `v9`, `v13`, `v16`, `#o2`, `v19`, `v28`, `v35`) and several regions (`v10`, `v11`, `v14`, `v18`). `v11` and `v14` are supporting `v8`, `v15`, and `v12` respectively. The goal `new-axiom@0()` is defined as `on(?green, v18)` and `type(?green, v17)`. From the initial state, we know `type(v8, v17)` and `atpose(v8, v9)` and `supported(v8, v9, v11)`. So, `v8` is the object that can fulfill the `?green` role. Therefore, the goal simplifies to `on(v8, v18)`. This means we need to place `v8` on `v18`. Currently, `v8` is on `v11` (since `atpose(v8, v9)` and `supported(v8, v9, v11)`). There are several poses for `v8` that are supported by `v18`: `v35`, `v28`, `v19`. We need to pick up `v8` and place it at one of these poses.
           
           Looking at the available actions, we have `pick` and `place` actions for `v8` with arm `v4`.
           One of the `pick` actions is `(pick v4 v8 v9 v22 #q2 #t5)`, which picks `v8` from its current pose `v9` using grasp `v22` and involves base configuration `#q2` and arm trajectory `#t5`. This action is applicable since `atpose(v8, v9)`, `handempty(v4)`, `atbconf(v3)`, and the various cfree predicates are satisfied (`~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)` is explicitly stated, and `~test-cfree-traj-pose-negative(#t5, v15, v16)` and `~test-cfree-traj-pose-negative(#t5, v12, v13)` are assumed if not explicitly negated by other facts). The base needs to move from `v3` to `#q2`. We have `basemotion(v3, #t6, #q2)`, which means we can use `move_base(v3, #q2, #t6)`.
           
           After picking `v8`, `v4` will be holding `v8`. Then, we need to place `v8` on a pose supported by `v18`. Let's consider `place v4 v8 v19 v22 #q3 #t7`. This action places `v8` at `v19` using grasp `v22`, involving base configuration `#q3` and arm trajectory `#t7`. For this, the robot base needs to move from `#q2` to `#q3`. We have `basemotion(#q2, #o0, #q3)`.
           
           So the plan would be:
           1. Move the base from `v3` to `#q2`.
           2. Pick `v8` from `v9` with arm `v4`.
           3. Move the base from `#q2` to `#q3`.
           4. Place `v8` onto `v19` with arm `v4`.
           
           Let's check the preconditions carefully:
           Initial state:
           `atbconf(v3)`
           `atpose(v8, v9)`
           `handempty(v4)`
           
           Action 1: `(move_base v3 #q2 #t6)`
           Preconditions:
             `basemotion(v3, #t6, #q2)`: Yes, in initial state.
             `atbconf(v3)`: Yes, in initial state.
             `canmove()`: Yes, in initial state.
           Effects: `atbconf(#q2)`, `negated atbconf(v3)`, `negated canmove()`
           
           Action 2: `(pick v4 v8 v9 v22 #q2 #t5)`
           Preconditions:
             `kin(v4, v8, v9, v22, #q2, #t5)`: Yes, in initial state.
             `atpose(v8, v9)`: Yes, in initial state.
             `handempty(v4)`: Yes, in initial state.
             `atbconf(#q2)`: Yes, achieved by `move_base`.
             `~unsafeapproach(v8, v9, v22)`: `~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)` is in initial state. We also need to ensure no other objects make it unsafe. `v12` is at `v13`. It is not explicitly stated that `~test-cfree-approach-pose-negative(v8, v9, v22, v12, v13)` is true, but since it's not negated, we assume it's safe.
             `~unsafeatraj(#t5)`: `~test-cfree-traj-pose-negative(v30, v15, v16)` is in initial state. It is not stated that `~test-cfree-traj-pose-negative(#t5, v15, v16)` or `~test-cfree-traj-pose-negative(#t5, v12, v13)` is false, so we assume it's safe.
           Effects: `atgrasp(v4, v8, v22)`, `canmove()`, `negated atpose(v8, v9)`, `negated handempty(v4)`
           
           Action 3: `(move_base #q2 #q3 #o0)`
           Preconditions:
             `basemotion(#q2, #o0, #q3)`: Yes, in initial state.
             `atbconf(#q2)`: Yes, achieved by previous `move_base`.
             `canmove()`: Yes, achieved by `pick`.
           Effects: `atbconf(#q3)`, `negated atbconf(#q2)`, `negated canmove()`
           
           Action 4: `(place v4 v8 v19 v22 #q3 #t7)`
           Preconditions:
             `kin(v4, v8, v19, v22, #q3, #t7)`: Yes, in initial state.
             `atgrasp(v4, v8, v22)`: Yes, achieved by `pick`.
             `atbconf(#q3)`: Yes, achieved by `move_base`.
             `~unsafepose(v8, v19)`: `supported(v8, v19, v18)` is in the initial state. We also need `~test-cfree-pose-pose-negative(v8, v19, v15, v16)` and `~test-cfree-pose-pose-negative(v8, v19, v12, v13)`. These are not negated, so assumed safe.
             `~unsafeapproach(v8, v19, v22)`: Similar to `pick`, assuming it's safe.
             `~unsafeatraj(#t7)`: Similar to `pick`, assuming it's safe.
           Effects: `atpose(v8, v19)`, `handempty(v4)`, `canmove()`, `negated atgrasp(v4, v8, v22)`
           
           After Action 4, `atpose(v8, v19)` is true. We also have `supported(v8, v19, v18)` in the initial state. Therefore, by the axiom, `on(v8, v18)` is true. Combined with `type(v8, v17)`, the goal `on(?green, v18)` and `type(?green, v17)` is satisfied (where `?green` is `v8`).
           
           --Plan--:
           (move_base v3 #q2 #t6)
           (pick v4 v8 v9 v22 #q2 #t5)
           (move_base #q2 #q3 #o0)
           (place v4 v8 v19 v22 #q3 #t7)

