User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #q4: object
           #t10: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v4, v5)
           Atom pose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom ~test-cfree-traj-pose-negative(v30, v15, v16)
           Atom supported(v15, v16, v11)
           Atom stackable(v15, v10)
           Atom graspable(v8)
           Atom canmove()
           Atom arm(v6)
           Atom stackable(v8, v18)
           Atom bconf(v3)
           Atom arm(v4)
           Atom controllable(v4)
           Atom stackable(v8, v10)
           Atom type(v12, v17)
           Atom ataconf(v4, v5)
           Atom atpose(v12, v13)
           Atom graspable(v12)
           Atom pose(v15, v16)
           Atom graspable(v15)
           Atom stackable(v12, v10)
           Atom handempty(v4)
           Atom atpose(v8, v9)
           Atom type(v8, v17)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)
           Atom aconf(v6, v7)
           Atom pose(v12, v13)
           Atom atbconf(v3)
           Atom supported(v12, v13, v14)
           Atom atpose(v15, v16)
           Atom stackable(v12, v18)
           Atom ataconf(v6, v7)
           Atom handempty(v6)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom grasp(v15, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #o1)
           Atom pose(v8, v35)
           Atom supported(v8, v35, v18)
           Atom pose(v8, v28)
           Atom supported(v8, v28, v18)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, v20)
           Atom grasp(v8, v22)
           Atom grasp(v8, v23)
           Atom grasp(v8, v21)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v8, v28, v22, #q4, #t8)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v8, v9, v22, #q2, #t5)
           Atom bconf(#q3)
           Atom atraj(#t7)
           Atom kin(v4, v8, v19, v22, #q3, #t7)
           Atom bconf(v33)
           Atom atraj(v34)
           Atom kin(v4, v8, v28, v21, v33, v34)
           Atom bconf(v31)
           Atom atraj(v32)
           Atom kin(v4, v8, v28, v23, v31, v32)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v23, v26, v27)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v3, #o0, v26)
           Atom bconf(v29)
           Atom atraj(v30)
           Atom kin(v4, v8, v28, v20, v29, v30)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v20, v24, v25)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(#q3, #o0, v26)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, v24)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(v24, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(v26, #o0, #q3)
           Atom basemotion(v24, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t10)
           Atom basemotion(#q2, #t10, #q3)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(v26, #o0, #q2)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(#q2, #o0, v26)
           Atom basemotion(#q2, #o0, v24)
           Atom basemotion(#q3, #o0, #q2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, v24)
           Atom basemotion(#o3, #o0, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q3 #t10))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v24 #o0))
           ((move_base #q3 v26 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q3 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q3 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t6))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 v24 v25))
           ((place v4 v8 v19 v20 v24 v25))
           ((pick v4 v8 v19 v22 #q3 #t7))
           ((place v4 v8 v19 v22 #q3 #t7))
           ((pick v4 v8 v19 v23 v26 v27))
           ((place v4 v8 v19 v23 v26 v27))
           ((pick v4 v8 v9 v22 #q2 #t5))
           ((place v4 v8 v9 v22 #q2 #t5))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `(on ?green v18)`. In the initial state, `v8` is `green` (`type(v8, v17)`) and `v18` is a table (based on `stackable(v8, v18)` and `supported(v8, v35, v18)`). The object `v8` is currently at `pose(v8, v9)` and supported by `v11`. The goal is to move `v8` to `v18`.
           
           The plan will involve picking up `v8` and then placing it on `v18`.
           
           1. **Move to the correct base configuration for picking up `v8` from its current pose `v9`**: The `kin` predicate `kin(v4, v8, v9, v22, #q2, #t5)` indicates that arm `v4` can pick up `v8` at `pose v9` with `grasp v22` when the robot is at base configuration `#q2`. The robot is currently at `v3`. So, a `move_base` action from `v3` to `#q2` is required. The `basemotion` for this is `basemotion(v3, #t6, #q2)`.
           
           2. **Pick up `v8`**: After moving to `#q2`, the robot can pick up `v8` using arm `v4`, at `pose v9`, with `grasp v22`, and trajectory `#t5`. This is `pick(v4, v8, v9, v22, #q2, #t5)`.
           
           3. **Move to a base configuration suitable for placing `v8` on `v18`**: The goal requires `v8` to be on `v18`. There are several poses for `v8` on `v18` defined, such as `pose(v8, v35)` or `pose(v8, v28)` or `pose(v8, v19)`. We need to select one of these. Let's choose `pose(v8, v19)` with `grasp v22`. The `kin` predicate `kin(v4, v8, v19, v22, #q3, #t7)` implies that to place `v8` at `pose v19` with `grasp v22`, the robot needs to be at base configuration `#q3`. The robot is currently at `#q2` (after the `pick` action). So, a `move_base` action from `#q2` to `#q3` is needed. The `basemotion` for this is `basemotion(#q2, #t10, #q3)`.
           
           4. **Place `v8` on `v18`**: Now that the robot is at `#q3` and holding `v8`, it can place `v8` at `pose v19` on `v18` using `grasp v22`, and trajectory `#t7`. This is `place(v4, v8, v19, v22, #q3, #t7)`.
           
           --Plan--:
           (move_base v3 #q2 #t6)
           (pick v4 v8 v9 v22 #q2 #t5)
           (move_base #q2 #q3 #t10)
           (place v4 v8 v19 v22 #q3 #t7)

