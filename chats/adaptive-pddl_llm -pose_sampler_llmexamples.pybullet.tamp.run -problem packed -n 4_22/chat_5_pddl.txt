User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v3: object
           v30: object
           v31: object
           v32: object
           v35: object
           v39: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v14, v10)
           Atom arm(v4)
           Atom aconf(v6, v7)
           Atom atpose(v8, v9)
           Atom stackable(v16, v18)
           Atom ~test-cfree-pose-pose-negative(v12, v23, v8, v21)
           Atom ~test-cfree-pose-pose-negative(v16, v31, v14, v19)
           Atom controllable(v4)
           Atom ~test-cfree-pose-pose-negative(v16, v30, v14, v39)
           Atom ~test-cfree-pose-pose-negative(v16, v32, v14, v39)
           Atom ~test-cfree-pose-pose-negative(v16, v31, v8, v21)
           Atom atpose(v12, v13)
           Atom graspable(v12)
           Atom graspable(v14)
           Atom ~test-cfree-pose-pose-negative(v16, v30, v14, v35)
           Atom ~test-cfree-pose-pose-negative(v16, v30, v8, v24)
           Atom ~test-cfree-pose-pose-negative(v12, v23, v8, v24)
           Atom supported(v12, v13, v11)
           Atom supported(v8, v9, v11)
           Atom atpose(v16, v17)
           Atom aconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom stackable(v8, v18)
           Atom pose(v16, v17)
           Atom ~test-cfree-pose-pose-negative(v16, v31, v8, v22)
           Atom atbconf(v3)
           Atom pose(v14, v15)
           Atom stackable(v12, v10)
           Atom ~test-cfree-pose-pose-negative(v12, v20, v8, v21)
           Atom ~test-cfree-pose-pose-negative(v16, v32, v8, v21)
           Atom ataconf(v4, v5)
           Atom ~test-cfree-pose-pose-negative(v12, v25, v8, v21)
           Atom arm(v6)
           Atom ~test-cfree-pose-pose-negative(v16, v31, v14, v35)
           Atom ~test-cfree-pose-pose-negative(v16, v32, v8, v24)
           Atom ~test-cfree-pose-pose-negative(v12, v25, v8, v24)
           Atom graspable(v16)
           Atom stackable(v16, v10)
           Atom ~test-cfree-pose-pose-negative(v12, v25, v8, v22)
           Atom stackable(v14, v18)
           Atom ~test-cfree-pose-pose-negative(v12, v20, v8, v22)
           Atom ~test-cfree-pose-pose-negative(v12, v20, v8, v24)
           Atom handempty(v6)
           Atom atpose(v14, v15)
           Atom pose(v8, v9)
           Atom ~test-cfree-pose-pose-negative(v16, v30, v8, v22)
           Atom supported(v16, v17, v11)
           Atom ~test-cfree-pose-pose-negative(v16, v31, v14, v39)
           Atom ~test-cfree-pose-pose-negative(v16, v30, v14, v19)
           Atom ~test-cfree-pose-pose-negative(v16, v32, v8, v22)
           Atom handempty(v4)
           Atom ~test-cfree-pose-pose-negative(v16, v30, v8, v21)
           Atom stackable(v8, v10)
           Atom ~test-cfree-pose-pose-negative(v12, v23, v8, v22)
           Atom canmove()
           Atom ~test-cfree-pose-pose-negative(v16, v31, v8, v24)
           Atom ~test-cfree-pose-pose-negative(v16, v32, v14, v19)
           Atom bconf(v3)
           Atom graspable(v8)
           Atom stackable(v12, v18)
           Atom pose(v12, v13)
           Atom supported(v14, v15, v11)
           Atom pose(v16, v30)
           Atom supported(v16, v30, v18)
           Atom pose(v16, v31)
           Atom supported(v16, v31, v18)
           Atom pose(v16, v32)
           Atom supported(v16, v32, v18)
           Atom grasp(v12, #g3)
           Atom pose(v12, v23)
           Atom supported(v12, v23, v18)
           Atom pose(v12, v25)
           Atom supported(v12, v25, v18)
           Atom pose(v12, v20)
           Atom supported(v12, v20, v18)
           Atom grasp(v8, #g0)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, v39)
           Atom supported(v14, v39, v18)
           Atom pose(v14, v35)
           Atom supported(v14, v35, v18)
           Atom pose(v14, v19)
           Atom supported(v14, v19, v18)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v16, #g1)
           Atom pose(v8, v24)
           Atom supported(v8, v24, v18)
           Atom pose(v8, v21)
           Atom supported(v8, v21, v18)
           Atom pose(v8, v22)
           Atom supported(v8, v22, v18)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v14, #g2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v22, #g0, #o3, #o4)
           Atom kin(v4, v8, v21, #g0, #o3, #o4)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom kin(v4, v12, v20, #g3, #o3, #o4)
           Atom kin(v4, v12, v23, #g3, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v12, v13, #g3, #q3, #t6)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, v15, #g2, #q2, #t2)
           Atom kin(v4, v14, v35, #g2, #o3, #o4)
           Atom kin(v4, v14, v19, #g2, #o3, #o4)
           Atom kin(v4, v16, v31, #g1, #o3, #o4)
           Atom kin(v4, v16, v30, #g1, #o3, #o4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v16, v17, #g1, #q1, #t1)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q1, #o0, #q3)
           Atom kin(v4, v16, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g2, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g3, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q0)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g3 #o3 #o4))
           ((place v4 v12 #o2 #g3 #o3 #o4))
           ((pick v4 v12 v13 #g3 #q3 #t6))
           ((place v4 v12 v13 #g3 #q3 #t6))
           ((pick v4 v12 v20 #g3 #o3 #o4))
           ((place v4 v12 v20 #g3 #o3 #o4))
           ((pick v4 v12 v23 #g3 #o3 #o4))
           ((place v4 v12 v23 #g3 #o3 #o4))
           ((pick v4 v14 #o2 #g2 #o3 #o4))
           ((place v4 v14 #o2 #g2 #o3 #o4))
           ((pick v4 v14 v15 #g2 #q2 #t2))
           ((place v4 v14 v15 #g2 #q2 #t2))
           ((pick v4 v14 v19 #g2 #o3 #o4))
           ((place v4 v14 v19 #g2 #o3 #o4))
           ((pick v4 v14 v35 #g2 #o3 #o4))
           ((place v4 v14 v35 #g2 #o3 #o4))
           ((pick v4 v16 #o2 #g1 #o3 #o4))
           ((place v4 v16 #o2 #g1 #o3 #o4))
           ((pick v4 v16 v17 #g1 #q1 #t1))
           ((place v4 v16 v17 #g1 #q1 #t1))
           ((pick v4 v16 v30 #g1 #o3 #o4))
           ((place v4 v16 v30 #g1 #o3 #o4))
           ((pick v4 v16 v31 #g1 #o3 #o4))
           ((place v4 v16 v31 #g1 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 v21 #g0 #o3 #o4))
           ((place v4 v8 v21 #g0 #o3 #o4))
           ((pick v4 v8 v22 #g0 #o3 #o4))
           ((place v4 v8 v22 #g0 #o3 #o4))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place objects v8, v12, v14, and v16 on object v18.
           Currently, v8 is at pose v9, v12 is at pose v13, v14 is at pose v15, and v16 is at pose v17. All of these objects are supported by v11. The target object v18 has several supported poses for v8, v12, v14, and v16.
           The robot arm v4 is handempty and ataconf v5. The robot base is atbconf v3.
           
           To achieve the goal, we need to pick up each object from its initial pose and place it onto a pose supported by v18.
           
           1. **Place v8 on v18**:
              - Pick v8 from its current pose v9 using arm v4, base config #q0 and trajectory #t0.
              - Move the base to the appropriate configuration for placing v8 on v18 (e.g., #o3 if placing it at #o2, v21, v22, or v24, which are supported by v18). Let's use v21 as an example.
              - Place v8 onto pose v21 on v18 using arm v4, base config #o3 and trajectory #o4.
           
           2. **Place v12 on v18**:
              - Pick v12 from its current pose v13 using arm v4, base config #q3 and trajectory #t6.
              - Move the base to the appropriate configuration for placing v12 on v18 (e.g., #o3 if placing it at #o2, v20, v23, or v25, which are supported by v18). Let's use v20 as an example.
              - Place v12 onto pose v20 on v18 using arm v4, base config #o3 and trajectory #o4.
           
           3. **Place v14 on v18**:
              - Pick v14 from its current pose v15 using arm v4, base config #q2 and trajectory #t2.
              - Move the base to the appropriate configuration for placing v14 on v18 (e.g., #o3 if placing it at #o2, v19, v35, or v39, which are supported by v18). Let's use v19 as an example.
              - Place v14 onto pose v19 on v18 using arm v4, base config #o3 and trajectory #o4.
           
           4. **Place v16 on v18**:
              - Pick v16 from its current pose v17 using arm v4, base config #q1 and trajectory #t1.
              - Move the base to the appropriate configuration for placing v16 on v18 (e.g., #o3 if placing it at #o2, v30, v31, or v32, which are supported by v18). Let's use v30 as an example.
              - Place v16 onto pose v30 on v18 using arm v4, base config #o3 and trajectory #o4.
           
           We need to ensure the robot moves its base to the correct configuration before each pick and place operation if the current base configuration is not suitable. Based on the kin facts, there are specific base configurations (#q0, #q1, #q2, #q3, #o3) associated with picking and placing objects. It appears that #o3 is a common base configuration for placing objects at the poses supported by v18, based on the `kin` facts and the `supported` facts for `v18`.
           
           --Plan--:
           (move_base v3 #q0 #t3)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 v21 #g0 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v12 v13 #g3 #q3 #t6)
           (move_base #q3 #o3 #o0)
           (place v4 v12 v20 #g3 #o3 #o4)
           (move_base #o3 #q2 #o0)
           (pick v4 v14 v15 #g2 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v14 v19 #g2 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v16 v17 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v16 v30 #g1 #o3 #o4)

