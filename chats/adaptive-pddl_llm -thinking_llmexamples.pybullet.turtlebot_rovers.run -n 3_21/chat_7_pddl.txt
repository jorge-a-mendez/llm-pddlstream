User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v18)
           Atom type(v1, v2)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom rock(v8)
           Atom lander(v9)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom type(v5, v6)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom conf(v14, v15)
           Atom objective(v17)
           Atom rock(v3)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom rock(v5)
           Atom rock(v4)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom rock(v7)
           Atom objective(v19)
           Atom rover(v12)
           Atom mode(v11)
           Atom store(v16)
           Atom conf(v12, v13)
           Atom onboard(v10, v12)
           Atom type(v3, v2)
           Atom free(v14, v16)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q1, v3)
           Atom conf(v12, #q1)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q5, #y3, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q9, v7)
           Atom conf(v12, #q9)
           Atom above(v12, #q16, v8)
           Atom conf(v12, #q16)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q8, v1)
           Atom conf(v12, #q8)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q11, #y5, v17)
           Atom imagerange(v14, #q11, v17)
           Atom conf(v14, #q11)
           Atom ray(#y5)
           Atom above(v14, #q10, v1)
           Atom conf(v14, #q10)
           Atom above(v14, #q3, v7)
           Atom conf(v14, #q3)
           Atom above(v14, #q12, v3)
           Atom conf(v14, #q12)
           Atom imagevisible(v14, #q14, #y7, v18)
           Atom imagerange(v14, #q14, v18)
           Atom conf(v14, #q14)
           Atom ray(#y7)
           Atom comvisible(v14, #q4, #y2, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom imagevisible(v14, #q13, #y6, v19)
           Atom imagerange(v14, #q13, v19)
           Atom conf(v14, #q13)
           Atom ray(#y6)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v14, #q15, v4)
           Atom conf(v14, #q15)
           Atom above(v14, #o5, v5)
           Atom above(v12, #q7, v5)
           Atom conf(v12, #q7)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q7, #o2, #q16)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q16, #o2, #q7)
           Atom motion(v12, v13, #t25, #q7)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #t8, #q5)
           Atom motion(v12, #q5, #o2, #q16)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q16, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q0, #t10, #q7)
           Atom motion(v12, #q5, #t12, #q0)
           Atom motion(v12, #q0, #t19, #q5)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q7, #t13, #q0)
           Atom motion(v12, #q0, #t26, #q16)
           Atom motion(v12, #q16, #t30, #q0)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #t16, #q0)
           Atom motion(v12, #q16, #o2, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q0, #t15, #q9)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q16)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v14, #q4, #t4, v15)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q16, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q16)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #t2, #q0)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q5, #t6, #q1)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v14, v15, #t33, #q14)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v12, #q8, #t14, #q0)
           Atom motion(v12, #q8, #o2, #q16)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q5, #t18, #q8)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q0, #t17, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q16, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q4, #t28, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q0, #t21, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q16)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q16, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #t20, #q0)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #t9, #q5)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q3, #t3, #q4)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, v15, #t1, #q3)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q4, #t27, #q10)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q10, #t23, #q4)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q11, #t24, #q4)
           Atom motion(v14, v15, #t31, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q4, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q4, #t29, #q15)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q4)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q2, #t11, #q6)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q16, #o2, #q2)
           Atom motion(v12, v13, #t7, #q2)
           Atom motion(v12, #q2, #t5, #q1)
           Atom motion(v12, #q2, #o2, #q16)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q2, #t22, #q0)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, v15, #t32, #q13)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q16, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q16)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, v15, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #q1 v3 v16))
           ((sample_rock v12 #q16 v8 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v12 #q8 v1 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q10 v1 v16))
           ((sample_rock v14 #q12 v3 v16))
           ((sample_rock v14 #q15 v4 v16))
           ((sample_rock v14 #q3 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q16))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t10 #q7))
           ((move v12 #q0 #t15 #q9))
           ((move v12 #q0 #t17 #q8))
           ((move v12 #q0 #t19 #q5))
           ((move v12 #q0 #t21 #q6))
           ((move v12 #q0 #t26 #q16))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q16))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t2 #q0))
           ((move v12 #q16 #o2 #o5))
           ((move v12 #q16 #o2 #q1))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q2))
           ((move v12 #q16 #o2 #q5))
           ((move v12 #q16 #o2 #q6))
           ((move v12 #q16 #o2 #q7))
           ((move v12 #q16 #o2 #q8))
           ((move v12 #q16 #o2 #q9))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t30 #q0))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q16))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t11 #q6))
           ((move v12 #q2 #t22 #q0))
           ((move v12 #q2 #t5 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q16))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t12 #q0))
           ((move v12 #q5 #t18 #q8))
           ((move v12 #q5 #t6 #q1))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q16))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t20 #q0))
           ((move v12 #q6 #t9 #q5))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q16))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q0))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q16))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t14 #q0))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q16))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t16 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t25 #q7))
           ((move v12 v13 #t7 #q2))
           ((move v12 v13 #t8 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t23 #q4))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t24 #q4))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q4))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #t27 #q10))
           ((move v14 #q4 #t28 #q12))
           ((move v14 #q4 #t29 #q15))
           ((move v14 #q4 #t4 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q3))
           ((move v14 v15 #t31 #q11))
           ((move v14 v15 #t32 #q13))
           ((move v14 v15 #t33 #q14))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v12 #q5 #y3 v19 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q11 #y5 v17 v10))
           ((calibrate v14 #q13 #y6 v19 v10))
           ((calibrate v14 #q14 #y7 v18 v10))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v12 #q5 #y3 v19 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q11 #y5 v17 v10 v11))
           ((take_image v14 #q13 #y6 v19 v10 v11))
           ((take_image v14 #q14 #y7 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y2 v9 v5))
           ((send_analysis v14 #q4 #y2 v9 v8))
           ((send_analysis v14 #q4 #y2 v9 v1))
           ((send_analysis v14 #q4 #y2 v9 v3))
           ((send_analysis v14 #q4 #y2 v9 v4))
           ((send_analysis v14 #q4 #y2 v9 v7))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q4 #y2 v9 v19 v11))
           ((send_image v14 #q4 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Plan to Achieve `Atom new-axiom@0()`**
           
           Alright, let's break this down. The ultimate goal is a conjunction of several atoms, and I need to come up with a plan to make them all true. The key parts are getting images of objectives `v17`, `v18`, `v19` and getting analysis of stone and soil rocks. I need to make sure I am at the end state of:
           
           *   **R1:** Rover `v12` is at position `v13`
           *   **R2:** Rover `v14` is at position `v15`
           *   **R3:** Store `v16` on `v12` is free
           *   **R4:** Store `v16` on `v14` is free
           *   **R5:** Images for `v17, v18, v19` have been received (this is easy, the cameras are already mounted on the rovers!)
           *   **R6:** At least one sample of stone has been analyzed and sent
           *   **R7:** At least one sample of soil has been analyzed and sent
           
           Here is how I think this can be done.
           
           *   **Imaging Plan:** I will start imaging with Rover `v12`. I can achieve everything by imaging with this rover only as both rovers are capable of imaging everything. I will use the camera and take the images of objectives `v17`, `v18`, `v19` with `v12`. I need to calibrate the camera and then send the image.
           
           *   **Analysis Plan:** I'll set Rover `v12` to handle stone analysis and Rover `v14` to handle the soil. `v12` will visit rocks of type `v2` (stone): `v1`, `v3`, `v4`, and `v14` will visit rocks of type `v6` (soil): `v5`, `v7`, `v8`. The rovers must travel, take a sample, and send the sample to the base.
           
           The tricky part is that each rover's store is limited. After analyzing rock samples, the rovers are `full`, so I have to make sure to clear the store space by *dropping* rocks after analyzing and sending them to make the `free` predicate true at the end. The axiom says that I *must* end with `free`, so that must be done right after the last sample is analyzed and sent.
           
           Now, let's detail a plan for each rover to satisfy the predicates to have the overall goal achieved:
           
           **Rover `v12`:**
           
           1.  Move to `#q2` to image `v17`
           2.  Calibrate `v10`, take an image of `v17` and send.
           3.  Move to `#q5` to image `v19`
           4.  Calibrate `v10`, take an image of `v19` and send.
           5.  Move to `#q6` to image `v18`
           6.  Calibrate `v10`, take an image of `v18` and send.
           7.  Move to `#q8`, sample `v1`, send analysis.
           8.  Move to `#q1`, sample `v3`, send analysis, drop rock.
           9.  Move to `#o5`, sample `v4`, send analysis, drop rock.
           10. Move v12 to v13 to end, drop rock.
           
           **Rover `v14`:**
           
           1.  Move to `#o5`, sample `v5`, send analysis, drop rock.
           2.  Move to `#q3`, sample `v7`, send analysis, drop rock.
           3.  Move to `#o5`, sample `v8`, send analysis, drop rock.
           4.  Move v14 to v15 to end.
           
           This strategy will satisfy all the individual goals and also the composite requirement. Both Rovers are at the correct configuration, are free, have send all of their data, and I'll achieve the overall goal. Now, this strategy should satisfy all the image goals and I should achieve all the analysis requirements, so the plan is robust and will be complete.
           
)

Model:     **Plan to Achieve `Atom new-axiom@0()`**
           
           Alright, let's break this down. The ultimate goal is a conjunction of several atoms, and I need to come up with a plan to make them all true. The key parts are getting images of objectives `v17`, `v18`, `v19` and getting analysis of stone and soil rocks. I need to make sure I am at the end state of:
           
           *   **R1:** Rover `v12` is at position `v13`
           *   **R2:** Rover `v14` is at position `v15`
           *   **R3:** Store `v16` on `v12` is free
           *   **R4:** Store `v16` on `v14` is free
           *   **R5:** Images for `v17, v18, v19` have been received (this is easy, the cameras are already mounted on the rovers!)
           *   **R6:** At least one sample of stone has been analyzed and sent
           *   **R7:** At least one sample of soil has been analyzed and sent
           
           Here is how I think this can be done.
           
           *   **Imaging Plan:** I will start imaging with Rover `v12`. I can achieve everything by imaging with this rover only as both rovers are capable of imaging everything. I will use the camera and take the images of objectives `v17`, `v18`, `v19` with `v12`. I need to calibrate the camera and then send the image.
           
           *   **Analysis Plan:** I'll set Rover `v12` to handle stone analysis and Rover `v14` to handle the soil. `v12` will visit rocks of type `v2` (stone): `v1`, `v3`, `v4`, and `v14` will visit rocks of type `v6` (soil): `v5`, `v7`, `v8`. The rovers must travel, take a sample, and send the sample to the base.
           
           The tricky part is that each rover's store is limited. After analyzing rock samples, the rovers are `full`, so I have to make sure to clear the store space by *dropping* rocks after analyzing and sending them to make the `free` predicate true at the end. The axiom says that I *must* end with `free`, so that must be done right after the last sample is analyzed and sent.
           
           Now, let's detail a plan for each rover to satisfy the predicates to have the overall goal achieved:
           
           **Rover `v12`:**
           
           1.  Move to `#q2` to image `v17`
           2.  Calibrate `v10`, take an image of `v17` and send.
           3.  Move to `#q5` to image `v19`
           4.  Calibrate `v10`, take an image of `v19` and send.
           5.  Move to `#q6` to image `v18`
           6.  Calibrate `v10`, take an image of `v18` and send.
           7.  Move to `#q8`, sample `v1`, send analysis.
           8.  Move to `#q1`, sample `v3`, send analysis, drop rock.
           9.  Move to `#o5`, sample `v4`, send analysis, drop rock.
           10. Move v12 to v13 to end, drop rock.
           
           **Rover `v14`:**
           
           1.  Move to `#o5`, sample `v5`, send analysis, drop rock.
           2.  Move to `#q3`, sample `v7`, send analysis, drop rock.
           3.  Move to `#o5`, sample `v8`, send analysis, drop rock.
           4.  Move v14 to v15 to end.
           
           This strategy will satisfy all the individual goals and also the composite requirement. Both Rovers are at the correct configuration, are free, have send all of their data, and I'll achieve the overall goal. Now, this strategy should satisfy all the image goals and I should achieve all the analysis requirements, so the plan is robust and will be complete.
           

