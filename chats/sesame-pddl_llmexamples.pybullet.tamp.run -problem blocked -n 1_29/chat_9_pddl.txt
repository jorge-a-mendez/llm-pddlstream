User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g3: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p3: object
           #q6: object
           #q7: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           @sink: object
           @stove: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v14)
           Atom graspable(v15)
           Atom pose(v15, v16)
           Atom atpose(v15, v16)
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #p3)
           Atom supported(v12, #p3, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g3)
           Atom bconf(#q6)
           Atom atraj(#t14)
           Atom kin(v4, v12, v13, #g3, #q6, #t14)
           Atom bconf(#q7)
           Atom atraj(#t15)
           Atom kin(v4, v12, #p3, #g3, #q7, #t15)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q6)
           Atom btraj(#t16)
           Atom basemotion(v3, #t16, #q6)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q7)
           Atom btraj(#t18)
           Atom basemotion(#q6, #t18, #q7)
           Atom btraj(#t17)
           Atom basemotion(v3, #t17, #q7)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g3, #o3, #o4)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q7 #t18))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q6 #t16))
           ((move_base v3 #q7 #t17))
           ((pick v4 v12 #o2 #g3 #o3 #o4))
           ((place v4 v12 #o2 #g3 #o3 #o4))
           ((pick v4 v12 #p3 #g3 #q7 #t15))
           ((place v4 v12 #p3 #g3 #q7 #t15))
           ((pick v4 v12 v13 #g3 #q6 #t14))
           ((place v4 v12 v13 #g3 #q6 #t14))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms, `v4` and `v6`, and several objects, `v12` and `v15`. Both objects `v12` and `v15` are graspable and stackable. `v12` is currently at pose `v13` and supported by `v14`, while `v15` is at pose `v16` and supported by `v11`. The goal is `new-axiom@0()`, which states `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, we know `type(v12, v17)` and `stackable(v12, v18)`. If `v12` can be placed on `v18`, the goal will be achieved.
           
           To achieve `on(v12, v18)`, we need to satisfy `supported(v12, ?p, v18)` and `atpose(v12, ?p)`. We already have `pose(v12, #p3)` and `supported(v12, #p3, v18)`. So, the plan should involve picking up `v12` from its current location (`v13` on `v14`) and placing it at `#p3` on `v18`.
           
           The robot starts at base configuration `v3`.
           To pick `v12` from `v13` using arm `v4`, the robot needs to be at base configuration `#q6`.
           To place `v12` at `#p3` using arm `v4`, the robot needs to be at base configuration `#q7`.
           
           Therefore, the plan should be:
           1. Move the base from `v3` to `#q6`.
           2. Pick `v12` from `v13` using arm `v4`.
           3. Move the base from `#q6` to `#q7`.
           4. Place `v12` at `#p3` using arm `v4`.
           
           --Plan--:
           (move_base v3 #q6 #t16)
           (pick v4 v12 v13 #g3 #q6 #t14)
           (move_base #q6 #q7 #t18)
           (place v4 v12 #p3 #g3 #q7 #t15)

