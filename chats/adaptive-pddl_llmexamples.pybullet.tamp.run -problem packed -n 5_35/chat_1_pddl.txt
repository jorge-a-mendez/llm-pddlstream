User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v14, v20)
           Atom arm(v4)
           Atom stackable(v16, v20)
           Atom bconf(v3)
           Atom stackable(v16, v10)
           Atom stackable(v8, v20)
           Atom pose(v12, v13)
           Atom stackable(v18, v20)
           Atom supported(v8, v9, v11)
           Atom handempty(v4)
           Atom pose(v16, v17)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom stackable(v12, v10)
           Atom stackable(v12, v20)
           Atom atpose(v14, v15)
           Atom ataconf(v6, v7)
           Atom canmove()
           Atom atpose(v16, v17)
           Atom graspable(v18)
           Atom supported(v16, v17, v11)
           Atom ataconf(v4, v5)
           Atom handempty(v6)
           Atom atpose(v18, v19)
           Atom stackable(v8, v10)
           Atom graspable(v16)
           Atom graspable(v8)
           Atom atpose(v12, v13)
           Atom graspable(v14)
           Atom pose(v18, v19)
           Atom pose(v8, v9)
           Atom pose(v14, v15)
           Atom supported(v18, v19, v11)
           Atom supported(v14, v15, v11)
           Atom controllable(v4)
           Atom atbconf(v3)
           Atom supported(v12, v13, v11)
           Atom stackable(v18, v10)
           Atom aconf(v4, v5)
           Atom atpose(v8, v9)
           Atom stackable(v14, v10)
           Atom graspable(v12)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #o1)
           Atom grasp(v12, #o1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v8, #o1)
           Atom grasp(v16, #o1)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom supported(v14, #o2, v20)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v18, #o1)
           Atom supported(v16, #o2, v20)
           Atom supported(v18, #o2, v20)
           Atom supported(v12, #o2, v20)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v18, v19, #o1, #o3, #o4)
           Atom kin(v4, v18, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (v8, v12, v14, v16, v18) that are graspable and stackable. These objects are currently supported by `v11`, which implies they are on `v11`. The goal is to place all these objects on `v20`. The robot has two arms, `v4` and `v6`, and `v4` is currently at `v5` and `v6` is at `v7`. Both arms are handempty. The robot's base is at `v3`.
           
           The only available action instance is `(move_base v3 v3 #o0)`. This action moves the robot's base from `v3` to `v3` using trajectory `#o0`. This means the robot is not actually moving its base to a new location, but rather executing a base motion that starts and ends at the same configuration. This action does not directly help in picking or placing objects.
           
           To achieve the goal, the robot needs to perform a series of `pick` and `place` actions for each object to move them from `v11` to `v20`. However, for any `pick` or `place` action, the robot needs to have a kinematic configuration (`kin`) and an arm trajectory (`atraj`). The provided initial state only contains `kin` facts for arm `v4` picking and placing objects on either their current pose (`v9`, `v13`, `v15`, `v17`, `v19`) or a new pose (`#o2`) and a base configuration `#o3` and arm trajectory `#o4`.
           
           Crucially, the only available action in the list is `(move_base v3 v3 #o0)`. This implies that no `pick` or `place` actions are available. Without `pick` and `place` actions, the robot cannot move the objects from `v11` to `v20`. Therefore, the goal is not achievable with the given set of available action instances.
           
           No plan can be generated because there are no pick or place actions available to move the objects.

