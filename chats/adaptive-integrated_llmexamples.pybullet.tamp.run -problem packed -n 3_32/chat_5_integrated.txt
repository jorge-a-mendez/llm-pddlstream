User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p15: object
           p16: object
           p17: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v46: object
           v47: object
           v48: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p13 is a pose with position (-0.039, 0.075, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p16 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (0.045, -0.075, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p17 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v13 is a pose with position (-0.039, 0.517, 0.781) and quaternion (0.0, 0.0, 0.054, 0.999).
           Object p11 is a pose with position (0.045, -0.075, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v15 is a pose with position (0.046, -0.359, 0.781) and quaternion (0.0, 0.0, 0.579, 0.815).
           Object p10 is a pose with position (-0.039, 0.075, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p7 is a pose with position (-0.039, 0.075, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (-0.094, -0.379, 0.781) and quaternion (0.0, 0.0, 0.104, 0.995).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p15 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.045, -0.075, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v8, p15)
           Atom ataconf(v6, v7)
           Atom handempty(v4)
           Atom pose(v12, p10)
           Atom supported(v14, v15, v11)
           Atom supported(v8, v9, v11)
           Atom atbconf(v3)
           Atom arm(v6)
           Atom atpose(v8, v9)
           Atom aconf(v6, v7)
           Atom supported(v12, p13, v16)
           Atom kin(v27, v32, p16, v47, v30, v31)
           Atom supported(v8, p6, v16)
           Atom pose(v14, p8)
           Atom pose(v12, p13)
           Atom graspable(v12)
           Atom bconf(v3)
           Atom controllable(v4)
           Atom stackable(v14, v16)
           Atom supported(v14, p11, v16)
           Atom arm(v4)
           Atom atpose(v12, v13)
           Atom supported(v14, p14, v16)
           Atom pose(v12, p16)
           Atom pose(v12, v13)
           Atom pose(v8, v9)
           Atom stackable(v12, v16)
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom kin(v27, v32, p10, v29, v30, v31)
           Atom pose(v14, p17)
           Atom kin(v27, v32, p13, v29, v30, v31)
           Atom kin(v27, v28, p15, v46, v30, v31)
           Atom supported(v12, v13, v11)
           Atom supported(v8, p9, v16)
           Atom supported(v12, p16, v16)
           Atom graspable(v8)
           Atom kin(v27, v33, p14, v29, v30, v31)
           Atom supported(v8, p12, v16)
           Atom stackable(v12, v10)
           Atom pose(v8, p12)
           Atom aconf(v4, v5)
           Atom supported(v14, p8, v16)
           Atom canmove()
           Atom pose(v8, p6)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom handempty(v6)
           Atom stackable(v8, v10)
           Atom supported(v12, p7, v16)
           Atom supported(v12, p10, v16)
           Atom kin(v27, v28, p9, v29, v30, v31)
           Atom supported(v14, p17, v16)
           Atom stackable(v8, v16)
           Atom ataconf(v4, v5)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom pose(v14, p14)
           Atom kin(v27, v33, p17, v48, v30, v31)
           Atom pose(v14, v15)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom pose(v12, p7)
           Atom pose(v14, p11)
           Atom pose(v8, p9)
           Atom kin(v27, v28, p12, v29, v30, v31)
           Atom kin(v27, v33, p11, v29, v30, v31)
           Atom graspable(v14)
           Atom supported(v8, p15, v16)
           Atom grasp(v14, #g1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #g0)
           Atom supported(v14, #o2, v16)
           Atom grasp(v12, #g2)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#q8)
           Atom atraj(#t17)
           Atom kin(v4, v14, p17, #g1, #q8, #t17)
           Atom bconf(#q11)
           Atom atraj(#t31)
           Atom kin(v4, v14, p8, #g1, #q11, #t31)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p11, #g1, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v14, v15, #g1, #q3, #t3)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, p14, #g1, #q2, #t2)
           Atom kin(v4, v8, p9, #g0, #o3, #o4)
           Atom bconf(#q10)
           Atom atraj(#t26)
           Atom kin(v4, v8, p6, #g0, #q10, #t26)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, p12, #g0, #q0, #t0)
           Atom bconf(#q7)
           Atom atraj(#t12)
           Atom kin(v4, v8, p15, #g0, #q7, #t12)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, v9, #g0, #q1, #t1)
           Atom bconf(#q5)
           Atom atraj(#t9)
           Atom kin(v4, v12, p13, #g2, #q5, #t9)
           Atom bconf(#q9)
           Atom atraj(#t24)
           Atom kin(v4, v12, p7, #g2, #q9, #t24)
           Atom bconf(#q6)
           Atom atraj(#t10)
           Atom kin(v4, v12, p16, #g2, #q6, #t10)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v12, v13, #g2, #q4, #t8)
           Atom kin(v4, v12, p10, #g2, #o3, #o4)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q10, #o0, #q8)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q8, #o0, #q10)
           Atom basemotion(v3, #o0, #q10)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(#q2, #o0, #q10)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q10, #o0, #q2)
           Atom basemotion(#q8, #o0, #q2)
           Atom btraj(#t28)
           Atom basemotion(#q10, #t28, #q4)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, #q10)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom btraj(#t36)
           Atom basemotion(#q10, #t36, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q3)
           Atom btraj(#t20)
           Atom basemotion(#q3, #t20, #q8)
           Atom btraj(#t33)
           Atom basemotion(#q3, #t33, #q10)
           Atom btraj(#t23)
           Atom basemotion(#q8, #t23, #q3)
           Atom btraj(#t13)
           Atom basemotion(#q6, #t13, #q4)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q6, #o0, #q2)
           Atom btraj(#t11)
           Atom basemotion(#q4, #t11, #q6)
           Atom btraj(#t21)
           Atom basemotion(#q6, #t21, #q3)
           Atom basemotion(#q6, #o0, #q10)
           Atom basemotion(#q6, #o0, v3)
           Atom btraj(#t18)
           Atom basemotion(#q3, #t18, #q6)
           Atom basemotion(#q10, #o0, #q6)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q10, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q10)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom btraj(#t27)
           Atom basemotion(#q9, #t27, #q4)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q9, #o0, #q10)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q6, #o0, #q9)
           Atom btraj(#t35)
           Atom basemotion(#q9, #t35, #q3)
           Atom basemotion(#q10, #o0, #q9)
           Atom btraj(#t25)
           Atom basemotion(#q4, #t25, #q9)
           Atom basemotion(#q8, #o0, #q9)
           Atom btraj(#t32)
           Atom basemotion(#q3, #t32, #q9)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q10, #o0, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q9, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom btraj(#t29)
           Atom basemotion(#q1, #t29, #q9)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t15)
           Atom basemotion(#q1, #t15, #q6)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q8)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q1)
           Atom btraj(#t30)
           Atom basemotion(#q1, #t30, #q10)
           Atom btraj(#t34)
           Atom basemotion(#q3, #t34, #q11)
           Atom basemotion(#q11, #o0, #q1)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q11, #o0, #q2)
           Atom basemotion(#q1, #o0, #q11)
           Atom basemotion(#q2, #o0, #q11)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q11, #o0, #q4)
           Atom basemotion(#q11, #o0, #q8)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(v3, #o0, #q11)
           Atom btraj(#t37)
           Atom basemotion(#q11, #t37, #q3)
           Atom basemotion(#q4, #o0, #q11)
           Atom basemotion(#q11, #o0, #q5)
           Atom basemotion(#q11, #o0, #q6)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q8, #o0, #q11)
           Atom basemotion(#q6, #o0, #q11)
           Atom basemotion(#q5, #o0, #q11)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, #q11)
           Atom basemotion(#q7, #o0, #q5)
           Atom btraj(#t19)
           Atom basemotion(#q3, #t19, #q7)
           Atom btraj(#t14)
           Atom basemotion(#q7, #t14, #q4)
           Atom basemotion(#q7, #o0, #q7)
           Atom btraj(#t16)
           Atom basemotion(#q1, #t16, #q7)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q11, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom btraj(#t22)
           Atom basemotion(#q7, #t22, #q3)
           Atom basemotion(#q7, #o0, #q10)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q10, #o0, #q7)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q0, #o0, #q11)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q10, #o0, #q0)
           Atom basemotion(#q11, #o0, #q0)
           Atom basemotion(#q0, #o0, #q10)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q10 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q11 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q6 #t15))
           ((move_base #q1 #q7 #t16))
           ((move_base #q1 #q9 #t29))
           ((move_base #q1 #q10 #t30))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q0 #o0))
           ((move_base #q10 #q1 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q2 #o0))
           ((move_base #q10 #q5 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q4 #t28))
           ((move_base #q10 #q3 #t36))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q3 #t37))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q6 #t18))
           ((move_base #q3 #q7 #t19))
           ((move_base #q3 #q8 #t20))
           ((move_base #q3 #q9 #t32))
           ((move_base #q3 #q10 #t33))
           ((move_base #q3 #q11 #t34))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q10 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q6 #t11))
           ((move_base #q4 #q9 #t25))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q10 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q10 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q4 #t13))
           ((move_base #q6 #q3 #t21))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q4 #t14))
           ((move_base #q7 #q3 #t22))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q3 #t23))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q4 #t27))
           ((move_base #q9 #q3 #t35))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t4))
           ((move_base v3 #q1 #t5))
           ((move_base v3 #q2 #t6))
           ((move_base v3 #q3 #t7))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p10 #g2 #o3 #o4))
           ((place v4 v12 p10 #g2 #o3 #o4))
           ((pick v4 v12 p13 #g2 #q5 #t9))
           ((place v4 v12 p13 #g2 #q5 #t9))
           ((pick v4 v12 p16 #g2 #q6 #t10))
           ((place v4 v12 p16 #g2 #q6 #t10))
           ((pick v4 v12 p7 #g2 #q9 #t24))
           ((place v4 v12 p7 #g2 #q9 #t24))
           ((pick v4 v12 v13 #g2 #q4 #t8))
           ((place v4 v12 v13 #g2 #q4 #t8))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p11 #g1 #o3 #o4))
           ((place v4 v14 p11 #g1 #o3 #o4))
           ((pick v4 v14 p14 #g1 #q2 #t2))
           ((place v4 v14 p14 #g1 #q2 #t2))
           ((pick v4 v14 p17 #g1 #q8 #t17))
           ((place v4 v14 p17 #g1 #q8 #t17))
           ((pick v4 v14 p8 #g1 #q11 #t31))
           ((place v4 v14 p8 #g1 #q11 #t31))
           ((pick v4 v14 v15 #g1 #q3 #t3))
           ((place v4 v14 v15 #g1 #q3 #t3))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p12 #g0 #q0 #t0))
           ((place v4 v8 p12 #g0 #q0 #t0))
           ((pick v4 v8 p15 #g0 #q7 #t12))
           ((place v4 v8 p15 #g0 #q7 #t12))
           ((pick v4 v8 p6 #g0 #q10 #t26))
           ((place v4 v8 p6 #g0 #q10 #t26))
           ((pick v4 v8 p9 #g0 #o3 #o4))
           ((place v4 v8 p9 #g0 #o3 #o4))
           ((pick v4 v8 v9 #g0 #q1 #t1))
           ((place v4 v8 v9 #g0 #q1 #t1))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The initial state shows that objects `v8` and `v14` are on `v11` and `v12` is on both `v11` and `v16`. The goal is to place all three objects (`v8`, `v12`, `v14`) on `v16`. This requires picking up each object and placing it on `v16`. Since the robot `v4` is currently at `v3` and has an empty hand, it needs to move to the location of the object it wants to pick, pick the object, move to the location of the target surface `v16`, and then place the object.
           
           Object `v12` is already on `v16` (at `v13`), but also on `v11`. However, given the goal `on(v12, v16)` and `atpose(v12, v13)` and `supported(v12, v13, v16)`, this condition is already met. So, we only need to place `v8` and `v14` on `v16`.
           
           Object `v8` is at `v9` supported by `v11`.
           Object `v14` is at `v15` supported by `v11`.
           
           We will pick `v8` from `v9` and place it at `p6` on `v16`.
           Then we will pick `v14` from `v15` and place it at `p17` on `v16`.
           
           --Plan--:
           (move_base v3 #q1 #o0)
           (pick v4 v8 v9 #g0 #q1 #t1)
           (move_base #q1 #q10 #o0)
           (place v4 v8 p6 #g0 #q10 #t26)
           (move_base #q10 #q3 #o0)
           (pick v4 v14 v15 #g1 #q3 #t3)
           (move_base #q3 #q8 #o0)
           (place v4 v14 p17 #g1 #q8 #t17)

User:      The plan you provided contains the following invalid actions: `(move_base v3 #q1 #o0) , (move_base #q1 #q10 #o0) , (move_base #q10 #q3 #o0) , (move_base #q3 #q8 #o0)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q10 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q11 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q6 #t15))
           ((move_base #q1 #q7 #t16))
           ((move_base #q1 #q9 #t29))
           ((move_base #q1 #q10 #t30))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q0 #o0))
           ((move_base #q10 #q1 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q2 #o0))
           ((move_base #q10 #q5 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q4 #t28))
           ((move_base #q10 #q3 #t36))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q3 #t37))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q6 #t18))
           ((move_base #q3 #q7 #t19))
           ((move_base #q3 #q8 #t20))
           ((move_base #q3 #q9 #t32))
           ((move_base #q3 #q10 #t33))
           ((move_base #q3 #q11 #t34))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q10 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q6 #t11))
           ((move_base #q4 #q9 #t25))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q10 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q10 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q4 #t13))
           ((move_base #q6 #q3 #t21))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q4 #t14))
           ((move_base #q7 #q3 #t22))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q3 #t23))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q4 #t27))
           ((move_base #q9 #q3 #t35))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t4))
           ((move_base v3 #q1 #t5))
           ((move_base v3 #q2 #t6))
           ((move_base v3 #q3 #t7))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p10 #g2 #o3 #o4))
           ((place v4 v12 p10 #g2 #o3 #o4))
           ((pick v4 v12 p13 #g2 #q5 #t9))
           ((place v4 v12 p13 #g2 #q5 #t9))
           ((pick v4 v12 p16 #g2 #q6 #t10))
           ((place v4 v12 p16 #g2 #q6 #t10))
           ((pick v4 v12 p7 #g2 #q9 #t24))
           ((place v4 v12 p7 #g2 #q9 #t24))
           ((pick v4 v12 v13 #g2 #q4 #t8))
           ((place v4 v12 v13 #g2 #q4 #t8))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p11 #g1 #o3 #o4))
           ((place v4 v14 p11 #g1 #o3 #o4))
           ((pick v4 v14 p14 #g1 #q2 #t2))
           ((place v4 v14 p14 #g1 #q2 #t2))
           ((pick v4 v14 p17 #g1 #q8 #t17))
           ((place v4 v14 p17 #g1 #q8 #t17))
           ((pick v4 v14 p8 #g1 #q11 #t31))
           ((place v4 v14 p8 #g1 #q11 #t31))
           ((pick v4 v14 v15 #g1 #q3 #t3))
           ((place v4 v14 v15 #g1 #q3 #t3))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p12 #g0 #q0 #t0))
           ((place v4 v8 p12 #g0 #q0 #t0))
           ((pick v4 v8 p15 #g0 #q7 #t12))
           ((place v4 v8 p15 #g0 #q7 #t12))
           ((pick v4 v8 p6 #g0 #q10 #t26))
           ((place v4 v8 p6 #g0 #q10 #t26))
           ((pick v4 v8 p9 #g0 #o3 #o4))
           ((place v4 v8 p9 #g0 #o3 #o4))
           ((pick v4 v8 v9 #g0 #q1 #t1))
           ((place v4 v8 v9 #g0 #q1 #t1))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The initial state shows that objects `v8` and `v14` are on `v11` and `v12` is on both `v11` and `v16`. The goal is to place all three objects (`v8`, `v12`, `v14`) on `v16`. Since `v12` is already on `v16`, we only need to place `v8` and `v14` on `v16`.
           
           Object `v8` is at `v9` supported by `v11`.
           Object `v14` is at `v15` supported by `v11`.
           
           We will pick `v8` from `v9` and place it at `p6` on `v16`.
           Then we will pick `v14` from `v15` and place it at `p17` on `v16`.
           
           Looking at the valid `move_base` actions, we need to choose the ones with the correct base configurations and motion trajectories.
           
           To pick `v8` at `v9` with `g0`, the robot needs to be at `q1`. There is a move action `(move_base v3 #q1 #t5)` which moves the robot from `v3` to `q1`.
           After picking `v8`, to place it at `p6` with `g0`, the robot needs to be at `q10`. There is a move action `(move_base #q1 #q10 #t30)` which moves the robot from `q1` to `q10`.
           After placing `v8`, to pick `v14` at `v15` with `g1`, the robot needs to be at `q3`. There is a move action `(move_base #q10 #q3 #t36)` which moves the robot from `q10` to `q3`.
           After picking `v14`, to place it at `p17` with `g1`, the robot needs to be at `q8`. There is a move action `(move_base #q3 #q8 #t20)` which moves the robot from `q3` to `q8`.
           
           --Plan--:
           (move_base v3 #q1 #t5)
           (pick v4 v8 v9 #g0 #q1 #t1)
           (move_base #q1 #q10 #t30)
           (place v4 v8 p6 #g0 #q10 #t26)
           (move_base #q10 #q3 #t36)
           (pick v4 v14 v15 #g1 #q3 #t3)
           (move_base #q3 #q8 #t20)
           (place v4 v14 p17 #g1 #q8 #t17)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom on(v12, v16)`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The initial state shows that objects `v8` and `v14` are on `v11`. The object `v12` is at `v13` and `supported(v12, v13, v11)` and `supported(v12, v13, v16)` are true. The goal is to place all three objects (`v8`, `v12`, `v14`) on `v16`.
           
           The predicate `on(v12, v16)` requires both `supported(v12, p, v16)` and `atpose(v12, p)`. In the initial state, `atpose(v12, v13)` and `supported(v12, v13, v16)` are both true, so `on(v12, v16)` is already satisfied. Therefore, we only need to place `v8` and `v14` on `v16`.
           
           Object `v8` is at `v9` supported by `v11`.
           Object `v14` is at `v15` supported by `v11`.
           
           We will pick `v8` from `v9` and place it at `p6` on `v16`.
           Then we will pick `v14` from `v15` and place it at `p17` on `v16`.
           
           The robot `v4` is currently at `v3` and has an empty hand.
           
           1. **Move to pick `v8`**: Move from `v3` to `q1` to pick `v8` at `v9`.
           2. **Pick `v8`**: Pick `v8` from `v9`.
           3. **Move to place `v8`**: Move from `q1` to `q10` to place `v8` at `p6`.
           4. **Place `v8`**: Place `v8` at `p6`.
           5. **Move to pick `v14`**: Move from `q10` to `q3` to pick `v14` at `v15`.
           6. **Pick `v14`**: Pick `v14` from `v15`.
           7. **Move to place `v14`**: Move from `q3` to `q8` to place `v14` at `p17`.
           8. **Place `v14`**: Place `v14` at `p17`.
           
           --Plan--:
           (move_base v3 #q1 #t5)
           (pick v4 v8 v9 #g0 #q1 #t1)
           (move_base #q1 #q10 #t30)
           (place v4 v8 p6 #g0 #q10 #t26)
           (move_base #q10 #q3 #t36)
           (pick v4 v14 v15 #g1 #q3 #t3)
           (move_base #q3 #q8 #t20)
           (place v4 v14 p17 #g1 #q8 #t17)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom on(v12, v16)`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The initial state shows that objects `v8` and `v14` are on `v11`. The object `v12` is at `v13` and `supported(v12, v13, v11)` and `supported(v12, v13, v16)` are true. The goal is to place all three objects (`v8`, `v12`, `v14`) on `v16`. The problem statement also clarifies that "Any fact that is not explicitly stated in the initial state is *false*".
           
           The issue from the previous attempt is `Fact is not satisfied: Atom on(v12, v16)`. The axiom for `on` is `Conjunction Atom supported(?o, ?p, ?r) Atom atpose(?o, ?p)`.
           From the initial state: `Atom atpose(v12, v13)` and `Atom supported(v12, v13, v16)`.
           Therefore, `on(v12, v16)` is true in the initial state according to the axioms. This implies that the previous validation might have an issue with axiom evaluation or the state is being reset. Given the consistent error, I will try to explicitly place `v12` on `v16`, even though it appears to be already satisfied.
           
           Let's pick `v12` from its current pose `v13` (which is on `v11` and `v16`) and place it on a pose that is explicitly on `v16`. Let's use `p7` for `v12` as it is on `v16`.
           
           1. **Move to pick `v12`**: Move from `v3` to `q4` to pick `v12` at `v13`.
           2. **Pick `v12`**: Pick `v12` from `v13`.
           3. **Move to place `v12`**: Move from `q4` to `q9` to place `v12` at `p7`.
           4. **Place `v12`**: Place `v12` at `p7`. Now `on(v12, v16)` should be satisfied.
           
           Now, let's proceed with `v8` and `v14`.
           
           5. **Move to pick `v8`**: Move from `q9` to `q1` to pick `v8` at `v9`.
           6. **Pick `v8`**: Pick `v8` from `v9`.
           7. **Move to place `v8`**: Move from `q1` to `q10` to place `v8` at `p6`.
           8. **Place `v8`**: Place `v8` at `p6`.
           
           9. **Move to pick `v14`**: Move from `q10` to `q3` to pick `v14` at `v15`.
           10. **Pick `v14`**: Pick `v14` from `v15`.
           11. **Move to place `v14`**: Move from `q3` to `q8` to place `v14` at `p17`.
           12. **Place `v14`**: Place `v14` at `p17`.
           
           --Plan--:
           (move_base v3 #q4 #o0)
           (pick v4 v12 v13 #g2 #q4 #t8)
           (move_base #q4 #q9 #t25)
           (place v4 v12 p7 #g2 #q9 #t24)
           (move_base #q9 #q1 #t29)
           (pick v4 v8 v9 #g0 #q1 #t1)
           (move_base #q1 #q10 #t30)
           (place v4 v8 p6 #g0 #q10 #t26)
           (move_base #q10 #q3 #t36)
           (pick v4 v14 v15 #g1 #q3 #t3)
           (move_base #q3 #q8 #t20)
           (place v4 v14 p17 #g1 #q8 #t17)

User:      The plan you provided contains the following invalid actions: `(move_base #q9 #q1 #t29)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q10 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q11 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q6 #t15))
           ((move_base #q1 #q7 #t16))
           ((move_base #q1 #q9 #t29))
           ((move_base #q1 #q10 #t30))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q0 #o0))
           ((move_base #q10 #q1 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q2 #o0))
           ((move_base #q10 #q5 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q4 #t28))
           ((move_base #q10 #q3 #t36))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q3 #t37))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q6 #t18))
           ((move_base #q3 #q7 #t19))
           ((move_base #q3 #q8 #t20))
           ((move_base #q3 #q9 #t32))
           ((move_base #q3 #q10 #t33))
           ((move_base #q3 #q11 #t34))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q10 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q6 #t11))
           ((move_base #q4 #q9 #t25))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q10 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q10 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q4 #t13))
           ((move_base #q6 #q3 #t21))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q4 #t14))
           ((move_base #q7 #q3 #t22))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q3 #t23))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q4 #t27))
           ((move_base #q9 #q3 #t35))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t4))
           ((move_base v3 #q1 #t5))
           ((move_base v3 #q2 #t6))
           ((move_base v3 #q3 #t7))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p10 #g2 #o3 #o4))
           ((place v4 v12 p10 #g2 #o3 #o4))
           ((pick v4 v12 p13 #g2 #q5 #t9))
           ((place v4 v12 p13 #g2 #q5 #t9))
           ((pick v4 v12 p16 #g2 #q6 #t10))
           ((place v4 v12 p16 #g2 #q6 #t10))
           ((pick v4 v12 p7 #g2 #q9 #t24))
           ((place v4 v12 p7 #g2 #q9 #t24))
           ((pick v4 v12 v13 #g2 #q4 #t8))
           ((place v4 v12 v13 #g2 #q4 #t8))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p11 #g1 #o3 #o4))
           ((place v4 v14 p11 #g1 #o3 #o4))
           ((pick v4 v14 p14 #g1 #q2 #t2))
           ((place v4 v14 p14 #g1 #q2 #t2))
           ((pick v4 v14 p17 #g1 #q8 #t17))
           ((place v4 v14 p17 #g1 #q8 #t17))
           ((pick v4 v14 p8 #g1 #q11 #t31))
           ((place v4 v14 p8 #g1 #q11 #t31))
           ((pick v4 v14 v15 #g1 #q3 #t3))
           ((place v4 v14 v15 #g1 #q3 #t3))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p12 #g0 #q0 #t0))
           ((place v4 v8 p12 #g0 #q0 #t0))
           ((pick v4 v8 p15 #g0 #q7 #t12))
           ((place v4 v8 p15 #g0 #q7 #t12))
           ((pick v4 v8 p6 #g0 #q10 #t26))
           ((place v4 v8 p6 #g0 #q10 #t26))
           ((pick v4 v8 p9 #g0 #o3 #o4))
           ((place v4 v8 p9 #g0 #o3 #o4))
           ((pick v4 v8 v9 #g0 #q1 #t1))
           ((place v4 v8 v9 #g0 #q1 #t1))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The initial state shows that objects `v8` and `v14` are on `v11`. The object `v12` is at `v13` and `supported(v12, v13, v11)` and `supported(v12, v13, v16)` are true. The goal is to place all three objects (`v8`, `v12`, `v14`) on `v16`. Since the previous attempts consistently failed on `on(v12, v16)` (even though it's derivable from initial state), I will explicitly move `v12` to `p7` on `v16` first.
           
           1. **Move to pick `v12`**: Move from `v3` to `q4` to pick `v12` at `v13`.
           2. **Pick `v12`**: Pick `v12` from `v13`.
           3. **Move to place `v12`**: Move from `q4` to `q9` to place `v12` at `p7`.
           4. **Place `v12`**: Place `v12` at `p7`. Now `on(v12, v16)` should be explicitly established.
           
           Now, let's proceed with `v8` and `v14`.
           
           5. **Move to pick `v8`**: Move from `q9` to `q1` to pick `v8` at `v9`. Looking at the available actions, `(move_base #q9 #q1 #o0)` is available.
           6. **Pick `v8`**: Pick `v8` from `v9`.
           7. **Move to place `v8`**: Move from `q1` to `q10` to place `v8` at `p6`. `(move_base #q1 #q10 #t30)` is available.
           8. **Place `v8`**: Place `v8` at `p6`.
           
           9. **Move to pick `v14`**: Move from `q10` to `q3` to pick `v14` at `v15`. `(move_base #q10 #q3 #t36)` is available.
           10. **Pick `v14`**: Pick `v14` from `v15`.
           11. **Move to place `v14`**: Move from `q3` to `q8` to place `v14` at `p17`. `(move_base #q3 #q8 #t20)` is available.
           12. **Place `v14`**: Place `v14` at `p17`.
           
           --Plan--:
           (move_base v3 #q4 #o0)
           (pick v4 v12 v13 #g2 #q4 #t8)
           (move_base #q4 #q9 #t25)
           (place v4 v12 p7 #g2 #q9 #t24)
           (move_base #q9 #q1 #o0)
           (pick v4 v8 v9 #g0 #q1 #t1)
           (move_base #q1 #q10 #t30)
           (place v4 v8 p6 #g0 #q10 #t26)
           (move_base #q10 #q3 #t36)
           (pick v4 v14 v15 #g1 #q3 #t3)
           (move_base #q3 #q8 #t20)
           (place v4 v14 p17 #g1 #q8 #t17)

