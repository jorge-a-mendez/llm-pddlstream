User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v4, v5)
           Atom type(v8, v17)
           Atom stackable(v15, v10)
           Atom atpose(v15, v16)
           Atom bconf(v3)
           Atom supported(v8, v9, v11)
           Atom controllable(v4)
           Atom graspable(v12)
           Atom arm(v4)
           Atom supported(v12, v13, v14)
           Atom arm(v6)
           Atom graspable(v15)
           Atom canmove()
           Atom ataconf(v6, v7)
           Atom handempty(v6)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom pose(v15, v16)
           Atom ataconf(v4, v5)
           Atom aconf(v6, v7)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom supported(v15, v16, v11)
           Atom atbconf(v3)
           Atom atpose(v12, v13)
           Atom stackable(v8, v18)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)
           Atom type(v12, v17)
           Atom handempty(v4)
           Atom graspable(v8)
           Atom stackable(v12, v18)
           Atom stackable(v12, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom grasp(v8, v23)
           Atom grasp(v8, v21)
           Atom grasp(v8, v22)
           Atom grasp(v8, v20)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v12, #o1)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v23, v26, v27)
           Atom bconf(#q3)
           Atom atraj(#t7)
           Atom kin(v4, v8, v9, v22, #q3, #t7)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v20, v24, v25)
           Atom bconf(v28)
           Atom atraj(v29)
           Atom kin(v4, v8, v19, v21, v28, v29)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v8, v19, v22, #q2, #t5)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v3, #o0, v26)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v28, #o0, v24)
           Atom basemotion(v28, #o0, v3)
           Atom basemotion(v24, #o0, v28)
           Atom basemotion(v28, #o0, v28)
           Atom basemotion(v26, #o0, v28)
           Atom basemotion(v3, #o0, v28)
           Atom basemotion(v28, #o0, v26)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(#q2, #o0, v26)
           Atom basemotion(#q2, #o0, v28)
           Atom basemotion(v24, #o0, #q2)
           Atom basemotion(v28, #o0, #q2)
           Atom basemotion(v26, #o0, #q2)
           Atom basemotion(#q2, #o0, v24)
           Atom basemotion(v26, #o0, #q3)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(v28, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t9)
           Atom basemotion(#q3, #t9, #q2)
           Atom basemotion(#q3, #o0, v24)
           Atom basemotion(#q3, #o0, v26)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, v28)
           Atom basemotion(v24, #o0, #q3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(#o3, #o0, v28)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, v24)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(v28, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v28 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v28 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v24 #o0))
           ((move_base #q3 v26 #o0))
           ((move_base #q3 v28 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q2 #t9))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q3 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v28 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q3 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v28 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v28 #o3 #o0))
           ((move_base v28 #q2 #o0))
           ((move_base v28 #q3 #o0))
           ((move_base v28 v24 #o0))
           ((move_base v28 v26 #o0))
           ((move_base v28 v28 #o0))
           ((move_base v28 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v28 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t6))
           ((move_base v3 #q3 #t8))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 v24 v25))
           ((place v4 v8 v19 v20 v24 v25))
           ((pick v4 v8 v19 v21 v28 v29))
           ((place v4 v8 v19 v21 v28 v29))
           ((pick v4 v8 v19 v22 #q2 #t5))
           ((place v4 v8 v19 v22 #q2 #t5))
           ((pick v4 v8 v19 v23 v26 v27))
           ((place v4 v8 v19 v23 v26 v27))
           ((pick v4 v8 v9 v22 #q3 #t7))
           ((place v4 v8 v9 v22 #q3 #t7))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `(on ?green v18)` and `(type ?green v17)`. Looking at the initial state, we have `(type v8 v17)`, so `v8` is the object we need to place on `v18`. Currently `v8` is at `v9` and is supported by `v11`. We need to pick `v8` from its current location and place it on `v18`.
           
           The robot has two arms, `v4` and `v6`. `v4` is `handempty`. `v6` is also `handempty`.
           Object `v8` is graspable and stackable on `v10` and `v18`.
           `v8` is currently at `v9`. `v18` is a surface.
           
           To achieve `(on v8 v18)`, we need to pick `v8` and then place it on `v18`.
           Let's find the `pick` action for `v8`.
           We have several `pick` options for `v8`:
           - `(pick v4 v8 #o2 v20 #o3 #o4)`
           - `(pick v4 v8 #o2 v21 #o3 #o4)`
           - `(pick v4 v8 #o2 v22 #o3 #o4)`
           - `(pick v4 v8 #o2 v23 #o3 #o4)`
           - `(pick v4 v8 v19 v20 v24 v25)`
           - `(pick v4 v8 v19 v21 v28 v29)`
           - `(pick v4 v8 v19 v22 #q2 #t5)`
           - `(pick v4 v8 v19 v23 v26 v27)`
           - `(pick v4 v8 v9 v22 #q3 #t7)`
           
           Currently, `v8` is at `v9`. So we should use a `pick` action with `v9` as the pose.
           The only available `pick` action with `v9` as the pose is `(pick v4 v8 v9 v22 #q3 #t7)`.
           The preconditions for this action are:
           - `kin(v4, v8, v9, v22, #q3, #t7)`: This is true in the initial state.
           - `atpose(v8, v9)`: This is true in the initial state.
           - `handempty(v4)`: This is true in the initial state.
           - `atbconf(#q3)`: This is not true. Current `atbconf` is `v3`. So we need a `move_base` action.
           - `~unsafeapproach(v8, v9, v22)`: There is no `unsafeapproach` with `v8, v9, v22` in the initial state, so this is true.
           - `~unsafeatraj(#t7)`: There is no `unsafeatraj` for `#t7` in the initial state, so this is true.
           
           So, before picking, we need to move the base from `v3` to `#q3`. The action is `(move_base v3 #q3 #t8)`.
           After the `pick` action, `v8` will be held by `v4`. The `atpose(v8, v9)` will be negated.
           
           Now we need to place `v8` on `v18`. The goal is `(on v8 v18)`. This means we need to find a pose for `v8` on `v18`. There are no specific poses for `v8` on `v18` given, but the axioms `supported(v8, v19, v18)` and `supported(v8, #o2, v10)` and `supported(v8, #o2, v18)` indicate that `v19` and `#o2` are possible poses for `v8` on `v18`.
           Let's consider placing `v8` at `v19` on `v18`.
           The `place` action would be of the form `(place v4 v8 v19 <grasp> <bconf> <atraj>)`.
           Available `place` actions for `v8` at `v19`:
           - `(place v4 v8 v19 v20 v24 v25)`
           - `(place v4 v8 v19 v21 v28 v29)`
           - `(place v4 v8 v19 v22 #q2 #t5)`
           - `(place v4 v8 v19 v23 v26 v27)`
           
           We picked `v8` with grasp `v22`. So we should use the same grasp `v22` for placing.
           The `place` action for `v8` using grasp `v22` at pose `v19` is `(place v4 v8 v19 v22 #q2 #t5)`.
           The preconditions for this action are:
           - `kin(v4, v8, v19, v22, #q2, #t5)`: This is true in the initial state.
           - `atgrasp(v4, v8, v22)`: This will be true after the `pick` action.
           - `atbconf(#q2)`: Current `atbconf` is `#q3` after picking. So we need a `move_base` action from `#q3` to `#q2`.
           - `~unsafepose(v8, v19)`: There is no `unsafepose` for `v8, v19` in the initial state.
           - `~unsafeapproach(v8, v19, v22)`: There is no `unsafeapproach` for `v8, v19, v22` in the initial state.
           - `~unsafeatraj(#t5)`: There is no `unsafeatraj` for `#t5` in the initial state.
           
           So, after picking, we need to move the base from `#q3` to `#q2`. The action is `(move_base #q3 #q2 #t9)`.
           
           Therefore, the plan is:
           1. `move_base` from `v3` to `#q3` to satisfy `atbconf` for the pick action.
           2. `pick` `v8` from `v9` with grasp `v22` using arm `v4`.
           3. `move_base` from `#q3` to `#q2` to satisfy `atbconf` for the place action.
           4. `place` `v8` at `v19` on `v18` with grasp `v22` using arm `v4`.
           
           --Plan--:
           (move_base v3 #q3 #t8)
           (pick v4 v8 v9 v22 #q3 #t7)
           (move_base #q3 #q2 #t9)
           (place v4 v8 v19 v22 #q2 #t5)

