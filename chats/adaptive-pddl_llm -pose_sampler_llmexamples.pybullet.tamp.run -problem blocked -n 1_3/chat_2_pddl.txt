User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v4, v5)
           Atom type(v8, v17)
           Atom stackable(v15, v10)
           Atom atpose(v15, v16)
           Atom bconf(v3)
           Atom supported(v8, v9, v11)
           Atom controllable(v4)
           Atom graspable(v12)
           Atom arm(v4)
           Atom supported(v12, v13, v14)
           Atom arm(v6)
           Atom graspable(v15)
           Atom canmove()
           Atom ataconf(v6, v7)
           Atom handempty(v6)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom pose(v15, v16)
           Atom ataconf(v4, v5)
           Atom aconf(v6, v7)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom supported(v15, v16, v11)
           Atom atbconf(v3)
           Atom atpose(v12, v13)
           Atom stackable(v8, v18)
           Atom type(v12, v17)
           Atom handempty(v4)
           Atom graspable(v8)
           Atom stackable(v12, v18)
           Atom stackable(v12, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom grasp(v8, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v12, #o1)
           Atom supported(v8, #o2, v10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true.
           From the initial state, we know `type(v8, v17)` and `type(v12, v17)`. This means that either `v8` or `v12` could be `?green`.
           We also need `on(?green, v18)`.
           We know `stackable(v8, v18)` and `stackable(v12, v18)`. This means both `v8` and `v12` can be placed on `v18`.
           Currently, `v8` is `atpose(v8, v9)` and `supported(v8, v9, v11)`. It is not on `v18`.
           Currently, `v12` is `atpose(v12, v13)` and `supported(v12, v13, v14)`. It is not on `v18`.
           
           Let's choose `v8` as `?green`. To achieve `on(v8, v18)`, we need `supported(v8, ?p, v18)` and `atpose(v8, ?p)`.
           We have `pose(v8, #o2)` and `supported(v8, #o2, v18)`. So if we place `v8` at `#o2`, it will be on `v18`.
           
           The plan would be:
           1. Pick `v8` from its current pose `v9` using arm `v4`.
           2. Place `v8` onto `v18` at pose `#o2` using arm `v4`.
           
           Let's check preconditions for `pick v4 v8 v9 #o1 #o3 #o4`:
           - `kin(v4, v8, v9, #o1, #o3, #o4)`: True (given)
           - `atpose(v8, v9)`: True (given)
           - `handempty(v4)`: True (given)
           - `atbconf(#o3)`: Currently `atbconf(v3)`. We need to move base to `#o3`.
           - `negated unsafeapproach(v8, v9, #o1)`: Assumed true as not in initial state and no way to make it false.
           - `negated unsafeatraj(#o4)`: Assumed true.
           
           So we need a `move_base` action first. The available actions are:
           `((move_base v3 #o3 #o0))`
           
           After `move_base v3 #o3 #o0`:
           - `atbconf(#o3)` becomes true. `atbconf(v3)` becomes false. `canmove()` becomes false.
           
           Then `pick v4 v8 v9 #o1 #o3 #o4`:
           - `atgrasp(v4, v8, #o1)` becomes true.
           - `canmove()` becomes true.
           - `atpose(v8, v9)` becomes false.
           - `handempty(v4)` becomes false.
           
           Now, place `v8` at `#o2` on `v18`.
           `place v4 v8 #o2 #o1 #o3 #o4`:
           - `kin(v4, v8, #o2, #o1, #o3, #o4)`: True (given)
           - `atgrasp(v4, v8, #o1)`: True (from pick action)
           - `atbconf(#o3)`: True (from move_base action)
           - `negated unsafepose(v8, #o2)`: Assumed true.
           - `negated unsafeapproach(v8, #o2, #o1)`: Assumed true.
           - `negated unsafeatraj(#o4)`: Assumed true.
           
           After `place v4 v8 #o2 #o1 #o3 #o4`:
           - `atpose(v8, #o2)` becomes true.
           - `handempty(v4)` becomes true.
           - `canmove()` becomes true.
           - `atgrasp(v4, v8, #o1)` becomes false.
           
           With `atpose(v8, #o2)` and `supported(v8, #o2, v18)` (given), the axiom `on(v8, v18)` becomes true.
           With `type(v8, v17)` (given) and `on(v8, v18)` (achieved), `new-axiom@0()` becomes true.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)

