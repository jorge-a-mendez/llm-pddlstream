User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v14, v15)
           Atom rock(v4)
           Atom type(v8, v6)
           Atom rover(v14)
           Atom rock(v7)
           Atom rock(v3)
           Atom store(v16)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom free(v12, v16)
           Atom onboard(v10, v14)
           Atom camera(v10)
           Atom type(v7, v6)
           Atom conf(v12, v13)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom lander(v9)
           Atom type(v5, v6)
           Atom free(v14, v16)
           Atom type(v1, v2)
           Atom rover(v12)
           Atom objective(v17)
           Atom onboard(v10, v12)
           Atom mode(v11)
           Atom rock(v5)
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom above(v12, #q5, v5)
           Atom conf(v12, #q5)
           Atom above(v12, #q7, v3)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #q0, #y0, v17)
           Atom imagerange(v12, #q0, v17)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q3, v8)
           Atom conf(v12, #q3)
           Atom above(v12, #q1, v4)
           Atom conf(v12, #q1)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q10, v5)
           Atom conf(v14, #q10)
           Atom comvisible(v14, #q8, #y3, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y3)
           Atom above(v14, #o5, v1)
           Atom above(v12, #q6, v1)
           Atom conf(v12, #q6)
           Atom imagevisible(v14, #q9, #y4, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y4)
           Atom imagevisible(v12, #q4, #y2, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t1, #q3)
           Atom motion(v12, #q2, #t6, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q3, #t3, #q2)
           Atom motion(v12, #q1, #t2, #q2)
           Atom motion(v12, #q2, #t0, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q0, #t7, #q2)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, v13, #t4, #q0)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #t17, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q0, #t14, #q7)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #t13, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q2, #t9, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #t11, #q2)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #t18, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #t8, #q2)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, v13, #t5, #q4)
           Atom motion(v12, #q2, #t10, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q10, #t15, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #t16, v15)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #t12, #q2)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q1 v4 v16))
           ((sample_rock v12 #q3 v8 v16))
           ((sample_rock v12 #q5 v5 v16))
           ((sample_rock v12 #q6 v1 v16))
           ((sample_rock v12 #q7 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q10 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t14 #q7))
           ((move v12 #q0 #t7 #q2))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t2 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #t0 #q1))
           ((move v12 #q2 #t1 #q3))
           ((move v12 #q2 #t10 #q4))
           ((move v12 #q2 #t6 v13))
           ((move v12 #q2 #t9 #q5))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t3 #q2))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t8 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t11 #q2))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q2))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t17 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t4 #q0))
           ((move v12 v13 #t5 #q4))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t15 #q8))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #t16 v15))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t18 #q10))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t13 #q9))
           ((calibrate v12 #q0 #y0 v17 v10))
           ((calibrate v12 #q4 #y2 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #q9 #y4 v18 v10))
           ((take_image v12 #q0 #y0 v17 v10 v11))
           ((take_image v12 #q4 #y2 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #q9 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y3 v9 v1))
           ((send_analysis v14 #q8 #y3 v9 v3))
           ((send_analysis v14 #q8 #y3 v9 v4))
           ((send_analysis v14 #q8 #y3 v9 v7))
           ((send_analysis v14 #q8 #y3 v9 v8))
           ((send_analysis v14 #q8 #y3 v9 v5))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q8 #y3 v9 v17 v11))
           ((send_image v14 #q8 #y3 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Detailed Plan for Achieving the New Axiom**
           
           Okay, so I've been tasked with generating a plan to satisfy the goal `Atom new-axiom@0()`. This is going to involve a conjunction of several atomic facts, and I'll need to work through each one to ensure the plan satisfies them all.
           
           My initial thought is to break down the `new-axiom@0()` axiom to understand the subgoals.
           
           The core of the problem seems to be getting images, analyzing samples, and then moving back to initial locations. The initial state provides the starting locations of the two rovers and information about the samples.
           
           I've determined that the subgoals are: getting two images, analyzing samples (one stone and one soil), and ensuring the rovers are free to store the materials, and that both are at their initial locations at the end. I need to achieve: `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedanalysis(v4)`, and `receivedanalysis(v8)`.
           
           Now, I'm thinking about the steps needed to accomplish the subgoals.
           
           I'll start with images. To get `receivedimage`, I'll use the available action `send_image`. This requires the rovers, `v12` and `v14`, which I've got, to move, calibrate, and take the images first. I'll need to move `v12` to `q0`, then `v4` to `q4`. Then take the image and send the image.
           Next, I'll need to move the rovers to locations for sampling and communicating with the lander. The rovers are close to their sample.
           
           So, I will analyze samples. I know `v4` is a stone. So I will sample that with `v12` and then `v8` with `v14`. I'll need the rovers to be at sampling locations. For `receivedanalysis`, I will use the action `send_analysis`. This will send a message. Then I will need to return the rovers back to their original configuration. I need `free(v12, v16)` and `free(v14, v16)`. Sampling will lead to `full`. I will need a `drop_rock` action after each sample.
           
           I have come up with the whole plan.
           
           1. **Move** rover `v12` to `#q0`.
           2. **Calibrate** the camera on rover `v12`.
           3. **Take** an image and store it.
           4. **Move** rover `v12` to the comms location.
           5. **Send** the first image to the lander.
           6. **Move** rover `v12` to location `#q4`.
           7. **Calibrate** the camera on rover `v12`.
           8. **Take** an image and store it.
           9. **Move** rover `v12` to the comms location.
           10. **Send** the second image to the lander.
           11. **Move** rover `v12` to the sample location.
           12. **Sample** the stone with rover `v12` and store it.
           13. **Move** rover `v12` to the comms location.
           14. **Send** analysis information.
           15. **Drop** the stone sample.
           16. **Move** rover `v12` back to its initial location.
           17. **Move** rover `v14` to the sample location.
           18. **Sample** the soil sample with rover `v14`.
           19. **Move** rover `v14` to the comms location.
           20. **Send** the analysis message.
           21. **Drop** the soil sample.
           22. **Move** rover `v14` back to its initial location.
           
           It seems all preconditions are met, I have accounted for all effects and ensured that everything I need is achieved, and that it all fits together.
           
           I am satisfied that this plan will satisfy the new axiom.
           
)

Model:     **A Detailed Plan for Achieving the New Axiom**
           
           Okay, so I've been tasked with generating a plan to satisfy the goal `Atom new-axiom@0()`. This is going to involve a conjunction of several atomic facts, and I'll need to work through each one to ensure the plan satisfies them all.
           
           My initial thought is to break down the `new-axiom@0()` axiom to understand the subgoals.
           
           The core of the problem seems to be getting images, analyzing samples, and then moving back to initial locations. The initial state provides the starting locations of the two rovers and information about the samples.
           
           I've determined that the subgoals are: getting two images, analyzing samples (one stone and one soil), and ensuring the rovers are free to store the materials, and that both are at their initial locations at the end. I need to achieve: `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedanalysis(v4)`, and `receivedanalysis(v8)`.
           
           Now, I'm thinking about the steps needed to accomplish the subgoals.
           
           I'll start with images. To get `receivedimage`, I'll use the available action `send_image`. This requires the rovers, `v12` and `v14`, which I've got, to move, calibrate, and take the images first. I'll need to move `v12` to `q0`, then `v4` to `q4`. Then take the image and send the image.
           Next, I'll need to move the rovers to locations for sampling and communicating with the lander. The rovers are close to their sample.
           
           So, I will analyze samples. I know `v4` is a stone. So I will sample that with `v12` and then `v8` with `v14`. I'll need the rovers to be at sampling locations. For `receivedanalysis`, I will use the action `send_analysis`. This will send a message. Then I will need to return the rovers back to their original configuration. I need `free(v12, v16)` and `free(v14, v16)`. Sampling will lead to `full`. I will need a `drop_rock` action after each sample.
           
           I have come up with the whole plan.
           
           1. **Move** rover `v12` to `#q0`.
           2. **Calibrate** the camera on rover `v12`.
           3. **Take** an image and store it.
           4. **Move** rover `v12` to the comms location.
           5. **Send** the first image to the lander.
           6. **Move** rover `v12` to location `#q4`.
           7. **Calibrate** the camera on rover `v12`.
           8. **Take** an image and store it.
           9. **Move** rover `v12` to the comms location.
           10. **Send** the second image to the lander.
           11. **Move** rover `v12` to the sample location.
           12. **Sample** the stone with rover `v12` and store it.
           13. **Move** rover `v12` to the comms location.
           14. **Send** analysis information.
           15. **Drop** the stone sample.
           16. **Move** rover `v12` back to its initial location.
           17. **Move** rover `v14` to the sample location.
           18. **Sample** the soil sample with rover `v14`.
           19. **Move** rover `v14` to the comms location.
           20. **Send** the analysis message.
           21. **Drop** the soil sample.
           22. **Move** rover `v14` back to its initial location.
           
           It seems all preconditions are met, I have accounted for all effects and ensured that everything I need is achieved, and that it all fits together.
           
           I am satisfied that this plan will satisfy the new axiom.
           

