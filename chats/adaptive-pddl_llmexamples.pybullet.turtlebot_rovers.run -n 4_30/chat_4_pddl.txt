User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v3, v2)
           Atom type(v8, v6)
           Atom conf(v12, v13)
           Atom rock(v1)
           Atom onboard(v10, v14)
           Atom type(v4, v2)
           Atom camera(v10)
           Atom atconf(v12, v13)
           Atom lander(v9)
           Atom store(v16)
           Atom supports(v10, v11)
           Atom type(v5, v6)
           Atom objective(v19)
           Atom rock(v4)
           Atom rover(v14)
           Atom objective(v17)
           Atom rock(v8)
           Atom type(v1, v2)
           Atom rock(v5)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom objective(v18)
           Atom atconf(v14, v15)
           Atom objective(v20)
           Atom onboard(v10, v12)
           Atom rock(v3)
           Atom mode(v11)
           Atom rover(v12)
           Atom free(v12, v16)
           Atom free(v14, v16)
           Atom rock(v7)
           Atom above(v12, #q7, v7)
           Atom conf(v12, #q7)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom above(v12, #q10, v3)
           Atom conf(v12, #q10)
           Atom imagevisible(v12, #q2, #y1, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v12, #q4, #y3, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #q6, v1)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q5, #y4, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q1, v5)
           Atom conf(v12, #q1)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q15, v8)
           Atom conf(v12, #q15)
           Atom imagevisible(v12, #q3, #y2, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #q11, #y7, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q8, #y5, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #q9, #y6, v19)
           Atom imagerange(v14, #q9, v19)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q12, #y8, v20)
           Atom imagerange(v14, #q12, v20)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v14, #q13, #y9, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, v13, #t24, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, v15, #t21, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #t5, #q4)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, v15, #t20, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, v15, #t14, #q9)
           Atom motion(v14, #q12, #t17, #q9)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #t3, #q2)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q10, #t18, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q6, #t26, #q7)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q8, #t10, v15)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q9, #t11, #q8)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q14, #t22, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #t19, #q10)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q10)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, #q10, #o2, #q15)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, v13, #t25, #q15)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q15, #t23, #q1)
           Atom motion(v12, #q7, #t8, #q0)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #t9, #q7)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q1, #t7, #q0)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q2, #t1, #q0)
           Atom motion(v12, #q0, #t6, v13)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, v15, #t15, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q9, #t16, #q11)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q11, #t12, #q8)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v12, #q0, #t13, #q3)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, v13, #t4, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q3, #t2, #q0)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q11)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q1 v5 v16))
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q15 v8 v16))
           ((sample_rock v12 #q6 v1 v16))
           ((sample_rock v12 #q7 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t13 #q3))
           ((move v12 #q0 #t6 v13))
           ((move v12 #q0 #t9 #q7))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t19 #q10))
           ((move v12 #q1 #t7 #q0))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q15))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t18 #q6))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t22 #q1))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q10))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t23 #q1))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t1 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t2 #q0))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t26 #q7))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t8 #q0))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t24 #q14))
           ((move v12 v13 #t25 #q15))
           ((move v12 v13 #t3 #q2))
           ((move v12 v13 #t4 #q3))
           ((move v12 v13 #t5 #q4))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t12 #q8))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t17 #q9))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #t10 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t11 #q8))
           ((move v14 #q9 #t16 #q11))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q9))
           ((move v14 v15 #t15 #q11))
           ((move v14 v15 #t20 #q12))
           ((move v14 v15 #t21 #q13))
           ((calibrate v12 #q2 #y1 v20 v10))
           ((calibrate v12 #q3 #y2 v17 v10))
           ((calibrate v12 #q4 #y3 v19 v10))
           ((calibrate v12 #q5 #y4 v18 v10))
           ((calibrate v14 #q11 #y7 v18 v10))
           ((calibrate v14 #q12 #y8 v20 v10))
           ((calibrate v14 #q13 #y9 v17 v10))
           ((calibrate v14 #q9 #y6 v19 v10))
           ((take_image v12 #q2 #y1 v20 v10 v11))
           ((take_image v12 #q3 #y2 v17 v10 v11))
           ((take_image v12 #q4 #y3 v19 v10 v11))
           ((take_image v12 #q5 #y4 v18 v10 v11))
           ((take_image v14 #q11 #y7 v18 v10 v11))
           ((take_image v14 #q12 #y8 v20 v10 v11))
           ((take_image v14 #q13 #y9 v17 v10 v11))
           ((take_image v14 #q9 #y6 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y5 v9 v1))
           ((send_analysis v14 #q8 #y5 v9 v3))
           ((send_analysis v14 #q8 #y5 v9 v4))
           ((send_analysis v14 #q8 #y5 v9 v5))
           ((send_analysis v14 #q8 #y5 v9 v7))
           ((send_analysis v14 #q8 #y5 v9 v8))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v20 v11))
           ((send_image v14 #q8 #y5 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, both equipped with camera v10 that supports mode v11. There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There's also a lander v9 for communication and a store v16 for samples, which is currently free for both rovers.
           
           The goal `new-axiom@0()` can be satisfied if we achieve:
           1. `receivedimage` for objectives v17, v18, v19, v20 in mode v11.
           2. `receivedanalysis` for rocks v1, v3, v4, v5, v7, v8.
           
           To achieve `receivedimage`, a rover needs to:
           a. Move to a configuration where the objective is visible.
           b. Calibrate its camera.
           c. Take an image of the objective.
           d. Move to a configuration where the lander is visible for communication.
           e. Send the image to the lander.
           
           To achieve `receivedanalysis`, a rover needs to:
           a. Move to a configuration where it is above a rock.
           b. Sample the rock (requires a free store).
           c. Move to a configuration where the lander is visible for communication.
           d. Send the analysis to the lander.
           
           Given that there are two rovers, we can try to parallelize some tasks. However, the available actions only allow rover v12 to take images of all four objectives, and rover v12 to sample all available rocks. Rover v14 can also take images and sample rocks, but the available actions only list its capabilities for specific objectives and rocks. Both rovers can send analysis and images to the lander.
           
           Let's break down the plan for each rover.
           
           Rover v12 has the ability to take images of v17, v18, v19, v20.
           Rover v12 has the ability to sample rocks v1, v3, v4, v5, v7, v8.
           Rover v14 has the ability to take images of v17, v18, v19, v20.
           Rover v14 has the ability to sample rocks v1, v3, v4, v5, v7, v8.
           
           It appears the goal is to get all images and all rock analyses. We need to consider how to efficiently do this with the available actions.
           
           For `receivedimage`:
           - `receivedimage(v17, v11)`: Can be achieved by v12 or v14.
           - `receivedimage(v18, v11)`: Can be achieved by v12 or v14.
           - `receivedimage(v19, v11)`: Can be achieved by v12 or v14.
           - `receivedimage(v20, v11)`: Can be achieved by v12 or v14.
           
           For `receivedanalysis`:
           - `receivedanalysis(v1)`: Can be achieved by v12 or v14.
           - `receivedanalysis(v3)`: Can be achieved by v12 or v14.
           - `receivedanalysis(v4)`: Can be achieved by v12 or v14.
           - `receivedanalysis(v5)`: Can be achieved by v12 or v14.
           - `receivedanalysis(v7)`: Can be achieved by v12 or v14.
           - `receivedanalysis(v8)`: Can be achieved by v12 or v14.
           
           Looking at the available actions:
           - Rover v12 can take all images and sample all rocks.
           - Rover v14 can also take all images and sample all rocks.
           
           It makes sense to utilize rover v12 for most of the tasks as it has direct image visibility and above predicates listed for all objects directly.
           Rover v12 starts at `v13`.
           Let's make rover v12 responsible for all rock analyses and all image transmissions.
           
           **Phase 1: Sample all rocks with v12**
           - v12 is at v13 initially. It needs to move to appropriate configurations for sampling.
           - `above(v12, #q7, v7)`
           - `above(v12, #q14, v4)`
           - `above(v12, #q10, v3)`
           - `above(v12, #q6, v1)`
           - `above(v12, #q1, v5)`
           - `above(v12, #q15, v8)`
           The store v16 is free for v12. So v12 can sample 6 rocks.
           
           **Phase 2: Take all images with v12**
           - v12 needs to calibrate and take images.
           - `imagevisible(v12, #q2, #y1, v20)`
           - `imagevisible(v12, #q4, #y3, v19)`
           - `imagevisible(v12, #q5, #y4, v18)`
           - `imagevisible(v12, #q3, #y2, v17)`
           
           **Phase 3: Send all analysis and images with v12**
           - v12 needs to move to a communication-visible configuration.
           - `comvisible(v12, #q0, #y0, v9)`
           
           Since the goal involves many `receivedimage` and `receivedanalysis` predicates, we need to ensure each one is achieved.
           
           Let's plan to make rover v12 do all the image capturing and analysis sending.
           Since rover v12 can sample multiple rocks, we need to consider its store v16. It starts as `free(v12, v16)`. Each sample makes it `full(v12, v16)` and then `analyzed`. We can only sample one rock at a time. After sampling, we need to `drop_rock` to free the store for the next sample if we want to sample another rock without sending analysis first. However, `analyzed` remains true even after dropping. The goal only cares about `receivedanalysis`, not about the store state for sampling *all* rocks.
           
           The `new-axiom@0()` goal specifies several `receivedimage` and `receivedanalysis` predicates. We need to ensure *all* of them are satisfied.
           
           Let's make rover v12 responsible for sampling all rocks, then sending all analyses, then taking all images, and finally sending all images. This sequence minimizes movement between different types of tasks (sampling vs. imaging) and between locations for those tasks and the communication location.
           
           **Rover v12 Plan:**
           1. Sample all rocks:
              - Move to #q7, sample v7.
              - Move to #q14, sample v4.
              - Move to #q10, sample v3.
              - Move to #q6, sample v1.
              - Move to #q1, sample v5.
              - Move to #q15, sample v8.
              (The store will become full and then free repeatedly, but `analyzed` will accumulate.)
           
           2. Take all images (calibrate before each image, since calibrate is undone by take_image):
              - Move to #q2, calibrate, take image of v20.
              - Move to #q4, calibrate, take image of v19.
              - Move to #q5, calibrate, take image of v18.
              - Move to #q3, calibrate, take image of v17.
           
           3. Send all analyses and images:
              - Move to #q0 (communication configuration).
              - Send analysis for v1, v3, v4, v5, v7, v8.
              - Send image for v17, v18, v19, v20.
           
           Let's refine the plan based on available actions and ensure preconditions are met.
           
           Initial state for v12: `atconf(v12, v13)`, `free(v12, v16)`, `onboard(v10, v12)`, `supports(v10, v11)`.
           The goal requires `receivedimage` for v17, v18, v19, v20.
           And `receivedanalysis` for v1, v3, v4, v5, v7, v8.
           
           **Plan for v12:**
           
           1.  **Sample v7:**
               - `move v12 v13 #o2 #q7` (Move from initial config v13 to #q7 to be above v7)
               - `sample_rock v12 #q7 v7 v16` (Store v16 becomes full, v7 analyzed. Store becomes free after drop_rock, but not needed yet)
           
           2.  **Sample v4:**
               - `move v12 #q7 #o2 #q14`
               - `sample_rock v12 #q14 v4 v16`
           
           3.  **Sample v3:**
               - `move v12 #q14 #o2 #q10`
               - `sample_rock v12 #q10 v3 v16`
           
           4.  **Sample v1:**
               - `move v12 #q10 #t18 #q6` (Use specific path)
               - `sample_rock v12 #q6 v1 v16`
           
           5.  **Sample v5:**
               - `move v12 #q6 #o2 #q1`
               - `sample_rock v12 #q1 v5 v16`
           
           6.  **Sample v8:**
               - `move v12 #q1 #o2 #q15`
               - `sample_rock v12 #q15 v8 v16`
           
           Now, all rocks are analyzed by v12. Next, images.
           
           7.  **Calibrate and take image of v20:**
               - `move v12 #q15 #o2 #q2` (Move to #q2 for v20)
               - `calibrate v12 #q2 #y1 v20 v10`
               - `take_image v12 #q2 #y1 v20 v10 v11`
           
           8.  **Calibrate and take image of v19:**
               - `move v12 #q2 #o2 #q4` (Move to #q4 for v19)
               - `calibrate v12 #q4 #y3 v19 v10`
               - `take_image v12 #q4 #y3 v19 v10 v11`
           
           9.  **Calibrate and take image of v18:**
               - `move v12 #q4 #o2 #q5` (Move to #q5 for v18)
               - `calibrate v12 #q5 #y4 v18 v10`
               - `take_image v12 #q5 #y4 v18 v10 v11`
           
           10. **Calibrate and take image of v17:**
               - `move v12 #q5 #o2 #q3` (Move to #q3 for v17)
               - `calibrate v12 #q3 #y2 v17 v10`
               - `take_image v12 #q3 #y2 v17 v10 v11`
           
           Now all images are taken by v12. Next, send data.
           
           11. **Move to communication point:**
               - `move v12 #q3 #t2 #q0` (Move to #q0 for communication)
           
           12. **Send all analyses:**
               - `send_analysis v12 #q0 #y0 v9 v7` (v7 was analyzed)
               - `send_analysis v12 #q0 #y0 v9 v4` (v4 was analyzed)
               - `send_analysis v12 #q0 #y0 v9 v3` (v3 was analyzed)
               - `send_analysis v12 #q0 #y0 v9 v1` (v1 was analyzed)
               - `send_analysis v12 #q0 #y0 v9 v5` (v5 was analyzed)
               - `send_analysis v12 #q0 #y0 v9 v8` (v8 was analyzed)
           
           13. **Send all images:**
               - `send_image v12 #q0 #y0 v9 v20 v11`
               - `send_image v12 #q0 #y0 v9 v19 v11`
               - `send_image v12 #q0 #y0 v9 v18 v11`
               - `send_image v12 #q0 #y0 v9 v17 v11`
           
           This plan covers all the requirements in the goal.
           
           Final check of preconditions and state changes:
           - `atconf` is updated with each `move`.
           - `free(v12, v16)` becomes `full(v12, v16)` after `sample_rock`.
           - The problem statement for `new-axiom@0()` (the goal condition) doesn't require `type(?soil, v6)` and `type(?stone, v2)` to be `receivedanalysis`, only that `receivedanalysis(?r)` for relevant rocks. The given initial state includes these types, and rocks are associated with them (e.g., `type(v3, v2)` meaning v3 is a stone). The goal implicitly requires all rocks v1, v3, v4, v5, v7, v8 to be analyzed.
           - `calibrated` is set by `calibrate` and reset by `take_image`. So, we need to calibrate before each `take_image`.
           - `haveimage` is set by `take_image`.
           - `receivedimage` and `receivedanalysis` are set by `send_image` and `send_analysis` respectively, and are terminal goal states.
           
           One minor point: the axiom also includes `atconf(v12, v13)` and `atconf(v14, v15)`, which are true in the initial state. They remain true if the rovers end up in these configurations, but it is not a strict requirement for the axiom. The key goal conditions are `receivedimage` and `receivedanalysis`.
           
           This seems like a valid plan.
           --Plan--:
           (move v12 v13 #o2 #q7)
           (sample_rock v12 #q7 v7 v16)
           (move v12 #q7 #o2 #q14)
           (sample_rock v12 #q14 v4 v16)
           (move v12 #q14 #o2 #q10)
           (sample_rock v12 #q10 v3 v16)
           (move v12 #q10 #t18 #q6)
           (sample_rock v12 #q6 v1 v16)
           (move v12 #q6 #o2 #q1)
           (sample_rock v12 #q1 v5 v16)
           (move v12 #q1 #o2 #q15)
           (sample_rock v12 #q15 v8 v16)
           (move v12 #q15 #o2 #q2)
           (calibrate v12 #q2 #y1 v20 v10)
           (take_image v12 #q2 #y1 v20 v10 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y3 v19 v10)
           (take_image v12 #q4 #y3 v19 v10 v11)
           (move v12 #q4 #o2 #q5)
           (calibrate v12 #q5 #y4 v18 v10)
           (take_image v12 #q5 #y4 v18 v10 v11)
           (move v12 #q5 #o2 #q3)
           (calibrate v12 #q3 #y2 v17 v10)
           (take_image v12 #q3 #y2 v17 v10 v11)
           (move v12 #q3 #t2 #q0)
           (send_analysis v12 #q0 #y0 v9 v7)
           (send_analysis v12 #q0 #y0 v9 v4)
           (send_analysis v12 #q0 #y0 v9 v3)
           (send_analysis v12 #q0 #y0 v9 v1)
           (send_analysis v12 #q0 #y0 v9 v5)
           (send_analysis v12 #q0 #y0 v9 v8)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. Let's re-examine the `new-axiom@0()` goal:
           
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           My previous plan correctly aimed to achieve all `receivedimage` predicates for objectives v17, v18, v19, v20 and all `receivedanalysis` predicates for rocks of type `v2` (stone) and `v6` (soil). The rocks are:
           - Type `v2` (stone): v1, v3, v4
           - Type `v6` (soil): v5, v7, v8
           
           So we need `receivedanalysis` for v1, v3, v4, v5, v7, v8.
           
           The crucial parts I missed in the previous evaluation of the goal were:
           - `atconf(v12, v13)`: Rover v12 must end up at configuration v13. My previous plan ended v12 at #q0.
           - `atconf(v14, v15)`: Rover v14 must end up at configuration v15. Rover v14 was not used in the previous plan, so it remained at its initial configuration `v15`. This part was implicitly satisfied, but I need to ensure it remains satisfied if I decide to use v14.
           - `free(v12, v16)`: Rover v12's store v16 must be free. My plan sampled multiple rocks, which makes the store `full`. While `analyzed` remains true, the store needs to be `free` at the end. This requires a `drop_rock` action after sampling.
           - `free(v14, v16)`: Rover v14's store v16 must be free. Since v14 wasn't used for sampling, this would be true.
           
           Let's modify the plan for rover v12 to include `drop_rock` after each sample to ensure `free(v12, v16)` is true at the end, and to ensure v12 returns to `v13`.
           
           **Revised Plan Strategy for v12:**
           
           1.  **Sample and drop each rock individually to keep store free:**
               - Move to config for rock X.
               - Sample rock X.
               - Drop rock X.
               Repeat for all 6 rocks.
           2.  **Take all images:**
               - Move to config for objective Y.
               - Calibrate.
               - Take image.
               Repeat for all 4 objectives.
           3.  **Move to communication point.**
           4.  **Send all analyses (now all rocks are analyzed).**
           5.  **Send all images (now all images are taken).**
           6.  **Move v12 back to v13.**
           
           Let's re-construct the plan carefully.
           
           Initial state for v12: `atconf(v12, v13)`, `free(v12, v16)`, `onboard(v10, v12)`, `supports(v10, v11)`.
           Rover v14 is at `atconf(v14, v15)` and `free(v14, v16)`, and it is not explicitly required to move, so it should stay there.
           
           **Revised Plan for v12:**
           
           1.  **Sample v7 and drop:**
               - `move v12 v13 #o2 #q7`
               - `sample_rock v12 #q7 v7 v16` (`full(v12, v16)`, `analyzed(v12, v7)`)
               - `drop_rock v12 v16` (`free(v12, v16)`)
           
           2.  **Sample v4 and drop:**
               - `move v12 #q7 #o2 #q14`
               - `sample_rock v12 #q14 v4 v16`
               - `drop_rock v12 v16`
           
           3.  **Sample v3 and drop:**
               - `move v12 #q14 #o2 #q10`
               - `sample_rock v12 #q10 v3 v16`
               - `drop_rock v12 v16`
           
           4.  **Sample v1 and drop:**
               - `move v12 #q10 #t18 #q6`
               - `sample_rock v12 #q6 v1 v16`
               - `drop_rock v12 v16`
           
           5.  **Sample v5 and drop:**
               - `move v12 #q6 #o2 #q1`
               - `sample_rock v12 #q1 v5 v16`
               - `drop_rock v12 v16`
           
           6.  **Sample v8 and drop:**
               - `move v12 #q1 #o2 #q15`
               - `sample_rock v12 #q15 v8 v16`
               - `drop_rock v12 v16`
           
           Now, all rocks (v1, v3, v4, v5, v7, v8) are `analyzed(v12, rock_id)`, and `free(v12, v16)` is true.
           
           7.  **Calibrate and take image of v20:**
               - `move v12 #q15 #o2 #q2`
               - `calibrate v12 #q2 #y1 v20 v10`
               - `take_image v12 #q2 #y1 v20 v10 v11` (`haveimage(v12, v20, v11)`)
           
           8.  **Calibrate and take image of v19:**
               - `move v12 #q2 #o2 #q4`
               - `calibrate v12 #q4 #y3 v19 v10`
               - `take_image v12 #q4 #y3 v19 v10 v11` (`haveimage(v12, v19, v11)`)
           
           9.  **Calibrate and take image of v18:**
               - `move v12 #q4 #o2 #q5`
               - `calibrate v12 #q5 #y4 v18 v10`
               - `take_image v12 #q5 #y4 v18 v10 v11` (`haveimage(v12, v18, v11)`)
           
           10. **Calibrate and take image of v17:**
               - `move v12 #q5 #o2 #q3`
               - `calibrate v12 #q3 #y2 v17 v10`
               - `take_image v12 #q3 #y2 v17 v10 v11` (`haveimage(v12, v17, v11)`)
           
           Now, all images are `haveimage(v12, objective_id, v11)`.
           
           11. **Move to communication point:**
               - `move v12 #q3 #t2 #q0`
           
           12. **Send all analyses:**
               - `send_analysis v12 #q0 #y0 v9 v7` (`receivedanalysis(v7)`)
               - `send_analysis v12 #q0 #y0 v9 v4` (`receivedanalysis(v4)`)
               - `send_analysis v12 #q0 #y0 v9 v3` (`receivedanalysis(v3)`)
               - `send_analysis v12 #q0 #y0 v9 v1` (`receivedanalysis(v1)`)
               - `send_analysis v12 #q0 #y0 v9 v5` (`receivedanalysis(v5)`)
               - `send_analysis v12 #q0 #y0 v9 v8` (`receivedanalysis(v8)`)
           
           13. **Send all images:**
               - `send_image v12 #q0 #y0 v9 v20 v11` (`receivedimage(v20, v11)`)
               - `send_image v12 #q0 #y0 v9 v19 v11` (`receivedimage(v19, v11)`)
               - `send_image v12 #q0 #y0 v9 v18 v11` (`receivedimage(v18, v11)`)
               - `send_image v12 #q0 #y0 v9 v17 v11` (`receivedimage(v17, v11)`)
           
           14. **Return v12 to v13:**
               - `move v12 #q0 #t6 v13` (Moving v12 back to its initial position v13, satisfying `atconf(v12, v13)`)
           
           All conditions for `new-axiom@0()` should now be met:
           - `atconf(v12, v13)`: Yes, in the last step.
           - `atconf(v14, v15)`: Yes, v14 was not moved from its initial configuration.
           - `free(v12, v16)`: Yes, after the last `drop_rock`.
           - `free(v14, v16)`: Yes, v14's store was never used.
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: Yes, after sending all images.
           - `receivedanalysis(?stone)` for type `v2` (v1, v3, v4): Yes, after sending all analyses.
           - `receivedanalysis(?soil)` for type `v6` (v5, v7, v8): Yes, after sending all analyses.
           
           This plan should now be valid.
           --Plan--:
           (move v12 v13 #o2 #q7)
           (sample_rock v12 #q7 v7 v16)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #q14)
           (sample_rock v12 #q14 v4 v16)
           (drop_rock v12 v16)
           (move v12 #q14 #o2 #q10)
           (sample_rock v12 #q10 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q10 #t18 #q6)
           (sample_rock v12 #q6 v1 v16)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 #q1)
           (sample_rock v12 #q1 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q15)
           (sample_rock v12 #q15 v8 v16)
           (drop_rock v12 v16)
           (move v12 #q15 #o2 #q2)
           (calibrate v12 #q2 #y1 v20 v10)
           (take_image v12 #q2 #y1 v20 v10 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y3 v19 v10)
           (take_image v12 #q4 #y3 v19 v10 v11)
           (move v12 #q4 #o2 #q5)
           (calibrate v12 #q5 #y4 v18 v10)
           (take_image v12 #q5 #y4 v18 v10 v11)
           (move v12 #q5 #o2 #q3)
           (calibrate v12 #q3 #y2 v17 v10)
           (take_image v12 #q3 #y2 v17 v10 v11)
           (move v12 #q3 #t2 #q0)
           (send_analysis v12 #q0 #y0 v9 v7)
           (send_analysis v12 #q0 #y0 v9 v4)
           (send_analysis v12 #q0 #y0 v9 v3)
           (send_analysis v12 #q0 #y0 v9 v1)
           (send_analysis v12 #q0 #y0 v9 v5)
           (send_analysis v12 #q0 #y0 v9 v8)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t6 v13)

