User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v7)
           Atom onboard(v10, v14)
           Atom lander(v9)
           Atom rock(v5)
           Atom conf(v14, v15)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom type(v5, v6)
           Atom camera(v10)
           Atom rock(v4)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom mode(v11)
           Atom rock(v3)
           Atom atconf(v14, v15)
           Atom objective(v18)
           Atom rover(v12)
           Atom type(v3, v2)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom objective(v17)
           Atom conf(v12, v13)
           Atom free(v14, v16)
           Atom rover(v14)
           Atom onboard(v10, v12)
           Atom free(v12, v16)
           Atom rock(v8)
           Atom type(v4, v2)
           Atom type(v7, v6)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v7)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom above(v14, #o5, v4)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom comvisible(v12, #q4, #y3, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v8)
           Atom above(v12, #q8, v1)
           Atom conf(v12, #q8)
           Atom above(v14, #q1, v1)
           Atom conf(v14, #q1)
           Atom imagevisible(v14, #q7, #y5, v18)
           Atom imagerange(v14, #q7, v18)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #t5, v13)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #t11, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #t3, #q4)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, v13, #t1, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q0, #t13, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #t4, #q4)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v14, v15, #t16, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, v15, #t9, #q5)
           Atom motion(v14, #q6, #t19, #q5)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, v15, #t17, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, v15, #t8, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t12, #q5)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q0, #t18, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q8, #t20, #q4)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q3, #t10, #q5)
           Atom motion(v14, #q3, #t2, v15)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q6, #t14, #q3)
           Atom motion(v14, #q5, #t7, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #t15, #q1)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q1, #t6, #q3)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q6)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q8 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q1 v1 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t13 #q2))
           ((move v12 #q0 #t18 #q8))
           ((move v12 #q0 #t3 #q4))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t4 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #t11 #q0))
           ((move v12 #q4 #t5 v13))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t20 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t1 #q2))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t12 #q5))
           ((move v14 #q1 #t6 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #t10 #q5))
           ((move v14 #q3 #t15 #q1))
           ((move v14 #q3 #t2 v15))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t7 #q3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t14 #q3))
           ((move v14 #q6 #t19 #q5))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t16 #q6))
           ((move v14 v15 #t17 #q7))
           ((move v14 v15 #t8 #q1))
           ((move v14 v15 #t9 #q5))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((calibrate v14 #q7 #y5 v18 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((take_image v14 #q7 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y3 v9 v3))
           ((send_analysis v12 #q4 #y3 v9 v4))
           ((send_analysis v12 #q4 #y3 v9 v5))
           ((send_analysis v12 #q4 #y3 v9 v7))
           ((send_analysis v12 #q4 #y3 v9 v8))
           ((send_analysis v12 #q4 #y3 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_image v12 #q4 #y3 v9 v18 v11))
           ((send_image v12 #q4 #y3 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Revised Plan to Achieve new-axiom@0()**
           
           Alright, I've got this. The goal is `new-axiom@0()` in the `rovers` domain, and I've broken it down. This axiom is a big conjunction of things, but it all boils down to two rovers, `v12` and `v14`, each needing to take and send an image, and also sample and send an analysis.  Crucially, `v12` has to end up at `v13` and `v14` has to end up at `v15`, and both rovers need to end up free.
           
           Here's the detailed plan I've put together, designed to meet all those conditions:
           
           **Rover `v14` (starting at `atconf(v14, v15)`, `free(v14, v16)`):**
           
           1.  **Move to Image Location:**  `atconf(v14, v15)` ->  `(move v14 v15 #t16 #q6)`  -> `atconf(v14, #q6)`
           2.  **Calibrate Camera:** `(calibrate v14 #q6 #y4 v17 v10)`  
           3.  **Take Image:** `(take_image v14 #q6 #y4 v17 v10 v11)`
           4.  **Move to Communication:**  `atconf(v14, #q6)` ->  `(move v14 #q6 #t14 #q3)` -> `atconf(v14, #q3)`
           5.  **Send Image:** `(send_image v14 #q3 #y2 v9 v17 v11)`  -> `receivedimage(v17, v11)`
           6.  **Move to Sample Location:** `atconf(v14, #q3)` -> `(move v14 #q3 #t10 #q5)` -> `atconf(v14, #q5)`
           7.  **Sample and Analyze Soil:** `(sample_rock v14 #q5 v5 v16)` -> `full(v14, v16)`, `analyzed(v14, v5)`
           8.  **Move to Communication:** `atconf(v14, #q5)` -> `(move v14 #q5 #t7 #q3)` -> `atconf(v14, #q3)`
           9.  **Send Analysis:** `(send_analysis v14 #q3 #y2 v9 v5)` -> `receivedanalysis(v5)`
           10. **Drop Rock (Free Store):** `full(v14, v16)` -> `(drop_rock v14 v16)` -> `free(v14, v16)`
           11. **Return to Original Location:** `atconf(v14, #q3)` -> `(move v14 #q3 #t2 v15)` -> `atconf(v14, v15)`
           
           **Rover `v12` (starting at `atconf(v12, v13)`, `free(v12, v16)`):**
           
           1.  **Move to Image Location:** `atconf(v12, v13)` -> `(move v12 v13 #t0 #q0)` -> `atconf(v12, #q0)`
           2.  **Calibrate Camera:** `(calibrate v12 #q0 #y0 v18 v10)`
           3.  **Take Image:** `(take_image v12 #q0 #y0 v18 v10 v11)`
           4.  **Move to Communication:** `atconf(v12, #q0)` -> `(move v12 #q0 #t3 #q4)` -> `atconf(v12, #q4)`
           5.  **Send Image:** `(send_image v12 #q4 #y3 v9 v18 v11)` -> `receivedimage(v18, v11)`
           6.  **Move to Sample Location:** `atconf(v12, #q4)` -> `(move v12 #q4 #o2 #q8)` -> `atconf(v12, #q8)`
           7.  **Sample and Analyze Rock:** `(sample_rock v12 #q8 v1 v16)` -> `full(v
)

Model:     **Revised Plan to Achieve new-axiom@0()**
           
           Alright, I've got this. The goal is `new-axiom@0()` in the `rovers` domain, and I've broken it down. This axiom is a big conjunction of things, but it all boils down to two rovers, `v12` and `v14`, each needing to take and send an image, and also sample and send an analysis.  Crucially, `v12` has to end up at `v13` and `v14` has to end up at `v15`, and both rovers need to end up free.
           
           Here's the detailed plan I've put together, designed to meet all those conditions:
           
           **Rover `v14` (starting at `atconf(v14, v15)`, `free(v14, v16)`):**
           
           1.  **Move to Image Location:**  `atconf(v14, v15)` ->  `(move v14 v15 #t16 #q6)`  -> `atconf(v14, #q6)`
           2.  **Calibrate Camera:** `(calibrate v14 #q6 #y4 v17 v10)`  
           3.  **Take Image:** `(take_image v14 #q6 #y4 v17 v10 v11)`
           4.  **Move to Communication:**  `atconf(v14, #q6)` ->  `(move v14 #q6 #t14 #q3)` -> `atconf(v14, #q3)`
           5.  **Send Image:** `(send_image v14 #q3 #y2 v9 v17 v11)`  -> `receivedimage(v17, v11)`
           6.  **Move to Sample Location:** `atconf(v14, #q3)` -> `(move v14 #q3 #t10 #q5)` -> `atconf(v14, #q5)`
           7.  **Sample and Analyze Soil:** `(sample_rock v14 #q5 v5 v16)` -> `full(v14, v16)`, `analyzed(v14, v5)`
           8.  **Move to Communication:** `atconf(v14, #q5)` -> `(move v14 #q5 #t7 #q3)` -> `atconf(v14, #q3)`
           9.  **Send Analysis:** `(send_analysis v14 #q3 #y2 v9 v5)` -> `receivedanalysis(v5)`
           10. **Drop Rock (Free Store):** `full(v14, v16)` -> `(drop_rock v14 v16)` -> `free(v14, v16)`
           11. **Return to Original Location:** `atconf(v14, #q3)` -> `(move v14 #q3 #t2 v15)` -> `atconf(v14, v15)`
           
           **Rover `v12` (starting at `atconf(v12, v13)`, `free(v12, v16)`):**
           
           1.  **Move to Image Location:** `atconf(v12, v13)` -> `(move v12 v13 #t0 #q0)` -> `atconf(v12, #q0)`
           2.  **Calibrate Camera:** `(calibrate v12 #q0 #y0 v18 v10)`
           3.  **Take Image:** `(take_image v12 #q0 #y0 v18 v10 v11)`
           4.  **Move to Communication:** `atconf(v12, #q0)` -> `(move v12 #q0 #t3 #q4)` -> `atconf(v12, #q4)`
           5.  **Send Image:** `(send_image v12 #q4 #y3 v9 v18 v11)` -> `receivedimage(v18, v11)`
           6.  **Move to Sample Location:** `atconf(v12, #q4)` -> `(move v12 #q4 #o2 #q8)` -> `atconf(v12, #q8)`
           7.  **Sample and Analyze Rock:** `(sample_rock v12 #q8 v1 v16)` -> `full(v

