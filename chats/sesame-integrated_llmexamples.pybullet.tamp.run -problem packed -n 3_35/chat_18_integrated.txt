User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g12: object
           #g13: object
           #g14: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q33: object
           #q34: object
           #q35: object
           #q36: object
           #q37: object
           #q38: object
           #q39: object
           #q40: object
           #q41: object
           #t102: object
           #t103: object
           #t104: object
           #t105: object
           #t106: object
           #t107: object
           #t108: object
           #t109: object
           #t110: object
           #t111: object
           #t112: object
           #t113: object
           #t114: object
           #t115: object
           #t116: object
           #t117: object
           #t118: object
           #t119: object
           #t120: object
           #t121: object
           #t122: object
           #t123: object
           #t124: object
           #t125: object
           #t126: object
           #t127: object
           #t128: object
           #t129: object
           @sink: object
           @stove: object
           p12: object
           p13: object
           p14: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v56: object
           v57: object
           v58: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.962, -0.794), (-0.048, 0.655)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.109, -0.298), (0.205, -0.202)).
           Object p7 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (0.157, -0.25, 0.781) and quaternion (0.0, 0.0, 0.867, -0.498).
           Object p6 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.244, 0.504), (-0.16, 0.588)).
           Object p13 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.202, 0.546, 0.781) and quaternion (0.0, 0.0, 0.993, 0.117).
           Object p3 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, 0.015), (-0.015, 0.085)).
           Object p12 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.2, -0.328, 0.781) and quaternion (0.0, 0.0, 1.0, 0.014).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p5)
           Atom supported(v8, p5, v16)
           Atom pose(v14, p3)
           Atom supported(v14, p3, v10)
           Atom supported(v14, p3, v16)
           Atom pose(v12, p4)
           Atom supported(v12, p4, v16)
           Atom supported(v12, p4, v10)
           Atom supported(v8, p5, v10)
           Atom kin(v32, v33, p3, v34, v35, v36)
           Atom kin(v32, v38, p5, v34, v35, v36)
           Atom kin(v32, v37, p4, v34, v35, v36)
           Atom pose(v14, p6)
           Atom supported(v14, p6, v10)
           Atom pose(v12, p7)
           Atom supported(v12, p7, v16)
           Atom pose(v8, p8)
           Atom supported(v8, p8, v16)
           Atom supported(v14, p6, v16)
           Atom supported(v12, p7, v10)
           Atom supported(v8, p8, v10)
           Atom kin(v32, v33, p6, v34, v35, v36)
           Atom kin(v32, v37, p7, v34, v35, v36)
           Atom kin(v32, v38, p8, v34, v35, v36)
           Atom pose(v8, p14)
           Atom supported(v8, p14, v16)
           Atom pose(v14, p12)
           Atom supported(v14, p12, v10)
           Atom supported(v14, p12, v16)
           Atom pose(v12, p13)
           Atom supported(v12, p13, v16)
           Atom supported(v12, p13, v10)
           Atom supported(v8, p14, v10)
           Atom kin(v32, v33, p12, v56, v35, v36)
           Atom kin(v32, v37, p13, v57, v35, v36)
           Atom kin(v32, v38, p14, v58, v35, v36)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g12)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g13)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g14)
           Atom bconf(#q35)
           Atom atraj(#t104)
           Atom kin(v4, v14, p6, #g12, #q35, #t104)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p3, #g12, #o3, #o4)
           Atom bconf(#q36)
           Atom atraj(#t105)
           Atom kin(v4, v14, v15, #g12, #q36, #t105)
           Atom bconf(#q40)
           Atom atraj(#t117)
           Atom kin(v4, v14, p12, #g12, #q40, #t117)
           Atom bconf(#q37)
           Atom atraj(#t106)
           Atom kin(v4, v8, v9, #g14, #q37, #t106)
           Atom kin(v4, v8, p5, #g14, #o3, #o4)
           Atom bconf(#q34)
           Atom atraj(#t103)
           Atom kin(v4, v8, p8, #g14, #q34, #t103)
           Atom bconf(#q39)
           Atom atraj(#t114)
           Atom kin(v4, v8, p14, #g14, #q39, #t114)
           Atom bconf(#q38)
           Atom atraj(#t107)
           Atom kin(v4, v12, p7, #g13, #q38, #t107)
           Atom bconf(#q33)
           Atom atraj(#t102)
           Atom kin(v4, v12, v13, #g13, #q33, #t102)
           Atom bconf(#q41)
           Atom atraj(#t118)
           Atom kin(v4, v12, p13, #g13, #q41, #t118)
           Atom kin(v4, v12, p4, #g13, #o3, #o4)
           Atom basemotion(#q35, #o0, v3)
           Atom btraj(#t110)
           Atom basemotion(v3, #t110, #q35)
           Atom basemotion(#q35, #o0, #q35)
           Atom basemotion(#q34, #o0, v3)
           Atom basemotion(#q34, #o0, #q34)
           Atom btraj(#t109)
           Atom basemotion(v3, #t109, #q34)
           Atom basemotion(#q35, #o0, #q34)
           Atom basemotion(#q34, #o0, #q35)
           Atom basemotion(#q37, #o0, v3)
           Atom btraj(#t112)
           Atom basemotion(v3, #t112, #q37)
           Atom basemotion(#q37, #o0, #q37)
           Atom basemotion(#q34, #o0, #q37)
           Atom basemotion(#q37, #o0, #q34)
           Atom basemotion(#q35, #o0, #q37)
           Atom basemotion(#q37, #o0, #q35)
           Atom basemotion(#q36, #o0, v3)
           Atom basemotion(#q36, #o0, #q35)
           Atom basemotion(#q36, #o0, #q37)
           Atom basemotion(#q36, #o0, #q34)
           Atom btraj(#t111)
           Atom basemotion(v3, #t111, #q36)
           Atom basemotion(#q35, #o0, #q36)
           Atom basemotion(#q37, #o0, #q36)
           Atom basemotion(#q34, #o0, #q36)
           Atom basemotion(#q36, #o0, #q36)
           Atom basemotion(#q40, #o0, v3)
           Atom basemotion(#q40, #o0, #q35)
           Atom basemotion(#q40, #o0, #q37)
           Atom basemotion(#q40, #o0, #q34)
           Atom basemotion(#q40, #o0, #q36)
           Atom basemotion(v3, #o0, #q40)
           Atom basemotion(#q35, #o0, #q40)
           Atom btraj(#t120)
           Atom basemotion(#q37, #t120, #q40)
           Atom basemotion(#q40, #o0, #q40)
           Atom basemotion(#q34, #o0, #q40)
           Atom btraj(#t128)
           Atom basemotion(#q36, #t128, #q40)
           Atom basemotion(#q41, #o0, v3)
           Atom btraj(#t129)
           Atom basemotion(#q41, #t129, #q37)
           Atom basemotion(#q41, #o0, #q34)
           Atom basemotion(v3, #o0, #q41)
           Atom btraj(#t121)
           Atom basemotion(#q37, #t121, #q41)
           Atom basemotion(#q34, #o0, #q41)
           Atom basemotion(#q41, #o0, #q41)
           Atom basemotion(#q35, #o0, #q41)
           Atom basemotion(#q41, #o0, #q35)
           Atom basemotion(#q36, #o0, #q41)
           Atom basemotion(#q41, #o0, #q36)
           Atom basemotion(#q40, #o0, #q41)
           Atom basemotion(#q41, #o0, #q40)
           Atom basemotion(#q33, #o0, v3)
           Atom basemotion(#q33, #o0, #q37)
           Atom basemotion(#q33, #o0, #q34)
           Atom basemotion(#q33, #o0, #q33)
           Atom btraj(#t108)
           Atom basemotion(v3, #t108, #q33)
           Atom basemotion(#q37, #o0, #q33)
           Atom basemotion(#q34, #o0, #q33)
           Atom btraj(#t124)
           Atom basemotion(#q41, #t124, #q33)
           Atom btraj(#t127)
           Atom basemotion(#q33, #t127, #q41)
           Atom basemotion(#q35, #o0, #q33)
           Atom basemotion(#q33, #o0, #q35)
           Atom basemotion(#q36, #o0, #q33)
           Atom basemotion(#q33, #o0, #q36)
           Atom btraj(#t123)
           Atom basemotion(#q40, #t123, #q33)
           Atom btraj(#t126)
           Atom basemotion(#q33, #t126, #q40)
           Atom basemotion(#q39, #o0, #q34)
           Atom basemotion(#q39, #o0, v3)
           Atom btraj(#t115)
           Atom basemotion(#q39, #t115, #q37)
           Atom basemotion(v3, #o0, #q39)
           Atom btraj(#t119)
           Atom basemotion(#q37, #t119, #q39)
           Atom basemotion(#q39, #o0, #q39)
           Atom basemotion(#q34, #o0, #q39)
           Atom btraj(#t125)
           Atom basemotion(#q33, #t125, #q39)
           Atom btraj(#t122)
           Atom basemotion(#q39, #t122, #q33)
           Atom basemotion(#q41, #o0, #q39)
           Atom basemotion(#q39, #o0, #q41)
           Atom basemotion(#q35, #o0, #q39)
           Atom basemotion(#q39, #o0, #q35)
           Atom btraj(#t116)
           Atom basemotion(#q36, #t116, #q39)
           Atom basemotion(#q39, #o0, #q36)
           Atom basemotion(#q40, #o0, #q39)
           Atom basemotion(#q39, #o0, #q40)
           Atom basemotion(#q38, #o0, v3)
           Atom basemotion(#q38, #o0, #q37)
           Atom basemotion(#q38, #o0, #q39)
           Atom basemotion(#q38, #o0, #q34)
           Atom btraj(#t113)
           Atom basemotion(v3, #t113, #q38)
           Atom basemotion(#q37, #o0, #q38)
           Atom basemotion(#q39, #o0, #q38)
           Atom basemotion(#q34, #o0, #q38)
           Atom basemotion(#q38, #o0, #q38)
           Atom basemotion(#q33, #o0, #q38)
           Atom basemotion(#q38, #o0, #q33)
           Atom basemotion(#q41, #o0, #q38)
           Atom basemotion(#q38, #o0, #q41)
           Atom basemotion(#q35, #o0, #q38)
           Atom basemotion(#q38, #o0, #q35)
           Atom basemotion(#q36, #o0, #q38)
           Atom basemotion(#q38, #o0, #q36)
           Atom basemotion(#q40, #o0, #q38)
           Atom basemotion(#q38, #o0, #q40)
           Atom kin(v4, v12, #o2, #g13, #o3, #o4)
           Atom kin(v4, v8, #o2, #g14, #o3, #o4)
           Atom kin(v4, v14, #o2, #g12, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q37)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q37, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q34, #o0, #o3)
           Atom basemotion(#o3, #o0, #q34)
           Atom basemotion(#q39, #o0, #o3)
           Atom basemotion(#o3, #o0, #q39)
           Atom basemotion(#q38, #o0, #o3)
           Atom basemotion(#o3, #o0, #q38)
           Atom basemotion(#q33, #o0, #o3)
           Atom basemotion(#o3, #o0, #q33)
           Atom basemotion(#q41, #o0, #o3)
           Atom basemotion(#o3, #o0, #q41)
           Atom basemotion(#q35, #o0, #o3)
           Atom basemotion(#o3, #o0, #q35)
           Atom basemotion(#q36, #o0, #o3)
           Atom basemotion(#o3, #o0, #q36)
           Atom basemotion(#q40, #o0, #o3)
           Atom basemotion(#o3, #o0, #q40)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q33 #o0))
           ((move_base #o3 #q34 #o0))
           ((move_base #o3 #q35 #o0))
           ((move_base #o3 #q36 #o0))
           ((move_base #o3 #q37 #o0))
           ((move_base #o3 #q38 #o0))
           ((move_base #o3 #q39 #o0))
           ((move_base #o3 #q40 #o0))
           ((move_base #o3 #q41 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q33 #o3 #o0))
           ((move_base #q33 #q33 #o0))
           ((move_base #q33 #q34 #o0))
           ((move_base #q33 #q35 #o0))
           ((move_base #q33 #q36 #o0))
           ((move_base #q33 #q37 #o0))
           ((move_base #q33 #q38 #o0))
           ((move_base #q33 v3 #o0))
           ((move_base #q33 #q39 #t125))
           ((move_base #q33 #q40 #t126))
           ((move_base #q33 #q41 #t127))
           ((move_base #q34 #o3 #o0))
           ((move_base #q34 #q33 #o0))
           ((move_base #q34 #q34 #o0))
           ((move_base #q34 #q35 #o0))
           ((move_base #q34 #q36 #o0))
           ((move_base #q34 #q37 #o0))
           ((move_base #q34 #q38 #o0))
           ((move_base #q34 #q39 #o0))
           ((move_base #q34 #q40 #o0))
           ((move_base #q34 #q41 #o0))
           ((move_base #q34 v3 #o0))
           ((move_base #q35 #o3 #o0))
           ((move_base #q35 #q33 #o0))
           ((move_base #q35 #q34 #o0))
           ((move_base #q35 #q35 #o0))
           ((move_base #q35 #q36 #o0))
           ((move_base #q35 #q37 #o0))
           ((move_base #q35 #q38 #o0))
           ((move_base #q35 #q39 #o0))
           ((move_base #q35 #q40 #o0))
           ((move_base #q35 #q41 #o0))
           ((move_base #q35 v3 #o0))
           ((move_base #q36 #o3 #o0))
           ((move_base #q36 #q33 #o0))
           ((move_base #q36 #q34 #o0))
           ((move_base #q36 #q35 #o0))
           ((move_base #q36 #q36 #o0))
           ((move_base #q36 #q37 #o0))
           ((move_base #q36 #q38 #o0))
           ((move_base #q36 #q41 #o0))
           ((move_base #q36 v3 #o0))
           ((move_base #q36 #q39 #t116))
           ((move_base #q36 #q40 #t128))
           ((move_base #q37 #o3 #o0))
           ((move_base #q37 #q33 #o0))
           ((move_base #q37 #q34 #o0))
           ((move_base #q37 #q35 #o0))
           ((move_base #q37 #q36 #o0))
           ((move_base #q37 #q37 #o0))
           ((move_base #q37 #q38 #o0))
           ((move_base #q37 v3 #o0))
           ((move_base #q37 #q39 #t119))
           ((move_base #q37 #q40 #t120))
           ((move_base #q37 #q41 #t121))
           ((move_base #q38 #o3 #o0))
           ((move_base #q38 #q33 #o0))
           ((move_base #q38 #q34 #o0))
           ((move_base #q38 #q35 #o0))
           ((move_base #q38 #q36 #o0))
           ((move_base #q38 #q37 #o0))
           ((move_base #q38 #q38 #o0))
           ((move_base #q38 #q39 #o0))
           ((move_base #q38 #q40 #o0))
           ((move_base #q38 #q41 #o0))
           ((move_base #q38 v3 #o0))
           ((move_base #q39 #o3 #o0))
           ((move_base #q39 #q34 #o0))
           ((move_base #q39 #q35 #o0))
           ((move_base #q39 #q36 #o0))
           ((move_base #q39 #q38 #o0))
           ((move_base #q39 #q39 #o0))
           ((move_base #q39 #q40 #o0))
           ((move_base #q39 #q41 #o0))
           ((move_base #q39 v3 #o0))
           ((move_base #q39 #q37 #t115))
           ((move_base #q39 #q33 #t122))
           ((move_base #q40 #o3 #o0))
           ((move_base #q40 #q34 #o0))
           ((move_base #q40 #q35 #o0))
           ((move_base #q40 #q36 #o0))
           ((move_base #q40 #q37 #o0))
           ((move_base #q40 #q38 #o0))
           ((move_base #q40 #q39 #o0))
           ((move_base #q40 #q40 #o0))
           ((move_base #q40 #q41 #o0))
           ((move_base #q40 v3 #o0))
           ((move_base #q40 #q33 #t123))
           ((move_base #q41 #o3 #o0))
           ((move_base #q41 #q34 #o0))
           ((move_base #q41 #q35 #o0))
           ((move_base #q41 #q36 #o0))
           ((move_base #q41 #q38 #o0))
           ((move_base #q41 #q39 #o0))
           ((move_base #q41 #q40 #o0))
           ((move_base #q41 #q41 #o0))
           ((move_base #q41 v3 #o0))
           ((move_base #q41 #q33 #t124))
           ((move_base #q41 #q37 #t129))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q39 #o0))
           ((move_base v3 #q40 #o0))
           ((move_base v3 #q41 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q33 #t108))
           ((move_base v3 #q34 #t109))
           ((move_base v3 #q35 #t110))
           ((move_base v3 #q36 #t111))
           ((move_base v3 #q37 #t112))
           ((move_base v3 #q38 #t113))
           ((pick v4 v12 #o2 #g13 #o3 #o4))
           ((place v4 v12 #o2 #g13 #o3 #o4))
           ((pick v4 v12 p13 #g13 #q41 #t118))
           ((place v4 v12 p13 #g13 #q41 #t118))
           ((pick v4 v12 p4 #g13 #o3 #o4))
           ((place v4 v12 p4 #g13 #o3 #o4))
           ((pick v4 v12 p7 #g13 #q38 #t107))
           ((place v4 v12 p7 #g13 #q38 #t107))
           ((pick v4 v12 v13 #g13 #q33 #t102))
           ((place v4 v12 v13 #g13 #q33 #t102))
           ((pick v4 v14 #o2 #g12 #o3 #o4))
           ((place v4 v14 #o2 #g12 #o3 #o4))
           ((pick v4 v14 p12 #g12 #q40 #t117))
           ((place v4 v14 p12 #g12 #q40 #t117))
           ((pick v4 v14 p3 #g12 #o3 #o4))
           ((place v4 v14 p3 #g12 #o3 #o4))
           ((pick v4 v14 p6 #g12 #q35 #t104))
           ((place v4 v14 p6 #g12 #q35 #t104))
           ((pick v4 v14 v15 #g12 #q36 #t105))
           ((place v4 v14 v15 #g12 #q36 #t105))
           ((pick v4 v8 #o2 #g14 #o3 #o4))
           ((place v4 v8 #o2 #g14 #o3 #o4))
           ((pick v4 v8 p14 #g14 #q39 #t114))
           ((place v4 v8 p14 #g14 #q39 #t114))
           ((pick v4 v8 p5 #g14 #o3 #o4))
           ((place v4 v8 p5 #g14 #o3 #o4))
           ((pick v4 v8 p8 #g14 #q34 #t103))
           ((place v4 v8 p8 #g14 #q34 #t103))
           ((pick v4 v8 v9 #g14 #q37 #t106))
           ((place v4 v8 v9 #g14 #q37 #t106))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q28', '#t92'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g10', '#q28', '#t86'))
           Action(name='move_base', args=('#q28', '#q32', '#t101'))
           Action(name='place', args=('v4', 'v14', 'p6', '#g10', '#q32', '#t90'))
           Action(name='move_base', args=('#q32', '#q31', '#t100'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g11', '#q31', '#t89'))
           Action(name='move_base', args=('#q31', '#q30', '#t97'))
           Action(name='place', args=('v4', 'v12', 'p7', '#g11', '#q30', '#t88'))
           Action(name='move_base', args=('#q30', '#q29', '#t99'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g9', '#q29', '#t87'))
           Action(name='move_base', args=('#q29', '#q27', '#t98'))
           Action(name='place', args=('v4', 'v8', 'p8', '#g9', '#q27', '#t85'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-traj-pose:('#t85', 'v12', 'p7')->()`, which impeded executing the action place('v4', 'v8', 'p8', '#g9', '#q27', '#t85').
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The scene contains three graspable objects: `v8`, `v12`, and `v14`. There are two arms: `v4` and `v6`. Only arm `v4` has specified kinematic actions for the objects. The goal is to place all three objects, `v8`, `v12`, and `v14`, on the surface `v16`.
           
           Initially:
           - `v8` is at `v9` (supported by `v11`).
           - `v12` is at `v13` (supported by `v11`).
           - `v14` is at `v15` (supported by `v11`).
           
           All objects are currently supported by `v11`. The goal requires them to be supported by `v16`.
           The plan involves picking each object from its initial location and placing it onto `v16`. Since multiple objects need to be placed on `v16`, and some pose names appear multiple times, I will assign unique `#o2` poses for each object.
           
           The previous plan failed because placing `v8` at `p8` caused a collision with `v12` at `p7`. This indicates that `p7` and `p8` are too close for two objects. I will use the `#o2` pose to place each object onto `v16`, ensuring separation. I will calculate three distinct `#o2` poses for `v8`, `v12`, and `v14` to avoid collisions on `v16`.
           
           The objects `v8`, `v12`, and `v14` are stackable on `v16`.
           The available `kin` actions include multiple poses for each object. I will select appropriate base configurations and poses to achieve the goal while avoiding collisions.
           
           I will iterate through each object, pick it from its initial pose, move the base if necessary, and place it at a new collision-free pose on `v16`.
           
           1. Pick `v14` from `v15` and place it on `#o2` on `v16`.
           2. Pick `v12` from `v13` and place it on a different `#o2` on `v16`.
           3. Pick `v8` from `v9` and place it on a third `#o2` on `v16`.
           
           I will compute the continuous values for the `#o2` poses to ensure they are on `v16` and are collision-free.
           
           --Plan--:
           (move_base v3 #q36 #t111)
           (pick v4 v14 v15 #g12 #q36 #t105)
           (move_base #q36 #o3 #o0)
           (place v4 v14 #o2 #g12 #o3 #o4)
           (move_base #o3 #q33 #o0)
           (pick v4 v12 v13 #g13 #q33 #t102)
           (move_base #q33 #o3 #o0)
           (place v4 v12 #o2 #g13 #o3 #o4)
           (move_base #o3 #q37 #o0)
           (pick v4 v8 v9 #g14 #q37 #t106)
           (move_base #q37 #o3 #o0)
           (place v4 v8 #o2 #g14 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v16): (0.0 0.0 0.781 0.0)
           (#o2 v12 v16): (0.0 -0.1 0.781 0.0)
           (#o2 v8 v16): (0.0 0.1 0.781 0.0)

User:      Pose #o2 = (0.0 -0.1 0.781 0.0) for object v12 on surface v16 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, -0.13500000149011612), upper=(0.035, -0.06500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.0 0.1 0.781 0.0) for object v8 on surface v16 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, 0.06500000149011612), upper=(0.035, 0.13500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The scene contains three graspable objects: `v8`, `v12`, and `v14`. There are two arms: `v4` and `v6`. Only arm `v4` has specified kinematic actions for the objects. The goal is to place all three objects, `v8`, `v12`, and `v14`, on the surface `v16`.
           
           Initially:
           - `v8` is at `v9` (supported by `v11`).
           - `v12` is at `v13` (supported by `v11`).
           - `v14` is at `v15` (supported by `v11`).
           
           All objects are currently supported by `v11`. The goal requires them to be supported by `v16`.
           The plan involves picking each object from its initial location and placing it onto `v16`. Since multiple objects need to be placed on `v16`, and some pose names appear multiple times, I will assign unique `#o2` poses for each object.
           
           The previous plan failed because the provided poses for `v8` and `v12` on `v16` were not stable. This means the bounding box of the object was not fully contained within the bounding box of the surface `v16`. I need to recalculate the `#o2` poses to ensure they are within the bounds of `v16` and are collision-free with respect to each other.
           
           The AABB of `v16` is `((-0.135, -0.135), (0.135, 0.135))`.
           The AABB of `v8` is `((0.109, -0.298), (0.205, -0.202))`. This is actually wrong, the problem states `v8` is an object with AABB `((0.109, -0.298), (0.205, -0.202))`, however the `graspable(v8)` implies it's a smaller object (e.g., a cup, as typically seen in pr2-tamp domain problems). Assuming `v8` is similar in size to `v14` and `v12`, which are `((-0.085, 0.015), (-0.015, 0.085))` and `((-0.244, 0.504), (-0.16, 0.588))`, respectively, these are also not good for estimating the object size. Looking at the `kin` facts, `v8`, `v12`, and `v14` are distinct objects and their relative sizes are important for collision checking.
           
           Given the failure, I must correct the understanding of the object sizes based on how they would fit within `v16`. `v16` is a smaller surface.
           Let's assume the objects `v8`, `v12`, and `v14` are small enough to fit on `v16`. The previous error indicates that the relative coordinates of the object's AABB for the pose (0.0, 0.1, 0.781) caused the object to be outside the bounds of the surface.
           
           I'll choose new relative poses for each object, trying to place them in the center of `v16` with a slight offset.
           Object `v14` AABB `((-0.085, 0.015), (-0.015, 0.085))`. The approximate center is `(-0.05, 0.05)`.
           Object `v12` AABB `((-0.244, 0.504), (-0.16, 0.588))`. The approximate center is `(-0.2, 0.54)`.
           Object `v8` AABB `((0.109, -0.298), (0.205, -0.202))`. The approximate center is `(0.15, -0.25)`.
           
           These AABBs are for the entire world frame, not relative to the object's origin. The problem states "the 2D AABB of the object (AABB(lower=(-0.035, -0.13500000149011612), upper=(0.035, 0.13500000149011612)))" in the error, which indicates that the underlying planner is inferring an object size relative to the given pose. This suggests that the objects `v8`, `v12` and `v14` are of similar size, perhaps small objects like cups or plates, whose bounding box when placed on a surface will be around `0.07 x 0.07` to `0.07 x 0.14` in x and y.
           
           For a surface with AABB `((-0.135, -0.135), (0.135, 0.135))`, the width is `0.27` and height is `0.27`.
           If an object has a bounding box of approx `0.07 x 0.07`, I can place multiple objects on `v16`.
           I will place `v14` at `(0.0, 0.0, 0.781, 0.0)`.
           Then `v12` at `(0.0, 0.07, 0.781, 0.0)`.
           Then `v8` at `(0.0, -0.07, 0.781, 0.0)`.
           
           Let's re-evaluate the actual object AABBs given in the problem to ensure stability:
           - `v14`: `((-0.085, 0.015), (-0.015, 0.085))` (width ~0.07, height ~0.07)
           - `v12`: `((-0.244, 0.504), (-0.16, 0.588))` (width ~0.08, height ~0.08)
           - `v8`: `((0.109, -0.298), (0.205, -0.202))` (width ~0.096, height ~0.096)
           
           All these objects are roughly square-shaped with side lengths less than 0.1. `v16` has a side length of 0.27. So, placing them with some offsets should work.
           I will use the following poses for the objects:
           `v14` at `(0.0, 0.0, 0.781, 0.0)`
           `v12` at `(0.0, 0.07, 0.781, 0.0)`
           `v8` at `(0.0, -0.07, 0.781, 0.0)`
           
           This configuration should fit within the `v16` surface, given its dimensions.
           
           --Plan--:
           (move_base v3 #q36 #t111)
           (pick v4 v14 v15 #g12 #q36 #t105)
           (move_base #q36 #o3 #o0)
           (place v4 v14 #o2 #g12 #o3 #o4)
           (move_base #o3 #q33 #o0)
           (pick v4 v12 v13 #g13 #q33 #t102)
           (move_base #q33 #o3 #o0)
           (place v4 v12 #o2 #g13 #o3 #o4)
           (move_base #o3 #q37 #o0)
           (pick v4 v8 v9 #g14 #q37 #t106)
           (move_base #q37 #o3 #o0)
           (place v4 v8 #o2 #g14 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v16): (0.0 0.0 0.781 0.0)
           (#o2 v12 v16): (0.0 0.07 0.781 0.0)
           (#o2 v8 v16): (0.0 -0.07 0.781 0.0)

