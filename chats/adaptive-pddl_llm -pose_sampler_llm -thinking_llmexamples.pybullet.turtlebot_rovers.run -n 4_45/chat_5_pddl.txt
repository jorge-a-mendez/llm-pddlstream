User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v14, v16)
           Atom onboard(v10, v12)
           Atom lander(v9)
           Atom rock(v3)
           Atom type(v1, v2)
           Atom free(v12, v16)
           Atom store(v16)
           Atom objective(v17)
           Atom camera(v10)
           Atom conf(v14, v15)
           Atom type(v4, v2)
           Atom onboard(v10, v14)
           Atom type(v7, v6)
           Atom objective(v20)
           Atom rock(v8)
           Atom rock(v5)
           Atom objective(v19)
           Atom mode(v11)
           Atom rover(v14)
           Atom rock(v1)
           Atom objective(v18)
           Atom atconf(v14, v15)
           Atom atconf(v12, v13)
           Atom rock(v7)
           Atom type(v5, v6)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom rover(v12)
           Atom conf(v12, v13)
           Atom imagevisible(v12, #q7, #y5, v20)
           Atom imagerange(v12, #q7, v20)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #q16, v4)
           Atom conf(v12, #q16)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q15, v7)
           Atom conf(v12, #q15)
           Atom above(v12, #q17, v3)
           Atom conf(v12, #q17)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #q11, v1)
           Atom conf(v12, #q11)
           Atom imagevisible(v14, #q8, #y6, v18)
           Atom imagerange(v14, #q8, v18)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q13, #y9, v20)
           Atom imagerange(v14, #q13, v20)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom above(v14, #q5, v1)
           Atom conf(v14, #q5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v4)
           Atom comvisible(v14, #q6, #y4, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #q12, #y8, v17)
           Atom imagerange(v14, #q12, v17)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom imagevisible(v14, #q9, #y7, v19)
           Atom imagerange(v14, #q9, v19)
           Atom conf(v14, #q9)
           Atom ray(#y7)
           Atom imagevisible(v12, #q1, #y0, v19)
           Atom imagerange(v12, #q1, v19)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #q10, v5)
           Atom conf(v12, #q10)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom above(v12, #q14, v8)
           Atom conf(v12, #q14)
           Atom above(v14, #o5, v8)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, v15, #t7, #q0)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, v13, #t31, #q14)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, v13, #t18, #q10)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, v15, #t20, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v12, #q16, #o2, #q10)
           Atom motion(v12, #q16, #o2, #q7)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q10, #o2, #q16)
           Atom motion(v12, v13, #t33, #q16)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q7, #o2, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, v15, #t21, #q9)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, v13, #t1, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q16, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q16)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, v13, #t0, #q1)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q16, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q1, #o2, #q16)
           Atom motion(v12, v13, #t32, #q15)
           Atom motion(v12, #q15, #o2, #q10)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q16)
           Atom motion(v12, #q10, #t22, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q16, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q3, #t25, #q7)
           Atom motion(v12, #q1, #t9, #q3)
           Atom motion(v12, #q7, #t12, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q2, #t10, #q3)
           Atom motion(v12, #q3, #t26, #q1)
           Atom motion(v12, #q3, #t15, #q10)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q3, #t3, v13)
           Atom motion(v12, #q16, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q16)
           Atom motion(v12, #q7, #o2, #q17)
           Atom motion(v12, v13, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q2)
           Atom motion(v12, #q17, #o2, #q10)
           Atom motion(v12, #q17, #o2, #q3)
           Atom motion(v12, #q17, #o2, #q14)
           Atom motion(v12, #q17, #o2, #q15)
           Atom motion(v12, #q17, #o2, #q7)
           Atom motion(v12, #q15, #o2, #q17)
           Atom motion(v12, #q3, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, #q2, #o2, #q17)
           Atom motion(v12, #q1, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q1)
           Atom motion(v12, #q14, #o2, #q17)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, #q10, #o2, #q17)
           Atom motion(v14, #q0, #t4, #q6)
           Atom motion(v14, #q6, #t6, v15)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q8, #t16, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #t13, #q0)
           Atom motion(v14, #q9, #t17, #q6)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q17, #o2, #q4)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q17)
           Atom motion(v12, #q16, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #t11, #q3)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, v13, #t2, #q4)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q3, #t24, #q4)
           Atom motion(v12, #q4, #o2, #q16)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q17, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q17)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, v13, #t19, #q11)
           Atom motion(v12, #q14, #t28, #q11)
           Atom motion(v12, #q16, #t30, #q11)
           Atom motion(v12, #q15, #t29, #q11)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q16)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q11, #t23, #q3)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q11, #t34, #q10)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q5, #t5, #q6)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, v15, #t8, #q5)
           Atom motion(v14, #q6, #t14, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q12, #t35, #q9)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q0)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, #q8, #t36, #q13)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q13, #t27, #q12)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v5 v16))
           ((sample_rock v12 #q11 v1 v16))
           ((sample_rock v12 #q14 v8 v16))
           ((sample_rock v12 #q15 v7 v16))
           ((sample_rock v12 #q16 v4 v16))
           ((sample_rock v12 #q17 v3 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((sample_rock v14 #q5 v1 v16))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q16))
           ((move v12 #q1 #o2 #q17))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t9 #q3))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q15))
           ((move v12 #q10 #o2 #q16))
           ((move v12 #q10 #o2 #q17))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t22 #q3))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q16))
           ((move v12 #q11 #o2 #q17))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t23 #q3))
           ((move v12 #q11 #t34 #q10))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 #q17))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t28 #q11))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q10))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q16))
           ((move v12 #q15 #o2 #q17))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t29 #q11))
           ((move v12 #q16 #o2 #q1))
           ((move v12 #q16 #o2 #q10))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q17))
           ((move v12 #q16 #o2 #q2))
           ((move v12 #q16 #o2 #q3))
           ((move v12 #q16 #o2 #q4))
           ((move v12 #q16 #o2 #q7))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t30 #q11))
           ((move v12 #q17 #o2 #q1))
           ((move v12 #q17 #o2 #q10))
           ((move v12 #q17 #o2 #q11))
           ((move v12 #q17 #o2 #q14))
           ((move v12 #q17 #o2 #q15))
           ((move v12 #q17 #o2 #q16))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q2))
           ((move v12 #q17 #o2 #q3))
           ((move v12 #q17 #o2 #q4))
           ((move v12 #q17 #o2 #q7))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q16))
           ((move v12 #q2 #o2 #q17))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t10 #q3))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q16))
           ((move v12 #q3 #o2 #q17))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #t15 #q10))
           ((move v12 #q3 #t24 #q4))
           ((move v12 #q3 #t25 #q7))
           ((move v12 #q3 #t26 #q1))
           ((move v12 #q3 #t3 v13))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q16))
           ((move v12 #q4 #o2 #q17))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t11 #q3))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q16))
           ((move v12 #q7 #o2 #q17))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t12 #q3))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q1))
           ((move v12 v13 #t1 #q2))
           ((move v12 v13 #t18 #q10))
           ((move v12 v13 #t19 #q11))
           ((move v12 v13 #t2 #q4))
           ((move v12 v13 #t31 #q14))
           ((move v12 v13 #t32 #q15))
           ((move v12 v13 #t33 #q16))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t4 #q6))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t35 #q9))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t27 #q12))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t5 #q6))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #t13 #q0))
           ((move v14 #q6 #t14 #q5))
           ((move v14 #q6 #t6 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t16 #q6))
           ((move v14 #q8 #t36 #q13))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t17 #q6))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t20 #q8))
           ((move v14 v15 #t21 #q9))
           ((move v14 v15 #t7 #q0))
           ((move v14 v15 #t8 #q5))
           ((calibrate v12 #q1 #y0 v19 v10))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v12 #q7 #y5 v20 v10))
           ((calibrate v14 #q12 #y8 v17 v10))
           ((calibrate v14 #q13 #y9 v20 v10))
           ((calibrate v14 #q8 #y6 v18 v10))
           ((calibrate v14 #q9 #y7 v19 v10))
           ((take_image v12 #q1 #y0 v19 v10 v11))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v12 #q7 #y5 v20 v10 v11))
           ((take_image v14 #q12 #y8 v17 v10 v11))
           ((take_image v14 #q13 #y9 v20 v10 v11))
           ((take_image v14 #q8 #y6 v18 v10 v11))
           ((take_image v14 #q9 #y7 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y4 v9 v3))
           ((send_analysis v14 #q6 #y4 v9 v4))
           ((send_analysis v14 #q6 #y4 v9 v7))
           ((send_analysis v14 #q6 #y4 v9 v8))
           ((send_analysis v14 #q6 #y4 v9 v5))
           ((send_analysis v14 #q6 #y4 v9 v1))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v20 v11))
           ((send_image v14 #q6 #y4 v9 v17 v11))
           ((send_image v14 #q6 #y4 v9 v20 v11))
           ((send_image v14 #q6 #y4 v9 v18 v11))
           ((send_image v14 #q6 #y4 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Finalized Plan for `new-axiom@0()` in the `rovers` Domain**
           
           Okay, here's the plan I've come up with, leveraging my understanding of the `rovers` domain:
           
           First, the initial state is good: `atconf` and `free` are true for both rovers and the image/analysis objectives are set.
           
           My goal is to achieve `new-axiom@0()`, which requires taking images of four objects and analyzing six rocks, and sending the results.
           
           Here’s the breakdown. I'm going to leverage *rover* `v12` for *all* the tasks, using *camera* `v10` on *mode* `v11` and *store* `v16`. It streamlines operations. I will also make an assumption based on "least cost" being the goal and plan accordingly.
           
           **Step 1: Taking and Sending Images:**
           1.  Move `v12` to `#q1` to capture the image of `v19`.
           2.  Calibrate the camera.
           3.  Take the image of `v19`.
           4.  Move `v12` to `#q2` to see the image of `v17`.
           5.  Recalibrate the camera.
           6.  Take the image.
           7.  Move `v12` to `#q4` to see the image of `v18`.
           8.  Recalibrate.
           9.  Take the image.
           10. Move `v12` to `#q7` to see the image of `v20`.
           11. Recalibrate.
           12. Take the image.
           13. Move `v12` to `#q3`, the comms location.
           14. Send the image of `v19`.
           15. Send the image of `v17`.
           16. Send the image of `v18`.
           17. Send the image of `v20`.
           
           **Step 2: Analyzing and Sending Rock Samples:**
           
           1.  Move from `#q3` to `#q10` to get above rock `v5`.
           2.  Sample rock `v5`. `v12` now has the sample.
           3.  Move back to the comms config (`#q3`).
           4.  Send the analysis for `v5`.
           5.  Drop the sample to free the store (we'll assume the *drop_rock* operation doesn't require movement).
           6.  Move from `#q3` to `#q11` to get above rock `v1`.
           7.  Sample rock `v1`.
           8.  Move back to `#q3`.
           9.  Send the analysis.
           10. Drop the rock.
           11. Move from `#q3` to `#q14` to get above rock `v8`.
           12. Sample rock `v8`.
           13. Move back to `#q3`.
           14. Send the analysis.
           15. Drop the rock.
           16. Move from `#q3` to `#q15` to get above rock `v7`.
           17. Sample rock `v7`.
           18. Move back to `#q3`.
           19. Send the analysis.
           20. Drop the rock.
           21. Move from `#q3` to `#q16` to get above rock `v4`.
           22. Sample rock `v4`.
           23. Move back to `#q3`.
           24. Send the analysis.
           25. Drop the rock.
           26. Move from `#q3` to `#q17` to get above rock `v3`.
           27. Sample rock `v3`.
           28. Move back to `#q3`.
           29. Send the analysis.
           30. Drop the rock.
           
           That should be it! I've confirmed that all *move* actions are valid based on `motion` facts, and that all the necessary actions, namely *take_image, send_image, sample_rock, send_analysis, calibrate, and drop_rock*, are present in the permissible action list.
           
           I think this plan minimizes rover movement and uses a linear workflow, adhering to the spirit of a cost-effective plan. I am satisfied I have addressed the problem and its constraints.
           
)

Model:     **Finalized Plan for `new-axiom@0()` in the `rovers` Domain**
           
           Okay, here's the plan I've come up with, leveraging my understanding of the `rovers` domain:
           
           First, the initial state is good: `atconf` and `free` are true for both rovers and the image/analysis objectives are set.
           
           My goal is to achieve `new-axiom@0()`, which requires taking images of four objects and analyzing six rocks, and sending the results.
           
           Here’s the breakdown. I'm going to leverage *rover* `v12` for *all* the tasks, using *camera* `v10` on *mode* `v11` and *store* `v16`. It streamlines operations. I will also make an assumption based on "least cost" being the goal and plan accordingly.
           
           **Step 1: Taking and Sending Images:**
           1.  Move `v12` to `#q1` to capture the image of `v19`.
           2.  Calibrate the camera.
           3.  Take the image of `v19`.
           4.  Move `v12` to `#q2` to see the image of `v17`.
           5.  Recalibrate the camera.
           6.  Take the image.
           7.  Move `v12` to `#q4` to see the image of `v18`.
           8.  Recalibrate.
           9.  Take the image.
           10. Move `v12` to `#q7` to see the image of `v20`.
           11. Recalibrate.
           12. Take the image.
           13. Move `v12` to `#q3`, the comms location.
           14. Send the image of `v19`.
           15. Send the image of `v17`.
           16. Send the image of `v18`.
           17. Send the image of `v20`.
           
           **Step 2: Analyzing and Sending Rock Samples:**
           
           1.  Move from `#q3` to `#q10` to get above rock `v5`.
           2.  Sample rock `v5`. `v12` now has the sample.
           3.  Move back to the comms config (`#q3`).
           4.  Send the analysis for `v5`.
           5.  Drop the sample to free the store (we'll assume the *drop_rock* operation doesn't require movement).
           6.  Move from `#q3` to `#q11` to get above rock `v1`.
           7.  Sample rock `v1`.
           8.  Move back to `#q3`.
           9.  Send the analysis.
           10. Drop the rock.
           11. Move from `#q3` to `#q14` to get above rock `v8`.
           12. Sample rock `v8`.
           13. Move back to `#q3`.
           14. Send the analysis.
           15. Drop the rock.
           16. Move from `#q3` to `#q15` to get above rock `v7`.
           17. Sample rock `v7`.
           18. Move back to `#q3`.
           19. Send the analysis.
           20. Drop the rock.
           21. Move from `#q3` to `#q16` to get above rock `v4`.
           22. Sample rock `v4`.
           23. Move back to `#q3`.
           24. Send the analysis.
           25. Drop the rock.
           26. Move from `#q3` to `#q17` to get above rock `v3`.
           27. Sample rock `v3`.
           28. Move back to `#q3`.
           29. Send the analysis.
           30. Drop the rock.
           
           That should be it! I've confirmed that all *move* actions are valid based on `motion` facts, and that all the necessary actions, namely *take_image, send_image, sample_rock, send_analysis, calibrate, and drop_rock*, are present in the permissible action list.
           
           I think this plan minimizes rover movement and uses a linear workflow, adhering to the spirit of a cost-effective plan. I am satisfied I have addressed the problem and its constraints.
           

