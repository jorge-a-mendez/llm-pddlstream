User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v14, v15)
           Atom ataconf(v4, v5)
           Atom pose(v14, v15)
           Atom stackable(v14, v10)
           Atom stackable(v14, v16)
           Atom graspable(v8)
           Atom handempty(v6)
           Atom supported(v14, v15, v11)
           Atom arm(v6)
           Atom graspable(v12)
           Atom stackable(v8, v10)
           Atom atbconf(v3)
           Atom bconf(v3)
           Atom supported(v8, v9, v11)
           Atom atpose(v12, v13)
           Atom arm(v4)
           Atom canmove()
           Atom graspable(v14)
           Atom pose(v12, v13)
           Atom stackable(v12, v10)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom controllable(v4)
           Atom supported(v12, v13, v11)
           Atom aconf(v6, v7)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom atpose(v8, v9)
           Atom ataconf(v6, v7)
           Atom aconf(v4, v5)
           Atom grasp(v8, #g2)
           Atom pose(v12, #p2)
           Atom supported(v12, #p2, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom pose(v14, #p0)
           Atom supported(v14, #p0, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v12, #g1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #g0)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v8, v9, #g2, #q5, #t5)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v8, #p1, #g2, #q4, #t4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g1, #q1, #t1)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, #p2, #g1, #q2, #t2)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, v15, #g0, #q0, #t0)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v14, #p0, #g0, #q3, #t3)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q0)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom btraj(#t12)
           Atom basemotion(#q0, #t12, #q3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q0)
           Atom btraj(#t14)
           Atom basemotion(#q3, #t14, #q1)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t16)
           Atom basemotion(#q2, #t16, #q5)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, #q0)
           Atom btraj(#t15)
           Atom basemotion(#q1, #t15, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q4, #o0, #q5)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t13)
           Atom basemotion(#q5, #t13, #q4)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q3 #t12))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q2 #t15))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t16))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q1 #t14))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q4 #t13))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t10))
           ((move_base v3 #q5 #t11))
           ((move_base v3 #q0 #t6))
           ((move_base v3 #q1 #t7))
           ((move_base v3 #q2 #t8))
           ((move_base v3 #q3 #t9))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p2 #g1 #q2 #t2))
           ((place v4 v12 #p2 #g1 #q2 #t2))
           ((pick v4 v12 v13 #g1 #q1 #t1))
           ((place v4 v12 v13 #g1 #q1 #t1))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 #p0 #g0 #q3 #t3))
           ((place v4 v14 #p0 #g0 #q3 #t3))
           ((pick v4 v14 v15 #g0 #q0 #t0))
           ((place v4 v14 v15 #g0 #q0 #t0))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p1 #g2 #q4 #t4))
           ((place v4 v8 #p1 #g2 #q4 #t4))
           ((pick v4 v8 v9 #g2 #q5 #t5))
           ((place v4 v8 v9 #g2 #q5 #t5))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects: `v14`, `v12`, and `v8` are graspable and stackable. `v11` is a surface where these objects are currently supported. `v10` and `v16` are also surfaces where these objects can be placed. The robot has two arms, `v4` and `v6`, both currently handempty. The robot is at base configuration `v3`. The goal is to move `v8`, `v12`, and `v14` to be on `v16`. Currently, `v14` is on `v11` (at pose `v15`), `v12` is on `v11` (at pose `v13`), and `v8` is on `v11` (at pose `v9`).
           
           To achieve the goal, we need to pick up each of the objects (`v14`, `v12`, `v8`) from their current positions and place them on `v16`. Since `v16` is a stackable surface, we need to find poses on `v16` for each object. The initial state provides the following candidate poses on `v16`: `#p0` for `v14`, `#p2` for `v12`, and `#p1` for `v8`.
           
           Let's break down the plan for each object:
           
           1.  **Move v14 to v16**:
               *   Move the base to a configuration where `v4` can pick `v14` from `v15` (which is `v11`). This is `q0`.
               *   Pick `v14` using `v4` from `v15` with grasp `#g0` at configuration `q0`.
               *   Move the base to a configuration where `v4` can place `v14` on `v16` at `#p0`. This is `q3`.
               *   Place `v14` using `v4` at `#p0` on `v16` with grasp `#g0` at configuration `q3`.
           
           2.  **Move v12 to v16**:
               *   Move the base to a configuration where `v4` can pick `v12` from `v13` (which is `v11`). This is `q1`.
               *   Pick `v12` using `v4` from `v13` with grasp `#g1` at configuration `q1`.
               *   Move the base to a configuration where `v4` can place `v12` on `v16` at `#p2`. This is `q2`.
               *   Place `v12` using `v4` at `#p2` on `v16` with grasp `#g1` at configuration `q2`.
           
           3.  **Move v8 to v16**:
               *   Move the base to a configuration where `v4` can pick `v8` from `v9` (which is `v11`). This is `q5`.
               *   Pick `v8` using `v4` from `v9` with grasp `#g2` at configuration `q5`.
               *   Move the base to a configuration where `v4` can place `v8` on `v16` at `#p1`. This is `q4`.
               *   Place `v8` using `v4` at `#p1` on `v16` with grasp `#g2` at configuration `q4`.
           
           --Plan--:
           (move_base v3 #q0 #t6)
           (pick v4 v14 v15 #g0 #q0 #t0)
           (move_base #q0 #q3 #t12)
           (place v4 v14 #p0 #g0 #q3 #t3)
           (move_base #q3 #q1 #t14)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #q2 #t15)
           (place v4 v12 #p2 #g1 #q2 #t2)
           (move_base #q2 #q5 #t16)
           (pick v4 v8 v9 #g2 #q5 #t5)
           (move_base #q5 #q4 #t13)
           (place v4 v8 #p1 #g2 #q4 #t4)

