User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v40: object
           v41: object
           v42: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p11 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.104, 0.529, 0.781) and quaternion (0.0, 0.0, 0.239, 0.971).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           Object p7 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (-0.169, -0.429, 0.781) and quaternion (0.0, 0.0, 0.881, 0.473).
           Object p12 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p14 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v13 is a pose with position (0.009, 0.389, 0.781) and quaternion (0.0, 0.0, 0.583, 0.812).
           Object p9 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object p10 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom kin(v27, v32, p13, v41, v30, v31)
           Atom supported(v8, v9, v11)
           Atom aconf(v4, v5)
           Atom atpose(v14, v15)
           Atom pose(v8, p12)
           Atom supported(v8, p6, v16)
           Atom supported(v14, p11, v16)
           Atom stackable(v8, v10)
           Atom pose(v8, p9)
           Atom pose(v8, v9)
           Atom controllable(v4)
           Atom stackable(v14, v10)
           Atom supported(v12, p10, v16)
           Atom pose(v12, p13)
           Atom stackable(v12, v10)
           Atom pose(v12, v13)
           Atom supported(v8, p12, v16)
           Atom graspable(v12)
           Atom aconf(v6, v7)
           Atom graspable(v8)
           Atom supported(v8, p9, v16)
           Atom kin(v27, v33, p11, v42, v30, v31)
           Atom ataconf(v4, v5)
           Atom supported(v12, v13, v11)
           Atom supported(v12, p7, v16)
           Atom pose(v14, p8)
           Atom pose(v14, p14)
           Atom stackable(v8, v16)
           Atom kin(v27, v32, p10, v41, v30, v31)
           Atom kin(v27, v28, p12, v40, v30, v31)
           Atom bconf(v3)
           Atom supported(v14, p8, v16)
           Atom ataconf(v6, v7)
           Atom atpose(v8, v9)
           Atom handempty(v4)
           Atom atpose(v12, v13)
           Atom pose(v8, p6)
           Atom canmove()
           Atom arm(v4)
           Atom atbconf(v3)
           Atom supported(v12, p13, v16)
           Atom stackable(v14, v16)
           Atom pose(v14, p11)
           Atom kin(v27, v28, p9, v40, v30, v31)
           Atom kin(v27, v33, p14, v42, v30, v31)
           Atom graspable(v14)
           Atom pose(v12, p10)
           Atom pose(v14, v15)
           Atom supported(v14, p14, v16)
           Atom arm(v6)
           Atom handempty(v6)
           Atom supported(v14, v15, v11)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom stackable(v12, v16)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom pose(v12, p7)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom grasp(v14, #g1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #g0)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #g2)
           Atom supported(v12, #o2, v10)
           Atom bconf(#q7)
           Atom atraj(#t19)
           Atom kin(v4, v14, p14, #g1, #q7, #t19)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, v15, #g1, #q1, #t1)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v14, p8, #g1, #q2, #t4)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p11, #g1, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t9)
           Atom kin(v4, v8, v9, #g0, #q4, #t9)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, p6, #g0, #q0, #t0)
           Atom kin(v4, v8, p9, #g0, #o3, #o4)
           Atom bconf(#q6)
           Atom atraj(#t17)
           Atom kin(v4, v8, p12, #g0, #q6, #t17)
           Atom kin(v4, v12, p10, #g2, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t10)
           Atom kin(v4, v12, p7, #g2, #q5, #t10)
           Atom bconf(#q3)
           Atom atraj(#t8)
           Atom kin(v4, v12, v13, #g2, #q3, #t8)
           Atom bconf(#q8)
           Atom atraj(#t22)
           Atom kin(v4, v12, p13, #g2, #q8, #t22)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q7, #o0, #q0)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t2)
           Atom basemotion(#q0, #t2, v3)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q7, #o0, #q4)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q4)
           Atom btraj(#t11)
           Atom basemotion(#q4, #t11, #q0)
           Atom btraj(#t21)
           Atom basemotion(#q4, #t21, #q7)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t30)
           Atom basemotion(#q3, #t30, #q7)
           Atom btraj(#t27)
           Atom basemotion(#q7, #t27, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, #q4)
           Atom btraj(#t31)
           Atom basemotion(#q3, #t31, #q8)
           Atom basemotion(v3, #o0, #q3)
           Atom btraj(#t13)
           Atom basemotion(#q0, #t13, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom btraj(#t28)
           Atom basemotion(#q8, #t28, #q3)
           Atom basemotion(#q1, #o0, #q4)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t3)
           Atom basemotion(#q1, #t3, v3)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t16)
           Atom basemotion(#q1, #t16, #q2)
           Atom btraj(#t25)
           Atom basemotion(#q1, #t25, #q8)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t24)
           Atom basemotion(#q1, #t24, #q7)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q5, #o0, v3)
           Atom btraj(#t14)
           Atom basemotion(#q5, #t14, #q1)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom btraj(#t15)
           Atom basemotion(#q3, #t15, #q5)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q2, #o0, #q6)
           Atom btraj(#t18)
           Atom basemotion(#q6, #t18, #q1)
           Atom btraj(#t23)
           Atom basemotion(#q1, #t23, #q6)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q0, #o0, #q6)
           Atom btraj(#t20)
           Atom basemotion(#q4, #t20, #q6)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q6, #o0, #q8)
           Atom btraj(#t29)
           Atom basemotion(#q3, #t29, #q6)
           Atom btraj(#t26)
           Atom basemotion(#q6, #t26, #q3)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q7, #o0, #q6)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q3 #t13))
           ((move_base #q0 v3 #t2))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q2 #t16))
           ((move_base #q1 #q6 #t23))
           ((move_base #q1 #q7 #t24))
           ((move_base #q1 #q8 #t25))
           ((move_base #q1 v3 #t3))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q5 #t15))
           ((move_base #q3 #q6 #t29))
           ((move_base #q3 #q7 #t30))
           ((move_base #q3 #q8 #t31))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q0 #t11))
           ((move_base #q4 #q6 #t20))
           ((move_base #q4 #q7 #t21))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q1 #t14))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q1 #t18))
           ((move_base #q6 #q3 #t26))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q3 #t27))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q3 #t28))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t12))
           ((move_base v3 #q0 #t5))
           ((move_base v3 #q1 #t6))
           ((move_base v3 #q2 #t7))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p10 #g2 #o3 #o4))
           ((place v4 v12 p10 #g2 #o3 #o4))
           ((pick v4 v12 p13 #g2 #q8 #t22))
           ((place v4 v12 p13 #g2 #q8 #t22))
           ((pick v4 v12 p7 #g2 #q5 #t10))
           ((place v4 v12 p7 #g2 #q5 #t10))
           ((pick v4 v12 v13 #g2 #q3 #t8))
           ((place v4 v12 v13 #g2 #q3 #t8))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p11 #g1 #o3 #o4))
           ((place v4 v14 p11 #g1 #o3 #o4))
           ((pick v4 v14 p14 #g1 #q7 #t19))
           ((place v4 v14 p14 #g1 #q7 #t19))
           ((pick v4 v14 p8 #g1 #q2 #t4))
           ((place v4 v14 p8 #g1 #q2 #t4))
           ((pick v4 v14 v15 #g1 #q1 #t1))
           ((place v4 v14 v15 #g1 #q1 #t1))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p12 #g0 #q6 #t17))
           ((place v4 v8 p12 #g0 #q6 #t17))
           ((pick v4 v8 p6 #g0 #q0 #t0))
           ((place v4 v8 p6 #g0 #q0 #t0))
           ((pick v4 v8 p9 #g0 #o3 #o4))
           ((place v4 v8 p9 #g0 #o3 #o4))
           ((pick v4 v8 v9 #g0 #q4 #t9))
           ((place v4 v8 v9 #g0 #q4 #t9))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The problem asks to place three objects (v8, v12, and v14) on the surface v16. Currently, v8 is at v9 (supported by v11), v12 is at v13 (supported by v11), and v14 is at v15 (supported by v11). All three objects need to be moved to v16.
           
           The plan will involve picking each object from its current location and placing it on v16. The specific poses for placement on v16 are given by '#o2'. Since there are three objects and one pose, we must use different specific coordinates for '#o2' for each object. We will pick up v8 from v9 and place it at '#o2' on v16. Then pick up v12 from v13 and place it at '#o2' on v16. Finally pick up v14 from v15 and place it at '#o2' on v16.
           
           --Plan--:
           (pick v4 v8 v9 #g0 #q4 #t9)
           (place v4 v8 #o2 #g0 #o3 #o4)
           (pick v4 v12 v13 #g2 #q3 #t8)
           (place v4 v12 #o2 #g2 #o3 #o4)
           (pick v4 v14 v15 #g1 #q1 #t1)
           (place v4 v14 #o2 #g1 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v16): (0.0 0.0 0.782 0.0)
           (#o2 v12 v16): (0.0 0.1 0.782 0.0)
           (#o2 v14 v16): (0.0 -0.1 0.782 0.0)

User:      Pose #o2 = (0.0 0.1 0.782 0.0) for object v12 on surface v16 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, 0.06500000149011612), upper=(0.035, 0.13500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.0 -0.1 0.782 0.0) for object v14 on surface v16 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, -0.13500000149011612), upper=(0.035, -0.06500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The previous plan had unstable placements for v12 and v14 on v16. The AABB for v16 is ((-0.135, -0.135), (0.135, 0.135)). The AABB for v12 is ((-0.035, -0.035), (0.035, 0.035)). The AABB for v14 is ((0.015, -0.035), (0.085, 0.035)). The AABB for v8 is ((-0.085, -0.035), (-0.015, 0.035)).
           To ensure stability, the AABB of the object must be contained within the AABB of the surface. We need to adjust the x and y coordinates for v12, v14, and v8 to be within the bounds of v16.
           
           For v8 (AABB = ((-0.085, -0.035), (-0.015, 0.035))), a placement at (0.0, 0.0) would mean its AABB is ((-0.085, -0.035), (-0.015, 0.035)), which is within v16.
           For v12 (AABB = ((-0.035, -0.035), (0.035, 0.035))), a placement at (0.0, 0.0) would mean its AABB is ((-0.035, -0.035), (0.035, 0.035)), which is within v16.
           For v14 (AABB = ((0.015, -0.035), (0.085, 0.035))), a placement at (0.0, 0.0) would mean its AABB is ((0.015, -0.035), (0.085, 0.035)), which is within v16.
           
           We can place them in different spots on v16, ensuring they do not overlap and are within the bounds of v16. Let's try placing v8 at (-0.05, 0.0), v12 at (0.05, 0.0), and v14 at (0.0, 0.0).
           
           For v8 at (-0.05, 0.0): AABB ((-0.085-0.05, -0.035), (-0.015-0.05, 0.035)) = ((-0.135, -0.035), (-0.065, 0.035)). This is stable on v16.
           For v12 at (0.05, 0.0): AABB ((-0.035+0.05, -0.035), (0.035+0.05, 0.035)) = ((0.015, -0.035), (0.085, 0.035)). This is stable on v16.
           For v14 at (0.0, 0.0): AABB ((0.015, -0.035), (0.085, 0.035)). This is stable on v16.
           
           These positions should be stable and avoid collision with each other given the small sizes of the objects relative to the surface.
           
           --Plan--:
           (pick v4 v8 v9 #g0 #q4 #t9)
           (place v4 v8 #o2 #g0 #o3 #o4)
           (pick v4 v12 v13 #g2 #q3 #t8)
           (place v4 v12 #o2 #g2 #o3 #o4)
           (pick v4 v14 v15 #g1 #q1 #t1)
           (place v4 v14 #o2 #g1 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v16): (-0.05 0.0 0.782 0.0)
           (#o2 v12 v16): (0.05 0.0 0.782 0.0)
           (#o2 v14 v16): (0.0 0.0 0.782 0.0)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q4) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan failed because `atbconf(#q4)` was not satisfied for the first pick action. The initial base configuration is `atbconf(v3)`. Therefore, a `move_base` action is needed before picking the first object.
           
           The first action is `(pick v4 v8 v9 #g0 #q4 #t9)`. This requires `atbconf(#q4)`. So we need to move the base from `v3` to `#q4`. There is an available action `(move_base v3 #q4 #t12)`.
           
           After picking, the `canmove()` predicate becomes true, and the robot can then move to the next required base configuration for the subsequent pick or place actions.
           
           The rest of the plan involves picking and placing objects. We must ensure that the `atbconf` predicate is met for each pick and place action.
           
           The sequence would be:
           1. Move base from `v3` to `#q4` for `pick v8`.
           2. Pick `v8`.
           3. Move base from `#q4` to `#o3` for `place v8` (assuming `#o3` is the base configuration for placing).
           4. Place `v8`.
           5. Move base from `#o3` to `#q3` for `pick v12`.
           6. Pick `v12`.
           7. Move base from `#q3` to `#o3` for `place v12`.
           8. Place `v12`.
           9. Move base from `#o3` to `#q1` for `pick v14`.
           10. Pick `v14`.
           11. Move base from `#q1` to `#o3` for `place v14`.
           12. Place `v14`.
           
           Let's check available base motions involving `#o3`:
           `basemotion(#o3, #o0, #q1)`
           `basemotion(#q4, #o0, #o3)`
           `basemotion(v3, #o0, #o3)`
           `basemotion(#o3, #o0, #q3)`
           
           It seems `#o3` is a base configuration that is used for the placing actions with the generated trajectories `#o4`. This is helpful as we can return to `#o3` after each pick for placement.
           
           Revised plan:
           
           --Plan--:
           (move_base v3 #q4 #t12)
           (pick v4 v8 v9 #g0 #q4 #t9)
           (move_base #q4 #o3 #o0)
           (place v4 v8 #o2 #g0 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v12 v13 #g2 #q3 #t8)
           (move_base #q3 #o3 #o0)
           (place v4 v12 #o2 #g2 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v14 v15 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v14 #o2 #g1 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v16): (-0.05 0.0 0.782 0.0)
           (#o2 v12 v16): (0.05 0.0 0.782 0.0)
           (#o2 v14 v16): (0.0 0.0 0.782 0.0)

