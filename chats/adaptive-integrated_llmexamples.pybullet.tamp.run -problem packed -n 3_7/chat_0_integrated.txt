User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.151, 0.482), (-0.056, 0.576)).
           Object v15 is a pose with position (-0.104, 0.529, 0.781) and quaternion (0.0, 0.0, 0.239, 0.971).
           Object v13 is a pose with position (0.009, 0.389, 0.781) and quaternion (0.0, 0.0, 0.583, 0.812).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v9 is a pose with position (-0.169, -0.429, 0.781) and quaternion (0.0, 0.0, 0.881, 0.473).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, 0.345), (0.054, 0.433)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.218, -0.477), (-0.121, -0.38)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v8, v9, v11)
           Atom aconf(v4, v5)
           Atom atpose(v14, v15)
           Atom stackable(v8, v10)
           Atom pose(v8, v9)
           Atom controllable(v4)
           Atom stackable(v14, v10)
           Atom stackable(v12, v10)
           Atom pose(v12, v13)
           Atom graspable(v12)
           Atom aconf(v6, v7)
           Atom graspable(v8)
           Atom ataconf(v4, v5)
           Atom supported(v12, v13, v11)
           Atom stackable(v8, v16)
           Atom bconf(v3)
           Atom ataconf(v6, v7)
           Atom atpose(v8, v9)
           Atom handempty(v4)
           Atom atpose(v12, v13)
           Atom canmove()
           Atom arm(v4)
           Atom atbconf(v3)
           Atom stackable(v14, v16)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom arm(v6)
           Atom handempty(v6)
           Atom supported(v14, v15, v11)
           Atom stackable(v12, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #o1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom grasp(v8, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom supported(v12, #o2, v10)
           Atom supported(v14, #o2, v10)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene includes three graspable objects: v8, v12, and v14. They are currently located at v9, v13, and v15 respectively, all supported by v11. The goal is to move all three objects to be supported by v16. However, no pick or place actions are available in the action instances, nor are any continuous parameters for those actions. Only a single `move_base` action is provided, which moves the base from v3 to v3 (i.e., it doesn't move the base at all). Since there are no `pick` or `place` actions available, it is impossible to move the objects to their desired locations.
           
           The goal is not achievable given the available actions.

