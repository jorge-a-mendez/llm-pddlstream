User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t5: object
           #t50: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom objective(v17)
           Atom lander(v9)
           Atom onboard(v10, v12)
           Atom objective(v20)
           Atom onboard(v10, v14)
           Atom rock(v3)
           Atom type(v4, v2)
           Atom supports(v10, v11)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom type(v7, v6)
           Atom type(v1, v2)
           Atom free(v14, v16)
           Atom rover(v12)
           Atom rock(v8)
           Atom conf(v14, v15)
           Atom type(v5, v6)
           Atom camera(v10)
           Atom objective(v19)
           Atom store(v16)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom objective(v18)
           Atom atconf(v12, v13)
           Atom rock(v5)
           Atom type(v8, v6)
           Atom rock(v7)
           Atom mode(v11)
           Atom conf(v12, v13)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q3, #y2, v20)
           Atom imagerange(v14, #q3, v20)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #q2, v5)
           Atom conf(v14, #q2)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #q8, v7)
           Atom conf(v14, #q8)
           Atom imagevisible(v14, #q1, #y1, v19)
           Atom imagerange(v14, #q1, v19)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q7, v4)
           Atom conf(v14, #q7)
           Atom above(v14, #q4, v1)
           Atom conf(v14, #q4)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q5, #y3, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #q16, v3)
           Atom conf(v14, #q16)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q17, v8)
           Atom conf(v14, #q17)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom comvisible(v12, #q10, #y5, v9)
           Atom comrange(v12, #q10, v9)
           Atom conf(v12, #q10)
           Atom ray(#y5)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #q9, v5)
           Atom conf(v12, #q9)
           Atom above(v12, #q12, v1)
           Atom conf(v12, #q12)
           Atom above(v12, #q15, v7)
           Atom conf(v12, #q15)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #q13, v3)
           Atom conf(v12, #q13)
           Atom above(v12, #q11, v8)
           Atom conf(v12, #q11)
           Atom motion(v12, v13, #t26, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, v13, #t28, #q13)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q2, #t43, #q8)
           Atom motion(v14, #q2, #t2, v15)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #t0, #q1)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q6, #t44, #q1)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, v13, #t30, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, v13, #t27, #q12)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q1, #t22, #q3)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, v15, #t36, #q3)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q6, #t50, #q7)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #t41, #q2)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, v13, #t25, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q9, #o2, #q15)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q15, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q7, #t49, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q4, #t46, #q2)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q4, #t3, v15)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q9, #t20, #q10)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q10, #t21, v13)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q11, #t33, #q10)
           Atom motion(v12, #q15, #t37, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q10, #t32, #q15)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #t31, #q11)
           Atom motion(v14, #q1, #t1, #q0)
           Atom motion(v14, #q0, #t15, #q3)
           Atom motion(v14, #q0, #t7, #q4)
           Atom motion(v14, #q0, #t11, #q7)
           Atom motion(v14, #q0, #t12, #q8)
           Atom motion(v14, #q0, #t6, #q2)
           Atom motion(v14, #q4, #t5, #q0)
           Atom motion(v14, #q0, #t14, #q1)
           Atom motion(v14, #q2, #t4, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q8, #t19, #q0)
           Atom motion(v14, #q6, #t13, #q0)
           Atom motion(v14, #q3, #t9, #q0)
           Atom motion(v14, #q0, #t10, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t8, #q6)
           Atom motion(v14, #q7, #t18, #q0)
           Atom motion(v14, #q17, #o2, #q3)
           Atom motion(v14, #q17, #o2, #q8)
           Atom motion(v14, #q17, #t40, v15)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q4, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q1)
           Atom motion(v14, #q0, #t48, #q17)
           Atom motion(v14, #q2, #o2, #q17)
           Atom motion(v14, #q1, #o2, #q17)
           Atom motion(v14, #q6, #o2, #q17)
           Atom motion(v14, #q3, #o2, #q17)
           Atom motion(v14, #q17, #t47, #q0)
           Atom motion(v14, #q17, #o2, #q2)
           Atom motion(v14, #q17, #o2, #q6)
           Atom motion(v14, #q17, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q8, #t39, #q17)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, v13, #t29, #q14)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q17, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q3, #t23, #q5)
           Atom motion(v14, #q5, #t24, #q6)
           Atom motion(v14, #q5, #t17, #q0)
           Atom motion(v14, v15, #t16, #q5)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q5, #o2, #q17)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q0, #t34, #q5)
           Atom motion(v14, #q16, #t45, #q7)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q0, #t35, #q16)
           Atom motion(v14, #q4, #t42, #q16)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q2)
           Atom motion(v14, #q16, #t38, #q0)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q4)
           Atom motion(v14, #q6, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q1)
           Atom motion(v14, #q16, #o2, #q5)
           Atom motion(v14, #q16, #o2, #q6)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q2, #o2, #q16)
           Atom motion(v14, #q5, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v12, #q13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q11)
           Atom motion(v12, #q9, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q13)
           Atom motion(v12, #o3, #o2, #q14)
           Atom motion(v12, #o3, #o2, #q15)
           Atom motion(v12, #q15, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q12)
           Atom motion(v12, #q14, #o2, #o3)
           Atom motion(v12, #q10, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q9)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #q11, #o2, #o3)
           Atom motion(v12, #q12, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q10)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v12 #q13 v3 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q15 v7 v16))
           ((sample_rock v12 #q9 v5 v16))
           ((sample_rock v14 #q16 v3 v16))
           ((sample_rock v14 #q17 v8 v16))
           ((sample_rock v14 #q2 v5 v16))
           ((sample_rock v14 #q4 v1 v16))
           ((sample_rock v14 #q7 v4 v16))
           ((sample_rock v14 #q8 v7 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #q10))
           ((move v12 #o3 #o2 #q11))
           ((move v12 #o3 #o2 #q12))
           ((move v12 #o3 #o2 #q13))
           ((move v12 #o3 #o2 #q14))
           ((move v12 #o3 #o2 #q15))
           ((move v12 #o3 #o2 #q9))
           ((move v12 #o3 #o2 v13))
           ((move v12 #q10 #o2 #o3))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #t21 v13))
           ((move v12 #q10 #t31 #q11))
           ((move v12 #q10 #t32 #q15))
           ((move v12 #q11 #o2 #o3))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t33 #q10))
           ((move v12 #q12 #o2 #o3))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q13 #o2 #o3))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q14 #o2 #o3))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q15 #o2 #o3))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q9))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t37 #q10))
           ((move v12 #q9 #o2 #o3))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q15))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t20 #q10))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t25 #q9))
           ((move v12 v13 #t26 #q11))
           ((move v12 v13 #t27 #q12))
           ((move v12 v13 #t28 #q13))
           ((move v12 v13 #t29 #q14))
           ((move v12 v13 #t30 #q15))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #t10 v15))
           ((move v14 #q0 #t11 #q7))
           ((move v14 #q0 #t12 #q8))
           ((move v14 #q0 #t14 #q1))
           ((move v14 #q0 #t15 #q3))
           ((move v14 #q0 #t34 #q5))
           ((move v14 #q0 #t35 #q16))
           ((move v14 #q0 #t48 #q17))
           ((move v14 #q0 #t6 #q2))
           ((move v14 #q0 #t7 #q4))
           ((move v14 #q0 #t8 #q6))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q17))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q0))
           ((move v14 #q1 #t22 #q3))
           ((move v14 #q16 #o2 #q1))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q2))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 #q4))
           ((move v14 #q16 #o2 #q5))
           ((move v14 #q16 #o2 #q6))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t38 #q0))
           ((move v14 #q16 #t45 #q7))
           ((move v14 #q17 #o2 #q1))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q2))
           ((move v14 #q17 #o2 #q3))
           ((move v14 #q17 #o2 #q4))
           ((move v14 #q17 #o2 #q5))
           ((move v14 #q17 #o2 #q6))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 #q8))
           ((move v14 #q17 #t40 v15))
           ((move v14 #q17 #t47 #q0))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q16))
           ((move v14 #q2 #o2 #q17))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #t2 v15))
           ((move v14 #q2 #t4 #q0))
           ((move v14 #q2 #t43 #q8))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q17))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t23 #q5))
           ((move v14 #q3 #t9 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q17))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #t3 v15))
           ((move v14 #q4 #t42 #q16))
           ((move v14 #q4 #t46 #q2))
           ((move v14 #q4 #t5 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q16))
           ((move v14 #q5 #o2 #q17))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t17 #q0))
           ((move v14 #q5 #t24 #q6))
           ((move v14 #q6 #o2 #q16))
           ((move v14 #q6 #o2 #q17))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t13 #q0))
           ((move v14 #q6 #t44 #q1))
           ((move v14 #q6 #t50 #q7))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t18 #q0))
           ((move v14 #q7 #t41 #q2))
           ((move v14 #q7 #t49 #q4))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t19 #q0))
           ((move v14 #q8 #t39 #q17))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q1))
           ((move v14 v15 #t16 #q5))
           ((move v14 v15 #t36 #q3))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q1 #y1 v19 v10))
           ((calibrate v14 #q3 #y2 v20 v10))
           ((calibrate v14 #q5 #y3 v17 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q1 #y1 v19 v10 v11))
           ((take_image v14 #q3 #y2 v20 v10 v11))
           ((take_image v14 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q10 #y5 v9 v8))
           ((send_analysis v12 #q10 #y5 v9 v1))
           ((send_analysis v12 #q10 #y5 v9 v3))
           ((send_analysis v12 #q10 #y5 v9 v4))
           ((send_analysis v12 #q10 #y5 v9 v7))
           ((send_analysis v12 #q10 #y5 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_image v12 #q10 #y5 v9 v17 v11))
           ((send_image v12 #q10 #y5 v9 v18 v11))
           ((send_image v12 #q10 #y5 v9 v19 v11))
           ((send_image v12 #q10 #y5 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a lander (v9), several rocks (v1, v3, v4, v5, v7, v8), objectives (v17, v18, v19, v20), a camera (v10) that supports mode v11, and a store (v16). Both rovers start at their respective initial configurations (v13 for v12, v15 for v14) and have free storage (v16). The goal is to achieve `new-axiom@0()`, which requires both rovers to be at some configuration, have free storage, and to have received images for all objectives (v17, v18, v19, v20) in mode v11, and to have received analysis for specific rocks based on their type (v2, v6).
           
           Looking at the goal, we need to:
           1. Ensure both rovers are at some configuration (already true initially).
           2. Ensure both rovers have free storage (already true initially).
           3. Achieve `receivedimage` for all objectives (v17, v18, v19, v20) in mode v11. This requires taking images and sending them.
           4. Achieve `receivedanalysis` for rocks of type v2 and v6. This requires sampling the rocks and sending the analysis.
           
           Let's break down how to achieve the `receivedimage` goals:
           For `receivedimage(v17, v11)`:
           - Rover v12 can take an image of v17 at #o3 using camera v10 in mode v11, but it needs to be calibrated first. Then it can send the image from #q10.
           - Rover v14 can take an image of v17 at #q5 using camera v10 in mode v11, but it needs to be calibrated first. Then it can send the image from #q0.
           
           For `receivedimage(v18, v11)`:
           - Rover v12 can take an image of v18 at #o3 using camera v10 in mode v11, but it needs to be calibrated first. Then it can send the image from #q10.
           - Rover v14 can take an image of v18 at #q6 using camera v10 in mode v11, but it needs to be calibrated first. Then it can send the image from #q0.
           
           For `receivedimage(v19, v11)`:
           - Rover v12 can take an image of v19 at #o3 using camera v10 in mode v11, but it needs to be calibrated first. Then it can send the image from #q10.
           - Rover v14 can take an image of v19 at #q1 using camera v10 in mode v11, but it needs to be calibrated first. Then it can send the image from #q0.
           
           For `receivedimage(v20, v11)`:
           - Rover v12 can take an image of v20 at #o3 using camera v10 in mode v11, but it needs to be calibrated first. Then it can send the image from #q10.
           - Rover v14 can take an image of v20 at #q3 using camera v10 in mode v11, but it needs to be calibrated first. Then it can send the image from #q0.
           
           Let's break down how to achieve the `receivedanalysis` goals for rocks of type v2 and v6:
           Rocks of type v2: v1, v3, v4.
           Rocks of type v6: v5, v7, v8.
           
           To achieve `receivedanalysis(?r)` for a rock `?r`:
           1. The rover must be `above` the rock at a certain configuration.
           2. The rover must `sample_rock` to get `analyzed(?v, ?r)` and fill its store.
           3. The rover must `send_analysis` from a `comvisible` configuration.
           
           Let's try to use Rover v12 for type v6 rocks and Rover v14 for type v2 rocks, and distribute image tasks between them.
           
           **Rover v12:**
           - At `v13`.
           - Can sample v8 (type v6) at #q11.
           - Can sample v5 (type v6) at #q9.
           - Can sample v7 (type v6) at #q15.
           - Can send analysis from #q10.
           - Can take images from #o3 and send them from #q10.
           
           **Rover v14:**
           - At `v15`.
           - Can sample v1 (type v2) at #q4.
           - Can sample v3 (type v2) at #q16.
           - Can sample v4 (type v2) at #q7.
           - Can send analysis from #q0.
           - Can take images from #q1, #q3, #q5, #q6 and send them from #q0.
           
           **Plan for Rover v12:**
           1. Calibrate to take images of the objectives.
           2. Take images of some objectives.
           3. Sample type v6 rocks (v5, v7, v8). Note: it can only sample one at a time before its store is full. So it has to sample, send, then repeat.
           4. Send images of objectives.
           5. Send analysis of type v6 rocks.
           
           **Plan for Rover v14:**
           1. Calibrate to take images of the objectives.
           2. Take images of some objectives.
           3. Sample type v2 rocks (v1, v3, v4). Note: it can only sample one at a time before its store is full. So it has to sample, send, then repeat.
           4. Send images of objectives.
           5. Send analysis of type v2 rocks.
           
           Let's assume the continuous parameters are valid. The main challenge will be the `free` predicate for `sample_rock` and `full` for `drop_rock`. Since the goal only requires `receivedanalysis`, not for the store to be free, we can sample up to the store limit, send, then if needed, drop and sample again. The problem statement says the axiom implies `free(v12, v16)` and `free(v14, v16)` are true.
           
           The goal asks for `receivedanalysis(?stone)` where `type(?stone, v2)` and `receivedanalysis(?soil)` where `type(?soil, v6)`. This means we need at least one rock of type v2 and one of type v6 to be analyzed and sent.
           
           Let's try to satisfy `receivedanalysis` for one rock of type v2 and one of type v6.
           - For type v2: Let's pick `v1`. Rover v14 can sample `v1` at `#q4`.
           - For type v6: Let's pick `v5`. Rover v12 can sample `v5` at `#q9`.
           
           Let's try to satisfy all `receivedimage` goals.
           Rover v14 can handle v17, v18, v19, v20.
           Rover v12 can also handle v17, v18, v19, v20.
           
           Strategy:
           1. Rover v14 calibrates and takes images of v17, v18, v19, v20. Then sends them.
           2. Rover v14 samples rock v1 (type v2) and sends analysis.
           3. Rover v12 samples rock v5 (type v6) and sends analysis.
           
           This covers all subgoals.
           
           --Plan--:
           (calibrate v14 #q5 #y3 v17 v10)
           (take_image v14 #q5 #y3 v17 v10 v11)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (calibrate v14 #q6 #y4 v18 v10)
           (take_image v14 #q6 #y4 v18 v10 v11)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (calibrate v14 #q1 #y1 v19 v10)
           (take_image v14 #q1 #y1 v19 v10 v11)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (calibrate v14 #q3 #y2 v20 v10)
           (take_image v14 #q3 #y2 v20 v10 v11)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (sample_rock v14 #q4 v1 v16)
           (send_analysis v14 #q0 #y0 v9 v1)
           (sample_rock v12 #q9 v5 v16)
           (send_analysis v12 #q10 #y5 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final axiom `new-axiom@0()` was not satisfied. This axiom requires `receivedimage` for all four objectives (v17, v18, v19, v20) in mode v11, and `receivedanalysis` for *some* rock of type `v2` (stone) and *some* rock of type `v6` (soil). My previous plan only ensured `receivedanalysis` for one rock of each type. The axiom explicitly states `type(?stone, v2)` and `type(?soil, v6)`, implying that any rock of those types would satisfy the condition.
           
           Let's re-evaluate the analysis part of the goal for `new-axiom@0()`:
           It requires `receivedanalysis(?stone)` where `type(?stone, v2)` and `receivedanalysis(?soil)` where `type(?soil, v6)`.
           From the initial state, rocks of type v2 are: v1, v3, v4.
           From the initial state, rocks of type v6 are: v5, v7, v8.
           
           So, for `receivedanalysis(?stone)`, we need to pick one of v1, v3, or v4, sample it, and send its analysis.
           For `receivedanalysis(?soil)`, we need to pick one of v5, v7, or v8, sample it, and send its analysis.
           
           My previous plan took care of all `receivedimage` predicates using `v14`. I also used `v14` to analyze `v1` (type v2) and `v12` to analyze `v5` (type v6). This should have satisfied the goal.
           
           Let's double-check the axioms for `new-axiom@0()`:
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           The goal is to satisfy *all* these conjunctive conditions.
           
           My previous plan:
           1. Calibrate v14 for v17, take image, send image (satisfied `receivedimage(v17, v11)`).
           2. Calibrate v14 for v18, take image, send image (satisfied `receivedimage(v18, v11)`).
           3. Calibrate v14 for v19, take image, send image (satisfied `receivedimage(v19, v11)`).
           4. Calibrate v14 for v20, take image, send image (satisfied `receivedimage(v20, v11)`).
           5. Sample v1 (type v2) with v14, send analysis (satisfied `receivedanalysis(v1)` where `type(v1, v2)`).
           6. Sample v5 (type v6) with v12, send analysis (satisfied `receivedanalysis(v5)` where `type(v5, v6)`).
           
           The conditions `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)` are true initially and are not changed by the actions `calibrate`, `take_image`, `send_image`, `sample_rock`, `send_analysis`. `sample_rock` fills the store, but `free` refers to the *initial* state. The axiom doesn't require the store to be free *after* sampling, only that it *was* free when the plan started, or that it is free after sampling. Since `sample_rock` only adds `full` and removes `free`, `free(v12,v16)` and `free(v14,v16)` would become false after `sample_rock`. However, if the axiom is meant to evaluate the state *at the end*, then this would be an issue. But typically `free` is a state that allows `sample_rock`, and if it's true at the beginning, then it should be satisfied. Let me assume the axiom's `free` predicates refer to an overall state where the rover *can* sample, or that they are evaluated before any `sample_rock` action makes them `full`. If the `free` predicate must hold *at the end* of the plan, and `sample_rock` makes it `full`, then the plan needs to `drop_rock` after each sample.
           
           Let's assume the goal conditions on `free` stores must hold at the end of the plan. Then, `drop_rock` must be included after `sample_rock` and `send_analysis`.
           
           Revised Strategy:
           1. Rover v14 calibrates and takes images of v17, v18, v19, v20. Then sends them.
           2. Rover v14 samples rock v1 (type v2), sends analysis, then drops the rock to make the store free again.
           3. Rover v12 samples rock v5 (type v6), sends analysis, then drops the rock to make the store free again.
           
           This ensures `free(v12, v16)` and `free(v14, v16)` are true at the end of the plan.
           
           --Plan--:
           (calibrate v14 #q5 #y3 v17 v10)
           (take_image v14 #q5 #y3 v17 v10 v11)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (calibrate v14 #q6 #y4 v18 v10)
           (take_image v14 #q6 #y4 v18 v10 v11)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (calibrate v14 #q1 #y1 v19 v10)
           (take_image v14 #q1 #y1 v19 v10 v11)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (calibrate v14 #q3 #y2 v20 v10)
           (take_image v14 #q3 #y2 v20 v10 v11)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (sample_rock v14 #q4 v1 v16)
           (send_analysis v14 #q0 #y0 v9 v1)
           (drop_rock v14 v16)
           (sample_rock v12 #q9 v5 v16)
           (send_analysis v12 #q10 #y5 v9 v5)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v14, #q5) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because Rover v14 was not at configuration `#q5` when `calibrate v14 #q5 #y3 v17 v10` was called. In the initial state, `atconf(v14, v15)` is true. Therefore, Rover v14 needs to move to the required configuration before performing actions that depend on that configuration. Similarly, for sending images/analysis, Rover v14 must be at `#q0`.
           
           Let's revise the plan to include movement actions for Rover v14 and Rover v12 to the correct configurations before performing other actions.
           
           **Rover v14 operations:**
           - Initial position: `v15`
           - Needs to be at `#q5` for `calibrate`/`take_image` for v17.
           - Needs to be at `#q6` for `calibrate`/`take_image` for v18.
           - Needs to be at `#q1` for `calibrate`/`take_image` for v19.
           - Needs to be at `#q3` for `calibrate`/`take_image` for v20.
           - Needs to be at `#q4` for `sample_rock` for v1.
           - Needs to be at `#q0` for `send_image`/`send_analysis`.
           
           **Rover v12 operations:**
           - Initial position: `v13`
           - Needs to be at `#q9` for `sample_rock` for v5.
           - Needs to be at `#o3` for `calibrate`/`take_image` (though we assigned all image tasks to v14).
           - Needs to be at `#q10` for `send_image`/`send_analysis`.
           
           Let's optimize movements. Rover v14 can move to `#q5` to perform image tasks related to v17. Then move to `#q0` to send it. It can move to other configurations for other image tasks, or consolidate by moving to a configuration where it can see multiple objectives if available. However, given the provided actions, we must move to the exact configuration specified for each image. For simplicity, Rover v14 will move to each image-taking configuration, then to the communication configuration.
           
           Let's try to do all image tasks with `v14` and then all analysis tasks.
           Sequence for `v14`:
           1. Move to `#q5`. Calibrate and take image of v17.
           2. Move to `#q0`. Send image of v17.
           3. Move to `#q6`. Calibrate and take image of v18.
           4. Move to `#q0`. Send image of v18.
           5. Move to `#q1`. Calibrate and take image of v19.
           6. Move to `#q0`. Send image of v19.
           7. Move to `#q3`. Calibrate and take image of v20.
           8. Move to `#q0`. Send image of v20.
           9. Move to `#q4`. Sample rock v1.
           10. Move to `#q0`. Send analysis of v1. Drop rock v1.
           
           Sequence for `v12`:
           1. Move to `#q9`. Sample rock v5.
           2. Move to `#q10`. Send analysis of v5. Drop rock v5.
           
           Let's ensure the `move` actions are valid.
           `move v14 v15 ...`
           `move v14 #q5 ...`
           `move v14 #q0 ...`
           and so on.
           `move v12 v13 ...`
           `move v12 #q9 ...`
           `move v12 #q10 ...`
           
           --Plan--:
           (move v14 v15 #t16 #q5)
           (calibrate v14 #q5 #y3 v17 v10)
           (take_image v14 #q5 #y3 v17 v10 v11)
           (move v14 #q5 #t17 #q0)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (move v14 #q0 #t8 #q6)
           (calibrate v14 #q6 #y4 v18 v10)
           (take_image v14 #q6 #y4 v18 v10 v11)
           (move v14 #q6 #t13 #q0)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (move v14 #q0 #t14 #q1)
           (calibrate v14 #q1 #y1 v19 v10)
           (take_image v14 #q1 #y1 v19 v10 v11)
           (move v14 #q1 #t1 #q0)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (move v14 #q0 #t15 #q3)
           (calibrate v14 #q3 #y2 v20 v10)
           (take_image v14 #q3 #y2 v20 v10 v11)
           (move v14 #q3 #t9 #q0)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (move v14 #q0 #t7 #q4)
           (sample_rock v14 #q4 v1 v16)
           (move v14 #q4 #t5 #q0)
           (send_analysis v14 #q0 #y0 v9 v1)
           (drop_rock v14 v16)
           (move v12 v13 #t25 #q9)
           (sample_rock v12 #q9 v5 v16)
           (move v12 #q9 #t20 #q10)
           (send_analysis v12 #q10 #y5 v9 v5)
           (drop_rock v12 v16)

