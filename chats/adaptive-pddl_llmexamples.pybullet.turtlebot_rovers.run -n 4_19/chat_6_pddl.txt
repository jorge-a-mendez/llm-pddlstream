User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom objective(v17)
           Atom lander(v9)
           Atom onboard(v10, v12)
           Atom objective(v20)
           Atom onboard(v10, v14)
           Atom rock(v3)
           Atom type(v4, v2)
           Atom supports(v10, v11)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom type(v7, v6)
           Atom type(v1, v2)
           Atom free(v14, v16)
           Atom rover(v12)
           Atom rock(v8)
           Atom conf(v14, v15)
           Atom type(v5, v6)
           Atom camera(v10)
           Atom objective(v19)
           Atom store(v16)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom objective(v18)
           Atom atconf(v12, v13)
           Atom rock(v5)
           Atom type(v8, v6)
           Atom rock(v7)
           Atom mode(v11)
           Atom conf(v12, v13)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q8, v7)
           Atom conf(v14, #q8)
           Atom imagevisible(v14, #q3, #y2, v20)
           Atom imagerange(v14, #q3, v20)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #q2, v5)
           Atom conf(v14, #q2)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q1, #y1, v19)
           Atom imagerange(v14, #q1, v19)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q7, v4)
           Atom conf(v14, #q7)
           Atom above(v14, #q4, v1)
           Atom conf(v14, #q4)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q5, #y3, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #q16, v3)
           Atom conf(v14, #q16)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q17, v8)
           Atom conf(v14, #q17)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #q15, v7)
           Atom conf(v12, #q15)
           Atom above(v12, #q13, v3)
           Atom conf(v12, #q13)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #q12, v1)
           Atom conf(v12, #q12)
           Atom comvisible(v12, #q10, #y5, v9)
           Atom comrange(v12, #q10, v9)
           Atom conf(v12, #q10)
           Atom ray(#y5)
           Atom above(v12, #q9, v5)
           Atom conf(v12, #q9)
           Atom above(v12, #q11, v8)
           Atom conf(v12, #q11)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, v13, #t26, #q11)
           Atom motion(v12, v13, #t25, #q9)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #t2, v15)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v12, #q11, #t33, #q10)
           Atom motion(v12, #q10, #t21, v13)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #t20, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #t31, #q11)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q6, #t44, #q1)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, v15, #t0, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, v13, #t27, #q12)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v14, v15, #t36, #q3)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q1, #t22, #q3)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #t41, #q2)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q2, #t43, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, v13, #t28, #q13)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q4, #t3, v15)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q15, #t37, #q10)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q15, #o2, #q9)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q10, #t32, #q15)
           Atom motion(v12, v13, #t30, #q15)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, #q9, #o2, #q15)
           Atom motion(v14, #q0, #t11, #q7)
           Atom motion(v14, #q0, #t15, #q3)
           Atom motion(v14, #q1, #t1, #q0)
           Atom motion(v14, #q0, #t10, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t14, #q1)
           Atom motion(v14, #q0, #t12, #q8)
           Atom motion(v14, #q0, #t7, #q4)
           Atom motion(v14, #q0, #t8, #q6)
           Atom motion(v14, #q2, #t4, #q0)
           Atom motion(v14, #q3, #t9, #q0)
           Atom motion(v14, #q7, #t18, #q0)
           Atom motion(v14, #q4, #t5, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q8, #t19, #q0)
           Atom motion(v14, #q6, #t13, #q0)
           Atom motion(v14, #q0, #t6, #q2)
           Atom motion(v14, #q1, #o2, #q17)
           Atom motion(v14, #q4, #o2, #q17)
           Atom motion(v14, #q6, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q0)
           Atom motion(v14, #q8, #t39, #q17)
           Atom motion(v14, #q17, #o2, #q2)
           Atom motion(v14, #q17, #o2, #q4)
           Atom motion(v14, #q17, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q17)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q0, #o2, #q17)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q3, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q1)
           Atom motion(v14, #q17, #o2, #q8)
           Atom motion(v14, #q17, #o2, #q6)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, #q17, #t40, v15)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, v13, #t29, #q14)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, v15, #t16, #q5)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q0, #t34, #q5)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q17, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q3, #t23, #q5)
           Atom motion(v14, #q5, #t24, #q6)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #t17, #q0)
           Atom motion(v14, #q5, #o2, #q17)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q16, #o2, #q2)
           Atom motion(v14, #q4, #t42, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #t45, #q7)
           Atom motion(v14, #q2, #o2, #q16)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q5, #o2, #q16)
           Atom motion(v14, #q6, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q4)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, #q16, #t38, #q0)
           Atom motion(v14, #q16, #o2, #q6)
           Atom motion(v14, #q16, #o2, #q5)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q0, #t35, #q16)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v12, #o3, #o2, #q15)
           Atom motion(v12, #q11, #o2, #o3)
           Atom motion(v12, #q14, #o2, #o3)
           Atom motion(v12, #q13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q9)
           Atom motion(v12, #q10, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q11)
           Atom motion(v12, #q12, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q10)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #q14)
           Atom motion(v12, #o3, #o2, #q12)
           Atom motion(v12, #q15, #o2, #o3)
           Atom motion(v12, #q9, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v12 #q13 v3 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q15 v7 v16))
           ((sample_rock v12 #q9 v5 v16))
           ((sample_rock v14 #q16 v3 v16))
           ((sample_rock v14 #q17 v8 v16))
           ((sample_rock v14 #q2 v5 v16))
           ((sample_rock v14 #q4 v1 v16))
           ((sample_rock v14 #q7 v4 v16))
           ((sample_rock v14 #q8 v7 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #q10))
           ((move v12 #o3 #o2 #q11))
           ((move v12 #o3 #o2 #q12))
           ((move v12 #o3 #o2 #q13))
           ((move v12 #o3 #o2 #q14))
           ((move v12 #o3 #o2 #q15))
           ((move v12 #o3 #o2 #q9))
           ((move v12 #o3 #o2 v13))
           ((move v12 #q10 #o2 #o3))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #t21 v13))
           ((move v12 #q10 #t31 #q11))
           ((move v12 #q10 #t32 #q15))
           ((move v12 #q11 #o2 #o3))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t33 #q10))
           ((move v12 #q12 #o2 #o3))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q13 #o2 #o3))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q14 #o2 #o3))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q15 #o2 #o3))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q9))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t37 #q10))
           ((move v12 #q9 #o2 #o3))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q15))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t20 #q10))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t25 #q9))
           ((move v12 v13 #t26 #q11))
           ((move v12 v13 #t27 #q12))
           ((move v12 v13 #t28 #q13))
           ((move v12 v13 #t29 #q14))
           ((move v12 v13 #t30 #q15))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q17))
           ((move v14 #q0 #t10 v15))
           ((move v14 #q0 #t11 #q7))
           ((move v14 #q0 #t12 #q8))
           ((move v14 #q0 #t14 #q1))
           ((move v14 #q0 #t15 #q3))
           ((move v14 #q0 #t34 #q5))
           ((move v14 #q0 #t35 #q16))
           ((move v14 #q0 #t6 #q2))
           ((move v14 #q0 #t7 #q4))
           ((move v14 #q0 #t8 #q6))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q17))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q0))
           ((move v14 #q1 #t22 #q3))
           ((move v14 #q16 #o2 #q1))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q2))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 #q4))
           ((move v14 #q16 #o2 #q5))
           ((move v14 #q16 #o2 #q6))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t38 #q0))
           ((move v14 #q16 #t45 #q7))
           ((move v14 #q17 #o2 #q0))
           ((move v14 #q17 #o2 #q1))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q2))
           ((move v14 #q17 #o2 #q3))
           ((move v14 #q17 #o2 #q4))
           ((move v14 #q17 #o2 #q5))
           ((move v14 #q17 #o2 #q6))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 #q8))
           ((move v14 #q17 #t40 v15))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q16))
           ((move v14 #q2 #o2 #q17))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #t2 v15))
           ((move v14 #q2 #t4 #q0))
           ((move v14 #q2 #t43 #q8))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q17))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t23 #q5))
           ((move v14 #q3 #t9 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q17))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #t3 v15))
           ((move v14 #q4 #t42 #q16))
           ((move v14 #q4 #t5 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q16))
           ((move v14 #q5 #o2 #q17))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t17 #q0))
           ((move v14 #q5 #t24 #q6))
           ((move v14 #q6 #o2 #q16))
           ((move v14 #q6 #o2 #q17))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t13 #q0))
           ((move v14 #q6 #t44 #q1))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t18 #q0))
           ((move v14 #q7 #t41 #q2))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t19 #q0))
           ((move v14 #q8 #t39 #q17))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q1))
           ((move v14 v15 #t16 #q5))
           ((move v14 v15 #t36 #q3))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q1 #y1 v19 v10))
           ((calibrate v14 #q3 #y2 v20 v10))
           ((calibrate v14 #q5 #y3 v17 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q1 #y1 v19 v10 v11))
           ((take_image v14 #q3 #y2 v20 v10 v11))
           ((take_image v14 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q10 #y5 v9 v8))
           ((send_analysis v12 #q10 #y5 v9 v1))
           ((send_analysis v12 #q10 #y5 v9 v3))
           ((send_analysis v12 #q10 #y5 v9 v4))
           ((send_analysis v12 #q10 #y5 v9 v7))
           ((send_analysis v12 #q10 #y5 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_image v12 #q10 #y5 v9 v17 v11))
           ((send_image v12 #q10 #y5 v9 v18 v11))
           ((send_image v12 #q10 #y5 v9 v19 v11))
           ((send_image v12 #q10 #y5 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, each with a camera `v10` and a store `v16`. There are several rocks: `v1`, `v3`, `v4`, `v5`, `v7`, `v8`, with types `v2` (for `v1`, `v3`, `v4`) and `v6` (for `v5`, `v7`, `v8`). There are also objectives `v17`, `v18`, `v19`, `v20`, and a lander `v9`. Both rovers are initially at specific configurations (`v12` at `v13`, `v14` at `v15`) and have a free store `v16`. The goal is to satisfy `new-axiom@0()`, which means sending images of all objectives (`v17`, `v18`, `v19`, `v20`), and sending analysis for two rock types (`v2` and `v6`).
           
           To achieve the goal, both rovers will need to:
           1. Calibrate their camera.
           2. Take images of the objectives.
           3. Send the images to the lander.
           4. Sample rocks of both type `v2` and type `v6`.
           5. Send the analysis of these sampled rocks to the lander.
           
           Given the initial state, rover `v14` is in a good position to image multiple objectives and sample rocks. Rover `v12` can also contribute.
           
           Let's break down the goal:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `receivedanalysis(?stone)` where `type(?stone, v2)` (e.g., v1, v3, v4)
           - `receivedanalysis(?soil)` where `type(?soil, v6)` (e.g., v5, v7, v8)
           
           We'll use `v14` to take images and analyze rocks of type `v2` and `v6`, and `v12` can handle the remaining image/analysis tasks if needed.
           
           Rover `v14` currently has visibility to objectives `v17`, `v18`, `v19`, `v20`, and is above rocks `v1`, `v3`, `v4`, `v5`, `v7`, `v8`. It also has communication visibility with the lander `v9`.
           
           Plan for `v14`:
           1. Calibrate `v10` for `v19` at `q1`.
           2. Take image of `v19`.
           3. Calibrate `v10` for `v20` at `q3`.
           4. Take image of `v20`.
           5. Calibrate `v10` for `v17` at `q5`.
           6. Take image of `v17`.
           7. Calibrate `v10` for `v18` at `q6`.
           8. Take image of `v18`.
           9. Move to `q0` to establish communication with `v9`.
           10. Send all four images.
           11. Sample rock `v1` (type `v2`) at `q4`.
           12. Sample rock `v5` (type `v6`) at `q2`.
           13. Move back to `q0` for communication.
           14. Send analysis of `v1` and `v5`.
           
           --Plan--:
           (calibrate v14 #q1 #y1 v19 v10)
           (take_image v14 #q1 #y1 v19 v10 v11)
           (calibrate v14 #q3 #y2 v20 v10)
           (take_image v14 #q3 #y2 v20 v10 v11)
           (calibrate v14 #q5 #y3 v17 v10)
           (take_image v14 #q5 #y3 v17 v10 v11)
           (calibrate v14 #q6 #y4 v18 v10)
           (take_image v14 #q6 #y4 v18 v10 v11)
           (move v14 #q1 #t1 #q0)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (move v14 #q0 #t7 #q4)
           (sample_rock v14 #q4 v1 v16)
           (move v14 #q4 #o2 #q2)
           (sample_rock v14 #q2 v5 v16)
           (move v14 #q2 #t4 #q0)
           (send_analysis v14 #q0 #y0 v9 v1)
           (send_analysis v14 #q0 #y0 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan aimed to satisfy the `new-axiom@0()` goal by sending all images and two specific rock analyses. The feedback indicates that the plan did not achieve the final goal. Let's re-evaluate the `new-axiom@0()` goal and the state.
           
           The goal `new-axiom@0()` is an axiom that becomes true when a combination of conditions are met. Looking at the axiom again:
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           The goal requires:
           1. `atconf(v12, v13)`: Rover `v12` must be at configuration `v13`. (Initially true)
           2. `atconf(v14, v15)`: Rover `v14` must be at configuration `v15`. (Initially true)
           3. `free(v12, v16)`: Rover `v12` must have its store `v16` free. (Initially true)
           4. `free(v14, v16)`: Rover `v14` must have its store `v16` free. (Initially true)
           5. `receivedimage(v17, v11)`: Image of `v17` must be received.
           6. `receivedimage(v18, v11)`: Image of `v18` must be received.
           7. `receivedimage(v19, v11)`: Image of `v19` must be received.
           8. `receivedimage(v20, v11)`: Image of `v20` must be received.
           9. `receivedanalysis(?stone)` where `type(?stone, v2)`: Analysis of *any* rock of type `v2` must be received. (e.g., `v1`, `v3`, `v4`)
           10. `receivedanalysis(?soil)` where `type(?soil, v6)`: Analysis of *any* rock of type `v6` must be received. (e.g., `v5`, `v7`, `v8`)
           
           The previous plan failed because sampling rocks makes the store `full`, not `free`. The goal explicitly requires both `free(v12, v16)` and `free(v14, v16)`. Therefore, after sampling rocks, we must `drop_rock` to free the store before the goal condition can be met.
           
           Let's revise the plan with the `drop_rock` actions. We'll use rover `v14` for all imaging and analysis tasks, as it has the necessary visibility and communication links.
           
           Rover `v14` initial state:
           - `atconf(v14, v15)`
           - `free(v14, v16)`
           - Can see `v17, v18, v19, v20` at various configurations
           - Can see `v1, v3, v4, v5, v7, v8` (rocks of type `v2` and `v6`) at various configurations
           - Can communicate with `v9` at `q0`.
           
           Revised Plan for `v14`:
           1. Calibrate `v10` for `v19` at `q1`.
           2. Take image of `v19`.
           3. Calibrate `v10` for `v20` at `q3`.
           4. Take image of `v20`.
           5. Calibrate `v10` for `v17` at `q5`.
           6. Take image of `v17`.
           7. Calibrate `v10` for `v18` at `q6`.
           8. Take image of `v18`.
           9. Move to `q0` to establish communication with `v9`.
           10. Send all four images (`v17`, `v18`, `v19`, `v20`).
           11. Sample rock `v1` (type `v2`) at `q4`. (Precondition: `above(v14, #q4, v1)`, `free(v14, v16)`)
           12. Drop rock `v1` to free the store. (Precondition: `full(v14, v16)`)
           13. Sample rock `v5` (type `v6`) at `q2`. (Precondition: `above(v14, #q2, v5)`, `free(v14, v16)`)
           14. Drop rock `v5` to free the store. (Precondition: `full(v14, v16)`)
           15. Move back to `q0` for communication if not already there (although `send_analysis` also requires `comvisible`).
           16. Send analysis of `v1`.
           17. Send analysis of `v5`.
           
           This ensures that `free(v14, v16)` is true at the end, along with all `receivedimage` and `receivedanalysis` conditions. Since `atconf(v12, v13)` and `free(v12, v16)` are initially true and `v12` is not used to sample or drop rocks, these conditions remain true.
           
           --Plan--:
           (calibrate v14 #q1 #y1 v19 v10)
           (take_image v14 #q1 #y1 v19 v10 v11)
           (calibrate v14 #q3 #y2 v20 v10)
           (take_image v14 #q3 #y2 v20 v10 v11)
           (calibrate v14 #q5 #y3 v17 v10)
           (take_image v14 #q5 #y3 v17 v10 v11)
           (calibrate v14 #q6 #y4 v18 v10)
           (take_image v14 #q6 #y4 v18 v10 v11)
           (move v14 #q1 #t1 #q0)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (move v14 #q0 #t7 #q4)
           (sample_rock v14 #q4 v1 v16)
           (drop_rock v14 v16)
           (move v14 #q4 #o2 #q2)
           (sample_rock v14 #q2 v5 v16)
           (drop_rock v14 v16)
           (move v14 #q2 #t4 #q0)
           (send_analysis v14 #q0 #y0 v9 v1)
           (send_analysis v14 #q0 #y0 v9 v5)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v14, #q5) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because of a `atconf` precondition not being satisfied. This means I did not correctly track the rover's position after a `move` action.
           
           Let's re-examine the `atconf` predicates and the available `move` actions for rover `v14`.
           
           Initial state for `v14`: `atconf(v14, v15)`.
           
           The plan starts by trying to `calibrate` at `#q1`, then `#q3`, then `#q5`, then `#q6`. For each `calibrate` action, `v14` must be at the specified configuration. The current initial configuration for `v14` is `v15`.
           
           The move actions for `v14` are crucial. For example, `(calibrate v14 #q1 #y1 v19 v10)` requires `atconf(v14, #q1)`. Since `v14` is at `v15` initially, we need a move action like `(move v14 v15 <traj> #q1)` before this calibration.
           
           Let's carefully construct the plan, ensuring `atconf` is updated correctly for `v14`. We need to move `v14` to the correct configuration for each `calibrate` or `sample_rock` action.
           
           Required configurations for `v14` and available moves from `v15`:
           - To calibrate for `v19` (at `#q1`): `(move v14 v15 #t0 #q1)`
           - To calibrate for `v20` (at `#q3`): `(move v14 v15 #t36 #q3)`
           - To calibrate for `v17` (at `#q5`): `(move v14 v15 #t16 #q5)`
           - To calibrate for `v18` (at `#q6`): `(move v14 v15 #o2 #q6)` (this is likely a typo in the provided actions, but it's the only one that goes from `v15` to `#q6`. Usually these are unique trajectory parameters)
           
           Let's assume the continuous parameters like `#o2`, `#t0`, etc., are correctly chosen to represent unique trajectories between distinct configurations, and that `motion` predicates are consistent.
           
           Revised Plan for `v14`:
           
           Goal conditions for `new-axiom@0()`:
           1. `atconf(v12, v13)` (Initially true, `v12` not moved)
           2. `atconf(v14, v15)` (Must be true at the end. After the last action, `v14` needs to be back at `v15` or not moved away from it.)
           3. `free(v12, v16)` (Initially true, `v12` not used for sampling)
           4. `free(v14, v16)` (Must be true at the end. Requires `drop_rock` after each `sample_rock`)
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `receivedanalysis(?stone, v2)` (e.g., `v1`)
           10. `receivedanalysis(?soil, v6)` (e.g., `v5`)
           
           Sequence of actions for `v14`:
           
           1.  **Move to #q1 (for v19)**
               *   `atconf(v14, v15)` -> `atconf(v14, #q1)`
               (move v14 v15 #t0 #q1)
           2.  **Calibrate for v19**
               *   `atconf(v14, #q1)`
               (calibrate v14 #q1 #y1 v19 v10)
           3.  **Take image of v19**
               *   `calibrated(v10, v14)`
               (take_image v14 #q1 #y1 v19 v10 v11)
           4.  **Move to #q3 (for v20)**
               *   `atconf(v14, #q1)` -> `atconf(v14, #q3)`
               (move v14 #q1 #t22 #q3)
           5.  **Calibrate for v20**
               *   `atconf(v14, #q3)`
               (calibrate v14 #q3 #y2 v20 v10)
           6.  **Take image of v20**
               *   `calibrated(v10, v14)`
               (take_image v14 #q3 #y2 v20 v10 v11)
           7.  **Move to #q5 (for v17)**
               *   `atconf(v14, #q3)` -> `atconf(v14, #q5)`
               (move v14 #q3 #t23 #q5)
           8.  **Calibrate for v17**
               *   `atconf(v14, #q5)`
               (calibrate v14 #q5 #y3 v17 v10)
           9.  **Take image of v17**
               *   `calibrated(v10, v14)`
               (take_image v14 #q5 #y3 v17 v10 v11)
           10. **Move to #q6 (for v18)**
               *   `atconf(v14, #q5)` -> `atconf(v14, #q6)`
               (move v14 #q5 #t24 #q6)
           11. **Calibrate for v18**
               *   `atconf(v14, #q6)`
               (calibrate v14 #q6 #y4 v18 v10)
           12. **Take image of v18**
               *   `calibrated(v10, v14)`
               (take_image v14 #q6 #y4 v18 v10 v11)
           13. **Move to #q0 (for communication)**
               *   `atconf(v14, #q6)` -> `atconf(v14, #q0)`
               (move v14 #q6 #t13 #q0)
           14. **Send images**
               *   `atconf(v14, #q0)`
               (send_image v14 #q0 #y0 v9 v19 v11)
               (send_image v14 #q0 #y0 v9 v20 v11)
               (send_image v14 #q0 #y0 v9 v17 v11)
               (send_image v14 #q0 #y0 v9 v18 v11)
           15. **Move to #q4 (to sample v1)**
               *   `atconf(v14, #q0)` -> `atconf(v14, #q4)`
               (move v14 #q0 #t7 #q4)
           16. **Sample rock v1 (type v2)**
               *   `atconf(v14, #q4)`, `free(v14, v16)`
               (sample_rock v14 #q4 v1 v16)
           17. **Drop rock v1**
               *   `full(v14, v16)`
               (drop_rock v14 v16)
           18. **Move to #q2 (to sample v5)**
               *   `atconf(v14, #q4)` -> `atconf(v14, #q2)`
               (move v14 #q4 #o2 #q2)
           19. **Sample rock v5 (type v6)**
               *   `atconf(v14, #q2)`, `free(v14, v16)`
               (sample_rock v14 #q2 v5 v16)
           20. **Drop rock v5**
               *   `full(v14, v16)`
               (drop_rock v14 v16)
           21. **Move to #q0 (for communication)**
               *   `atconf(v14, #q2)` -> `atconf(v14, #q0)`
               (move v14 #q2 #t4 #q0)
           22. **Send analyses**
               *   `atconf(v14, #q0)`
               (send_analysis v14 #q0 #y0 v9 v1)
               (send_analysis v14 #q0 #y0 v9 v5)
           
           All conditions for `new-axiom@0()` should now be met:
           - `atconf(v12, v13)`: true (never moved)
           - `atconf(v14, #q0)`: true (rover is at #q0 at the end) -- This is a problem! The goal wants `atconf(v14, v15)`. I need to move `v14` back to `v15`.
           - `free(v12, v16)`: true (never sampled)
           - `free(v14, v16)`: true (dropped last rock)
           - `receivedimage(v17, v11)`: true
           - `receivedimage(v18, v11)`: true
           - `receivedimage(v19, v11)`: true
           - `receivedimage(v20, v11)`: true
           - `receivedanalysis(v1)`: true (type v2)
           - `receivedanalysis(v5)`: true (type v6)
           
           The only remaining issue is `atconf(v14, v15)`. I must ensure `v14` is back at `v15` at the end.
           
           Let's add a final move to `v15` for `v14`. There's a `(move v14 #q0 #t10 v15)` action.
           
           Final Revised Plan for `v14`:
           
           --Plan--:
           (move v14 v15 #t0 #q1)
           (calibrate v14 #q1 #y1 v19 v10)
           (take_image v14 #q1 #y1 v19 v10 v11)
           (move v14 #q1 #t22 #q3)
           (calibrate v14 #q3 #y2 v20 v10)
           (take_image v14 #q3 #y2 v20 v10 v11)
           (move v14 #q3 #t23 #q5)
           (calibrate v14 #q5 #y3 v17 v10)
           (take_image v14 #q5 #y3 v17 v10 v11)
           (move v14 #q5 #t24 #q6)
           (calibrate v14 #q6 #y4 v18 v10)
           (take_image v14 #q6 #y4 v18 v10 v11)
           (move v14 #q6 #t13 #q0)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (move v14 #q0 #t7 #q4)
           (sample_rock v14 #q4 v1 v16)
           (drop_rock v14 v16)
           (move v14 #q4 #o2 #q2)
           (sample_rock v14 #q2 v5 v16)
           (drop_rock v14 v16)
           (move v14 #q2 #t4 #q0)
           (send_analysis v14 #q0 #y0 v9 v1)
           (send_analysis v14 #q0 #y0 v9 v5)
           (move v14 #q0 #t10 v15)

