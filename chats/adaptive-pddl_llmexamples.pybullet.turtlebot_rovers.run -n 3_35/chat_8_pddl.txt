User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom type(v7, v6)
           Atom rock(v3)
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom objective(v18)
           Atom objective(v17)
           Atom rock(v7)
           Atom onboard(v10, v14)
           Atom rock(v1)
           Atom mode(v11)
           Atom rover(v14)
           Atom rock(v4)
           Atom rock(v5)
           Atom atconf(v14, v15)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom lander(v9)
           Atom conf(v12, v13)
           Atom store(v16)
           Atom free(v12, v16)
           Atom rover(v12)
           Atom free(v14, v16)
           Atom type(v5, v6)
           Atom type(v1, v2)
           Atom onboard(v10, v12)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom objective(v19)
           Atom camera(v10)
           Atom above(v12, #q7, v5)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q0, #y0, v19)
           Atom imagerange(v12, #q0, v19)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #q10, v4)
           Atom conf(v12, #q10)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom comvisible(v14, #q2, #y2, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom above(v14, #q9, v8)
           Atom conf(v14, #q9)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q8, v1)
           Atom conf(v12, #q8)
           Atom above(v14, #q3, v1)
           Atom conf(v14, #q3)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom above(v12, #q13, v7)
           Atom conf(v12, #q13)
           Atom above(v14, #q12, v7)
           Atom conf(v14, #q12)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, v13, #t5, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q1, #t8, v13)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #t20, #q1)
           Atom motion(v12, #q1, #t28, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q1, #t11, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #t9, #q1)
           Atom motion(v12, #q0, #t33, #q5)
           Atom motion(v12, #q13, #t37, #q1)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q1, #t36, #q13)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q5, #t35, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q6, #t13, #q1)
           Atom motion(v12, #q0, #t18, #q6)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #t16, #q5)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q1, #t10, #q6)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #t23, #q9)
           Atom motion(v14, #q9, #t31, v15)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q8, #t21, #q10)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #t17, #q1)
           Atom motion(v12, #q1, #t15, #q8)
           Atom motion(v14, #q2, #t1, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q9, #t19, #q2)
           Atom motion(v14, #q2, #t27, #q9)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q1, #t14, #q7)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q7, #t24, #q8)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #t12, #q1)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q2, #t7, #q4)
           Atom motion(v14, #q4, #t4, #q2)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, v15, #t2, #q3)
           Atom motion(v14, #q2, #t6, #q3)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q3, #t3, #q2)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #t29, #q2)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, v15, #t26, #q12)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v12, #q11, #t34, #q7)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q8, #t22, #q11)
           Atom motion(v12, #q11, #t30, #q1)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q6, #t32, #q11)
           Atom motion(v12, #q1, #t25, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, #q3, #o2, #o3)
           Atom motion(v14, #q2, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #o3, #o2, #q3)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #o3, #o2, #q2)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q10 v4 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q13 v7 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v12 #q8 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #q12 v7 v16))
           ((sample_rock v14 #q3 v1 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((sample_rock v14 #q9 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t18 #q6))
           ((move v12 #q0 #t33 #q5))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #t10 #q6))
           ((move v12 #q1 #t11 #q5))
           ((move v12 #q1 #t14 #q7))
           ((move v12 #q1 #t15 #q8))
           ((move v12 #q1 #t25 #q11))
           ((move v12 #q1 #t28 #q10))
           ((move v12 #q1 #t36 #q13))
           ((move v12 #q1 #t8 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t20 #q1))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t30 #q1))
           ((move v12 #q11 #t34 #q7))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t37 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t35 #q6))
           ((move v12 #q5 #t9 #q1))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t13 #q1))
           ((move v12 #q6 #t16 #q5))
           ((move v12 #q6 #t32 #q11))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t12 #q1))
           ((move v12 #q7 #t24 #q8))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t17 #q1))
           ((move v12 #q8 #t21 #q10))
           ((move v12 #q8 #t22 #q11))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q2))
           ((move v14 #o3 #o2 #q3))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t29 #q2))
           ((move v14 #q2 #o2 #o3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #t1 v15))
           ((move v14 #q2 #t27 #q9))
           ((move v14 #q2 #t6 #q3))
           ((move v14 #q2 #t7 #q4))
           ((move v14 #q3 #o2 #o3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q2))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t4 #q2))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #t19 #q2))
           ((move v14 #q9 #t31 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t2 #q3))
           ((move v14 v15 #t23 #q9))
           ((move v14 v15 #t26 #q12))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y2 v9 v3))
           ((send_analysis v14 #q2 #y2 v9 v4))
           ((send_analysis v14 #q2 #y2 v9 v7))
           ((send_analysis v14 #q2 #y2 v9 v1))
           ((send_analysis v14 #q2 #y2 v9 v5))
           ((send_analysis v14 #q2 #y2 v9 v8))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q2 #y2 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, each with a camera `v10` capable of operating in mode `v11`. There are several rock objectives (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) of two types (`v2` and `v6`), and three general objectives (`v17`, `v18`, `v19`). There's also a lander `v9` for communication and a store `v16` for samples. Both rovers are initially at `v13` and `v15` respectively, and their stores are free.
           
           The goal `new-axiom@0()` is an aggregation of multiple sub-goals:
           1. Both rovers `v12` and `v14` must be at some configuration, which is already true for `v12` at `v13` and `v14` at `v15`.
           2. Both rovers must have a free store, which is also true for `v12` and `v14` with `v16`.
           3. Images for objectives `v17`, `v18`, and `v19` in mode `v11` must be received.
           4. Rocks of type `v2` (e.g., `v1`, `v3`, `v4`) and type `v6` (e.g., `v5`, `v7`, `v8`) must have their analysis received.
           
           To achieve the image reception goals, we need to:
           - Calibrate a camera for each objective.
           - Take an image of each objective using the calibrated camera.
           - Send the images to the lander.
           
           To achieve the rock analysis goals, we need to:
           - Sample a rock of type `v2`.
           - Sample a rock of type `v6`.
           - Send the analysis of these sampled rocks to the lander.
           
           Let's break down the plan:
           
           **For Objective Images:**
           - **Objective v19:** Rover `v12` at `q0` can see `v19`.
               - Calibrate `v10` on `v12` at `q0` for `v19`.
               - Take image of `v19`.
               - Move `v12` to a communication-visible position (`q1`) to send the image.
               - Send image of `v19`.
           - **Objective v18:** Rover `v12` at `q6` can see `v18`.
               - Calibrate `v10` on `v12` at `q6` for `v18`.
               - Take image of `v18`.
               - Move `v12` to a communication-visible position (`q1`) to send the image.
               - Send image of `v18`.
           - **Objective v17:** Rover `v12` at `q5` can see `v17`.
               - Calibrate `v10` on `v12` at `q5` for `v17`.
               - Take image of `v17`.
               - Move `v12` to a communication-visible position (`q1`) to send the image.
               - Send image of `v17`.
           
           **For Rock Analysis:**
           - **Rock of type v2 (e.g., v3):** Rover `v12` at `q11` is above `v3`.
               - Move `v12` to `q11`.
               - Sample rock `v3`.
               - Move `v12` to a communication-visible position (`q1`) to send the analysis.
               - Send analysis of `v3`.
           - **Rock of type v6 (e.g., v7):** Rover `v12` at `q13` is above `v7`.
               - Move `v12` to `q13`.
               - Sample rock `v7`.
               - Move `v12` to a communication-visible position (`q1`) to send the analysis.
               - Send analysis of `v7`.
           
           We can use `v12` for all tasks to minimize movement and state changes.
           
           --Plan--:
           (move v12 v13 #t5 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #t0 #q1)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (move v12 #q1 #t10 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t13 #q1)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (move v12 #q1 #t11 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t9 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (move v12 #q1 #t25 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #t30 #q1)
           (send_analysis v12 #q1 #y1 v9 v3)
           (move v12 #q1 #t36 #q13)
           (sample_rock v12 #q13 v7 v16)
           (move v12 #q13 #t37 #q1)
           (send_analysis v12 #q1 #y1 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` (which is an axiom representing a collection of derived predicates) was not fully satisfied. Let's re-examine the goal and ensure all components are met. The goal requires:
           1. `atconf(v12, v13)` - Rover v12 at conf v13 (Initially true).
           2. `atconf(v14, v15)` - Rover v14 at conf v15 (Initially true).
           3. `free(v12, v16)` - Store v16 on v12 is free (Initially true).
           4. `free(v14, v16)` - Store v16 on v14 is free (Initially true).
           5. `receivedimage(v17, v11)` - Image of objective v17 received in mode v11.
           6. `receivedimage(v18, v11)` - Image of objective v18 received in mode v11.
           7. `receivedimage(v19, v11)` - Image of objective v19 received in mode v11.
           8. `type(?stone, v2)` and `receivedanalysis(?stone)` - Analysis received for a rock of type v2.
           9. `type(?soil, v6)` and `receivedanalysis(?soil)` - Analysis received for a rock of type v6.
           
           My previous plan successfully addressed all image and analysis receiving goals using `v12`. However, the plan changed the `free(v12, v16)` predicate to `full(v12, v16)` by sampling rocks `v3` and `v7`, and did not include a `drop_rock` action to make the store free again. The axiom requires *both* stores to be free *at the end of the plan*.
           
           Here's a revised plan addressing the issue of the store being full by adding `drop_rock` actions after analysis.
           
           --Plan--:
           (move v12 v13 #t5 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #t0 #q1)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (move v12 #q1 #t10 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t13 #q1)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (move v12 #q1 #t11 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t9 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (move v12 #q1 #t25 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #t30 #q1)
           (send_analysis v12 #q1 #y1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q1 #t36 #q13)
           (sample_rock v12 #q13 v7 v16)
           (move v12 #q13 #t37 #q1)
           (send_analysis v12 #q1 #y1 v9 v7)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan was still invalid, likely due to the persistent "new-axiom@0()" not being satisfied. This axiom, as previously broken down, requires several conditions to be true *simultaneously* at the end of the plan.
           
           Specifically, the problem states that:
           Axiom `new-axiom@0()` is met if the following are true:
           - `atconf(v12, v13)`: Rover `v12` is at configuration `v13`.
           - `atconf(v14, v15)`: Rover `v14` is at configuration `v15`.
           - `free(v12, v16)`: Rover `v12` has its store `v16` free.
           - `free(v14, v16)`: Rover `v14` has its store `v16` free.
           - `receivedimage(v17, v11)`: Image of objective `v17` is received in mode `v11`.
           - `receivedimage(v18, v11)`: Image of objective `v18` is received in mode `v11`.
           - `receivedimage(v19, v11)`: Image of objective `v19` is received in mode `v11`.
           - `type(?stone, v2)` and `receivedanalysis(?stone)`: Analysis received for some rock of type `v2`.
           - `type(?soil, v6)` and `receivedanalysis(?soil)`: Analysis received for some rock of type `v6`.
           
           The initial state already provides:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           
           The problem with the previous plan was that after sampling rocks, `v12` was moved away from `v13`, and then eventually returned to `v13` (implicitly by `move v12 #q13 #t37 #q1`, which ends at `q1`, not `v13`). Also, my `drop_rock` actions ensured `free(v12, v16)` was true, but I didn't guarantee `atconf(v12, v13)` and `atconf(v14, v15)` would hold at the *very end* while all other conditions are met. The key is that `v12` must end at `v13` and `v14` at `v15` *at the same time* as all other goals are met. Since `v14` is not used, it remains at `v15`, satisfying that part. I need to ensure `v12` returns to `v13` after completing all other tasks.
           
           Let's modify the plan to explicitly move `v12` back to `v13` at the end of all other actions.
           
           --Plan--:
           (move v12 v13 #t5 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #t0 #q1)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (move v12 #q1 #t10 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t13 #q1)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (move v12 #q1 #t11 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t9 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (move v12 #q1 #t25 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #t30 #q1)
           (send_analysis v12 #q1 #y1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q1 #t36 #q13)
           (sample_rock v12 #q13 v7 v16)
           (move v12 #q13 #t37 #q1)
           (send_analysis v12 #q1 #y1 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q1 #t8 v13)

