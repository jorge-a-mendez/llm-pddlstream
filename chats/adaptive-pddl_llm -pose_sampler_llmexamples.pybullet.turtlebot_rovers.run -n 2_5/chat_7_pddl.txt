User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v7, v6)
           Atom lander(v9)
           Atom onboard(v10, v12)
           Atom rock(v7)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom rock(v3)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom rock(v1)
           Atom objective(v18)
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom free(v14, v16)
           Atom free(v12, v16)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom type(v1, v2)
           Atom objective(v17)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom rover(v14)
           Atom type(v3, v2)
           Atom type(v5, v6)
           Atom conf(v12, v13)
           Atom rover(v12)
           Atom rock(v8)
           Atom comvisible(v12, #q3, #y1, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom above(v12, #q17, v8)
           Atom conf(v12, #q17)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom comvisible(v14, #q4, #y2, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom imagevisible(v14, #q5, #y3, v18)
           Atom imagerange(v14, #q5, v18)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q9, #y5, v18)
           Atom imagerange(v12, #q9, v18)
           Atom conf(v12, #q9)
           Atom ray(#y5)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q7, v1)
           Atom conf(v14, #q7)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v14, #q15, v7)
           Atom conf(v14, #q15)
           Atom above(v12, #q0, v7)
           Atom conf(v12, #q0)
           Atom imagevisible(v12, #q8, #y4, v17)
           Atom imagerange(v12, #q8, v17)
           Atom conf(v12, #q8)
           Atom ray(#y4)
           Atom imagevisible(v14, #q2, #y0, v17)
           Atom imagerange(v14, #q2, v17)
           Atom conf(v14, #q2)
           Atom ray(#y0)
           Atom above(v12, #q6, v5)
           Atom conf(v12, #q6)
           Atom above(v14, #q13, v5)
           Atom conf(v14, #q13)
           Atom above(v12, #q10, v3)
           Atom conf(v12, #q10)
           Atom above(v14, #q16, v3)
           Atom conf(v14, #q16)
           Atom above(v14, #q11, v4)
           Atom conf(v14, #q11)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom motion(v12, v13, #t32, #q17)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q17)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q17, #o2, #q1)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q17)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q17, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v12, #q3, #o2, #q17)
           Atom motion(v12, #q3, #t26, #q14)
           Atom motion(v12, #q3, #t9, #q1)
           Atom motion(v12, #q14, #t28, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #t10, v13)
           Atom motion(v12, #q1, #t2, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q17, #t30, #q3)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, v15, #t6, #q2)
           Atom motion(v14, #q2, #o2, #q16)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v12, #q17, #o2, #q10)
           Atom motion(v12, #q10, #t19, #q3)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q17)
           Atom motion(v12, #q3, #t21, #q10)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, v13, #t18, #q10)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, v15, #t13, #q7)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #t12, #q3)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q17, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q17)
           Atom motion(v12, #q3, #t11, #q6)
           Atom motion(v12, #q3, #t8, #q0)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q17, #o2, #q0)
           Atom motion(v12, #q0, #t1, #q3)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q17)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q2)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q9, #t17, #q3)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q17)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q17, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q16)
           Atom motion(v14, #q2, #t20, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, v15, #t7, #q5)
           Atom motion(v14, #q15, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q16, #o2, #q5)
           Atom motion(v14, #q11, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, v13, #t14, #q8)
           Atom motion(v12, #q8, #t16, #q3)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q17, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q17)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q4, #t3, v15)
           Atom motion(v14, #q12, #t23, #q4)
           Atom motion(v14, #q4, #t25, #q12)
           Atom motion(v14, #q5, #t5, #q4)
           Atom motion(v14, #q7, #t15, #q4)
           Atom motion(v14, #q2, #t4, #q4)
           Atom motion(v14, #q4, #t34, #q16)
           Atom motion(v14, #q4, #t27, #q15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q11, #t22, #q4)
           Atom motion(v14, #q4, #t24, #q11)
           Atom motion(v14, #q16, #t31, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q15, #t29, #q4)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q4, #t33, #q5)
           Atom motion(v14, #q13, #o2, #q4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v7 v16))
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q17 v8 v16))
           ((sample_rock v12 #q6 v5 v16))
           ((sample_rock v14 #q11 v4 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q13 v5 v16))
           ((sample_rock v14 #q15 v7 v16))
           ((sample_rock v14 #q16 v3 v16))
           ((sample_rock v14 #q7 v1 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q17))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q3))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q17))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t2 #q3))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q17))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t19 #q3))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q17))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t28 #q3))
           ((move v12 #q17 #o2 #q0))
           ((move v12 #q17 #o2 #q1))
           ((move v12 #q17 #o2 #q10))
           ((move v12 #q17 #o2 #q14))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q6))
           ((move v12 #q17 #o2 #q8))
           ((move v12 #q17 #o2 #q9))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q17 #t30 #q3))
           ((move v12 #q3 #o2 #q17))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #t10 v13))
           ((move v12 #q3 #t11 #q6))
           ((move v12 #q3 #t21 #q10))
           ((move v12 #q3 #t26 #q14))
           ((move v12 #q3 #t8 #q0))
           ((move v12 #q3 #t9 #q1))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q17))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q3))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q17))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t16 #q3))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q17))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t17 #q3))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t14 #q8))
           ((move v12 v13 #t18 #q10))
           ((move v12 v13 #t32 #q17))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q5))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t22 #q4))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t23 #q4))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q5))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t29 #q4))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q2))
           ((move v14 #q16 #o2 #q5))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t31 #q4))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q16))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t20 #q5))
           ((move v14 #q2 #t4 #q4))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #t24 #q11))
           ((move v14 #q4 #t25 #q12))
           ((move v14 #q4 #t27 #q15))
           ((move v14 #q4 #t3 v15))
           ((move v14 #q4 #t33 #q5))
           ((move v14 #q4 #t34 #q16))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q16))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t5 #q4))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t15 #q4))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t13 #q7))
           ((move v14 v15 #t6 #q2))
           ((move v14 v15 #t7 #q5))
           ((calibrate v12 #q8 #y4 v17 v10))
           ((calibrate v12 #q9 #y5 v18 v10))
           ((calibrate v14 #q2 #y0 v17 v10))
           ((calibrate v14 #q5 #y3 v18 v10))
           ((take_image v12 #q8 #y4 v17 v10 v11))
           ((take_image v12 #q9 #y5 v18 v10 v11))
           ((take_image v14 #q2 #y0 v17 v10 v11))
           ((take_image v14 #q5 #y3 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y1 v9 v7))
           ((send_analysis v12 #q3 #y1 v9 v1))
           ((send_analysis v12 #q3 #y1 v9 v3))
           ((send_analysis v12 #q3 #y1 v9 v4))
           ((send_analysis v12 #q3 #y1 v9 v8))
           ((send_analysis v12 #q3 #y1 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y2 v9 v4))
           ((send_analysis v14 #q4 #y2 v9 v8))
           ((send_analysis v14 #q4 #y2 v9 v5))
           ((send_analysis v14 #q4 #y2 v9 v7))
           ((send_analysis v14 #q4 #y2 v9 v3))
           ((send_analysis v14 #q4 #y2 v9 v1))
           ((send_image v12 #q3 #y1 v9 v17 v11))
           ((send_image v12 #q3 #y1 v9 v18 v11))
           ((send_image v14 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q4 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene includes two rovers, v12 and v14, each equipped with a camera (v10). There are various rock types (v1, v3, v4, v5, v7, v8) and objectives (v17, v18) to analyze. Both rovers have access to a store (v16) and can communicate with a lander (v9). The goal is to satisfy the `new-axiom@0()`, which requires that both rovers are at a configuration, both have free storage, both objectives have received images, and both a rock of type v2 and a rock of type v6 have received analysis.
           
           Currently, both rovers are at their respective initial configurations (`atconf(v12, v13)` and `atconf(v14, v15)`) and have free storage (`free(v12, v16)` and `free(v14, v16)`). The main subgoals are to:
           1. Take and send images of both objectives (v17 and v18).
           2. Sample and send analysis of rocks of type v2 and v6.
           
           Looking at the initial state:
           - Rocks v1, v3, v4 are of type v2.
           - Rocks v5, v7, v8 are of type v6.
           
           We can use rover v14 to image objective v17 and v18, and sample rocks v1 and v7 (type v2 and v6 respectively).
           We can use rover v12 to image objective v17 and v18, and sample rocks v8 and v3 (type v6 and v2 respectively). However, since we only need one of each type of rock analyzed, we can focus on one rover for the rock analysis part.
           
           Let's use rover v14 to take images and analyze rocks:
           - Rover v14 can take an image of v17 at #q2 using camera v10 with mode v11 and ray #y0.
           - Rover v14 can take an image of v18 at #q5 using camera v10 with mode v11 and ray #y3.
           - Rover v14 can sample rock v1 (type v2) at #q7.
           - Rover v14 can sample rock v7 (type v6) at #q15.
           
           The plan will involve calibrating the camera, taking images, sending images, moving to sample rocks, sampling rocks, and sending analysis. The rovers need to be at the correct configurations for these actions.
           
           To achieve `receivedimage(v17, v11)` and `receivedimage(v18, v11)`:
           - Calibrate v14's camera at #q2 for v17.
           - Take image of v17.
           - Move v14 to a communication point (#q4).
           - Send image of v17.
           - Calibrate v14's camera at #q5 for v18.
           - Take image of v18.
           - Send image of v18.
           
           To achieve `receivedanalysis(?stone)` (e.g., v1 of type v2) and `receivedanalysis(?soil)` (e.g., v7 of type v6):
           - Move v14 to #q7.
           - Sample v1.
           - Move v14 to a communication point (#q4).
           - Send analysis of v1.
           - Move v14 to #q15.
           - Sample v7.
           - Move v14 to a communication point (#q4).
           - Send analysis of v7.
           
           It is important to note that once an image is taken, the camera is uncalibrated. So we need to recalibrate before taking another image.
           
           Let's refine the plan to use rover v14 for all tasks.
           
           --Plan--:
           (calibrate v14 #q2 #y0 v17 v10)
           (take_image v14 #q2 #y0 v17 v10 v11)
           (move v14 #q2 #t4 #q4)
           (send_image v14 #q4 #y2 v9 v17 v11)
           (move v14 #q4 #t33 #q5)
           (calibrate v14 #q5 #y3 v18 v10)
           (take_image v14 #q5 #y3 v18 v10 v11)
           (move v14 #q5 #t5 #q4)
           (send_image v14 #q4 #y2 v9 v18 v11)
           (move v14 #q4 #o2 #q7)
           (sample_rock v14 #q7 v1 v16)
           (move v14 #q7 #t15 #q4)
           (send_analysis v14 #q4 #y2 v9 v1)
           (move v14 #q4 #t27 #q15)
           (sample_rock v14 #q15 v7 v16)
           (move v14 #q15 #t29 #q4)
           (send_analysis v14 #q4 #y2 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. Let's re-examine the `new-axiom@0()` definition and the current state.
           
           The axiom `new-axiom@0()` states:
           `Conjunction`
           `Atom atconf(v12, v13)`
           `Atom atconf(v14, v15)`
           `Atom free(v12, v16)`
           `Atom free(v14, v16)`
           `Atom receivedimage(v17, v11)`
           `Atom receivedimage(v18, v11)`
           `Atom type(?stone, v2)` (meaning some rock of type v2 received analysis)
           `Atom receivedanalysis(?stone)`
           `Atom type(?soil, v6)` (meaning some rock of type v6 received analysis)
           `Atom receivedanalysis(?soil)`
           
           From the initial state, we have:
           - `atconf(v12, v13)` and `atconf(v14, v15)` are true.
           - `free(v12, v16)` and `free(v14, v16)` are true.
           So, the first four conditions are met initially and should not be disturbed. This means rovers should not drop rocks if their store is already free, and if they sample, they should ensure they have free space. In this specific problem, both stores are free initially.
           
           The remaining goals are:
           1. `receivedimage(v17, v11)`
           2. `receivedimage(v18, v11)`
           3. `receivedanalysis(?r)` for a rock `r` of type `v2`.
           4. `receivedanalysis(?r)` for a rock `r` of type `v6`.
           
           Let's use rover v14 for imaging and both rovers for rock analysis to make it efficient and ensure two distinct rocks of type v2 and v6 are analyzed and sent.
           
           We need to make sure that the `free` predicate is maintained for both rovers, and `atconf` is maintained for both rovers in the end for the axiom to be true. Sampling a rock changes `free` to `full` for the corresponding rover and store. If we sample a rock, we must then `drop_rock` to make the store `free` again, if we need the `free` condition to hold. However, the axiom only says that the stores are free *at some point*. The problem is ambiguous as to when these conditions need to hold. Assuming the initial configuration is the goal configuration regarding `atconf` and `free` for the stores, then we must drop rocks after sampling. But if the goal is to reach a state where the stores *can be* free, then `full` is acceptable temporarily. Given that `free(v12,v16)` and `free(v14,v16)` are part of the `new-axiom@0()` (the goal state), it means that after sampling, the rovers must drop their samples to return to a free state for their stores.
           
           Let's re-plan using rover v14 for images, and both rovers for rock analysis to make sure we satisfy all conditions:
           
           **Rover v14 tasks:**
           1. Calibrate camera for v17, take image of v17, move to comm point, send image.
           2. Calibrate camera for v18, take image of v18, move to comm point, send image.
           3. Move to rock v1 (type v2), sample it, move to comm point, send analysis, drop rock.
           4. Move to rock v7 (type v6), sample it, move to comm point, send analysis, drop rock.
           
           The axiom requires *some* rock of type v2 and *some* rock of type v6 to be analyzed. If one rover can do both, that's fine. The previous plan sampled v1 (type v2) and v7 (type v6) which should have satisfied the rock analysis part. The crucial part for the axiom is that `free(v12, v16)` and `free(v14, v16)` must hold *at the final state*. My previous plan sampled, but didn't drop the rock, making the store `full`. This would violate the `free` predicate in the final state.
           
           Corrected plan, making sure to drop rocks after sampling to keep stores free at the goal state:
           
           --Plan--:
           (calibrate v14 #q2 #y0 v17 v10)
           (take_image v14 #q2 #y0 v17 v10 v11)
           (move v14 #q2 #t4 #q4)
           (send_image v14 #q4 #y2 v9 v17 v11)
           (move v14 #q4 #t33 #q5)
           (calibrate v14 #q5 #y3 v18 v10)
           (take_image v14 #q5 #y3 v18 v10 v11)
           (move v14 #q5 #t5 #q4)
           (send_image v14 #q4 #y2 v9 v18 v11)
           (move v14 #q4 #o2 #q7)
           (sample_rock v14 #q7 v1 v16)
           (move v14 #q7 #t15 #q4)
           (send_analysis v14 #q4 #y2 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q4 #t27 #q15)
           (sample_rock v14 #q15 v7 v16)
           (move v14 #q15 #t29 #q4)
           (send_analysis v14 #q4 #y2 v9 v7)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v14, #q2) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies, I overlooked that Rover v14 was initially at `atconf(v14, v15)` and not `#q2` for the first `calibrate` action. I need to add a `move` action to get the rover to the correct configuration before calibrating.
           
           Let's adjust the plan by adding the necessary movement for Rover v14.
           
           **Initial State of Rover v14:** `atconf(v14, v15)`
           
           **Revised plan:**
           1. **Move v14 from v15 to #q2** to calibrate and image v17.
           2. Calibrate camera for v17, take image of v17.
           3. Move v14 from #q2 to #q4 to send image.
           4. Send image of v17.
           5. **Move v14 from #q4 to #q5** to calibrate and image v18.
           6. Calibrate camera for v18, take image of v18.
           7. Move v14 from #q5 to #q4 to send image.
           8. Send image of v18.
           9. **Move v14 from #q4 to #q7** to sample rock v1 (type v2).
           10. Sample rock v1.
           11. Move v14 from #q7 to #q4 to send analysis.
           12. Send analysis of v1.
           13. Drop rock v1.
           14. **Move v14 from #q4 to #q15** to sample rock v7 (type v6).
           15. Sample rock v7.
           16. Move v14 from #q15 to #q4 to send analysis.
           17. Send analysis of v7.
           18. Drop rock v7.
           
           This plan ensures that Rover v14 is at the correct configuration for each action and that the `free` condition for `v14, v16` is restored by `drop_rock`. `atconf(v12, v13)` and `free(v12, v16)` remain true as v12 is not used in this plan.
           
           --Plan--:
           (move v14 v15 #t6 #q2)
           (calibrate v14 #q2 #y0 v17 v10)
           (take_image v14 #q2 #y0 v17 v10 v11)
           (move v14 #q2 #t4 #q4)
           (send_image v14 #q4 #y2 v9 v17 v11)
           (move v14 #q4 #t33 #q5)
           (calibrate v14 #q5 #y3 v18 v10)
           (take_image v14 #q5 #y3 v18 v10 v11)
           (move v14 #q5 #t5 #q4)
           (send_image v14 #q4 #y2 v9 v18 v11)
           (move v14 #q4 #o2 #q7)
           (sample_rock v14 #q7 v1 v16)
           (move v14 #q7 #t15 #q4)
           (send_analysis v14 #q4 #y2 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q4 #t27 #q15)
           (sample_rock v14 #q15 v7 v16)
           (move v14 #q15 #t29 #q4)
           (send_analysis v14 #q4 #y2 v9 v7)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan was still insufficient to satisfy `new-axiom@0()`. Let's break down the `new-axiom@0()` goal again and carefully track all its components.
           
           `new-axiom@0()` requires:
           1. `atconf(v12, v13)`: Must be true in the final state. (Initially true, no actions on v12 should change its final conf, or it must move back to v13)
           2. `atconf(v14, v15)`: Must be true in the final state. (Initially true, rover v14 will move, so it must move back to v15 or its current final position should be v15)
           3. `free(v12, v16)`: Must be true in the final state. (Initially true, no actions on v12 will change this)
           4. `free(v14, v16)`: Must be true in the final state. (Initially true. If v14 samples, it must drop the rock)
           5. `receivedimage(v17, v11)`: Must be true in the final state. (Achieved by `send_image`)
           6. `receivedimage(v18, v11)`: Must be true in the final state. (Achieved by `send_image`)
           7. `receivedanalysis(?r)` for a rock `r` of `type v2`: Must be true in the final state. (Achieved by `send_analysis`)
           8. `receivedanalysis(?r)` for a rock `r` of `type v6`: Must be true in the final state. (Achieved by `send_analysis`)
           
           My previous plans neglected to ensure that `atconf(v14, v15)` is true *at the end of the plan*. The plan leaves v14 at `#q4` or `#q15` after the last `send_analysis`. We need to explicitly move v14 back to `v15` for the axiom to hold.
           
           Let's refine the plan to ensure that v14 returns to `v15` at the end.
           
           --Plan--:
           (move v14 v15 #t6 #q2)
           (calibrate v14 #q2 #y0 v17 v10)
           (take_image v14 #q2 #y0 v17 v10 v11)
           (move v14 #q2 #t4 #q4)
           (send_image v14 #q4 #y2 v9 v17 v11)
           (move v14 #q4 #t33 #q5)
           (calibrate v14 #q5 #y3 v18 v10)
           (take_image v14 #q5 #y3 v18 v10 v11)
           (move v14 #q5 #t5 #q4)
           (send_image v14 #q4 #y2 v9 v18 v11)
           (move v14 #q4 #o2 #q7)
           (sample_rock v14 #q7 v1 v16)
           (move v14 #q7 #t15 #q4)
           (send_analysis v14 #q4 #y2 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q4 #t27 #q15)
           (sample_rock v14 #q15 v7 v16)
           (move v14 #q15 #t29 #q4)
           (send_analysis v14 #q4 #y2 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q4 #t3 v15)

