User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v10)
           Atom stackable(v8, v16)
           Atom canmove()
           Atom stackable(v14, v16)
           Atom stackable(v14, v10)
           Atom aconf(v6, v7)
           Atom bconf(v3)
           Atom graspable(v8)
           Atom controllable(v4)
           Atom stackable(v8, v10)
           Atom ataconf(v4, v5)
           Atom handempty(v6)
           Atom graspable(v14)
           Atom atbconf(v3)
           Atom atpose(v8, v9)
           Atom arm(v6)
           Atom ataconf(v6, v7)
           Atom atpose(v12, v13)
           Atom stackable(v12, v16)
           Atom supported(v12, v13, v11)
           Atom pose(v12, v13)
           Atom graspable(v12)
           Atom arm(v4)
           Atom pose(v8, v9)
           Atom atpose(v14, v15)
           Atom pose(v14, v15)
           Atom supported(v14, v15, v11)
           Atom grasp(v12, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v8, #o2, v16)
           Atom grasp(v8, #o1)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v14, #o1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes three graspable objects: v8, v12, and v14. They are currently supported by v11. The goal is to place all three objects on v16. We have an arm `v4` that is currently handempty and at a configuration `v5`. The robot base is at `v3`.
           
           The initial state shows:
           - `v8` is at `v9` and supported by `v11`.
           - `v12` is at `v13` and supported by `v11`.
           - `v14` is at `v15` and supported by `v11`.
           
           The goal requires:
           - `on(v8, v16)` which means `supported(v8, ?p, v16)` and `atpose(v8, ?p)`.
           - `on(v12, v16)` which means `supported(v12, ?p, v16)` and `atpose(v12, ?p)`.
           - `on(v14, v16)` which means `supported(v14, ?p, v16)` and `atpose(v14, ?p)`.
           
           We have various `kin` facts that allow `v4` to pick and place `v8`, `v12`, and `v14` using a specific grasp `#o1` from their current poses (`v9`, `v13`, `v15`) or a generic pose `#o2`, and place them at `#o2` on `v10` or `v16`. Specifically, the facts `supported(v8, #o2, v16)`, `supported(v12, #o2, v16)`, and `supported(v14, #o2, v16)` indicate that `#o2` is a valid pose to place these objects on `v16`.
           
           The plan will involve picking up each object from its current location on `v11` and placing it on `v16` at the generic pose `#o2`. The robot's base will move to `#o3` to perform the pick and place actions, and back to `v3` if needed. Since all pick and place actions specify `#o3` as the `atbconf` precondition, the robot must move to `#o3` before the first pick, and can remain there until all objects are placed.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)

