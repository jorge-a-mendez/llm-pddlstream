User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.104, -0.526), (0.203, -0.427)).
           Object v9 is a pose with position (-0.234, 0.137, 0.781) and quaternion (0.0, 0.0, 0.843, 0.539).
           Object v19 is a pose with position (0.027, -0.369, 0.781) and quaternion (0.0, 0.0, 0.94, -0.341).
           Object v17 is a pose with position (0.251, 0.158, 0.781) and quaternion (0.0, 0.0, 0.814, 0.581).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v15 is a pose with position (-0.159, -0.45, 0.781) and quaternion (0.0, 0.0, -0.138, 0.99).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v13 is a pose with position (0.153, -0.477, 0.781) and quaternion (0.0, 0.0, 0.908, 0.419).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.28, 0.09), (-0.188, 0.183)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.022, -0.418), (0.076, -0.319)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.207, 0.114), (0.296, 0.203)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.203, -0.494), (-0.116, -0.407)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom pose(v14, v15)
           Atom pose(v18, v19)
           Atom atpose(v16, v17)
           Atom ataconf(v4, v5)
           Atom stackable(v18, v10)
           Atom aconf(v6, v7)
           Atom bconf(v3)
           Atom graspable(v12)
           Atom graspable(v18)
           Atom atpose(v12, v13)
           Atom supported(v14, v15, v11)
           Atom stackable(v16, v10)
           Atom canmove()
           Atom stackable(v8, v20)
           Atom pose(v16, v17)
           Atom stackable(v16, v20)
           Atom supported(v8, v9, v11)
           Atom atpose(v18, v19)
           Atom handempty(v6)
           Atom atpose(v14, v15)
           Atom graspable(v16)
           Atom graspable(v8)
           Atom atbconf(v3)
           Atom graspable(v14)
           Atom ataconf(v6, v7)
           Atom handempty(v4)
           Atom supported(v18, v19, v11)
           Atom controllable(v4)
           Atom stackable(v12, v20)
           Atom stackable(v14, v10)
           Atom stackable(v14, v20)
           Atom stackable(v8, v10)
           Atom supported(v16, v17, v11)
           Atom atpose(v8, v9)
           Atom arm(v6)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom stackable(v18, v20)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v20)
           Atom supported(v14, #o2, v10)
           Atom supported(v12, #o2, v20)
           Atom grasp(v8, #o1)
           Atom grasp(v18, #o1)
           Atom grasp(v16, #o1)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v16, #o2, v20)
           Atom supported(v18, #o2, v10)
           Atom supported(v8, #o2, v20)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene consists of several objects (v8, v12, v14, v16, v18) and a large surface (v11). There are also two arms, v4 and v6, both currently empty. The goal is to place all objects (v8, v12, v14, v16, v18) on surface v20. All objects are graspable.
           
           Looking at the initial state, all objects are currently on surface v11, supported at various poses. The robot's base is at configuration v3. There's only one move_base action available, which is a null move (from v3 to v3). This means the robot cannot move its base. This severely limits the possible actions.
           
           The goal requires all objects to be on `v20`. However, the initial state shows that objects are on `v11`. There are no pick/place actions provided for any of the objects to move them from `v11` to `v20`. Since the only action instance given is `(move_base v3 v3 #o0)`, and it doesn't change the state in a way that allows pick/place actions to be executed or any objects to be moved, it is impossible to achieve the goal with the provided action instances. The robot cannot pick up any object nor place it, therefore it cannot change their support surface to v20.
           
           The only action instance provided is a null move for the base, `(move_base v3 v3 #o0)`. This action does not change the state of the objects or allow for any pick or place operations. Without pick and place actions, the robot cannot move the objects to `v20`. Therefore, the goal is unreachable.

