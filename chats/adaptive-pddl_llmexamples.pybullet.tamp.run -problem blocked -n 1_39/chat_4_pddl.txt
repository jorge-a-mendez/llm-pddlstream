User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom handempty(v6)
           Atom supported(v15, v16, v11)
           Atom type(v8, v17)
           Atom atbconf(v3)
           Atom graspable(v15)
           Atom atpose(v15, v16)
           Atom type(v12, v17)
           Atom atpose(v12, v13)
           Atom pose(v12, v13)
           Atom stackable(v8, v10)
           Atom pose(v15, v16)
           Atom supported(v8, v9, v11)
           Atom arm(v4)
           Atom atpose(v8, v9)
           Atom canmove()
           Atom pose(v8, v9)
           Atom graspable(v8)
           Atom controllable(v4)
           Atom stackable(v15, v10)
           Atom aconf(v4, v5)
           Atom supported(v12, v13, v14)
           Atom graspable(v12)
           Atom bconf(v3)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom ataconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom handempty(v4)
           Atom stackable(v12, v18)
           Atom stackable(v12, v10)
           Atom stackable(v8, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom grasp(v15, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #g0)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v8, #o1)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, #p0, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(#q0, #t4, #q1)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q1, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q1 #t4))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q1 #t1))
           ((place v4 v12 #p0 #g0 #q1 #t1))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to satisfy `new-axiom@0()`, which states that `on(?green, v18)` and `type(?green, v17)` must be true.
           From the initial state, we know that `v12` has `type v17` (`type(v12, v17)`). Therefore, `?green` must be `v12`.
           The remaining condition for the goal is `on(v12, v18)`.
           Looking at the initial state:
           - `atpose(v12, v13)` and `supported(v12, v13, v14)`. This means `v12` is currently on `v14`.
           - `supported(v12, #o2, v10)` and `supported(v12, #p0, v18)`. This means `v12` can be placed on `v10` at pose `#o2` or on `v18` at pose `#p0`.
           - We need to place `v12` on `v18`. This implies we need to use the pose `#p0` for `v12`.
           
           To achieve `on(v12, v18)`, we need to `place` `v12` on `v18` at pose `#p0`.
           The `place` action for `v12` at `#p0` is `(place v4 v12 #p0 #g0 #q1 #t1)`.
           
           Preconditions for `(place v4 v12 #p0 #g0 #q1 #t1)`:
           1. `kin(v4, v12, #p0, #g0, #q1, #t1)`: This is true in the initial state.
           2. `atgrasp(v4, v12, #g0)`: This means arm `v4` must be holding `v12` with grasp `#g0`. Currently, `v4` is `handempty(v4)`. So we need to `pick` `v12` first.
           3. `atbconf(#q1)`: Currently, `atbconf(v3)`. We need to `move_base` from `v3` to `#q1`.
           4. `NegatedAtom unsafepose(v12, #p0)`: This must not be unsafe.
           5. `NegatedAtom unsafeapproach(v12, #p0, #g0)`: This must not be unsafe.
           6. `NegatedAtom unsafeatraj(#t1)`: This must not be unsafe.
           
           Let's break down the plan:
           
           **Step 1: Achieve `atbconf(#q1)`**
           - Current base configuration: `atbconf(v3)`.
           - We need to move to `#q1`.
           - Available action: `(move_base v3 #q1 #t3)`.
           
           **Step 2: Pick `v12`**
           - To place `v12`, `v4` must be holding `v12`.
           - `v12` is currently at `atpose(v12, v13)`.
           - The `pick` action available for `v12` at `v13` is `(pick v4 v12 v13 #g0 #q0 #t0)`.
           - Preconditions for `(pick v4 v12 v13 #g0 #q0 #t0)`:
               1. `kin(v4, v12, v13, #g0, #q0, #t0)`: True in initial state.
               2. `atpose(v12, v13)`: True in initial state.
               3. `handempty(v4)`: True in initial state.
               4. `atbconf(#q0)`: This is not true. We are at `#q1` from Step 1. So we need to move from `#q1` to `#q0`.
               5. `NegatedAtom unsafeapproach(v12, v13, #g0)`
               6. `NegatedAtom unsafeatraj(#t0)`
           
           **Step 2.1: Achieve `atbconf(#q0)` before pick**
           - Current base configuration: `atbconf(#q1)`.
           - We need to move to `#q0`.
           - Available action: `(move_base #q1 #q0 #o0)`. (This specific `basemotion` is listed as `basemotion(#q1, #o0, #q0)`)
           
           **Step 2.2: Execute pick**
           - Now `atbconf(#q0)` is true and `handempty(v4)` is true.
           - `(pick v4 v12 v13 #g0 #q0 #t0)`
           
           **Step 3: Achieve `atbconf(#q1)` before place**
           - After picking `v12`, we are still at `atbconf(#q0)`.
           - The `place` action `(place v4 v12 #p0 #g0 #q1 #t1)` requires `atbconf(#q1)`.
           - We need to move from `#q0` to `#q1`.
           - Available action: `(move_base #q0 #q1 #t4)`.
           
           **Step 4: Execute place**
           - Now `atbconf(#q1)` is true and `atgrasp(v4, v12, #g0)` is true.
           - `(place v4 v12 #p0 #g0 #q1 #t1)`
           
           This sequence of actions should achieve the goal.
           
           --Plan--:
           (move_base v3 #q1 #t3)
           (move_base #q1 #q0 #o0)
           (pick v4 v12 v13 #g0 #q0 #t0)
           (move_base #q0 #q1 #t4)
           (place v4 v12 #p0 #g0 #q1 #t1)

