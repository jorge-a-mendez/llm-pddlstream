User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom stackable(v8, v18)
           Atom bconf(v3)
           Atom type(v12, v17)
           Atom atbconf(v3)
           Atom supported(v15, v16, v11)
           Atom type(v8, v17)
           Atom stackable(v12, v18)
           Atom handempty(v4)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom graspable(v15)
           Atom ataconf(v6, v7)
           Atom aconf(v4, v5)
           Atom ataconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom atpose(v8, v9)
           Atom stackable(v12, v10)
           Atom pose(v12, v13)
           Atom arm(v4)
           Atom graspable(v8)
           Atom graspable(v12)
           Atom stackable(v15, v10)
           Atom stackable(v8, v10)
           Atom pose(v8, v9)
           Atom supported(v12, v13, v14)
           Atom handempty(v6)
           Atom atpose(v12, v13)
           Atom pose(v15, v16)
           Atom atpose(v15, v16)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v18)
           Atom grasp(v15, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v12, #o1)
           Atom grasp(v8, #g0)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v12, #o2, v18)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, v9, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, #p0, #g0, #q0, #t0)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t4)
           Atom basemotion(#q1, #t4, #q0)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q0 #t4))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p0 #g0 #q0 #t0))
           ((place v4 v8 #p0 #g0 #q0 #t0))
           ((pick v4 v8 v9 #g0 #q1 #t1))
           ((place v4 v8 v9 #g0 #q1 #t1))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene involves objects `v8`, `v12`, and `v15` which are `graspable` and `stackable` on various surfaces. `v4` is an arm that can manipulate these objects. The goal `new-axiom@0()` is an axiom that is true if `on(green, v18)` and `type(green, v17)`. From the given initial state, `v8` is on `v11` at `v9` (`atpose(v8, v9)` and `supported(v8, v9, v11)`), `v12` is on `v14` at `v13` (`atpose(v12, v13)` and `supported(v12, v13, v14)`), and `v15` is on `v11` at `v16` (`atpose(v15, v16)` and `supported(v15, v16, v11)`). The `type(v8, v17)` and `type(v12, v17)` facts indicate that `v8` and `v12` are objects of type `v17` (which is represented as `green` in the axiom). We also know `v18` is a potential support for these objects.
           
           The goal `new-axiom@0()` implies that an object of `type(green, v17)` needs to be `on(green, v18)`. Since `v8` is `type(v8, v17)` and `stackable(v8, v18)`, we can achieve the goal by placing `v8` on `v18`.
           Currently, `v8` is at `v9` on `v11`, and the robot's base is at `v3` (`atbconf(v3)`). The arm `v4` is `handempty` and at `aconf(v4, v5)`.
           To place `v8` on `v18`, we need to pick it up first. There is a valid pick action `(pick v4 v8 v9 #g0 #q1 #t1)`. This action requires the base to be at `#q1` and the arm `v4` to be able to reach `v8` at `v9` with grasp `#g0` and arm trajectory `#t1`. Since the base is at `v3`, we need to `move_base` from `v3` to `#q1`. There is a valid `move_base` action `(move_base v3 #q1 #t3)`.
           After picking `v8`, we need to place it on `v18`. A suitable pose for `v8` on `v18` is `#p0`, as `supported(v8, #p0, v18)` is true. The place action `(place v4 v8 #p0 #g0 #q0 #t0)` requires the base to be at `#q0`. So, after picking up `v8`, we will need to move the base from `#q1` to `#q0`. There is a `move_base` action `(move_base #q1 #q0 #t4)`.
           
           --Plan--:
           (move_base v3 #q1 #t3)
           (pick v4 v8 v9 #g0 #q1 #t1)
           (move_base #q1 #q0 #t4)
           (place v4 v8 #p0 #g0 #q0 #t0)

