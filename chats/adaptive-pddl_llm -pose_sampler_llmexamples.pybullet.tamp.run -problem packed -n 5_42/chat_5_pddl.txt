User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q5: object
           #q7: object
           #q8: object
           #q9: object
           #t10: object
           #t11: object
           #t12: object
           #t19: object
           #t2: object
           #t5: object
           #t8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v4: object
           v43: object
           v44: object
           v5: object
           v50: object
           v51: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom ~test-cfree-pose-pose-negative(v14, v27, v12, v22)
           Atom ~test-cfree-pose-pose-negative(v12, v22, v8, v31)
           Atom pose(v14, v15)
           Atom ataconf(v6, v7)
           Atom graspable(v16)
           Atom ~test-cfree-pose-pose-negative(v16, v24, v12, v26)
           Atom pose(v8, v9)
           Atom ~test-cfree-pose-pose-negative(v16, v51, v12, v26)
           Atom ~test-cfree-pose-pose-negative(v14, v23, v8, v31)
           Atom ~test-cfree-pose-pose-negative(v18, v43, v8, v31)
           Atom atpose(v12, v13)
           Atom supported(v8, v9, v11)
           Atom handempty(v4)
           Atom pose(v18, v19)
           Atom stackable(v8, v10)
           Atom atpose(v18, v19)
           Atom stackable(v18, v10)
           Atom stackable(v8, v20)
           Atom stackable(v12, v10)
           Atom ~test-cfree-pose-pose-negative(v16, v24, v12, v22)
           Atom bconf(v3)
           Atom arm(v4)
           Atom ~test-cfree-pose-pose-negative(v12, v22, v8, v28)
           Atom stackable(v16, v10)
           Atom ~test-cfree-pose-pose-negative(v14, v23, v12, v30)
           Atom atbconf(v3)
           Atom aconf(v4, v5)
           Atom supported(v14, v15, v11)
           Atom ~test-cfree-pose-pose-negative(v18, v25, v16, v50)
           Atom ~test-cfree-pose-pose-negative(v18, v25, v8, v28)
           Atom ~test-cfree-pose-pose-negative(v18, v43, v8, v28)
           Atom ~test-cfree-pose-pose-negative(v18, v25, v8, v31)
           Atom arm(v6)
           Atom ~test-cfree-pose-pose-negative(v14, v23, v12, v26)
           Atom supported(v16, v17, v11)
           Atom ~test-cfree-pose-pose-negative(v12, v26, v8, v21)
           Atom ~test-cfree-pose-pose-negative(v14, v29, v12, v22)
           Atom pose(v12, v13)
           Atom pose(v16, v17)
           Atom atpose(v14, v15)
           Atom graspable(v14)
           Atom ~test-cfree-pose-pose-negative(v12, v22, v8, v21)
           Atom graspable(v18)
           Atom ~test-cfree-pose-pose-negative(v16, v51, v12, v22)
           Atom ~test-cfree-pose-pose-negative(v18, v43, v16, v50)
           Atom atpose(v8, v9)
           Atom graspable(v12)
           Atom stackable(v12, v20)
           Atom stackable(v18, v20)
           Atom ~test-cfree-pose-pose-negative(v12, v30, v8, v28)
           Atom stackable(v16, v20)
           Atom ataconf(v4, v5)
           Atom ~test-cfree-pose-pose-negative(v12, v30, v8, v31)
           Atom atpose(v16, v17)
           Atom stackable(v14, v10)
           Atom aconf(v6, v7)
           Atom ~test-cfree-pose-pose-negative(v14, v27, v12, v30)
           Atom ~test-cfree-pose-pose-negative(v12, v26, v8, v28)
           Atom supported(v18, v19, v11)
           Atom supported(v12, v13, v11)
           Atom ~test-cfree-pose-pose-negative(v14, v27, v12, v26)
           Atom handempty(v6)
           Atom ~test-cfree-pose-pose-negative(v12, v26, v8, v31)
           Atom stackable(v14, v20)
           Atom ~test-cfree-pose-pose-negative(v18, v44, v8, v31)
           Atom graspable(v8)
           Atom canmove()
           Atom ~test-cfree-pose-pose-negative(v12, v30, v8, v21)
           Atom controllable(v4)
           Atom ~test-cfree-pose-pose-negative(v14, v29, v12, v26)
           Atom ~test-cfree-pose-pose-negative(v18, v44, v16, v50)
           Atom ~test-cfree-pose-pose-negative(v18, v44, v8, v28)
           Atom grasp(v16, #g3)
           Atom grasp(v8, #g2)
           Atom pose(v14, v29)
           Atom supported(v14, v29, v20)
           Atom pose(v14, v23)
           Atom supported(v14, v23, v20)
           Atom pose(v14, v27)
           Atom supported(v14, v27, v20)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v16, v24)
           Atom supported(v16, v24, v20)
           Atom pose(v16, v51)
           Atom supported(v16, v51, v20)
           Atom pose(v16, v50)
           Atom supported(v16, v50, v20)
           Atom pose(v18, v44)
           Atom supported(v18, v44, v20)
           Atom pose(v18, v25)
           Atom supported(v18, v25, v20)
           Atom pose(v18, v43)
           Atom supported(v18, v43, v20)
           Atom pose(v12, v22)
           Atom supported(v12, v22, v20)
           Atom pose(v12, v26)
           Atom supported(v12, v26, v20)
           Atom pose(v12, v30)
           Atom supported(v12, v30, v20)
           Atom grasp(v12, #g1)
           Atom grasp(v18, #g4)
           Atom grasp(v14, #g0)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, v28)
           Atom supported(v8, v28, v20)
           Atom pose(v8, v31)
           Atom supported(v8, v31, v20)
           Atom pose(v8, v21)
           Atom supported(v8, v21, v20)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v28, #g2, #o3, #o4)
           Atom kin(v4, v8, v21, #g2, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v8, v9, #g2, #q5, #t8)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, v13, #g1, #q2, #t2)
           Atom kin(v4, v12, v26, #g1, #o3, #o4)
           Atom kin(v4, v12, v22, #g1, #o3, #o4)
           Atom kin(v4, v14, v23, #g0, #o3, #o4)
           Atom kin(v4, v14, v27, #g0, #o3, #o4)
           Atom bconf(#q8)
           Atom atraj(#t11)
           Atom kin(v4, v14, v15, #g0, #q8, #t11)
           Atom kin(v4, v16, v24, #g3, #o3, #o4)
           Atom bconf(#q9)
           Atom atraj(#t12)
           Atom kin(v4, v16, v17, #g3, #q9, #t12)
           Atom kin(v4, v16, v50, #g3, #o3, #o4)
           Atom bconf(#q7)
           Atom atraj(#t10)
           Atom kin(v4, v18, v19, #g4, #q7, #t10)
           Atom kin(v4, v18, v25, #g4, #o3, #o4)
           Atom kin(v4, v18, v43, #g4, #o3, #o4)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q5, #o0, v3)
           Atom btraj(#t19)
           Atom basemotion(v3, #t19, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q5)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q7, #o0, #q9)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v16, #o2, #g3, #o3, #o4)
           Atom kin(v4, v18, #o2, #g4, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q5 #t19))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 v13 #g1 #q2 #t2))
           ((place v4 v12 v13 #g1 #q2 #t2))
           ((pick v4 v12 v22 #g1 #o3 #o4))
           ((place v4 v12 v22 #g1 #o3 #o4))
           ((pick v4 v12 v26 #g1 #o3 #o4))
           ((place v4 v12 v26 #g1 #o3 #o4))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 v15 #g0 #q8 #t11))
           ((place v4 v14 v15 #g0 #q8 #t11))
           ((pick v4 v14 v23 #g0 #o3 #o4))
           ((place v4 v14 v23 #g0 #o3 #o4))
           ((pick v4 v14 v27 #g0 #o3 #o4))
           ((place v4 v14 v27 #g0 #o3 #o4))
           ((pick v4 v16 #o2 #g3 #o3 #o4))
           ((place v4 v16 #o2 #g3 #o3 #o4))
           ((pick v4 v16 v17 #g3 #q9 #t12))
           ((place v4 v16 v17 #g3 #q9 #t12))
           ((pick v4 v16 v24 #g3 #o3 #o4))
           ((place v4 v16 v24 #g3 #o3 #o4))
           ((pick v4 v16 v50 #g3 #o3 #o4))
           ((place v4 v16 v50 #g3 #o3 #o4))
           ((pick v4 v18 #o2 #g4 #o3 #o4))
           ((place v4 v18 #o2 #g4 #o3 #o4))
           ((pick v4 v18 v19 #g4 #q7 #t10))
           ((place v4 v18 v19 #g4 #q7 #t10))
           ((pick v4 v18 v25 #g4 #o3 #o4))
           ((place v4 v18 v25 #g4 #o3 #o4))
           ((pick v4 v18 v43 #g4 #o3 #o4))
           ((place v4 v18 v43 #g4 #o3 #o4))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 v21 #g2 #o3 #o4))
           ((place v4 v8 v21 #g2 #o3 #o4))
           ((pick v4 v8 v28 #g2 #o3 #o4))
           ((place v4 v8 v28 #g2 #o3 #o4))
           ((pick v4 v8 v9 #g2 #q5 #t8))
           ((place v4 v8 v9 #g2 #q5 #t8))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The task is to place five objects (v8, v12, v14, v16, v18) onto the surface v20. The robot arm v4 is currently empty. The robot is at base configuration v3.
           
           The initial state shows that objects v8, v12, v14, v16, and v18 are currently on surface v11. The goal requires them to be on surface v20.
           To achieve this, the robot needs to pick up each object and then place it on the target surface v20. The `on` predicate is satisfied if `supported` and `atpose` are true for the same pose. The initial poses are supported by v11. The target poses for the objects should be supported by v20. The provided `supported` facts indicate that several poses for each object (e.g., v8, v28) are supported by v20. The `kin` facts provide the necessary kinematics for picking and placing objects from various poses to other poses.
           
           The plan will involve a sequence of `pick` and `place` actions for each of the five objects.
           The robot is currently at `atbconf(v3)` and `handempty(v4)`.
           
           1. **Move to pick up v8:** The object v8 is at pose v9. The kinematics for picking v8 from v9 are available with base configuration #q5 and trajectory #t8. The robot needs to move its base to #q5.
           2. **Pick v8:** After moving, the robot can pick v8.
           3. **Move to place v8:** The goal is to place v8 on v20. A valid pose for v8 on v20 is v28. The kinematics for placing v8 at v28 are available with base configuration #o3 and trajectory #o4. The robot needs to move its base from #q5 to #o3.
           4. **Place v8:** The robot places v8 at pose v28.
           
           This sequence will be repeated for v12, v14, v16, and v18, adjusting the poses and base configurations accordingly.
           
           Let's check for v12:
           - Current pose: v13. Kinematics for pick: `kin(v4, v12, v13, #g1, #q2, #t2)`. Need to move to #q2.
           - Target pose on v20: v22. Kinematics for place: `kin(v4, v12, v22, #g1, #o3, #o4)`. Need to move to #o3.
           
           Let's check for v14:
           - Current pose: v15. Kinematics for pick: `kin(v4, v14, v15, #g0, #q8, #t11)`. Need to move to #q8.
           - Target pose on v20: v23. Kinematics for place: `kin(v4, v14, v23, #g0, #o3, #o4)`. Need to move to #o3.
           
           Let's check for v16:
           - Current pose: v17. Kinematics for pick: `kin(v4, v16, v17, #g3, #q9, #t12)`. Need to move to #q9.
           - Target pose on v20: v24. Kinematics for place: `kin(v4, v16, v24, #g3, #o3, #o4)`. Need to move to #o3.
           
           Let's check for v18:
           - Current pose: v19. Kinematics for pick: `kin(v4, v18, v19, #g4, #q7, #t10)`. Need to move to #q7.
           - Target pose on v20: v25. Kinematics for place: `kin(v4, v18, v25, #g4, #o3, #o4)`. Need to move to #o3.
           
           The plan will involve picking each object from its initial location (on v11), moving the base as needed, and placing it on a pose supported by v20. Since all final place actions use base config #o3, we will move to #o3 after each pick and before each place, except when the pick base config is already #o3.
           
           --Plan--:
           (move_base v3 #q5 #t19)
           (pick v4 v8 v9 #g2 #q5 #t8)
           (move_base #q5 #o3 #o0)
           (place v4 v8 v28 #g2 #o3 #o4)
           (move_base #o3 #q2 #o0)
           (pick v4 v12 v13 #g1 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v12 v22 #g1 #o3 #o4)
           (move_base #o3 #q8 #o0)
           (pick v4 v14 v15 #g0 #q8 #t11)
           (move_base #q8 #o3 #o0)
           (place v4 v14 v23 #g0 #o3 #o4)
           (move_base #o3 #q9 #o0)
           (pick v4 v16 v17 #g3 #q9 #t12)
           (move_base #q9 #o3 #o0)
           (place v4 v16 v24 #g3 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v18 v19 #g4 #q7 #t10)
           (move_base #q7 #o3 #o0)
           (place v4 v18 v25 #g4 #o3 #o4)

