User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v14)
           Atom rover(v14)
           Atom rock(v3)
           Atom conf(v12, v13)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom mode(v11)
           Atom type(v4, v2)
           Atom objective(v19)
           Atom rock(v8)
           Atom store(v16)
           Atom free(v12, v16)
           Atom onboard(v10, v12)
           Atom free(v14, v16)
           Atom type(v5, v6)
           Atom objective(v17)
           Atom atconf(v14, v15)
           Atom rock(v7)
           Atom rover(v12)
           Atom type(v3, v2)
           Atom lander(v9)
           Atom type(v1, v2)
           Atom type(v7, v6)
           Atom atconf(v12, v13)
           Atom rock(v4)
           Atom rock(v1)
           Atom camera(v10)
           Atom objective(v18)
           Atom imagevisible(v14, #q2, #y1, v18)
           Atom imagerange(v14, #q2, v18)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom above(v14, #q1, v1)
           Atom conf(v14, #q1)
           Atom above(v14, #q8, v4)
           Atom conf(v14, #q8)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q9, v8)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #q3, #y2, v19)
           Atom imagerange(v14, #q3, v19)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #q15, v4)
           Atom conf(v12, #q15)
           Atom above(v12, #q10, v8)
           Atom conf(v12, #q10)
           Atom above(v12, #q14, v1)
           Atom conf(v12, #q14)
           Atom comvisible(v12, #q11, #y4, v9)
           Atom comrange(v12, #q11, v9)
           Atom conf(v12, #q11)
           Atom ray(#y4)
           Atom above(v14, #q6, v7)
           Atom conf(v14, #q6)
           Atom above(v12, #q12, v7)
           Atom conf(v12, #q12)
           Atom above(v12, #q16, v3)
           Atom conf(v12, #q16)
           Atom above(v14, #q7, v3)
           Atom conf(v14, #q7)
           Atom imagevisible(v14, #q4, #y3, v17)
           Atom imagerange(v14, #q4, v17)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom above(v12, #q13, v5)
           Atom conf(v12, #q13)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q3, #t12, #q4)
           Atom motion(v14, v15, #t32, #q1)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q1, #t19, #q8)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q8, #t20, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, v15, #t1, #q2)
           Atom motion(v14, #q2, #t11, #q3)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q2, #t4, #q0)
           Atom motion(v14, #q1, #t2, #q0)
           Atom motion(v14, #q0, #t3, v15)
           Atom motion(v14, #q0, #t6, #q5)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q8, #t15, #q0)
           Atom motion(v14, #q0, #t34, #q9)
           Atom motion(v14, #q9, #t16, #q0)
           Atom motion(v14, #q0, #t8, #q7)
           Atom motion(v14, #q5, #t10, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t33, #q2)
           Atom motion(v14, #q0, #t9, #q8)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q4, #t17, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q7, #t14, #q0)
           Atom motion(v14, #q3, #t5, #q0)
           Atom motion(v12, #q16, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q16)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q6, #t13, #q0)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q0, #t7, #q6)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, v13, #t26, #q14)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q14, #t27, #q13)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, v13, #t21, #q10)
           Atom motion(v12, #q16, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q16)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q13, #t25, #q11)
           Atom motion(v12, #q10, #t23, #q11)
           Atom motion(v12, #q11, #t28, #q10)
           Atom motion(v12, #q11, #o2, #q16)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q11, #t18, v13)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q16)
           Atom motion(v12, v13, #t31, #q15)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q15)
           Atom motion(v12, #q15, #t29, #q11)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q10)
           Atom motion(v12, #q11, #t30, #q15)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q16, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q16)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, v13, #t22, #q12)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q12, #t24, #q11)
           Atom motion(v12, #o3, #o2, #q13)
           Atom motion(v12, #o3, #o2, #q14)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q16)
           Atom motion(v12, #o3, #o2, #q15)
           Atom motion(v12, #q16, #o2, #o3)
           Atom motion(v12, #q10, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q10)
           Atom motion(v12, #q13, #o2, #o3)
           Atom motion(v12, #q14, #o2, #o3)
           Atom motion(v12, #q12, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q11)
           Atom motion(v12, #q15, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q12)
           Atom motion(v12, #q11, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v8 v16))
           ((sample_rock v12 #q12 v7 v16))
           ((sample_rock v12 #q13 v5 v16))
           ((sample_rock v12 #q14 v1 v16))
           ((sample_rock v12 #q15 v4 v16))
           ((sample_rock v12 #q16 v3 v16))
           ((sample_rock v14 #q1 v1 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((sample_rock v14 #q6 v7 v16))
           ((sample_rock v14 #q7 v3 v16))
           ((sample_rock v14 #q8 v4 v16))
           ((sample_rock v14 #q9 v8 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #q10))
           ((move v12 #o3 #o2 #q11))
           ((move v12 #o3 #o2 #q12))
           ((move v12 #o3 #o2 #q13))
           ((move v12 #o3 #o2 #q14))
           ((move v12 #o3 #o2 #q15))
           ((move v12 #o3 #o2 #q16))
           ((move v12 #o3 #o2 v13))
           ((move v12 #q10 #o2 #o3))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q15))
           ((move v12 #q10 #o2 #q16))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t23 #q11))
           ((move v12 #q11 #o2 #o3))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q16))
           ((move v12 #q11 #t18 v13))
           ((move v12 #q11 #t28 #q10))
           ((move v12 #q11 #t30 #q15))
           ((move v12 #q12 #o2 #o3))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q16))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t24 #q11))
           ((move v12 #q13 #o2 #o3))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q16))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t25 #q11))
           ((move v12 #q14 #o2 #o3))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t27 #q13))
           ((move v12 #q15 #o2 #o3))
           ((move v12 #q15 #o2 #q10))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q16))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t29 #q11))
           ((move v12 #q16 #o2 #o3))
           ((move v12 #q16 #o2 #q10))
           ((move v12 #q16 #o2 #q11))
           ((move v12 #q16 #o2 #q12))
           ((move v12 #q16 #o2 #q13))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 v13))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t21 #q10))
           ((move v12 v13 #t22 #q12))
           ((move v12 v13 #t26 #q14))
           ((move v12 v13 #t31 #q15))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q0 #t3 v15))
           ((move v14 #q0 #t33 #q2))
           ((move v14 #q0 #t34 #q9))
           ((move v14 #q0 #t6 #q5))
           ((move v14 #q0 #t7 #q6))
           ((move v14 #q0 #t8 #q7))
           ((move v14 #q0 #t9 #q8))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t19 #q8))
           ((move v14 #q1 #t2 #q0))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t11 #q3))
           ((move v14 #q2 #t4 #q0))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t12 #q4))
           ((move v14 #q3 #t5 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t17 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t10 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t13 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t14 #q0))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t15 #q0))
           ((move v14 #q8 #t20 #q7))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t16 #q0))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q2))
           ((move v14 v15 #t32 #q1))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v14 #q2 #y1 v18 v10))
           ((calibrate v14 #q3 #y2 v19 v10))
           ((calibrate v14 #q4 #y3 v17 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v14 #q2 #y1 v18 v10 v11))
           ((take_image v14 #q3 #y2 v19 v10 v11))
           ((take_image v14 #q4 #y3 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q11 #y4 v9 v8))
           ((send_analysis v12 #q11 #y4 v9 v7))
           ((send_analysis v12 #q11 #y4 v9 v5))
           ((send_analysis v12 #q11 #y4 v9 v1))
           ((send_analysis v12 #q11 #y4 v9 v4))
           ((send_analysis v12 #q11 #y4 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_image v12 #q11 #y4 v9 v17 v11))
           ((send_image v12 #q11 #y4 v9 v18 v11))
           ((send_image v12 #q11 #y4 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene includes two rovers, `v12` and `v14`, and a lander `v9`. Both rovers have a camera `v10` onboard that supports image mode `v11`. There are various rock objectives (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) of different types (`v2`, `v6`). There are also abstract objectives `v17`, `v18`, `v19`. Both rovers have a store `v16` which is currently free.
           
           The goal `new-axiom@0()` can be satisfied if at least one rock of type `v2` (e.g., `v1`, `v3`, `v4`) and one rock of type `v6` (e.g., `v5`, `v7`, `v8`) have been analyzed, and images of all objectives `v17`, `v18`, `v19` have been received. Also, both rovers need to be at some configurations and have their stores free. Looking at the initial state, both rovers `v12` and `v14` already have free stores and are at some configurations.
           
           Therefore, the plan should focus on:
           1. Analyzing at least one rock of type `v2`.
           2. Analyzing at least one rock of type `v6`.
           3. Receiving images for objectives `v17`, `v18`, and `v19`.
           
           Let's break down these subgoals:
           
           **Analyzing rocks:**
           To analyze a rock, a rover must first `sample_rock` and then `send_analysis`.
           - Rover `v12` can sample `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
           - Rover `v14` can sample `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
           
           Rock types:
           - `v1`, `v3`, `v4` are type `v2`.
           - `v5`, `v7`, `v8` are type `v6`.
           
           We need one of each type. Let's pick `v3` (type `v2`) and `v8` (type `v6`).
           
           **Sampling `v3` (type `v2`):**
           - Rover `v12` is at `v13` and can move to `#q16` to be above `v3`.
           - Rover `v14` is at `v15` and can move to `#q7` to be above `v3`.
           Let's use `v12` to sample `v3`.
           Current state: `atconf(v12, v13)`.
           Action: `(move v12 v13 #o2 #q16)` to be `above(v12, #q16, v3)`.
           Then `(sample_rock v12 #q16 v3 v16)`. This will set `analyzed(v12, v3)`.
           
           **Sampling `v8` (type `v6`):**
           - Rover `v12` is at `v13` and can move to `#q10` to be above `v8`.
           - Rover `v14` is at `v15` and can move to `#q9` to be above `v8`.
           Let's use `v14` to sample `v8`.
           Current state: `atconf(v14, v15)`.
           Action: `(move v14 v15 #o2 #q9)` to be `above(v14, #q9, v8)`.
           Then `(sample_rock v14 #q9 v8 v16)`. This will set `analyzed(v14, v8)`.
           
           **Sending analysis:**
           To send analysis, the rover must be at a configuration `q` where it has `comvisible` to the lander `v9` and must have `analyzed` the rock.
           - For `v3` (analyzed by `v12`): `v12` can use `comvisible(v12, #q11, #y4, v9)`. Rover `v12` needs to move to `#q11`.
             Current state: `atconf(v12, #q16)`.
             Action: `(move v12 #q16 #o2 #q11)`.
             Then `(send_analysis v12 #q11 #y4 v9 v3)`. This will set `receivedanalysis(v3)`.
           - For `v8` (analyzed by `v14`): `v14` can use `comvisible(v14, #q0, #y0, v9)`. Rover `v14` needs to move to `#q0`.
             Current state: `atconf(v14, #q9)`.
             Action: `(move v14 #q9 #t16 #q0)`.
             Then `(send_analysis v14 #q0 #y0 v9 v8)`. This will set `receivedanalysis(v8)`.
           
           **Receiving images for `v17`, `v18`, `v19`:**
           To receive an image, a rover must `calibrate` its camera, then `take_image`, and then `send_image`.
           The camera `v10` is onboard both rovers.
           
           For `v17`:
           - `v14` can see `v17` at `#q4` via `y3`.
             Current state: `atconf(v14, #q0)`.
             Action: `(move v14 #q0 #o2 #q4)`.
             Action: `(calibrate v14 #q4 #y3 v17 v10)`.
             Action: `(take_image v14 #q4 #y3 v17 v10 v11)`.
             Action: `(move v14 #q4 #t17 #q0)`. (Move back to com location)
             Action: `(send_image v14 #q0 #y0 v9 v17 v11)`. This sets `receivedimage(v17, v11)`.
           
           For `v18`:
           - `v14` can see `v18` at `#q2` via `y1`.
             Current state: `atconf(v14, #q0)`.
             Action: `(move v14 #q0 #t33 #q2)`.
             Action: `(calibrate v14 #q2 #y1 v18 v10)`. (Note: `calibrate` might not be strictly needed if `take_image` is used by the same camera on the same rover for another image right after, but since we sent the image, the camera is uncalibrated now.)
             Action: `(take_image v14 #q2 #y1 v18 v10 v11)`.
             Action: `(move v14 #q2 #t4 #q0)`.
             Action: `(send_image v14 #q0 #y0 v9 v18 v11)`. This sets `receivedimage(v18, v11)`.
           
           For `v19`:
           - `v14` can see `v19` at `#q3` via `y2`.
             Current state: `atconf(v14, #q0)`.
             Action: `(move v14 #q0 #o2 #q3)`.
             Action: `(calibrate v14 #q3 #y2 v19 v10)`.
             Action: `(take_image v14 #q3 #y2 v19 v10 v11)`.
             Action: `(move v14 #q3 #t5 #q0)`.
             Action: `(send_image v14 #q0 #y0 v9 v19 v11)`. This sets `receivedimage(v19, v11)`.
           
           All conditions for `new-axiom@0()` seem achievable.
           
           --Plan--:
           (move v12 v13 #o2 #q16)
           (sample_rock v12 #q16 v3 v16)
           (move v12 #q16 #o2 #q11)
           (send_analysis v12 #q11 #y4 v9 v3)
           (move v14 v15 #o2 #q9)
           (sample_rock v14 #q9 v8 v16)
           (move v14 #q9 #t16 #q0)
           (send_analysis v14 #q0 #y0 v9 v8)
           (move v14 #q0 #o2 #q4)
           (calibrate v14 #q4 #y3 v17 v10)
           (take_image v14 #q4 #y3 v17 v10 v11)
           (move v14 #q4 #t17 #q0)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (move v14 #q0 #t33 #q2)
           (calibrate v14 #q2 #y1 v18 v10)
           (take_image v14 #q2 #y1 v18 v10 v11)
           (move v14 #q2 #t4 #q0)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (move v14 #q0 #o2 #q3)
           (calibrate v14 #q3 #y2 v19 v10)
           (take_image v14 #q3 #y2 v19 v10 v11)
           (move v14 #q3 #t5 #q0)
           (send_image v14 #q0 #y0 v9 v19 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. Let's re-examine the goal `new-axiom@0()`. This axiom is a conjunction of many individual atoms, including:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `type(?stone, v2)` and `receivedanalysis(?stone)`
           - `type(?soil, v6)` and `receivedanalysis(?soil)`
           
           My previous plan successfully aimed for `receivedimage` and `receivedanalysis` conditions. However, the `atconf` and `free` conditions are also part of the axiom. The initial state already has `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)`. The issue is that actions like `sample_rock` set `full(v, s)` and remove `free(v, s)`. My previous plan did not include `drop_rock` actions, so the `free` conditions were not maintained.
           
           Let's refine the plan to address the `free` condition:
           After sampling a rock, the `store` becomes `full`. To restore the `free` predicate, a `drop_rock` action must be performed *before* attempting to sample another rock with the same store, or if the `free` predicate is part of the goal state. Since the goal explicitly states `free(v12, v16)` and `free(v14, v16)`, we must ensure these are true at the end of the plan.
           
           Revised strategy:
           1. Sample a type `v2` rock (e.g., `v3`) using `v12`.
           2. Send analysis for `v3`.
           3. Drop the rock from `v12` to free its store.
           4. Sample a type `v6` rock (e.g., `v8`) using `v14`.
           5. Send analysis for `v8`.
           6. Drop the rock from `v14` to free its store.
           7. Acquire and send images for `v17`, `v18`, `v19` using `v14` (or `v12`).
           
           Let's follow the previous rock and image acquisition strategy, but adding `drop_rock` actions:
           
           **Rover v12 for rock v3 (type v2):**
           - Initial: `atconf(v12, v13)`, `free(v12, v16)`
           - `(move v12 v13 #o2 #q16)`: `atconf(v12, #q16)`
           - `(sample_rock v12 #q16 v3 v16)`: `full(v12, v16)`, `analyzed(v12, v3)`, `~free(v12, v16)`
           - `(move v12 #q16 #o2 #q11)`: `atconf(v12, #q11)`
           - `(send_analysis v12 #q11 #y4 v9 v3)`: `receivedanalysis(v3)`
           - `(drop_rock v12 v16)`: `free(v12, v16)`, `~full(v12, v16)`
           - We need `v12` to be back at `v13` for the goal. `(move v12 #q11 #t18 v13)`.
           
           **Rover v14 for rock v8 (type v6):**
           - Initial: `atconf(v14, v15)`, `free(v14, v16)`
           - `(move v14 v15 #o2 #q9)`: `atconf(v14, #q9)`
           - `(sample_rock v14 #q9 v8 v16)`: `full(v14, v16)`, `analyzed(v14, v8)`, `~free(v14, v16)`
           - `(move v14 #q9 #t16 #q0)`: `atconf(v14, #q0)`
           - `(send_analysis v14 #q0 #y0 v9 v8)`: `receivedanalysis(v8)`
           - `(drop_rock v14 v16)`: `free(v14, v16)`, `~full(v14, v16)`
           - We need `v14` to be back at `v15` for the goal. `(move v14 #q0 #t3 v15)`.
           
           **Rover v14 for images `v17`, `v18`, `v19` (assuming `v14` remains at `v15` or returns to it after image tasks and prior to dropping rock):**
           Let's manage the `atconf` for `v14`. It needs to be at `v15` at the end. It's currently at `v15` for image capture locations, then goes to `#q0` to send images. It can return to `v15` from `#q0` after all image transmissions.
           
           **Images acquisition by v14:**
           - `v14` needs to be at a config where it can see objectives.
           - After sending analysis, `v14` is at `#q0`.
           
           For `v17`:
           - `(move v14 #q0 #o2 #q4)`
           - `(calibrate v14 #q4 #y3 v17 v10)`
           - `(take_image v14 #q4 #y3 v17 v10 v11)`
           - `(move v14 #q4 #t17 #q0)`
           - `(send_image v14 #q0 #y0 v9 v17 v11)`
           
           For `v18`:
           - `(move v14 #q0 #t33 #q2)`
           - `(calibrate v14 #q2 #y1 v18 v10)`
           - `(take_image v14 #q2 #y1 v18 v10 v11)`
           - `(move v14 #q2 #t4 #q0)`
           - `(send_image v14 #q0 #y0 v9 v18 v11)`
           
           For `v19`:
           - `(move v14 #q0 #o2 #q3)`
           - `(calibrate v14 #q3 #y2 v19 v10)`
           - `(take_image v14 #q3 #y2 v19 v10 v11)`
           - `(move v14 #q3 #t5 #q0)`
           - `(send_image v14 #q0 #y0 v9 v19 v11)`
           
           After all these, `v14` is at `#q0`. The goal needs `atconf(v14, v15)`. So the final step for `v14` will be to move back to `v15`. `(move v14 #q0 #t3 v15)`.
           
           Let's consolidate the plan, ensuring each rover ends at its initial configuration and with free stores.
           
           --Plan--:
           (move v12 v13 #o2 #q16)
           (sample_rock v12 #q16 v3 v16)
           (move v12 #q16 #o2 #q11)
           (send_analysis v12 #q11 #y4 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q11 #t18 v13)
           (move v14 v15 #o2 #q9)
           (sample_rock v14 #q9 v8 v16)
           (move v14 #q9 #t16 #q0)
           (send_analysis v14 #q0 #y0 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q0 #o2 #q4)
           (calibrate v14 #q4 #y3 v17 v10)
           (take_image v14 #q4 #y3 v17 v10 v11)
           (move v14 #q4 #t17 #q0)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (move v14 #q0 #t33 #q2)
           (calibrate v14 #q2 #y1 v18 v10)
           (take_image v14 #q2 #y1 v18 v10 v11)
           (move v14 #q2 #t4 #q0)
           (send_image v14 #q0 #y0 v9 v18 v11)
           (move v14 #q0 #o2 #q3)
           (calibrate v14 #q3 #y2 v19 v10)
           (take_image v14 #q3 #y2 v19 v10 v11)
           (move v14 #q3 #t5 #q0)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (move v14 #q0 #t3 v15)

