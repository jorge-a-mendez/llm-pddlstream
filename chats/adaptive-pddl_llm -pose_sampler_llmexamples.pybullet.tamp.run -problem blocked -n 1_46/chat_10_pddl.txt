User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t2: object
           #t3: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v8, v9)
           Atom stackable(v12, v18)
           Atom stackable(v12, v10)
           Atom controllable(v4)
           Atom aconf(v4, v5)
           Atom bconf(v3)
           Atom stackable(v8, v18)
           Atom graspable(v15)
           Atom atbconf(v3)
           Atom handempty(v6)
           Atom graspable(v8)
           Atom stackable(v8, v10)
           Atom handempty(v4)
           Atom arm(v4)
           Atom supported(v8, v9, v11)
           Atom pose(v8, v9)
           Atom arm(v6)
           Atom type(v8, v17)
           Atom ataconf(v4, v5)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v20, v15, v16)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom supported(v12, v13, v14)
           Atom stackable(v15, v10)
           Atom canmove()
           Atom pose(v15, v16)
           Atom ataconf(v6, v7)
           Atom aconf(v6, v7)
           Atom atpose(v15, v16)
           Atom type(v12, v17)
           Atom supported(v15, v16, v11)
           Atom graspable(v12)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #g0)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, v20)
           Atom grasp(v8, v21)
           Atom grasp(v8, v22)
           Atom grasp(v8, v23)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v8, v9, v20, #q4, #t8)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom bconf(v28)
           Atom atraj(v29)
           Atom kin(v4, v8, v19, v22, v28, v29)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v21, v26, v27)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v23, v24, v25)
           Atom bconf(#q5)
           Atom atraj(#t10)
           Atom kin(v4, v8, v19, v20, #q5, #t10)
           Atom basemotion(v3, #o0, v28)
           Atom basemotion(v28, #o0, v28)
           Atom basemotion(v28, #o0, v3)
           Atom basemotion(v26, #o0, v28)
           Atom basemotion(v28, #o0, v26)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v3, #o0, v26)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v28, #o0, v24)
           Atom basemotion(v24, #o0, v28)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(#q4, #o0, v24)
           Atom basemotion(#q4, #o0, v26)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q4)
           Atom basemotion(v24, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(v26, #o0, #q4)
           Atom basemotion(v28, #o0, #q4)
           Atom basemotion(#q4, #o0, v28)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(v24, #o0, #q5)
           Atom basemotion(#q5, #o0, v26)
           Atom basemotion(v28, #o0, #q5)
           Atom basemotion(#q5, #o0, v24)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom btraj(#t11)
           Atom basemotion(#q4, #t11, #q5)
           Atom basemotion(v26, #o0, #q5)
           Atom basemotion(#q5, #o0, v28)
           Atom basemotion(#q5, #o0, #q4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, #p0, #g0, #q0, #t0)
           Atom basemotion(v28, #o0, #q1)
           Atom basemotion(v26, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(v24, #o0, #q1)
           Atom basemotion(#q1, #o0, v26)
           Atom basemotion(#q1, #o0, v28)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, v24)
           Atom basemotion(v28, #o0, #q0)
           Atom basemotion(#q0, #o0, v28)
           Atom basemotion(#q0, #o0, v26)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, v24)
           Atom basemotion(v26, #o0, #q0)
           Atom btraj(#t12)
           Atom basemotion(#q1, #t12, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(v24, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(#o3, #o0, v24)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(v28, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, v28)
           Atom basemotion(#o3, #o0, v26)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v28 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v24 #o0))
           ((move_base #q0 v26 #o0))
           ((move_base #q0 v28 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v24 #o0))
           ((move_base #q1 v26 #o0))
           ((move_base #q1 v28 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q0 #t12))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 v24 #o0))
           ((move_base #q4 v26 #o0))
           ((move_base #q4 v28 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q5 #t11))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v24 #o0))
           ((move_base #q5 v26 #o0))
           ((move_base #q5 v28 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q0 #o0))
           ((move_base v24 #q1 #o0))
           ((move_base v24 #q4 #o0))
           ((move_base v24 #q5 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v28 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q0 #o0))
           ((move_base v26 #q1 #o0))
           ((move_base v26 #q4 #o0))
           ((move_base v26 #q5 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v28 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v28 #o3 #o0))
           ((move_base v28 #q0 #o0))
           ((move_base v28 #q1 #o0))
           ((move_base v28 #q4 #o0))
           ((move_base v28 #q5 #o0))
           ((move_base v28 v24 #o0))
           ((move_base v28 v26 #o0))
           ((move_base v28 v28 #o0))
           ((move_base v28 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v28 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((move_base v3 #q4 #t9))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q0 #t0))
           ((place v4 v12 #p0 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q1 #t1))
           ((place v4 v12 v13 #g0 #q1 #t1))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 #q5 #t10))
           ((place v4 v8 v19 v20 #q5 #t10))
           ((pick v4 v8 v19 v21 v26 v27))
           ((place v4 v8 v19 v21 v26 v27))
           ((pick v4 v8 v19 v22 v28 v29))
           ((place v4 v8 v19 v22 v28 v29))
           ((pick v4 v8 v19 v23 v24 v25))
           ((place v4 v8 v19 v23 v24 v25))
           ((pick v4 v8 v9 v20 #q4 #t8))
           ((place v4 v8 v9 v20 #q4 #t8))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` is an axiom that becomes true when `on(?green, v18)` and `type(?green, v17)` are true. Looking at the initial state, we have `type(v8, v17)`, which means `v8` can be considered `?green` in the axiom. Therefore, the task is to get `v8` onto `v18`.
           
           From the initial state, `v8` is `atpose(v8, v9)` and `supported(v8, v9, v11)`. `v18` is a surface where `v12` could be supported by (`supported(v12, #p0, v18)`). This means `v18` is a valid location to place `v8`.
           
           The robot arm `v4` is `handempty(v4)` and `atbconf(v3)`. We need to pick up `v8` and place it on `v18`.
           `v8` is at `pose(v8, v9)`. There is a pick action available: `(pick v4 v8 v9 v20 #q4 #t8)`. This action requires `atbconf(#q4)`. Since the robot is currently at `atbconf(v3)`, it needs to move its base. There is a `basemotion(v3, #t9, #q4)` that generates the trajectory `#t9` to move from `v3` to `#q4`.
           
           After picking up `v8`, the robot will be holding `v8`. The next step is to place it on `v18`. We need a pose for `v8` on `v18`. From the initial state, `pose(v8, v19)` and `supported(v8, v19, v18)` are available, which means `v19` is a valid pose for `v8` on `v18`.
           There are `place` actions that correspond to placing `v8` at `v19` using different grasps and base configurations. One such action is `(place v4 v8 v19 v20 #q5 #t10)`. This action requires the robot to be at `atbconf(#q5)`. We currently are at `atbconf(#q4)` after the pick, so we need to move the base from `#q4` to `#q5`. There is a `basemotion(#q4, #t11, #q5)` which will generate trajectory `#t11`.
           
           --Plan--:
           (move_base v3 #q4 #t9)
           (pick v4 v8 v9 v20 #q4 #t8)
           (move_base #q4 #q5 #t11)
           (place v4 v8 v19 v20 #q5 #t10)

