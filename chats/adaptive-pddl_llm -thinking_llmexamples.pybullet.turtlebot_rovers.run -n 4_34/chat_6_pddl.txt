User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v8, v6)
           Atom rock(v1)
           Atom mode(v11)
           Atom free(v14, v16)
           Atom supports(v10, v11)
           Atom atconf(v14, v15)
           Atom camera(v10)
           Atom type(v5, v6)
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom store(v16)
           Atom objective(v17)
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom rock(v4)
           Atom rover(v12)
           Atom rock(v7)
           Atom objective(v20)
           Atom onboard(v10, v14)
           Atom lander(v9)
           Atom rock(v5)
           Atom atconf(v12, v13)
           Atom objective(v19)
           Atom type(v3, v2)
           Atom rover(v14)
           Atom rock(v3)
           Atom type(v7, v6)
           Atom onboard(v10, v12)
           Atom free(v12, v16)
           Atom type(v4, v2)
           Atom type(v1, v2)
           Atom above(v14, #q7, v3)
           Atom conf(v14, #q7)
           Atom above(v14, #q3, v1)
           Atom conf(v14, #q3)
           Atom above(v14, #q4, v8)
           Atom conf(v14, #q4)
           Atom imagevisible(v14, #q2, #y2, v19)
           Atom imagerange(v14, #q2, v19)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom imagevisible(v14, #q5, #y3, v20)
           Atom imagerange(v14, #q5, v20)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #q8, v7)
           Atom conf(v14, #q8)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #o5, v7)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v14, #q10, v4)
           Atom conf(v14, #q10)
           Atom above(v12, #o5, v4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, v15, #t5, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q0, #t19, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, v15, #t6, #q2)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, v15, #t18, #q6)
           Atom motion(v14, #q6, #t20, #q0)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #t10, #q1)
           Atom motion(v14, #q2, #t1, #q1)
           Atom motion(v14, #q1, #t8, #q4)
           Atom motion(v14, #q10, #t25, #q1)
           Atom motion(v14, #q1, #t23, #q10)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q3, #t3, #q1)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q1, #t17, #q9)
           Atom motion(v14, #q1, #t12, #q2)
           Atom motion(v14, #q9, #t22, #q1)
           Atom motion(v14, #q1, #t15, #q7)
           Atom motion(v14, #q4, #t4, #q1)
           Atom motion(v14, #q1, #t2, v15)
           Atom motion(v14, #q7, #t14, #q1)
           Atom motion(v14, #q1, #t11, #q6)
           Atom motion(v14, #q1, #t7, #q3)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q1, #t16, #q8)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q8, #t24, #q1)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q1, #t13, #q5)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q5, #t9, #q1)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q2, #t21, #q5)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v12, #o0, #o2, v13)
           Atom motion(v12, v13, #o2, #o0)
           Atom motion(v12, #o0, #o2, #o0)
           Atom motion(v12, #o0, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o0)
           Atom motion(v12, #o0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o0)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #q10 v4 v16))
           ((sample_rock v14 #q3 v1 v16))
           ((sample_rock v14 #q4 v8 v16))
           ((sample_rock v14 #q7 v3 v16))
           ((sample_rock v14 #q8 v7 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #o0 #o2 #o0))
           ((move v12 #o0 #o2 #o3))
           ((move v12 #o0 #o2 #o5))
           ((move v12 #o0 #o2 v13))
           ((move v12 #o3 #o2 #o0))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o0))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 v13))
           ((move v12 v13 #o2 #o0))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 v13))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q0 #t19 #q2))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #t11 #q6))
           ((move v14 #q1 #t12 #q2))
           ((move v14 #q1 #t13 #q5))
           ((move v14 #q1 #t15 #q7))
           ((move v14 #q1 #t16 #q8))
           ((move v14 #q1 #t17 #q9))
           ((move v14 #q1 #t2 v15))
           ((move v14 #q1 #t23 #q10))
           ((move v14 #q1 #t7 #q3))
           ((move v14 #q1 #t8 #q4))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t25 #q1))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t1 #q1))
           ((move v14 #q2 #t21 #q5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q1))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t4 #q1))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t9 #q1))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t10 #q1))
           ((move v14 #q6 #t20 #q0))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t14 #q1))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t24 #q1))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t22 #q1))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t18 #q6))
           ((move v14 v15 #t5 #q0))
           ((move v14 v15 #t6 #q2))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q2 #y2 v19 v10))
           ((calibrate v14 #q5 #y3 v20 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q2 #y2 v19 v10 v11))
           ((take_image v14 #q5 #y3 v20 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #o0 #o1 v9 v1))
           ((send_analysis v12 #o0 #o1 v9 v3))
           ((send_analysis v12 #o0 #o1 v9 v4))
           ((send_analysis v12 #o0 #o1 v9 v5))
           ((send_analysis v12 #o0 #o1 v9 v7))
           ((send_analysis v12 #o0 #o1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #o0 #o1 v9 v17 v11))
           ((send_image v12 #o0 #o1 v9 v18 v11))
           ((send_image v12 #o0 #o1 v9 v19 v11))
           ((send_image v12 #o0 #o1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Comprehensive Plan to Achieve `new-axiom@0()` in the `rovers` Domain**
           
           Okay, here's my plan to tackle the `new-axiom@0()` goal in the `rovers` domain. It's a bit involved, but I've broken it down into manageable sub-goals:
           
           **Initial Setup:**
           
           *   My starting point is that I already know rover `v12` is at position `v13`, rover `v14` is at position `v15`, and the storage units (`v16`) on both rovers are free. Plus, I can communicate with the lander `v9`.
           
           **Sub-goal 1: Capture Images and Send Them**
           
           This is the most complex part. I need to get four images (`v17`, `v18`, `v19`, `v20`) in mode `v11` and send them to the lander. Here's the strategy:
           
           1.  **Preparation:** My assessment shows that rover `v14` has the best visibility and communication for this job. So, I will use `v14`.
           2.  **Move and Calibrate:** I will move `v14` from its starting position (`v15`) to the first location (`#q2`) to calibrate camera `v10` and take image `v19`. I will repeat this process for locations `#q6`, `#q0`, and `#q5` to capture images `v17`, `v18`, and `v20` respectively.
           3.  **Communication Prep:** Once all images are taken, I will move `v14` to location `#q1` to communicate with the lander `v9`.
           4.  **Send Images:** Finally, I will send all four images from `v14` to `v9` in mode `v11`.
           
           **Sub-goal 2: Sample Rocks and Send Analysis**
           
           Next, I need to analyze a rock of a specific type (v2, which are stones) and another of type v6 (soil), and send the results. The store `v16` on `v14` must be free when this is complete.
           
           1.  **Target Rock Selection:** I will choose rocks `v3` (type v2) and `v5` (type v6) for this purpose.
           2.  **Move and Sample:** I will move `v14` to location `#q7` (above rock `v3`), sample it using store `v16`, then move back to `#q1`.
           3.  **Send Analysis:** Back at `#q1`, I will send the analysis of `v3` to `v9` and drop the rock to clear store `v16`.
           4.  **Repeat for Soil:** I will do the same process for the soil: move to `#q9`, sample `v5`, move back to `#q1`, send the analysis of `v5`, and drop it in store `v16`.
           
           **Final Steps (Very Important!)**
           
           There's one crucial detail. My plan fulfills all the `new-axiom@0()` conditions... *almost*. It appears I need to ensure that `atconf(v14, v15)` is true *at the end of the action* as well.
           
           Therefore:
           
           1.  **Return to Base:** Once all sampling and sending are complete, I need to move `v14` back to its initial location `v15`.
           
           **The Integrated Plan**
           
           Here's the combined, sequenced plan for achieving `new-axiom@0()`:
           
           1.  Move `v14 v15 #o2 #q2`
           2.  Calibrate v14 with camera `v10` for image `v19` at `#q2`
           3.  Take image v14 with camera `v10` of image `v19` in mode `v11`
           4.  Move `v14` from `#q2` to `#q6`
           5.  Calibrate v14 with camera `v10` for image `v17` at `#q6`
           6.  Take image v14 with camera `v10` of image `v17` in mode `v11`
           7.  Move `v14` from `#q6` to `#q0`
           8.  Calibrate v14 with camera `v10` for image `v18` at `#q0`
           9.  Take image v14 with camera `v10` of image `v18` in mode `v11`
           1
)

Model:     **A Comprehensive Plan to Achieve `new-axiom@0()` in the `rovers` Domain**
           
           Okay, here's my plan to tackle the `new-axiom@0()` goal in the `rovers` domain. It's a bit involved, but I've broken it down into manageable sub-goals:
           
           **Initial Setup:**
           
           *   My starting point is that I already know rover `v12` is at position `v13`, rover `v14` is at position `v15`, and the storage units (`v16`) on both rovers are free. Plus, I can communicate with the lander `v9`.
           
           **Sub-goal 1: Capture Images and Send Them**
           
           This is the most complex part. I need to get four images (`v17`, `v18`, `v19`, `v20`) in mode `v11` and send them to the lander. Here's the strategy:
           
           1.  **Preparation:** My assessment shows that rover `v14` has the best visibility and communication for this job. So, I will use `v14`.
           2.  **Move and Calibrate:** I will move `v14` from its starting position (`v15`) to the first location (`#q2`) to calibrate camera `v10` and take image `v19`. I will repeat this process for locations `#q6`, `#q0`, and `#q5` to capture images `v17`, `v18`, and `v20` respectively.
           3.  **Communication Prep:** Once all images are taken, I will move `v14` to location `#q1` to communicate with the lander `v9`.
           4.  **Send Images:** Finally, I will send all four images from `v14` to `v9` in mode `v11`.
           
           **Sub-goal 2: Sample Rocks and Send Analysis**
           
           Next, I need to analyze a rock of a specific type (v2, which are stones) and another of type v6 (soil), and send the results. The store `v16` on `v14` must be free when this is complete.
           
           1.  **Target Rock Selection:** I will choose rocks `v3` (type v2) and `v5` (type v6) for this purpose.
           2.  **Move and Sample:** I will move `v14` to location `#q7` (above rock `v3`), sample it using store `v16`, then move back to `#q1`.
           3.  **Send Analysis:** Back at `#q1`, I will send the analysis of `v3` to `v9` and drop the rock to clear store `v16`.
           4.  **Repeat for Soil:** I will do the same process for the soil: move to `#q9`, sample `v5`, move back to `#q1`, send the analysis of `v5`, and drop it in store `v16`.
           
           **Final Steps (Very Important!)**
           
           There's one crucial detail. My plan fulfills all the `new-axiom@0()` conditions... *almost*. It appears I need to ensure that `atconf(v14, v15)` is true *at the end of the action* as well.
           
           Therefore:
           
           1.  **Return to Base:** Once all sampling and sending are complete, I need to move `v14` back to its initial location `v15`.
           
           **The Integrated Plan**
           
           Here's the combined, sequenced plan for achieving `new-axiom@0()`:
           
           1.  Move `v14 v15 #o2 #q2`
           2.  Calibrate v14 with camera `v10` for image `v19` at `#q2`
           3.  Take image v14 with camera `v10` of image `v19` in mode `v11`
           4.  Move `v14` from `#q2` to `#q6`
           5.  Calibrate v14 with camera `v10` for image `v17` at `#q6`
           6.  Take image v14 with camera `v10` of image `v17` in mode `v11`
           7.  Move `v14` from `#q6` to `#q0`
           8.  Calibrate v14 with camera `v10` for image `v18` at `#q0`
           9.  Take image v14 with camera `v10` of image `v18` in mode `v11`
           1

User:      The plan you provided contains the following invalid actions: `(move v14 v15 #o2 #q2)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #q10 v4 v16))
           ((sample_rock v14 #q3 v1 v16))
           ((sample_rock v14 #q4 v8 v16))
           ((sample_rock v14 #q7 v3 v16))
           ((sample_rock v14 #q8 v7 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #o0 #o2 #o0))
           ((move v12 #o0 #o2 #o3))
           ((move v12 #o0 #o2 #o5))
           ((move v12 #o0 #o2 v13))
           ((move v12 #o3 #o2 #o0))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o0))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 v13))
           ((move v12 v13 #o2 #o0))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 v13))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q0 #t19 #q2))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #t11 #q6))
           ((move v14 #q1 #t12 #q2))
           ((move v14 #q1 #t13 #q5))
           ((move v14 #q1 #t15 #q7))
           ((move v14 #q1 #t16 #q8))
           ((move v14 #q1 #t17 #q9))
           ((move v14 #q1 #t2 v15))
           ((move v14 #q1 #t23 #q10))
           ((move v14 #q1 #t7 #q3))
           ((move v14 #q1 #t8 #q4))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t25 #q1))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t1 #q1))
           ((move v14 #q2 #t21 #q5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q1))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t4 #q1))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t9 #q1))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t10 #q1))
           ((move v14 #q6 #t20 #q0))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t14 #q1))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t24 #q1))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t22 #q1))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t18 #q6))
           ((move v14 v15 #t5 #q0))
           ((move v14 v15 #t6 #q2))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q2 #y2 v19 v10))
           ((calibrate v14 #q5 #y3 v20 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q2 #y2 v19 v10 v11))
           ((take_image v14 #q5 #y3 v20 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #o0 #o1 v9 v1))
           ((send_analysis v12 #o0 #o1 v9 v3))
           ((send_analysis v12 #o0 #o1 v9 v4))
           ((send_analysis v12 #o0 #o1 v9 v5))
           ((send_analysis v12 #o0 #o1 v9 v7))
           ((send_analysis v12 #o0 #o1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #o0 #o1 v9 v17 v11))
           ((send_image v12 #o0 #o1 v9 v18 v11))
           ((send_image v12 #o0 #o1 v9 v19 v11))
           ((send_image v12 #o0 #o1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

(Thoughts: **Refining the Action Plan for Rover V14**
           
           Okay, the user flagged an invalid move action. I need to fix `(move v14 v15 #o2 #q2)`. Checking my list of valid moves from `v15` for `v14`, I see the correct action is actually `(move v14 v15 #t6 #q2)`. The original trajectory parameter `#o2` was wrong; it should be `#t6`.
           
           With that fix in mind, let's re-evaluate the entire plan:
           
           **Image Acquisition and Transmission Phase:**
           
           1.  **Move V14:** Corrected move `(move v14 v15 #t6 #q2)`.
           2.  Calibrate at `#q2` for `v19`, then capture its image.
           3.  Move `v14` from `#q2` to `#q6`. (Valid: `(move v14 #q2 #o2 #q6)`)
           4.  Calibrate at `#q6` for `v17`, then capture its image.
           5.  Move `v14` from `#q6` to `#q0`. (Valid: `(move v14 #q6 #t20 #q0)`)
           6.  Calibrate at `#q0` for `v18`, then capture its image.
           7.  Move `v14` from `#q0` to `#q5`. (Valid: `(move v14 #q0 #o2 #q5)`)
           8.  Calibrate at `#q5` for `v20`, then capture its image.
           9.  Move `v14` from `#q5` to `#q1` (for communication). (Valid: `(move v14 #q5 #t9 #q1)`)
           10. Send all four images.
           
           **Rock Sampling and Analysis Transmission Phase:**
           
           1.  Move `v14` from `#q1` to `#q7` (above `v3`). (Valid: `(move v14 #q1 #t15 #q7)`)
           2.  Sample `v3` (type `v2`).
           3.  Move `v14` from `#q7` to `#q1`. (Valid: `(move v14 #q7 #t14 #q1)`)
           4.  Send analysis of `v3`, then drop the rock.
           5.  Move `v14` from `#q1` to `#q9` (above `v5`). (Valid: `(move v14 #q1 #t17 #q9)`)
           6.  Sample `v5` (type `v6`).
           7.  Move `v14` from `#q9` to `#q1`. (Valid: `(move v14 #q9 #t22 #q1)`)
           8.  Send analysis of `v5`, then drop the rock.
           
           **Final Configuration:**
           
           1.  Move `v14` from `#q1` to `v15`. (Valid: `(move v14 #q1 #t2 v15)`)
           
           All the move actions seem valid now, and the other steps also meet their preconditions.
           
           The goal conditions, including being at a final configuration, getting the images, analyzing the rocks, and freeing up `v14`, are all satisfied by this updated plan. Therefore, this corrected plan should work.
           
)

Model:     **Refining the Action Plan for Rover V14**
           
           Okay, the user flagged an invalid move action. I need to fix `(move v14 v15 #o2 #q2)`. Checking my list of valid moves from `v15` for `v14`, I see the correct action is actually `(move v14 v15 #t6 #q2)`. The original trajectory parameter `#o2` was wrong; it should be `#t6`.
           
           With that fix in mind, let's re-evaluate the entire plan:
           
           **Image Acquisition and Transmission Phase:**
           
           1.  **Move V14:** Corrected move `(move v14 v15 #t6 #q2)`.
           2.  Calibrate at `#q2` for `v19`, then capture its image.
           3.  Move `v14` from `#q2` to `#q6`. (Valid: `(move v14 #q2 #o2 #q6)`)
           4.  Calibrate at `#q6` for `v17`, then capture its image.
           5.  Move `v14` from `#q6` to `#q0`. (Valid: `(move v14 #q6 #t20 #q0)`)
           6.  Calibrate at `#q0` for `v18`, then capture its image.
           7.  Move `v14` from `#q0` to `#q5`. (Valid: `(move v14 #q0 #o2 #q5)`)
           8.  Calibrate at `#q5` for `v20`, then capture its image.
           9.  Move `v14` from `#q5` to `#q1` (for communication). (Valid: `(move v14 #q5 #t9 #q1)`)
           10. Send all four images.
           
           **Rock Sampling and Analysis Transmission Phase:**
           
           1.  Move `v14` from `#q1` to `#q7` (above `v3`). (Valid: `(move v14 #q1 #t15 #q7)`)
           2.  Sample `v3` (type `v2`).
           3.  Move `v14` from `#q7` to `#q1`. (Valid: `(move v14 #q7 #t14 #q1)`)
           4.  Send analysis of `v3`, then drop the rock.
           5.  Move `v14` from `#q1` to `#q9` (above `v5`). (Valid: `(move v14 #q1 #t17 #q9)`)
           6.  Sample `v5` (type `v6`).
           7.  Move `v14` from `#q9` to `#q1`. (Valid: `(move v14 #q9 #t22 #q1)`)
           8.  Send analysis of `v5`, then drop the rock.
           
           **Final Configuration:**
           
           1.  Move `v14` from `#q1` to `v15`. (Valid: `(move v14 #q1 #t2 v15)`)
           
           All the move actions seem valid now, and the other steps also meet their preconditions.
           
           The goal conditions, including being at a final configuration, getting the images, analyzing the rocks, and freeing up `v14`, are all satisfied by this updated plan. Therefore, this corrected plan should work.
           

