User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v12)
           Atom rock(v1)
           Atom rock(v3)
           Atom free(v14, v16)
           Atom lander(v9)
           Atom rock(v5)
           Atom rover(v14)
           Atom objective(v18)
           Atom atconf(v12, v13)
           Atom type(v7, v6)
           Atom supports(v10, v11)
           Atom type(v5, v6)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom rock(v8)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom rock(v4)
           Atom objective(v20)
           Atom type(v1, v2)
           Atom objective(v17)
           Atom type(v8, v6)
           Atom objective(v19)
           Atom free(v12, v16)
           Atom type(v4, v2)
           Atom conf(v12, v13)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom store(v16)
           Atom camera(v10)
           Atom mode(v11)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom above(v12, #q9, v1)
           Atom conf(v12, #q9)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q3, #y2, v19)
           Atom imagerange(v12, #q3, v19)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom comvisible(v12, #q5, #y4, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom imagevisible(v12, #q4, #y3, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q7, #y5, v20)
           Atom imagerange(v12, #q7, v20)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q10, #y6, v18)
           Atom imagerange(v14, #q10, v18)
           Atom conf(v14, #q10)
           Atom ray(#y6)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q11, #y7, v20)
           Atom imagerange(v14, #q11, v20)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom imagevisible(v14, #q13, #y9, v19)
           Atom imagerange(v14, #q13, v19)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom above(v14, #q6, v1)
           Atom conf(v14, #q6)
           Atom imagevisible(v14, #q12, #y8, v17)
           Atom imagerange(v14, #q12, v17)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom above(v14, #o5, v7)
           Atom above(v14, #q1, v5)
           Atom conf(v14, #q1)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v8)
           Atom motion(v12, v13, #t14, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #t9, #q2)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #t13, #q8)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, v13, #t12, #q7)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, v15, #t20, #q12)
           Atom motion(v14, v15, #t8, #q6)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, v15, #t26, #q13)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #t30, #q5)
           Atom motion(v12, #q2, #t4, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t23, #q8)
           Atom motion(v12, #q5, #t24, #q9)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q8, #t21, #q5)
           Atom motion(v12, #q9, #t22, #q5)
           Atom motion(v12, #q5, #t2, v13)
           Atom motion(v14, v15, #t7, #q1)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, v15, #t19, #q11)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q13, #t27, #q11)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q2, #t29, #q3)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #t5, #q5)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #t10, #q3)
           Atom motion(v14, #q1, #t1, #q0)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v14, #q6, #t32, #q0)
           Atom motion(v14, #q11, #t16, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q12, #t17, #q0)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q0, #t3, v15)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, v13, #t11, #q4)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q4, #t6, #q5)
           Atom motion(v12, #q3, #t31, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #t25, #q2)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #t28, #q7)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #t15, #q0)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, v15, #t18, #q10)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q1)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v12 #q9 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q1 v5 v16))
           ((sample_rock v14 #q6 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t29 #q3))
           ((move v12 #q2 #t4 #q5))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t31 #q4))
           ((move v12 #q3 #t5 #q5))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t25 #q2))
           ((move v12 #q4 #t28 #q7))
           ((move v12 #q4 #t6 #q5))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #t2 v13))
           ((move v12 #q5 #t23 #q8))
           ((move v12 #q5 #t24 #q9))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t30 #q5))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t21 #q5))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t22 #q5))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q3))
           ((move v12 v13 #t11 #q4))
           ((move v12 v13 #t12 #q7))
           ((move v12 v13 #t13 #q8))
           ((move v12 v13 #t14 #q9))
           ((move v12 v13 #t9 #q2))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q0 #t3 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q0))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t15 #q0))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t16 #q0))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t17 #q0))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t27 #q11))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t32 #q0))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t18 #q10))
           ((move v14 v15 #t19 #q11))
           ((move v14 v15 #t20 #q12))
           ((move v14 v15 #t26 #q13))
           ((move v14 v15 #t7 #q1))
           ((move v14 v15 #t8 #q6))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v12 #q3 #y2 v19 v10))
           ((calibrate v12 #q4 #y3 v17 v10))
           ((calibrate v12 #q7 #y5 v20 v10))
           ((calibrate v14 #q10 #y6 v18 v10))
           ((calibrate v14 #q11 #y7 v20 v10))
           ((calibrate v14 #q12 #y8 v17 v10))
           ((calibrate v14 #q13 #y9 v19 v10))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v12 #q3 #y2 v19 v10 v11))
           ((take_image v12 #q4 #y3 v17 v10 v11))
           ((take_image v12 #q7 #y5 v20 v10 v11))
           ((take_image v14 #q10 #y6 v18 v10 v11))
           ((take_image v14 #q11 #y7 v20 v10 v11))
           ((take_image v14 #q12 #y8 v17 v10 v11))
           ((take_image v14 #q13 #y9 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y4 v9 v3))
           ((send_analysis v12 #q5 #y4 v9 v4))
           ((send_analysis v12 #q5 #y4 v9 v7))
           ((send_analysis v12 #q5 #y4 v9 v8))
           ((send_analysis v12 #q5 #y4 v9 v5))
           ((send_analysis v12 #q5 #y4 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_image v12 #q5 #y4 v9 v18 v11))
           ((send_image v12 #q5 #y4 v9 v19 v11))
           ((send_image v12 #q5 #y4 v9 v17 v11))
           ((send_image v12 #q5 #y4 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Deep Dive into Achieving `new-axiom@0()` in the `rovers` Domain**
           
           Alright, let's break this down. The objective is to achieve `new-axiom@0()`, a conjunction of several conditions. My initial thought process is to dissect this goal and identify the prerequisites. 
           
           **Deconstructing the Goal:**
           
           The key to `new-axiom@0()` lies in satisfying these conditions:
           
           1.  **Image Reception:** Secure images (`receivedimage`) for objects `v17`, `v18`, `v19`, and `v20`.
           2.  **Analysis and Reception:** Analyze and receive analysis (`receivedanalysis`) for a stone and a soil sample.
           
           **Initial State Assessment:**
           
           Before diving deeper, I verified the initial state's conditions. Fortunately, the initial state satisfies the positional and free constraints, such as `atconf` and `free` predicates. This simplifies the strategy, as I only need to consider acquiring and delivering images and analyses.
           
           **Identifying Targets:**
           
           Now, for the analysis, I determined the relevant objects:
           
           *   Stone: `v1`, `v3`, or `v4` (type `v2`)
           *   Soil: `v5`, `v7`, or `v8` (type `v6`)
           
           For simplicity, I selected `v1` (stone) and `v5` (soil) as the targets for analysis. This implies the main task: capture images for all four items and analyze `v1` and `v5` while ensuring the correct objects are analyzed, and their image/analysis is received.
           
           **Crafting the Plan:**
           
           To fulfill the prerequisites of image and analysis reception, I have formulated a plan which should be efficient due to the nature of this objective. Here's the general layout:
           
           **1.  Image Acquisition:**
           
           *   **Using `send_image`:** To get the images, I must use the `send_image` action. To invoke `send_image`, I need the `haveimage`, `atconf`, `objective`, `mode`, and `comvisible` predicates, which require some clever manipulation.
           *   **Leveraging `take_image` and `calibrate`:** `haveimage` will be acquired using the `take_image` action, and its requirements are: `imagevisible`, `onboard`, `supports`, `atconf`, `calibrated`, and `~blocked`. Moreover, `take_image` needs the camera to be calibrated, which involves the `calibrate` action.
           
           **2.  Analysis and Delivery:**
           
           *   **Using `send_analysis`:** Similarly, I will use `send_analysis` to meet the objective of getting the analysis.
           *   **Rock Sampling:** Before analyzing and sending the sample to the lander, it must be sampled from the ground. I will employ `sample_rock` to achieve this, which requires `above`, `store`, `atconf`, and `free`.
           
           **Rover Roles and Actions:**
           
           With this basic structure in mind, I developed a detailed plan using the two rovers (`v12` and `v14`):
           
           **Rover `v12` (Image and Soil Analysis):**
           
           1.  **Move & Calibrate for images:** Moves to `#q2`, `#q4`, calibrates, and takes images of `v18` and `v17`.
           2.  **Image Sending and Soil Sample:** Moves to `#q5` (communication zone), sends images, then moves to `#q8` (soil zone) and samples the soil, then sends it.
           3. Drop the sample to ensure free status for future tasks.
           4. Moves to `#q5` and ends with the initial atconf status of v13.
           
           **Rover `v14` (Image and Stone Analysis):**
           
           1.  **Move & Calibrate for images:** Moves to `#q13`, `#q11`, calibrates and takes images of `v19` and `v20`.
           2.  **Image Sending and Stone Sample:** Moves to `#q0` (communication zone), sends images, then moves to `#q6` (stone zone) and samples the stone, then sends it.
           3. Drop the sample to ensure free status for future tasks.
           4. Moves to `#q0` and ends with the initial atconf status of v15.
           
           **Plan Verification and Refinement:**
           
           I carefully considered the preconditions for each action, particularly concerning the camera's `calibrated` status. The plan has been refined to ensure calibration happens right before each image capture. The end state must also satisfy free objects which is why each rover drops the sample after delivering analysis.
           
           I've checked the start and end of the plan to ensure that no constraints
)

Model:     **A Deep Dive into Achieving `new-axiom@0()` in the `rovers` Domain**
           
           Alright, let's break this down. The objective is to achieve `new-axiom@0()`, a conjunction of several conditions. My initial thought process is to dissect this goal and identify the prerequisites. 
           
           **Deconstructing the Goal:**
           
           The key to `new-axiom@0()` lies in satisfying these conditions:
           
           1.  **Image Reception:** Secure images (`receivedimage`) for objects `v17`, `v18`, `v19`, and `v20`.
           2.  **Analysis and Reception:** Analyze and receive analysis (`receivedanalysis`) for a stone and a soil sample.
           
           **Initial State Assessment:**
           
           Before diving deeper, I verified the initial state's conditions. Fortunately, the initial state satisfies the positional and free constraints, such as `atconf` and `free` predicates. This simplifies the strategy, as I only need to consider acquiring and delivering images and analyses.
           
           **Identifying Targets:**
           
           Now, for the analysis, I determined the relevant objects:
           
           *   Stone: `v1`, `v3`, or `v4` (type `v2`)
           *   Soil: `v5`, `v7`, or `v8` (type `v6`)
           
           For simplicity, I selected `v1` (stone) and `v5` (soil) as the targets for analysis. This implies the main task: capture images for all four items and analyze `v1` and `v5` while ensuring the correct objects are analyzed, and their image/analysis is received.
           
           **Crafting the Plan:**
           
           To fulfill the prerequisites of image and analysis reception, I have formulated a plan which should be efficient due to the nature of this objective. Here's the general layout:
           
           **1.  Image Acquisition:**
           
           *   **Using `send_image`:** To get the images, I must use the `send_image` action. To invoke `send_image`, I need the `haveimage`, `atconf`, `objective`, `mode`, and `comvisible` predicates, which require some clever manipulation.
           *   **Leveraging `take_image` and `calibrate`:** `haveimage` will be acquired using the `take_image` action, and its requirements are: `imagevisible`, `onboard`, `supports`, `atconf`, `calibrated`, and `~blocked`. Moreover, `take_image` needs the camera to be calibrated, which involves the `calibrate` action.
           
           **2.  Analysis and Delivery:**
           
           *   **Using `send_analysis`:** Similarly, I will use `send_analysis` to meet the objective of getting the analysis.
           *   **Rock Sampling:** Before analyzing and sending the sample to the lander, it must be sampled from the ground. I will employ `sample_rock` to achieve this, which requires `above`, `store`, `atconf`, and `free`.
           
           **Rover Roles and Actions:**
           
           With this basic structure in mind, I developed a detailed plan using the two rovers (`v12` and `v14`):
           
           **Rover `v12` (Image and Soil Analysis):**
           
           1.  **Move & Calibrate for images:** Moves to `#q2`, `#q4`, calibrates, and takes images of `v18` and `v17`.
           2.  **Image Sending and Soil Sample:** Moves to `#q5` (communication zone), sends images, then moves to `#q8` (soil zone) and samples the soil, then sends it.
           3. Drop the sample to ensure free status for future tasks.
           4. Moves to `#q5` and ends with the initial atconf status of v13.
           
           **Rover `v14` (Image and Stone Analysis):**
           
           1.  **Move & Calibrate for images:** Moves to `#q13`, `#q11`, calibrates and takes images of `v19` and `v20`.
           2.  **Image Sending and Stone Sample:** Moves to `#q0` (communication zone), sends images, then moves to `#q6` (stone zone) and samples the stone, then sends it.
           3. Drop the sample to ensure free status for future tasks.
           4. Moves to `#q0` and ends with the initial atconf status of v15.
           
           **Plan Verification and Refinement:**
           
           I carefully considered the preconditions for each action, particularly concerning the camera's `calibrated` status. The plan has been refined to ensure calibration happens right before each image capture. The end state must also satisfy free objects which is why each rover drops the sample after delivering analysis.
           
           I've checked the start and end of the plan to ensure that no constraints

