User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v8, v10)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom graspable(v12)
           Atom supported(v12, v13, v14)
           Atom graspable(v15)
           Atom arm(v6)
           Atom pose(v15, v16)
           Atom supported(v8, v9, v11)
           Atom supported(v15, v16, v11)
           Atom stackable(v15, v10)
           Atom bconf(v3)
           Atom arm(v4)
           Atom type(v12, v17)
           Atom pose(v8, v9)
           Atom atbconf(v3)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom atpose(v15, v16)
           Atom pose(v12, v13)
           Atom stackable(v8, v18)
           Atom atpose(v12, v13)
           Atom controllable(v4)
           Atom canmove()
           Atom ~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)
           Atom handempty(v6)
           Atom type(v8, v17)
           Atom atpose(v8, v9)
           Atom stackable(v12, v18)
           Atom aconf(v4, v5)
           Atom aconf(v6, v7)
           Atom stackable(v12, v10)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom grasp(v8, v23)
           Atom grasp(v8, v21)
           Atom grasp(v8, v20)
           Atom grasp(v8, v22)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v19, v23, #o3, #o4)
           Atom kin(v4, v8, v19, v20, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, v19, v22, #q2, #t4)
           Atom kin(v4, v8, v19, v21, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v8, v9, v22, #q3, #t6)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q3, #o0, #q3)
           Atom btraj(#t7)
           Atom basemotion(#q3, #t7, #q2)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q2, #o0, #q3)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q3, #o0, #o3)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q2 #t7))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t5))
           ((move_base v3 #q3 #t8))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 #o3 #o4))
           ((place v4 v8 v19 v20 #o3 #o4))
           ((pick v4 v8 v19 v21 #o3 #o4))
           ((place v4 v8 v19 v21 #o3 #o4))
           ((pick v4 v8 v19 v22 #q2 #t4))
           ((place v4 v8 v19 v22 #q2 #t4))
           ((pick v4 v8 v19 v23 #o3 #o4))
           ((place v4 v8 v19 v23 #o3 #o4))
           ((pick v4 v8 v9 v22 #q3 #t6))
           ((place v4 v8 v9 v22 #q3 #t6))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, `v8`, `v12`, and `v15` are graspable objects. `v4` and `v6` are arms. `v10` and `v18` appear to be regions where objects can be supported. There are also several poses and grasps defined.
           
           The goal `new-axiom@0()` is an axiom that means `on(?green, v18)` and `type(?green, v17)`. In the initial state, `v8` is on `v11` (supported by `v9`) and `v15` is on `v11` (supported by `v16`). `v12` is on `v14` (supported by `v13`). However, `v8` also has a pose `v19` supported by `v18`. Object `v8` has type `v17`. To satisfy the goal, we need to make `v8` be `on(v8, v18)`. Since `v8` is already of `type(v8, v17)`, the only remaining part of the goal is to place `v8` on `v18`.
           
           The current state has `atpose(v8, v9)` and `supported(v8, v9, v11)`. We need to achieve `atpose(v8, v19)` and `supported(v8, v19, v18)`. We can achieve this by picking up `v8` from `v9` and placing it at `v19`.
           
           Looking at the available actions:
           `pick v4 v8 v9 v22 #q3 #t6` allows `v4` to pick `v8` from `v9` using `v22` grasp at base configuration `#q3` with arm trajectory `#t6`.
           `place v4 v8 v19 v22 #q2 #t4` allows `v4` to place `v8` at `v19` using `v22` grasp at base configuration `#q2` with arm trajectory `#t4`.
           
           However, the base configuration might need to be changed between pick and place.
           The current base configuration is `v3`.
           To pick `v8` at `v9` with grasp `v22`, the robot needs to be at base configuration `#q3`. We can move from `v3` to `#q3` using `move_base v3 #q3 #t8`.
           After picking, the robot needs to be at base configuration `#q2` to place `v8` at `v19`. We can move from `#q3` to `#q2` using `move_base #q3 #q2 #t7`.
           
           --Plan--:
           (move_base v3 #q3 #t8)
           (pick v4 v8 v9 v22 #q3 #t6)
           (move_base #q3 #q2 #t7)
           (place v4 v8 v19 v22 #q2 #t4)

