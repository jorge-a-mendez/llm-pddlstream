User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v8, v10)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom graspable(v12)
           Atom supported(v12, v13, v14)
           Atom graspable(v15)
           Atom arm(v6)
           Atom pose(v15, v16)
           Atom supported(v8, v9, v11)
           Atom supported(v15, v16, v11)
           Atom stackable(v15, v10)
           Atom bconf(v3)
           Atom arm(v4)
           Atom type(v12, v17)
           Atom pose(v8, v9)
           Atom atbconf(v3)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom atpose(v15, v16)
           Atom pose(v12, v13)
           Atom stackable(v8, v18)
           Atom atpose(v12, v13)
           Atom controllable(v4)
           Atom canmove()
           Atom handempty(v6)
           Atom type(v8, v17)
           Atom atpose(v8, v9)
           Atom stackable(v12, v18)
           Atom aconf(v4, v5)
           Atom aconf(v6, v7)
           Atom stackable(v12, v10)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom grasp(v8, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (`#o0` to `#o4`, `v3` to `v18`). There are two arms, `v4` and `v6`. Objects `v8`, `v12`, and `v15` are graspable and stackable. `v10` and `v18` are surfaces where objects can be supported. The initial state shows `v8`, `v12`, and `v15` are currently at specific poses on various surfaces. For example, `v12` is at `v13` supported by `v14` and also at `#o2` supported by `v18` and `v10`. Similarly for `v8` and `v15`. `v4` is handempty and at configuration `v5`, `v6` is handempty and at configuration `v7`. The robot's base is at `v3`. The `canmove()` predicate is true.
           
           The goal is `new-axiom@0()`, which, according to the axioms, is true if `on(?green, v18)` and `type(?green, v17)`. The object `?green` is a variable, implying that any object that satisfies these conditions will fulfill the goal. In our initial state, we have `type(v8, v17)` and `type(v12, v17)`.
           
           Let's check if we can satisfy `on(?o, v18)` for `v8` or `v12`.
           From the initial state:
           - `atpose(v8, v9)` and `supported(v8, v9, v11)`. So `on(v8, v11)`. Also `supported(v8, #o2, v18)` and `supported(v8, #o2, v10)`. If `atpose(v8, #o2)` was true, then `on(v8, v18)` would be true.
           - `atpose(v12, v13)` and `supported(v12, v13, v14)`. So `on(v12, v14)`. Also `supported(v12, #o2, v18)` and `supported(v12, #o2, v10)`. If `atpose(v12, #o2)` was true, then `on(v12, v18)` would be true.
           
           The available action is `((move_base v3 v3 #o0))`. This action only moves the base from `v3` to `v3` using trajectory `#o0`. It does not change the pose of any objects.
           
           Therefore, the only way to satisfy the goal is if one of the `atpose` predicates already makes `on(?o, v18)` true.
           Let's re-examine `atpose` and `supported` in the initial state to see if the `new-axiom@0()` (i.e. `on(?green, v18)` and `type(?green, v17)`) is already true.
           
           For `v8`:
           - `type(v8, v17)` is true.
           - We need `on(v8, v18)`, which means `supported(v8, ?p, v18)` and `atpose(v8, ?p)`.
           - We have `atpose(v8, v9)`. Is `supported(v8, v9, v18)` true? No, we have `supported(v8, v9, v11)`.
           - We also have `supported(v8, #o2, v18)`. Is `atpose(v8, #o2)` true? No, `atpose(v8, v9)` is true.
           
           For `v12`:
           - `type(v12, v17)` is true.
           - We need `on(v12, v18)`, which means `supported(v12, ?p, v18)` and `atpose(v12, ?p)`.
           - We have `atpose(v12, v13)`. Is `supported(v12, v13, v18)` true? No, we have `supported(v12, v13, v14)`.
           - We also have `supported(v12, #o2, v18)`. Is `atpose(v12, #o2)` true? No, `atpose(v12, v13)` is true.
           
           Since the only available action is `move_base` which does not change object positions, and the goal is not satisfied in the initial state, the goal is unreachable.
           
           The goal `new-axiom@0()` requires `on(?green, v18)` and `type(?green, v17)`. From the initial state, we have objects `v8` and `v12` of type `v17`. To satisfy `on(?o, v18)`, the object `?o` must be `atpose(?p)` and `supported(?o, ?p, v18)`.
           For `v8`: `atpose(v8, v9)`. The supports for `v8` at `v9` are `v11`, not `v18`. We also have `supported(v8, #o2, v18)`, but `atpose(v8, #o2)` is not true.
           For `v12`: `atpose(v12, v13)`. The supports for `v12` at `v13` are `v14`, not `v18`. We also have `supported(v12, #o2, v18)`, but `atpose(v12, #o2)` is not true.
           The only available action is `move_base v3 v3 #o0`, which does not change the state of any objects or their poses. Therefore, the goal cannot be achieved from the initial state with the given actions.

