User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t5: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v17)
           Atom free(v12, v16)
           Atom rock(v3)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom free(v14, v16)
           Atom rock(v1)
           Atom rover(v14)
           Atom type(v5, v6)
           Atom atconf(v12, v13)
           Atom rock(v4)
           Atom supports(v10, v11)
           Atom rock(v8)
           Atom objective(v18)
           Atom conf(v12, v13)
           Atom onboard(v10, v14)
           Atom type(v4, v2)
           Atom rock(v5)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom lander(v9)
           Atom atconf(v14, v15)
           Atom conf(v14, v15)
           Atom mode(v11)
           Atom type(v7, v6)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom camera(v10)
           Atom rock(v7)
           Atom above(v12, #q13, v7)
           Atom conf(v12, #q13)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #q15, v4)
           Atom conf(v12, #q15)
           Atom imagevisible(v12, #q1, #y1, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom above(v12, #q12, v3)
           Atom conf(v12, #q12)
           Atom above(v14, #q7, v3)
           Atom conf(v14, #q7)
           Atom above(v14, #q8, v4)
           Atom conf(v14, #q8)
           Atom above(v14, #q9, v8)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #q14, #y5, v17)
           Atom imagerange(v14, #q14, v17)
           Atom conf(v14, #q14)
           Atom ray(#y5)
           Atom above(v14, #q11, v7)
           Atom conf(v14, #q11)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v12, #q16, v5)
           Atom conf(v12, #q16)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom above(v12, #q4, v1)
           Atom conf(v12, #q4)
           Atom above(v14, #q10, v1)
           Atom conf(v14, #q10)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #t39, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #t10, #q6)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v14, #q7, #t29, #q8)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, v15, #t11, #q7)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v12, v13, #t9, #q1)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q6, #t15, #q1)
           Atom motion(v12, #q15, #o2, #q16)
           Atom motion(v12, #q6, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q13)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q6)
           Atom motion(v12, #q16, #o2, #q4)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q4, #o2, #q16)
           Atom motion(v12, #q1, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q1)
           Atom motion(v12, #q13, #o2, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q7, #t16, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q0, #t13, #q8)
           Atom motion(v14, #q8, #t17, #q0)
           Atom motion(v14, #q0, #t2, v15)
           Atom motion(v14, #q0, #t12, #q7)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q15, #t35, #q2)
           Atom motion(v12, #q2, #t0, v13)
           Atom motion(v12, #q2, #t20, #q13)
           Atom motion(v12, #q2, #t37, #q15)
           Atom motion(v12, #q2, #t4, #q4)
           Atom motion(v12, #q13, #t22, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t24, #q6)
           Atom motion(v12, #q16, #t36, #q2)
           Atom motion(v12, #q6, #t23, #q2)
           Atom motion(v12, #q1, #t5, #q2)
           Atom motion(v12, #q4, #t3, #q2)
           Atom motion(v12, #q2, #t38, #q16)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q10, #t31, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #t33, #q0)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q0, #t34, #q11)
           Atom motion(v14, #q11, #t30, v15)
           Atom motion(v12, #q16, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, #q2, #t19, #q12)
           Atom motion(v12, #q12, #t21, #q2)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q16)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, v15, #t26, #q14)
           Atom motion(v14, #q0, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q3, #t25, #q7)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q3, #t8, #q0)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q0, #t1, #q3)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #t32, #q10)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #t18, #q0)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q8, #t28, #q9)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q0, #t14, #q9)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, #q16)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q16, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q12 v3 v16))
           ((sample_rock v12 #q13 v7 v16))
           ((sample_rock v12 #q15 v4 v16))
           ((sample_rock v12 #q16 v5 v16))
           ((sample_rock v12 #q4 v1 v16))
           ((sample_rock v14 #q10 v1 v16))
           ((sample_rock v14 #q11 v7 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((sample_rock v14 #q7 v3 v16))
           ((sample_rock v14 #q8 v4 v16))
           ((sample_rock v14 #q9 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q16))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q16))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t5 #q2))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q16))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t21 #q2))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q16))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t22 #q2))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q16))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t35 #q2))
           ((move v12 #q16 #o2 #o5))
           ((move v12 #q16 #o2 #q1))
           ((move v12 #q16 #o2 #q12))
           ((move v12 #q16 #o2 #q13))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q4))
           ((move v12 #q16 #o2 #q6))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t36 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #t0 v13))
           ((move v12 #q2 #t19 #q12))
           ((move v12 #q2 #t20 #q13))
           ((move v12 #q2 #t24 #q6))
           ((move v12 #q2 #t37 #q15))
           ((move v12 #q2 #t38 #q16))
           ((move v12 #q2 #t4 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q16))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t3 #q2))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q16))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t15 #q1))
           ((move v12 #q6 #t23 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q6))
           ((move v12 v13 #t9 #q1))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #t1 #q3))
           ((move v14 #q0 #t12 #q7))
           ((move v14 #q0 #t13 #q8))
           ((move v14 #q0 #t14 #q9))
           ((move v14 #q0 #t2 v15))
           ((move v14 #q0 #t34 #q11))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t31 #q11))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #t30 v15))
           ((move v14 #q11 #t33 #q0))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q8))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t25 #q7))
           ((move v14 #q3 #t8 #q0))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t16 #q0))
           ((move v14 #q7 #t29 #q8))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t17 #q0))
           ((move v14 #q8 #t28 #q9))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t18 #q0))
           ((move v14 #q9 #t32 #q10))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t11 #q7))
           ((move v14 v15 #t26 #q14))
           ((move v14 v15 #t39 #q8))
           ((calibrate v12 #q1 #y1 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q14 #y5 v17 v10))
           ((take_image v12 #q1 #y1 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q14 #y5 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), a store (v16), and various rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18). The camera supports the 'v11' mode. The rovers are at initial configurations (v13 for v12 and v15 for v14). Several configurations and motions are defined for both rovers, indicating their movement capabilities and observation points. There are also definitions for image visibility for objectives and communication visibility with the lander. The goal is `new-axiom@0()`, which, as per the axiom definitions, means we need to satisfy several conditions, including that both rovers are at some configuration, both stores are free, two specific images are received, and two specific rock types are analyzed and their analyses received.
           
           Specifically, the goal implies:
           1. `atconf(v12, ?q)` and `atconf(v14, ?q')` are already true from the initial state, where ?q and ?q' are v13 and v15 respectively.
           2. `free(v12, v16)` and `free(v14, v16)` are already true from the initial state.
           3. `receivedimage(v17, v11)` and `receivedimage(v18, v11)`
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`
           
           Let's break down how to achieve these:
           
           *   **`receivedimage(v17, v11)` and `receivedimage(v18, v11)`**:
               To achieve `receivedimage`, we first need to `take_image` and then `send_image`.
               For `v17` (type v2, which is a rock, though the goal just needs the objective):
                   *   Rover `v12` can take an image of `v17` at `#q1` using camera `v10` in mode `v11`. It needs to be calibrated.
                   *   Rover `v14` can take an image of `v17` at `#q14` using camera `v10` in mode `v11`. It needs to be calibrated.
               For `v18` (type v2, which is a rock, though the goal just needs the objective):
                   *   Rover `v12` can take an image of `v18` at `#q6` using camera `v10` in mode `v11`. It needs to be calibrated.
           
               Once images are taken, they need to be sent. Both rovers have communication capabilities to the lander `v9`.
               *   `v12` can send images at `#q2` to `v9`.
               *   `v14` can send images at `#q0` to `v9`.
           
           *   **`type(?stone, v2)` and `receivedanalysis(?stone)`**:
               This means we need to sample a rock of type `v2` and send its analysis. Rocks `v1`, `v3`, and `v4` are of type `v2`. We can choose any of these. Let's pick `v1`.
               *   Rover `v12` is above `v1` at `#q4`.
               *   Rover `v14` is above `v1` at `#q10`.
               *   We can use either rover to `sample_rock`. Let's pick `v12` at `#q4`.
           
           *   **`type(?soil, v6)` and `receivedanalysis(?soil)`**:
               This means we need to sample a rock of type `v6` and send its analysis. Rocks `v5`, `v7`, and `v8` are of type `v6`. We can choose any of these. Let's pick `v8`.
               *   Rover `v12` is above `v8` at `#o5`.
               *   Rover `v14` is above `v8` at `#q9`.
               *   We can use either rover to `sample_rock`. Let's pick `v12` at `#o5`.
           
           Let's prioritize rover `v12` for all tasks to simplify.
           
           **Plan Strategy:**
           
           1.  **Image v17:**
               *   Move `v12` to `#q1`.
               *   Calibrate `v10`.
               *   Take image of `v17`.
           2.  **Image v18:**
               *   Move `v12` to `#q6`.
               *   Calibrate `v10` (if not already calibrated by previous step, but `take_image` uncalibrates).
               *   Take image of `v18`.
           3.  **Send Images:**
               *   Move `v12` to `#q2` (communication location).
               *   Send image of `v17`.
               *   Send image of `v18`.
           4.  **Sample and Analyze v1 (type v2):**
               *   Move `v12` to `#q4` (above `v1`).
               *   Sample `v1`.
               *   Move `v12` back to `#q2` (or any comms point).
               *   Send analysis of `v1`.
           5.  **Sample and Analyze v8 (type v6):**
               *   Move `v12` to `#o5` (above `v8`).
               *   Sample `v8`.
               *   Move `v12` back to `#q2` (or any comms point).
               *   Send analysis of `v8`.
           
           Let's check initial positions and movements:
           *   `v12` is at `v13`.
           *   `v14` is at `v15`.
           
           Let's start with `v12` to handle image and analysis tasks.
           
           **Detailed Steps for v12:**
           
           *   **Image v17:**
               *   `v12` is at `v13`. Need to move to `#q1`. `(move v12 v13 #t9 #q1)`
               *   Calibrate camera: `(calibrate v12 #q1 #y1 v17 v10)`
               *   Take image: `(take_image v12 #q1 #y1 v17 v10 v11)`
           
           *   **Image v18:**
               *   `v12` is at `#q1`. Need to move to `#q6`. `(move v12 #q1 #o2 #q6)`
               *   Calibrate camera: `(calibrate v12 #q6 #y4 v18 v10)`
               *   Take image: `(take_image v12 #q6 #y4 v18 v10 v11)`
           
           *   **Send Images:**
               *   `v12` is at `#q6`. Need to move to `#q2`. `(move v12 #q6 #t23 #q2)`
               *   Send image v17: `(send_image v12 #q2 #y2 v9 v17 v11)`
               *   Send image v18: `(send_image v12 #q2 #y2 v9 v18 v11)`
           
           *   **Sample and Analyze v1 (type v2):**
               *   `v12` is at `#q2`. Need to move to `#q4`. `(move v12 #q2 #t4 #q4)`
               *   Sample rock `v1`: `(sample_rock v12 #q4 v1 v16)`
               *   Move back to `#q2`: `(move v12 #q4 #t3 #q2)`
               *   Send analysis of `v1`: `(send_analysis v12 #q2 #y2 v9 v1)`
           
           *   **Sample and Analyze v8 (type v6):**
               *   `v12` is at `#q2`. Need to move to `#o5`. `(move v12 #q2 #o2 #o5)` (There is `(move v12 #o5 #o2 #q2)` but no direct `(move v12 #q2 #o2 #o5)` - Ah wait, `(move v12 #o5 #o2 #q2)` is available, so if we can get to #o5 from #q2 that should be fine. Or we can just use another rover for analysis.)
               *   Let's check for a path from #q2 to #o5: `(move v12 #q2 #o2 #q1)` then `(move v12 #q1 #o2 #o5)`. This is fine.
               *   Sample rock `v8`: `(sample_rock v12 #o5 v8 v16)`
               *   Move back to `#q2`: `(move v12 #o5 #o2 #q2)`
               *   Send analysis of `v8`: `(send_analysis v12 #q2 #y2 v9 v8)`
           
           This sequence should satisfy all goal conditions.
           
           --Plan--:
           (move v12 v13 #t9 #q1)
           (calibrate v12 #q1 #y1 v17 v10)
           (take_image v12 #q1 #y1 v17 v10 v11)
           (move v12 #q1 #o2 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t23 #q2)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (move v12 #q2 #t4 #q4)
           (sample_rock v12 #q4 v1 v16)
           (move v12 #q4 #t3 #q2)
           (send_analysis v12 #q2 #y2 v9 v1)
           (move v12 #q2 #o2 #q1)
           (move v12 #q1 #o2 #o5)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q2)
           (send_analysis v12 #q2 #y2 v9 v8)

