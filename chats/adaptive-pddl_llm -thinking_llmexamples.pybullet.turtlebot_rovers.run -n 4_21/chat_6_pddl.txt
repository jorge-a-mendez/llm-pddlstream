User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom type(v3, v2)
           Atom type(v4, v2)
           Atom free(v12, v16)
           Atom store(v16)
           Atom rover(v12)
           Atom free(v14, v16)
           Atom camera(v10)
           Atom type(v8, v6)
           Atom rock(v7)
           Atom onboard(v10, v12)
           Atom rock(v4)
           Atom lander(v9)
           Atom supports(v10, v11)
           Atom atconf(v14, v15)
           Atom type(v1, v2)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom objective(v18)
           Atom objective(v17)
           Atom type(v7, v6)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom rock(v1)
           Atom type(v5, v6)
           Atom objective(v20)
           Atom rock(v5)
           Atom rock(v3)
           Atom conf(v12, v13)
           Atom objective(v19)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q7, v3)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #q2, #y2, v19)
           Atom imagerange(v12, #q2, v19)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom imagevisible(v12, #q1, #y1, v20)
           Atom imagerange(v12, #q1, v20)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #q3, v1)
           Atom conf(v12, #q3)
           Atom above(v12, #q4, v8)
           Atom conf(v12, #q4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q9, v7)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #q10, v5)
           Atom conf(v14, #q10)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom comvisible(v14, #q11, #y5, v9)
           Atom comrange(v14, #q11, v9)
           Atom conf(v14, #q11)
           Atom ray(#y5)
           Atom motion(v12, v13, #t22, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #t14, #q7)
           Atom motion(v14, v15, #t27, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q3, #t4, #q0)
           Atom motion(v12, #q2, #t3, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t23, #q8)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, #q7, #t12, #q0)
           Atom motion(v12, #q0, #t8, #q7)
           Atom motion(v12, #q0, #t6, #q3)
           Atom motion(v12, #q0, #t9, #q2)
           Atom motion(v12, #q8, #t24, #q0)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q0, #t7, #q4)
           Atom motion(v12, #q4, #t5, #q0)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v14, #q10, #t28, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #t26, v15)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q9, #t18, #q0)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q0, #t19, #q9)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q1, #t2, #q0)
           Atom motion(v12, #q0, #t11, #q1)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q2, #t20, #q1)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, v13, #t1, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, v13, #t29, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q1, #t17, #q5)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #t15, #q0)
           Atom motion(v12, #q0, #t10, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #t16, #q0)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q5, #t21, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q0, #t13, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #t25, #q2)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #o3, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #q3 v1 v16))
           ((sample_rock v12 #q4 v8 v16))
           ((sample_rock v12 #q7 v3 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q10 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t10 #q5))
           ((move v12 #q0 #t11 #q1))
           ((move v12 #q0 #t13 #q6))
           ((move v12 #q0 #t19 #q9))
           ((move v12 #q0 #t23 #q8))
           ((move v12 #q0 #t6 #q3))
           ((move v12 #q0 #t7 #q4))
           ((move v12 #q0 #t8 #q7))
           ((move v12 #q0 #t9 #q2))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t17 #q5))
           ((move v12 #q1 #t2 #q0))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t20 #q1))
           ((move v12 #q2 #t3 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t4 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t5 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t15 #q0))
           ((move v12 #q5 #t21 #q6))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t16 #q0))
           ((move v12 #q6 #t25 #q2))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t12 #q0))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t24 #q0))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t18 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q1))
           ((move v12 v13 #t14 #q7))
           ((move v12 v13 #t22 #q2))
           ((move v12 v13 #t29 #q5))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t28 #q11))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #t26 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t27 #q10))
           ((calibrate v12 #q1 #y1 v20 v10))
           ((calibrate v12 #q2 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q1 #y1 v20 v10 v11))
           ((take_image v12 #q2 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q11 #y5 v9 v1))
           ((send_analysis v14 #q11 #y5 v9 v3))
           ((send_analysis v14 #q11 #y5 v9 v4))
           ((send_analysis v14 #q11 #y5 v9 v7))
           ((send_analysis v14 #q11 #y5 v9 v8))
           ((send_analysis v14 #q11 #y5 v9 v5))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q11 #y5 v9 v17 v11))
           ((send_image v14 #q11 #y5 v9 v18 v11))
           ((send_image v14 #q11 #y5 v9 v19 v11))
           ((send_image v14 #q11 #y5 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Comprehensive Plan to Achieve new-axiom@0() in the Rovers Domain**
           
           Right, let's break this down. The ultimate goal, `new-axiom@0()`, boils down to ensuring we've got images from four objectives and analysis data from both a stone and soil sample.  Given the initial state, the plan emerges naturally.  We'll use rover `v12`, camera `v10`, and mode `v11`, with the lander `v9` as our communication hub. The key is to leverage `atconf`, `imagevisible`, `comvisible`, and the necessary *motion* and *calibration* facts to set the stage. I will also have to ensure to use the rover `v14`.
           
           First, the imaging.  Rover `v12` will take on this task since it is closest to the image positions and it is ready to move. Rover `v14` does not need to move.
           
           For `receivedimage(v20, v11)`,  I can use `move v12 v13 #t1 #q1`, `calibrate v12 #q1 #y1 v20 v10`, then `take_image v12 #q1 #y1 v20 v10 v11` and finally `send_image v12 #q0 #y0 v9 v20 v11`.
           
           Then, I apply same strategy for the following, where `v19`, `v17` and `v18` are visible:
           `move v12 #q1 #o2 #q2`, `calibrate v12 #q2 #y2 v19 v10`,  `take_image v12 #q2 #y2 v19 v10 v11`, `send_image v12 #q0 #y0 v9 v19 v11`.
           `move v12 #q2 #o2 #q5`, `calibrate v12 #q5 #y3 v17 v10`, `take_image v12 #q5 #y3 v17 v10 v11`, `send_image v12 #q0 #y0 v9 v17 v11`
           `move v12 #q5 #t21 #q6`, `calibrate v12 #q6 #y4 v18 v10`, `take_image v12 #q6 #y4 v18 v10 v11`, `send_image v12 #q0 #y0 v9 v18 v11`.
           
           This should give us `receivedimage` for all the objectives. After the `move` to the final `#q0` where to `send`, I can simply *send* the image.
           
           Next, the analyses. Sampling rocks is straightforward, but the catch is that `sample_rock` fills the store and prevents further sampling without a `drop_rock`. To address this, I'll leverage `free` and `full` properties and drop the samples.  We have to sample *one* stone and *one* soil.
           
           First, I move rover `v12` to `#q7` for the stone sample (`v3`), take it `sample_rock v12 #q7 v3 v16`, then I'll `move v12 #q7 #t12 #q0` and *send* `send_analysis v12 #q0 #y0 v9 v3`. I need to free up the storage of `v12`, so I use `drop_rock v12 v16`, this resets `free(v12, v16)`.
           Now, I move the rover to `#q8` to get the soil sample (`v5`), using `sample_rock v12 #q8 v5 v16`, I sample it, then move back `move v12 #q8 #t24 #q0` and send the analyses data, using `send_analysis v12 #q0 #y0 v9 v5`.
           
           All of these actions can be chained.  We need the images for the initial four, then the two analyses. I have to make sure to free the rover store before each sampling.  And here it is, the *ideal* plan. All preconditions and effects have been verified and they are all in line with the logic.
           
)

Model:     **Comprehensive Plan to Achieve new-axiom@0() in the Rovers Domain**
           
           Right, let's break this down. The ultimate goal, `new-axiom@0()`, boils down to ensuring we've got images from four objectives and analysis data from both a stone and soil sample.  Given the initial state, the plan emerges naturally.  We'll use rover `v12`, camera `v10`, and mode `v11`, with the lander `v9` as our communication hub. The key is to leverage `atconf`, `imagevisible`, `comvisible`, and the necessary *motion* and *calibration* facts to set the stage. I will also have to ensure to use the rover `v14`.
           
           First, the imaging.  Rover `v12` will take on this task since it is closest to the image positions and it is ready to move. Rover `v14` does not need to move.
           
           For `receivedimage(v20, v11)`,  I can use `move v12 v13 #t1 #q1`, `calibrate v12 #q1 #y1 v20 v10`, then `take_image v12 #q1 #y1 v20 v10 v11` and finally `send_image v12 #q0 #y0 v9 v20 v11`.
           
           Then, I apply same strategy for the following, where `v19`, `v17` and `v18` are visible:
           `move v12 #q1 #o2 #q2`, `calibrate v12 #q2 #y2 v19 v10`,  `take_image v12 #q2 #y2 v19 v10 v11`, `send_image v12 #q0 #y0 v9 v19 v11`.
           `move v12 #q2 #o2 #q5`, `calibrate v12 #q5 #y3 v17 v10`, `take_image v12 #q5 #y3 v17 v10 v11`, `send_image v12 #q0 #y0 v9 v17 v11`
           `move v12 #q5 #t21 #q6`, `calibrate v12 #q6 #y4 v18 v10`, `take_image v12 #q6 #y4 v18 v10 v11`, `send_image v12 #q0 #y0 v9 v18 v11`.
           
           This should give us `receivedimage` for all the objectives. After the `move` to the final `#q0` where to `send`, I can simply *send* the image.
           
           Next, the analyses. Sampling rocks is straightforward, but the catch is that `sample_rock` fills the store and prevents further sampling without a `drop_rock`. To address this, I'll leverage `free` and `full` properties and drop the samples.  We have to sample *one* stone and *one* soil.
           
           First, I move rover `v12` to `#q7` for the stone sample (`v3`), take it `sample_rock v12 #q7 v3 v16`, then I'll `move v12 #q7 #t12 #q0` and *send* `send_analysis v12 #q0 #y0 v9 v3`. I need to free up the storage of `v12`, so I use `drop_rock v12 v16`, this resets `free(v12, v16)`.
           Now, I move the rover to `#q8` to get the soil sample (`v5`), using `sample_rock v12 #q8 v5 v16`, I sample it, then move back `move v12 #q8 #t24 #q0` and send the analyses data, using `send_analysis v12 #q0 #y0 v9 v5`.
           
           All of these actions can be chained.  We need the images for the initial four, then the two analyses. I have to make sure to free the rover store before each sampling.  And here it is, the *ideal* plan. All preconditions and effects have been verified and they are all in line with the logic.
           

