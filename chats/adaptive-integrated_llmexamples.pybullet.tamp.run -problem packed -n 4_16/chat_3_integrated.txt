User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p15: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.035, 0.035), (0.105, 0.105)).
           Object p8 is a pose with position (0.07, 0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (-0.07, -0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.105, -0.105), (-0.035, -0.035)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.035, -0.105), (0.105, -0.035)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.105, 0.035), (-0.035, 0.105)).
           Object v9 is a pose with position (0.151, 0.527, 0.781) and quaternion (0.0, 0.0, 0.605, 0.797).
           Object p12 is a pose with position (0.07, 0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v17 is a pose with position (-0.233, -0.07, 0.781) and quaternion (0.0, 0.0, 0.996, 0.093).
           Object v15 is a pose with position (0.237, -0.478, 0.781) and quaternion (0.0, 0.0, 0.896, -0.445).
           Object p13 is a pose with position (-0.07, 0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (0.147, -0.287, 0.781) and quaternion (0.0, 0.0, 0.983, 0.186).
           Object p10 is a pose with position (0.07, -0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p14 is a pose with position (0.07, -0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p15 is a pose with position (-0.07, -0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (-0.07, 0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v12, v10)
           Atom canmove()
           Atom supported(v16, p11, v18)
           Atom supported(v16, v17, v11)
           Atom supported(v12, p9, v18)
           Atom supported(v14, p14, v18)
           Atom pose(v16, v17)
           Atom atpose(v16, v17)
           Atom arm(v6)
           Atom pose(v16, p11)
           Atom graspable(v12)
           Atom atpose(v8, v9)
           Atom aconf(v6, v7)
           Atom stackable(v16, v18)
           Atom handempty(v6)
           Atom kin(v31, v32, p8, v33, v34, v35)
           Atom ataconf(v6, v7)
           Atom supported(v12, p13, v18)
           Atom kin(v31, v38, p15, v33, v34, v35)
           Atom supported(v14, p10, v18)
           Atom supported(v8, v9, v11)
           Atom kin(v31, v36, p13, v33, v34, v35)
           Atom pose(v12, v13)
           Atom bconf(v3)
           Atom atpose(v12, v13)
           Atom kin(v31, v38, p11, v33, v34, v35)
           Atom kin(v31, v37, p14, v33, v34, v35)
           Atom aconf(v4, v5)
           Atom supported(v8, p12, v18)
           Atom stackable(v14, v18)
           Atom stackable(v12, v18)
           Atom supported(v12, v13, v11)
           Atom pose(v16, p15)
           Atom atpose(v14, v15)
           Atom pose(v14, p10)
           Atom supported(v16, p15, v18)
           Atom stackable(v8, v18)
           Atom pose(v14, v15)
           Atom pose(v12, p9)
           Atom pose(v8, p12)
           Atom graspable(v14)
           Atom kin(v31, v36, p9, v33, v34, v35)
           Atom kin(v31, v32, p12, v33, v34, v35)
           Atom arm(v4)
           Atom stackable(v16, v10)
           Atom supported(v8, p8, v18)
           Atom pose(v12, p13)
           Atom pose(v8, p8)
           Atom pose(v14, p14)
           Atom handempty(v4)
           Atom stackable(v14, v10)
           Atom atbconf(v3)
           Atom graspable(v16)
           Atom ataconf(v4, v5)
           Atom kin(v31, v37, p10, v33, v34, v35)
           Atom stackable(v8, v10)
           Atom controllable(v4)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom supported(v14, v15, v11)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom grasp(v8, #g0)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v16, #g2)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #g1)
           Atom grasp(v14, #g3)
           Atom supported(v8, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v14, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q4)
           Atom atraj(#t6)
           Atom kin(v4, v8, p12, #g0, #q4, #t6)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, p8, #g0, #o3, #o4)
           Atom kin(v4, v16, p11, #g2, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t7)
           Atom kin(v4, v16, v17, #g2, #q5, #t7)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v16, p15, #g2, #q2, #t4)
           Atom bconf(#q3)
           Atom atraj(#t5)
           Atom kin(v4, v12, p13, #g1, #q3, #t5)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g1, #q1, #t1)
           Atom kin(v4, v12, p9, #g1, #o3, #o4)
           Atom bconf(#q7)
           Atom atraj(#t9)
           Atom kin(v4, v14, v15, #g3, #q7, #t9)
           Atom kin(v4, v14, p10, #g3, #o3, #o4)
           Atom bconf(#q6)
           Atom atraj(#t8)
           Atom kin(v4, v14, p14, #g3, #q6, #t8)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(v3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q1, #o0, #q3)
           Atom kin(v4, v16, #o2, #g2, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g3, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p13 #g1 #q3 #t5))
           ((place v4 v12 p13 #g1 #q3 #t5))
           ((pick v4 v12 p9 #g1 #o3 #o4))
           ((place v4 v12 p9 #g1 #o3 #o4))
           ((pick v4 v12 v13 #g1 #q1 #t1))
           ((place v4 v12 v13 #g1 #q1 #t1))
           ((pick v4 v14 #o2 #g3 #o3 #o4))
           ((place v4 v14 #o2 #g3 #o3 #o4))
           ((pick v4 v14 p10 #g3 #o3 #o4))
           ((place v4 v14 p10 #g3 #o3 #o4))
           ((pick v4 v14 p14 #g3 #q6 #t8))
           ((place v4 v14 p14 #g3 #q6 #t8))
           ((pick v4 v14 v15 #g3 #q7 #t9))
           ((place v4 v14 v15 #g3 #q7 #t9))
           ((pick v4 v16 #o2 #g2 #o3 #o4))
           ((place v4 v16 #o2 #g2 #o3 #o4))
           ((pick v4 v16 p11 #g2 #o3 #o4))
           ((place v4 v16 p11 #g2 #o3 #o4))
           ((pick v4 v16 p15 #g2 #q2 #t4))
           ((place v4 v16 p15 #g2 #q2 #t4))
           ((pick v4 v16 v17 #g2 #q5 #t7))
           ((place v4 v16 v17 #g2 #q5 #t7))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p12 #g0 #q4 #t6))
           ((place v4 v8 p12 #g0 #q4 #t6))
           ((pick v4 v8 p8 #g0 #o3 #o4))
           ((place v4 v8 p8 #g0 #o3 #o4))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains four objects: v8, v12, v14, and v16. These objects are currently at various poses on different surfaces, primarily v11. The goal is to place all four objects on surface v18. The robot has two arms, v4 and v6, but only v4 is controllable. Both arms are initially handempty.
           
           The current state shows that:
           - v16 is at pose v17 on v11, and also supported by p11 and p15 on v18.
           - v8 is at pose v9 on v11, and also supported by p8 and p12 on v18.
           - v12 is at pose v13 on v11, and also supported by p9 and p13 on v18.
           - v14 is at pose v15 on v11, and also supported by p10 and p14 on v18.
           
           All four objects are currently "on" v11 (or a surface not explicitly stated as v18) because their current `atpose` matches a pose on v11. The goal requires all of them to be "on" v18. This means we need to pick up each object and place it on a pose that is supported by v18.
           
           Since the goal only requires the objects to be on v18, and we have precomputed collision-free poses for each object on v18 (e.g., p8, p9, p10, p11, p12, p13, p14, p15), we should use these. The continuous parameter #o2 is also available as a potential placement on v18, but since there are specific precomputed poses for each object on v18, it is generally better to use those to avoid potential collisions. Since the cost of picking and placing is constant, the plan should involve picking each object from its current location and placing it on an available pose on v18.
           
           Here's the plan:
           1. Pick v8 from its current pose v9. The robot is already at its base configuration v3, and arm v4 is ataconf v5. We can use `kin(v4, v8, v9, #g0, #q0, #t0)`.
           2. Place v8 onto p8 on v18. We can use `kin(v4, v8, p8, #g0, #o3, #o4)`.
           3. Pick v12 from its current pose v13. We need to move the base if #q1 is different from #o3 (current base conf). We can use `kin(v4, v12, v13, #g1, #q1, #t1)`.
           4. Place v12 onto p9 on v18. We can use `kin(v4, v12, p9, #g1, #o3, #o4)`.
           5. Pick v14 from its current pose v15. We need to move the base if #q7 is different from #o3. We can use `kin(v4, v14, v15, #g3, #q7, #t9)`.
           6. Place v14 onto p10 on v18. We can use `kin(v4, v14, p10, #g3, #o3, #o4)`.
           7. Pick v16 from its current pose v17. We need to move the base if #q5 is different from #o3. We can use `kin(v4, v16, v17, #g2, #q5, #t7)`.
           8. Place v16 onto p11 on v18. We can use `kin(v4, v16, p11, #g2, #o3, #o4)`.
           
           We will prioritize using base configuration #o3 for placing when possible, as it is the current base configuration from the first pick. If a pick action requires a different base configuration, we will move to that configuration first, and then move back to #o3 to place on v18 if available, or just use the config the arm is at if that also has a valid placement for the object. The plan should also try to minimize base movements.
           
           All the 'kin' actions for placing on p8, p9, p10, p11 use #o3 as the base configuration. This simplifies the base movements.
           
           Let's check the base configurations required by the pick actions:
           - `pick v4 v8 v9 #g0 #q0 #t0` (requires #q0)
           - `pick v4 v12 v13 #g1 #q1 #t1` (requires #q1)
           - `pick v4 v14 v15 #g3 #q7 #t9` (requires #q7)
           - `pick v4 v16 v17 #g2 #q5 #t7` (requires #q5)
           
           So, we will need to move the base for each pick.
           
           Initial base configuration is v3.
           The initial `atbconf` is v3.
           All placement actions use #o3 as the base config, so we will always move to #o3 before placing.
           
           --Plan--:
           (move_base v3 #q0 #o0)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 p8 #g0 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v12 p9 #g1 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v14 v15 #g3 #q7 #t9)
           (move_base #q7 #o3 #o0)
           (place v4 v14 p10 #g3 #o3 #o4)
           (move_base #o3 #q5 #o0)
           (pick v4 v16 v17 #g2 #q5 #t7)
           (move_base #q5 #o3 #o0)
           (place v4 v16 p11 #g2 #o3 #o4)

User:      The plan you provided contains the following invalid actions: `(move_base v3 #q0 #o0)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p13 #g1 #q3 #t5))
           ((place v4 v12 p13 #g1 #q3 #t5))
           ((pick v4 v12 p9 #g1 #o3 #o4))
           ((place v4 v12 p9 #g1 #o3 #o4))
           ((pick v4 v12 v13 #g1 #q1 #t1))
           ((place v4 v12 v13 #g1 #q1 #t1))
           ((pick v4 v14 #o2 #g3 #o3 #o4))
           ((place v4 v14 #o2 #g3 #o3 #o4))
           ((pick v4 v14 p10 #g3 #o3 #o4))
           ((place v4 v14 p10 #g3 #o3 #o4))
           ((pick v4 v14 p14 #g3 #q6 #t8))
           ((place v4 v14 p14 #g3 #q6 #t8))
           ((pick v4 v14 v15 #g3 #q7 #t9))
           ((place v4 v14 v15 #g3 #q7 #t9))
           ((pick v4 v16 #o2 #g2 #o3 #o4))
           ((place v4 v16 #o2 #g2 #o3 #o4))
           ((pick v4 v16 p11 #g2 #o3 #o4))
           ((place v4 v16 p11 #g2 #o3 #o4))
           ((pick v4 v16 p15 #g2 #q2 #t4))
           ((place v4 v16 p15 #g2 #q2 #t4))
           ((pick v4 v16 v17 #g2 #q5 #t7))
           ((place v4 v16 v17 #g2 #q5 #t7))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p12 #g0 #q4 #t6))
           ((place v4 v8 p12 #g0 #q4 #t6))
           ((pick v4 v8 p8 #g0 #o3 #o4))
           ((place v4 v8 p8 #g0 #o3 #o4))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The previous plan used `(move_base v3 #q0 #o0)`, which is not in the list of valid actions. The valid actions show that when starting from `v3`, the robot can move to `#q0` using trajectory `#t2`, i.e., `(move_base v3 #q0 #t2)`.
           
           Let's adjust the plan to use the correct `move_base` actions, always making sure the starting base configuration matches the `atbconf` state, and the `basemotion` is available.
           
           Revised plan:
           Initial `atbconf` is v3.
           
           1. Pick v8 from v9:
              - Move base from v3 to #q0 using #t2.
              - Pick v8.
              - Move base from #q0 to #o3 using #o0 (basemotion is available for this).
              - Place v8 on p8.
           
           2. Pick v12 from v13:
              - Move base from #o3 to #q1 using #o0 (basemotion for #o3 to #q1 is available).
              - Pick v12.
              - Move base from #q1 to #o3 using #o0.
              - Place v12 on p9.
           
           3. Pick v14 from v15:
              - Move base from #o3 to #q7 using #o0.
              - Pick v14.
              - Move base from #q7 to #o3 using #o0.
              - Place v14 on p10.
           
           4. Pick v16 from v17:
              - Move base from #o3 to #q5 using #o0.
              - Pick v16.
              - Move base from #q5 to #o3 using #o0.
              - Place v16 on p11.
           
           --Plan--:
           (move_base v3 #q0 #t2)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 p8 #g0 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v12 p9 #g1 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v14 v15 #g3 #q7 #t9)
           (move_base #q7 #o3 #o0)
           (place v4 v14 p10 #g3 #o3 #o4)
           (move_base #o3 #q5 #o0)
           (pick v4 v16 v17 #g2 #q5 #t7)
           (move_base #q5 #o3 #o0)
           (place v4 v16 p11 #g2 #o3 #o4)

