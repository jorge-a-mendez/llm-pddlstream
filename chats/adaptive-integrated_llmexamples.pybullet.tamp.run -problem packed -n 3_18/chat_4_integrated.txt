User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p15: object
           p16: object
           p17: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v43: object
           v44: object
           v45: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p17 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p7 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (0.215, -0.389, 0.781) and quaternion (0.0, 0.0, 0.996, 0.091).
           Object p11 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v13 is a pose with position (0.158, 0.241, 0.781) and quaternion (0.0, 0.0, 0.998, -0.06).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p15 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.055, 0.398, 0.781) and quaternion (0.0, 0.0, 0.528, 0.849).
           Object p16 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom arm(v4)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom pose(v14, p17)
           Atom pose(v12, v13)
           Atom supported(v12, p13, v16)
           Atom kin(v27, v32, p10, v29, v30, v31)
           Atom pose(v8, v9)
           Atom pose(v8, p12)
           Atom graspable(v8)
           Atom graspable(v14)
           Atom pose(v12, p7)
           Atom supported(v14, p14, v16)
           Atom aconf(v6, v7)
           Atom atpose(v12, v13)
           Atom supported(v12, p10, v16)
           Atom pose(v14, p14)
           Atom ataconf(v6, v7)
           Atom pose(v14, v15)
           Atom supported(v12, p16, v16)
           Atom pose(v14, p8)
           Atom aconf(v4, v5)
           Atom stackable(v14, v16)
           Atom arm(v6)
           Atom atpose(v8, v9)
           Atom bconf(v3)
           Atom supported(v12, v13, v11)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom supported(v14, p11, v16)
           Atom kin(v27, v33, p14, v45, v30, v31)
           Atom kin(v27, v32, p13, v44, v30, v31)
           Atom stackable(v12, v10)
           Atom pose(v8, p9)
           Atom supported(v14, p17, v16)
           Atom pose(v12, p13)
           Atom pose(v8, p15)
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom handempty(v6)
           Atom atbconf(v3)
           Atom supported(v8, p9, v16)
           Atom supported(v8, p12, v16)
           Atom stackable(v14, v10)
           Atom canmove()
           Atom controllable(v4)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v16)
           Atom kin(v27, v28, p12, v43, v30, v31)
           Atom supported(v8, p15, v16)
           Atom kin(v27, v33, p17, v45, v30, v31)
           Atom handempty(v4)
           Atom supported(v12, p7, v16)
           Atom kin(v27, v28, p15, v43, v30, v31)
           Atom stackable(v8, v10)
           Atom graspable(v12)
           Atom pose(v14, p11)
           Atom pose(v12, p10)
           Atom supported(v8, p6, v16)
           Atom supported(v14, p8, v16)
           Atom kin(v27, v32, p16, v44, v30, v31)
           Atom atpose(v14, v15)
           Atom stackable(v8, v16)
           Atom kin(v27, v28, p9, v29, v30, v31)
           Atom pose(v8, p6)
           Atom pose(v12, p16)
           Atom supported(v8, v9, v11)
           Atom kin(v27, v33, p11, v29, v30, v31)
           Atom supported(v14, v15, v11)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom grasp(v12, #g1)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v12, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom grasp(v14, #g0)
           Atom grasp(v8, #g2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, p13, #g1, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, v13, #g1, #q2, #t2)
           Atom kin(v4, v12, p7, #g1, #o3, #o4)
           Atom bconf(#q8)
           Atom atraj(#t16)
           Atom kin(v4, v12, p16, #g1, #q8, #t16)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, p10, #g1, #q0, #t0)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v14, v15, #g0, #q5, #t5)
           Atom kin(v4, v14, p8, #g0, #o3, #o4)
           Atom kin(v4, v14, p14, #g0, #o3, #o4)
           Atom bconf(#q6)
           Atom atraj(#t12)
           Atom kin(v4, v14, p17, #g0, #q6, #t12)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v14, p11, #g0, #q3, #t3)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v8, v9, #g2, #q4, #t4)
           Atom kin(v4, v8, p6, #g2, #o3, #o4)
           Atom bconf(#q7)
           Atom atraj(#t13)
           Atom kin(v4, v8, p15, #g2, #q7, #t13)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, p9, #g2, #q1, #t1)
           Atom kin(v4, v8, p12, #g2, #o3, #o4)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(v3, #o0, #q6)
           Atom btraj(#t20)
           Atom basemotion(#q6, #t20, #q5)
           Atom btraj(#t14)
           Atom basemotion(#q5, #t14, #q6)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, v3)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q6, #o0, #q8)
           Atom btraj(#t22)
           Atom basemotion(#q8, #t22, #q5)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q7, #o0, #q7)
           Atom btraj(#t15)
           Atom basemotion(#q5, #t15, #q7)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q0, #o0, #q7)
           Atom btraj(#t21)
           Atom basemotion(#q7, #t21, #q5)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q1)
           Atom btraj(#t17)
           Atom basemotion(#q6, #t17, #q2)
           Atom btraj(#t19)
           Atom basemotion(#q8, #t19, #q2)
           Atom btraj(#t23)
           Atom basemotion(#q2, #t23, #q6)
           Atom btraj(#t25)
           Atom basemotion(#q2, #t25, #q8)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q0, #o0, #q2)
           Atom btraj(#t24)
           Atom basemotion(#q2, #t24, #q7)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, #q5)
           Atom btraj(#t18)
           Atom basemotion(#q7, #t18, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q4)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom btraj(#t26)
           Atom basemotion(#q4, #t26, #q6)
           Atom btraj(#t28)
           Atom basemotion(#q4, #t28, #q8)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom btraj(#t27)
           Atom basemotion(#q4, #t27, #q7)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q3, #o0, #q8)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q6)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q3)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q1, #o0, #q3)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q6 #t23))
           ((move_base #q2 #q7 #t24))
           ((move_base #q2 #q8 #t25))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q6 #t26))
           ((move_base #q4 #q7 #t27))
           ((move_base #q4 #q8 #t28))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q6 #t14))
           ((move_base #q5 #q7 #t15))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q2 #t17))
           ((move_base #q6 #q5 #t20))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q2 #t18))
           ((move_base #q7 #q5 #t21))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q2 #t19))
           ((move_base #q8 #q5 #t22))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t10))
           ((move_base v3 #q5 #t11))
           ((move_base v3 #q0 #t6))
           ((move_base v3 #q1 #t7))
           ((move_base v3 #q2 #t8))
           ((move_base v3 #q3 #t9))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p10 #g1 #q0 #t0))
           ((place v4 v12 p10 #g1 #q0 #t0))
           ((pick v4 v12 p13 #g1 #o3 #o4))
           ((place v4 v12 p13 #g1 #o3 #o4))
           ((pick v4 v12 p16 #g1 #q8 #t16))
           ((place v4 v12 p16 #g1 #q8 #t16))
           ((pick v4 v12 p7 #g1 #o3 #o4))
           ((place v4 v12 p7 #g1 #o3 #o4))
           ((pick v4 v12 v13 #g1 #q2 #t2))
           ((place v4 v12 v13 #g1 #q2 #t2))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 p11 #g0 #q3 #t3))
           ((place v4 v14 p11 #g0 #q3 #t3))
           ((pick v4 v14 p14 #g0 #o3 #o4))
           ((place v4 v14 p14 #g0 #o3 #o4))
           ((pick v4 v14 p17 #g0 #q6 #t12))
           ((place v4 v14 p17 #g0 #q6 #t12))
           ((pick v4 v14 p8 #g0 #o3 #o4))
           ((place v4 v14 p8 #g0 #o3 #o4))
           ((pick v4 v14 v15 #g0 #q5 #t5))
           ((place v4 v14 v15 #g0 #q5 #t5))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 p12 #g2 #o3 #o4))
           ((place v4 v8 p12 #g2 #o3 #o4))
           ((pick v4 v8 p15 #g2 #q7 #t13))
           ((place v4 v8 p15 #g2 #q7 #t13))
           ((pick v4 v8 p6 #g2 #o3 #o4))
           ((place v4 v8 p6 #g2 #o3 #o4))
           ((pick v4 v8 p9 #g2 #q1 #t1))
           ((place v4 v8 p9 #g2 #q1 #t1))
           ((pick v4 v8 v9 #g2 #q4 #t4))
           ((place v4 v8 v9 #g2 #q4 #t4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to have objects `v8`, `v12`, and `v14` on `v16`. Currently, `v12` is at `v13` (supported by `v11` and `v16`), `v8` is at `v9` (supported by `v11` and `v16`), and `v14` is at `v15` (supported by `v11` and `v16`). All of them are already on `v16` (since `v11` is a dummy surface and `v16` is the actual surface), thus we only need to place them in positions that satisfy the `atpose` predicate to satisfy the goal `on` predicate through the `supported` predicate. We need to place `v8`, `v12`, and `v14` on `v16`. Specifically, we will use the poses `#o2` for each object, as they are supported by `v16`.
           
           The robot starts with arm `v4` and arm configuration `v5`, and base configuration `v3`. It also has another arm `v6` with arm configuration `v7`. Both arms are handempty.
           
           The plan involves picking up each object from its current location and placing it on `v16` at a new pose `#o2`. The poses chosen for placement are `#o2` for all three objects, which means we must provide separate values for each instance of `#o2`.
           
           The continuous values for `#o2` for `v8`, `v12`, and `v14` will be chosen to be distinct and collision-free on `v16`.
           
           --Plan--:
           (pick v4 v12 v13 #g1 #q2 #t2)
           (place v4 v12 #o2 #g1 #o3 #o4)
           (pick v4 v14 v15 #g0 #q5 #t5)
           (place v4 v14 #o2 #g0 #o3 #o4)
           (pick v4 v8 v9 #g2 #q4 #t4)
           (place v4 v8 #o2 #g2 #o3 #o4)
           
           --Poses--:
           (#o2 v12 v16): (0.1 0.1 0.782 0.0)
           (#o2 v14 v16): (0.0 0.1 0.782 0.0)
           (#o2 v8 v16): (-0.1 0.1 0.782 0.0)

User:      Pose #o2 = (0.1 0.1 0.782 0.0) for object v12 on surface v16 is not stable, as the 2D AABB of the object (AABB(lower=(0.06500000149011612, 0.06500000149011612), upper=(0.13500000149011612, 0.13500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.0 0.1 0.782 0.0) for object v14 on surface v16 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, 0.06500000149011612), upper=(0.035, 0.13500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (-0.1 0.1 0.782 0.0) for object v8 on surface v16 is not stable, as the 2D AABB of the object (AABB(lower=(-0.13500000149011612, 0.06500000149011612), upper=(-0.06500000149011612, 0.13500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The goal is to have objects `v8`, `v12`, and `v14` on `v16`. Currently, `v12` is at `v13` (supported by `v11` and `v16`), `v8` is at `v9` (supported by `v11` and `v16`), and `v14` is at `v15` (supported by `v11` and `v16`). All of them are already on `v16` (since `v11` is a dummy surface and `v16` is the actual surface), thus we only need to place them in positions that satisfy the `atpose` predicate to satisfy the goal `on` predicate through the `supported` predicate. We need to place `v8`, `v12`, and `v14` on `v16`. Specifically, we will use the poses `#o2` for each object, as they are supported by `v16`.
           
           The robot starts with arm `v4` and arm configuration `v5`, and base configuration `v3`. It also has another arm `v6` with arm configuration `v7`. Both arms are handempty.
           
           The plan involves picking up each object from its current location and placing it on `v16` at a new pose `#o2`. The poses chosen for placement are `#o2` for all three objects, which means we must provide separate values for each instance of `#o2`.
           
           The continuous values for `#o2` for `v8`, `v12`, and `v14` will be chosen to be distinct, collision-free, and stable on `v16`. The bounding box of `v16` is `((-0.135, -0.135), (0.135, 0.135))`. The bounding boxes for `v8`, `v12`, and `v14` are `((-0.035, -0.035), (0.035, 0.035))`. Thus, for a stable placement, the center of the object should be within the bounds `(-0.1, 0.1)` for both x and y.
           
           --Plan--:
           (pick v4 v12 v13 #g1 #q2 #t2)
           (place v4 v12 #o2 #g1 #o3 #o4)
           (pick v4 v14 v15 #g0 #q5 #t5)
           (place v4 v14 #o2 #g0 #o3 #o4)
           (pick v4 v8 v9 #g2 #q4 #t4)
           (place v4 v8 #o2 #g2 #o3 #o4)
           
           --Poses--:
           (#o2 v12 v16): (0.0 0.0 0.782 0.0)
           (#o2 v14 v16): (0.05 0.05 0.782 0.0)
           (#o2 v8 v16): (-0.05 -0.05 0.782 0.0)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q2) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal is to have objects `v8`, `v12`, and `v14` on `v16`. Currently, `v12` is at `v13` (supported by `v11` and `v16`), `v8` is at `v9` (supported by `v11` and `v16`), and `v14` is at `v15` (supported by `v11` and `v16`). All of them are already on `v16` (since `v11` is a dummy surface and `v16` is the actual surface), thus we only need to place them in positions that satisfy the `atpose` predicate to satisfy the goal `on` predicate through the `supported` predicate. We need to place `v8`, `v12`, and `v14` on `v16`. Specifically, we will use the poses `#o2` for each object, as they are supported by `v16`.
           
           The robot starts with arm `v4` and arm configuration `v5`, and base configuration `v3`. It also has another arm `v6` with arm configuration `v7`. Both arms are handempty.
           
           The plan involves picking up each object from its current location and placing it on `v16` at a new pose `#o2`. The poses chosen for placement are `#o2` for all three objects, which means we must provide separate values for each instance of `#o2`.
           
           The continuous values for `#o2` for `v8`, `v12`, and `v14` will be chosen to be distinct, collision-free, and stable on `v16`. The bounding box of `v16` is `((-0.135, -0.135), (0.135, 0.135))`. The bounding boxes for `v8`, `v12`, and `v14` are `((-0.035, -0.035), (0.035, 0.035))`. Thus, for a stable placement, the center of the object should be within the bounds `(-0.1, 0.1)` for both x and y.
           
           The previous plan failed because `atbconf(#q2)` was not satisfied for the first pick action. The initial base configuration is `v3`. We need to use `move_base` actions to change the base configuration to the required one before picking an object. For the `place` actions, the base configuration `o3` is used, which must also be achieved.
           
           --Plan--:
           (move_base v3 #q2 #t8)
           (pick v4 v12 v13 #g1 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v12 #o2 #g1 #o3 #o4)
           (move_base #o3 #q5 #o0)
           (pick v4 v14 v15 #g0 #q5 #t5)
           (move_base #q5 #o3 #o0)
           (place v4 v14 #o2 #g0 #o3 #o4)
           (move_base #o3 #q4 #o0)
           (pick v4 v8 v9 #g2 #q4 #t4)
           (move_base #q4 #o3 #o0)
           (place v4 v8 #o2 #g2 #o3 #o4)
           
           --Poses--:
           (#o2 v12 v16): (0.0 0.0 0.782 0.0)
           (#o2 v14 v16): (0.05 0.05 0.782 0.0)
           (#o2 v8 v16): (-0.05 -0.05 0.782 0.0)

