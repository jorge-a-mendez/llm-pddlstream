User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p12: object
           p13: object
           p14: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v40: object
           v41: object
           v42: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.085), (-0.015, -0.015)).
           Object p12 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.012, 0.388, 0.781) and quaternion (0.0, 0.0, 0.937, -0.35).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v15 is a pose with position (0.236, 0.553, 0.781) and quaternion (0.0, 0.0, 0.053, 0.999).
           Object p3 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p6 is a pose with position (0.1, 0.1, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, 0.015), (0.085, 0.085)).
           Object p7 is a pose with position (-0.1, -0.1, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.0, 0.0, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (0.188, 0.202, 0.781) and quaternion (0.0, 0.0, 0.933, -0.361).
           Object p13 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom handempty(v6)
           Atom kin(v27, v33, p5, v29, v30, v31)
           Atom stackable(v14, v16)
           Atom pose(v12, p13)
           Atom pose(v14, p14)
           Atom graspable(v12)
           Atom stackable(v14, v10)
           Atom supported(v14, p14, v16)
           Atom handempty(v4)
           Atom arm(v4)
           Atom kin(v27, v28, p6, v40, v30, v31)
           Atom stackable(v12, v10)
           Atom pose(v12, p4)
           Atom supported(v8, p6, v11)
           Atom pose(v14, v15)
           Atom atpose(v8, v9)
           Atom kin(v27, v33, p8, v42, v30, v31)
           Atom kin(v27, v33, p14, v42, v30, v31)
           Atom atpose(v12, v13)
           Atom pose(v8, p6)
           Atom stackable(v8, v10)
           Atom stackable(v12, v16)
           Atom aconf(v4, v5)
           Atom supported(v12, p13, v16)
           Atom supported(v8, v9, v11)
           Atom supported(v14, p8, v11)
           Atom ataconf(v6, v7)
           Atom pose(v14, p5)
           Atom kin(v27, v28, p12, v40, v30, v31)
           Atom pose(v12, v13)
           Atom ataconf(v4, v5)
           Atom pose(v8, p12)
           Atom kin(v27, v32, p13, v41, v30, v31)
           Atom supported(v14, p5, v16)
           Atom supported(v14, v15, v11)
           Atom pose(v14, p8)
           Atom pose(v8, v9)
           Atom supported(v8, p3, v16)
           Atom supported(v8, p12, v16)
           Atom graspable(v8)
           Atom arm(v6)
           Atom kin(v27, v32, p4, v29, v30, v31)
           Atom graspable(v14)
           Atom aconf(v6, v7)
           Atom pose(v8, p3)
           Atom supported(v12, p7, v11)
           Atom controllable(v4)
           Atom bconf(v3)
           Atom kin(v27, v32, p7, v41, v30, v31)
           Atom canmove()
           Atom supported(v12, p4, v16)
           Atom kin(v27, v28, p3, v29, v30, v31)
           Atom pose(v12, p7)
           Atom atpose(v14, v15)
           Atom atbconf(v3)
           Atom stackable(v8, v16)
           Atom supported(v12, v13, v11)
           Atom grasp(v12, #g1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v14, #g0)
           Atom grasp(v8, #g2)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v16)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom supported(v14, #o2, v10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, p7, #g1, #o3, #o4)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v12, v13, #g1, #q1, #t2)
           Atom bconf(#q3)
           Atom atraj(#t4)
           Atom kin(v4, v12, p4, #g1, #q3, #t4)
           Atom bconf(#q7)
           Atom atraj(#t8)
           Atom kin(v4, v12, p13, #g1, #q7, #t8)
           Atom kin(v4, v8, p6, #g2, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t5)
           Atom kin(v4, v8, v9, #g2, #q4, #t5)
           Atom bconf(#q5)
           Atom atraj(#t6)
           Atom kin(v4, v8, p3, #g2, #q5, #t6)
           Atom bconf(#q8)
           Atom atraj(#t16)
           Atom kin(v4, v8, p12, #g2, #q8, #t16)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, p5, #g0, #q0, #t0)
           Atom kin(v4, v14, p8, #g0, #o3, #o4)
           Atom bconf(#q6)
           Atom atraj(#t7)
           Atom kin(v4, v14, p14, #g0, #q6, #t7)
           Atom bconf(#q2)
           Atom atraj(#t3)
           Atom kin(v4, v14, v15, #g0, #q2, #t3)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(v3, #o0, #q2)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t26)
           Atom basemotion(#q4, #t26, #q5)
           Atom basemotion(#q4, #o0, #q2)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(v3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q4, #o0, #q1)
           Atom btraj(#t25)
           Atom basemotion(#q5, #t25, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q1)
           Atom btraj(#t27)
           Atom basemotion(#q3, #t27, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom btraj(#t23)
           Atom basemotion(#q1, #t23, #q3)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q5)
           Atom btraj(#t11)
           Atom basemotion(#q7, #t11, #q2)
           Atom btraj(#t13)
           Atom basemotion(#q2, #t13, #q7)
           Atom btraj(#t21)
           Atom basemotion(#q1, #t21, #q7)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q3)
           Atom btraj(#t15)
           Atom basemotion(#q7, #t15, #q1)
           Atom btraj(#t18)
           Atom basemotion(#q4, #t18, #q7)
           Atom basemotion(#q3, #o0, #q6)
           Atom btraj(#t14)
           Atom basemotion(#q6, #t14, #q1)
           Atom basemotion(#q7, #o0, #q6)
           Atom btraj(#t20)
           Atom basemotion(#q1, #t20, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom btraj(#t12)
           Atom basemotion(#q2, #t12, #q6)
           Atom basemotion(#q6, #o0, #q5)
           Atom btraj(#t17)
           Atom basemotion(#q4, #t17, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q6, #o0, #q3)
           Atom btraj(#t10)
           Atom basemotion(#q6, #t10, #q2)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q8, #o0, #q6)
           Atom btraj(#t19)
           Atom basemotion(#q4, #t19, #q8)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q3, #o0, #q8)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q8, #o0, #q4)
           Atom btraj(#t22)
           Atom basemotion(#q1, #t22, #q8)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t24)
           Atom basemotion(#q2, #t24, #q0)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q3, #o0, #q0)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q6 #t20))
           ((move_base #q1 #q7 #t21))
           ((move_base #q1 #q8 #t22))
           ((move_base #q1 #q3 #t23))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q6 #t12))
           ((move_base #q2 #q7 #t13))
           ((move_base #q2 #q0 #t24))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q2 #t27))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q6 #t17))
           ((move_base #q4 #q7 #t18))
           ((move_base #q4 #q8 #t19))
           ((move_base #q4 #q5 #t26))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q1 #t25))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q2 #t10))
           ((move_base #q6 #q1 #t14))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q2 #t11))
           ((move_base #q7 #q1 #t15))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((move_base v3 #q4 #t9))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p13 #g1 #q7 #t8))
           ((place v4 v12 p13 #g1 #q7 #t8))
           ((pick v4 v12 p4 #g1 #q3 #t4))
           ((place v4 v12 p4 #g1 #q3 #t4))
           ((pick v4 v12 p7 #g1 #o3 #o4))
           ((place v4 v12 p7 #g1 #o3 #o4))
           ((pick v4 v12 v13 #g1 #q1 #t2))
           ((place v4 v12 v13 #g1 #q1 #t2))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 p14 #g0 #q6 #t7))
           ((place v4 v14 p14 #g0 #q6 #t7))
           ((pick v4 v14 p5 #g0 #q0 #t0))
           ((place v4 v14 p5 #g0 #q0 #t0))
           ((pick v4 v14 p8 #g0 #o3 #o4))
           ((place v4 v14 p8 #g0 #o3 #o4))
           ((pick v4 v14 v15 #g0 #q2 #t3))
           ((place v4 v14 v15 #g0 #q2 #t3))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 p12 #g2 #q8 #t16))
           ((place v4 v8 p12 #g2 #q8 #t16))
           ((pick v4 v8 p3 #g2 #q5 #t6))
           ((place v4 v8 p3 #g2 #q5 #t6))
           ((pick v4 v8 p6 #g2 #o3 #o4))
           ((place v4 v8 p6 #g2 #o3 #o4))
           ((pick v4 v8 v9 #g2 #q4 #t5))
           ((place v4 v8 v9 #g2 #q4 #t5))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene consists of three objects: `v12`, `v14`, and `v8`.
           `v12` is currently at pose `v13`. It is supported by `v11` at `v13` and also `p7`. It can be placed at `p13` or `p4` (both on `v16`), or `v13` (on `v11`).
           `v14` is currently at pose `v15`. It is supported by `v11` at `v15` and `p8`. It can be placed at `p14` or `p5` (both on `v16`), or `v15` (on `v11`).
           `v8` is currently at pose `v9`. It is supported by `v11` at `v9` and `p6`. It can be placed at `p12` or `p3` (both on `v16`), or `v9` (on `v11`).
           
           The goal is to place all three objects on `v16`. Since `v12` is already at `v13` (which is supported by `v11`) and `v14` is at `v15` (supported by `v11`), and `v8` is at `v9` (supported by `v11`), they need to be moved to `v16`. There are available poses for each object on `v16`.
           
           The plan will involve picking up each object and placing it on `v16` at one of its designated poses. I'll prioritize picking the object that needs the least base movement from the current base configuration `v3`.
           
           The initial robot base configuration is `v3`.
           - To pick `v12` from `v13`, the base needs to be at `q1`.
           - To pick `v14` from `v15`, the base needs to be at `q2`.
           - To pick `v8` from `v9`, the base needs to be at `q4`.
           
           Let's check the distances from `v3`:
           - `distance(v3, q1)`: The path `v3 -> q1` is directly available.
           - `distance(v3, q2)`: The path `v3 -> q2` is directly available.
           - `distance(v3, q4)`: The path `v3 -> q4` is available through `t9`.
           
           Let's pick up `v12` first.
           1. Move the base to `q1` to pick up `v12` from `v13`.
           2. Pick `v12` from `v13`.
           3. Place `v12` on `v16` at `p4` (arbitrary choice, `p13` is also available). The kin for placing `v12` at `p4` requires the base to be at `q3`.
           4. Move the base to `q3` to place `v12` at `p4`.
           5. Place `v12` at `p4`.
           
           Next, pick `v14`. It is at `v15`.
           1. Move the base from `q3` to `q2` to pick `v14` from `v15`.
           2. Pick `v14` from `v15`.
           3. Place `v14` on `v16` at `p5`. The kin for placing `v14` at `p5` requires the base to be at `q0`.
           4. Move the base to `q0` to place `v14` at `p5`.
           5. Place `v14` at `p5`.
           
           Finally, pick `v8`. It is at `v9`.
           1. Move the base from `q0` to `q4` to pick `v8` from `v9`.
           2. Pick `v8` from `v9`.
           3. Place `v8` on `v16` at `p3`. The kin for placing `v8` at `p3` requires the base to be at `q5`.
           4. Move the base to `q5` to place `v8` at `p3`.
           5. Place `v8` at `p3`.
           
           --Plan--:
           (move_base v3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t2)
           (move_base #q1 #q3 #t23)
           (place v4 v12 p4 #g1 #q3 #t4)
           (move_base #q3 #q2 #t27)
           (pick v4 v14 v15 #g0 #q2 #t3)
           (move_base #q2 #q0 #t24)
           (place v4 v14 p5 #g0 #q0 #t0)
           (move_base #q0 #q4 #o0)
           (pick v4 v8 v9 #g2 #q4 #t5)
           (move_base #q4 #q5 #t26)
           (place v4 v8 p3 #g2 #q5 #t6)

