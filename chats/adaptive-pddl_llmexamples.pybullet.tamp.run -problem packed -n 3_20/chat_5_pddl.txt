User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v12, v13)
           Atom canmove()
           Atom handempty(v6)
           Atom graspable(v8)
           Atom controllable(v4)
           Atom ataconf(v6, v7)
           Atom graspable(v12)
           Atom stackable(v8, v10)
           Atom arm(v4)
           Atom aconf(v6, v7)
           Atom bconf(v3)
           Atom stackable(v14, v16)
           Atom supported(v8, v9, v11)
           Atom atpose(v12, v13)
           Atom ataconf(v4, v5)
           Atom atbconf(v3)
           Atom stackable(v14, v10)
           Atom graspable(v14)
           Atom atpose(v8, v9)
           Atom pose(v14, v15)
           Atom pose(v8, v9)
           Atom stackable(v8, v16)
           Atom atpose(v14, v15)
           Atom handempty(v4)
           Atom supported(v14, v15, v11)
           Atom supported(v12, v13, v11)
           Atom aconf(v4, v5)
           Atom stackable(v12, v10)
           Atom stackable(v12, v16)
           Atom arm(v6)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v16)
           Atom pose(v14, #p1)
           Atom supported(v14, #p1, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #p2)
           Atom supported(v8, #p2, v16)
           Atom grasp(v8, #g2)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v14, #g1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v12, #g0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, #p1, #g1, #q1, #t1)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, v15, #g1, #q2, #t2)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v8, #p2, #g2, #q3, #t3)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v8, v9, #g2, #q4, #t4)
           Atom bconf(#q5)
           Atom atraj(#t10)
           Atom kin(v4, v12, v13, #g0, #q5, #t10)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, #p0, #g0, #q0, #t0)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q2)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom btraj(#t17)
           Atom basemotion(v3, #t17, #q5)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q2, #o0, #q4)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q4)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q1)
           Atom btraj(#t16)
           Atom basemotion(#q1, #t16, #q4)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom btraj(#t12)
           Atom basemotion(#q2, #t12, #q1)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom btraj(#t11)
           Atom basemotion(#q0, #t11, #q2)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q4, #o0, #q0)
           Atom btraj(#t15)
           Atom basemotion(#q5, #t15, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom btraj(#t14)
           Atom basemotion(#q3, #t14, #q5)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom btraj(#t13)
           Atom basemotion(#q4, #t13, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q4, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q2 #t11))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q4 #t16))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q1 #t12))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q5 #t14))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q3 #t13))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q0 #t15))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q5 #t17))
           ((move_base v3 #q0 #t5))
           ((move_base v3 #q1 #t6))
           ((move_base v3 #q2 #t7))
           ((move_base v3 #q3 #t8))
           ((move_base v3 #q4 #t9))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q0 #t0))
           ((place v4 v12 #p0 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q5 #t10))
           ((place v4 v12 v13 #g0 #q5 #t10))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 #p1 #g1 #q1 #t1))
           ((place v4 v14 #p1 #g1 #q1 #t1))
           ((pick v4 v14 v15 #g1 #q2 #t2))
           ((place v4 v14 v15 #g1 #q2 #t2))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p2 #g2 #q3 #t3))
           ((place v4 v8 #p2 #g2 #q3 #t3))
           ((pick v4 v8 v9 #g2 #q4 #t4))
           ((place v4 v8 v9 #g2 #q4 #t4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms (`v4`, `v6`) and several objects: `v8`, `v12`, and `v14`. These objects are `graspable` and `stackable`. There are also several poses (`v9`, `v13`, `v15`, `#o2`, `#p0`, `#p1`, `#p2`) and grasps (`#g0`, `#g1`, `#g2`). The initial state shows that `v8` is at `v9`, `v12` is at `v13`, and `v14` is at `v15`. All of these objects are supported by `v11`. The robot's arm `v4` is `handempty` and at configuration `v5`, and its base is at `v3`.
           
           The goal is to have `v8`, `v12`, and `v14` all on `v16`. Currently, they are on `v11`. The relevant predicates for the goal are `on(?o, ?r)`, which is derived from `supported(?o, ?p, ?r)` and `atpose(?o, ?p)`. This means we need to place each object at a pose that is supported by `v16`. The available poses supported by `v16` are `#p0` (for `v12`), `#p1` (for `v14`), and `#p2` (for `v8`).
           
           The plan will involve picking up each object from its current location and placing it onto one of the poses supported by `v16`. Since `v4` is the arm available for picking and placing (based on the `kin` and `pick/place` action instances), we will use `v4`. We also need to consider base movements to ensure the arm can reach the pick and place locations.
           
           Here's a breakdown of the steps:
           1. Move the base to a configuration where `v4` can pick up `v8`.
           2. Pick up `v8`.
           3. Move the base to a configuration where `v4` can place `v8` onto `v16` (at `#p2`).
           4. Place `v8`.
           5. Move the base to a configuration where `v4` can pick up `v12`.
           6. Pick up `v12`.
           7. Move the base to a configuration where `v4` can place `v12` onto `v16` (at `#p0`).
           8. Place `v12`.
           9. Move the base to a configuration where `v4` can pick up `v14`.
           10. Pick up `v14`.
           11. Move the base to a configuration where `v4` can place `v14` onto `v16` (at `#p1`).
           12. Place `v14`.
           
           Looking at the `kin` predicates, we have:
           - `kin(v4, v8, v9, #g2, #q4, #t4)` for picking `v8` from `v9`
           - `kin(v4, v8, #p2, #g2, #q3, #t3)` for placing `v8` at `#p2`
           - `kin(v4, v12, v13, #g0, #q5, #t10)` for picking `v12` from `v13`
           - `kin(v4, v12, #p0, #g0, #q0, #t0)` for placing `v12` at `#p0`
           - `kin(v4, v14, v15, #g1, #q2, #t2)` for picking `v14` from `v15`
           - `kin(v4, v14, #p1, #g1, #q1, #t1)` for placing `v14` at `#p1`
           
           The initial base configuration is `v3`. We'll need to use `move_base` actions to get to the required base configurations (`#q4`, `#q3`, `#q5`, `#q0`, `#q2`, `#q1`).
           
           --Plan--:
           (move_base v3 #q4 #t9)
           (pick v4 v8 v9 #g2 #q4 #t4)
           (move_base #q4 #q3 #t13)
           (place v4 v8 #p2 #g2 #q3 #t3)
           (move_base #q3 #q5 #t14)
           (pick v4 v12 v13 #g0 #q5 #t10)
           (move_base #q5 #q0 #t15)
           (place v4 v12 #p0 #g0 #q0 #t0)
           (move_base #q0 #q2 #t11)
           (pick v4 v14 v15 #g1 #q2 #t2)
           (move_base #q2 #q1 #t12)
           (place v4 v14 #p1 #g1 #q1 #t1)

