User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v4)
           Atom rover(v12)
           Atom rover(v14)
           Atom objective(v19)
           Atom atconf(v14, v15)
           Atom rock(v7)
           Atom store(v16)
           Atom type(v3, v2)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom supports(v10, v11)
           Atom conf(v14, v15)
           Atom free(v12, v16)
           Atom type(v5, v6)
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom rock(v3)
           Atom conf(v12, v13)
           Atom onboard(v10, v14)
           Atom onboard(v10, v12)
           Atom objective(v17)
           Atom rock(v5)
           Atom lander(v9)
           Atom rock(v1)
           Atom type(v8, v6)
           Atom type(v4, v2)
           Atom type(v1, v2)
           Atom camera(v10)
           Atom above(v12, #q4, v7)
           Atom conf(v12, #q4)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom above(v12, #q3, v1)
           Atom conf(v12, #q3)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q7, #y5, v17)
           Atom imagerange(v12, #q7, v17)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q9, #y7, v19)
           Atom imagerange(v12, #q9, v19)
           Atom conf(v12, #q9)
           Atom ray(#y7)
           Atom imagevisible(v12, #q8, #y6, v18)
           Atom imagerange(v12, #q8, v18)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v3)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v5)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q5, #y3, v19)
           Atom imagerange(v14, #q5, v19)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v8)
           Atom motion(v12, v13, #t10, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #t12, #q7)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t7, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, v15, #t8, #q5)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #t14, #q2)
           Atom motion(v12, #q4, #t4, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #t2, #q4)
           Atom motion(v12, #q2, #t5, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #t3, #q2)
           Atom motion(v12, #q2, #t1, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q4, #t11, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, v13, #t9, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q9, #t16, #q2)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q1, #t6, v15)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, v13, #t13, #q8)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q8, #t15, #q2)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q3 v1 v16))
           ((sample_rock v12 #q4 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #t1 #q3))
           ((move v12 #q2 #t2 #q4))
           ((move v12 #q2 #t5 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t3 #q2))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t11 #q3))
           ((move v12 #q4 #t4 #q2))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t14 #q2))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t15 #q2))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t16 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q4))
           ((move v12 v13 #t12 #q7))
           ((move v12 v13 #t13 #q8))
           ((move v12 v13 #t9 #q3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #t6 v15))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t7 #q0))
           ((move v14 v15 #t8 #q5))
           ((calibrate v12 #q7 #y5 v17 v10))
           ((calibrate v12 #q8 #y6 v18 v10))
           ((calibrate v12 #q9 #y7 v19 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q5 #y3 v19 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #q7 #y5 v17 v10 v11))
           ((take_image v12 #q8 #y6 v18 v10 v11))
           ((take_image v12 #q9 #y7 v19 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q5 #y3 v19 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Finalized Plan for new-axiom@0()**
           
           Alright, here's the game plan, based on my analysis of the problem. We need to satisfy the conditions laid out in `new-axiom@0()` which boils down to:
           
           1.  Get images of objectives `v17`, `v18`, and `v19`.
           2.  Analyze one stone and one soil sample.
           3.  Ensure rovers `v12` and `v14` end in their required configurations and with their stores free.
           
           `v14` is stationary, so that's easy. `v12` is the workhorse. Since communication will happen near `#q2`, and we'll be calibrating and taking images at various locations, I'll use rover `v12` for everything.
           
           **Action Sequence:**
           
           1.  **Image v17:**
               *   Move `v12` from its current configuration `v13` to `#q7`.
               *   Calibrate camera `v10` at `#q7` for objective `v17`.
               *   Take an image of `v17`.
               *   Move `v12` from `#q7` to `#q2`.
               *   Send the image of `v17` to the lander `v9`.
           
           2.  **Image v18:**
               *   Move `v12` from `#q2` to `#q8`.
               *   Calibrate camera `v10` at `#q8` for objective `v18`.
               *   Take an image of `v18`.
               *   Move `v12` from `#q8` to `#q2`.
               *   Send the image of `v18` to the lander `v9`.
           
           3.  **Image v19:**
               *   Move `v12` from `#q2` to `#q9`.
               *   Calibrate camera `v10` at `#q9` for objective `v19`.
               *   Take an image of `v19`.
               *   Move `v12` from `#q9` to `#q2`.
               *   Send the image of `v19` to the lander `v9`.
           
           Now the images are done, let's get those analyses.
           
           4.  **Stone Analysis (v1):**
               *   Move `v12` from `#q2` to `#q3` (above rock `v1`).
               *   Sample rock `v1` (stone) with `v12`.
               *   Move `v12` from `#q3` back to `#q2`.
               *   Send the analysis of rock `v1` to the lander.
               *   Drop the rock sample from `v12's` store to free up the store.
           
           5.  **Soil Analysis (v7):**
               *   Move `v12` from `#q2` to `#q4` (above soil sample `v7`).
               *   Sample soil `v7` with `v12`.
               *   Move `v12` from `#q4` back to `#q2`.
               *   Send the analysis of soil `v7` to the lander.
               *   Drop the soil sample from `v12's` store to free up the store.
           
           With all images received, analyses sent, and rover stores emptied, we just need to return `v12` to its initial configuration `v13`.
           
           6.  **Final Move:**
               *   Move `v12` from `#q2` to `v13`.
           
           **That's the plan. Everything checks out.** We've met all the image requirements, secured the necessary analyses, and kept the rovers within the required constraints. The axioms should be satisfied, and `new-axiom@0()` will be achieved!
           
)

Model:     **Finalized Plan for new-axiom@0()**
           
           Alright, here's the game plan, based on my analysis of the problem. We need to satisfy the conditions laid out in `new-axiom@0()` which boils down to:
           
           1.  Get images of objectives `v17`, `v18`, and `v19`.
           2.  Analyze one stone and one soil sample.
           3.  Ensure rovers `v12` and `v14` end in their required configurations and with their stores free.
           
           `v14` is stationary, so that's easy. `v12` is the workhorse. Since communication will happen near `#q2`, and we'll be calibrating and taking images at various locations, I'll use rover `v12` for everything.
           
           **Action Sequence:**
           
           1.  **Image v17:**
               *   Move `v12` from its current configuration `v13` to `#q7`.
               *   Calibrate camera `v10` at `#q7` for objective `v17`.
               *   Take an image of `v17`.
               *   Move `v12` from `#q7` to `#q2`.
               *   Send the image of `v17` to the lander `v9`.
           
           2.  **Image v18:**
               *   Move `v12` from `#q2` to `#q8`.
               *   Calibrate camera `v10` at `#q8` for objective `v18`.
               *   Take an image of `v18`.
               *   Move `v12` from `#q8` to `#q2`.
               *   Send the image of `v18` to the lander `v9`.
           
           3.  **Image v19:**
               *   Move `v12` from `#q2` to `#q9`.
               *   Calibrate camera `v10` at `#q9` for objective `v19`.
               *   Take an image of `v19`.
               *   Move `v12` from `#q9` to `#q2`.
               *   Send the image of `v19` to the lander `v9`.
           
           Now the images are done, let's get those analyses.
           
           4.  **Stone Analysis (v1):**
               *   Move `v12` from `#q2` to `#q3` (above rock `v1`).
               *   Sample rock `v1` (stone) with `v12`.
               *   Move `v12` from `#q3` back to `#q2`.
               *   Send the analysis of rock `v1` to the lander.
               *   Drop the rock sample from `v12's` store to free up the store.
           
           5.  **Soil Analysis (v7):**
               *   Move `v12` from `#q2` to `#q4` (above soil sample `v7`).
               *   Sample soil `v7` with `v12`.
               *   Move `v12` from `#q4` back to `#q2`.
               *   Send the analysis of soil `v7` to the lander.
               *   Drop the soil sample from `v12's` store to free up the store.
           
           With all images received, analyses sent, and rover stores emptied, we just need to return `v12` to its initial configuration `v13`.
           
           6.  **Final Move:**
               *   Move `v12` from `#q2` to `v13`.
           
           **That's the plan. Everything checks out.** We've met all the image requirements, secured the necessary analyses, and kept the rovers within the required constraints. The axioms should be satisfied, and `new-axiom@0()` will be achieved!
           

