User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.127, -0.53), (0.224, -0.433)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.289, -0.05), (-0.194, 0.045)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.188, -0.253), (0.275, -0.166)).
           Object v9 is a pose with position (0.176, -0.482, 0.781) and quaternion (0.0, 0.0, 0.881, -0.474).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.243, -0.438), (-0.145, -0.34)).
           Object v17 is a pose with position (-0.242, -0.003, 0.781) and quaternion (0.0, 0.0, 0.51, 0.86).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v15 is a pose with position (0.232, -0.21, 0.781) and quaternion (0.0, 0.0, 0.802, 0.597).
           Object v13 is a pose with position (-0.194, -0.389, 0.781) and quaternion (0.0, 0.0, 0.949, 0.314).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v14, v15)
           Atom stackable(v14, v18)
           Atom aconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom graspable(v14)
           Atom stackable(v16, v10)
           Atom pose(v14, v15)
           Atom bconf(v3)
           Atom supported(v12, v13, v11)
           Atom stackable(v12, v18)
           Atom stackable(v8, v10)
           Atom graspable(v8)
           Atom atpose(v8, v9)
           Atom atpose(v16, v17)
           Atom pose(v16, v17)
           Atom handempty(v6)
           Atom supported(v8, v9, v11)
           Atom arm(v6)
           Atom graspable(v16)
           Atom pose(v8, v9)
           Atom stackable(v16, v18)
           Atom atpose(v12, v13)
           Atom graspable(v12)
           Atom atbconf(v3)
           Atom stackable(v14, v10)
           Atom arm(v4)
           Atom ataconf(v4, v5)
           Atom stackable(v8, v18)
           Atom supported(v14, v15, v11)
           Atom pose(v12, v13)
           Atom canmove()
           Atom handempty(v4)
           Atom supported(v16, v17, v11)
           Atom stackable(v12, v10)
           Atom controllable(v4)
           Atom aconf(v6, v7)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v18)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom supported(v14, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #o1)
           Atom grasp(v8, #o1)
           Atom grasp(v12, #o1)
           Atom supported(v8, #o2, v10)
           Atom supported(v16, #o2, v18)
           Atom supported(v12, #o2, v18)
           Atom grasp(v16, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Unreachable Goal Due to Action Restrictions**
           
           My objective is to move four objects (v8, v12, v14, v16) onto a target surface (v18).  Currently, all four objects are on v11 at specific poses.  My plan would typically involve picking up each object from v11 using my arm (v4) and placing it onto v18 at distinct poses to avoid collisions.  I would repeat this process for each object.
           
           The problem, however, is that I'm severely constrained in what actions I can perform. The problem description explicitly states that only a single action instance, `(move_base v3 v3 #o0)`, is valid for use in the plan. This severely limits my ability to manipulate any object.
           
           Even though I have information about object poses, target surfaces, and continuous parameters for possible poses on v18 (represented by #o2), I lack the crucial "pick" and "place" actions. With only `move_base v3 v3 #o0`, which essentially does nothing useful in this scenario, it is impossible for me to physically move any object. Therefore, the goal of placing all the objects onto v18 is unreachable given the strict action restrictions.
           
)

Model:     **Unreachable Goal Due to Action Restrictions**
           
           My objective is to move four objects (v8, v12, v14, v16) onto a target surface (v18).  Currently, all four objects are on v11 at specific poses.  My plan would typically involve picking up each object from v11 using my arm (v4) and placing it onto v18 at distinct poses to avoid collisions.  I would repeat this process for each object.
           
           The problem, however, is that I'm severely constrained in what actions I can perform. The problem description explicitly states that only a single action instance, `(move_base v3 v3 #o0)`, is valid for use in the plan. This severely limits my ability to manipulate any object.
           
           Even though I have information about object poses, target surfaces, and continuous parameters for possible poses on v18 (represented by #o2), I lack the crucial "pick" and "place" actions. With only `move_base v3 v3 #o0`, which essentially does nothing useful in this scenario, it is impossible for me to physically move any object. Therefore, the goal of placing all the objects onto v18 is unreachable given the strict action restrictions.
           

