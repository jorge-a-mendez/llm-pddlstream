User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.117, 0.398), (-0.018, 0.497)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.299, 0.506), (-0.212, 0.594)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.054, -0.417), (0.025, -0.338)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.148, 0.291), (0.239, 0.381)).
           Object v9 is a pose with position (-0.067, 0.448, 0.781) and quaternion (0.0, 0.0, 0.908, -0.42).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.2, -0.453), (0.278, -0.375)).
           Object v19 is a pose with position (-0.256, 0.55, 0.781) and quaternion (0.0, 0.0, -0.804, 0.595).
           Object v17 is a pose with position (-0.014, -0.377, 0.781) and quaternion (0.0, 0.0, 0.997, 0.072).
           Object v15 is a pose with position (0.193, 0.336, 0.781) and quaternion (0.0, 0.0, 0.183, 0.983).
           Object v13 is a pose with position (0.239, -0.414, 0.781) and quaternion (0.0, 0.0, 0.06, 0.998).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v14, v20)
           Atom atbconf(v3)
           Atom supported(v16, v17, v11)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v12, v20)
           Atom graspable(v14)
           Atom handempty(v6)
           Atom stackable(v18, v20)
           Atom handempty(v4)
           Atom atpose(v18, v19)
           Atom pose(v18, v19)
           Atom pose(v16, v17)
           Atom ataconf(v6, v7)
           Atom supported(v8, v9, v11)
           Atom pose(v12, v13)
           Atom atpose(v16, v17)
           Atom ataconf(v4, v5)
           Atom graspable(v12)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom arm(v6)
           Atom supported(v18, v19, v11)
           Atom controllable(v4)
           Atom stackable(v16, v20)
           Atom stackable(v8, v10)
           Atom supported(v12, v13, v11)
           Atom canmove()
           Atom arm(v4)
           Atom stackable(v14, v10)
           Atom aconf(v4, v5)
           Atom aconf(v6, v7)
           Atom stackable(v18, v10)
           Atom graspable(v8)
           Atom graspable(v18)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v8, v20)
           Atom stackable(v16, v10)
           Atom supported(v14, v15, v11)
           Atom graspable(v16)
           Atom bconf(v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom supported(v8, #o2, v20)
           Atom supported(v16, #o2, v20)
           Atom grasp(v18, #o1)
           Atom grasp(v8, #o1)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom supported(v14, #o2, v20)
           Atom supported(v12, #o2, v10)
           Atom supported(v18, #o2, v20)
           Atom grasp(v12, #o1)
           Atom grasp(v14, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v18, #o2, #o1, #o3, #o4)
           Atom kin(v4, v18, v19, #o1, #o3, #o4)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place all objects (v8, v12, v14, v16, v18) on object v20. Currently, all these objects are on v11, except for v14 which is also on v11. The robot has two arms, v4 and v6, but only v4 is controllable. All the objects are graspable.
           
           The available actions only include a `move_base` action that moves the robot from `v3` to `v3` using `traj #o0`. This means the robot cannot move. No pick or place actions are given in the allowed action instances, which means the goal cannot be achieved.
           
           The problem states that any action instance not in the given list is not allowed to be used. Since there are no pick or place actions in the provided list, and the goal requires moving objects, the goal is unreachable.

