User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v13 is a pose with position (-4.571, 0.047, 0.801) and quaternion (0.0, 0.0, -0.141, 0.99).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v16 is a pose with position (4.35, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.0)).
           Object v5 is an arm configuration with joint values (0.393, 0.333, 0.0, -1.522, 2.722, -1.219, -2.989).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.465, 0.265), (4.535, 0.335)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.8, -0.6), (-4.2, 0.6)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.614, 0.004), (-4.527, 0.091)).
           Object v9 is a pose with position (4.5, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.315, 0.265), (4.385, 0.335)).
           Object v3 is a base configuration with (x, y, theta) = (2.5, 0.0, 0.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v8)
           Atom atbconf(v3)
           Atom supported(v12, v13, v14)
           Atom stackable(v12, v18)
           Atom type(v12, v17)
           Atom arm(v6)
           Atom stackable(v15, v10)
           Atom atpose(v8, v9)
           Atom canmove()
           Atom controllable(v4)
           Atom pose(v8, v9)
           Atom graspable(v15)
           Atom arm(v4)
           Atom aconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom aconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom pose(v15, v16)
           Atom pose(v12, v13)
           Atom atpose(v15, v16)
           Atom handempty(v6)
           Atom supported(v15, v16, v11)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v8, v9, v11)
           Atom handempty(v4)
           Atom graspable(v12)
           Atom stackable(v8, v18)
           Atom type(v8, v17)
           Atom bconf(v3)
           Atom stackable(v8, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #o1)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #o1)
           Atom supported(v12, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, some of which are graspable and stackable. The robot has two arms, v4 and v6, both of which are initially empty. The robot is currently at base configuration v3 and arm v4 is at arm configuration v5, and arm v6 is at arm configuration v7. There are three objects: v8, v12, and v15. v8 is at pose v9 on surface v11. v15 is at pose v16 on surface v11. v12 is at pose v13 on surface v14.
           
           The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true for some object `?green`. We are given that `type(v8, v17)` and `type(v12, v17)`. Therefore, we need to make either `on(v8, v18)` or `on(v12, v18)` true. From the initial state, `supported(v8, #o2, v18)` and `supported(v12, #o2, v18)` are true. Thus, if we place either v8 or v12 at pose #o2, the goal will be achieved.
           
           However, the only available action instance is `(move_base v3 v3 #o0)`. This action does not change the state of any objects (other than the base configuration, which remains v3) and thus cannot achieve the goal of placing an object on surface v18. Therefore, the goal is unreachable with the given action instances.

