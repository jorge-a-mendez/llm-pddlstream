User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g5: object
           #g6: object
           #g7: object
           #g8: object
           #g9: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q19: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           @sink: object
           @stove: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v3: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v44: object
           v45: object
           v46: object
           v47: object
           v48: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p14 is a pose with position (0.09, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (-0.09, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v21 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p5 is a pose with position (-0.06, 0.06, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p12 is a pose with position (0.0, -0.09, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p6 is a pose with position (0.06, 0.06, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.055, -0.035), (0.125, 0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.125, -0.035), (-0.055, 0.035)).
           Object p7 is a pose with position (-0.06, -0.06, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.125), (0.035, -0.055)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, 0.055), (0.035, 0.125)).
           Object p8 is a pose with position (0.06, -0.06, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v9 is a pose with position (0.086, 0.329, 0.781) and quaternion (0.0, 0.0, 0.592, 0.806).
           Object v19 is a pose with position (0.253, 0.095, 0.781) and quaternion (0.0, 0.0, 0.992, -0.126).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v17 is a pose with position (-0.101, -0.296, 0.781) and quaternion (0.0, 0.0, -0.143, 0.99).
           Object v15 is a pose with position (-0.133, -0.47, 0.781) and quaternion (0.0, 0.0, 0.882, 0.472).
           Object v13 is a pose with position (0.186, -0.259, 0.781) and quaternion (0.0, 0.0, 0.257, 0.966).
           Object p11 is a pose with position (0.0, 0.09, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p10 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom graspable(v16)
           Atom pose(v16, v17)
           Atom atpose(v16, v17)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom graspable(v18)
           Atom pose(v18, v19)
           Atom atpose(v18, v19)
           Atom stackable(v18, v10)
           Atom supported(v18, v19, v11)
           Atom stackable(v8, v20)
           Atom stackable(v12, v20)
           Atom stackable(v14, v20)
           Atom stackable(v16, v20)
           Atom stackable(v18, v20)
           Atom pose(v14, p7)
           Atom supported(v14, p7, v10)
           Atom pose(v18, p9)
           Atom supported(v18, p9, v20)
           Atom pose(v16, p8)
           Atom supported(v16, p8, v20)
           Atom supported(v14, p7, v20)
           Atom pose(v12, p6)
           Atom supported(v12, p6, v20)
           Atom pose(v8, p5)
           Atom supported(v8, p5, v20)
           Atom supported(v12, p6, v10)
           Atom supported(v18, p9, v10)
           Atom supported(v16, p8, v10)
           Atom supported(v8, p5, v10)
           Atom kin(v40, v41, p5, v42, v43, v44)
           Atom kin(v40, v45, p6, v42, v43, v44)
           Atom kin(v40, v46, p7, v42, v43, v44)
           Atom kin(v40, v47, p8, v42, v43, v44)
           Atom kin(v40, v48, p9, v42, v43, v44)
           Atom pose(v8, p10)
           Atom supported(v8, p10, v20)
           Atom kin(v40, v41, p10, v42, v43, v44)
           Atom pose(v12, p11)
           Atom supported(v12, p11, v20)
           Atom kin(v40, v45, p11, v42, v43, v44)
           Atom pose(v14, p12)
           Atom supported(v14, p12, v20)
           Atom kin(v40, v46, p12, v42, v43, v44)
           Atom pose(v16, p13)
           Atom supported(v16, p13, v20)
           Atom kin(v40, v47, p13, v42, v43, v44)
           Atom pose(v18, p14)
           Atom supported(v18, p14, v20)
           Atom kin(v40, v48, p14, v42, v43, v44)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #g5)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v20)
           Atom supported(v14, #o2, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom grasp(v14, #g8)
           Atom supported(v12, #o2, v10)
           Atom supported(v18, #o2, v10)
           Atom grasp(v18, #g6)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #g9)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g7)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, p8, #g5, #o3, #o4)
           Atom bconf(#q19)
           Atom atraj(#t35)
           Atom kin(v4, v16, p13, #g5, #q19, #t35)
           Atom bconf(#q10)
           Atom atraj(#t23)
           Atom kin(v4, v16, v17, #g5, #q10, #t23)
           Atom kin(v4, v12, p6, #g9, #o3, #o4)
           Atom bconf(#q17)
           Atom atraj(#t33)
           Atom kin(v4, v12, p11, #g9, #q17, #t33)
           Atom bconf(#q15)
           Atom atraj(#t31)
           Atom kin(v4, v12, v13, #g9, #q15, #t31)
           Atom bconf(#q12)
           Atom atraj(#t25)
           Atom kin(v4, v14, v15, #g8, #q12, #t25)
           Atom bconf(#q13)
           Atom atraj(#t29)
           Atom kin(v4, v14, p12, #g8, #q13, #t29)
           Atom kin(v4, v14, p7, #g8, #o3, #o4)
           Atom kin(v4, v18, p9, #g6, #o3, #o4)
           Atom bconf(#q16)
           Atom atraj(#t32)
           Atom kin(v4, v18, v19, #g6, #q16, #t32)
           Atom bconf(#q11)
           Atom atraj(#t24)
           Atom kin(v4, v18, p14, #g6, #q11, #t24)
           Atom bconf(#q14)
           Atom atraj(#t30)
           Atom kin(v4, v8, p10, #g7, #q14, #t30)
           Atom bconf(#q18)
           Atom atraj(#t34)
           Atom kin(v4, v8, v9, #g7, #q18, #t34)
           Atom kin(v4, v8, p5, #g7, #o3, #o4)
           Atom basemotion(#q10, #o0, v3)
           Atom btraj(#t26)
           Atom basemotion(v3, #t26, #q10)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q17, #o0, v3)
           Atom basemotion(#q17, #o0, #q17)
           Atom basemotion(v3, #o0, #q17)
           Atom basemotion(#q10, #o0, #q17)
           Atom basemotion(#q17, #o0, #q10)
           Atom basemotion(#q19, #o0, #q17)
           Atom basemotion(#q19, #o0, v3)
           Atom basemotion(#q19, #o0, #q19)
           Atom basemotion(#q17, #o0, #q19)
           Atom basemotion(v3, #o0, #q19)
           Atom basemotion(#q10, #o0, #q19)
           Atom basemotion(#q19, #o0, #q10)
           Atom basemotion(#q18, #o0, v3)
           Atom basemotion(v3, #o0, #q18)
           Atom basemotion(#q18, #o0, #q18)
           Atom basemotion(#q17, #o0, #q18)
           Atom basemotion(#q18, #o0, #q17)
           Atom basemotion(#q19, #o0, #q18)
           Atom basemotion(#q18, #o0, #q19)
           Atom basemotion(#q10, #o0, #q18)
           Atom basemotion(#q18, #o0, #q10)
           Atom basemotion(#q14, #o0, v3)
           Atom basemotion(v3, #o0, #q14)
           Atom basemotion(#q14, #o0, #q14)
           Atom basemotion(#q18, #o0, #q14)
           Atom basemotion(#q14, #o0, #q18)
           Atom basemotion(#q17, #o0, #q14)
           Atom basemotion(#q14, #o0, #q17)
           Atom basemotion(#q19, #o0, #q14)
           Atom basemotion(#q14, #o0, #q19)
           Atom basemotion(#q10, #o0, #q14)
           Atom basemotion(#q14, #o0, #q10)
           Atom basemotion(#q11, #o0, #q19)
           Atom basemotion(#q11, #o0, #q17)
           Atom basemotion(#q11, #o0, #q18)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q11, #o0, #q14)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q19, #o0, #q11)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q17, #o0, #q11)
           Atom basemotion(#q18, #o0, #q11)
           Atom btraj(#t27)
           Atom basemotion(v3, #t27, #q11)
           Atom basemotion(#q14, #o0, #q11)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q16, #o0, #q19)
           Atom basemotion(#q16, #o0, #q17)
           Atom basemotion(#q16, #o0, #q18)
           Atom basemotion(#q16, #o0, v3)
           Atom basemotion(#q16, #o0, #q14)
           Atom basemotion(#q16, #o0, #q10)
           Atom basemotion(#q19, #o0, #q16)
           Atom basemotion(#q16, #o0, #q16)
           Atom basemotion(#q17, #o0, #q16)
           Atom basemotion(#q18, #o0, #q16)
           Atom basemotion(v3, #o0, #q16)
           Atom basemotion(#q14, #o0, #q16)
           Atom basemotion(#q10, #o0, #q16)
           Atom basemotion(#q11, #o0, #q16)
           Atom basemotion(#q16, #o0, #q11)
           Atom basemotion(#q13, #o0, #q17)
           Atom basemotion(#q13, #o0, #q18)
           Atom basemotion(#q13, #o0, v3)
           Atom basemotion(#q13, #o0, #q14)
           Atom basemotion(#q13, #o0, #q13)
           Atom basemotion(#q17, #o0, #q13)
           Atom basemotion(#q18, #o0, #q13)
           Atom basemotion(v3, #o0, #q13)
           Atom basemotion(#q14, #o0, #q13)
           Atom basemotion(#q19, #o0, #q13)
           Atom basemotion(#q13, #o0, #q19)
           Atom basemotion(#q10, #o0, #q13)
           Atom basemotion(#q13, #o0, #q10)
           Atom basemotion(#q16, #o0, #q13)
           Atom basemotion(#q13, #o0, #q16)
           Atom basemotion(#q11, #o0, #q13)
           Atom basemotion(#q13, #o0, #q11)
           Atom basemotion(#q12, #o0, #q17)
           Atom basemotion(#q12, #o0, #q18)
           Atom basemotion(#q12, #o0, v3)
           Atom basemotion(#q12, #o0, #q14)
           Atom basemotion(#q17, #o0, #q12)
           Atom basemotion(#q18, #o0, #q12)
           Atom btraj(#t28)
           Atom basemotion(v3, #t28, #q12)
           Atom basemotion(#q12, #o0, #q12)
           Atom basemotion(#q14, #o0, #q12)
           Atom basemotion(#q13, #o0, #q12)
           Atom basemotion(#q12, #o0, #q13)
           Atom basemotion(#q19, #o0, #q12)
           Atom basemotion(#q12, #o0, #q19)
           Atom basemotion(#q10, #o0, #q12)
           Atom basemotion(#q12, #o0, #q10)
           Atom basemotion(#q16, #o0, #q12)
           Atom basemotion(#q12, #o0, #q16)
           Atom basemotion(#q11, #o0, #q12)
           Atom basemotion(#q12, #o0, #q11)
           Atom basemotion(#q15, #o0, #q17)
           Atom basemotion(#q15, #o0, #q18)
           Atom basemotion(#q15, #o0, v3)
           Atom basemotion(#q15, #o0, #q14)
           Atom basemotion(#q17, #o0, #q15)
           Atom basemotion(#q18, #o0, #q15)
           Atom basemotion(#q15, #o0, #q15)
           Atom basemotion(v3, #o0, #q15)
           Atom basemotion(#q14, #o0, #q15)
           Atom basemotion(#q12, #o0, #q15)
           Atom basemotion(#q15, #o0, #q12)
           Atom basemotion(#q13, #o0, #q15)
           Atom basemotion(#q15, #o0, #q13)
           Atom basemotion(#q19, #o0, #q15)
           Atom basemotion(#q15, #o0, #q19)
           Atom basemotion(#q10, #o0, #q15)
           Atom basemotion(#q15, #o0, #q10)
           Atom basemotion(#q16, #o0, #q15)
           Atom basemotion(#q15, #o0, #q16)
           Atom basemotion(#q11, #o0, #q15)
           Atom basemotion(#q15, #o0, #q11)
           Atom kin(v4, v8, #o2, #g7, #o3, #o4)
           Atom kin(v4, v18, #o2, #g6, #o3, #o4)
           Atom kin(v4, v12, #o2, #g9, #o3, #o4)
           Atom kin(v4, v14, #o2, #g8, #o3, #o4)
           Atom kin(v4, v16, #o2, #g5, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q18)
           Atom basemotion(#o3, #o0, #q14)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q18, #o0, #o3)
           Atom basemotion(#q14, #o0, #o3)
           Atom basemotion(#q17, #o0, #o3)
           Atom basemotion(#o3, #o0, #q17)
           Atom basemotion(#q15, #o0, #o3)
           Atom basemotion(#o3, #o0, #q15)
           Atom basemotion(#q12, #o0, #o3)
           Atom basemotion(#o3, #o0, #q12)
           Atom basemotion(#q13, #o0, #o3)
           Atom basemotion(#o3, #o0, #q13)
           Atom basemotion(#q19, #o0, #o3)
           Atom basemotion(#o3, #o0, #q19)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#q16, #o0, #o3)
           Atom basemotion(#o3, #o0, #q16)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#o3, #o0, #q11)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q14 #o0))
           ((move_base #o3 #q15 #o0))
           ((move_base #o3 #q16 #o0))
           ((move_base #o3 #q17 #o0))
           ((move_base #o3 #q18 #o0))
           ((move_base #o3 #q19 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q14 #o0))
           ((move_base #q10 #q15 #o0))
           ((move_base #q10 #q16 #o0))
           ((move_base #q10 #q17 #o0))
           ((move_base #q10 #q18 #o0))
           ((move_base #q10 #q19 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q14 #o0))
           ((move_base #q11 #q15 #o0))
           ((move_base #q11 #q16 #o0))
           ((move_base #q11 #q17 #o0))
           ((move_base #q11 #q18 #o0))
           ((move_base #q11 #q19 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q13 #o0))
           ((move_base #q12 #q14 #o0))
           ((move_base #q12 #q15 #o0))
           ((move_base #q12 #q16 #o0))
           ((move_base #q12 #q17 #o0))
           ((move_base #q12 #q18 #o0))
           ((move_base #q12 #q19 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q11 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q14 #o0))
           ((move_base #q13 #q15 #o0))
           ((move_base #q13 #q16 #o0))
           ((move_base #q13 #q17 #o0))
           ((move_base #q13 #q18 #o0))
           ((move_base #q13 #q19 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q14 #o3 #o0))
           ((move_base #q14 #q10 #o0))
           ((move_base #q14 #q11 #o0))
           ((move_base #q14 #q12 #o0))
           ((move_base #q14 #q13 #o0))
           ((move_base #q14 #q14 #o0))
           ((move_base #q14 #q15 #o0))
           ((move_base #q14 #q16 #o0))
           ((move_base #q14 #q17 #o0))
           ((move_base #q14 #q18 #o0))
           ((move_base #q14 #q19 #o0))
           ((move_base #q14 v3 #o0))
           ((move_base #q15 #o3 #o0))
           ((move_base #q15 #q10 #o0))
           ((move_base #q15 #q11 #o0))
           ((move_base #q15 #q12 #o0))
           ((move_base #q15 #q13 #o0))
           ((move_base #q15 #q14 #o0))
           ((move_base #q15 #q15 #o0))
           ((move_base #q15 #q16 #o0))
           ((move_base #q15 #q17 #o0))
           ((move_base #q15 #q18 #o0))
           ((move_base #q15 #q19 #o0))
           ((move_base #q15 v3 #o0))
           ((move_base #q16 #o3 #o0))
           ((move_base #q16 #q10 #o0))
           ((move_base #q16 #q11 #o0))
           ((move_base #q16 #q12 #o0))
           ((move_base #q16 #q13 #o0))
           ((move_base #q16 #q14 #o0))
           ((move_base #q16 #q15 #o0))
           ((move_base #q16 #q16 #o0))
           ((move_base #q16 #q17 #o0))
           ((move_base #q16 #q18 #o0))
           ((move_base #q16 #q19 #o0))
           ((move_base #q16 v3 #o0))
           ((move_base #q17 #o3 #o0))
           ((move_base #q17 #q10 #o0))
           ((move_base #q17 #q11 #o0))
           ((move_base #q17 #q12 #o0))
           ((move_base #q17 #q13 #o0))
           ((move_base #q17 #q14 #o0))
           ((move_base #q17 #q15 #o0))
           ((move_base #q17 #q16 #o0))
           ((move_base #q17 #q17 #o0))
           ((move_base #q17 #q18 #o0))
           ((move_base #q17 #q19 #o0))
           ((move_base #q17 v3 #o0))
           ((move_base #q18 #o3 #o0))
           ((move_base #q18 #q10 #o0))
           ((move_base #q18 #q11 #o0))
           ((move_base #q18 #q12 #o0))
           ((move_base #q18 #q13 #o0))
           ((move_base #q18 #q14 #o0))
           ((move_base #q18 #q15 #o0))
           ((move_base #q18 #q16 #o0))
           ((move_base #q18 #q17 #o0))
           ((move_base #q18 #q18 #o0))
           ((move_base #q18 #q19 #o0))
           ((move_base #q18 v3 #o0))
           ((move_base #q19 #o3 #o0))
           ((move_base #q19 #q10 #o0))
           ((move_base #q19 #q11 #o0))
           ((move_base #q19 #q12 #o0))
           ((move_base #q19 #q13 #o0))
           ((move_base #q19 #q14 #o0))
           ((move_base #q19 #q15 #o0))
           ((move_base #q19 #q16 #o0))
           ((move_base #q19 #q17 #o0))
           ((move_base #q19 #q18 #o0))
           ((move_base #q19 #q19 #o0))
           ((move_base #q19 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q13 #o0))
           ((move_base v3 #q14 #o0))
           ((move_base v3 #q15 #o0))
           ((move_base v3 #q16 #o0))
           ((move_base v3 #q17 #o0))
           ((move_base v3 #q18 #o0))
           ((move_base v3 #q19 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q10 #t26))
           ((move_base v3 #q11 #t27))
           ((move_base v3 #q12 #t28))
           ((pick v4 v12 #o2 #g9 #o3 #o4))
           ((place v4 v12 #o2 #g9 #o3 #o4))
           ((pick v4 v12 p11 #g9 #q17 #t33))
           ((place v4 v12 p11 #g9 #q17 #t33))
           ((pick v4 v12 p6 #g9 #o3 #o4))
           ((place v4 v12 p6 #g9 #o3 #o4))
           ((pick v4 v12 v13 #g9 #q15 #t31))
           ((place v4 v12 v13 #g9 #q15 #t31))
           ((pick v4 v14 #o2 #g8 #o3 #o4))
           ((place v4 v14 #o2 #g8 #o3 #o4))
           ((pick v4 v14 p12 #g8 #q13 #t29))
           ((place v4 v14 p12 #g8 #q13 #t29))
           ((pick v4 v14 p7 #g8 #o3 #o4))
           ((place v4 v14 p7 #g8 #o3 #o4))
           ((pick v4 v14 v15 #g8 #q12 #t25))
           ((place v4 v14 v15 #g8 #q12 #t25))
           ((pick v4 v16 #o2 #g5 #o3 #o4))
           ((place v4 v16 #o2 #g5 #o3 #o4))
           ((pick v4 v16 p13 #g5 #q19 #t35))
           ((place v4 v16 p13 #g5 #q19 #t35))
           ((pick v4 v16 p8 #g5 #o3 #o4))
           ((place v4 v16 p8 #g5 #o3 #o4))
           ((pick v4 v16 v17 #g5 #q10 #t23))
           ((place v4 v16 v17 #g5 #q10 #t23))
           ((pick v4 v18 #o2 #g6 #o3 #o4))
           ((place v4 v18 #o2 #g6 #o3 #o4))
           ((pick v4 v18 p14 #g6 #q11 #t24))
           ((place v4 v18 p14 #g6 #q11 #t24))
           ((pick v4 v18 p9 #g6 #o3 #o4))
           ((place v4 v18 p9 #g6 #o3 #o4))
           ((pick v4 v18 v19 #g6 #q16 #t32))
           ((place v4 v18 v19 #g6 #q16 #t32))
           ((pick v4 v8 #o2 #g7 #o3 #o4))
           ((place v4 v8 #o2 #g7 #o3 #o4))
           ((pick v4 v8 p10 #g7 #q14 #t30))
           ((place v4 v8 p10 #g7 #q14 #t30))
           ((pick v4 v8 p5 #g7 #o3 #o4))
           ((place v4 v8 p5 #g7 #o3 #o4))
           ((pick v4 v8 v9 #g7 #q18 #t34))
           ((place v4 v8 v9 #g7 #q18 #t34))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q2', '#t6'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g1', '#q2', '#t2'))
           Action(name='move_base', args=('#q2', '#q8', '#t17'))
           Action(name='place', args=('v4', 'v8', 'p5', '#g1', '#q8', '#t12'))
           Action(name='move_base', args=('#q8', '#q5', '#t21'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g4', '#q5', '#t9'))
           Action(name='move_base', args=('#q5', '#q6', '#t20'))
           Action(name='place', args=('v4', 'v12', 'p6', '#g4', '#q6', '#t10'))
           Action(name='move_base', args=('#q6', '#q3', '#t22'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g2', '#q3', '#t3'))
           Action(name='move_base', args=('#q3', '#q9', '#t15'))
           Action(name='place', args=('v4', 'v14', 'p7', '#g2', '#q9', '#t13'))
           Action(name='move_base', args=('#q9', '#q1', '#t16'))
           Action(name='pick', args=('v4', 'v16', 'v17', '#g0', '#q1', '#t1'))
           Action(name='move_base', args=('#q1', '#q0', '#t19'))
           Action(name='place', args=('v4', 'v16', 'p8', '#g0', '#q0', '#t0'))
           Action(name='move_base', args=('#q0', '#q7', '#t18'))
           Action(name='pick', args=('v4', 'v18', 'v19', '#g3', '#q7', '#t11'))
           Action(name='move_base', args=('#q7', '#q4', '#t14'))
           Action(name='place', args=('v4', 'v18', 'p9', '#g3', '#q4', '#t8'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v18', 'p9', 'v12', 'p6')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

(Thoughts: **Finalized Plan for Object Placement**
           
           Okay, so the initial problem was a collision between placing two objects, v18 and v12, at specific poses on the v20 surface.  I've delved deep into the object definitions, their AABBs (axis-aligned bounding boxes), and the given poses to understand why the collision happened. The initial failure seemed to stem from an incorrect interpretation of the AABB or how the collision check functions within this system.  The sizes of the objects are 0.07x0.07 and the surface is 0.27x0.27.
           
           The key realization is that the objects are *not* centered at their poses. They have inherent offsets.  Objects have these AABB offset coordinates where the object's origin is at its center relative to the pose at the origin on the plane on the table.
           
           The goal is to move five objects (v8, v12, v14, v16, v18) from their current locations on surface v11 to specific positions on surface v20.  I had to identify five collision-free poses for these objects on the v20 table.
           
           The previous plan likely failed because it tried to place the objects in positions that are too close, leading to a physical overlap.  This wasn't a problem of invalid poses, since the system stated they were supported.  It was a geometric problem.
           
           The solution is to use five distinct poses for the objects where a collision is impossible.  This is a critical insight.
           
           I've decided to use a special, continuous parameter, '#o2', which represents a new continuous world pose. This '#o2' is meant to denote a pose at which objects can be placed on a surface (v20) such that the object's AABB is contained within v20. The system needs me to specify distinct values for each object assigned to #o2 as they must be different positions.
           
           I've determined that assigning the following poses to the object locations satisfies the requirement:
           
           v8: (0.0, 0.0, 0.782, 0.0)
           v12: (0.07, 0.0, 0.782, 0.0)
           v14: (-0.07, 0.0, 0.782, 0.0)
           v16: (0.0, 0.07, 0.782, 0.0)
           v18: (0.0, -0.07, 0.782, 0.0)
           
           I have ensured that these values are valid, and ensure objects on those values are supported.
           
           Given these poses for each object, the plan is to follow this specific sequence:
           
           1.  **Move Base:** From initial position, move base to #q18 (specific pick base configuration for v8 at its initial pose).
           
           2.  **Pick v8:**  Using robot arm v4, pick v8 from its current pose using the kin fact that describes this action.
           3.  **Move Base:**  Move the robot base from #q18 to #o3 (The base configuration needed for placement on #o2).
           4.  **Place v8:** Place v8 using the assigned #o2 (0.0, 0.0, 0.782, 0.0) location.
           
           5.  **Move Base:** Move the base from its previous pose, the specific pick configuration for v12.
           6.  **Pick v12:** From current pose, pick v12.
           7.  **Move Base:** Move the base to #o3.
           8.  **Place v12:** Use #o2 (0.07, 0.0, 0.782, 0.0).
           
           9.  **Move Base:** Move base to v14's pick config.
           10. **Pick v14:** Pick v14.
           11. **Move Base:** Move base to #o3.
           12. **Place v14:** Use #o2 (-0.07, 0.0, 0.782, 0.0).
           
           13. **Move Base:** Move base to v16's pick config.
           14. **Pick v16:** Pick v16.
           15. **Move Base:** Move base to #o3.
           16. **Place v16:** Use #o2 (0.0, 0.07, 0.782, 0.0).
           
           17. **Move Base
)

Model:     **Finalized Plan for Object Placement**
           
           Okay, so the initial problem was a collision between placing two objects, v18 and v12, at specific poses on the v20 surface.  I've delved deep into the object definitions, their AABBs (axis-aligned bounding boxes), and the given poses to understand why the collision happened. The initial failure seemed to stem from an incorrect interpretation of the AABB or how the collision check functions within this system.  The sizes of the objects are 0.07x0.07 and the surface is 0.27x0.27.
           
           The key realization is that the objects are *not* centered at their poses. They have inherent offsets.  Objects have these AABB offset coordinates where the object's origin is at its center relative to the pose at the origin on the plane on the table.
           
           The goal is to move five objects (v8, v12, v14, v16, v18) from their current locations on surface v11 to specific positions on surface v20.  I had to identify five collision-free poses for these objects on the v20 table.
           
           The previous plan likely failed because it tried to place the objects in positions that are too close, leading to a physical overlap.  This wasn't a problem of invalid poses, since the system stated they were supported.  It was a geometric problem.
           
           The solution is to use five distinct poses for the objects where a collision is impossible.  This is a critical insight.
           
           I've decided to use a special, continuous parameter, '#o2', which represents a new continuous world pose. This '#o2' is meant to denote a pose at which objects can be placed on a surface (v20) such that the object's AABB is contained within v20. The system needs me to specify distinct values for each object assigned to #o2 as they must be different positions.
           
           I've determined that assigning the following poses to the object locations satisfies the requirement:
           
           v8: (0.0, 0.0, 0.782, 0.0)
           v12: (0.07, 0.0, 0.782, 0.0)
           v14: (-0.07, 0.0, 0.782, 0.0)
           v16: (0.0, 0.07, 0.782, 0.0)
           v18: (0.0, -0.07, 0.782, 0.0)
           
           I have ensured that these values are valid, and ensure objects on those values are supported.
           
           Given these poses for each object, the plan is to follow this specific sequence:
           
           1.  **Move Base:** From initial position, move base to #q18 (specific pick base configuration for v8 at its initial pose).
           
           2.  **Pick v8:**  Using robot arm v4, pick v8 from its current pose using the kin fact that describes this action.
           3.  **Move Base:**  Move the robot base from #q18 to #o3 (The base configuration needed for placement on #o2).
           4.  **Place v8:** Place v8 using the assigned #o2 (0.0, 0.0, 0.782, 0.0) location.
           
           5.  **Move Base:** Move the base from its previous pose, the specific pick configuration for v12.
           6.  **Pick v12:** From current pose, pick v12.
           7.  **Move Base:** Move the base to #o3.
           8.  **Place v12:** Use #o2 (0.07, 0.0, 0.782, 0.0).
           
           9.  **Move Base:** Move base to v14's pick config.
           10. **Pick v14:** Pick v14.
           11. **Move Base:** Move base to #o3.
           12. **Place v14:** Use #o2 (-0.07, 0.0, 0.782, 0.0).
           
           13. **Move Base:** Move base to v16's pick config.
           14. **Pick v16:** Pick v16.
           15. **Move Base:** Move base to #o3.
           16. **Place v16:** Use #o2 (0.0, 0.07, 0.782, 0.0).
           
           17. **Move Base

