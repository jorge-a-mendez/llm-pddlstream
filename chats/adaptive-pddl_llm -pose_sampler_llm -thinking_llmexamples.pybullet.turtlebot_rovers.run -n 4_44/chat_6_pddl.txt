User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom lander(v9)
           Atom objective(v20)
           Atom rover(v12)
           Atom objective(v17)
           Atom rock(v1)
           Atom conf(v12, v13)
           Atom rock(v3)
           Atom atconf(v14, v15)
           Atom rover(v14)
           Atom rock(v4)
           Atom type(v8, v6)
           Atom conf(v14, v15)
           Atom free(v12, v16)
           Atom rock(v8)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom atconf(v12, v13)
           Atom camera(v10)
           Atom store(v16)
           Atom onboard(v10, v14)
           Atom objective(v19)
           Atom rock(v5)
           Atom type(v7, v6)
           Atom type(v1, v2)
           Atom supports(v10, v11)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom objective(v18)
           Atom free(v14, v16)
           Atom rock(v7)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v14, #q11, #y6, v20)
           Atom imagerange(v14, #q11, v20)
           Atom conf(v14, #q11)
           Atom ray(#y6)
           Atom imagevisible(v14, #q13, #y8, v19)
           Atom imagerange(v14, #q13, v19)
           Atom conf(v14, #q13)
           Atom ray(#y8)
           Atom above(v14, #q2, v8)
           Atom conf(v14, #q2)
           Atom above(v14, #o5, v7)
           Atom above(v14, #q7, v1)
           Atom conf(v14, #q7)
           Atom imagevisible(v14, #q14, #y9, v18)
           Atom imagerange(v14, #q14, v18)
           Atom conf(v14, #q14)
           Atom ray(#y9)
           Atom above(v14, #o5, v3)
           Atom comvisible(v14, #q5, #y4, v9)
           Atom comrange(v14, #q5, v9)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom imagevisible(v14, #q12, #y7, v17)
           Atom imagerange(v14, #q12, v17)
           Atom conf(v14, #q12)
           Atom ray(#y7)
           Atom imagevisible(v12, #q3, #y2, v19)
           Atom imagerange(v12, #q3, v19)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #q8, v1)
           Atom conf(v12, #q8)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q6, #y5, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y5)
           Atom above(v12, #q16, v3)
           Atom conf(v12, #q16)
           Atom comvisible(v12, #q4, #y3, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #q9, v8)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q0, #y0, v20)
           Atom imagerange(v12, #q0, v20)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q1, #y1, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #q15, v7)
           Atom conf(v12, #q15)
           Atom above(v12, #q10, v5)
           Atom conf(v12, #q10)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q10, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q10)
           Atom motion(v12, v13, #t30, #q15)
           Atom motion(v14, v15, #t29, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q12, #t27, #q5)
           Atom motion(v14, #q5, #t9, v15)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, v13, #t5, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #t26, #q5)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, v15, #t23, #q11)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v12, v13, #t4, #q0)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q0, #t18, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #t16, #q4)
           Atom motion(v12, #q10, #t22, #q4)
           Atom motion(v12, #q4, #t13, #q1)
           Atom motion(v12, #q4, #t8, v13)
           Atom motion(v12, #q4, #t32, #q0)
           Atom motion(v12, #q1, #t2, #q4)
           Atom motion(v12, #q4, #t24, #q10)
           Atom motion(v12, #q0, #t1, #q4)
           Atom motion(v12, #q15, #t34, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q14, #t31, #q5)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q5, #t36, #q14)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q1)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q10, #o2, #q16)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q10)
           Atom motion(v12, #q15, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q0)
           Atom motion(v12, #q16, #t35, #q4)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q4, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q9)
           Atom motion(v12, #q1, #o2, #q16)
           Atom motion(v12, #q9, #o2, #q16)
           Atom motion(v12, #q0, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, v15, #t0, #q2)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q2, #t7, #q5)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v12, #q4, #t11, #q6)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #t12, #q4)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q16)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q16, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q6, #t20, #q8)
           Atom motion(v12, #q8, #t17, #q10)
           Atom motion(v12, #q8, #t15, #q4)
           Atom motion(v12, v13, #t25, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q16)
           Atom motion(v12, #q4, #t10, #q8)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q16, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q13, #t28, #q5)
           Atom motion(v14, #q5, #t33, #q13)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v12, v13, #t6, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q4, #t14, #q3)
           Atom motion(v12, #q3, #t3, #q4)
           Atom motion(v12, #q3, #t21, #q6)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q1, #t19, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q16, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q16)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q16, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q16)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #q10 v5 v16))
           ((sample_rock v12 #q15 v7 v16))
           ((sample_rock v12 #q16 v3 v16))
           ((sample_rock v12 #q8 v1 v16))
           ((sample_rock v12 #q9 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q2 v8 v16))
           ((sample_rock v14 #q7 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q16))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q16))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q4))
           ((move v12 #q0 #t18 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q16))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t19 #q3))
           ((move v12 #q1 #t2 #q4))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q15))
           ((move v12 #q10 #o2 #q16))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t22 #q4))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q10))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q16))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 #q9))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t34 #q4))
           ((move v12 #q16 #o2 #o5))
           ((move v12 #q16 #o2 #q0))
           ((move v12 #q16 #o2 #q1))
           ((move v12 #q16 #o2 #q10))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q3))
           ((move v12 #q16 #o2 #q6))
           ((move v12 #q16 #o2 #q8))
           ((move v12 #q16 #o2 #q9))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t35 #q4))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q16))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t21 #q6))
           ((move v12 #q3 #t3 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q16))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #t10 #q8))
           ((move v12 #q4 #t11 #q6))
           ((move v12 #q4 #t13 #q1))
           ((move v12 #q4 #t14 #q3))
           ((move v12 #q4 #t24 #q10))
           ((move v12 #q4 #t32 #q0))
           ((move v12 #q4 #t8 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q16))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q4))
           ((move v12 #q6 #t20 #q8))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q16))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t15 #q4))
           ((move v12 #q8 #t17 #q10))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q15))
           ((move v12 #q9 #o2 #q16))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t16 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t25 #q8))
           ((move v12 v13 #t30 #q15))
           ((move v12 v13 #t4 #q0))
           ((move v12 v13 #t5 #q1))
           ((move v12 v13 #t6 #q3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t26 #q5))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t27 #q5))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t28 #q5))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t31 #q5))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t7 #q5))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #t33 #q13))
           ((move v14 #q5 #t36 #q14))
           ((move v14 #q5 #t9 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q2))
           ((move v14 v15 #t23 #q11))
           ((move v14 v15 #t29 #q5))
           ((calibrate v12 #q0 #y0 v20 v10))
           ((calibrate v12 #q1 #y1 v18 v10))
           ((calibrate v12 #q3 #y2 v19 v10))
           ((calibrate v12 #q6 #y5 v17 v10))
           ((calibrate v14 #q11 #y6 v20 v10))
           ((calibrate v14 #q12 #y7 v17 v10))
           ((calibrate v14 #q13 #y8 v19 v10))
           ((calibrate v14 #q14 #y9 v18 v10))
           ((take_image v12 #q0 #y0 v20 v10 v11))
           ((take_image v12 #q1 #y1 v18 v10 v11))
           ((take_image v12 #q3 #y2 v19 v10 v11))
           ((take_image v12 #q6 #y5 v17 v10 v11))
           ((take_image v14 #q11 #y6 v20 v10 v11))
           ((take_image v14 #q12 #y7 v17 v10 v11))
           ((take_image v14 #q13 #y8 v19 v10 v11))
           ((take_image v14 #q14 #y9 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y3 v9 v4))
           ((send_analysis v12 #q4 #y3 v9 v5))
           ((send_analysis v12 #q4 #y3 v9 v7))
           ((send_analysis v12 #q4 #y3 v9 v3))
           ((send_analysis v12 #q4 #y3 v9 v1))
           ((send_analysis v12 #q4 #y3 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q5 #y4 v9 v3))
           ((send_analysis v14 #q5 #y4 v9 v4))
           ((send_analysis v14 #q5 #y4 v9 v5))
           ((send_analysis v14 #q5 #y4 v9 v7))
           ((send_analysis v14 #q5 #y4 v9 v8))
           ((send_analysis v14 #q5 #y4 v9 v1))
           ((send_image v12 #q4 #y3 v9 v20 v11))
           ((send_image v12 #q4 #y3 v9 v18 v11))
           ((send_image v12 #q4 #y3 v9 v19 v11))
           ((send_image v12 #q4 #y3 v9 v17 v11))
           ((send_image v14 #q5 #y4 v9 v20 v11))
           ((send_image v14 #q5 #y4 v9 v17 v11))
           ((send_image v14 #q5 #y4 v9 v19 v11))
           ((send_image v14 #q5 #y4 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Expert Summary of Goal `new-axiom@0()` Plan:**
           
           Okay, here's my plan to achieve the specified goal, broken down into manageable steps. The objective is to achieve a conjunction of conditions regarding robot configurations, image and analysis reception, and rock types.
           
           First, I recognized that the initial state already satisfies some conditions: the rovers `v12` and `v14` are in their initial configurations, and their storage spaces are free. This is great, since it simplifies the objective. I confirmed that `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` are already true.
           
           Next, I determined that the goal specifically requires the reception of images (`v17`, `v18`, `v19`, `v20`) in mode `v11` and analysis of a stone and soil type. I focused on analyzing a stone of type `v2` (specifically rock `v1`) and a soil of type `v6` (rock `v8`) as examples of such rock types.
           
           To tackle the image and analysis reception, I determined that I needed to:
           1.  Sample rocks.
           2.  Send analyses.
           3.  Calibrate and take images of those samples.
           4.  Send the images.
           
           I devised a plan for each rover, `v12` and `v14`, that can be executed in sequence. I confirmed each rover has enough actions to ensure all facts become true (analyzed, receivedanalysis, receivedimage, atconf/free are now true).
           
           Rover `v12`'s plan is as follows:
           
           1.  Move to rock `v1` and take a sample.
           2.  Drop the sample.
           3.  Move to a communications point.
           4.  Send the analysis.
           5.  Take images (`v17`, `v18`) after moving to relevant image capture locations, calibrating before each image is taken, and sending the images via the available communications.
           6. Return to initial position `v13`.
           
           Rover `v14` will execute a parallel plan:
           
           1.  Move to rock `v8` and take a sample.
           2.  Drop the sample.
           3.  Move to a communications point.
           4.  Send the analysis.
           5.  Take images (`v20`, `v19`) after moving to relevant image capture locations, calibrating before each image is taken, and sending the images via the available communications.
           6. Return to initial position `v15`.
           
           The critical constraint here is the calibration state of the shared camera `v10`. The `take_image` actions un-calibrate the camera, so each time an image must be taken, the rover must be re-calibrated. By executing the full sequence of actions for each rover sequentially and ensuring the camera is recalibrated, I avoid interference between the rovers.
           
           I ensured that all move actions were valid for the rovers. Also the precondition for sampling requires `free` to become false, and for the goal I set this back to true, which is why a `drop_rock` action must be taken immediately after each `sample_rock`.
           
)

Model:     **Expert Summary of Goal `new-axiom@0()` Plan:**
           
           Okay, here's my plan to achieve the specified goal, broken down into manageable steps. The objective is to achieve a conjunction of conditions regarding robot configurations, image and analysis reception, and rock types.
           
           First, I recognized that the initial state already satisfies some conditions: the rovers `v12` and `v14` are in their initial configurations, and their storage spaces are free. This is great, since it simplifies the objective. I confirmed that `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` are already true.
           
           Next, I determined that the goal specifically requires the reception of images (`v17`, `v18`, `v19`, `v20`) in mode `v11` and analysis of a stone and soil type. I focused on analyzing a stone of type `v2` (specifically rock `v1`) and a soil of type `v6` (rock `v8`) as examples of such rock types.
           
           To tackle the image and analysis reception, I determined that I needed to:
           1.  Sample rocks.
           2.  Send analyses.
           3.  Calibrate and take images of those samples.
           4.  Send the images.
           
           I devised a plan for each rover, `v12` and `v14`, that can be executed in sequence. I confirmed each rover has enough actions to ensure all facts become true (analyzed, receivedanalysis, receivedimage, atconf/free are now true).
           
           Rover `v12`'s plan is as follows:
           
           1.  Move to rock `v1` and take a sample.
           2.  Drop the sample.
           3.  Move to a communications point.
           4.  Send the analysis.
           5.  Take images (`v17`, `v18`) after moving to relevant image capture locations, calibrating before each image is taken, and sending the images via the available communications.
           6. Return to initial position `v13`.
           
           Rover `v14` will execute a parallel plan:
           
           1.  Move to rock `v8` and take a sample.
           2.  Drop the sample.
           3.  Move to a communications point.
           4.  Send the analysis.
           5.  Take images (`v20`, `v19`) after moving to relevant image capture locations, calibrating before each image is taken, and sending the images via the available communications.
           6. Return to initial position `v15`.
           
           The critical constraint here is the calibration state of the shared camera `v10`. The `take_image` actions un-calibrate the camera, so each time an image must be taken, the rover must be re-calibrated. By executing the full sequence of actions for each rover sequentially and ensuring the camera is recalibrated, I avoid interference between the rovers.
           
           I ensured that all move actions were valid for the rovers. Also the precondition for sampling requires `free` to become false, and for the goal I set this back to true, which is why a `drop_rock` action must be taken immediately after each `sample_rock`.
           

