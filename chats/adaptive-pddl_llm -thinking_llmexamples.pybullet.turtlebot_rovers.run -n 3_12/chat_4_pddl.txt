User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom store(v16)
           Atom atconf(v12, v13)
           Atom rover(v14)
           Atom camera(v10)
           Atom free(v12, v16)
           Atom type(v5, v6)
           Atom objective(v19)
           Atom rock(v3)
           Atom type(v1, v2)
           Atom mode(v11)
           Atom type(v3, v2)
           Atom conf(v14, v15)
           Atom objective(v18)
           Atom type(v4, v2)
           Atom conf(v12, v13)
           Atom onboard(v10, v12)
           Atom free(v14, v16)
           Atom supports(v10, v11)
           Atom rock(v7)
           Atom onboard(v10, v14)
           Atom objective(v17)
           Atom type(v8, v6)
           Atom lander(v9)
           Atom rover(v12)
           Atom atconf(v14, v15)
           Atom rock(v8)
           Atom rock(v1)
           Atom type(v7, v6)
           Atom rock(v5)
           Atom rock(v4)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #q2, #y2, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v4)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q6, v3)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q4, #y3, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #t8, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #t7, #q4)
           Atom motion(v12, #q1, #t9, #q4)
           Atom motion(v12, #q4, #t4, #q1)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t10, #q1)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q1, #t11, #q5)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, v13, #t6, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t3, #q1)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #t0, #q1)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q1, #t1, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q2, #t13, #q0)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q1, #t12, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, v13, #t5, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #t15, #q4)
           Atom motion(v12, #q0, #t2, #q1)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q1, #t14, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #t16, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v14, #o0, #o2, #o0)
           Atom motion(v14, v15, #o2, #o0)
           Atom motion(v14, #o0, #o2, v15)
           Atom motion(v14, #o5, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v12 #q6 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t15 #q4))
           ((move v12 #q0 #t2 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #t1 #q3))
           ((move v12 #q1 #t11 #q5))
           ((move v12 #q1 #t12 #q0))
           ((move v12 #q1 #t14 #q6))
           ((move v12 #q1 #t8 v13))
           ((move v12 #q1 #t9 #q4))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t13 #q0))
           ((move v12 #q2 #t3 #q1))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t0 #q1))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t4 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t10 #q1))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t16 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q0))
           ((move v12 v13 #t6 #q2))
           ((move v12 v13 #t7 #q4))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q2 #y2 v17 v10))
           ((calibrate v12 #q4 #y3 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q2 #y2 v17 v10 v11))
           ((take_image v12 #q4 #y3 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Finalized Plan for `new-axiom@0()`**
           
           Alright, after meticulously dissecting the initial state and the necessary preconditions for each action, I've constructed the following comprehensive plan to achieve the `new-axiom@0()` goal. The central idea is to sequence actions to satisfy all the required atomic statements within the axiom.
           
           First, I'll leverage rover `v12` to handle the imaging tasks, carefully considering the `imagevisible` and `comvisible` predicates, along with the `calibrated` status of the camera `v10`. I've determined that `v12` needs to move to specific locations to take images, and then move again to send the images to lander `v9`.  The key here is to recalibrate after each image to make sure the sensor is correctly aligned. Specifically:
           
           1.  `move v12 v13 #t6 #q2`
           2.  `calibrate v12 #q2 #y2 v17 v10`
           3.  `take_image v12 #q2 #y2 v17 v10 v11`
           4.  `move v12 #q2 #t3 #q1`
           5.  `send_image v12 #q1 #y1 v9 v17 v11`
           6.  `move v12 #q1 #t12 #q0`
           7.  `calibrate v12 #q0 #y0 v18 v10`
           8.  `take_image v12 #q0 #y0 v18 v10 v11`
           9.  `move v12 #q0 #t2 #q1`
           10. `send_image v12 #q1 #y1 v9 v18 v11`
           11. `move v12 #q1 #t9 #q4`
           12. `calibrate v12 #q4 #y3 v19 v10`
           13. `take_image v12 #q4 #y3 v19 v10 v11`
           14. `move v12 #q4 #t4 #q1`
           15. `send_image v12 #q1 #y1 v9 v19 v11`
           
           The `imagevisible` and `comvisible` facts are present in the initial state.
           
           After securing the images, I move on to sampling and analysis. I will ensure that the condition `receivedanalysis` is true for a stone and a soil sample. I am going to utilize rover `v12` and rover `v14` for sampling the rocks.
           
           -   For rover `v12`:
           
               1.  `move v12 #q1 #o2 #o5`
               2.  `sample_rock v12 #o5 v4 v16`
               3.  `move v12 #o5 #o2 #q1`
               4.  `send_analysis v12 #q1 #y1 v9 v4`
               5.  `drop_rock v12 v16`
               6. `move v12 #q1 #t8 v13`
           -   For rover `v14`:
           
               1.  `move v14 v15 #o2 #o5`
               2.  `sample_rock v14 #o5 v7 v16`
               3.  `move v14 #o5 #o2 #o0`
               4.  `send_analysis v14 #o0 #o1 v9 v7`
               5.  `drop_rock v14 v16`
               6. `move v14 #o0 #o2 v15`
           
           This sequence carefully satisfies all the predicates in the initial and final states.
           
)

Model:     **Finalized Plan for `new-axiom@0()`**
           
           Alright, after meticulously dissecting the initial state and the necessary preconditions for each action, I've constructed the following comprehensive plan to achieve the `new-axiom@0()` goal. The central idea is to sequence actions to satisfy all the required atomic statements within the axiom.
           
           First, I'll leverage rover `v12` to handle the imaging tasks, carefully considering the `imagevisible` and `comvisible` predicates, along with the `calibrated` status of the camera `v10`. I've determined that `v12` needs to move to specific locations to take images, and then move again to send the images to lander `v9`.  The key here is to recalibrate after each image to make sure the sensor is correctly aligned. Specifically:
           
           1.  `move v12 v13 #t6 #q2`
           2.  `calibrate v12 #q2 #y2 v17 v10`
           3.  `take_image v12 #q2 #y2 v17 v10 v11`
           4.  `move v12 #q2 #t3 #q1`
           5.  `send_image v12 #q1 #y1 v9 v17 v11`
           6.  `move v12 #q1 #t12 #q0`
           7.  `calibrate v12 #q0 #y0 v18 v10`
           8.  `take_image v12 #q0 #y0 v18 v10 v11`
           9.  `move v12 #q0 #t2 #q1`
           10. `send_image v12 #q1 #y1 v9 v18 v11`
           11. `move v12 #q1 #t9 #q4`
           12. `calibrate v12 #q4 #y3 v19 v10`
           13. `take_image v12 #q4 #y3 v19 v10 v11`
           14. `move v12 #q4 #t4 #q1`
           15. `send_image v12 #q1 #y1 v9 v19 v11`
           
           The `imagevisible` and `comvisible` facts are present in the initial state.
           
           After securing the images, I move on to sampling and analysis. I will ensure that the condition `receivedanalysis` is true for a stone and a soil sample. I am going to utilize rover `v12` and rover `v14` for sampling the rocks.
           
           -   For rover `v12`:
           
               1.  `move v12 #q1 #o2 #o5`
               2.  `sample_rock v12 #o5 v4 v16`
               3.  `move v12 #o5 #o2 #q1`
               4.  `send_analysis v12 #q1 #y1 v9 v4`
               5.  `drop_rock v12 v16`
               6. `move v12 #q1 #t8 v13`
           -   For rover `v14`:
           
               1.  `move v14 v15 #o2 #o5`
               2.  `sample_rock v14 #o5 v7 v16`
               3.  `move v14 #o5 #o2 #o0`
               4.  `send_analysis v14 #o0 #o1 v9 v7`
               5.  `drop_rock v14 v16`
               6. `move v14 #o0 #o2 v15`
           
           This sequence carefully satisfies all the predicates in the initial and final states.
           

