User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g1: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p1: object
           #q2: object
           #q3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           @sink: object
           @stove: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v14)
           Atom graspable(v15)
           Atom pose(v15, v16)
           Atom atpose(v15, v16)
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g1)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v12, v13, #g1, #q2, #t4)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v12, #p1, #g1, #q3, #t6)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q3)
           Atom btraj(#t7)
           Atom basemotion(#q2, #t7, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q3 #t7))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p1 #g1 #q3 #t6))
           ((place v4 v12 #p1 #g1 #q3 #t6))
           ((pick v4 v12 v13 #g1 #q2 #t4))
           ((place v4 v12 v13 #g1 #q2 #t4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true. From the initial state, we know `type(v12, v17)` is true. Therefore, to satisfy the goal, we need to achieve `on(v12, v18)`.
           
           The `on` predicate is an axiom, defined as `supported(?o, ?p, ?r)` and `atpose(?o, ?p)`. We already have `supported(v12, #p1, v18)`. So, the remaining sub-goal is to make `atpose(v12, #p1)` true.
           
           Currently, `v12` is at `v13` (`atpose(v12, v13)`). To move `v12` from `v13` to `#p1`, we need to pick it up and then place it down.
           
           Looking at the available actions:
           1. `pick v4 v12 v13 #g1 #q2 #t4`: This action picks `v12` from `v13` using arm `v4`.
              - Preconditions: `kin(v4, v12, v13, #g1, #q2, #t4)`, `atpose(v12, v13)`, `handempty(v4)`, `atbconf(#q2)`.
              - We have `atpose(v12, v13)`, `handempty(v4)`, and `kin(v4, v12, v13, #g1, #q2, #t4)`. However, `atbconf(#q2)` is not true; `atbconf(v3)` is true. So, we need to move the base to `#q2` first.
           
           2. `move_base v3 #q2 #t5`: This moves the robot base from `v3` to `#q2`.
              - Preconditions: `basemotion(v3, #t5, #q2)`, `atbconf(v3)`, `canmove()`.
              - All these are true in the initial state.
           
           After picking `v12`, we need to place it at `#p1`.
           3. `place v4 v12 #p1 #g1 #q3 #t6`: This action places `v12` at `#p1` using arm `v4`.
              - Preconditions: `kin(v4, v12, #p1, #g1, #q3, #t6)`, `atgrasp(v4, v12, #g1)`, `atbconf(#q3)`.
              - `kin(v4, v12, #p1, #g1, #q3, #t6)` is true.
              - We will achieve `atgrasp(v4, v12, #g1)` after picking.
              - However, `atbconf(#q3)` is not true. We need to move the base to `#q3` after picking and before placing.
           
           4. `move_base #q2 #q3 #t7`: This moves the robot base from `#q2` to `#q3`.
              - Preconditions: `basemotion(#q2, #t7, #q3)`, `atbconf(#q2)`, `canmove()`.
              - `atbconf(#q2)` will be true after the first move. `canmove()` will be true after the pick action.
           
           So the plan is:
           1. Move base to `#q2`.
           2. Pick `v12` from `v13`.
           3. Move base to `#q3`.
           4. Place `v12` at `#p1`.
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v12 v13 #g1 #q2 #t4)
           (move_base #q2 #q3 #t7)
           (place v4 v12 #p1 #g1 #q3 #t6)

