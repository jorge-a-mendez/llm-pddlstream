User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #t0: object
           #t1: object
           #t10: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v14, v16)
           Atom type(v4, v2)
           Atom type(v1, v2)
           Atom objective(v17)
           Atom atconf(v12, v13)
           Atom camera(v10)
           Atom rover(v12)
           Atom type(v7, v6)
           Atom store(v16)
           Atom rock(v8)
           Atom objective(v18)
           Atom type(v3, v2)
           Atom rock(v3)
           Atom conf(v12, v13)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom type(v5, v6)
           Atom objective(v19)
           Atom rock(v4)
           Atom free(v12, v16)
           Atom supports(v10, v11)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom mode(v11)
           Atom rock(v5)
           Atom onboard(v10, v14)
           Atom type(v8, v6)
           Atom lander(v9)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v7)
           Atom comvisible(v14, #q4, #y3, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q5, #y4, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q2, #y2, v19)
           Atom imagerange(v14, #q2, v19)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #q6, v5)
           Atom conf(v12, #q6)
           Atom above(v12, #q3, v3)
           Atom conf(v12, #q3)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v7)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #o5, v1)
           Atom above(v14, #o5, v1)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #t2, v15)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t0, v13)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t3, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #t1, #q1)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v14, #q0, #t5, #q4)
           Atom motion(v14, v15, #t8, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #t7, #q4)
           Atom motion(v14, v15, #t10, #q5)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, v15, #t9, #q2)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t6, #q4)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, v13, #t4, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #o3, #o2, #q3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #q6)
           Atom motion(v12, #q1, #o2, #o3)
           Atom motion(v12, #q6, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #q3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q3 v3 v16))
           ((sample_rock v12 #q6 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q1))
           ((move v12 #o3 #o2 #q3))
           ((move v12 #o3 #o2 #q6))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #t0 v13))
           ((move v12 #q3 #o2 #o3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t1 #q1))
           ((move v12 #q6 #o2 #o3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t3 #q3))
           ((move v12 v13 #t4 #q6))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t5 #q4))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t6 #q4))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #t2 v15))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t7 #q4))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q5))
           ((move v14 v15 #t8 #q0))
           ((move v14 v15 #t9 #q2))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q2 #y2 v19 v10))
           ((calibrate v14 #q5 #y4 v17 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q2 #y2 v19 v10 v11))
           ((take_image v14 #q5 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y3 v9 v1))
           ((send_analysis v14 #q4 #y3 v9 v3))
           ((send_analysis v14 #q4 #y3 v9 v4))
           ((send_analysis v14 #q4 #y3 v9 v5))
           ((send_analysis v14 #q4 #y3 v9 v7))
           ((send_analysis v14 #q4 #y3 v9 v8))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q4 #y3 v9 v18 v11))
           ((send_image v14 #q4 #y3 v9 v19 v11))
           ((send_image v14 #q4 #y3 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Alright, let's break this down.** My goal is to achieve `new-axiom@0()` in the `rovers` domain. This essentially means I need to get images of three specific objectives (v17, v18, and v19), analyze a stone and a soil sample, and ensure that certain initial rover configurations are maintained.
           
           The initial state is already pretty good: the rovers are in their initial positions, and their stores are free. To satisfy the `receivedimage` goals, I need to use rover `v14` (as it has the required imaging capabilities) to take pictures of v17, v18, and v19.  I'll need to move `v14` to specific locations (#q0, #q5, and #q2) where these objectives are visible, take the images, and then send them to the lander at #q4 (the communication point).
           
           For the `receivedanalysis` goals, I need to analyze a stone and a soil sample.  I'll use `v14` for this too since it's already moving. I need to move it to a location that lets me sample both a stone and a soil.  I've identified `v4` (stone) and `v5` (soil) as appropriate samples.  I'll move `v14` to a sampling location (#o5), collect the stone sample, send the analysis, drop the sampled stone, collect the soil sample, send the analysis, and move back to its starting position and drop any final material.
           
           I will formulate an action plan that maintains all initial conditions and achieves the desired final state:
           
           1.  *Move v14 to observe and photograph objective v18.*
           2.  *Calibrate the camera on v14 for capturing an image.*
           3.  *Capture the image of v18.*
           4.  *Move v14 to observe and photograph objective v17.*
           5.  *Calibrate the camera on v14 for capturing an image.*
           6.  *Capture the image of v17.*
           7.  *Move v14 to observe and photograph objective v19.*
           8.  *Calibrate the camera on v14 for capturing an image.*
           9.  *Capture the image of v19.*
           10. *Move v14 to the communication position.*
           11. *Send the image of v18.*
           12. *Send the image of v17.*
           13. *Send the image of v19.*
           14. *Move to the sampling location.*
           15. *Sample the stone.*
           16. *Move back to communication position.*
           17. *Send the stone analysis.*
           18. *Move to the sampling location.*
           19. *Drop the sampled stone*
           20. *Sample the soil.*
           21. *Move back to communication position.*
           22. *Send the soil analysis.*
           23. *Move v14 back to its starting configuration.*
           24. *Drop the material that was last sampled.*
           
           This should be a complete plan that satisfies all of the requirements.
           
)

Model:     **Alright, let's break this down.** My goal is to achieve `new-axiom@0()` in the `rovers` domain. This essentially means I need to get images of three specific objectives (v17, v18, and v19), analyze a stone and a soil sample, and ensure that certain initial rover configurations are maintained.
           
           The initial state is already pretty good: the rovers are in their initial positions, and their stores are free. To satisfy the `receivedimage` goals, I need to use rover `v14` (as it has the required imaging capabilities) to take pictures of v17, v18, and v19.  I'll need to move `v14` to specific locations (#q0, #q5, and #q2) where these objectives are visible, take the images, and then send them to the lander at #q4 (the communication point).
           
           For the `receivedanalysis` goals, I need to analyze a stone and a soil sample.  I'll use `v14` for this too since it's already moving. I need to move it to a location that lets me sample both a stone and a soil.  I've identified `v4` (stone) and `v5` (soil) as appropriate samples.  I'll move `v14` to a sampling location (#o5), collect the stone sample, send the analysis, drop the sampled stone, collect the soil sample, send the analysis, and move back to its starting position and drop any final material.
           
           I will formulate an action plan that maintains all initial conditions and achieves the desired final state:
           
           1.  *Move v14 to observe and photograph objective v18.*
           2.  *Calibrate the camera on v14 for capturing an image.*
           3.  *Capture the image of v18.*
           4.  *Move v14 to observe and photograph objective v17.*
           5.  *Calibrate the camera on v14 for capturing an image.*
           6.  *Capture the image of v17.*
           7.  *Move v14 to observe and photograph objective v19.*
           8.  *Calibrate the camera on v14 for capturing an image.*
           9.  *Capture the image of v19.*
           10. *Move v14 to the communication position.*
           11. *Send the image of v18.*
           12. *Send the image of v17.*
           13. *Send the image of v19.*
           14. *Move to the sampling location.*
           15. *Sample the stone.*
           16. *Move back to communication position.*
           17. *Send the stone analysis.*
           18. *Move to the sampling location.*
           19. *Drop the sampled stone*
           20. *Sample the soil.*
           21. *Move back to communication position.*
           22. *Send the soil analysis.*
           23. *Move v14 back to its starting configuration.*
           24. *Drop the material that was last sampled.*
           
           This should be a complete plan that satisfies all of the requirements.
           

