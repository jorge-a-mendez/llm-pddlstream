User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.563, 2.074), (0.65, 2.162)).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.508, 1.822), (-0.429, 1.901)).
           Object v5 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.181, 1.302), (1.316, 1.436)).
           Object v1 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.369, -0.911), (-0.265, -0.807)).
           Object v4 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.931, -0.464), (2.037, -0.358)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.187, -1.929), (-0.821, -1.571)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.821, -1.929), (1.187, -1.571)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.854, 1.137), (-1.719, 1.271)).
           Object v3 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.716, -1.56), (1.812, -1.464)).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.235, 1.798), (-2.164, 1.869)).
           Object v7 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.756, -0.853), (-1.619, -0.716)).
           Object v9 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.405, -2.346), (-1.395, -1.654)).
           Object v15 is a base configuration with (x, y, theta) = (-1.0, -1.75, 0.0).
           Object v13 is a base configuration with (x, y, theta) = (1.0, -1.75, 3.142).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v1, v2)
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom store(v16)
           Atom mode(v11)
           Atom objective(v19)
           Atom atconf(v12, v13)
           Atom camera(v10)
           Atom type(v8, v6)
           Atom type(v5, v6)
           Atom free(v12, v16)
           Atom rock(v8)
           Atom lander(v9)
           Atom rock(v7)
           Atom onboard(v10, v14)
           Atom rock(v4)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom type(v4, v2)
           Atom rock(v5)
           Atom objective(v18)
           Atom onboard(v10, v12)
           Atom type(v7, v6)
           Atom free(v14, v16)
           Atom conf(v14, v15)
           Atom objective(v17)
           Atom rock(v3)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v5)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v4)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v8)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `new-axiom@0()`, which is an axiom representing a complex set of conditions that need to be true. Let's break down the conditions of `new-axiom@0()`:
           1. `atconf(v12, v13)`: Rover `v12` is at configuration `v13`. This is true in the initial state.
           2. `atconf(v14, v15)`: Rover `v14` is at configuration `v15`. This is true in the initial state.
           3. `free(v12, v16)`: Storage `v16` on rover `v12` is free. This is true in the initial state.
           4. `free(v14, v16)`: Storage `v16` on rover `v14` is free. This is true in the initial state.
           5. `receivedimage(v17, v11)`: Image of objective `v17` with mode `v11` has been received. This needs to be achieved.
           6. `receivedimage(v18, v11)`: Image of objective `v18` with mode `v11` has been received. This needs to be achieved.
           7. `receivedimage(v19, v11)`: Image of objective `v19` with mode `v11` has been received. This needs to be achieved.
           8. `type(?stone, v2)`: There is a rock of type `v2`. This is satisfied by `v1`, `v3`, `v4`.
           9. `receivedanalysis(?stone)`: A rock of type `v2` has been analyzed and sent. This needs to be achieved.
           10. `type(?soil, v6)`: There is a rock of type `v6`. This is satisfied by `v5`, `v7`, `v8`.
           11. `receivedanalysis(?soil)`: A rock of type `v6` has been analyzed and sent. This needs to be achieved.
           
           To achieve `receivedimage` and `receivedanalysis` conditions, we need to perform `take_image`, `send_image`, `sample_rock`, and `send_analysis` actions. However, the provided list of allowed action instances only includes `move` and `drop_rock` actions. This means that we cannot take images, send images, sample rocks, or send analysis. Therefore, the goal cannot be achieved with the given allowed actions.
           
           The goal `new-axiom@0()` cannot be satisfied because there are no available actions to `take_image`, `send_image`, `sample_rock`, or `send_analysis`. The provided action instances only allow for `move` and `drop_rock`, which are insufficient to achieve the conditions related to `receivedimage` and `receivedanalysis`. Thus, the goal is unreachable.

