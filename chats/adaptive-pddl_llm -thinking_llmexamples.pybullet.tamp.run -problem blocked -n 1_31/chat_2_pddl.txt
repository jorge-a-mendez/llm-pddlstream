User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v12)
           Atom atpose(v8, v9)
           Atom atpose(v15, v16)
           Atom stackable(v12, v18)
           Atom type(v8, v17)
           Atom aconf(v4, v5)
           Atom pose(v12, v13)
           Atom controllable(v4)
           Atom stackable(v12, v10)
           Atom pose(v8, v9)
           Atom aconf(v6, v7)
           Atom supported(v15, v16, v11)
           Atom handempty(v6)
           Atom ataconf(v4, v5)
           Atom arm(v6)
           Atom graspable(v15)
           Atom ataconf(v6, v7)
           Atom handempty(v4)
           Atom graspable(v8)
           Atom supported(v12, v13, v14)
           Atom atbconf(v3)
           Atom bconf(v3)
           Atom canmove()
           Atom stackable(v8, v18)
           Atom pose(v15, v16)
           Atom atpose(v12, v13)
           Atom type(v12, v17)
           Atom arm(v4)
           Atom stackable(v15, v10)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #o1)
           Atom grasp(v12, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom grasp(v15, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Path to `new-axiom@0()` in PR2-TAMP**
           
           My objective is to construct a plan that achieves the goal `new-axiom@0()`, which translates to making the conjunction `on(?green, v18)` AND `type(?green, v17)` true. I know that in this particular context, `?green` needs to be one of the objects already present in the initial state of the scenario. I began by checking the initial state for objects of the required type, `v17`.  I determined that either `v8` or `v12` were potential candidates because the initial state included `type(v8, v17)` and `type(v12, v17)`.
           
           Then I considered the "on" condition and its definition in the axioms, it's defined as a combination of `supported(?o, ?p, ?r)` and `atpose(?o, ?p)`.  I reviewed what could support and/or be atpose of `v18`.  Through analysis of the initial facts, I discovered that both `v8` and `v12` were initially supported by `v18`. I decided to use `v12` as the instance of `?green`.
           
           Now, with `v12` as my choice, I know that `type(v12, v17)` is already true in the initial state, so the key is to make `on(v12, v18)` true. This means I need to manipulate the scene to find a position, `?p_new`, such that `supported(v12, ?p_new, v18)` and `atpose(v12, ?p_new)` are true.  Because I saw the fact `supported(v12, #o2, v18)`, I reasoned that if I could make `atpose(v12, #o2)` true, I would have achieved my goal.
           
           Currently, `v12` is at `v13` (`atpose(v12, v13)`). To change its pose, I must move `v12` from its current pose `v13` to `#o2`. This requires two atomic actions: a pick action and a place action.
           
           First, I examined available actions in the domain model. I found and chose to use the `pick` action, with arm `v4`, object `v12`, and support pose `v13`, and then I chose a grasp `o1`, base pose `#o3` and attraj `#o4` as parameters, giving `pick v4 v12 v13 #o1 #o3 #o4`.  The preconditions for picking require that the base is at the desired location. Therefore, because the base is at `v3`, I must move the base to the location `#o3` using the `move_base` action, or `(move_base v3 #o3 #o0)`.
           
           After moving the base, I can execute the pick action. I then placed `v12` at `#o2` with the action `place v4 v12 #o2 #o1 #o3 #o4`.
           
           With this execution I have now established the goals.  I have made `atpose(v12, #o2)` which, when combined with the initial state fact `supported(v12, #o2, v18)`, achieves `on(v12, v18)`. And as established the `type` aspect of the goal was already satisfied.
           
           Therefore, the plan that I devised to achieve the new-axiom is:
           1.  `(move_base v3 #o3 #o0)`
           2.  `(pick v4 v12 v13 #o1 #o3 #o4)`
           3.  `(place v4 v12 #o2 #o1 #o3 #o4)`
           
)

Model:     **The Path to `new-axiom@0()` in PR2-TAMP**
           
           My objective is to construct a plan that achieves the goal `new-axiom@0()`, which translates to making the conjunction `on(?green, v18)` AND `type(?green, v17)` true. I know that in this particular context, `?green` needs to be one of the objects already present in the initial state of the scenario. I began by checking the initial state for objects of the required type, `v17`.  I determined that either `v8` or `v12` were potential candidates because the initial state included `type(v8, v17)` and `type(v12, v17)`.
           
           Then I considered the "on" condition and its definition in the axioms, it's defined as a combination of `supported(?o, ?p, ?r)` and `atpose(?o, ?p)`.  I reviewed what could support and/or be atpose of `v18`.  Through analysis of the initial facts, I discovered that both `v8` and `v12` were initially supported by `v18`. I decided to use `v12` as the instance of `?green`.
           
           Now, with `v12` as my choice, I know that `type(v12, v17)` is already true in the initial state, so the key is to make `on(v12, v18)` true. This means I need to manipulate the scene to find a position, `?p_new`, such that `supported(v12, ?p_new, v18)` and `atpose(v12, ?p_new)` are true.  Because I saw the fact `supported(v12, #o2, v18)`, I reasoned that if I could make `atpose(v12, #o2)` true, I would have achieved my goal.
           
           Currently, `v12` is at `v13` (`atpose(v12, v13)`). To change its pose, I must move `v12` from its current pose `v13` to `#o2`. This requires two atomic actions: a pick action and a place action.
           
           First, I examined available actions in the domain model. I found and chose to use the `pick` action, with arm `v4`, object `v12`, and support pose `v13`, and then I chose a grasp `o1`, base pose `#o3` and attraj `#o4` as parameters, giving `pick v4 v12 v13 #o1 #o3 #o4`.  The preconditions for picking require that the base is at the desired location. Therefore, because the base is at `v3`, I must move the base to the location `#o3` using the `move_base` action, or `(move_base v3 #o3 #o0)`.
           
           After moving the base, I can execute the pick action. I then placed `v12` at `#o2` with the action `place v4 v12 #o2 #o1 #o3 #o4`.
           
           With this execution I have now established the goals.  I have made `atpose(v12, #o2)` which, when combined with the initial state fact `supported(v12, #o2, v18)`, achieves `on(v12, v18)`. And as established the `type` aspect of the goal was already satisfied.
           
           Therefore, the plan that I devised to achieve the new-axiom is:
           1.  `(move_base v3 #o3 #o0)`
           2.  `(pick v4 v12 v13 #o1 #o3 #o4)`
           3.  `(place v4 v12 #o2 #o1 #o3 #o4)`
           

