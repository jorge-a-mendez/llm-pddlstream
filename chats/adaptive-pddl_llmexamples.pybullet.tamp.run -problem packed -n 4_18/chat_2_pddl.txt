User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom arm(v6)
           Atom atpose(v8, v9)
           Atom canmove()
           Atom stackable(v12, v10)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v16, v17)
           Atom graspable(v12)
           Atom stackable(v16, v10)
           Atom bconf(v3)
           Atom stackable(v8, v10)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom handempty(v4)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom supported(v16, v17, v11)
           Atom pose(v12, v13)
           Atom pose(v16, v17)
           Atom stackable(v12, v18)
           Atom pose(v8, v9)
           Atom aconf(v4, v5)
           Atom aconf(v6, v7)
           Atom atpose(v12, v13)
           Atom stackable(v16, v18)
           Atom stackable(v14, v18)
           Atom ataconf(v4, v5)
           Atom supported(v14, v15, v11)
           Atom controllable(v4)
           Atom graspable(v16)
           Atom stackable(v8, v18)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v12, v13, v11)
           Atom supported(v8, v9, v11)
           Atom handempty(v6)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v16, #o1)
           Atom supported(v14, #o2, v18)
           Atom grasp(v14, #o1)
           Atom supported(v8, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v16, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom grasp(v12, #o1)
           Atom grasp(v8, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v16 #o2 #o1 #o3 #o4))
           ((place v4 v16 #o2 #o1 #o3 #o4))
           ((pick v4 v16 v17 #o1 #o3 #o4))
           ((place v4 v16 v17 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (v8, v12, v14, v16) that are currently on `v11` (based on `supported` and `atpose` facts). The goal is to move all these objects from `v11` to `v18`. The robot has two arms, `v4` and `v6`. `v4` is currently handempty and `ataconf(v4, v5)`. The robot's base is at `v3`. The `pick` and `place` actions for all relevant objects use arm `v4`, grasp `#o1`, base configuration `#o3`, and arm trajectory `#o4`. The robot needs to change its base configuration to `#o3` before picking or placing any objects, and it has the ability to move between `v3` and `#o3`.
           
           The plan will involve:
           1. Moving the robot base to `#o3`.
           2. For each object (v8, v12, v14, v16):
               a. Picking the object from its current pose on `v11`.
               b. Placing the object at a new pose on `v18`. Note that the `supported` facts indicate that objects can be placed on `v18` at pose `#o2`. The initial poses of these objects are also given (e.g., `v8` at `v9`).
           The goal uses the `on` axiom, which means for `on(object, surface)` to be true, `supported(object, pose, surface)` and `atpose(object, pose)` must be true.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v16 v17 #o1 #o3 #o4)
           (place v4 v16 #o2 #o1 #o3 #o4)

