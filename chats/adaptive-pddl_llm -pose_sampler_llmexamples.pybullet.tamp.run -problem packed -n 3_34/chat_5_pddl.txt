User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v14, v15, v11)
           Atom pose(v12, v13)
           Atom arm(v4)
           Atom supported(v8, v9, v11)
           Atom stackable(v8, v10)
           Atom atbconf(v3)
           Atom pose(v14, v15)
           Atom atpose(v12, v13)
           Atom handempty(v4)
           Atom handempty(v6)
           Atom stackable(v12, v16)
           Atom supported(v12, v13, v11)
           Atom controllable(v4)
           Atom atpose(v14, v15)
           Atom aconf(v4, v5)
           Atom atpose(v8, v9)
           Atom stackable(v14, v16)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom ataconf(v6, v7)
           Atom aconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom arm(v6)
           Atom stackable(v8, v16)
           Atom graspable(v12)
           Atom bconf(v3)
           Atom stackable(v12, v10)
           Atom canmove()
           Atom graspable(v14)
           Atom stackable(v14, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #g0)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #g1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v16)
           Atom pose(v8, #p2)
           Atom supported(v8, #p2, v16)
           Atom grasp(v8, #g2)
           Atom pose(v14, #p1)
           Atom supported(v14, #p1, v16)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, v15, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, #p0, #g1, #q1, #t1)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v12, v13, #g1, #q5, #t5)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v8, v9, #g2, #q4, #t4)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v8, #p2, #g2, #q3, #t3)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, #p1, #g0, #q2, #t2)
           Atom basemotion(#q5, #o0, #q5)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q5)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q5, #o0, #q3)
           Atom btraj(#t18)
           Atom basemotion(#q3, #t18, #q5)
           Atom btraj(#t15)
           Atom basemotion(#q4, #t15, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t13)
           Atom basemotion(#q2, #t13, #q5)
           Atom btraj(#t12)
           Atom basemotion(#q0, #t12, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom btraj(#t16)
           Atom basemotion(#q1, #t16, #q4)
           Atom btraj(#t17)
           Atom basemotion(#q1, #t17, #q0)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t14)
           Atom basemotion(#q5, #t14, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q2 #t12))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q4 #t16))
           ((move_base #q1 #q0 #t17))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t13))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q5 #t18))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q3 #t15))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q1 #t14))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t10))
           ((move_base v3 #q5 #t11))
           ((move_base v3 #q0 #t6))
           ((move_base v3 #q1 #t7))
           ((move_base v3 #q2 #t8))
           ((move_base v3 #q3 #t9))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p0 #g1 #q1 #t1))
           ((place v4 v12 #p0 #g1 #q1 #t1))
           ((pick v4 v12 v13 #g1 #q5 #t5))
           ((place v4 v12 v13 #g1 #q5 #t5))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 #p1 #g0 #q2 #t2))
           ((place v4 v14 #p1 #g0 #q2 #t2))
           ((pick v4 v14 v15 #g0 #q0 #t0))
           ((place v4 v14 v15 #g0 #q0 #t0))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p2 #g2 #q3 #t3))
           ((place v4 v8 #p2 #g2 #q3 #t3))
           ((pick v4 v8 v9 #g2 #q4 #t4))
           ((place v4 v8 v9 #g2 #q4 #t4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes three objects, `v8`, `v12`, and `v14`, and their initial poses. All three objects are currently on `v11` (based on `supported` and `atpose` facts like `supported(v12, v13, v11)` and `atpose(v12, v13)`). The robot arm `v4` is currently at a base configuration `v3` and its hand is empty. The goal is to place all three objects (`v8`, `v12`, and `v14`) on `v16`. To achieve this, the robot needs to pick up each object from its current location and place it on a pose supported by `v16`.
           
           Let's break down the goal for each object:
           1. `on(v8, v16)`: This means `v8` needs to be picked from `v11` and placed on `v16`. We have a pose `v9` where `v8` is on `v11` and a pose `#p2` where `v8` can be placed on `v16`.
           2. `on(v12, v16)`: This means `v12` needs to be picked from `v11` and placed on `v16`. We have a pose `v13` where `v12` is on `v11` and a pose `#p0` where `v12` can be placed on `v16`.
           3. `on(v14, v16)`: This means `v14` needs to be picked from `v11` and placed on `v16`. We have a pose `v15` where `v14` is on `v11` and a pose `#p1` where `v14` can be placed on `v16`.
           
           The plan will involve picking each object from its initial location and placing it onto the target surface `v16`. This requires base movements to the correct configurations for picking and placing.
           
           For `v8`:
           - Current pose: `v9`, current bconf: `v3`. Pick requires `kin(v4, v8, v9, #g2, #q4, #t4)`, so move to `#q4`.
           - Target pose: `#p2`, current bconf: `#q4`. Place requires `kin(v4, v8, #p2, #g2, #q3, #t3)`, so move to `#q3`.
           
           For `v12`:
           - Current pose: `v13`, current bconf: `v3` (after moving `v8`). Pick requires `kin(v4, v12, v13, #g1, #q5, #t5)`, so move to `#q5`.
           - Target pose: `#p0`, current bconf: `#q5`. Place requires `kin(v4, v12, #p0, #g1, #q1, #t1)`, so move to `#q1`.
           
           For `v14`:
           - Current pose: `v15`, current bconf: `v3` (after moving `v8` and `v12`). Pick requires `kin(v4, v14, v15, #g0, #q0, #t0)`, so move to `#q0`.
           - Target pose: `#p1`, current bconf: `#q0`. Place requires `kin(v4, v14, #p1, #g0, #q2, #t2)`, so move to `#q2`.
           
           Let's sequence these actions:
           
           1. **Move to pick `v8`**: From `v3` to `#q4`.
           2. **Pick `v8`**: At `v9`.
           3. **Move to place `v8`**: From `#q4` to `#q3`.
           4. **Place `v8`**: At `#p2`.
           5. **Move to pick `v12`**: From `#q3` to `#q5`.
           6. **Pick `v12`**: At `v13`.
           7. **Move to place `v12`**: From `#q5` to `#q1`.
           8. **Place `v12`**: At `#p0`.
           9. **Move to pick `v14`**: From `#q1` to `#q0`.
           10. **Pick `v14`**: At `v15`.
           11. **Move to place `v14`**: From `#q0` to `#q2`.
           12. **Place `v14`**: At `#p1`.
           
           --Plan--:
           (move_base v3 #q4 #t10)
           (pick v4 v8 v9 #g2 #q4 #t4)
           (move_base #q4 #q3 #t15)
           (place v4 v8 #p2 #g2 #q3 #t3)
           (move_base #q3 #q5 #t18)
           (pick v4 v12 v13 #g1 #q5 #t5)
           (move_base #q5 #q1 #t14)
           (place v4 v12 #p0 #g1 #q1 #t1)
           (move_base #q1 #q0 #t17)
           (pick v4 v14 v15 #g0 #q0 #t0)
           (move_base #q0 #q2 #t12)
           (place v4 v14 #p1 #g0 #q2 #t2)

