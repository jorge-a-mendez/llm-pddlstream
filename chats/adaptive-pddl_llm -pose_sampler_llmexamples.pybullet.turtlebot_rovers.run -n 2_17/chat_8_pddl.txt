User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom lander(v9)
           Atom objective(v18)
           Atom rock(v3)
           Atom rock(v7)
           Atom camera(v10)
           Atom mode(v11)
           Atom free(v12, v16)
           Atom rock(v8)
           Atom supports(v10, v11)
           Atom conf(v14, v15)
           Atom atconf(v14, v15)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom rock(v1)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom conf(v12, v13)
           Atom type(v1, v2)
           Atom type(v5, v6)
           Atom rock(v5)
           Atom rock(v4)
           Atom rover(v14)
           Atom store(v16)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom type(v7, v6)
           Atom onboard(v10, v14)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom above(v14, #q2, v1)
           Atom conf(v14, #q2)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q3, #y2, v17)
           Atom imagerange(v14, #q3, v17)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #q10, v4)
           Atom conf(v14, #q10)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q13, v7)
           Atom conf(v14, #q13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q11, v4)
           Atom conf(v12, #q11)
           Atom above(v12, #q8, v3)
           Atom conf(v12, #q8)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v12, #q7, v5)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #q14, v8)
           Atom conf(v12, #q14)
           Atom above(v12, #q9, v7)
           Atom conf(v12, #q9)
           Atom comvisible(v12, #q6, #y3, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y3)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #t17, #q8)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, v15, #t7, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q1, #t2, v15)
           Atom motion(v14, #q4, #t19, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t4, #q4)
           Atom motion(v14, #q3, #t6, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, v15, #t1, #q0)
           Atom motion(v14, #q0, #t5, #q1)
           Atom motion(v14, #q0, #t28, #q3)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q3, #t8, #q0)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q1, #t21, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q10, #t22, #q1)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v12, #q6, #t27, #q8)
           Atom motion(v12, #q11, #t26, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q8, #t16, #q6)
           Atom motion(v12, #q6, #t11, v13)
           Atom motion(v12, #q6, #t23, #q11)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #t20, #q6)
           Atom motion(v12, #q6, #t18, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q2, #t0, #q1)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q1, #t3, #q2)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q14, #t29, #q6)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, v13, #t30, #q14)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q1, #t24, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q0)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, #q12, #t25, #q1)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #t10, #q6)
           Atom motion(v12, v13, #t15, #q7)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q6, #t13, #q7)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q6, #t12, #q5)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #t9, #q6)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, v13, #t14, #q5)
           Atom motion(v12, #o3, #o2, #q11)
           Atom motion(v12, #o3, #o2, #q6)
           Atom motion(v12, #q11, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q8)
           Atom motion(v12, #q14, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q14)
           Atom motion(v12, #o3, #o2, #q9)
           Atom motion(v12, #q8, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #q9, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q5)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #q6, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q7)
           Atom motion(v12, #q5, #o2, #o3)
           Atom motion(v12, #q7, #o2, #o3)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q11 v4 v16))
           ((sample_rock v12 #q14 v8 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #q10 v4 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q13 v7 v16))
           ((sample_rock v14 #q2 v1 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #q11))
           ((move v12 #o3 #o2 #q14))
           ((move v12 #o3 #o2 #q5))
           ((move v12 #o3 #o2 #q6))
           ((move v12 #o3 #o2 #q7))
           ((move v12 #o3 #o2 #q8))
           ((move v12 #o3 #o2 #q9))
           ((move v12 #o3 #o2 v13))
           ((move v12 #q11 #o2 #o3))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t26 #q6))
           ((move v12 #q14 #o2 #o3))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t29 #q6))
           ((move v12 #q5 #o2 #o3))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t9 #q6))
           ((move v12 #q6 #o2 #o3))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #t11 v13))
           ((move v12 #q6 #t12 #q5))
           ((move v12 #q6 #t13 #q7))
           ((move v12 #q6 #t18 #q9))
           ((move v12 #q6 #t23 #q11))
           ((move v12 #q6 #t27 #q8))
           ((move v12 #q7 #o2 #o3))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t10 #q6))
           ((move v12 #q8 #o2 #o3))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t16 #q6))
           ((move v12 #q9 #o2 #o3))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t20 #q6))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t14 #q5))
           ((move v12 v13 #t15 #q7))
           ((move v12 v13 #t17 #q8))
           ((move v12 v13 #t30 #q14))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t28 #q3))
           ((move v14 #q0 #t5 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #t2 v15))
           ((move v14 #q1 #t21 #q10))
           ((move v14 #q1 #t24 #q12))
           ((move v14 #q1 #t3 #q2))
           ((move v14 #q1 #t4 #q4))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t22 #q1))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t25 #q1))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t0 #q1))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t6 #q1))
           ((move v14 #q3 #t8 #q0))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t19 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((move v14 v15 #t7 #q3))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q3 #y2 v17 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q3 #y2 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y3 v9 v4))
           ((send_analysis v12 #q6 #y3 v9 v8))
           ((send_analysis v12 #q6 #y3 v9 v1))
           ((send_analysis v12 #q6 #y3 v9 v5))
           ((send_analysis v12 #q6 #y3 v9 v3))
           ((send_analysis v12 #q6 #y3 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #q6 #y3 v9 v17 v11))
           ((send_image v12 #q6 #y3 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), a store (v16), and several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18). The camera v10 supports mode v11. Rocks are classified as type v2 or v6.
           
           The goal `new-axiom@0()` represents a complex state that requires:
           - Both rovers (v12 and v14) to be at certain configurations (implied by `atconf` in the axiom conditions, and they are initially at v13 and v15 respectively).
           - Both rovers to have free storage (v16), which they initially do.
           - Images of both objectives (v17 and v18) to be received in mode v11.
           - Analysis of at least one rock of type v2 (v1, v3, v4) and at least one rock of type v6 (v5, v7, v8) to be received.
           
           To achieve the goal, we need to:
           1. Calibrate a camera.
           2. Take images of both objectives (v17 and v18) with a calibrated camera.
           3. Send these images to the lander.
           4. Sample at least one rock of type v2 and one rock of type v6.
           5. Send the analysis of these sampled rocks to the lander.
           
           Let's use rover v14 for imaging and analysis since it has a direct line of sight to objectives (v17, v18) and the lander (v9) from its initial configuration v15, or nearby configurations. Rover v12 can also be used, but v14 seems to be at a more central location for these tasks.
           
           Rover v14 is initially at `atconf(v14, v15)`.
           It can see objective v18 from configuration `#q0` (`imagevisible(v14, #q0, #y0, v18)`).
           It can see objective v17 from configuration `#q3` (`imagevisible(v14, #q3, #y2, v17)`).
           It can communicate with the lander v9 from configuration `#q1` (`comvisible(v14, #q1, #y1, v9)`).
           
           For rock analysis:
           Rover v14 is above rock v3 (type v2) at `#o5`.
           Rover v14 is above rock v4 (type v2) at `#q10`.
           Rover v14 is above rock v1 (type v2) at `#q2`.
           Rover v14 is above rock v5 (type v6) at `#q4`.
           Rover v14 is above rock v7 (type v6) at `#q13`.
           Rover v14 is above rock v8 (type v6) at `#q12`.
           
           Let's plan to take images and send them first, then sample and send analysis.
           
           1.  **Image v18**:
               *   Move v14 to `#q0`.
               *   Calibrate camera v10 at `#q0` for v18.
               *   Take image of v18.
               *   Move v14 to `#q1` (for communication).
               *   Send image of v18.
           
           2.  **Image v17**:
               *   Move v14 to `#q3`.
               *   Calibrate camera v10 at `#q3` for v17.
               *   Take image of v17.
               *   Move v14 to `#q1`.
               *   Send image of v17.
           
           3.  **Sample and analyze rocks**:
               *   We need one type v2 and one type v6. Let's pick v3 (type v2) and v5 (type v6).
               *   Move v14 to `#o5` to sample v3.
               *   Sample v3.
               *   Move v14 to `#q4` to sample v5.
               *   Sample v5.
               *   Move v14 to `#q1` for communication.
               *   Send analysis of v3.
               *   Send analysis of v5.
           
           We need to ensure that the camera `v10` is calibrated before taking each image. After `take_image`, the camera becomes uncalibrated, so it needs recalibration for the next image.
           
           Let's refine the plan:
           
           1.  Move v14 to `#q0`.
           2.  Calibrate v14's camera v10 at `#q0` for objective v18.
           3.  Take an image of v18 using v10 in mode v11.
           4.  Move v14 to `#q1` (a good communication point for v9).
           5.  Send the image of v18 to v9.
           
           6.  Move v14 to `#q3`.
           7.  Calibrate v14's camera v10 at `#q3` for objective v17.
           8.  Take an image of v17 using v10 in mode v11.
           9.  Move v14 to `#q1`.
           10. Send the image of v17 to v9.
           
           Now for rock analysis:
           11. Move v14 to `#o5` (above rock v3, type v2).
           12. Sample rock v3 using store v16.
           13. Move v14 to `#q4` (above rock v5, type v6).
           14. Sample rock v5 using store v16 (this will make store v16 full for v14).
           15. Move v14 to `#q1`.
           16. Send analysis of rock v3 to v9.
           17. Send analysis of rock v5 to v9.
           
           This plan addresses all subgoals of `new-axiom@0()`. The rovers are initially at valid `atconf` states, and their `free` status for store `v16` is also valid initially. The `blocked` predicate for rays are not explicitly stated, so they are assumed false.
           
           --Plan--:
           (move v14 v15 #t1 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t5 #q1)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (move v14 #q1 #t6 #q3)
           (calibrate v14 #q3 #y2 v17 v10)
           (take_image v14 #q3 #y2 v17 v10 v11)
           (move v14 #q3 #t6 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (move v14 #q1 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q4)
           (sample_rock v14 #q4 v5 v16)
           (move v14 #q4 #t19 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (send_analysis v14 #q1 #y1 v9 v5)

User:      The plan you provided contains the following invalid actions: `(move v14 #q1 #t6 #q3)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #q11 v4 v16))
           ((sample_rock v12 #q14 v8 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #q10 v4 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q13 v7 v16))
           ((sample_rock v14 #q2 v1 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #q11))
           ((move v12 #o3 #o2 #q14))
           ((move v12 #o3 #o2 #q5))
           ((move v12 #o3 #o2 #q6))
           ((move v12 #o3 #o2 #q7))
           ((move v12 #o3 #o2 #q8))
           ((move v12 #o3 #o2 #q9))
           ((move v12 #o3 #o2 v13))
           ((move v12 #q11 #o2 #o3))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t26 #q6))
           ((move v12 #q14 #o2 #o3))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t29 #q6))
           ((move v12 #q5 #o2 #o3))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t9 #q6))
           ((move v12 #q6 #o2 #o3))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #t11 v13))
           ((move v12 #q6 #t12 #q5))
           ((move v12 #q6 #t13 #q7))
           ((move v12 #q6 #t18 #q9))
           ((move v12 #q6 #t23 #q11))
           ((move v12 #q6 #t27 #q8))
           ((move v12 #q7 #o2 #o3))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t10 #q6))
           ((move v12 #q8 #o2 #o3))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t16 #q6))
           ((move v12 #q9 #o2 #o3))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t20 #q6))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t14 #q5))
           ((move v12 v13 #t15 #q7))
           ((move v12 v13 #t17 #q8))
           ((move v12 v13 #t30 #q14))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t28 #q3))
           ((move v14 #q0 #t5 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #t2 v15))
           ((move v14 #q1 #t21 #q10))
           ((move v14 #q1 #t24 #q12))
           ((move v14 #q1 #t3 #q2))
           ((move v14 #q1 #t4 #q4))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t22 #q1))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t25 #q1))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t0 #q1))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t6 #q1))
           ((move v14 #q3 #t8 #q0))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t19 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((move v14 v15 #t7 #q3))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q3 #y2 v17 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q3 #y2 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y3 v9 v4))
           ((send_analysis v12 #q6 #y3 v9 v8))
           ((send_analysis v12 #q6 #y3 v9 v1))
           ((send_analysis v12 #q6 #y3 v9 v5))
           ((send_analysis v12 #q6 #y3 v9 v3))
           ((send_analysis v12 #q6 #y3 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #q6 #y3 v9 v17 v11))
           ((send_image v12 #q6 #y3 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     My apologies for the invalid action in the previous plan. I missed that `(move v14 #q1 #t6 #q3)` was not in the allowed list. Let me re-evaluate the available `move` actions for `v14` to navigate between `#q1` and `#q3`.
           
           Looking at the available moves for `v14`:
           - To move from `#q1` to `#q3`: I see `(move v14 #q3 #t6 #q1)` but not `(move v14 #q1 #t6 #q3)`. However, there is `(move v14 #q0 #t28 #q3)` and `(move v14 #q3 #t8 #q0)`.
           - To move from `#q1` to `#q0`: `(move v14 #q1 #o2 #q0)`.
           - To move from `#q0` to `#q3`: `(move v14 #q0 #t28 #q3)`.
           
           So, to go from `#q1` to `#q3`, we can go `#q1 -> #q0 -> #q3`.
           
           Let's revise the plan with valid moves:
           
           1.  **Image v18**:
               *   Move v14 to `#q0` from v15.
               *   Calibrate camera v10 at `#q0` for v18.
               *   Take image of v18.
               *   Move v14 to `#q1` from `#q0` for communication.
               *   Send image of v18.
           
           2.  **Image v17**:
               *   Move v14 to `#q0` from `#q1`.
               *   Move v14 to `#q3` from `#q0`.
               *   Calibrate camera v10 at `#q3` for v17.
               *   Take image of v17.
               *   Move v14 to `#q0` from `#q3`.
               *   Move v14 to `#q1` from `#q0`.
               *   Send image of v17.
           
           3.  **Sample and analyze rocks**:
               *   Move v14 to `#o5` from `#q1`.
               *   Sample rock v3 (type v2).
               *   Move v14 to `#q4` from `#o5`.
               *   Sample rock v5 (type v6).
               *   Move v14 to `#q1` from `#q4`.
               *   Send analysis of v3.
               *   Send analysis of v5.
           
           This revised plan addresses the movement constraints.
           
           --Plan--:
           (move v14 v15 #t1 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t5 #q1)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (move v14 #q1 #o2 #q0)
           (move v14 #q0 #t28 #q3)
           (calibrate v14 #q3 #y2 v17 v10)
           (take_image v14 #q3 #y2 v17 v10 v11)
           (move v14 #q3 #t8 #q0)
           (move v14 #q0 #t5 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (move v14 #q1 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q4)
           (sample_rock v14 #q4 v5 v16)
           (move v14 #q4 #t19 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (send_analysis v14 #q1 #y1 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies. The `new-axiom@0()` condition not being satisfied means that after executing the plan, one or more of its sub-conditions were not met. Let's re-examine the `new-axiom@0()`:
           
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           My previous plan satisfied `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedanalysis(v3)` (where `type(v3, v2)`), and `receivedanalysis(v5)` (where `type(v5, v6)`).
           
           The issue must lie in the `atconf` or `free` conditions.
           - `atconf(v12, v13)`: Rover v12 starts at v13 and I never move it. This should be satisfied.
           - `atconf(v14, v15)`: Rover v14 starts at v15, but my plan moves it to various locations. At the end of the plan, `v14` is at `#q1`. This means `atconf(v14, v15)` is *not* satisfied at the end.
           - `free(v12, v16)`: Rover v12 starts with free store v16, and I never use it. This should be satisfied.
           - `free(v14, v16)`: Rover v14 starts with free store v16. I sample two rocks, `v3` and `v5`, using `v14` and `v16`. This would make `v14`'s store `v16` become `full`. Therefore, `free(v14, v16)` would *not* be satisfied at the end.
           
           To fix this, I need to ensure:
           1.  Rover v14 returns to `v15` at the end of the plan.
           2.  Rover v14 drops the sampled rocks from `v16` to make it `free` again.
           
           Let's modify the plan:
           
           1.  **Image v18**:
               *   Move v14 from v15 to `#q0`.
               *   Calibrate camera v10 at `#q0` for objective v18.
               *   Take an image of v18.
               *   Move v14 from `#q0` to `#q1`.
               *   Send the image of v18.
           
           2.  **Image v17**:
               *   Move v14 from `#q1` to `#q0`.
               *   Move v14 from `#q0` to `#q3`.
               *   Calibrate camera v10 at `#q3` for objective v17.
               *   Take an image of v17.
               *   Move v14 from `#q3` to `#q0`.
               *   Move v14 from `#q0` to `#q1`.
               *   Send the image of v17.
           
           3.  **Sample and analyze rocks**:
               *   Move v14 from `#q1` to `#o5` (above rock v3, type v2).
               *   Sample rock v3 using store v16.
               *   Move v14 from `#o5` to `#q4` (above rock v5, type v6).
               *   Sample rock v5 using store v16.
               *   Move v14 from `#q4` to `#q1`.
               *   Send analysis of rock v3 to v9.
               *   Send analysis of rock v5 to v9.
           
           4.  **Final State Requirements**:
               *   Drop the rocks from store v16 of v14.
               *   Move v14 from `#q1` back to `v15`.
           
           Let's check the moves from the allowed list:
           - `(move v14 #q1 #o2 #o5)`: Valid.
           - `(move v14 #o5 #o2 #q4)`: Valid.
           - `(move v14 #q4 #t19 #q1)`: Valid.
           - `(move v14 #q1 #t2 v15)`: This is available and will bring v14 back to v15.
           
           So, this looks like a feasible approach.
           
           --Plan--:
           (move v14 v15 #t1 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t5 #q1)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (move v14 #q1 #o2 #q0)
           (move v14 #q0 #t28 #q3)
           (calibrate v14 #q3 #y2 v17 v10)
           (take_image v14 #q3 #y2 v17 v10 v11)
           (move v14 #q3 #t8 #q0)
           (move v14 #q0 #t5 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (move v14 #q1 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q4)
           (sample_rock v14 #q4 v5 v16)
           (move v14 #q4 #t19 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (send_analysis v14 #q1 #y1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q1 #t2 v15)

