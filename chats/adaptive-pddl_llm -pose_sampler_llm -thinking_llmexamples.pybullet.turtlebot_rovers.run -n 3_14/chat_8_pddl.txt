User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom type(v1, v2)
           Atom type(v7, v6)
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom objective(v17)
           Atom rock(v5)
           Atom type(v3, v2)
           Atom rock(v7)
           Atom lander(v9)
           Atom onboard(v10, v14)
           Atom store(v16)
           Atom objective(v18)
           Atom objective(v19)
           Atom type(v4, v2)
           Atom camera(v10)
           Atom rover(v14)
           Atom onboard(v10, v12)
           Atom free(v12, v16)
           Atom supports(v10, v11)
           Atom conf(v12, v13)
           Atom free(v14, v16)
           Atom rock(v3)
           Atom type(v5, v6)
           Atom rock(v4)
           Atom type(v8, v6)
           Atom conf(v14, v15)
           Atom rover(v12)
           Atom rock(v1)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q3, v1)
           Atom conf(v12, #q3)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #q13, v8)
           Atom conf(v12, #q13)
           Atom comvisible(v12, #q4, #y2, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q8, v3)
           Atom conf(v12, #q8)
           Atom above(v12, #o5, v7)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q10, v5)
           Atom conf(v12, #q10)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v1)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom above(v14, #o5, v7)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom above(v14, #q7, v3)
           Atom conf(v14, #q7)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q12, #y7, v18)
           Atom imagerange(v14, #q12, v18)
           Atom conf(v14, #q12)
           Atom ray(#y7)
           Atom imagevisible(v14, #q11, #y6, v17)
           Atom imagerange(v14, #q11, v17)
           Atom conf(v14, #q11)
           Atom ray(#y6)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q9, #y5, v19)
           Atom imagerange(v14, #q9, v19)
           Atom conf(v14, #q9)
           Atom ray(#y5)
           Atom imagevisible(v12, #q5, #y3, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom motion(v12, #q4, #t5, v13)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t9, #q0)
           Atom motion(v12, v13, #t7, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t3, #q4)
           Atom motion(v12, #q4, #t27, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #t6, #q2)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #t2, #q4)
           Atom motion(v12, #q2, #t22, #q5)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q4, #t1, #q3)
           Atom motion(v12, #q3, #t0, #q4)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q13, #t28, #q4)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q4, #t25, #q13)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, v15, #t17, #q9)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q4, #t16, #q8)
           Atom motion(v12, #q8, #t20, #q4)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, v13, #t18, #q8)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q6, #t12, #q5)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t24, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q2, #t15, #q6)
           Atom motion(v12, #q6, #t4, #q4)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, v13, #t8, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q5, #t23, #q6)
           Atom motion(v12, #q4, #t26, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, v15, #t29, #q12)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q0)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q7, #t13, #q0)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, v15, #t14, #q7)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #t11, v15)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q12, #t31, #q1)
           Atom motion(v14, #q0, #t10, #q1)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q9, #t19, #q1)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q10, #t21, #q4)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q4, #t30, #q10)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q10 v5 v16))
           ((sample_rock v12 #q13 v8 v16))
           ((sample_rock v12 #q3 v1 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((sample_rock v14 #q7 v3 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t21 #q4))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t28 #q4))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t15 #q6))
           ((move v12 #q2 #t2 #q4))
           ((move v12 #q2 #t22 #q5))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t0 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #t1 #q3))
           ((move v12 #q4 #t16 #q8))
           ((move v12 #q4 #t25 #q13))
           ((move v12 #q4 #t26 #q6))
           ((move v12 #q4 #t27 #q5))
           ((move v12 #q4 #t30 #q10))
           ((move v12 #q4 #t5 v13))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t23 #q6))
           ((move v12 #q5 #t3 #q4))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q5))
           ((move v12 #q6 #t24 #q3))
           ((move v12 #q6 #t4 #q4))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t20 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t18 #q8))
           ((move v12 v13 #t6 #q2))
           ((move v12 v13 #t7 #q5))
           ((move v12 v13 #t8 #q6))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t10 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t11 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t31 #q1))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t13 #q0))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t19 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q7))
           ((move v14 v15 #t17 #q9))
           ((move v14 v15 #t29 #q12))
           ((move v14 v15 #t9 #q0))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v12 #q5 #y3 v19 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v14 #q11 #y6 v17 v10))
           ((calibrate v14 #q12 #y7 v18 v10))
           ((calibrate v14 #q9 #y5 v19 v10))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v12 #q5 #y3 v19 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v14 #q11 #y6 v17 v10 v11))
           ((take_image v14 #q12 #y7 v18 v10 v11))
           ((take_image v14 #q9 #y5 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v12 #q4 #y2 v9 v19 v11))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ((send_image v14 #q1 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Quest for the New Axiom**
           
           Okay, so I'm looking at this `new-axiom@0()` thing, and it's basically a checklist of stuff that needs to be true. My job? Figure out how to make all those things happen. It's like this: two rovers, both in their starting spots (which is good, because those conditions are already met!), and a bunch of images and analyses that need to be sent.
           
           My first thought is always, "Let's break this down." The whole image and analysis part is where things get interesting. I need to get pictures of three specific objectives and analyze two different rock types. That means figuring out how to get the rovers to the right locations, use their cameras, and, of course, find and analyze rocks.
           
           So, here's my plan: Rover `v12` is the star of the show. It's got the best comms access (which is crucial), and both rovers start with stores free. I'll get `v12` to take pictures of the three objectives (`v17`, `v18`, and `v19`). I've identified the routes and the specific coordinates for each. Then, I'll send those images to the lander. Next, the sampling: I need a rock of type `v2` (stone) and one of type `v6` (soil) and I know where they are. Using `v12` again, I'll move it to these rocks, sample them, send the analysis. Both stores are currently free so that won't be an issue.
           
           The problem is the store.  I need to make sure `v12`'s store is available at the end. After sampling a rock, I must empty the store to move to the next. I must sample and drop the rocks. So I will ensure the stores are emptied.
           
           Here's the detailed breakdown, including the order of actions:
           
           1.  Move Rover to image #q6 and calibrate camera to image #v17. Take image.
           2.  Move Rover to image #q2 and calibrate camera to image #v18. Take image.
           3.  Move Rover to image #q5 and calibrate camera to image #v19. Take image.
           4.  Move to the lander and send all images.
           5.  Move to rock v1, analyze it, and send the result.
           6.  Move to rock v8, drop the store content and analyze it, and send the result.
           7.  Drop remaining content of the store.
           8.  Move back to the start.
           
           This should fulfill all the requirements and set the situation exactly as the `new-axiom@0()` implies. This should take care of everything. Ready to go!
           
)

Model:     **The Quest for the New Axiom**
           
           Okay, so I'm looking at this `new-axiom@0()` thing, and it's basically a checklist of stuff that needs to be true. My job? Figure out how to make all those things happen. It's like this: two rovers, both in their starting spots (which is good, because those conditions are already met!), and a bunch of images and analyses that need to be sent.
           
           My first thought is always, "Let's break this down." The whole image and analysis part is where things get interesting. I need to get pictures of three specific objectives and analyze two different rock types. That means figuring out how to get the rovers to the right locations, use their cameras, and, of course, find and analyze rocks.
           
           So, here's my plan: Rover `v12` is the star of the show. It's got the best comms access (which is crucial), and both rovers start with stores free. I'll get `v12` to take pictures of the three objectives (`v17`, `v18`, and `v19`). I've identified the routes and the specific coordinates for each. Then, I'll send those images to the lander. Next, the sampling: I need a rock of type `v2` (stone) and one of type `v6` (soil) and I know where they are. Using `v12` again, I'll move it to these rocks, sample them, send the analysis. Both stores are currently free so that won't be an issue.
           
           The problem is the store.  I need to make sure `v12`'s store is available at the end. After sampling a rock, I must empty the store to move to the next. I must sample and drop the rocks. So I will ensure the stores are emptied.
           
           Here's the detailed breakdown, including the order of actions:
           
           1.  Move Rover to image #q6 and calibrate camera to image #v17. Take image.
           2.  Move Rover to image #q2 and calibrate camera to image #v18. Take image.
           3.  Move Rover to image #q5 and calibrate camera to image #v19. Take image.
           4.  Move to the lander and send all images.
           5.  Move to rock v1, analyze it, and send the result.
           6.  Move to rock v8, drop the store content and analyze it, and send the result.
           7.  Drop remaining content of the store.
           8.  Move back to the start.
           
           This should fulfill all the requirements and set the situation exactly as the `new-axiom@0()` implies. This should take care of everything. Ready to go!
           

