User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p16: object
           p17: object
           p18: object
           p19: object
           p20: object
           p21: object
           p22: object
           p23: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v51: object
           v52: object
           v53: object
           v54: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p9 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.045, 0.045), (0.115, 0.115)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v9 is a pose with position (-0.068, -0.541, 0.781) and quaternion (0.0, 0.0, 0.038, 0.999).
           Object p20 is a pose with position (-0.08, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p21 is a pose with position (0.08, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p22 is a pose with position (0.08, -0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p23 is a pose with position (-0.08, -0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p19 is a pose with position (-0.08, -0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, -0.115), (-0.045, -0.045)).
           Object p18 is a pose with position (0.08, -0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.035, 0.391, 0.781) and quaternion (0.0, 0.0, 0.908, 0.419).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.045, -0.115), (0.115, -0.045)).
           Object p17 is a pose with position (0.08, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.253, 0.246, 0.781) and quaternion (0.0, 0.0, 0.721, 0.692).
           Object p4 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p16 is a pose with position (-0.08, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p6 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, 0.045), (-0.045, 0.115)).
           Object v17 is a pose with position (0.182, -0.451, 0.781) and quaternion (0.0, 0.0, 0.057, 0.998).
           Object p8 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v8, v10)
           Atom kin(v31, v37, p22, v53, v34, v35)
           Atom bconf(v3)
           Atom pose(v14, p22)
           Atom kin(v31, v36, p19, v54, v34, v35)
           Atom kin(v31, v32, p8, v33, v34, v35)
           Atom kin(v31, v38, p20, v51, v34, v35)
           Atom supported(v12, p5, v18)
           Atom kin(v31, v36, p23, v54, v34, v35)
           Atom kin(v31, v38, p7, v33, v34, v35)
           Atom supported(v14, v15, v11)
           Atom pose(v14, v15)
           Atom kin(v31, v32, p21, v52, v34, v35)
           Atom aconf(v6, v7)
           Atom supported(v8, p17, v18)
           Atom kin(v31, v32, p4, v33, v34, v35)
           Atom pose(v16, v17)
           Atom pose(v16, p11)
           Atom graspable(v14)
           Atom arm(v6)
           Atom supported(v12, p9, v18)
           Atom kin(v31, v38, p16, v51, v34, v35)
           Atom pose(v14, p10)
           Atom stackable(v8, v18)
           Atom supported(v8, p21, v18)
           Atom kin(v31, v38, p11, v33, v34, v35)
           Atom supported(v12, v13, v11)
           Atom atpose(v14, v15)
           Atom controllable(v4)
           Atom supported(v12, p19, v18)
           Atom supported(v16, p20, v18)
           Atom ataconf(v6, v7)
           Atom supported(v16, v17, v11)
           Atom pose(v14, p18)
           Atom stackable(v14, v10)
           Atom aconf(v4, v5)
           Atom pose(v16, p16)
           Atom supported(v16, p11, v18)
           Atom pose(v12, p5)
           Atom canmove()
           Atom pose(v8, p8)
           Atom pose(v12, p23)
           Atom supported(v12, p23, v18)
           Atom pose(v16, p7)
           Atom supported(v8, p4, v18)
           Atom stackable(v14, v18)
           Atom pose(v14, p6)
           Atom atpose(v16, v17)
           Atom graspable(v8)
           Atom supported(v8, v9, v11)
           Atom supported(v14, p10, v18)
           Atom kin(v31, v37, p18, v53, v34, v35)
           Atom pose(v12, v13)
           Atom kin(v31, v37, p10, v33, v34, v35)
           Atom stackable(v16, v10)
           Atom supported(v8, p8, v18)
           Atom supported(v16, p7, v18)
           Atom atpose(v12, v13)
           Atom arm(v4)
           Atom atbconf(v3)
           Atom graspable(v16)
           Atom pose(v8, p4)
           Atom kin(v31, v36, p5, v33, v34, v35)
           Atom ataconf(v4, v5)
           Atom pose(v12, p9)
           Atom supported(v14, p22, v18)
           Atom supported(v14, p18, v18)
           Atom handempty(v6)
           Atom pose(v16, p20)
           Atom stackable(v16, v18)
           Atom stackable(v12, v10)
           Atom kin(v31, v32, p17, v52, v34, v35)
           Atom pose(v8, v9)
           Atom supported(v16, p16, v18)
           Atom kin(v31, v36, p9, v33, v34, v35)
           Atom pose(v8, p21)
           Atom atpose(v8, v9)
           Atom supported(v14, p6, v18)
           Atom graspable(v12)
           Atom kin(v31, v37, p6, v33, v34, v35)
           Atom pose(v8, p17)
           Atom pose(v12, p19)
           Atom stackable(v12, v18)
           Atom handempty(v4)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom grasp(v12, #g2)
           Atom supported(v12, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom grasp(v16, #g0)
           Atom supported(v16, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v8, #g3)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v18)
           Atom supported(v14, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom grasp(v14, #g1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#q12)
           Atom atraj(#t42)
           Atom kin(v4, v12, p5, #g2, #q12, #t42)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, v13, #g2, #q2, #t2)
           Atom bconf(#q9)
           Atom atraj(#t17)
           Atom kin(v4, v12, p23, #g2, #q9, #t17)
           Atom bconf(#q7)
           Atom atraj(#t7)
           Atom kin(v4, v12, p9, #g2, #q7, #t7)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, p19, #g2, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v16, p11, #g0, #q4, #t4)
           Atom bconf(#q10)
           Atom atraj(#t24)
           Atom kin(v4, v16, p20, #g0, #q10, #t24)
           Atom kin(v4, v16, p16, #g0, #o3, #o4)
           Atom kin(v4, v16, p7, #g0, #o3, #o4)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v16, v17, #g0, #q0, #t0)
           Atom bconf(#q11)
           Atom atraj(#t34)
           Atom kin(v4, v8, p21, #g3, #q11, #t34)
           Atom kin(v4, v8, p17, #g3, #o3, #o4)
           Atom bconf(#q6)
           Atom atraj(#t6)
           Atom kin(v4, v8, v9, #g3, #q6, #t6)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v8, p8, #g3, #q5, #t5)
           Atom kin(v4, v8, p4, #g3, #o3, #o4)
           Atom bconf(#q8)
           Atom atraj(#t16)
           Atom kin(v4, v14, p22, #g1, #q8, #t16)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, v15, #g1, #q1, #t1)
           Atom kin(v4, v14, p6, #g1, #o3, #o4)
           Atom kin(v4, v14, p18, #g1, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v14, p10, #g1, #q3, #t3)
           Atom basemotion(#q3, #o0, #q3)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q3)
           Atom btraj(#t15)
           Atom basemotion(v3, #t15, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q1)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q3, #o0, #q8)
           Atom btraj(#t28)
           Atom basemotion(#q8, #t28, #q1)
           Atom btraj(#t18)
           Atom basemotion(#q1, #t18, #q8)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom btraj(#t19)
           Atom basemotion(#q1, #t19, #q9)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q7)
           Atom btraj(#t29)
           Atom basemotion(#q9, #t29, #q1)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q5, #o0, #q9)
           Atom btraj(#t13)
           Atom basemotion(v3, #t13, #q5)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q12, #o0, #q9)
           Atom basemotion(#q5, #o0, #q12)
           Atom basemotion(v3, #o0, #q12)
           Atom basemotion(#q12, #o0, #q1)
           Atom basemotion(#q9, #o0, #q12)
           Atom basemotion(#q3, #o0, #q12)
           Atom basemotion(#q7, #o0, #q12)
           Atom basemotion(#q12, #o0, #q8)
           Atom basemotion(#q12, #o0, #q12)
           Atom basemotion(#q1, #o0, #q12)
           Atom basemotion(#q12, #o0, #q7)
           Atom basemotion(#q8, #o0, #q12)
           Atom basemotion(#q12, #o0, #q3)
           Atom basemotion(#q12, #o0, #q5)
           Atom basemotion(#q12, #o0, v3)
           Atom btraj(#t20)
           Atom basemotion(#q8, #t20, #q6)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q6, #o0, #q12)
           Atom btraj(#t31)
           Atom basemotion(#q6, #t31, #q8)
           Atom basemotion(#q6, #o0, v3)
           Atom btraj(#t14)
           Atom basemotion(v3, #t14, #q6)
           Atom btraj(#t21)
           Atom basemotion(#q9, #t21, #q6)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q5, #o0, #q6)
           Atom btraj(#t44)
           Atom basemotion(#q12, #t44, #q6)
           Atom btraj(#t32)
           Atom basemotion(#q6, #t32, #q9)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q1, #o0, #q6)
           Atom btraj(#t36)
           Atom basemotion(#q9, #t36, #q2)
           Atom btraj(#t25)
           Atom basemotion(#q2, #t25, #q8)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q12, #o0, #q2)
           Atom btraj(#t26)
           Atom basemotion(#q2, #t26, #q9)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t35)
           Atom basemotion(#q8, #t35, #q2)
           Atom basemotion(#q2, #o0, #q7)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q2)
           Atom basemotion(#q2, #o0, #q12)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q11, #o0, #q6)
           Atom basemotion(#q11, #o0, #q3)
           Atom basemotion(#q11, #o0, #q8)
           Atom basemotion(#q11, #o0, #q1)
           Atom basemotion(#q1, #o0, #q11)
           Atom basemotion(#q11, #o0, #q5)
           Atom basemotion(#q8, #o0, #q11)
           Atom basemotion(#q11, #o0, #q7)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q3, #o0, #q11)
           Atom basemotion(#q7, #o0, #q11)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q11, #o0, #q12)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q5, #o0, #q11)
           Atom btraj(#t41)
           Atom basemotion(#q6, #t41, #q11)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q2, #o0, #q11)
           Atom basemotion(#q12, #o0, #q11)
           Atom btraj(#t38)
           Atom basemotion(#q11, #t38, #q2)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, #q11)
           Atom btraj(#t40)
           Atom basemotion(#q8, #t40, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q11, #o0, #q0)
           Atom btraj(#t23)
           Atom basemotion(#q0, #t23, #q9)
           Atom btraj(#t22)
           Atom basemotion(#q0, #t22, #q8)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q0, #o0, #q12)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q0)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q12, #o0, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q1, #o0, #q4)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q4)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q12, #o0, #q4)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q11, #o0, #q4)
           Atom basemotion(#q4, #o0, #q11)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q4, #o0, #q9)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q4, #o0, #q12)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, #q3)
           Atom btraj(#t39)
           Atom basemotion(#q0, #t39, #q10)
           Atom basemotion(v3, #o0, #q10)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q8, #o0, #q10)
           Atom btraj(#t37)
           Atom basemotion(#q10, #t37, #q2)
           Atom basemotion(#q11, #o0, #q10)
           Atom btraj(#t33)
           Atom basemotion(#q6, #t33, #q10)
           Atom basemotion(#q10, #o0, #q0)
           Atom btraj(#t27)
           Atom basemotion(#q2, #t27, #q10)
           Atom btraj(#t30)
           Atom basemotion(#q10, #t30, #q1)
           Atom basemotion(#q1, #o0, #q10)
           Atom basemotion(#q10, #o0, #q4)
           Atom btraj(#t43)
           Atom basemotion(#q10, #t43, #q12)
           Atom basemotion(#q10, #o0, #q7)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q9, #o0, #q10)
           Atom basemotion(#q10, #o0, #q5)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q10, #o0, #q3)
           Atom basemotion(#q10, #o0, #q6)
           Atom basemotion(#q3, #o0, #q10)
           Atom basemotion(#q4, #o0, #q10)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q10, #o0, #q8)
           Atom basemotion(#q12, #o0, #q10)
           Atom basemotion(#q7, #o0, #q10)
           Atom basemotion(#q5, #o0, #q10)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g3, #o3, #o4)
           Atom kin(v4, v16, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom basemotion(#o3, #o0, #q12)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q12, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q12 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q8 #t22))
           ((move_base #q0 #q9 #t23))
           ((move_base #q0 #q10 #t39))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q10 #o0))
           ((move_base #q1 #q11 #o0))
           ((move_base #q1 #q12 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q8 #t18))
           ((move_base #q1 #q9 #t19))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q0 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q3 #o0))
           ((move_base #q10 #q4 #o0))
           ((move_base #q10 #q5 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q1 #t30))
           ((move_base #q10 #q2 #t37))
           ((move_base #q10 #q12 #t43))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q3 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q2 #t38))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q0 #o0))
           ((move_base #q12 #q1 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q2 #o0))
           ((move_base #q12 #q3 #o0))
           ((move_base #q12 #q4 #o0))
           ((move_base #q12 #q5 #o0))
           ((move_base #q12 #q7 #o0))
           ((move_base #q12 #q8 #o0))
           ((move_base #q12 #q9 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q12 #q6 #t44))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q12 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q8 #t25))
           ((move_base #q2 #q9 #t26))
           ((move_base #q2 #q10 #t27))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q10 #o0))
           ((move_base #q3 #q11 #o0))
           ((move_base #q3 #q12 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q10 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q12 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q10 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q12 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q12 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q8 #t31))
           ((move_base #q6 #q9 #t32))
           ((move_base #q6 #q10 #t33))
           ((move_base #q6 #q11 #t41))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q12 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q12 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q6 #t20))
           ((move_base #q8 #q1 #t28))
           ((move_base #q8 #q2 #t35))
           ((move_base #q8 #q0 #t40))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q12 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q6 #t21))
           ((move_base #q9 #q1 #t29))
           ((move_base #q9 #q2 #t36))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q12 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t10))
           ((move_base v3 #q3 #t11))
           ((move_base v3 #q4 #t12))
           ((move_base v3 #q5 #t13))
           ((move_base v3 #q6 #t14))
           ((move_base v3 #q7 #t15))
           ((move_base v3 #q0 #t8))
           ((move_base v3 #q1 #t9))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p19 #g2 #o3 #o4))
           ((place v4 v12 p19 #g2 #o3 #o4))
           ((pick v4 v12 p23 #g2 #q9 #t17))
           ((place v4 v12 p23 #g2 #q9 #t17))
           ((pick v4 v12 p5 #g2 #q12 #t42))
           ((place v4 v12 p5 #g2 #q12 #t42))
           ((pick v4 v12 p9 #g2 #q7 #t7))
           ((place v4 v12 p9 #g2 #q7 #t7))
           ((pick v4 v12 v13 #g2 #q2 #t2))
           ((place v4 v12 v13 #g2 #q2 #t2))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p10 #g1 #q3 #t3))
           ((place v4 v14 p10 #g1 #q3 #t3))
           ((pick v4 v14 p18 #g1 #o3 #o4))
           ((place v4 v14 p18 #g1 #o3 #o4))
           ((pick v4 v14 p22 #g1 #q8 #t16))
           ((place v4 v14 p22 #g1 #q8 #t16))
           ((pick v4 v14 p6 #g1 #o3 #o4))
           ((place v4 v14 p6 #g1 #o3 #o4))
           ((pick v4 v14 v15 #g1 #q1 #t1))
           ((place v4 v14 v15 #g1 #q1 #t1))
           ((pick v4 v16 #o2 #g0 #o3 #o4))
           ((place v4 v16 #o2 #g0 #o3 #o4))
           ((pick v4 v16 p11 #g0 #q4 #t4))
           ((place v4 v16 p11 #g0 #q4 #t4))
           ((pick v4 v16 p16 #g0 #o3 #o4))
           ((place v4 v16 p16 #g0 #o3 #o4))
           ((pick v4 v16 p20 #g0 #q10 #t24))
           ((place v4 v16 p20 #g0 #q10 #t24))
           ((pick v4 v16 p7 #g0 #o3 #o4))
           ((place v4 v16 p7 #g0 #o3 #o4))
           ((pick v4 v16 v17 #g0 #q0 #t0))
           ((place v4 v16 v17 #g0 #q0 #t0))
           ((pick v4 v8 #o2 #g3 #o3 #o4))
           ((place v4 v8 #o2 #g3 #o3 #o4))
           ((pick v4 v8 p17 #g3 #o3 #o4))
           ((place v4 v8 p17 #g3 #o3 #o4))
           ((pick v4 v8 p21 #g3 #q11 #t34))
           ((place v4 v8 p21 #g3 #q11 #t34))
           ((pick v4 v8 p4 #g3 #o3 #o4))
           ((place v4 v8 p4 #g3 #o3 #o4))
           ((pick v4 v8 p8 #g3 #q5 #t5))
           ((place v4 v8 p8 #g3 #q5 #t5))
           ((pick v4 v8 v9 #g3 #q6 #t6))
           ((place v4 v8 v9 #g3 #q6 #t6))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place all four objects (v8, v12, v14, v16) on the surface v18. Currently, v14 is on v11, v16 is on v11, v12 is on v11, and v8 is on v11. The robot is at base configuration v3 and arm configuration v5, and its hand is empty.
           
           To achieve the goal, we need to pick up each object and place it on v18. Since the `atpose` predicates for the initial poses are already set for v14, v16, v12, and v8, we'll pick each one from its current location and place it on a pose on v18. The problem states that if a pose starting with '#' is used, a continuous value must be provided for it. We will use `#o2` for all objects for placement, as it is supported by `v18`. We must ensure each object is placed at a unique position on `v18`.
           
           --Plan--:
           (pick v4 v14 v15 #g1 #q1 #t1)
           (place v4 v14 #o2 #g1 #o3 #o4)
           (pick v4 v16 v17 #g0 #q0 #t0)
           (place v4 v16 #o2 #g0 #o3 #o4)
           (pick v4 v12 v13 #g2 #q2 #t2)
           (place v4 v12 #o2 #g2 #o3 #o4)
           (pick v4 v8 v9 #g3 #q6 #t6)
           (place v4 v8 #o2 #g3 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v18): (0.0 0.0 0.782 0.0)
           (#o2 v16 v18): (0.1 0.0 0.782 0.0)
           (#o2 v12 v18): (-0.1 0.0 0.782 0.0)
           (#o2 v8 v18): (0.0 0.1 0.782 0.0)

User:      Pose #o2 = (0.1 0.0 0.782 0.0) for object v16 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(0.06500000149011612, -0.035), upper=(0.13500000149011612, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (-0.1 0.0 0.782 0.0) for object v12 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(-0.13500000149011612, -0.035), upper=(-0.06500000149011612, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.0 0.1 0.782 0.0) for object v8 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, 0.06500000149011612), upper=(0.035, 0.13500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The goal is to place all four objects (v8, v12, v14, v16) on the surface v18. Currently, v14 is on v11, v16 is on v11, v12 is on v11, and v8 is on v11. The robot is at base configuration v3 and arm configuration v5, and its hand is empty.
           
           To achieve the goal, we need to pick up each object and place it on v18. Since the `atpose` predicates for the initial poses are already set for v14, v16, v12, and v8, we'll pick each one from its current location and place it on a pose on v18. We must ensure each object is placed at a unique and stable position on `v18`. The AABB for v18 is ((-0.135, -0.135), (0.135, 0.135)).
           
           The AABB of v8 is ((0.045, 0.045), (0.115, 0.115)).
           The AABB of v12 is ((-0.115, -0.115), (-0.045, -0.045)).
           The AABB of v14 is ((0.045, -0.115), (0.115, -0.045)).
           The AABB of v16 is ((-0.115, 0.045), (-0.045, 0.115)).
           
           Let's try to place them at the following poses on v18:
           - v14: (0.0, 0.0, 0.782, 0.0) - AABB: ((0.045, -0.115), (0.115, -0.045)) -> x_center = 0.08, y_center = -0.08. AABB relative to center: ((-0.035, -0.035), (0.035, 0.035)). This fits within v18.
           - v16: (-0.08, 0.08, 0.782, 0.0) - AABB: ((-0.115, 0.045), (-0.045, 0.115)) -> x_center = -0.08, y_center = 0.08. AABB relative to center: ((-0.035, -0.035), (0.035, 0.035)). This fits within v18.
           - v12: (-0.08, -0.08, 0.782, 0.0) - AABB: ((-0.115, -0.115), (-0.045, -0.045)) -> x_center = -0.08, y_center = -0.08. AABB relative to center: ((-0.035, -0.035), (0.035, 0.035)). This fits within v18.
           - v8: (0.08, 0.08, 0.782, 0.0) - AABB: ((0.045, 0.045), (0.115, 0.115)) -> x_center = 0.08, y_center = 0.08. AABB relative to center: ((-0.035, -0.035), (0.035, 0.035)). This fits within v18.
           
           All of these relative AABBs fit within a 0.07x0.07 area. The total AABB of v18 is 0.27x0.27. So, placing these at the corners of a smaller square within v18 should be stable.
           
           --Plan--:
           (pick v4 v14 v15 #g1 #q1 #t1)
           (place v4 v14 #o2 #g1 #o3 #o4)
           (pick v4 v16 v17 #g0 #q0 #t0)
           (place v4 v16 #o2 #g0 #o3 #o4)
           (pick v4 v12 v13 #g2 #q2 #t2)
           (place v4 v12 #o2 #g2 #o3 #o4)
           (pick v4 v8 v9 #g3 #q6 #t6)
           (place v4 v8 #o2 #g3 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v18): (0.08 -0.08 0.782 0.0)
           (#o2 v16 v18): (-0.08 0.08 0.782 0.0)
           (#o2 v12 v18): (-0.08 -0.08 0.782 0.0)
           (#o2 v8 v18): (0.08 0.08 0.782 0.0)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q0) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal is to place all four objects (v8, v12, v14, v16) on the surface v18. Currently, v14 is on v11, v16 is on v11, v12 is on v11, and v8 is on v11. The robot is at base configuration v3 and arm configuration v5, and its hand is empty.
           
           To achieve the goal, we need to pick up each object and place it on v18. Since the `atpose` predicates for the initial poses are already set for v14, v16, v12, and v8, we'll pick each one from its current location and place it on a pose on v18. We must ensure each object is placed at a unique and stable position on `v18`. The AABB for v18 is ((-0.135, -0.135), (0.135, 0.135)).
           
           The AABB of v8 is ((0.045, 0.045), (0.115, 0.115)).
           The AABB of v12 is ((-0.115, -0.115), (-0.045, -0.045)).
           The AABB of v14 is ((0.045, -0.115), (0.115, -0.045)).
           The AABB of v16 is ((-0.115, 0.045), (-0.045, 0.115)).
           
           We need to make sure the `atbconf` predicate is satisfied for each pick and place action. The robot starts at `v3`. We'll need to move the base to the appropriate configuration before each pick/place operation.
           
           Let's try to place them at the following poses on v18:
           - v14: (0.08, -0.08, 0.782, 0.0)
           - v16: (-0.08, 0.08, 0.782, 0.0)
           - v12: (-0.08, -0.08, 0.782, 0.0)
           - v8: (0.08, 0.08, 0.782, 0.0)
           
           For each pick and place, we need to find the corresponding `kin` fact which contains the base configuration.
           
           1. **Pick v14 from v15:** `kin(v4, v14, v15, #g1, #q1, #t1)`. Requires `atbconf(#q1)`.
           2. **Place v14 on #o2 (v18):** `kin(v4, v14, #o2, #g1, #o3, #o4)`. Requires `atbconf(#o3)`.
           3. **Pick v16 from v17:** `kin(v4, v16, v17, #g0, #q0, #t0)`. Requires `atbconf(#q0)`.
           4. **Place v16 on #o2 (v18):** `kin(v4, v16, #o2, #g0, #o3, #o4)`. Requires `atbconf(#o3)`.
           5. **Pick v12 from v13:** `kin(v4, v12, v13, #g2, #q2, #t2)`. Requires `atbconf(#q2)`.
           6. **Place v12 on #o2 (v18):** `kin(v4, v12, #o2, #g2, #o3, #o4)`. Requires `atbconf(#o3)`.
           7. **Pick v8 from v9:** `kin(v4, v8, v9, #g3, #q6, #t6)`. Requires `atbconf(#q6)`.
           8. **Place v8 on #o2 (v18):** `kin(v4, v8, #o2, #g3, #o3, #o4)`. Requires `atbconf(#o3)`.
           
           We will move the base to the required configuration before each pick/place operation.
           
           --Plan--:
           (move_base v3 #q1 #t9)
           (pick v4 v14 v15 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v14 #o2 #g1 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v16 v17 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v16 #o2 #g0 #o3 #o4)
           (move_base #o3 #q2 #o0)
           (pick v4 v12 v13 #g2 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v12 #o2 #g2 #o3 #o4)
           (move_base #o3 #q6 #o0)
           (pick v4 v8 v9 #g3 #q6 #t6)
           (move_base #q6 #o3 #o0)
           (place v4 v8 #o2 #g3 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v18): (0.08 -0.08 0.782 0.0)
           (#o2 v16 v18): (-0.08 0.08 0.782 0.0)
           (#o2 v12 v18): (-0.08 -0.08 0.782 0.0)
           (#o2 v8 v18): (0.08 0.08 0.782 0.0)

