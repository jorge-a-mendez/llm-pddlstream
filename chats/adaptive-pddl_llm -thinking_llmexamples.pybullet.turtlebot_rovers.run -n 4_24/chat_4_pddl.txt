User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom objective(v18)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom lander(v9)
           Atom conf(v12, v13)
           Atom free(v12, v16)
           Atom objective(v17)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom type(v5, v6)
           Atom objective(v20)
           Atom rock(v4)
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom type(v7, v6)
           Atom objective(v19)
           Atom conf(v14, v15)
           Atom rover(v12)
           Atom rock(v3)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom rover(v14)
           Atom rock(v5)
           Atom atconf(v14, v15)
           Atom rock(v7)
           Atom camera(v10)
           Atom rock(v1)
           Atom type(v4, v2)
           Atom above(v14, #q11, v5)
           Atom conf(v14, #q11)
           Atom imagevisible(v14, #q12, #y6, v20)
           Atom imagerange(v14, #q12, v20)
           Atom conf(v14, #q12)
           Atom ray(#y6)
           Atom above(v14, #q5, v1)
           Atom conf(v14, #q5)
           Atom above(v14, #q2, v7)
           Atom conf(v14, #q2)
           Atom above(v14, #q8, v3)
           Atom conf(v14, #q8)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v12, #q0, #y0, v20)
           Atom imagerange(v12, #q0, v20)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #q10, #y5, v18)
           Atom imagerange(v12, #q10, v18)
           Atom conf(v12, #q10)
           Atom ray(#y5)
           Atom imagevisible(v14, #q14, #y8, v18)
           Atom imagerange(v14, #q14, v18)
           Atom conf(v14, #q14)
           Atom ray(#y8)
           Atom imagevisible(v14, #q13, #y7, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y7)
           Atom imagevisible(v12, #q7, #y4, v17)
           Atom imagerange(v12, #q7, v17)
           Atom conf(v12, #q7)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q4, #y3, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #q15, #y9, v19)
           Atom imagerange(v14, #q15, v19)
           Atom conf(v14, #q15)
           Atom ray(#y9)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q6, v8)
           Atom conf(v14, #q6)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v4)
           Atom above(v14, #q9, v4)
           Atom conf(v14, #q9)
           Atom motion(v14, v15, #t9, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, v15, #t13, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #t10, #q5)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, v15, #t11, #q6)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q1, #t4, v15)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q1, #t0, #q2)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q2, #t3, #q1)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q1, #t17, #q8)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, v15, #t12, #q8)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q12, #t20, #q1)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, v15, #t18, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v12, #q3, #t14, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #t2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, #q11, #t16, #q1)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q8, #t15, #q11)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q5, #t26, #q11)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q5)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, v13, #t5, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t1, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, v13, #t7, #q7)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q7, #t25, #q4)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q13, #t21, #q1)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, v15, #t19, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q14, #t22, #q1)
           Atom motion(v14, #q14, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q8)
           Atom motion(v14, #q14, #o2, #q5)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q5, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q0, #t27, #q10)
           Atom motion(v12, #q10, #t24, #q7)
           Atom motion(v12, v13, #t8, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v14, #q15, #t23, #q1)
           Atom motion(v14, #q15, #o2, #q6)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q5)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q2)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q6, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q5, #o2, #q15)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #q11 v5 v16))
           ((sample_rock v14 #q2 v7 v16))
           ((sample_rock v14 #q5 v1 v16))
           ((sample_rock v14 #q6 v8 v16))
           ((sample_rock v14 #q8 v3 v16))
           ((sample_rock v14 #q9 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q3))
           ((move v12 #q0 #t27 #q10))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t24 #q7))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #t14 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t2 #q3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t25 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q0))
           ((move v12 v13 #t6 #q4))
           ((move v12 v13 #t7 #q7))
           ((move v12 v13 #t8 #q10))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t0 #q2))
           ((move v14 #q1 #t17 #q8))
           ((move v14 #q1 #t4 v15))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q5))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t16 #q1))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t20 #q1))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t21 #q1))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q5))
           ((move v14 #q14 #o2 #q6))
           ((move v14 #q14 #o2 #q8))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t22 #q1))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q5))
           ((move v14 #q15 #o2 #q6))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t23 #q1))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t3 #q1))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t26 #q11))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q14))
           ((move v14 #q6 #o2 #q15))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t15 #q11))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q5))
           ((move v14 v15 #t11 #q6))
           ((move v14 v15 #t12 #q8))
           ((move v14 v15 #t13 #q9))
           ((move v14 v15 #t18 #q12))
           ((move v14 v15 #t19 #q13))
           ((move v14 v15 #t9 #q2))
           ((calibrate v12 #q0 #y0 v20 v10))
           ((calibrate v12 #q10 #y5 v18 v10))
           ((calibrate v12 #q4 #y3 v19 v10))
           ((calibrate v12 #q7 #y4 v17 v10))
           ((calibrate v14 #q12 #y6 v20 v10))
           ((calibrate v14 #q13 #y7 v17 v10))
           ((calibrate v14 #q14 #y8 v18 v10))
           ((calibrate v14 #q15 #y9 v19 v10))
           ((take_image v12 #q0 #y0 v20 v10 v11))
           ((take_image v12 #q10 #y5 v18 v10 v11))
           ((take_image v12 #q4 #y3 v19 v10 v11))
           ((take_image v12 #q7 #y4 v17 v10 v11))
           ((take_image v14 #q12 #y6 v20 v10 v11))
           ((take_image v14 #q13 #y7 v17 v10 v11))
           ((take_image v14 #q14 #y8 v18 v10 v11))
           ((take_image v14 #q15 #y9 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_image v12 #q3 #y2 v9 v20 v11))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Initial Assessment and Planning for Goal Achievement**
           
           Alright, let's break this down. My objective is to achieve `new-axiom@0()` in the `rovers` domain.  I see that this means I need to establish a set of conditions: I need to take and send four images, I need to analyze a stone and soil sample, and I need both rovers to be in specific initial configurations after all is done.  The conditions `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)` are already met or easily met.
           
           My plan will be to focus on meeting the image and analysis goals. I will then ensure the final positioning of the rovers to meet the end goal conditions.
           
           **Sub-Goal 1: Achieving `receivedimage` and Analysis.**
           
           To get the images, I need to get the "camera on" mode ready, then "take" the image, and finally "send" the image.  I know I have two rovers at my disposal: `v12` and `v14`, both equipped with a camera, and a lander (`v9`). The problem is that images can be "blocked" by environmental factors.
           
           I've determined I can likely use rover `v14` for image collection and transmission (as it is near the lander) and  `v12` for rock analysis and communications.  My strategy will be to move `v14` to the various configurations where it has line of sight to the images, take the images, move to the lander configuration, then send the images.
           
           For the analysis goals, I plan to move `v12` to sample the correct rock types, and send the sample to the lander.
           
           **Final Plan Sequence: Interleaving Rover Actions**
           
           *   **Move `v14` to send image of `v20`.**
           *   **Move `v14` calibrate, take, and transmit the `v18` image.**
           *   **Move `v14` calibrate, take, and transmit the `v17` image.**
           *   **Move `v14` calibrate, take, and transmit the `v19` image.**
           *   **Move `v12` to analyze a stone sample `v4` and send the analysis.**
           *   **Move `v12` to analyze a soil sample `v8` and send the analysis.**
           
           **Final Touches: Reaching the Final Configurations**
           
           After the image and analysis steps, I need to ensure both rovers are in their initial configurations, `v12` in `v13` and `v14` in `v15`.
           
           **Action Evaluation**
           I will ensure all of the preconditions are met during my operations.  The blocking axioms will be true, the free stores will be cleared, and all moves will be valid.
           
           **Conclusion:** I believe this plan is optimal for solving this problem as it uses a divide-and-conquer strategy, leverages the resources efficiently (two rovers), and accounts for blocking conditions to solve it with low overhead.
           
)

Model:     **Initial Assessment and Planning for Goal Achievement**
           
           Alright, let's break this down. My objective is to achieve `new-axiom@0()` in the `rovers` domain.  I see that this means I need to establish a set of conditions: I need to take and send four images, I need to analyze a stone and soil sample, and I need both rovers to be in specific initial configurations after all is done.  The conditions `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)` are already met or easily met.
           
           My plan will be to focus on meeting the image and analysis goals. I will then ensure the final positioning of the rovers to meet the end goal conditions.
           
           **Sub-Goal 1: Achieving `receivedimage` and Analysis.**
           
           To get the images, I need to get the "camera on" mode ready, then "take" the image, and finally "send" the image.  I know I have two rovers at my disposal: `v12` and `v14`, both equipped with a camera, and a lander (`v9`). The problem is that images can be "blocked" by environmental factors.
           
           I've determined I can likely use rover `v14` for image collection and transmission (as it is near the lander) and  `v12` for rock analysis and communications.  My strategy will be to move `v14` to the various configurations where it has line of sight to the images, take the images, move to the lander configuration, then send the images.
           
           For the analysis goals, I plan to move `v12` to sample the correct rock types, and send the sample to the lander.
           
           **Final Plan Sequence: Interleaving Rover Actions**
           
           *   **Move `v14` to send image of `v20`.**
           *   **Move `v14` calibrate, take, and transmit the `v18` image.**
           *   **Move `v14` calibrate, take, and transmit the `v17` image.**
           *   **Move `v14` calibrate, take, and transmit the `v19` image.**
           *   **Move `v12` to analyze a stone sample `v4` and send the analysis.**
           *   **Move `v12` to analyze a soil sample `v8` and send the analysis.**
           
           **Final Touches: Reaching the Final Configurations**
           
           After the image and analysis steps, I need to ensure both rovers are in their initial configurations, `v12` in `v13` and `v14` in `v15`.
           
           **Action Evaluation**
           I will ensure all of the preconditions are met during my operations.  The blocking axioms will be true, the free stores will be cleared, and all moves will be valid.
           
           **Conclusion:** I believe this plan is optimal for solving this problem as it uses a divide-and-conquer strategy, leverages the resources efficiently (two rovers), and accounts for blocking conditions to solve it with low overhead.
           

