User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom objective(v18)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom lander(v9)
           Atom conf(v12, v13)
           Atom free(v12, v16)
           Atom objective(v17)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom type(v5, v6)
           Atom objective(v20)
           Atom rock(v4)
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom type(v7, v6)
           Atom objective(v19)
           Atom conf(v14, v15)
           Atom rover(v12)
           Atom rock(v3)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom rover(v14)
           Atom rock(v5)
           Atom atconf(v14, v15)
           Atom rock(v7)
           Atom camera(v10)
           Atom rock(v1)
           Atom type(v4, v2)
           Atom above(v14, #q5, v1)
           Atom conf(v14, #q5)
           Atom above(v14, #q2, v7)
           Atom conf(v14, #q2)
           Atom above(v14, #q11, v5)
           Atom conf(v14, #q11)
           Atom imagevisible(v14, #q12, #y6, v20)
           Atom imagerange(v14, #q12, v20)
           Atom conf(v14, #q12)
           Atom ray(#y6)
           Atom above(v14, #q8, v3)
           Atom conf(v14, #q8)
           Atom imagevisible(v12, #q0, #y0, v20)
           Atom imagerange(v12, #q0, v20)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v1)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v14, #q14, #y8, v18)
           Atom imagerange(v14, #q14, v18)
           Atom conf(v14, #q14)
           Atom ray(#y8)
           Atom imagevisible(v12, #q10, #y5, v18)
           Atom imagerange(v12, #q10, v18)
           Atom conf(v12, #q10)
           Atom ray(#y5)
           Atom imagevisible(v12, #q7, #y4, v17)
           Atom imagerange(v12, #q7, v17)
           Atom conf(v12, #q7)
           Atom ray(#y4)
           Atom imagevisible(v14, #q13, #y7, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y7)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q15, #y9, v19)
           Atom imagerange(v14, #q15, v19)
           Atom conf(v14, #q15)
           Atom ray(#y9)
           Atom imagevisible(v12, #q4, #y3, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q6, v8)
           Atom conf(v14, #q6)
           Atom above(v12, #o5, v4)
           Atom above(v14, #q9, v4)
           Atom conf(v14, #q9)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #t18, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, v15, #t11, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, v15, #t13, #q9)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #t14, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #t15, #q11)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, v15, #t12, #q8)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q1, #t17, #q8)
           Atom motion(v14, #q1, #t4, v15)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q11, #t16, #q1)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q12, #t20, #q1)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, #q1, #t0, #q2)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q2, #t3, #q1)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, v15, #t9, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q15, #o2, #q2)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q6, #o2, #q15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q6)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, #q15, #t23, #q1)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q5, #o2, #q15)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q15, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, v15, #t10, #q5)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q11, #o2, #q5)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q13, #t21, #q1)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, v15, #t19, #q13)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, v13, #t7, #q7)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, v13, #t8, #q10)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q6, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q5)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q14, #t22, #q1)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q6)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q5, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #t2, #q3)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, v13, #t5, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t1, #q3)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #q11 v5 v16))
           ((sample_rock v14 #q2 v7 v16))
           ((sample_rock v14 #q5 v1 v16))
           ((sample_rock v14 #q6 v8 v16))
           ((sample_rock v14 #q8 v3 v16))
           ((sample_rock v14 #q9 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q3))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #t14 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t2 #q3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q0))
           ((move v12 v13 #t6 #q4))
           ((move v12 v13 #t7 #q7))
           ((move v12 v13 #t8 #q10))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t0 #q2))
           ((move v14 #q1 #t17 #q8))
           ((move v14 #q1 #t4 v15))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q5))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t16 #q1))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t20 #q1))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t21 #q1))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q5))
           ((move v14 #q14 #o2 #q6))
           ((move v14 #q14 #o2 #q8))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t22 #q1))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q5))
           ((move v14 #q15 #o2 #q6))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t23 #q1))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t3 #q1))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q14))
           ((move v14 #q6 #o2 #q15))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t15 #q11))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q5))
           ((move v14 v15 #t11 #q6))
           ((move v14 v15 #t12 #q8))
           ((move v14 v15 #t13 #q9))
           ((move v14 v15 #t18 #q12))
           ((move v14 v15 #t19 #q13))
           ((move v14 v15 #t9 #q2))
           ((calibrate v12 #q0 #y0 v20 v10))
           ((calibrate v12 #q10 #y5 v18 v10))
           ((calibrate v12 #q4 #y3 v19 v10))
           ((calibrate v12 #q7 #y4 v17 v10))
           ((calibrate v14 #q12 #y6 v20 v10))
           ((calibrate v14 #q13 #y7 v17 v10))
           ((calibrate v14 #q14 #y8 v18 v10))
           ((calibrate v14 #q15 #y9 v19 v10))
           ((take_image v12 #q0 #y0 v20 v10 v11))
           ((take_image v12 #q10 #y5 v18 v10 v11))
           ((take_image v12 #q4 #y3 v19 v10 v11))
           ((take_image v12 #q7 #y4 v17 v10 v11))
           ((take_image v14 #q12 #y6 v20 v10 v11))
           ((take_image v14 #q13 #y7 v17 v10 v11))
           ((take_image v14 #q14 #y8 v18 v10 v11))
           ((take_image v14 #q15 #y9 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_image v12 #q3 #y2 v9 v20 v11))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Okay, here's my plan to achieve the goal `Atom new-axiom@0()` – a detailed roadmap based on the problem's constraints and the available resources.**
           
           First, let's dissect `new-axiom@0()`.  Essentially, it boils down to:
           
           1.  Sending images of four specific objectives (`v17`, `v18`, `v19`, `v20`) in mode `v11` to the lander.
           2.  Analyzing and sending the analysis of *at least one* stone (type `v2`) and *at least one* soil (type `v6`) sample.
           
           The initial state provides some key facts: two rovers (`v12` and `v14`) at specific configurations (`v13` and `v15`), both with a free storage unit (`v16`).  Both rovers also have access to camera `v10` and both cameras can be put in mode `v11`.
           
           I see two rovers, which means I can potentially parallelize the tasks! Rover `v12` starts at `conf v13` and rover `v14` starts at `conf v15`. Both rovers can move to different configs, perform actions and move back to comms configs.
           
           **Image Collection Plan (Rover `v12`):**
           
           The plan is to have `v12` handle all image-related tasks, given its initial configuration and comms capability.
           
           1.  Move to `q0` - Calibrate, take image of `v20`.
           2.  Move to `q10` - Calibrate, take image of `v18`.
           3.  Move to `q7` - Calibrate, take image of `v17`.
           4.  Move to `q4` - Calibrate, take image of `v19`.
           5.  Move to `q3` - Comms. Send all images.
           6.  Return to `v13` - After finishing everything
           
           This approach ensures that each image is captured and transmitted. To ensure no conflicts, camera recalibration is required for each image.
           
           **Rock Analysis Plan (Rover `v14`):**
           
           To maximize the parallel processing, Rover `v14` handles all the rock-related tasks.
           
           1.  Move to `q5`, sample `v1` (stone - `v2`).
           2.  Drop `v1`
           3.  Move to `q11`, sample `v5` (soil - `v6`).
           4.  Move to `#q1` (comms)
           5.  Send the analysis of `v1`
           6.  Send the analysis of `v5`
           7.  Return to `v15` AND drop rock.
           
           **Finalizing the Plan:**
           
           This plan, once completely executed, will satisfy all the prerequisites of my goal.
           
           I've carefully considered the conditions for sending images, sampling and analyzing rocks, and transmitting the analysis.  I have double-checked that all of the preconditions are in place before action and all the effects required are met. I'm confident in this approach.
           
           However, I now recognize that there may be an important oversight. I will have the rovers return to their initial configurations so I can meet the requirements as stated in the text. I realize that I had to include return actions for both the rovers.
           
           Now, with return plans, I can satisfy everything! This solution is complete.
)

Model:     **Okay, here's my plan to achieve the goal `Atom new-axiom@0()` – a detailed roadmap based on the problem's constraints and the available resources.**
           
           First, let's dissect `new-axiom@0()`.  Essentially, it boils down to:
           
           1.  Sending images of four specific objectives (`v17`, `v18`, `v19`, `v20`) in mode `v11` to the lander.
           2.  Analyzing and sending the analysis of *at least one* stone (type `v2`) and *at least one* soil (type `v6`) sample.
           
           The initial state provides some key facts: two rovers (`v12` and `v14`) at specific configurations (`v13` and `v15`), both with a free storage unit (`v16`).  Both rovers also have access to camera `v10` and both cameras can be put in mode `v11`.
           
           I see two rovers, which means I can potentially parallelize the tasks! Rover `v12` starts at `conf v13` and rover `v14` starts at `conf v15`. Both rovers can move to different configs, perform actions and move back to comms configs.
           
           **Image Collection Plan (Rover `v12`):**
           
           The plan is to have `v12` handle all image-related tasks, given its initial configuration and comms capability.
           
           1.  Move to `q0` - Calibrate, take image of `v20`.
           2.  Move to `q10` - Calibrate, take image of `v18`.
           3.  Move to `q7` - Calibrate, take image of `v17`.
           4.  Move to `q4` - Calibrate, take image of `v19`.
           5.  Move to `q3` - Comms. Send all images.
           6.  Return to `v13` - After finishing everything
           
           This approach ensures that each image is captured and transmitted. To ensure no conflicts, camera recalibration is required for each image.
           
           **Rock Analysis Plan (Rover `v14`):**
           
           To maximize the parallel processing, Rover `v14` handles all the rock-related tasks.
           
           1.  Move to `q5`, sample `v1` (stone - `v2`).
           2.  Drop `v1`
           3.  Move to `q11`, sample `v5` (soil - `v6`).
           4.  Move to `#q1` (comms)
           5.  Send the analysis of `v1`
           6.  Send the analysis of `v5`
           7.  Return to `v15` AND drop rock.
           
           **Finalizing the Plan:**
           
           This plan, once completely executed, will satisfy all the prerequisites of my goal.
           
           I've carefully considered the conditions for sending images, sampling and analyzing rocks, and transmitting the analysis.  I have double-checked that all of the preconditions are in place before action and all the effects required are met. I'm confident in this approach.
           
           However, I now recognize that there may be an important oversight. I will have the rovers return to their initial configurations so I can meet the requirements as stated in the text. I realize that I had to include return actions for both the rovers.
           
           Now, with return plans, I can satisfy everything! This solution is complete.

