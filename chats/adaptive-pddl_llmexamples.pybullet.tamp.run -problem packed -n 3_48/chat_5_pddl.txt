User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v12, v13)
           Atom handempty(v6)
           Atom atbconf(v3)
           Atom bconf(v3)
           Atom graspable(v8)
           Atom aconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom canmove()
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom pose(v12, v13)
           Atom supported(v8, v9, v11)
           Atom arm(v4)
           Atom ataconf(v4, v5)
           Atom stackable(v14, v10)
           Atom atpose(v14, v15)
           Atom supported(v12, v13, v11)
           Atom controllable(v4)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom supported(v14, v15, v11)
           Atom stackable(v12, v16)
           Atom handempty(v4)
           Atom stackable(v8, v16)
           Atom aconf(v6, v7)
           Atom stackable(v12, v10)
           Atom graspable(v12)
           Atom stackable(v8, v10)
           Atom arm(v6)
           Atom stackable(v14, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #p2)
           Atom supported(v14, #p2, v16)
           Atom grasp(v12, #g0)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #g2)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v14, #g1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v8, v9, #g2, #q4, #t8)
           Atom bconf(#q3)
           Atom atraj(#t7)
           Atom kin(v4, v8, #p1, #g2, #q3, #t7)
           Atom bconf(#q2)
           Atom atraj(#t3)
           Atom kin(v4, v14, v15, #g1, #q2, #t3)
           Atom bconf(#q5)
           Atom atraj(#t9)
           Atom kin(v4, v14, #p2, #g1, #q5, #t9)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v12, #p0, #g0, #q1, #t2)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t16)
           Atom basemotion(v3, #t16, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom btraj(#t4)
           Atom basemotion(#q0, #t4, v3)
           Atom basemotion(#q0, #o0, #q4)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(v3, #o0, #q2)
           Atom btraj(#t6)
           Atom basemotion(#q2, #t6, v3)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q3, #o0, #q4)
           Atom btraj(#t15)
           Atom basemotion(#q3, #t15, #q0)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t13)
           Atom basemotion(#q4, #t13, #q3)
           Atom basemotion(v3, #o0, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom btraj(#t11)
           Atom basemotion(#q0, #t11, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t5)
           Atom basemotion(#q1, #t5, v3)
           Atom btraj(#t14)
           Atom basemotion(#q1, #t14, #q2)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q2)
           Atom btraj(#t12)
           Atom basemotion(#q5, #t12, #q4)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q3, #o0, #q5)
           Atom btraj(#t10)
           Atom basemotion(#q2, #t10, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q1 #t11))
           ((move_base #q0 v3 #t4))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q2 #t14))
           ((move_base #q1 v3 #t5))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #t10))
           ((move_base #q2 v3 #t6))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q0 #t15))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q3 #t13))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q4 #t12))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((move_base v3 #q4 #t16))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q1 #t2))
           ((place v4 v12 #p0 #g0 #q1 #t2))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 #p2 #g1 #q5 #t9))
           ((place v4 v14 #p2 #g1 #q5 #t9))
           ((pick v4 v14 v15 #g1 #q2 #t3))
           ((place v4 v14 v15 #g1 #q2 #t3))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p1 #g2 #q3 #t7))
           ((place v4 v8 #p1 #g2 #q3 #t7))
           ((pick v4 v8 v9 #g2 #q4 #t8))
           ((place v4 v8 v9 #g2 #q4 #t8))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms, v4 and v6. Both arms are currently empty. There are three objects: v8, v12, and v14. Each of these objects has multiple possible poses and grasps. They are all stackable with various regions (v10, v16). The goal is to have all three objects (v8, v12, v14) on the region v16.
           
           Currently, v8 is at pose v9, v12 is at pose v13, and v14 is at pose v15. All three objects are currently supported by v11, which implies they are "on" v11. However, the initial state also explicitly mentions `supported(v8, #o2, v10)`, `supported(v14, #p2, v16)`, `supported(v12, #o2, v10)`, `supported(v8, #p1, v16)`, `supported(v12, #p0, v16)`, `supported(v14, #o2, v10)`. The `atpose` predicates indicate their current locations.
           
           Let's break down the current locations:
           - `atpose(v8, v9)` and `supported(v8, v9, v11)` means v8 is on v11.
           - `atpose(v12, v13)` and `supported(v12, v13, v11)` means v12 is on v11.
           - `atpose(v14, v15)` and `supported(v14, v15, v11)` means v14 is on v11.
           
           The goal is to place v8, v12, and v14 on v16. We need to find appropriate poses for each object on v16.
           
           From the initial state, we have:
           - `supported(v8, #p1, v16)`: v8 can be placed at pose #p1 on v16.
           - `supported(v12, #p0, v16)`: v12 can be placed at pose #p0 on v16.
           - `supported(v14, #p2, v16)`: v14 can be placed at pose #p2 on v16.
           
           The plan will involve picking up each object from its current location and placing it at the specified pose on v16. The robot arm v4 is controllable and handempty. We will use arm v4.
           
           Here's the sequence of actions:
           1. Pick v8 from its current pose v9 using grasp #g2, requiring base config #q4 and arm trajectory #t8.
           2. Move the base to a configuration that allows placing v8 at pose #p1 on v16. The pick action for v8 at #p1 uses base config #q3. So we should move to #q3.
           3. Place v8 at pose #p1 using grasp #g2, requiring base config #q3 and arm trajectory #t7.
           4. Pick v12 from its current pose v13 using grasp #g0, requiring base config #q0 and arm trajectory #t0.
           5. Move the base to a configuration that allows placing v12 at pose #p0 on v16. The pick action for v12 at #p0 uses base config #q1. So we should move to #q1.
           6. Place v12 at pose #p0 using grasp #g0, requiring base config #q1 and arm trajectory #t2.
           7. Pick v14 from its current pose v15 using grasp #g1, requiring base config #q2 and arm trajectory #t3.
           8. Move the base to a configuration that allows placing v14 at pose #p2 on v16. The pick action for v14 at #p2 uses base config #q5. So we should move to #q5.
           9. Place v14 at pose #p2 using grasp #g1, requiring base config #q5 and arm trajectory #t9.
           
           Current base configuration is `v3`. We will need to move the base as necessary.
           
           --Plan--:
           (move_base v3 #q4 #t16)
           (pick v4 v8 v9 #g2 #q4 #t8)
           (move_base #q4 #q3 #t13)
           (place v4 v8 #p1 #g2 #q3 #t7)
           (move_base #q3 #q0 #t15)
           (pick v4 v12 v13 #g0 #q0 #t0)
           (move_base #q0 #q1 #t11)
           (place v4 v12 #p0 #g0 #q1 #t2)
           (move_base #q1 #q2 #t14)
           (pick v4 v14 v15 #g1 #q2 #t3)
           (move_base #q2 #q5 #t10)
           (place v4 v14 #p2 #g1 #q5 #t9)

