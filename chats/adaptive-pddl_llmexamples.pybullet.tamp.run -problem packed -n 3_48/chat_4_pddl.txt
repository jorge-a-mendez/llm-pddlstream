User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v12, v13)
           Atom handempty(v6)
           Atom atbconf(v3)
           Atom bconf(v3)
           Atom graspable(v8)
           Atom aconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom canmove()
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom pose(v12, v13)
           Atom supported(v8, v9, v11)
           Atom arm(v4)
           Atom ataconf(v4, v5)
           Atom stackable(v14, v10)
           Atom atpose(v14, v15)
           Atom supported(v12, v13, v11)
           Atom controllable(v4)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom supported(v14, v15, v11)
           Atom stackable(v12, v16)
           Atom handempty(v4)
           Atom stackable(v8, v16)
           Atom aconf(v6, v7)
           Atom stackable(v12, v10)
           Atom graspable(v12)
           Atom stackable(v8, v10)
           Atom arm(v6)
           Atom stackable(v14, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #p2)
           Atom supported(v14, #p2, v16)
           Atom grasp(v12, #g0)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #g2)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v14, #g1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v8, v9, #g2, #q4, #t8)
           Atom bconf(#q3)
           Atom atraj(#t7)
           Atom kin(v4, v8, #p1, #g2, #q3, #t7)
           Atom bconf(#q5)
           Atom atraj(#t9)
           Atom kin(v4, v14, #p2, #g1, #q5, #t9)
           Atom bconf(#q2)
           Atom atraj(#t3)
           Atom kin(v4, v14, v15, #g1, #q2, #t3)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v12, #p0, #g0, #q1, #t2)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q4)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t4)
           Atom basemotion(#q0, #t4, v3)
           Atom basemotion(#q0, #o0, #q4)
           Atom btraj(#t6)
           Atom basemotion(#q2, #t6, v3)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(v3, #o0, #q2)
           Atom btraj(#t13)
           Atom basemotion(#q4, #t13, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t11)
           Atom basemotion(#q0, #t11, #q1)
           Atom basemotion(v3, #o0, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t14)
           Atom basemotion(#q1, #t14, #q2)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t5)
           Atom basemotion(#q1, #t5, v3)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom btraj(#t12)
           Atom basemotion(#q5, #t12, #q4)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, #q3)
           Atom btraj(#t10)
           Atom basemotion(#q2, #t10, #q5)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q1 #t11))
           ((move_base #q0 v3 #t4))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q2 #t14))
           ((move_base #q1 v3 #t5))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #t10))
           ((move_base #q2 v3 #t6))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q3 #t13))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q4 #t12))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q1 #t2))
           ((place v4 v12 #p0 #g0 #q1 #t2))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 #p2 #g1 #q5 #t9))
           ((place v4 v14 #p2 #g1 #q5 #t9))
           ((pick v4 v14 v15 #g1 #q2 #t3))
           ((place v4 v14 v15 #g1 #q2 #t3))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p1 #g2 #q3 #t7))
           ((place v4 v8 #p1 #g2 #q3 #t7))
           ((pick v4 v8 v9 #g2 #q4 #t8))
           ((place v4 v8 v9 #g2 #q4 #t8))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place objects `v8`, `v12`, and `v14` on `v16`.
           Currently, `v8` is at `v9` supported by `v11`.
           `v12` is at `v13` supported by `v11`.
           `v14` is at `v15` supported by `v11`.
           All objects are currently on `v11`. The goal requires them to be on `v16`.
           
           The robot arm `v4` is currently at `aconf v5` and handempty. The base is at `bconf v3`.
           
           The plan will involve picking up each object from its current location and placing it at a pose supported by `v16`.
           We need to use the `place` action with a pose `p` such that `supported(?o, ?p, v16)` is true.
           Looking at the initial state:
           - `v8` has a pose `#p1` supported by `v16`.
           - `v12` has a pose `#p0` supported by `v16`.
           - `v14` has a pose `#p2` supported by `v16`.
           
           So, for each object, the plan is:
           1. Move the base to the `bconf` required for picking up the object from its current pose.
           2. Pick up the object.
           3. Move the base to the `bconf` required for placing the object on `v16`.
           4. Place the object on `v16` at the designated pose.
           
           Let's break it down for each object:
           
           **Object v8:**
           - Current pose: `v9`
           - Kinematic information for picking `v8` from `v9`: `kin(v4, v8, v9, #g2, #q4, #t8)`
           - Target pose on `v16`: `#p1`
           - Kinematic information for placing `v8` at `#p1`: `kin(v4, v8, #p1, #g2, #q3, #t7)`
           
           **Object v12:**
           - Current pose: `v13`
           - Kinematic information for picking `v12` from `v13`: `kin(v4, v12, v13, #g0, #q0, #t0)`
           - Target pose on `v16`: `#p0`
           - Kinematic information for placing `v12` at `#p0`: `kin(v4, v12, #p0, #g0, #q1, #t2)`
           
           **Object v14:**
           - Current pose: `v15`
           - Kinematic information for picking `v14` from `v15`: `kin(v4, v14, v15, #g1, #q2, #t3)`
           - Target pose on `v16`: `#p2`
           - Kinematic information for placing `v14` at `#p2`: `kin(v4, v14, #p2, #g1, #q5, #t9)`
           
           Current base configuration is `v3`.
           
           Plan steps:
           1. Pick `v8`:
               - Move base from `v3` to `q4`.
               - Pick `v8` from `v9`.
               - Move base from `q4` to `q3`.
               - Place `v8` at `#p1`.
           2. Pick `v12`:
               - Move base from `q3` to `q0`.
               - Pick `v12` from `v13`.
               - Move base from `q0` to `q1`.
               - Place `v12` at `#p0`.
           3. Pick `v14`:
               - Move base from `q1` to `q2`.
               - Pick `v14` from `v15`.
               - Move base from `q2` to `q5`.
               - Place `v14` at `#p2`.
           
           --Plan--:
           (move_base v3 #q4 #o0)
           (pick v4 v8 v9 #g2 #q4 #t8)
           (move_base #q4 #q3 #t13)
           (place v4 v8 #p1 #g2 #q3 #t7)
           (move_base #q3 #q0 #o0)
           (pick v4 v12 v13 #g0 #q0 #t0)
           (move_base #q0 #q1 #t11)
           (place v4 v12 #p0 #g0 #q1 #t2)
           (move_base #q1 #q2 #t14)
           (pick v4 v14 v15 #g1 #q2 #t3)
           (move_base #q2 #q5 #t10)
           (place v4 v14 #p2 #g1 #q5 #t9)

