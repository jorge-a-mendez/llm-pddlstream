User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom ataconf(v6, v7)
           Atom stackable(v18, v10)
           Atom arm(v6)
           Atom atpose(v14, v15)
           Atom canmove()
           Atom handempty(v6)
           Atom stackable(v12, v10)
           Atom atpose(v16, v17)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom pose(v12, v13)
           Atom graspable(v18)
           Atom stackable(v12, v20)
           Atom supported(v14, v15, v11)
           Atom controllable(v4)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom pose(v14, v15)
           Atom stackable(v8, v10)
           Atom atpose(v18, v19)
           Atom graspable(v14)
           Atom stackable(v8, v20)
           Atom stackable(v16, v20)
           Atom stackable(v16, v10)
           Atom supported(v8, v9, v11)
           Atom atpose(v12, v13)
           Atom handempty(v4)
           Atom pose(v18, v19)
           Atom aconf(v4, v5)
           Atom supported(v12, v13, v11)
           Atom graspable(v12)
           Atom aconf(v6, v7)
           Atom bconf(v3)
           Atom stackable(v14, v10)
           Atom graspable(v16)
           Atom supported(v16, v17, v11)
           Atom stackable(v14, v20)
           Atom ataconf(v4, v5)
           Atom pose(v16, v17)
           Atom supported(v18, v19, v11)
           Atom stackable(v18, v20)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom grasp(v18, #o1)
           Atom supported(v18, #o2, v20)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v20)
           Atom grasp(v16, #o1)
           Atom supported(v14, #o2, v10)
           Atom supported(v16, #o2, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom grasp(v14, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #o1)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v20)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several graspable and stackable objects (v8, v12, v14, v16, v18) currently supported by `v11`. The goal is to place all these objects `on` `v20`. The robot has two arms, `v4` and `v6`, both currently handempty. The robot is at base configuration `v3`.
           
           The only allowed action instance is `(move_base v3 v3 #o0)`. This action moves the robot's base from `v3` to `v3` using trajectory `#o0`. This action doesn't change the state of the objects or the robot's ability to manipulate them beyond making `canmove()` true again after the move. It also doesn't allow the robot to pick up or place any objects.
           
           To achieve the goal of `on(object, v20)` for multiple objects, the robot needs to perform `pick` and `place` actions. However, no `pick` or `place` action instances are provided in the list of allowed actions. The robot also doesn't have `type(v20, @sink)` or `type(v20, @stove)` facts, so `v20` must be a regular support surface (like a table). Since there are no `pick` or `place` actions available, the robot cannot manipulate the objects to place them on `v20`. Therefore, the goal is unreachable.

