User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v8, v9)
           Atom atbconf(v3)
           Atom stackable(v12, v18)
           Atom bconf(v3)
           Atom arm(v6)
           Atom supported(v12, v13, v14)
           Atom pose(v12, v13)
           Atom canmove()
           Atom pose(v15, v16)
           Atom handempty(v4)
           Atom aconf(v4, v5)
           Atom controllable(v4)
           Atom stackable(v12, v10)
           Atom graspable(v15)
           Atom type(v8, v17)
           Atom stackable(v8, v10)
           Atom stackable(v8, v18)
           Atom atpose(v8, v9)
           Atom type(v12, v17)
           Atom aconf(v6, v7)
           Atom graspable(v12)
           Atom supported(v8, v9, v11)
           Atom atpose(v12, v13)
           Atom handempty(v6)
           Atom atpose(v15, v16)
           Atom arm(v4)
           Atom supported(v15, v16, v11)
           Atom ataconf(v4, v5)
           Atom stackable(v15, v10)
           Atom graspable(v8)
           Atom ataconf(v6, v7)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v12, #o2, v18)
           Atom grasp(v12, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom supported(v8, #o2, v10)
           Atom grasp(v15, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be achieved if `on(?green, v18)` and `type(?green, v17)` are true. From the initial state, we know `type(v12, v17)`. So, if we can achieve `on(v12, v18)`, the goal will be satisfied.
           
           We know that `on(?o, ?r)` is true if `supported(?o, ?p, ?r)` and `atpose(?o, ?p)` are true.
           Currently, `v12` is at `pose(v12, v13)` and is `supported(v12, v13, v14)`. We also have `supported(v12, #o2, v18)` and `supported(v12, #o2, v10)`.
           To get `on(v12, v18)`, we need `atpose(v12, #o2)` and `supported(v12, #o2, v18)`.
           Currently, `v12` is at `atpose(v12, v13)`. We need to move it to `atpose(v12, #o2)`.
           This can be achieved by picking `v12` from its current pose `v13` and placing it at `#o2`.
           
           The available actions allow picking `v12` from `v13` using arm `v4` and then placing it at `#o2` using arm `v4`.
           The robot is currently at `atbconf(v3)` and arm `v4` is `handempty(v4)` and at `ataconf(v4, v5)`.
           The `pick` action requires `kin(v4, v12, v13, #o1, #o3, #o4)`, which is available.
           The `place` action requires `kin(v4, v12, #o2, #o1, #o3, #o4)`, which is also available.
           Both `pick` and `place` also require `atbconf(#o3)`. We are currently at `atbconf(v3)`. We can move from `v3` to `#o3` using `move_base`.
           
           Therefore, the plan is to first move the base, then pick `v12` from `v13`, and then place `v12` at `#o2`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)

