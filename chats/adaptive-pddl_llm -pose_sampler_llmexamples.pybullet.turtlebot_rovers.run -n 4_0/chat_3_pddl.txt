User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v1, v2)
           Atom objective(v17)
           Atom type(v7, v6)
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom atconf(v14, v15)
           Atom type(v3, v2)
           Atom type(v5, v6)
           Atom rock(v3)
           Atom type(v8, v6)
           Atom lander(v9)
           Atom camera(v10)
           Atom conf(v14, v15)
           Atom type(v4, v2)
           Atom objective(v18)
           Atom onboard(v10, v14)
           Atom objective(v20)
           Atom supports(v10, v11)
           Atom rock(v5)
           Atom rock(v8)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom mode(v11)
           Atom atconf(v12, v13)
           Atom rover(v12)
           Atom rock(v4)
           Atom free(v12, v16)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom rock(v7)
           Atom objective(v19)
           Atom imagevisible(v12, #q9, #y7, v19)
           Atom imagerange(v12, #q9, v19)
           Atom conf(v12, #q9)
           Atom ray(#y7)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q8, #y6, v17)
           Atom imagerange(v12, #q8, v17)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q4, #y3, v19)
           Atom imagerange(v14, #q4, v19)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q7, #y5, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v7)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom comvisible(v12, #q6, #y4, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v3)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q0, v5)
           Atom conf(v12, #q0)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v12, #q11, #y9, v20)
           Atom imagerange(v12, #q11, v20)
           Atom conf(v12, #q11)
           Atom ray(#y9)
           Atom imagevisible(v14, #q1, #y0, v20)
           Atom imagerange(v14, #q1, v20)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom imagevisible(v14, #q2, #y1, v18)
           Atom imagerange(v14, #q2, v18)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom imagevisible(v12, #q10, #y8, v18)
           Atom imagerange(v12, #q10, v18)
           Atom conf(v12, #q10)
           Atom ray(#y8)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #t17, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, v13, #t15, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v14, v15, #t12, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, v13, #t16, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, v13, #t18, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q5, #t10, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q8, #t19, #q6)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q6, #t3, #q5)
           Atom motion(v12, #q10, #t21, #q6)
           Atom motion(v12, #q9, #t20, #q6)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q6, #t8, v13)
           Atom motion(v12, #q11, #t22, #q6)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #t11, #q1)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q3, #t1, v15)
           Atom motion(v14, #q2, #t5, #q3)
           Atom motion(v14, #q1, #t4, #q3)
           Atom motion(v14, #q7, #t7, #q3)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, v15, #t14, #q7)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q6, #t2, #q0)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #t9, #q6)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q4, #t6, #q3)
           Atom motion(v14, v15, #t13, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v5 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t9 #q6))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t21 #q6))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t22 #q6))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t10 #q6))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #t2 #q0))
           ((move v12 #q6 #t3 #q5))
           ((move v12 #q6 #t8 v13))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q6))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t20 #q6))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t15 #q8))
           ((move v12 v13 #t16 #q9))
           ((move v12 v13 #t17 #q10))
           ((move v12 v13 #t18 #q11))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t4 #q3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t5 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #t1 v15))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t6 #q3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t7 #q3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t11 #q1))
           ((move v14 v15 #t12 #q2))
           ((move v14 v15 #t13 #q4))
           ((move v14 v15 #t14 #q7))
           ((calibrate v12 #q10 #y8 v18 v10))
           ((calibrate v12 #q11 #y9 v20 v10))
           ((calibrate v12 #q8 #y6 v17 v10))
           ((calibrate v12 #q9 #y7 v19 v10))
           ((calibrate v14 #q1 #y0 v20 v10))
           ((calibrate v14 #q2 #y1 v18 v10))
           ((calibrate v14 #q4 #y3 v19 v10))
           ((calibrate v14 #q7 #y5 v17 v10))
           ((take_image v12 #q10 #y8 v18 v10 v11))
           ((take_image v12 #q11 #y9 v20 v10 v11))
           ((take_image v12 #q8 #y6 v17 v10 v11))
           ((take_image v12 #q9 #y7 v19 v10 v11))
           ((take_image v14 #q1 #y0 v20 v10 v11))
           ((take_image v14 #q2 #y1 v18 v10 v11))
           ((take_image v14 #q4 #y3 v19 v10 v11))
           ((take_image v14 #q7 #y5 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y4 v9 v3))
           ((send_analysis v12 #q6 #y4 v9 v4))
           ((send_analysis v12 #q6 #y4 v9 v7))
           ((send_analysis v12 #q6 #y4 v9 v8))
           ((send_analysis v12 #q6 #y4 v9 v5))
           ((send_analysis v12 #q6 #y4 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_image v12 #q6 #y4 v9 v18 v11))
           ((send_image v12 #q6 #y4 v9 v20 v11))
           ((send_image v12 #q6 #y4 v9 v17 v11))
           ((send_image v12 #q6 #y4 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v20 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to achieve the state described by `new-axiom@0()`. This axiom is a conjunction of several conditions, including that rover v12 and v14 are at some configuration, their stores are free, four specific images have been received, and two types of rocks (v2 and v6) have been analyzed.
           
           Let's break down the required conditions:
           1. `atconf(v12, v13)`: Rover v12 is at configuration v13. This is already true in the initial state.
           2. `atconf(v14, v15)`: Rover v14 is at configuration v15. This is already true in the initial state.
           3. `free(v12, v16)`: Rover v12's store v16 is free. This is already true in the initial state.
           4. `free(v14, v16)`: Rover v14's store v16 is free. This is already true in the initial state.
           5. `receivedimage(v17, v11)`: An image of objective v17 in mode v11 has been received.
           6. `receivedimage(v18, v11)`: An image of objective v18 in mode v11 has been received.
           7. `receivedimage(v19, v11)`: An image of objective v19 in mode v11 has been received.
           8. `receivedimage(v20, v11)`: An image of objective v20 in mode v11 has been received.
           9. `type(?stone, v2)` and `receivedanalysis(?stone)`: A rock of type v2 has been analyzed.
           10. `type(?soil, v6)` and `receivedanalysis(?soil)`: A rock of type v6 has been analyzed.
           
           To satisfy conditions 5-8 (received images), we need to:
           - Calibrate a camera.
           - Take an image of the objective.
           - Send the image.
           There are two rovers (v12 and v14) and one camera (v10). Both rovers can move to configurations where they can image the objectives.
           
           To satisfy conditions 9-10 (received analysis):
           - Sample a rock.
           - Send the analysis.
           There are rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8).
           
           Let's focus on collecting images first, as we need four unique images.
           For objective v17:
           - Rover v12 can image v17 at #q8.
           - Rover v14 can image v17 at #q7.
           For objective v18:
           - Rover v12 can image v18 at #q10.
           - Rover v14 can image v18 at #q2.
           For objective v19:
           - Rover v12 can image v19 at #q9.
           - Rover v14 can image v19 at #q4.
           For objective v20:
           - Rover v12 can image v20 at #q11.
           - Rover v14 can image v20 at #q1.
           
           We can use rover v12 to get images of v17, v18, v19, v20 and send them.
           We can use rover v14 to analyze rocks.
           
           Plan for images (using v12):
           1. Calibrate camera at a suitable location (e.g., #q8 for v17).
           2. Take image of v17.
           3. Move to another location (e.g., #q10 for v18).
           4. Calibrate camera again (since `take_image` uncalibrates).
           5. Take image of v18.
           6. Move to another location (e.g., #q9 for v19).
           7. Calibrate camera.
           8. Take image of v19.
           9. Move to another location (e.g., #q11 for v20).
           10. Calibrate camera.
           11. Take image of v20.
           12. Move to a communication location (e.g., #q6) and send all four images.
           
           Plan for rock analysis (using v14):
           1. Sample a rock of type v2 (e.g., v3 from above #o5).
           2. Move to a communication location (e.g., #q3).
           3. Send analysis for v3.
           4. Sample a rock of type v6 (e.g., v5 from above #o5).
           5. Move to a communication location (already at #q3 or move to #q3 again).
           6. Send analysis for v5.
           
           Let's combine and optimize.
           
           Rover v12 is at v13 initially.
           Rover v14 is at v15 initially.
           
           Objectives to get images of: v17, v18, v19, v20 (all need mode v11).
           Rocks to analyze: one of type v2 (v1, v3, v4) and one of type v6 (v5, v7, v8).
           
           Let's use v12 for imaging and v14 for sampling.
           
           V12:
           - Needs to take images of v17, v18, v19, v20.
           - Needs to be at #q8 for v17, #q10 for v18, #q9 for v19, #q11 for v20.
           - Needs to be at #q6 to send images.
           
           V14:
           - Needs to sample a rock of type v2 (e.g., v3). Rover v14 can sample v3 at #o5.
           - Needs to sample a rock of type v6 (e.g., v5). Rover v14 can sample v5 at #o5.
           - Needs to be at #q3 to send analysis.
           
           Let's make v12 take all the pictures, then move to a communication point.
           Let's make v14 sample rocks, then move to a communication point.
           
           V12 sequence:
           1. `(move v12 v13 #t15 #q8)`: Move to position for v17.
           2. `(calibrate v12 #q8 #y6 v17 v10)`: Calibrate camera for v17.
           3. `(take_image v12 #q8 #y6 v17 v10 v11)`: Take image of v17.
           4. `(move v12 #q8 #o2 #q10)`: Move to position for v18.
           5. `(calibrate v12 #q10 #y8 v18 v10)`: Calibrate camera for v18.
           6. `(take_image v12 #q10 #y8 v18 v10 v11)`: Take image of v18.
           7. `(move v12 #q10 #o2 #q9)`: Move to position for v19.
           8. `(calibrate v12 #q9 #y7 v19 v10)`: Calibrate camera for v19.
           9. `(take_image v12 #q9 #y7 v19 v10 v11)`: Take image of v19.
           10. `(move v12 #q9 #o2 #q11)`: Move to position for v20.
           11. `(calibrate v12 #q11 #y9 v20 v10)`: Calibrate camera for v20.
           12. `(take_image v12 #q11 #y9 v20 v10 v11)`: Take image of v20.
           13. `(move v12 #q11 #t22 #q6)`: Move to communication point.
           14. `(send_image v12 #q6 #y4 v9 v17 v11)`: Send v17 image.
           15. `(send_image v12 #q6 #y4 v9 v18 v11)`: Send v18 image.
           16. `(send_image v12 #q6 #y4 v9 v19 v11)`: Send v19 image.
           17. `(send_image v12 #q6 #y4 v9 v20 v11)`: Send v20 image.
           
           V14 sequence:
           1. `(move v14 v15 #o2 #o5)`: Move to position to sample rocks.
           2. `(sample_rock v14 #o5 v3 v16)`: Sample rock v3 (type v2).
           3. `(sample_rock v14 #o5 v5 v16)`: Sample rock v5 (type v6). This will fill the store.
           The goal doesn't require `free(v14, v16)` at the end, just `free(v12, v16)` and `free(v14, v16)` as initial state (which is true), then `full(v14, v16)` after sampling. However, the initial state is `free(v14, v16)`, and the axiom requires it to be `free(v14, v16)` and `free(v12, v16)`. This means we need to drop the rock after sampling the second one.
           Let's rethink the sampling. We need `receivedanalysis(?r)` for rocks of type v2 and v6.
           The axiom specifies `receivedanalysis(?stone)` where `type(?stone, v2)` and `receivedanalysis(?soil)` where `type(?soil, v6)`. It means we need to analyze *one* rock of each type and send its analysis.
           We have `free(v14, v16)` initially.
           So, for v14:
           1. `(move v14 v15 #o2 #o5)`: Move to position to sample rocks.
           2. `(sample_rock v14 #o5 v3 v16)`: Sample rock v3 (type v2). Store is now full.
           3. `(move v14 #o5 #o2 #q3)`: Move to communication point.
           4. `(send_analysis v14 #q3 #y2 v9 v3)`: Send analysis for v3.
           5. `(drop_rock v14 v16)`: Drop v3, store is now free.
           6. `(move v14 #q3 #o2 #o5)`: Move back to sampling position.
           7. `(sample_rock v14 #o5 v5 v16)`: Sample rock v5 (type v6). Store is now full.
           8. `(move v14 #o5 #o2 #q3)`: Move to communication point.
           9. `(send_analysis v14 #q3 #y2 v9 v5)`: Send analysis for v5.
           10. `(drop_rock v14 v16)`: Drop v5, store is now free.
           
           This plan achieves all aspects of the goal: `atconf` for both rovers are maintained, `free` stores are maintained after analysis, all four images are received, and both types of rock analysis are received.
           
           ```
           (move v12 v13 #t15 #q8)
           (calibrate v12 #q8 #y6 v17 v10)
           (take_image v12 #q8 #y6 v17 v10 v11)
           (move v12 #q8 #o2 #q10)
           (calibrate v12 #q10 #y8 v18 v10)
           (take_image v12 #q10 #y8 v18 v10 v11)
           (move v12 #q10 #o2 #q9)
           (calibrate v12 #q9 #y7 v19 v10)
           (take_image v12 #q9 #y7 v19 v10 v11)
           (move v12 #q9 #o2 #q11)
           (calibrate v12 #q11 #y9 v20 v10)
           (take_image v12 #q11 #y9 v20 v10 v11)
           (move v12 #q11 #t22 #q6)
           (send_image v12 #q6 #y4 v9 v17 v11)
           (send_image v12 #q6 #y4 v9 v18 v11)
           (send_image v12 #q6 #y4 v9 v19 v11)
           (send_image v12 #q6 #y4 v9 v20 v11)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q3)
           (send_analysis v14 #q3 #y2 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q3 #o2 #o5)
           (sample_rock v14 #o5 v5 v16)
           (move v14 #o5 #o2 #q3)
           (send_analysis v14 #q3 #y2 v9 v5)
           (drop_rock v14 v16)
           ```

