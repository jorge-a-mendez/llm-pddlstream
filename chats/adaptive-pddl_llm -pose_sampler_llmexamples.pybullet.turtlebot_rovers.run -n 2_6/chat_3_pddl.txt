User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v4, v2)
           Atom free(v14, v16)
           Atom atconf(v14, v15)
           Atom mode(v11)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom type(v5, v6)
           Atom rock(v4)
           Atom camera(v10)
           Atom type(v1, v2)
           Atom objective(v17)
           Atom onboard(v10, v12)
           Atom lander(v9)
           Atom type(v8, v6)
           Atom type(v7, v6)
           Atom rock(v5)
           Atom rock(v3)
           Atom supports(v10, v11)
           Atom atconf(v12, v13)
           Atom onboard(v10, v14)
           Atom store(v16)
           Atom conf(v14, v15)
           Atom objective(v18)
           Atom rock(v1)
           Atom rock(v7)
           Atom conf(v12, v13)
           Atom rock(v8)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v7)
           Atom above(v12, #q9, v7)
           Atom conf(v12, #q9)
           Atom above(v12, #o5, v1)
           Atom above(v14, #q2, v1)
           Atom conf(v14, #q2)
           Atom imagevisible(v14, #q8, #y5, v18)
           Atom imagerange(v14, #q8, v18)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom imagevisible(v12, #q4, #y2, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom comvisible(v14, #q3, #y1, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y1)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q7, #y4, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y4)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v4)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q6, v3)
           Atom conf(v12, #q6)
           Atom above(v12, #o5, v5)
           Atom above(v14, #q1, v5)
           Atom conf(v14, #q1)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v14, v15, #t3, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q0, #t15, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t6, #q0)
           Atom motion(v12, v13, #t8, #q5)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, v15, #t4, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #t13, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q3, #t9, v15)
           Atom motion(v14, #q1, #t1, #q3)
           Atom motion(v14, #q2, #t2, #q3)
           Atom motion(v14, #q7, #t11, #q3)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v12, #q0, #t14, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, v13, #t10, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #t12, #q0)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, v13, #t7, #q4)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #t5, #q0)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q1, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q6 v3 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q1 v5 v16))
           ((sample_rock v14 #q2 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t14 #q6))
           ((move v12 #q0 #t15 #q9))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t5 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t6 #q0))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q0))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q6))
           ((move v12 v13 #t7 #q4))
           ((move v12 v13 #t8 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t2 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #t9 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t11 #q3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t13 #q7))
           ((move v14 v15 #t3 #q1))
           ((move v14 v15 #t4 #q2))
           ((calibrate v12 #q4 #y2 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #q7 #y4 v17 v10))
           ((calibrate v14 #q8 #y5 v18 v10))
           ((take_image v12 #q4 #y2 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q7 #y4 v17 v10 v11))
           ((take_image v14 #q8 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y1 v9 v3))
           ((send_analysis v14 #q3 #y1 v9 v4))
           ((send_analysis v14 #q3 #y1 v9 v7))
           ((send_analysis v14 #q3 #y1 v9 v8))
           ((send_analysis v14 #q3 #y1 v9 v5))
           ((send_analysis v14 #q3 #y1 v9 v1))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q3 #y1 v9 v17 v11))
           ((send_image v14 #q3 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, `v12` and `v14`, and a lander `v9`. There are several rock objectives, `v1`, `v3`, `v4`, `v5`, `v7`, `v8`, and two generic objectives, `v17` and `v18`. Rover `v12` is at configuration `v13` and rover `v14` is at configuration `v15`. Both rovers have a camera `v10` and a store `v16`, which is currently free. The camera `v10` supports mode `v11`.
           
           The goal `new-axiom@0()` can be satisfied if any of the following conditions are met:
           1. Two rovers are at different configurations, their stores are free, two images for different objectives and a mode have been received, and two rocks of different types have been analyzed.
           2. Two rovers are at the same configuration, their stores are free, two images for different objectives and a mode have been received, and two rocks of different types have been analyzed.
           
           The simplest way to satisfy the goal is to get two images and two rock analyses received.
           
           Let's break down the plan:
           1. **Analyze two rocks**: Rover `v12` is above rock `v8` at configuration `#o5`. It can sample `v8`. Then it can move to a configuration where it can communicate with the lander and send the analysis. Rover `v14` is above rock `v1` at configuration `#q2`. It can sample `v1`. Then it can move to a configuration where it can communicate with the lander and send the analysis.
           2. **Receive two images**: Rover `v12` can take an image of `v18` at `#q4` or `v17` at `#q5`. Rover `v14` can take an image of `v17` at `#q7` or `v18` at `#q8`. We need to calibrate the camera before taking an image and then send the image.
           
           Let's try to achieve:
           - `receivedanalysis(v8)` from rover `v12`
           - `receivedanalysis(v1)` from rover `v14`
           - `receivedimage(v18, v11)` from rover `v12`
           - `receivedimage(v17, v11)` from rover `v14`
           
           **Rover v12 plan:**
           - `sample_rock v12 #o5 v8 v16`: Samples rock `v8`.
           - `move v12 #o5 #o2 #q0`: Moves to a configuration where it can communicate with the lander.
           - `send_analysis v12 #q0 #y0 v9 v8`: Sends the analysis of `v8`.
           - `calibrate v12 #q4 #y2 v18 v10`: Calibrates the camera to take an image of `v18`.
           - `move v12 #q0 #o2 #q4`: Moves to the configuration to take the image.
           - `take_image v12 #q4 #y2 v18 v10 v11`: Takes an image of `v18`.
           - `move v12 #q4 #t5 #q0`: Moves back to the communication configuration.
           - `send_image v12 #q0 #y0 v9 v18 v11`: Sends the image of `v18`.
           
           **Rover v14 plan:**
           - `sample_rock v14 #q2 v1 v16`: Samples rock `v1`.
           - `move v14 #q2 #t2 #q3`: Moves to a configuration where it can communicate with the lander.
           - `send_analysis v14 #q3 #y1 v9 v1`: Sends the analysis of `v1`.
           - `calibrate v14 #q7 #y4 v17 v10`: Calibrates the camera to take an image of `v17`.
           - `move v14 #q3 #o2 #q7`: Moves to the configuration to take the image.
           - `take_image v14 #q7 #y4 v17 v10 v11`: Takes an image of `v17`.
           - `move v14 #q7 #t11 #q3`: Moves back to the communication configuration.
           - `send_image v14 #q3 #y1 v9 v17 v11`: Sends the image of `v17`.
           
           Combining these actions while respecting preconditions should give a valid plan. Note that rover `v12` starts at `v13` and rover `v14` starts at `v15`, which are not necessarily `#o5` or `#q2`. However, the initial state includes `above(v14, #o5, v8)` and `atconf(v14, v15)` and `above(v12, #o5, v8)` and `atconf(v12, v13)`. This indicates that the rovers are currently at `v15` and `v13` respectively, but they are also "above" the rocks at `#o5` which suggests they are able to sample at `#o5` from their current position. However, the action `sample_rock` requires `atconf(?v, ?q)` to be true, and the sample rock action list provides `sample_rock v12 #o5 v8 v16` and `sample_rock v14 #q2 v1 v16`. This means `v12` needs to be at `#o5` and `v14` at `#q2`. So first they need to move.
           
           Let's check initial positions and targets for sampling:
           - `v12` is at `v13`. To sample `v8`, it needs to be at `#o5`. `move v12 v13 #o2 #o5`
           - `v14` is at `v15`. To sample `v1`, it needs to be at `#q2`. `move v14 v15 #t4 #q2`
           
           Let's refine the plan based on the available moves:
           
           --Plan--:
           (move v12 v13 #o2 #o5)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v8)
           (move v12 #q0 #o2 #q4)
           (calibrate v12 #q4 #y2 v18 v10)
           (take_image v12 #q4 #y2 v18 v10 v11)
           (move v12 #q4 #t5 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v14 v15 #t4 #q2)
           (sample_rock v14 #q2 v1 v16)
           (move v14 #q2 #t2 #q3)
           (send_analysis v14 #q3 #y1 v9 v1)
           (move v14 #q3 #o2 #q7)
           (calibrate v14 #q7 #y4 v17 v10)
           (take_image v14 #q7 #y4 v17 v10 v11)
           (move v14 #q7 #t11 #q3)
           (send_image v14 #q3 #y1 v9 v17 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. Let's re-examine the goal `new-axiom@0()`. As per the provided axioms, this goal is true if:
           
           `atconf(v12, v13)` AND `atconf(v14, v15)` AND `free(v12, v16)` AND `free(v14, v16)` AND `receivedimage(v17, v11)` AND `receivedimage(v18, v11)` AND `type(?stone, v2)` AND `receivedanalysis(?stone)` AND `type(?soil, v6)` AND `receivedanalysis(?soil)`
           
           This means we need to ensure the following:
           1. Both rovers `v12` and `v14` are at their initial configurations `v13` and `v15` respectively *at the end of the plan*.
           2. Both stores `v16` for rovers `v12` and `v14` are `free` *at the end of the plan*. This implies if we sample a rock, we must drop it.
           3. We need `receivedimage(v17, v11)` and `receivedimage(v18, v11)`.
           4. We need to analyze a rock of `type v2` (stone) and a rock of `type v6` (soil), and have their analyses received.
           
           Let's check the initial state for the rock types:
           - `type(v4, v2)` (v4 is stone)
           - `type(v5, v6)` (v5 is soil)
           - `type(v1, v2)` (v1 is stone)
           - `type(v8, v6)` (v8 is soil)
           - `type(v7, v6)` (v7 is soil)
           - `type(v3, v2)` (v3 is stone)
           
           So we have multiple options for stone and soil. For example, we can use `v4` (stone) and `v5` (soil).
           
           The rovers need to return to their initial positions and their stores must be free. This means that if they sample a rock, they must drop it before the plan ends.
           
           Let's try to get:
           - `receivedanalysis(v4)` (stone)
           - `receivedanalysis(v5)` (soil)
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           
           And ensure `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)` are true at the end.
           
           **Rover v12 plan (targets v4, v18):**
           - Start at `v13`.
           - Move to `#o5` to sample `v4`. (v12 is above v4 at #o5)
           - `sample_rock v12 #o5 v4 v16`
           - Move to `#q0` to send analysis.
           - `send_analysis v12 #q0 #y0 v9 v4`
           - `drop_rock v12 v16` (to make store free again)
           - Move to `#q4` to calibrate and take image of `v18`.
           - `calibrate v12 #q4 #y2 v18 v10`
           - `take_image v12 #q4 #y2 v18 v10 v11`
           - Move to `#q0` to send image.
           - `send_image v12 #q0 #y0 v9 v18 v11`
           - Move back to `v13`.
           
           **Rover v14 plan (targets v5, v17):**
           - Start at `v15`.
           - Move to `#q1` to sample `v5`. (v14 is above v5 at #q1)
           - `sample_rock v14 #q1 v5 v16`
           - Move to `#q3` to send analysis.
           - `send_analysis v14 #q3 #y1 v9 v5`
           - `drop_rock v14 v16` (to make store free again)
           - Move to `#q7` to calibrate and take image of `v17`.
           - `calibrate v14 #q7 #y4 v17 v10`
           - `take_image v14 #q7 #y4 v17 v10 v11`
           - Move to `#q3` to send image.
           - `send_image v14 #q3 #y1 v9 v17 v11`
           - Move back to `v15`.
           
           Let's check for specific move actions and order them.
           
           --Plan--:
           (move v12 v13 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #q4)
           (calibrate v12 #q4 #y2 v18 v10)
           (take_image v12 #q4 #y2 v18 v10 v11)
           (move v12 #q4 #t5 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #t0 v13)
           (move v14 v15 #t3 #q1)
           (sample_rock v14 #q1 v5 v16)
           (move v14 #q1 #t1 #q3)
           (send_analysis v14 #q3 #y1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q3 #o2 #q7)
           (calibrate v14 #q7 #y4 v17 v10)
           (take_image v14 #q7 #y4 v17 v10 v11)
           (move v14 #q7 #t11 #q3)
           (send_image v14 #q3 #y1 v9 v17 v11)
           (move v14 #q3 #t9 v15)

