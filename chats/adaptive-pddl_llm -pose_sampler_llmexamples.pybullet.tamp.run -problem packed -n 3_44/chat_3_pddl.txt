User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom ataconf(v4, v5)
           Atom pose(v14, v15)
           Atom supported(v14, v15, v11)
           Atom pose(v12, v13)
           Atom aconf(v6, v7)
           Atom stackable(v14, v10)
           Atom atpose(v12, v13)
           Atom supported(v12, v13, v11)
           Atom supported(v8, v9, v11)
           Atom ataconf(v6, v7)
           Atom arm(v4)
           Atom stackable(v8, v16)
           Atom graspable(v12)
           Atom controllable(v4)
           Atom stackable(v12, v10)
           Atom arm(v6)
           Atom graspable(v14)
           Atom pose(v8, v9)
           Atom stackable(v12, v16)
           Atom aconf(v4, v5)
           Atom stackable(v14, v16)
           Atom bconf(v3)
           Atom handempty(v6)
           Atom atpose(v14, v15)
           Atom atbconf(v3)
           Atom atpose(v8, v9)
           Atom canmove()
           Atom graspable(v8)
           Atom stackable(v8, v10)
           Atom handempty(v4)
           Atom pose(v8, #p2)
           Atom supported(v8, #p2, v16)
           Atom grasp(v8, #g1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v14, #p0)
           Atom supported(v14, #p0, v16)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v16)
           Atom grasp(v14, #g0)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g2)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v8, #p2, #g1, #q4, #t7)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, v9, #g1, #q1, #t1)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v14, #p0, #g0, #q5, #t8)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, v15, #g0, #q0, #t0)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v12, #p1, #g2, #q3, #t6)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, v13, #g2, #q2, #t2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 #p1 #g2 #q3 #t6))
           ((place v4 v12 #p1 #g2 #q3 #t6))
           ((pick v4 v12 v13 #g2 #q2 #t2))
           ((place v4 v12 v13 #g2 #q2 #t2))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 #p0 #g0 #q5 #t8))
           ((place v4 v14 #p0 #g0 #q5 #t8))
           ((pick v4 v14 v15 #g0 #q0 #t0))
           ((place v4 v14 v15 #g0 #q0 #t0))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 #p2 #g1 #q4 #t7))
           ((place v4 v8 #p2 #g1 #q4 #t7))
           ((pick v4 v8 v9 #g1 #q1 #t1))
           ((place v4 v8 v9 #g1 #q1 #t1))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (v8, v12, v14) that are `graspable` and `stackable` on different receptacles (v10, v11, v16). The robot has two arms (v4, v6), with v4 being controllable and both arms initially empty. The initial state shows that objects v8, v12, and v14 are currently on v11 (an implicit receptacle due to `supported` facts). The goal is to move all three objects (v8, v12, v14) to be on receptacle v16. This will require picking up each object and placing it on v16. The arm v4 is used for picking and placing tasks.
           
           Here's a breakdown of the steps:
           
           1.  **Move v8 to v16**:
               *   The robot's base needs to be at the correct configuration for grasping v8 at its current pose (v9). This is `q1`.
               *   Pick v8 from v9 using arm v4.
               *   The robot's base needs to be at the correct configuration for placing v8 on v16. The pose for placing on v16 is given as `#p2` for v8, which requires base configuration `q4`.
               *   Place v8 onto v16 at pose `#p2`.
           
           2.  **Move v12 to v16**:
               *   The robot's base needs to be at the correct configuration for grasping v12 at its current pose (v13). This is `q2`.
               *   Pick v12 from v13 using arm v4.
               *   The robot's base needs to be at the correct configuration for placing v12 on v16. The pose for placing on v16 is given as `#p1` for v12, which requires base configuration `q3`.
               *   Place v12 onto v16 at pose `#p1`.
           
           3.  **Move v14 to v16**:
               *   The robot's base needs to be at the correct configuration for grasping v14 at its current pose (v15). This is `q0`.
               *   Pick v14 from v15 using arm v4.
               *   The robot's base needs to be at the correct configuration for placing v14 on v16. The pose for placing on v16 is given as `#p0` for v14, which requires base configuration `q5`.
               *   Place v14 onto v16 at pose `#p0`.
           
           It is crucial to use the appropriate base configurations (`bconf`) and trajectories (`atraj`, `btraj`) for each pick and place operation, as specified in the `kin` and `basemotion` facts.
           
           --Plan--:
           (move_base v3 #q1 #t4)
           (pick v4 v8 v9 #g1 #q1 #t1)
           (move_base #q1 #q4 #o0)
           (place v4 v8 #p2 #g1 #q4 #t7)
           (move_base #q4 #q2 #o0)
           (pick v4 v12 v13 #g2 #q2 #t2)
           (move_base #q2 #q3 #o0)
           (place v4 v12 #p1 #g2 #q3 #t6)
           (move_base #q3 #q0 #o0)
           (pick v4 v14 v15 #g0 #q0 #t0)
           (move_base #q0 #q5 #o0)
           (place v4 v14 #p0 #g0 #q5 #t8)

