User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v47: object
           v48: object
           v49: object
           v5: object
           v50: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.055, -0.015), (0.015, 0.055)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v9 is a pose with position (0.201, -0.381, 0.781) and quaternion (0.0, 0.0, 0.837, 0.548).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.015, -0.015), (0.055, 0.055)).
           Object v13 is a pose with position (0.001, 0.386, 0.781) and quaternion (0.0, 0.0, 0.996, -0.09).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.055, -0.055), (0.015, 0.015)).
           Object p4 is a pose with position (-0.06, 0.06, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.148, 0.337, 0.781) and quaternion (0.0, 0.0, 0.985, 0.171).
           Object p5 is a pose with position (0.06, 0.06, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (-0.06, -0.06, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.06, -0.06, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.015, -0.055), (0.055, 0.015)).
           Object v17 is a pose with position (-0.036, 0.539, 0.781) and quaternion (0.0, 0.0, 0.555, 0.832).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p8 is a pose with position (-0.02, 0.02, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (0.02, 0.02, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (-0.02, -0.02, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.02, -0.02, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v8, v9)
           Atom atbconf(v3)
           Atom supported(v8, p8, v18)
           Atom pose(v14, p10)
           Atom supported(v8, p4, v18)
           Atom pose(v14, v15)
           Atom supported(v14, p6, v18)
           Atom atpose(v14, v15)
           Atom graspable(v14)
           Atom kin(v31, v37, p10, v49, v34, v35)
           Atom supported(v16, p11, v18)
           Atom supported(v12, v13, v11)
           Atom aconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom stackable(v14, v18)
           Atom pose(v8, p4)
           Atom stackable(v12, v18)
           Atom kin(v31, v32, p8, v47, v34, v35)
           Atom supported(v12, p9, v18)
           Atom pose(v12, p9)
           Atom bconf(v3)
           Atom graspable(v8)
           Atom graspable(v12)
           Atom arm(v6)
           Atom pose(v8, p8)
           Atom stackable(v16, v10)
           Atom pose(v12, v13)
           Atom supported(v12, p5, v18)
           Atom supported(v14, p10, v18)
           Atom arm(v4)
           Atom atpose(v8, v9)
           Atom aconf(v4, v5)
           Atom supported(v16, v17, v11)
           Atom stackable(v16, v18)
           Atom kin(v31, v37, p6, v33, v34, v35)
           Atom handempty(v4)
           Atom controllable(v4)
           Atom stackable(v12, v10)
           Atom handempty(v6)
           Atom kin(v31, v36, p5, v33, v34, v35)
           Atom ataconf(v6, v7)
           Atom atpose(v16, v17)
           Atom supported(v14, v15, v11)
           Atom pose(v14, p6)
           Atom kin(v31, v38, p7, v33, v34, v35)
           Atom kin(v31, v32, p4, v33, v34, v35)
           Atom kin(v31, v36, p9, v48, v34, v35)
           Atom kin(v31, v38, p11, v50, v34, v35)
           Atom stackable(v8, v18)
           Atom stackable(v8, v10)
           Atom stackable(v14, v10)
           Atom supported(v16, p7, v18)
           Atom pose(v16, v17)
           Atom pose(v12, p5)
           Atom canmove()
           Atom pose(v16, p7)
           Atom graspable(v16)
           Atom pose(v16, p11)
           Atom atpose(v12, v13)
           Atom grasp(v16, #g2)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #g0)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v16, #o2, v18)
           Atom grasp(v8, #g1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v14, #g3)
           Atom supported(v12, #o2, v18)
           Atom supported(v14, #o2, v18)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v16, v17, #g2, #q2, #t2)
           Atom bconf(#q6)
           Atom atraj(#t9)
           Atom kin(v4, v16, p7, #g2, #q6, #t9)
           Atom bconf(#q8)
           Atom atraj(#t19)
           Atom kin(v4, v16, p11, #g2, #q8, #t19)
           Atom bconf(#q10)
           Atom atraj(#t23)
           Atom kin(v4, v12, p9, #g0, #q10, #t23)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v12, p5, #g0, #q5, #t8)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, p4, #g1, #q1, #t1)
           Atom bconf(#q11)
           Atom atraj(#t33)
           Atom kin(v4, v8, p8, #g1, #q11, #t33)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v8, v9, #g1, #q4, #t7)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v14, p6, #g3, #q3, #t6)
           Atom bconf(#q7)
           Atom atraj(#t10)
           Atom kin(v4, v14, v15, #g3, #q7, #t10)
           Atom bconf(#q9)
           Atom atraj(#t22)
           Atom kin(v4, v14, p10, #g3, #q9, #t22)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q8, #o0, #q10)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q5, #o0, #q10)
           Atom basemotion(v3, #o0, #q10)
           Atom basemotion(#q10, #o0, #q8)
           Atom basemotion(#q10, #o0, #q5)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q9, #o0, #q10)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q9, #o0, #q7)
           Atom btraj(#t16)
           Atom basemotion(#q5, #t16, #q7)
           Atom btraj(#t35)
           Atom basemotion(#q7, #t35, #q9)
           Atom btraj(#t34)
           Atom basemotion(#q7, #t34, #q8)
           Atom basemotion(#q10, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom btraj(#t20)
           Atom basemotion(#q8, #t20, #q7)
           Atom basemotion(#q7, #o0, #q5)
           Atom btraj(#t36)
           Atom basemotion(#q7, #t36, #q10)
           Atom basemotion(#q6, #o0, #q10)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q10, #o0, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, #q10)
           Atom basemotion(#q10, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q8)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q9, #o0, #q3)
           Atom btraj(#t18)
           Atom basemotion(#q7, #t18, #q3)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q3, #o0, #q4)
           Atom btraj(#t25)
           Atom basemotion(#q4, #t25, #q9)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q4, #o0, #q7)
           Atom btraj(#t14)
           Atom basemotion(v3, #t14, #q4)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q4)
           Atom btraj(#t24)
           Atom basemotion(#q4, #t24, #q8)
           Atom basemotion(#q5, #o0, #q4)
           Atom btraj(#t26)
           Atom basemotion(#q4, #t26, #q10)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q10, #o0, #q4)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q3)
           Atom btraj(#t21)
           Atom basemotion(#q2, #t21, #q8)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q2, #o0, #q7)
           Atom btraj(#t40)
           Atom basemotion(#q10, #t40, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t12)
           Atom basemotion(#q3, #t12, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q5, #o0, #q2)
           Atom btraj(#t38)
           Atom basemotion(#q8, #t38, #q2)
           Atom basemotion(#q6, #o0, #q2)
           Atom btraj(#t39)
           Atom basemotion(#q9, #t39, #q2)
           Atom basemotion(#q7, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, #q10)
           Atom basemotion(#q2, #o0, #q9)
           Atom btraj(#t11)
           Atom basemotion(#q2, #t11, #q6)
           Atom basemotion(#q11, #o0, #q6)
           Atom basemotion(#q11, #o0, #q7)
           Atom basemotion(#q11, #o0, #q4)
           Atom basemotion(#q11, #o0, #q5)
           Atom btraj(#t41)
           Atom basemotion(#q11, #t41, #q2)
           Atom btraj(#t37)
           Atom basemotion(#q7, #t37, #q11)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q11, #o0, #q3)
           Atom basemotion(#q8, #o0, #q11)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q4, #o0, #q11)
           Atom basemotion(#q2, #o0, #q11)
           Atom basemotion(#q6, #o0, #q11)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q3, #o0, #q11)
           Atom basemotion(#q5, #o0, #q11)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q11, #o0, #q8)
           Atom btraj(#t27)
           Atom basemotion(#q0, #t27, #q8)
           Atom btraj(#t29)
           Atom basemotion(#q0, #t29, #q10)
           Atom btraj(#t32)
           Atom basemotion(#q10, #t32, #q0)
           Atom basemotion(#q3, #o0, #q0)
           Atom btraj(#t31)
           Atom basemotion(#q9, #t31, #q0)
           Atom basemotion(#q0, #o0, #q7)
           Atom btraj(#t13)
           Atom basemotion(#q0, #t13, #q5)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom basemotion(#q11, #o0, #q0)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q4, #o0, #q0)
           Atom btraj(#t28)
           Atom basemotion(#q0, #t28, #q9)
           Atom basemotion(#q0, #o0, #q11)
           Atom basemotion(#q7, #o0, #q0)
           Atom btraj(#t30)
           Atom basemotion(#q8, #t30, #q0)
           Atom basemotion(#q9, #o0, #q1)
           Atom btraj(#t15)
           Atom basemotion(#q4, #t15, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q11)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q6, #o0, #q1)
           Atom btraj(#t17)
           Atom basemotion(#q1, #t17, #q0)
           Atom basemotion(#q1, #o0, #q4)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q11, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q10)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q10, #o0, #q1)
           Atom basemotion(#q1, #o0, #q8)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, #o2, #g2, #o3, #o4)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g3, #o3, #o4)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q7, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q5 #t13))
           ((move_base #q0 #q8 #t27))
           ((move_base #q0 #q9 #t28))
           ((move_base #q0 #q10 #t29))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q10 #o0))
           ((move_base #q1 #q11 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q0 #t17))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q1 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q3 #o0))
           ((move_base #q10 #q4 #o0))
           ((move_base #q10 #q5 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q0 #t32))
           ((move_base #q10 #q2 #t40))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q3 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q2 #t41))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q6 #t11))
           ((move_base #q2 #q8 #t21))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q10 #o0))
           ((move_base #q3 #q11 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q2 #t12))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q1 #t15))
           ((move_base #q4 #q8 #t24))
           ((move_base #q4 #q9 #t25))
           ((move_base #q4 #q10 #t26))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q10 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q7 #t16))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q10 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q3 #t18))
           ((move_base #q7 #q8 #t34))
           ((move_base #q7 #q9 #t35))
           ((move_base #q7 #q10 #t36))
           ((move_base #q7 #q11 #t37))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q7 #t20))
           ((move_base #q8 #q0 #t30))
           ((move_base #q8 #q2 #t38))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q0 #t31))
           ((move_base #q9 #q2 #t39))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t14))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 p5 #g0 #q5 #t8))
           ((place v4 v12 p5 #g0 #q5 #t8))
           ((pick v4 v12 p9 #g0 #q10 #t23))
           ((place v4 v12 p9 #g0 #q10 #t23))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v14 #o2 #g3 #o3 #o4))
           ((place v4 v14 #o2 #g3 #o3 #o4))
           ((pick v4 v14 p10 #g3 #q9 #t22))
           ((place v4 v14 p10 #g3 #q9 #t22))
           ((pick v4 v14 p6 #g3 #q3 #t6))
           ((place v4 v14 p6 #g3 #q3 #t6))
           ((pick v4 v14 v15 #g3 #q7 #t10))
           ((place v4 v14 v15 #g3 #q7 #t10))
           ((pick v4 v16 #o2 #g2 #o3 #o4))
           ((place v4 v16 #o2 #g2 #o3 #o4))
           ((pick v4 v16 p11 #g2 #q8 #t19))
           ((place v4 v16 p11 #g2 #q8 #t19))
           ((pick v4 v16 p7 #g2 #q6 #t9))
           ((place v4 v16 p7 #g2 #q6 #t9))
           ((pick v4 v16 v17 #g2 #q2 #t2))
           ((place v4 v16 v17 #g2 #q2 #t2))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 p4 #g1 #q1 #t1))
           ((place v4 v8 p4 #g1 #q1 #t1))
           ((pick v4 v8 p8 #g1 #q11 #t33))
           ((place v4 v8 p8 #g1 #q11 #t33))
           ((pick v4 v8 v9 #g1 #q4 #t7))
           ((place v4 v8 v9 #g1 #q4 #t7))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Alright, here's my plan to tackle this block-stacking problem.**  I've got four objects, v8, v12, v14, and v16, sitting on v11, and my goal is to get them all stacked on v18.  The robot arm is v4, its base is at v3, and initially the arm is empty - a good start!
           
           The core strategy is straightforward: pick up each object from v11 and place it onto v18. Since there's no specific order or pose requirement on v18, I'll aim for a simple sequential approach, ensuring each object gets a dedicated spot. I know the robot's actions and target poses on v18 already from the given information.
           
           First, I'll move to pick up v8.  I need to go from v3 to the pick position for v8, defined by kinematic configuration #q4. Then, I'll use the 'pick' action to grasp v8. Now, I'll move to the placement position on v18, say `p4`. Next, I will move to the place position, given by kin instance #q1.  Then I'll use the 'place' action to put v8 onto p4.
           
           Next, I'll move to v12. I'll pick v12 from its current pose, v13, using kin instance #q0. And move it to pose p5 on v18.
           
           Then I will move to v14, picking it from its current pose v15, using #q7 and placing it on p6 on v18.
           
           Finally, I'll pick v16 from v17, which uses configuration #q2 and place it on p7 on v18.
           
           The actions should be collision-free, thanks to the negative preconditions provided for `unsafeapproach` and `unsafepose` in the given action instances, which already incorporate this check. No need for further AABB collision checks as these provided action instances, especially `kin`, already assume no collision since these are provided and valid action instances. I'm using provided named poses p4, p5, p6, p7 on v18 and these poses should not collide. I'm only using available pick and place instances.
           
           I'm confident this will result in a plan that achieves the desired final state efficiently.
           
)

Model:     **Alright, here's my plan to tackle this block-stacking problem.**  I've got four objects, v8, v12, v14, and v16, sitting on v11, and my goal is to get them all stacked on v18.  The robot arm is v4, its base is at v3, and initially the arm is empty - a good start!
           
           The core strategy is straightforward: pick up each object from v11 and place it onto v18. Since there's no specific order or pose requirement on v18, I'll aim for a simple sequential approach, ensuring each object gets a dedicated spot. I know the robot's actions and target poses on v18 already from the given information.
           
           First, I'll move to pick up v8.  I need to go from v3 to the pick position for v8, defined by kinematic configuration #q4. Then, I'll use the 'pick' action to grasp v8. Now, I'll move to the placement position on v18, say `p4`. Next, I will move to the place position, given by kin instance #q1.  Then I'll use the 'place' action to put v8 onto p4.
           
           Next, I'll move to v12. I'll pick v12 from its current pose, v13, using kin instance #q0. And move it to pose p5 on v18.
           
           Then I will move to v14, picking it from its current pose v15, using #q7 and placing it on p6 on v18.
           
           Finally, I'll pick v16 from v17, which uses configuration #q2 and place it on p7 on v18.
           
           The actions should be collision-free, thanks to the negative preconditions provided for `unsafeapproach` and `unsafepose` in the given action instances, which already incorporate this check. No need for further AABB collision checks as these provided action instances, especially `kin`, already assume no collision since these are provided and valid action instances. I'm using provided named poses p4, p5, p6, p7 on v18 and these poses should not collide. I'm only using available pick and place instances.
           
           I'm confident this will result in a plan that achieves the desired final state efficiently.
           

