User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v47: object
           v48: object
           v49: object
           v5: object
           v50: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.035, -0.105), (0.105, -0.035)).
           Object p4 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.075, -0.418, 0.781) and quaternion (0.0, 0.0, 0.612, 0.791).
           Object p5 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.07, 0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (-0.07, 0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (0.07, -0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.105, -0.105), (-0.035, -0.035)).
           Object p11 is a pose with position (-0.07, -0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v17 is a pose with position (-0.23, -0.333, 0.781) and quaternion (0.0, 0.0, 0.283, 0.959).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.035, 0.035), (0.105, 0.105)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v9 is a pose with position (-0.02, 0.394, 0.781) and quaternion (0.0, 0.0, 0.994, 0.114).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.105, 0.035), (-0.035, 0.105)).
           Object v13 is a pose with position (-0.169, 0.53, 0.781) and quaternion (0.0, 0.0, -0.638, 0.77).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v12)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom supported(v16, v17, v11)
           Atom kin(v31, v38, p7, v33, v34, v35)
           Atom pose(v8, p8)
           Atom kin(v31, v38, p11, v50, v34, v35)
           Atom ataconf(v4, v5)
           Atom arm(v4)
           Atom pose(v8, v9)
           Atom pose(v16, v17)
           Atom supported(v12, p5, v18)
           Atom stackable(v8, v10)
           Atom stackable(v12, v18)
           Atom arm(v6)
           Atom supported(v14, p10, v18)
           Atom aconf(v4, v5)
           Atom pose(v12, v13)
           Atom handempty(v4)
           Atom supported(v8, p8, v18)
           Atom kin(v31, v36, p9, v48, v34, v35)
           Atom bconf(v3)
           Atom pose(v16, p7)
           Atom supported(v12, v13, v11)
           Atom handempty(v6)
           Atom pose(v14, v15)
           Atom stackable(v16, v10)
           Atom kin(v31, v32, p8, v47, v34, v35)
           Atom supported(v16, p11, v18)
           Atom pose(v12, p5)
           Atom pose(v14, p6)
           Atom kin(v31, v37, p10, v49, v34, v35)
           Atom aconf(v6, v7)
           Atom atbconf(v3)
           Atom atpose(v14, v15)
           Atom stackable(v8, v18)
           Atom atpose(v8, v9)
           Atom kin(v31, v36, p5, v33, v34, v35)
           Atom stackable(v16, v18)
           Atom graspable(v14)
           Atom stackable(v14, v18)
           Atom graspable(v16)
           Atom atpose(v16, v17)
           Atom supported(v16, p7, v18)
           Atom supported(v12, p9, v18)
           Atom canmove()
           Atom kin(v31, v32, p4, v33, v34, v35)
           Atom supported(v8, p4, v18)
           Atom pose(v8, p4)
           Atom supported(v14, p6, v18)
           Atom pose(v14, p10)
           Atom pose(v16, p11)
           Atom pose(v12, p9)
           Atom kin(v31, v37, p6, v33, v34, v35)
           Atom controllable(v4)
           Atom atpose(v12, v13)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom stackable(v12, v10)
           Atom supported(v8, v9, v11)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #g1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v16, #g0)
           Atom supported(v14, #o2, v18)
           Atom grasp(v14, #g3)
           Atom supported(v16, #o2, v18)
           Atom supported(v8, #o2, v18)
           Atom grasp(v12, #g2)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v8, p4, #g1, #q5, #t8)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v8, v9, #g1, #q3, #t6)
           Atom bconf(#q8)
           Atom atraj(#t19)
           Atom kin(v4, v8, p8, #g1, #q8, #t19)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v16, v17, #g0, #q4, #t7)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v16, p7, #g0, #q0, #t0)
           Atom bconf(#q10)
           Atom atraj(#t27)
           Atom kin(v4, v16, p11, #g0, #q10, #t27)
           Atom bconf(#q7)
           Atom atraj(#t10)
           Atom kin(v4, v14, p6, #g3, #q7, #t10)
           Atom bconf(#q9)
           Atom atraj(#t26)
           Atom kin(v4, v14, p10, #g3, #q9, #t26)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, v15, #g3, #q2, #t2)
           Atom bconf(#q6)
           Atom atraj(#t9)
           Atom kin(v4, v12, p5, #g2, #q6, #t9)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g2, #q1, #t1)
           Atom bconf(#q11)
           Atom atraj(#t31)
           Atom kin(v4, v12, p9, #g2, #q11, #t31)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom basemotion(#q8, #o0, #q0)
           Atom btraj(#t23)
           Atom basemotion(#q8, #t23, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom btraj(#t18)
           Atom basemotion(#q4, #t18, #q0)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t22)
           Atom basemotion(#q4, #t22, #q8)
           Atom basemotion(#q0, #o0, #q11)
           Atom basemotion(#q11, #o0, #q0)
           Atom basemotion(#q11, #o0, #q8)
           Atom basemotion(#q11, #o0, #q4)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q4, #o0, #q11)
           Atom basemotion(#q8, #o0, #q11)
           Atom btraj(#t24)
           Atom basemotion(#q1, #t24, #q8)
           Atom basemotion(#q11, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q11)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t20)
           Atom basemotion(#q8, #t20, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q1, #o0, #q3)
           Atom btraj(#t28)
           Atom basemotion(#q3, #t28, #q8)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q11, #o0, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom btraj(#t13)
           Atom basemotion(v3, #t13, #q3)
           Atom basemotion(#q3, #o0, #q11)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q3, #o0, #q6)
           Atom btraj(#t17)
           Atom basemotion(#q1, #t17, #q6)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q6, #o0, #q11)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q11, #o0, #q6)
           Atom basemotion(#q6, #o0, #q8)
           Atom btraj(#t21)
           Atom basemotion(#q8, #t21, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom btraj(#t14)
           Atom basemotion(#q6, #t14, #q2)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q2, #o0, #q11)
           Atom basemotion(#q2, #o0, #q0)
           Atom btraj(#t25)
           Atom basemotion(#q2, #t25, #q8)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q11, #o0, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q2)
           Atom btraj(#t16)
           Atom basemotion(#q5, #t16, #q1)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q11, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q11)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q5, #o0, #q8)
           Atom btraj(#t11)
           Atom basemotion(#q3, #t11, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q9, #o0, #q1)
           Atom btraj(#t29)
           Atom basemotion(#q3, #t29, #q9)
           Atom basemotion(#q4, #o0, #q9)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q9, #o0, #q10)
           Atom basemotion(#q10, #o0, #q0)
           Atom basemotion(#q1, #o0, #q10)
           Atom btraj(#t30)
           Atom basemotion(#q3, #t30, #q10)
           Atom basemotion(#q6, #o0, #q10)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q4, #o0, #q10)
           Atom basemotion(#q2, #o0, #q10)
           Atom basemotion(#q10, #o0, #q1)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q10, #o0, #q4)
           Atom basemotion(#q8, #o0, #q10)
           Atom basemotion(#q10, #o0, #q2)
           Atom basemotion(v3, #o0, #q10)
           Atom basemotion(#q10, #o0, #q5)
           Atom basemotion(#q0, #o0, #q10)
           Atom basemotion(#q10, #o0, #q6)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q10, #o0, #q8)
           Atom basemotion(#q5, #o0, #q10)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q10, #o0, #q3)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q11, #o0, #q7)
           Atom basemotion(#q10, #o0, #q7)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q7, #o0, #q8)
           Atom btraj(#t12)
           Atom basemotion(#q7, #t12, #q4)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q7, #o0, #q10)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q3, #o0, #q7)
           Atom btraj(#t15)
           Atom basemotion(#q2, #t15, #q7)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, #q11)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g3, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v16, #o2, #g0, #o3, #o4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q9, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q10 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q10 #o0))
           ((move_base #q1 #q11 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q6 #t17))
           ((move_base #q1 #q8 #t24))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q0 #o0))
           ((move_base #q10 #q1 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q2 #o0))
           ((move_base #q10 #q3 #o0))
           ((move_base #q10 #q4 #o0))
           ((move_base #q10 #q5 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q3 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q7 #t15))
           ((move_base #q2 #q8 #t25))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q11 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q5 #t11))
           ((move_base #q3 #q8 #t28))
           ((move_base #q3 #q9 #t29))
           ((move_base #q3 #q10 #t30))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q10 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q0 #t18))
           ((move_base #q4 #q8 #t22))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q10 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q1 #t16))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q10 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q2 #t14))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q4 #t12))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q1 #t20))
           ((move_base #q8 #q2 #t21))
           ((move_base #q8 #q4 #t23))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q3 #t13))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p5 #g2 #q6 #t9))
           ((place v4 v12 p5 #g2 #q6 #t9))
           ((pick v4 v12 p9 #g2 #q11 #t31))
           ((place v4 v12 p9 #g2 #q11 #t31))
           ((pick v4 v12 v13 #g2 #q1 #t1))
           ((place v4 v12 v13 #g2 #q1 #t1))
           ((pick v4 v14 #o2 #g3 #o3 #o4))
           ((place v4 v14 #o2 #g3 #o3 #o4))
           ((pick v4 v14 p10 #g3 #q9 #t26))
           ((place v4 v14 p10 #g3 #q9 #t26))
           ((pick v4 v14 p6 #g3 #q7 #t10))
           ((place v4 v14 p6 #g3 #q7 #t10))
           ((pick v4 v14 v15 #g3 #q2 #t2))
           ((place v4 v14 v15 #g3 #q2 #t2))
           ((pick v4 v16 #o2 #g0 #o3 #o4))
           ((place v4 v16 #o2 #g0 #o3 #o4))
           ((pick v4 v16 p11 #g0 #q10 #t27))
           ((place v4 v16 p11 #g0 #q10 #t27))
           ((pick v4 v16 p7 #g0 #q0 #t0))
           ((place v4 v16 p7 #g0 #q0 #t0))
           ((pick v4 v16 v17 #g0 #q4 #t7))
           ((place v4 v16 v17 #g0 #q4 #t7))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 p4 #g1 #q5 #t8))
           ((place v4 v8 p4 #g1 #q5 #t8))
           ((pick v4 v8 p8 #g1 #q8 #t19))
           ((place v4 v8 p8 #g1 #q8 #t19))
           ((pick v4 v8 v9 #g1 #q3 #t6))
           ((place v4 v8 v9 #g1 #q3 #t6))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Planning the Placement of Objects on a Surface**
           
           Okay, so I'm tasked with devising a plan to get four objects—`v8`, `v12`, `v14`, and `v16`—onto the surface `v18`.  Currently, these objects are supported by `v11`, but that's not the final destination.  My goal is clear: have each object `on(object, v18)`. This means I need to place them at specific supported poses on `v18`. Luckily, the initial state provides several `supported` poses on `v18` for each object, such as `p5`, `p8`, `p11`, and so on.
           
           The robot arm, `v4`, is currently `handempty`. My initial base configuration is `v3`.
           
           I will need to consider the current state of each object:
           
           *   **`v14`:** It's at pose `v15`, and I need to get it to either `p10` or `p6` on `v18`.
           *   **`v16`:** At pose `v17`, needs to be at either `p11` or `p7` on `v18`.
           *   **`v8`:** Currently at `v9`, needs to be moved to either `p8` or `p4` on `v18`.
           *   **`v12`:** Currently at `v13`, will need to be at either `p5` or `p9` on `v18`.
           
           For each object, I'll essentially execute the same basic sequence: move the robot base to the correct pick position, pick up the object, move the base again to the place position, and then place the object.
           
           I have kinematic information for the pick and place motions available through the `kin` predicates. For example, `kin(v4, v14, v15, #g3, #q2, #t2)` tells me about picking `v14` from its current pose `v15`, while `kin(v4, v14, p10, #g3, #q9, #t26)` gives info for placing `v14` on `p10`.
           
           Now, I'm thinking about the most efficient plan. Since my primary concern is to simply place them, I will place in the given order of the goal.
           So, the order will be `v8`, `v12`, `v14` and `v16`. I have to select a placing position for each from the available options.
           I have chosen to use `p8`, `p5`, `p6` and `p7`, which minimizes any unnecessary base movement,
           given that the start is `atbconf(v3)`.
           
           The specific plan will then look like this:
           
           1.  **Move to pick `v8`**: `move_base v3 #q3 #t13`
           2.  **Pick `v8`**: `pick v4 v8 v9 #g1 #q3 #t6`
           3.  **Move to place `v8`**: `move_base #q3 #q8 #t28`
           4.  **Place `v8`**: `place v4 v8 p8 #g1 #q8 #t19`
           
           5.  **Move to pick `v12`**: `move_base #q8 #q1 #t20`
           6.  **Pick `v12`**: `pick v4 v12 v13 #g2 #q1 #t1`
           7.  **Move to place `v12`**: `move_base #q1 #q6 #t17`
           8.  **Place `v12`**: `place v4 v12 p5 #g2 #q6 #t9`
           
           9.  **Move to pick `v14`**: `move_base #q6 #q2 #t14`
           10. **Pick `v14`**: `pick v4 v14 v15 #g3 #q2 #t2`
           11. **Move to place `v14`**: `move_base #q2 #q7 #t15`
           12. **Place `v14`**: `place v4 v14 p6 #g3 #q7 #t10`
           
           13. **Move to pick `v16`**: `move_base #q7 #q4 #t12`
           14. **Pick `
)

Model:     **Planning the Placement of Objects on a Surface**
           
           Okay, so I'm tasked with devising a plan to get four objects—`v8`, `v12`, `v14`, and `v16`—onto the surface `v18`.  Currently, these objects are supported by `v11`, but that's not the final destination.  My goal is clear: have each object `on(object, v18)`. This means I need to place them at specific supported poses on `v18`. Luckily, the initial state provides several `supported` poses on `v18` for each object, such as `p5`, `p8`, `p11`, and so on.
           
           The robot arm, `v4`, is currently `handempty`. My initial base configuration is `v3`.
           
           I will need to consider the current state of each object:
           
           *   **`v14`:** It's at pose `v15`, and I need to get it to either `p10` or `p6` on `v18`.
           *   **`v16`:** At pose `v17`, needs to be at either `p11` or `p7` on `v18`.
           *   **`v8`:** Currently at `v9`, needs to be moved to either `p8` or `p4` on `v18`.
           *   **`v12`:** Currently at `v13`, will need to be at either `p5` or `p9` on `v18`.
           
           For each object, I'll essentially execute the same basic sequence: move the robot base to the correct pick position, pick up the object, move the base again to the place position, and then place the object.
           
           I have kinematic information for the pick and place motions available through the `kin` predicates. For example, `kin(v4, v14, v15, #g3, #q2, #t2)` tells me about picking `v14` from its current pose `v15`, while `kin(v4, v14, p10, #g3, #q9, #t26)` gives info for placing `v14` on `p10`.
           
           Now, I'm thinking about the most efficient plan. Since my primary concern is to simply place them, I will place in the given order of the goal.
           So, the order will be `v8`, `v12`, `v14` and `v16`. I have to select a placing position for each from the available options.
           I have chosen to use `p8`, `p5`, `p6` and `p7`, which minimizes any unnecessary base movement,
           given that the start is `atbconf(v3)`.
           
           The specific plan will then look like this:
           
           1.  **Move to pick `v8`**: `move_base v3 #q3 #t13`
           2.  **Pick `v8`**: `pick v4 v8 v9 #g1 #q3 #t6`
           3.  **Move to place `v8`**: `move_base #q3 #q8 #t28`
           4.  **Place `v8`**: `place v4 v8 p8 #g1 #q8 #t19`
           
           5.  **Move to pick `v12`**: `move_base #q8 #q1 #t20`
           6.  **Pick `v12`**: `pick v4 v12 v13 #g2 #q1 #t1`
           7.  **Move to place `v12`**: `move_base #q1 #q6 #t17`
           8.  **Place `v12`**: `place v4 v12 p5 #g2 #q6 #t9`
           
           9.  **Move to pick `v14`**: `move_base #q6 #q2 #t14`
           10. **Pick `v14`**: `pick v4 v14 v15 #g3 #q2 #t2`
           11. **Move to place `v14`**: `move_base #q2 #q7 #t15`
           12. **Place `v14`**: `place v4 v14 p6 #g3 #q7 #t10`
           
           13. **Move to pick `v16`**: `move_base #q7 #q4 #t12`
           14. **Pick `

