User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v14, v15)
           Atom type(v7, v6)
           Atom type(v5, v6)
           Atom type(v1, v2)
           Atom rock(v5)
           Atom rock(v3)
           Atom rock(v8)
           Atom mode(v11)
           Atom free(v12, v16)
           Atom onboard(v10, v12)
           Atom atconf(v12, v13)
           Atom objective(v19)
           Atom rover(v14)
           Atom store(v16)
           Atom type(v8, v6)
           Atom objective(v17)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom rock(v1)
           Atom type(v4, v2)
           Atom rover(v12)
           Atom free(v14, v16)
           Atom conf(v12, v13)
           Atom onboard(v10, v14)
           Atom atconf(v14, v15)
           Atom objective(v18)
           Atom lander(v9)
           Atom supports(v10, v11)
           Atom rock(v7)
           Atom camera(v10)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v12, #q5, #y3, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q7, v7)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #q3, #y1, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom above(v12, #q10, v3)
           Atom conf(v12, #q10)
           Atom above(v12, #q8, v1)
           Atom conf(v12, #q8)
           Atom above(v14, #q0, v1)
           Atom conf(v14, #q0)
           Atom imagevisible(v14, #q9, #y5, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y5)
           Atom above(v14, #q2, v7)
           Atom conf(v14, #q2)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom above(v12, #q12, v4)
           Atom conf(v12, #q12)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q13, v5)
           Atom conf(v12, #q13)
           Atom above(v14, #q16, v5)
           Atom conf(v14, #q16)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q11, #y6, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q15, v8)
           Atom conf(v12, #q15)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v12, #q4, #y2, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom imagevisible(v14, #q14, #y7, v17)
           Atom imagerange(v14, #q14, v17)
           Atom conf(v14, #q14)
           Atom ray(#y7)
           Atom motion(v12, v13, #t15, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, v13, #t27, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t1, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, v15, #t35, #q16)
           Atom motion(v14, #q16, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q16)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, v15, #t20, #q14)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q0, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, v13, #t3, #q3)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, v15, #t19, #q11)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q3, #t9, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #t34, #q3)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q10, #t21, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #t25, #q8)
           Atom motion(v12, #q10, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q15, #t24, #q7)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q13, #t23, #q7)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, v13, #t17, #q13)
           Atom motion(v12, #q12, #t22, #q7)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, v13, #t16, #q12)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q8, #t14, #q5)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #t4, v13)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q7, #t12, #q5)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #t11, #q7)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q4, #t7, #q5)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q5, #t33, #q4)
           Atom motion(v12, #q3, #t6, #q5)
           Atom motion(v14, #q1, #t5, v15)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q16, #t31, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t30, #q14)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q1, #t28, #q11)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q14, #t26, #q1)
           Atom motion(v14, #q11, #t29, #q1)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q16)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, v15, #t2, #q2)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q16, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q9, #t13, #q1)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, v15, #t18, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q3, #t32, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q4, #t10, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #t8, #q5)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q12 v4 v16))
           ((sample_rock v12 #q13 v5 v16))
           ((sample_rock v12 #q15 v8 v16))
           ((sample_rock v12 #q7 v7 v16))
           ((sample_rock v12 #q8 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v1 v16))
           ((sample_rock v14 #q16 v5 v16))
           ((sample_rock v14 #q2 v7 v16))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q15))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t21 #q7))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t22 #q7))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t23 #q7))
           ((move v12 #q15 #o2 #q10))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t24 #q7))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t32 #q6))
           ((move v12 #q3 #t6 #q5))
           ((move v12 #q3 #t9 #q4))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t10 #q6))
           ((move v12 #q4 #t34 #q3))
           ((move v12 #q4 #t7 #q5))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #t11 #q7))
           ((move v12 #q5 #t33 #q4))
           ((move v12 #q5 #t4 v13))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t8 #q5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t12 #q5))
           ((move v12 #q7 #t25 #q8))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t14 #q5))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q10))
           ((move v12 v13 #t16 #q12))
           ((move v12 v13 #t17 #q13))
           ((move v12 v13 #t27 #q8))
           ((move v12 v13 #t3 #q3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #o2 #q16))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t28 #q11))
           ((move v14 #q1 #t30 #q14))
           ((move v14 #q1 #t5 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t29 #q1))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t26 #q1))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q0))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q2))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t31 #q1))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q16))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t13 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((move v14 v15 #t18 #q9))
           ((move v14 v15 #t19 #q11))
           ((move v14 v15 #t2 #q2))
           ((move v14 v15 #t20 #q14))
           ((move v14 v15 #t35 #q16))
           ((calibrate v12 #q3 #y1 v18 v10))
           ((calibrate v12 #q4 #y2 v17 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #q11 #y6 v19 v10))
           ((calibrate v14 #q14 #y7 v17 v10))
           ((calibrate v14 #q9 #y5 v18 v10))
           ((take_image v12 #q3 #y1 v18 v10 v11))
           ((take_image v12 #q4 #y2 v17 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #q11 #y6 v19 v10 v11))
           ((take_image v14 #q14 #y7 v17 v10 v11))
           ((take_image v14 #q9 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y3 v9 v3))
           ((send_analysis v12 #q5 #y3 v9 v4))
           ((send_analysis v12 #q5 #y3 v9 v5))
           ((send_analysis v12 #q5 #y3 v9 v8))
           ((send_analysis v12 #q5 #y3 v9 v7))
           ((send_analysis v12 #q5 #y3 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_image v12 #q5 #y3 v9 v18 v11))
           ((send_image v12 #q5 #y3 v9 v17 v11))
           ((send_image v12 #q5 #y3 v9 v19 v11))
           ((send_image v14 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Refined Plan for Axiom Fulfillment**
           
           Okay, so I've been tasked with generating a plan to satisfy the conditions of `new-axiom@0()`. Breaking it down, the primary challenge lies in ensuring that specific rovers achieve `receivedanalysis` for some stone and soil, as well as `receivedimage` for three objectives, all while maintaining the initial state conditions: `atconf` (rovers at their starting locations) and `free` (stores empty).
           
           My initial instinct was to have one rover sample and analyze rocks, while the other takes images. However, the `free` predicate proved tricky. Sampling a rock makes the store *full*, which conflicts with the goal. I need to explicitly drop the rocks after analysis to satisfy the `free` condition in the final state.
           
           Here's my refined strategy:
           
           **Rover v12 (for Sampling & Analysis):**
           
           1.  **Move to stone:** Get v12 to a position above a stone. Sample and send analysis, then `drop_rock`.
           2.  **Move to soil:** Get v12 to a position above some soil. Sample and send analysis, then `drop_rock`.
           
           **Rover v14 (for Imaging):**
           
           I'll use `v14` to manage the images:
           
           1.  Move to objective and calibrate the camera. Take the image, and then move to send the image.
           2.  Repeat for all three objectives.
           
           To ensure the `atconf` conditions are met, `v12` must end up back in its initial position, and `v14` must end back in its initial position. The plan will move to the objective locations, and then back to the `comvisible` location, where the images will be sent.
           This ensures all necessary pre-conditions for the goal are met at the beginning of actions, and goal conditions are met by the end of the plan.
           
)

Model:     **Refined Plan for Axiom Fulfillment**
           
           Okay, so I've been tasked with generating a plan to satisfy the conditions of `new-axiom@0()`. Breaking it down, the primary challenge lies in ensuring that specific rovers achieve `receivedanalysis` for some stone and soil, as well as `receivedimage` for three objectives, all while maintaining the initial state conditions: `atconf` (rovers at their starting locations) and `free` (stores empty).
           
           My initial instinct was to have one rover sample and analyze rocks, while the other takes images. However, the `free` predicate proved tricky. Sampling a rock makes the store *full*, which conflicts with the goal. I need to explicitly drop the rocks after analysis to satisfy the `free` condition in the final state.
           
           Here's my refined strategy:
           
           **Rover v12 (for Sampling & Analysis):**
           
           1.  **Move to stone:** Get v12 to a position above a stone. Sample and send analysis, then `drop_rock`.
           2.  **Move to soil:** Get v12 to a position above some soil. Sample and send analysis, then `drop_rock`.
           
           **Rover v14 (for Imaging):**
           
           I'll use `v14` to manage the images:
           
           1.  Move to objective and calibrate the camera. Take the image, and then move to send the image.
           2.  Repeat for all three objectives.
           
           To ensure the `atconf` conditions are met, `v12` must end up back in its initial position, and `v14` must end back in its initial position. The plan will move to the objective locations, and then back to the `comvisible` location, where the images will be sent.
           This ensures all necessary pre-conditions for the goal are met at the beginning of actions, and goal conditions are met by the end of the plan.
           

