User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p15: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.085), (0.085, -0.015)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, -0.085), (-0.045, -0.015)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.005), (0.085, 0.065)).
           Object v9 is a pose with position (0.067, -0.298, 0.781) and quaternion (0.0, 0.0, 0.882, 0.472).
           Object v17 is a pose with position (0.056, 0.429, 0.781) and quaternion (0.0, 0.0, -0.464, 0.886).
           Object v15 is a pose with position (-0.211, -0.488, 0.781) and quaternion (0.0, 0.0, -0.256, 0.967).
           Object p12 is a pose with position (-0.08, 0.03, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.128, -0.251, 0.781) and quaternion (0.0, 0.0, -0.225, 0.974).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p9 is a pose with position (0.05, 0.03, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (-0.08, 0.03, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (0.05, 0.03, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (-0.08, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p15 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, -0.005), (-0.045, 0.065)).
           Object p10 is a pose with position (-0.08, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom pose(v16, v17)
           Atom atpose(v12, v13)
           Atom kin(v31, v38, p11, v33, v34, v35)
           Atom supported(v12, v13, v11)
           Atom supported(v8, p8, v18)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom supported(v8, v9, v11)
           Atom graspable(v14)
           Atom stackable(v8, v18)
           Atom supported(v14, v15, v11)
           Atom pose(v12, p9)
           Atom pose(v16, p11)
           Atom kin(v31, v36, p13, v33, v34, v35)
           Atom pose(v8, p8)
           Atom pose(v12, v13)
           Atom pose(v14, p14)
           Atom stackable(v14, v10)
           Atom atpose(v14, v15)
           Atom kin(v31, v32, p8, v33, v34, v35)
           Atom kin(v31, v37, p10, v33, v34, v35)
           Atom graspable(v12)
           Atom supported(v16, p11, v18)
           Atom pose(v8, p12)
           Atom ataconf(v6, v7)
           Atom supported(v14, p10, v18)
           Atom pose(v16, p15)
           Atom atpose(v16, v17)
           Atom pose(v12, p13)
           Atom stackable(v12, v10)
           Atom atbconf(v3)
           Atom supported(v14, p14, v18)
           Atom atpose(v8, v9)
           Atom supported(v12, p13, v18)
           Atom graspable(v16)
           Atom pose(v14, v15)
           Atom kin(v31, v38, p15, v33, v34, v35)
           Atom kin(v31, v37, p14, v33, v34, v35)
           Atom stackable(v12, v18)
           Atom arm(v6)
           Atom stackable(v8, v10)
           Atom ataconf(v4, v5)
           Atom supported(v8, p12, v18)
           Atom supported(v16, p15, v18)
           Atom pose(v14, p10)
           Atom controllable(v4)
           Atom stackable(v16, v10)
           Atom graspable(v8)
           Atom stackable(v14, v18)
           Atom supported(v12, p9, v18)
           Atom pose(v8, v9)
           Atom bconf(v3)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom arm(v4)
           Atom supported(v16, v17, v11)
           Atom kin(v31, v32, p12, v33, v34, v35)
           Atom kin(v31, v36, p9, v33, v34, v35)
           Atom stackable(v16, v18)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v18)
           Atom grasp(v8, #g3)
           Atom supported(v16, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v8, #o2, v18)
           Atom grasp(v12, #g1)
           Atom grasp(v16, #g2)
           Atom grasp(v14, #g0)
           Atom supported(v12, #o2, v10)
           Atom supported(v14, #o2, v10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, p8, #g3, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v8, v9, #g3, #q5, #t5)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v8, p12, #g3, #q4, #t4)
           Atom kin(v4, v16, p11, #g2, #o3, #o4)
           Atom bconf(#q7)
           Atom atraj(#t13)
           Atom kin(v4, v16, v17, #g2, #q7, #t13)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v16, p15, #g2, #q2, #t2)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g1, #q1, #t1)
           Atom bconf(#q6)
           Atom atraj(#t12)
           Atom kin(v4, v12, p13, #g1, #q6, #t12)
           Atom kin(v4, v12, p9, #g1, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v14, p14, #g0, #q3, #t3)
           Atom kin(v4, v14, p10, #g0, #o3, #o4)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, v15, #g0, #q0, #t0)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q5, #o0, #q2)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q7, #o0, #q5)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q3)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q3, #o0, #q1)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q6, #o0, #q3)
           Atom kin(v4, v8, #o2, #g3, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v16, #o2, #g2, #o3, #o4)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q5, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t10))
           ((move_base v3 #q5 #t11))
           ((move_base v3 #q0 #t6))
           ((move_base v3 #q1 #t7))
           ((move_base v3 #q2 #t8))
           ((move_base v3 #q3 #t9))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p13 #g1 #q6 #t12))
           ((place v4 v12 p13 #g1 #q6 #t12))
           ((pick v4 v12 p9 #g1 #o3 #o4))
           ((place v4 v12 p9 #g1 #o3 #o4))
           ((pick v4 v12 v13 #g1 #q1 #t1))
           ((place v4 v12 v13 #g1 #q1 #t1))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 p10 #g0 #o3 #o4))
           ((place v4 v14 p10 #g0 #o3 #o4))
           ((pick v4 v14 p14 #g0 #q3 #t3))
           ((place v4 v14 p14 #g0 #q3 #t3))
           ((pick v4 v14 v15 #g0 #q0 #t0))
           ((place v4 v14 v15 #g0 #q0 #t0))
           ((pick v4 v16 #o2 #g2 #o3 #o4))
           ((place v4 v16 #o2 #g2 #o3 #o4))
           ((pick v4 v16 p11 #g2 #o3 #o4))
           ((place v4 v16 p11 #g2 #o3 #o4))
           ((pick v4 v16 p15 #g2 #q2 #t2))
           ((place v4 v16 p15 #g2 #q2 #t2))
           ((pick v4 v16 v17 #g2 #q7 #t13))
           ((place v4 v16 v17 #g2 #q7 #t13))
           ((pick v4 v8 #o2 #g3 #o3 #o4))
           ((place v4 v8 #o2 #g3 #o3 #o4))
           ((pick v4 v8 p12 #g3 #q4 #t4))
           ((place v4 v8 p12 #g3 #q4 #t4))
           ((pick v4 v8 p8 #g3 #o3 #o4))
           ((place v4 v8 p8 #g3 #o3 #o4))
           ((pick v4 v8 v9 #g3 #q5 #t5))
           ((place v4 v8 v9 #g3 #q5 #t5))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains four objects (v8, v12, v14, v16) and several poses and base configurations. The goal is to place all four objects (v8, v12, v14, v16) on the surface v18. The robot currently has its arm (v4) empty and is at base configuration v3.
           
           The strategy will be to pick each object from its current location and place it onto the v18 surface. We will prioritize placing objects that are currently not on v18.
           
           1. **v8**: Currently at `v9` on `v11`. We need to pick it and place it on `v18`.
           2. **v12**: Currently at `v13` on `v11`. We need to pick it and place it on `v18`.
           3. **v14**: Currently at `v15` on `v11`. We need to pick it and place it on `v18`.
           4. **v16**: Currently at `v17` on `v11`. We need to pick it and place it on `v18`.
           
           Since the target poses for placing on v18 are `#o2`, we will use that for all placements. We will need to compute a distinct collision-free pose for each object on v18. The robot's initial base configuration is `v3`.
           
           --Plan--:
           (move_base v3 #q5 #t11)
           (pick v4 v8 v9 #g3 #q5 #t5)
           (move_base #q5 #o3 #o0)
           (place v4 v8 #o2 #g3 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v12 #o2 #g1 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v14 v15 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v14 #o2 #g0 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v16 v17 #g2 #q7 #t13)
           (move_base #q7 #o3 #o0)
           (place v4 v16 #o2 #g2 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v18): (-0.08, 0.03, 0.782, 0.0)
           (#o2 v12 v18): (0.05, 0.03, 0.782, 0.0)
           (#o2 v14 v18): (-0.08, -0.05, 0.782, 0.0)
           (#o2 v16 v18): (0.05, -0.05, 0.782, 0.0)

User:      Pose #o2 = (-0.08 for object v8 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.03 for object v8 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v8 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v8 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.05 for object v12 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.03 for object v12 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v12 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v12 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (-0.08 for object v14 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  -0.05 for object v14 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v14 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v14 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.05 for object v16 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  -0.05 for object v16 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v16 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v16 on surface v18 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The scene contains four objects (v8, v12, v14, v16) and several poses and base configurations. The goal is to place all four objects (v8, v12, v14, v16) on the surface v18. The robot currently has its arm (v4) empty and is at base configuration v3.
           
           The strategy will be to pick each object from its current location and place it onto the v18 surface. We will prioritize placing objects that are currently not on v18.
           
           1. **v8**: Currently at `v9` on `v11`. We need to pick it and place it on `v18`.
           2. **v12**: Currently at `v13` on `v11`. We need to pick it and place it on `v18`.
           3. **v14**: Currently at `v15` on `v11`. We need to pick it and place it on `v18`.
           4. **v16**: Currently at `v17` on `v11`. We need to pick it and place it on `v18`.
           
           Since the target poses for placing on v18 are `#o2`, we will use that for all placements. We will need to compute a distinct collision-free pose for each object on v18. The robot's initial base configuration is `v3`.
           
           --Plan--:
           (move_base v3 #q5 #t11)
           (pick v4 v8 v9 #g3 #q5 #t5)
           (move_base #q5 #o3 #o0)
           (place v4 v8 #o2 #g3 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v12 #o2 #g1 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v14 v15 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v14 #o2 #g0 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v16 v17 #g2 #q7 #t13)
           (move_base #q7 #o3 #o0)
           (place v4 v16 #o2 #g2 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v18): -0.08 0.03 0.782 0.0
           (#o2 v12 v18): 0.05 0.03 0.782 0.0
           (#o2 v14 v18): -0.08 -0.05 0.782 0.0
           (#o2 v16 v18): 0.05 -0.05 0.782 0.0

