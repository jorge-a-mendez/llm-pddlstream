User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v15, v16)
           Atom atpose(v8, v9)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom canmove()
           Atom pose(v15, v16)
           Atom arm(v6)
           Atom graspable(v15)
           Atom stackable(v12, v18)
           Atom controllable(v4)
           Atom bconf(v3)
           Atom pose(v12, v13)
           Atom aconf(v4, v5)
           Atom stackable(v8, v18)
           Atom aconf(v6, v7)
           Atom supported(v15, v16, v11)
           Atom type(v8, v17)
           Atom arm(v4)
           Atom atbconf(v3)
           Atom type(v12, v17)
           Atom handempty(v4)
           Atom handempty(v6)
           Atom graspable(v12)
           Atom supported(v12, v13, v14)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom stackable(v15, v10)
           Atom ataconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #o1)
           Atom supported(v12, #o2, v18)
           Atom grasp(v8, #g0)
           Atom grasp(v15, #o1)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, v9, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, #p0, #g0, #q0, #t0)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t4)
           Atom basemotion(#q1, #t4, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q0, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q0 #t4))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p0 #g0 #q0 #t0))
           ((place v4 v8 #p0 #g0 #q0 #t0))
           ((pick v4 v8 v9 #g0 #q1 #t1))
           ((place v4 v8 v9 #g0 #q1 #t1))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, including `v8`, `v12`, and `v15`, which are all graspable. There are two arms, `v4` and `v6`, both of which are handempty. `v8`, `v12`, and `v15` can be stacked on `v10` and `v18`. `v8` is currently at `v9` and `v15` is at `v16`. `v12` is at `v13`. The robot is at base configuration `v3`. The goal is to satisfy `new-axiom@0()`, which means `on(?green, v18)` and `type(?green, v17)` must be true. From the given initial state, we know `type(v8, v17)` and `type(v12, v17)`. So, either `v8` or `v12` could be `?green`. The goal is to place either `v8` or `v12` on `v18`. Let's choose `v8`. `v8` is currently at `v9` which is supported by `v11`. We need to pick `v8` from `v9` and place it at a pose on `v18`.
           
           Here's the plan:
           1. The robot is at `v3`. `v8` is at `v9`. We can pick `v8` using arm `v4` at pose `v9` with grasp `#g0` when the robot base is at `q1` (this is `kin(v4, v8, v9, #g0, #q1, #t1)`). So, first move the base to `q1`.
           2. Pick `v8` from `v9`.
           3. The goal is to put `v8` on `v18`. There's a pose `#p0` that `v8` can be placed at, and this pose is supported by `v18` (`supported(v8, #p0, v18)`). This placement requires the robot base to be at `q0` (`kin(v4, v8, #p0, #g0, #q0, #t0)`). So, move the base from `q1` to `q0`.
           4. Place `v8` at `#p0`. This will satisfy `on(v8, v18)` and since `type(v8, v17)` is true, the axiom `new-axiom@0()` will be satisfied.
           
           --Plan--:
           (move_base v3 #q1 #t3)
           (pick v4 v8 v9 #g0 #q1 #t1)
           (move_base #q1 #q0 #t4)
           (place v4 v8 #p0 #g0 #q0 #t0)

