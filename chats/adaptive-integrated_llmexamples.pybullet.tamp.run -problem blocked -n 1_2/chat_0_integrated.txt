User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.465, 0.265), (4.535, 0.335)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.8, -0.6), (-4.2, 0.6)).
           Object v5 is an arm configuration with joint values (0.393, 0.333, 0.0, -1.522, 2.722, -1.219, -2.989).
           Object v9 is a pose with position (4.5, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.714, -0.391), (-4.615, -0.292)).
           Object v15 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.315, 0.265), (4.385, 0.335)).
           Object v13 is a pose with position (-4.664, -0.342, 0.801) and quaternion (0.0, 0.0, 0.392, 0.92).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v16 is a pose with position (4.35, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (2.5, 0.0, 0.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.0)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom atbconf(v3)
           Atom canmove()
           Atom bconf(v3)
           Atom handempty(v6)
           Atom atpose(v8, v9)
           Atom aconf(v4, v5)
           Atom controllable(v4)
           Atom atpose(v15, v16)
           Atom supported(v12, v13, v14)
           Atom supported(v15, v16, v11)
           Atom graspable(v8)
           Atom aconf(v6, v7)
           Atom atpose(v12, v13)
           Atom ataconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom arm(v6)
           Atom graspable(v12)
           Atom pose(v8, v9)
           Atom graspable(v15)
           Atom stackable(v8, v18)
           Atom pose(v15, v16)
           Atom arm(v4)
           Atom handempty(v4)
           Atom stackable(v8, v10)
           Atom pose(v12, v13)
           Atom stackable(v15, v10)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom ataconf(v6, v7)
           Atom stackable(v12, v10)
           Atom type(v8, v17)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v8, #o2, v18)
           Atom grasp(v15, #o1)
           Atom grasp(v12, #o1)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, some of which are objects and some are poses, arm configurations, or base configurations. There are two arms, `v4` and `v6`, both are initially handempty. There are three graspable objects: `v8`, `v12`, and `v15`. `v8` is currently at `v9` and supported by `v11`. `v15` is currently at `v16` and supported by `v11`. `v12` is currently at `v13` and supported by `v14`. There are two surfaces identified: `v11` and `v14`. `v10` is also an identified surface. `v18` is also an identified surface. The robot's base is at `v3`.
           
           The goal is `new-axiom@0()`, which is an axiom defined as `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, `v12` is of type `v17`. `v8` is also of type `v17`. Thus, the goal is to have either `v12` or `v8` on `v18`.
           `v8` is stackable on `v18`. `v12` is stackable on `v18`.
           Currently, `v8` is at `v9` and supported by `v11`. `v12` is at `v13` and supported by `v14`. Neither is on `v18`.
           
           However, the only available action is `(move_base v3 v3 #o0)`. This action only moves the base from `v3` to `v3` using trajectory `#o0`. This does not change the state of objects `v8` or `v12` being on `v18`. Therefore, the goal is not achievable with the provided actions.

