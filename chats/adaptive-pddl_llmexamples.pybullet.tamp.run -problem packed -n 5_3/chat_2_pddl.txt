User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom handempty(v4)
           Atom atpose(v8, v9)
           Atom supported(v12, v13, v11)
           Atom bconf(v3)
           Atom handempty(v6)
           Atom atpose(v14, v15)
           Atom atpose(v16, v17)
           Atom arm(v6)
           Atom graspable(v16)
           Atom graspable(v8)
           Atom graspable(v12)
           Atom supported(v16, v17, v11)
           Atom stackable(v12, v10)
           Atom pose(v18, v19)
           Atom stackable(v18, v20)
           Atom supported(v8, v9, v11)
           Atom pose(v16, v17)
           Atom atpose(v18, v19)
           Atom stackable(v14, v10)
           Atom atbconf(v3)
           Atom controllable(v4)
           Atom atpose(v12, v13)
           Atom stackable(v8, v10)
           Atom stackable(v16, v20)
           Atom stackable(v16, v10)
           Atom pose(v12, v13)
           Atom graspable(v18)
           Atom stackable(v8, v20)
           Atom supported(v14, v15, v11)
           Atom canmove()
           Atom graspable(v14)
           Atom supported(v18, v19, v11)
           Atom aconf(v6, v7)
           Atom ataconf(v6, v7)
           Atom aconf(v4, v5)
           Atom stackable(v18, v10)
           Atom pose(v14, v15)
           Atom stackable(v14, v20)
           Atom arm(v4)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v20)
           Atom pose(v8, v9)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v18, #o1)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom supported(v16, #o2, v20)
           Atom grasp(v12, #o1)
           Atom supported(v8, #o2, v10)
           Atom grasp(v14, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #o1)
           Atom grasp(v16, #o1)
           Atom supported(v14, #o2, v10)
           Atom supported(v18, #o2, v20)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v18, #o2, #o1, #o3, #o4)
           Atom kin(v4, v18, v19, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v16 #o2 #o1 #o3 #o4))
           ((place v4 v16 #o2 #o1 #o3 #o4))
           ((pick v4 v16 v17 #o1 #o3 #o4))
           ((place v4 v16 v17 #o1 #o3 #o4))
           ((pick v4 v18 #o2 #o1 #o3 #o4))
           ((place v4 v18 #o2 #o1 #o3 #o4))
           ((pick v4 v18 v19 #o1 #o3 #o4))
           ((place v4 v18 v19 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains five graspable objects (v8, v12, v14, v16, v18) and two arms (v4, v6). Initially, all five objects are on a surface (v11) at their respective poses (v8 at v9, v12 at v13, v14 at v15, v16 at v17, and v18 at v19). The goal is to move all five objects (v8, v12, v14, v16, v18) onto a different surface (v20). The robot's arm `v4` is currently at configuration `v5` and its base at configuration `v3`. The robot can move its base, pick up objects, and place them. It can also move between base configurations `v3` and `#o3`.
           
           To achieve the goal, for each object, the robot needs to pick it up from its current location (v11) and place it on surface v20. The `kin` facts indicate that arm `v4` can pick up each of these objects from their current poses and place them at pose `#o2` on surface `v20`. The robot is currently at base configuration `v3`, but the `pick` and `place` actions are available from base configuration `#o3`. Therefore, the robot must first move its base from `v3` to `#o3` before picking up and placing objects.
           
           Since there is only one arm that can pick and place, the objects must be moved one at a time. The plan will involve:
           1. Moving the base to a configuration that allows for picking and placing (from `v3` to `#o3`).
           2. For each object:
               a. Picking up the object from its initial pose on v11.
               b. Placing the object at pose `#o2` on v20.
           
           The order of objects does not matter.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v16 v17 #o1 #o3 #o4)
           (place v4 v16 #o2 #o1 #o3 #o4)
           (pick v4 v18 v19 #o1 #o3 #o4)
           (place v4 v18 #o2 #o1 #o3 #o4)

