User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v7, v6)
           Atom rover(v14)
           Atom onboard(v10, v12)
           Atom type(v4, v2)
           Atom type(v5, v6)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom camera(v10)
           Atom lander(v9)
           Atom rock(v1)
           Atom objective(v20)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom type(v8, v6)
           Atom free(v12, v16)
           Atom rock(v3)
           Atom rover(v12)
           Atom conf(v14, v15)
           Atom atconf(v14, v15)
           Atom mode(v11)
           Atom rock(v4)
           Atom rock(v7)
           Atom rock(v5)
           Atom atconf(v12, v13)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom objective(v19)
           Atom type(v1, v2)
           Atom store(v16)
           Atom objective(v17)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q5, #y4, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom imagevisible(v14, #q3, #y3, v19)
           Atom imagerange(v14, #q3, v19)
           Atom conf(v14, #q3)
           Atom ray(#y3)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q1, #y1, v20)
           Atom imagerange(v14, #q1, v20)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom above(v14, #q4, v7)
           Atom conf(v14, #q4)
           Atom above(v14, #q6, v1)
           Atom conf(v14, #q6)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q2, #y2, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q11, #y8, v17)
           Atom imagerange(v12, #q11, v17)
           Atom conf(v12, #q11)
           Atom ray(#y8)
           Atom above(v12, #q12, v1)
           Atom conf(v12, #q12)
           Atom imagevisible(v12, #q8, #y5, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y5)
           Atom imagevisible(v12, #q10, #y7, v18)
           Atom imagerange(v12, #q10, v18)
           Atom conf(v12, #q10)
           Atom ray(#y7)
           Atom imagevisible(v12, #q13, #y9, v20)
           Atom imagerange(v12, #q13, v20)
           Atom conf(v12, #q13)
           Atom ray(#y9)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v5)
           Atom comvisible(v12, #q9, #y6, v9)
           Atom comrange(v12, #q9, v9)
           Atom conf(v12, #q9)
           Atom ray(#y6)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v8)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, v15, #t2, #q0)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #t18, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, v15, #t4, #q3)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q0, #t16, #q5)
           Atom motion(v14, #q5, #t14, #q3)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, v15, #t22, #q7)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, v13, #t17, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #t19, #q9)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q9, #t20, #q12)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q12, #t21, #q9)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #t11, #q7)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, v15, #t3, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #t12, #q6)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q3, #t15, #q1)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q2, #t6, #q0)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q7, #t13, #q2)
           Atom motion(v14, #q2, #t10, #q4)
           Atom motion(v14, #q2, #t7, #q1)
           Atom motion(v14, #q2, #t9, v15)
           Atom motion(v14, #q1, #t1, #q2)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q0, #t0, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q4, #t5, #q2)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q2, #t23, #q6)
           Atom motion(v14, #q2, #t8, #q3)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q6)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q4 v7 v16))
           ((sample_rock v14 #q6 v1 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t21 #q9))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q9))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #t18 v13))
           ((move v12 #q9 #t20 #q12))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q8))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q2))
           ((move v14 #q0 #t16 #q5))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q2))
           ((move v14 #q1 #t12 #q6))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #t10 #q4))
           ((move v14 #q2 #t23 #q6))
           ((move v14 #q2 #t6 #q0))
           ((move v14 #q2 #t7 #q1))
           ((move v14 #q2 #t8 #q3))
           ((move v14 #q2 #t9 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t15 #q1))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t5 #q2))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t14 #q3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t11 #q7))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t13 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t2 #q0))
           ((move v14 v15 #t22 #q7))
           ((move v14 v15 #t3 #q1))
           ((move v14 v15 #t4 #q3))
           ((calibrate v12 #q10 #y7 v18 v10))
           ((calibrate v12 #q11 #y8 v17 v10))
           ((calibrate v12 #q13 #y9 v20 v10))
           ((calibrate v12 #q8 #y5 v19 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q1 #y1 v20 v10))
           ((calibrate v14 #q3 #y3 v19 v10))
           ((calibrate v14 #q5 #y4 v17 v10))
           ((take_image v12 #q10 #y7 v18 v10 v11))
           ((take_image v12 #q11 #y8 v17 v10 v11))
           ((take_image v12 #q13 #y9 v20 v10 v11))
           ((take_image v12 #q8 #y5 v19 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q1 #y1 v20 v10 v11))
           ((take_image v14 #q3 #y3 v19 v10 v11))
           ((take_image v14 #q5 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q9 #y6 v9 v3))
           ((send_analysis v12 #q9 #y6 v9 v4))
           ((send_analysis v12 #q9 #y6 v9 v5))
           ((send_analysis v12 #q9 #y6 v9 v7))
           ((send_analysis v12 #q9 #y6 v9 v8))
           ((send_analysis v12 #q9 #y6 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y2 v9 v3))
           ((send_analysis v14 #q2 #y2 v9 v4))
           ((send_analysis v14 #q2 #y2 v9 v8))
           ((send_analysis v14 #q2 #y2 v9 v7))
           ((send_analysis v14 #q2 #y2 v9 v1))
           ((send_analysis v14 #q2 #y2 v9 v5))
           ((send_image v12 #q9 #y6 v9 v18 v11))
           ((send_image v12 #q9 #y6 v9 v17 v11))
           ((send_image v12 #q9 #y6 v9 v20 v11))
           ((send_image v12 #q9 #y6 v9 v19 v11))
           ((send_image v14 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q2 #y2 v9 v20 v11))
           ((send_image v14 #q2 #y2 v9 v19 v11))
           ((send_image v14 #q2 #y2 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Alright, let's break this down into a workable plan to achieve our goal, `new-axiom@0()`:**
           
           My initial thought is to tackle this logically: First I need to break down `new-axiom@0()` into manageable pieces.  Then, by considering each condition in the axiom, I can reverse-engineer a set of actions that achieves it.
           
           I see that achieving `new-axiom@0()` hinges on getting images, analyzing samples, and ensuring our rovers are in a valid state.
           
           *   **Initial Setup & Key Facts:**  I understand that rovers v12 and v14 are in their initial states. They have access to cameras, storage, and communication. The key information is that we need to transmit images *and* samples back to the base, as well as ensure our storage units return back to `free`.
           
           *   **Decomposing the Problem:** The axiom requires us to accomplish a combination of imaging and analysis tasks.  Here's how I think we can organize the plan:
               *   Image Acquisition:   We have a need for four objectives to capture images. This will be on the rover `v14` as the motion is possible to other configs.
               *   Sample Analysis:   The other rover, `v12`, needs to analyze two samples: one rock (stone) and one soil.
           
           *   **The Crucial Step:**  From here, I'll systematically develop the plan by considering what actions are needed to fulfill each task. To achieve imaging, I'll need to calibrate the camera and take an image, then communicate it. Then for the analysis, I'll need to use the rovers, make sure we `free` the storage by using `drop_rock`.
           
           *   **Execution:**
               *   **Rover v14**: I see `v14` will follow the path in the plan.
                   1.  It begins by moving to configuration `#q0`.
                   2.  Then, it calibrates the camera and takes an image of `v18`.
                   3.  After, it returns to a communication location (`#q2`).
                   4.  It sends the image and repeats the process.
               *   **Rover v12**:  I see `v12` must perform the analyses.
                   1.  It starts to process rock analyses, and repeats this as needed.
                   2.  It uses the appropriate `drop_rock` actions in `full` scenarios.
           
           *   **Final Actions:** To complete the plan, I would confirm that rovers v12 and v14 return to the states needed at the beginning and that storage is free.
           
           This plan accomplishes our goal, satisfying all of the conditions that define `new-axiom@0()`.
           
)

Model:     **Alright, let's break this down into a workable plan to achieve our goal, `new-axiom@0()`:**
           
           My initial thought is to tackle this logically: First I need to break down `new-axiom@0()` into manageable pieces.  Then, by considering each condition in the axiom, I can reverse-engineer a set of actions that achieves it.
           
           I see that achieving `new-axiom@0()` hinges on getting images, analyzing samples, and ensuring our rovers are in a valid state.
           
           *   **Initial Setup & Key Facts:**  I understand that rovers v12 and v14 are in their initial states. They have access to cameras, storage, and communication. The key information is that we need to transmit images *and* samples back to the base, as well as ensure our storage units return back to `free`.
           
           *   **Decomposing the Problem:** The axiom requires us to accomplish a combination of imaging and analysis tasks.  Here's how I think we can organize the plan:
               *   Image Acquisition:   We have a need for four objectives to capture images. This will be on the rover `v14` as the motion is possible to other configs.
               *   Sample Analysis:   The other rover, `v12`, needs to analyze two samples: one rock (stone) and one soil.
           
           *   **The Crucial Step:**  From here, I'll systematically develop the plan by considering what actions are needed to fulfill each task. To achieve imaging, I'll need to calibrate the camera and take an image, then communicate it. Then for the analysis, I'll need to use the rovers, make sure we `free` the storage by using `drop_rock`.
           
           *   **Execution:**
               *   **Rover v14**: I see `v14` will follow the path in the plan.
                   1.  It begins by moving to configuration `#q0`.
                   2.  Then, it calibrates the camera and takes an image of `v18`.
                   3.  After, it returns to a communication location (`#q2`).
                   4.  It sends the image and repeats the process.
               *   **Rover v12**:  I see `v12` must perform the analyses.
                   1.  It starts to process rock analyses, and repeats this as needed.
                   2.  It uses the appropriate `drop_rock` actions in `full` scenarios.
           
           *   **Final Actions:** To complete the plan, I would confirm that rovers v12 and v14 return to the states needed at the beginning and that storage is free.
           
           This plan accomplishes our goal, satisfying all of the conditions that define `new-axiom@0()`.
           

