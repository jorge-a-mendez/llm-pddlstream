User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom type(v3, v2)
           Atom rock(v8)
           Atom objective(v17)
           Atom rover(v12)
           Atom type(v4, v2)
           Atom supports(v10, v11)
           Atom camera(v10)
           Atom type(v7, v6)
           Atom free(v12, v16)
           Atom atconf(v12, v13)
           Atom free(v14, v16)
           Atom rock(v5)
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom objective(v19)
           Atom conf(v14, v15)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom objective(v18)
           Atom store(v16)
           Atom type(v5, v6)
           Atom conf(v12, v13)
           Atom rock(v7)
           Atom mode(v11)
           Atom rock(v1)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom onboard(v10, v12)
           Atom lander(v9)
           Atom objective(v20)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v7)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom above(v12, #o5, v4)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v8)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene includes two rovers, v12 and v14, two cameras, v10, a lander v9, a store v16, and several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). The `mode` is v11. The cameras are onboard both rovers and support mode v11.
           
           The goal is `new-axiom@0()`, which is a conjunction of several conditions:
           1. `atconf(v12, v13)`
           2. `atconf(v14, v15)`
           3. `free(v12, v16)`
           4. `free(v14, v16)`
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `type(?stone, v2)` (which is equivalent to `receivedanalysis(v1), receivedanalysis(v3), receivedanalysis(v4)`)
           10. `type(?soil, v6)` (which is equivalent to `receivedanalysis(v5), receivedanalysis(v7), receivedanalysis(v8)`)
           
           Let's check the initial state:
           - `atconf(v12, v13)` is true.
           - `atconf(v14, v15)` is true.
           - `free(v12, v16)` is true.
           - `free(v14, v16)` is true.
           
           The remaining conditions need to be achieved:
           - `receivedimage` for all objectives (v17, v18, v19, v20) with mode v11. This requires taking images and sending them.
           - `receivedanalysis` for all rocks (v1, v3, v4, v5, v7, v8). This requires sampling the rocks and sending the analysis.
           
           However, the provided list of allowed action instances only contains `move` and `drop_rock` actions. There are no `take_image`, `calibrate`, `send_image`, `sample_rock`, or `send_analysis` actions available. Since these actions are necessary to achieve the `receivedimage` and `receivedanalysis` goals, and they are not in the allowed actions list, the goal is unreachable.
           
           The only available actions are:
           - `(move v12 v13 #o2 v13)`: This moves rover v12 from v13 to v13, effectively doing nothing.
           - `(move v14 v15 #o2 v15)`: This moves rover v14 from v15 to v15, effectively doing nothing.
           - `(drop_rock v12 v16)`: This would make `free(v12, v16)` true if `full(v12, v16)` was true, but `free(v12, v16)` is already true initially, so this action is not useful and its preconditions (full(v12, v16)) are not met.
           - `(drop_rock v14 v16)`: Similarly, this action is not useful and its preconditions are not met.
           
           Therefore, without the necessary actions to capture images, send them, sample rocks, or send analysis, the goal cannot be achieved.

