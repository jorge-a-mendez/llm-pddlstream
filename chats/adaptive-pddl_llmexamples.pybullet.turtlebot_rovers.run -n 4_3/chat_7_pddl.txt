User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom type(v3, v2)
           Atom rock(v8)
           Atom objective(v17)
           Atom rover(v12)
           Atom type(v4, v2)
           Atom supports(v10, v11)
           Atom camera(v10)
           Atom type(v7, v6)
           Atom free(v12, v16)
           Atom atconf(v12, v13)
           Atom free(v14, v16)
           Atom rock(v5)
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom objective(v19)
           Atom conf(v14, v15)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom objective(v18)
           Atom store(v16)
           Atom type(v5, v6)
           Atom conf(v12, v13)
           Atom rock(v7)
           Atom mode(v11)
           Atom rock(v1)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom onboard(v10, v12)
           Atom lander(v9)
           Atom objective(v20)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #q3, v1)
           Atom conf(v14, #q3)
           Atom imagevisible(v14, #q1, #y1, v20)
           Atom imagerange(v14, #q1, v20)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom comvisible(v14, #q2, #y2, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q0, #y0, v19)
           Atom imagerange(v14, #q0, v19)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #q7, #y5, v19)
           Atom imagerange(v12, #q7, v19)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #q10, #y7, v20)
           Atom imagerange(v12, #q10, v20)
           Atom conf(v12, #q10)
           Atom ray(#y7)
           Atom imagevisible(v12, #q12, #y9, v18)
           Atom imagerange(v12, #q12, v18)
           Atom conf(v12, #q12)
           Atom ray(#y9)
           Atom comvisible(v12, #q9, #y6, v9)
           Atom comrange(v12, #q9, v9)
           Atom conf(v12, #q9)
           Atom ray(#y6)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #q11, #y8, v17)
           Atom imagerange(v12, #q11, v17)
           Atom conf(v12, #q11)
           Atom ray(#y8)
           Atom imagevisible(v14, #q5, #y3, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t5, v15)
           Atom motion(v14, #q2, #t4, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #t35, #q2)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, v13, #t18, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, v13, #t19, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q1, #t7, #q2)
           Atom motion(v14, v15, #t2, #q1)
           Atom motion(v14, #q2, #t26, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #t17, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q11, #t14, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q12, #t15, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q9, #t21, v13)
           Atom motion(v12, #q10, #t13, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q7, #t12, #q9)
           Atom motion(v12, v13, #t16, #q7)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q3, #t33, #q4)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, v15, #t20, #q3)
           Atom motion(v14, #q2, #t3, #q3)
           Atom motion(v14, #q3, #t0, #q2)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #t11, #q9)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, v13, #t22, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q9, #t10, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #t9, #q2)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q2, #t27, #q6)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q1, #t32, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q0, #t6, #q2)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, v15, #t1, #q0)
           Atom motion(v14, #q4, #t30, #q0)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q2, #t28, #q0)
           Atom motion(v14, #q0, #t23, #q1)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q6, #t31, #q5)
           Atom motion(v14, v15, #t29, #q5)
           Atom motion(v14, #q5, #t25, #q6)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q2, #t34, #q5)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q5, #t8, #q2)
           Atom motion(v14, #q1, #t24, #q5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q3 v1 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t13 #q9))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t14 #q9))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t15 #q9))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t12 #q9))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t11 #q9))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #t10 #q8))
           ((move v12 #q9 #t21 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t16 #q7))
           ((move v12 v13 #t17 #q10))
           ((move v12 v13 #t18 #q11))
           ((move v12 v13 #t19 #q12))
           ((move v12 v13 #t22 #q8))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t23 #q1))
           ((move v14 #q0 #t6 #q2))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t24 #q5))
           ((move v14 #q1 #t32 #q6))
           ((move v14 #q1 #t7 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #t26 #q1))
           ((move v14 #q2 #t27 #q6))
           ((move v14 #q2 #t28 #q0))
           ((move v14 #q2 #t3 #q3))
           ((move v14 #q2 #t34 #q5))
           ((move v14 #q2 #t4 #q4))
           ((move v14 #q2 #t5 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t0 #q2))
           ((move v14 #q3 #t33 #q4))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t30 #q0))
           ((move v14 #q4 #t35 #q2))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t25 #q6))
           ((move v14 #q5 #t8 #q2))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t31 #q5))
           ((move v14 #q6 #t9 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((move v14 v15 #t2 #q1))
           ((move v14 v15 #t20 #q3))
           ((move v14 v15 #t29 #q5))
           ((calibrate v12 #q10 #y7 v20 v10))
           ((calibrate v12 #q11 #y8 v17 v10))
           ((calibrate v12 #q12 #y9 v18 v10))
           ((calibrate v12 #q7 #y5 v19 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q1 #y1 v20 v10))
           ((calibrate v14 #q5 #y3 v17 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((take_image v12 #q10 #y7 v20 v10 v11))
           ((take_image v12 #q11 #y8 v17 v10 v11))
           ((take_image v12 #q12 #y9 v18 v10 v11))
           ((take_image v12 #q7 #y5 v19 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q1 #y1 v20 v10 v11))
           ((take_image v14 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q9 #y6 v9 v1))
           ((send_analysis v12 #q9 #y6 v9 v3))
           ((send_analysis v12 #q9 #y6 v9 v4))
           ((send_analysis v12 #q9 #y6 v9 v7))
           ((send_analysis v12 #q9 #y6 v9 v8))
           ((send_analysis v12 #q9 #y6 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y2 v9 v3))
           ((send_analysis v14 #q2 #y2 v9 v4))
           ((send_analysis v14 #q2 #y2 v9 v7))
           ((send_analysis v14 #q2 #y2 v9 v8))
           ((send_analysis v14 #q2 #y2 v9 v1))
           ((send_analysis v14 #q2 #y2 v9 v5))
           ((send_image v12 #q9 #y6 v9 v20 v11))
           ((send_image v12 #q9 #y6 v9 v17 v11))
           ((send_image v12 #q9 #y6 v9 v18 v11))
           ((send_image v12 #q9 #y6 v9 v19 v11))
           ((send_image v14 #q2 #y2 v9 v19 v11))
           ((send_image v14 #q2 #y2 v9 v20 v11))
           ((send_image v14 #q2 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` represents a conjunction of conditions. Let's break down the conditions to understand what needs to be achieved:
           
           The goal requires:
           1.  `atconf(v12, v13)`: Rover `v12` must be at configuration `v13`. This is already true in the initial state.
           2.  `atconf(v14, v15)`: Rover `v14` must be at configuration `v15`. This is already true in the initial state.
           3.  `free(v12, v16)`: Rover `v12` must have a free storage `v16`. This is already true in the initial state.
           4.  `free(v14, v16)`: Rover `v14` must have a free storage `v16`. This is already true in the initial state.
           5.  `receivedimage(v17, v11)`: An image of objective `v17` in mode `v11` must be received by the lander.
           6.  `receivedimage(v18, v11)`: An image of objective `v18` in mode `v11` must be received by the lander.
           7.  `receivedimage(v19, v11)`: An image of objective `v19` in mode `v11` must be received by the lander.
           8.  `receivedimage(v20, v11)`: An image of objective `v20` in mode `v11` must be received by the lander.
           9.  `type(?stone, v2)`: Some object of type `v2` (stone) exists. (This is a type definition and not something to achieve, as rocks v1, v3, v4 are of type v2).
           10. `receivedanalysis(?stone)`: Analysis of a rock of type `v2` must be received. We have rocks v1, v3, v4 of type v2. We need to sample and send analysis for at least one of them.
           11. `type(?soil, v6)`: Some object of type `v6` (soil) exists. (This is a type definition, as rocks v5, v7, v8 are of type v6).
           12. `receivedanalysis(?soil)`: Analysis of a rock of type `v6` must be received. We have rocks v5, v7, v8 of type v6. We need to sample and send analysis for at least one of them.
           
           We have two rovers, `v12` and `v14`, both at their initial configurations `v13` and `v15` respectively, and both have free stores `v16`. The camera `v10` is onboard both rovers and supports mode `v11`. Lander `v9` is the target for communication.
           
           To achieve the image reception goals:
           We need to take images of `v17`, `v18`, `v19`, `v20` using mode `v11` and then send them to `v9`.
           - For `v17`: Rover `v12` can take an image at `#q11` (`imagevisible(v12, #q11, #y8, v17)`). Rover `v14` can take an image at `#q5` (`imagevisible(v14, #q5, #y3, v17)`).
           - For `v18`: Rover `v12` can take an image at `#q12` (`imagevisible(v12, #q12, #y9, v18)`). Rover `v14` can take an image at `#q6` (`imagevisible(v14, #q6, #y4, v18)`).
           - For `v19`: Rover `v12` can take an image at `#q7` (`imagevisible(v12, #q7, #y5, v19)`). Rover `v14` can take an image at `#q0` (`imagevisible(v14, #q0, #y0, v19)`).
           - For `v20`: Rover `v12` can take an image at `#q10` (`imagevisible(v12, #q10, #y7, v20)`). Rover `v14` can take an image at `#q1` (`imagevisible(v14, #q1, #y1, v20)`).
           
           To achieve the analysis reception goals:
           We need to sample a rock of type `v2` and a rock of type `v6`, and then send their analysis to `v9`.
           - Rocks of type `v2` are `v1`, `v3`, `v4`.
           - Rocks of type `v6` are `v5`, `v7`, `v8`.
           
           Let's plan to take images and analyze rocks with rover `v12` and `v14`.
           
           For image collection and sending:
           Rover `v12` can handle objectives `v17`, `v18`, `v19`, `v20`.
           - Calibrate, take image of `v17` at `#q11`.
           - Calibrate, take image of `v18` at `#q12`.
           - Calibrate, take image of `v19` at `#q7`.
           - Calibrate, take image of `v20` at `#q10`.
           Then move to `#q9` for communication and send all images.
           
           For analysis collection and sending:
           Rover `v12` can sample `v1` (type `v2`) at `#o5`.
           Rover `v12` can sample `v5` (type `v6`) at `#q8`.
           Then move to `#q9` for communication and send analyses.
           
           Let's try to achieve all image and analysis goals using both rovers to minimize travel.
           
           Rover v14 is currently at v15. It can move to #q5, #q6, #q0, #q1 for image taking, and #q3 for rock v1, #q4 for rock v5 for sampling. It can communicate at #q2.
           Rover v12 is currently at v13. It can move to #q11, #q12, #q7, #q10 for image taking, and #o5 for rocks v1, v3, v4, v7, v8, #q8 for rock v5 for sampling. It can communicate at #q9.
           
           Let's assign tasks to rovers:
           **Rover v12**:
           1. Take image of v17 (at #q11)
           2. Take image of v18 (at #q12)
           3. Sample rock v1 (type v2, at #o5)
           4. Sample rock v5 (type v6, at #q8)
           5. Send images and analyses from #q9
           
           **Rover v14**:
           1. Take image of v19 (at #q0)
           2. Take image of v20 (at #q1)
           3. Send images from #q2
           
           This division is not ideal, as rover 12 will have to move to multiple locations for images and then for sampling, then for sending. Rover 14 only needs to take 2 images and send them.
           
           Let's re-evaluate based on the goal `new-axiom@0()` which needs specific `receivedimage` for all 4 objectives and `receivedanalysis` for `type v2` and `type v6`.
           
           **Rover v12 initial config: v13**
           - Image for v17: `imagevisible(v12, #q11, #y8, v17)`
           - Image for v18: `imagevisible(v12, #q12, #y9, v18)`
           - Image for v19: `imagevisible(v12, #q7, #y5, v19)`
           - Image for v20: `imagevisible(v12, #q10, #y7, v20)`
           - Sample rock type v2: `sample_rock v12 #o5 v1 v16` (v1 is type v2). Need to move to #o5 from v13.
           - Sample rock type v6: `sample_rock v12 #q8 v5 v16` (v5 is type v6). Need to move to #q8 from v13.
           - Comms: `comvisible(v12, #q9, #y6, v9)`
           
           **Rover v14 initial config: v15**
           - Image for v17: `imagevisible(v14, #q5, #y3, v17)`
           - Image for v18: `imagevisible(v14, #q6, #y4, v18)`
           - Image for v19: `imagevisible(v14, #q0, #y0, v19)`
           - Image for v20: `imagevisible(v14, #q1, #y1, v20)`
           - Sample rock type v2: `sample_rock v14 #q3 v1 v16` (v1 is type v2). Need to move to #q3 from v15.
           - Sample rock type v6: `sample_rock v14 #q4 v5 v16` (v5 is type v6). Need to move to #q4 from v15.
           - Comms: `comvisible(v14, #q2, #y2, v9)`
           
           Let's try to do everything with Rover v12 for simplicity and minimum movement actions if possible.
           Rover v12 starts at `v13`.
           
           1.  **Move to #q11 to image v17**: `(move v12 v13 #t18 #q11)`
           2.  **Calibrate and take image of v17**: `(calibrate v12 #q11 #y8 v17 v10)` then `(take_image v12 #q11 #y8 v17 v10 v11)`
           3.  **Move to #q12 to image v18**: `(move v12 #q11 #o2 #q12)` (from current #q11 to #q12)
           4.  **Calibrate and take image of v18**: `(calibrate v12 #q12 #y9 v18 v10)` then `(take_image v12 #q12 #y9 v18 v10 v11)`
           5.  **Move to #q7 to image v19**: `(move v12 #q12 #o2 #q7)` (from current #q12 to #q7)
           6.  **Calibrate and take image of v19**: `(calibrate v12 #q7 #y5 v19 v10)` then `(take_image v12 #q7 #y5 v19 v10 v11)`
           7.  **Move to #q10 to image v20**: `(move v12 #q7 #o2 #q10)` (from current #q7 to #q10)
           8.  **Calibrate and take image of v20**: `(calibrate v12 #q10 #y7 v20 v10)` then `(take_image v12 #q10 #y7 v20 v10 v11)`
           All images for objectives v17, v18, v19, v20 are now taken by v12.
           
           Now for sampling:
           9.  **Move to #o5 to sample v1 (type v2)**: `(move v12 #q10 #o2 #o5)` (from current #q10 to #o5)
           10. **Sample rock v1**: `(sample_rock v12 #o5 v1 v16)`
           11. **Move to #q8 to sample v5 (type v6)**: `(move v12 #o5 #o2 #q8)` (from current #o5 to #q8)
           12. **Sample rock v5**: `(sample_rock v12 #q8 v5 v16)`
           All required samples are taken. Note that `free(v12, v16)` becomes `full(v12, v16)` after first sample, then `full(v12, v16)` remains `full(v12, v16)`. The goal state only needs `free(v12, v16)`, so we need to `drop_rock`. But let's check the axiom conditions more closely. The axiom states `free(v12, v16)` and `free(v14, v16)`. If we take two samples with v12, then v12's store will be `full`. We need to drop a rock for `v12` to be `free` again. Or we can sample one with v12 and one with v14.
           
           Let's reconsider. The `new-axiom@0()` condition `free(v12, v16)` and `free(v14, v16)` must hold *at the end*. This means if a rover takes a sample, it must then drop it.
           The "receivedanalysis" and "receivedimage" goals are terminal states, they do not require `free(v12,v16)` to be maintained throughout. So, the order of actions should be:
           1. Sample rock of type v2.
           2. Send analysis. (This implicitly assumes the store can be full during analysis, which is allowed).
           3. Drop rock if needed to satisfy final `free` condition.
           
           Let's divide tasks between rovers to manage the `free` store condition at the end.
           
           **Rover v12 (starts at v13, free v16):**
           *   Get image for v17.
           *   Get image for v18.
           *   Get image for v19.
           *   Get image for v20.
           *   Sample rock type v2 (v1).
           *   Send all images and analysis for v1.
           
           **Rover v14 (starts at v15, free v16):**
           *   Sample rock type v6 (v5).
           *   Send analysis for v5.
           
           This looks like a more efficient and compliant plan. Let's make sure the store is free at the end.
           
           **Rover v12 plan (from v13):**
           1. Move to `#q11` for `v17`. `(move v12 v13 #t18 #q11)`
           2. Calibrate camera for `v17`. `(calibrate v12 #q11 #y8 v17 v10)`
           3. Take image of `v17`. `(take_image v12 #q11 #y8 v17 v10 v11)`
           4. Move to `#q12` for `v18`. `(move v12 #q11 #o2 #q12)`
           5. Calibrate camera for `v18`. `(calibrate v12 #q12 #y9 v18 v10)`
           6. Take image of `v18`. `(take_image v12 #q12 #y9 v18 v10 v11)`
           7. Move to `#q7` for `v19`. `(move v12 #q12 #o2 #q7)`
           8. Calibrate camera for `v19`. `(calibrate v12 #q7 #y5 v19 v10)`
           9. Take image of `v19`. `(take_image v12 #q7 #y5 v19 v10 v11)`
           10. Move to `#q10` for `v20`. `(move v12 #q7 #o2 #q10)`
           11. Calibrate camera for `v20`. `(calibrate v12 #q10 #y7 v20 v10)`
           12. Take image of `v20`. `(take_image v12 #q10 #y7 v20 v10 v11)`
           13. Move to `#o5` to sample `v1` (type `v2`). `(move v12 #q10 #o2 #o5)`
           14. Sample rock `v1`. `(sample_rock v12 #o5 v1 v16)` (Store is now full).
           15. Move to `#q9` for communication. `(move v12 #o5 #o2 #q9)`
           16. Send analysis of `v1`. `(send_analysis v12 #q9 #y6 v9 v1)`
           17. Send images of `v17`, `v18`, `v19`, `v20`.
               `(send_image v12 #q9 #y6 v9 v17 v11)`
               `(send_image v12 #q9 #y6 v9 v18 v11)`
               `(send_image v12 #q9 #y6 v9 v19 v11)`
               `(send_image v12 #q9 #y6 v9 v20 v11)`
           18. Drop rock `v1` to free the store. `(drop_rock v12 v16)` (Store is now free, satisfying `free(v12, v16)`).
           19. Move back to `v13` (current config for `atconf(v12, v13)`). `(move v12 #q9 #t21 v13)`
           
           **Rover v14 plan (from v15):**
           1. Move to `#q4` to sample `v5` (type `v6`). `(move v14 v15 #o2 #q4)`
           2. Sample rock `v5`. `(sample_rock v14 #q4 v5 v16)` (Store is now full).
           3. Move to `#q2` for communication. `(move v14 #q4 #t35 #q2)`
           4. Send analysis of `v5`. `(send_analysis v14 #q2 #y2 v9 v5)`
           5. Drop rock `v5` to free the store. `(drop_rock v14 v16)` (Store is now free, satisfying `free(v14, v16)`).
           6. Move back to `v15` (current config for `atconf(v14, v15)`). `(move v14 #q2 #t5 v15)`
           
           This detailed plan covers all goals and preconditions.
           
           Let's check the state `atconf(v12,v13)` and `atconf(v14,v15)` again. After moving around, the rovers need to return to these specific configurations. The move actions are available.
           
           Final check on the `new-axiom@0()` conditions:
           - `atconf(v12, v13)`: Achieved by the last move action for v12.
           - `atconf(v14, v15)`: Achieved by the last move action for v14.
           - `free(v12, v16)`: Achieved by `drop_rock v12 v16`.
           - `free(v14, v16)`: Achieved by `drop_rock v14 v16`.
           - `receivedimage(v17, v11)`: Achieved.
           - `receivedimage(v18, v11)`: Achieved.
           - `receivedimage(v19, v11)`: Achieved.
           - `receivedimage(v20, v11)`: Achieved.
           - `receivedanalysis(?stone)` (type v2): Achieved by `receivedanalysis(v1)`.
           - `receivedanalysis(?soil)` (type v6): Achieved by `receivedanalysis(v5)`.
           
           All conditions seem to be met.
           
           --Plan--:
           (move v12 v13 #t18 #q11)
           (calibrate v12 #q11 #y8 v17 v10)
           (take_image v12 #q11 #y8 v17 v10 v11)
           (move v12 #q11 #o2 #q12)
           (calibrate v12 #q12 #y9 v18 v10)
           (take_image v12 #q12 #y9 v18 v10 v11)
           (move v12 #q12 #o2 #q7)
           (calibrate v12 #q7 #y5 v19 v10)
           (take_image v12 #q7 #y5 v19 v10 v11)
           (move v12 #q7 #o2 #q10)
           (calibrate v12 #q10 #y7 v20 v10)
           (take_image v12 #q10 #y7 v20 v10 v11)
           (move v12 #q10 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (move v12 #o5 #o2 #q9)
           (send_analysis v12 #q9 #y6 v9 v1)
           (send_image v12 #q9 #y6 v9 v17 v11)
           (send_image v12 #q9 #y6 v9 v18 v11)
           (send_image v12 #q9 #y6 v9 v19 v11)
           (send_image v12 #q9 #y6 v9 v20 v11)
           (drop_rock v12 v16)
           (move v12 #q9 #t21 v13)
           (move v14 v15 #o2 #q4)
           (sample_rock v14 #q4 v5 v16)
           (move v14 #q4 #t35 #q2)
           (send_analysis v14 #q2 #y2 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q2 #t5 v15)

