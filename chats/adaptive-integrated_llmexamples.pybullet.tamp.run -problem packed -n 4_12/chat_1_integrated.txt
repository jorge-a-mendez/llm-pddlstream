User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v17 is a pose with position (-0.204, -0.496, 0.781) and quaternion (0.0, 0.0, 0.112, 0.994).
           Object v15 is a pose with position (0.168, -0.448, 0.781) and quaternion (0.0, 0.0, -0.176, 0.984).
           Object v13 is a pose with position (0.022, -0.327, 0.781) and quaternion (0.0, 0.0, -0.757, 0.654).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.186, 0.259), (-0.09, 0.355)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.246, -0.538), (-0.162, -0.454)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.123, -0.493), (0.213, -0.403)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.018, -0.367), (0.062, -0.287)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v9 is a pose with position (-0.138, 0.307, 0.781) and quaternion (0.0, 0.0, 0.258, 0.966).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v12)
           Atom stackable(v14, v18)
           Atom bconf(v3)
           Atom supported(v12, v13, v11)
           Atom stackable(v12, v18)
           Atom supported(v14, v15, v11)
           Atom arm(v6)
           Atom atbconf(v3)
           Atom supported(v16, v17, v11)
           Atom controllable(v4)
           Atom stackable(v8, v10)
           Atom pose(v14, v15)
           Atom graspable(v16)
           Atom atpose(v16, v17)
           Atom pose(v16, v17)
           Atom stackable(v16, v10)
           Atom pose(v12, v13)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v10)
           Atom aconf(v6, v7)
           Atom stackable(v16, v18)
           Atom stackable(v8, v18)
           Atom graspable(v8)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom arm(v4)
           Atom atpose(v14, v15)
           Atom pose(v8, v9)
           Atom handempty(v4)
           Atom handempty(v6)
           Atom graspable(v14)
           Atom stackable(v14, v10)
           Atom supported(v8, v9, v11)
           Atom ataconf(v6, v7)
           Atom canmove()
           Atom aconf(v4, v5)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v18)
           Atom supported(v14, #o2, v10)
           Atom grasp(v14, #o1)
           Atom grasp(v16, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #o1)
           Atom grasp(v12, #o1)
           Atom supported(v8, #o2, v18)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v16, #o2, v10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects (v8, v12, v14, v16) that are currently supported by the surface v11 at different poses (v9, v13, v15, v17, respectively). The goal is to move all these objects to be on object v18. Object v18 is a stackable surface. The robot has two arms, v4 and v6, and is currently at base configuration v3. Both arms are handempty.
           
           The problem only provides the `move_base` action instance. However, to achieve the goal of placing objects on v18, the robot needs to perform `pick` and `place` actions. The provided `move_base` action instance is a no-op movement, moving from `v3` to `v3`.
           
           Since there are no `pick` or `place` action instances provided, and only the `move_base` action instance is available, it is impossible to achieve the goal of moving objects from one surface to another. Therefore, the goal is unreachable.

