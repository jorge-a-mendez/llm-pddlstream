User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v35: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.085), (0.085, -0.015)).
           Object p11 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, 0.015), (-0.015, 0.085)).
           Object v9 is a pose with position (0.053, -0.443, 0.781) and quaternion (0.0, 0.0, 0.822, 0.569).
           Object p12 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v19 is a pose with position (-0.147, 0.249, 0.781) and quaternion (0.0, 0.0, 0.997, 0.079).
           Object v17 is a pose with position (-0.109, -0.361, 0.781) and quaternion (0.0, 0.0, 0.933, -0.361).
           Object p13 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v15 is a pose with position (0.218, 0.483, 0.781) and quaternion (0.0, 0.0, 0.994, -0.112).
           Object p5 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (0.242, 0.033, 0.781) and quaternion (0.0, 0.0, 0.503, 0.864).
           Object p14 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p6 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p10 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, 0.015), (0.085, 0.085)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.085), (-0.015, -0.015)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom kin(v35, v41, p7, v37, v38, v39)
           Atom controllable(v4)
           Atom stackable(v18, v20)
           Atom pose(v12, v13)
           Atom pose(v18, p9)
           Atom graspable(v8)
           Atom stackable(v14, v20)
           Atom supported(v8, p5, v20)
           Atom supported(v12, p6, v20)
           Atom graspable(v16)
           Atom stackable(v18, v10)
           Atom pose(v8, p10)
           Atom kin(v35, v41, p12, v37, v38, v39)
           Atom stackable(v8, v20)
           Atom graspable(v18)
           Atom pose(v16, p13)
           Atom supported(v16, v17, v11)
           Atom handempty(v6)
           Atom atpose(v12, v13)
           Atom kin(v35, v43, p9, v37, v38, v39)
           Atom stackable(v8, v10)
           Atom stackable(v12, v20)
           Atom pose(v12, p11)
           Atom supported(v16, p13, v20)
           Atom pose(v18, v19)
           Atom bconf(v3)
           Atom pose(v14, v15)
           Atom supported(v18, p14, v20)
           Atom pose(v14, p7)
           Atom kin(v35, v40, p6, v37, v38, v39)
           Atom atpose(v18, v19)
           Atom atpose(v14, v15)
           Atom supported(v14, p7, v20)
           Atom atpose(v8, v9)
           Atom supported(v16, p8, v20)
           Atom ataconf(v6, v7)
           Atom kin(v35, v42, p8, v37, v38, v39)
           Atom supported(v8, v9, v11)
           Atom supported(v12, p11, v20)
           Atom kin(v35, v42, p13, v37, v38, v39)
           Atom kin(v35, v36, p5, v37, v38, v39)
           Atom kin(v35, v43, p14, v37, v38, v39)
           Atom arm(v4)
           Atom arm(v6)
           Atom supported(v18, v19, v11)
           Atom ataconf(v4, v5)
           Atom supported(v18, p9, v20)
           Atom pose(v14, p12)
           Atom pose(v8, p5)
           Atom pose(v8, v9)
           Atom kin(v35, v36, p10, v37, v38, v39)
           Atom pose(v18, p14)
           Atom graspable(v14)
           Atom pose(v12, p6)
           Atom kin(v35, v40, p11, v37, v38, v39)
           Atom atbconf(v3)
           Atom supported(v8, p10, v20)
           Atom atpose(v16, v17)
           Atom stackable(v16, v10)
           Atom stackable(v12, v10)
           Atom aconf(v6, v7)
           Atom aconf(v4, v5)
           Atom pose(v16, v17)
           Atom canmove()
           Atom stackable(v16, v20)
           Atom pose(v16, p8)
           Atom handempty(v4)
           Atom supported(v12, v13, v11)
           Atom graspable(v12)
           Atom supported(v14, p12, v20)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom grasp(v8, #g1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g2)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom supported(v16, #o2, v20)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom grasp(v14, #g4)
           Atom grasp(v16, #g3)
           Atom supported(v12, #o2, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v18, #o2, v20)
           Atom supported(v14, #o2, v20)
           Atom grasp(v18, #g0)
           Atom supported(v8, #o2, v20)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, v9, #g1, #q1, #t1)
           Atom bconf(#q9)
           Atom atraj(#t17)
           Atom kin(v4, v8, p10, #g1, #q9, #t17)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, p5, #g1, #o3, #o4)
           Atom kin(v4, v12, p6, #g2, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, p11, #g2, #q2, #t2)
           Atom bconf(#q7)
           Atom atraj(#t7)
           Atom kin(v4, v12, v13, #g2, #q7, #t7)
           Atom kin(v4, v14, p7, #g4, #o3, #o4)
           Atom bconf(#q6)
           Atom atraj(#t6)
           Atom kin(v4, v14, p12, #g4, #q6, #t6)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v14, v15, #g4, #q4, #t4)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v16, p13, #g3, #q3, #t3)
           Atom bconf(#q8)
           Atom atraj(#t16)
           Atom kin(v4, v16, v17, #g3, #q8, #t16)
           Atom kin(v4, v16, p8, #g3, #o3, #o4)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v18, p14, #g0, #q0, #t0)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v18, v19, #g0, #q5, #t5)
           Atom kin(v4, v18, p9, #g0, #o3, #o4)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom btraj(#t13)
           Atom basemotion(v3, #t13, #q5)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q1)
           Atom basemotion(#q9, #o0, #q1)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q4, #o0, #q9)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q4)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, #q8)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q6, #o0, #q2)
           Atom btraj(#t14)
           Atom basemotion(v3, #t14, #q6)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q1, #o0, #q7)
           Atom btraj(#t15)
           Atom basemotion(v3, #t15, #q7)
           Atom kin(v4, v14, #o2, #g4, #o3, #o4)
           Atom kin(v4, v18, #o2, #g0, #o3, #o4)
           Atom kin(v4, v16, #o2, #g3, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t10))
           ((move_base v3 #q3 #t11))
           ((move_base v3 #q4 #t12))
           ((move_base v3 #q5 #t13))
           ((move_base v3 #q6 #t14))
           ((move_base v3 #q7 #t15))
           ((move_base v3 #q0 #t8))
           ((move_base v3 #q1 #t9))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p11 #g2 #q2 #t2))
           ((place v4 v12 p11 #g2 #q2 #t2))
           ((pick v4 v12 p6 #g2 #o3 #o4))
           ((place v4 v12 p6 #g2 #o3 #o4))
           ((pick v4 v12 v13 #g2 #q7 #t7))
           ((place v4 v12 v13 #g2 #q7 #t7))
           ((pick v4 v14 #o2 #g4 #o3 #o4))
           ((place v4 v14 #o2 #g4 #o3 #o4))
           ((pick v4 v14 p12 #g4 #q6 #t6))
           ((place v4 v14 p12 #g4 #q6 #t6))
           ((pick v4 v14 p7 #g4 #o3 #o4))
           ((place v4 v14 p7 #g4 #o3 #o4))
           ((pick v4 v14 v15 #g4 #q4 #t4))
           ((place v4 v14 v15 #g4 #q4 #t4))
           ((pick v4 v16 #o2 #g3 #o3 #o4))
           ((place v4 v16 #o2 #g3 #o3 #o4))
           ((pick v4 v16 p13 #g3 #q3 #t3))
           ((place v4 v16 p13 #g3 #q3 #t3))
           ((pick v4 v16 p8 #g3 #o3 #o4))
           ((place v4 v16 p8 #g3 #o3 #o4))
           ((pick v4 v16 v17 #g3 #q8 #t16))
           ((place v4 v16 v17 #g3 #q8 #t16))
           ((pick v4 v18 #o2 #g0 #o3 #o4))
           ((place v4 v18 #o2 #g0 #o3 #o4))
           ((pick v4 v18 p14 #g0 #q0 #t0))
           ((place v4 v18 p14 #g0 #q0 #t0))
           ((pick v4 v18 p9 #g0 #o3 #o4))
           ((place v4 v18 p9 #g0 #o3 #o4))
           ((pick v4 v18 v19 #g0 #q5 #t5))
           ((place v4 v18 v19 #g0 #q5 #t5))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 p10 #g1 #q9 #t17))
           ((place v4 v8 p10 #g1 #q9 #t17))
           ((pick v4 v8 p5 #g1 #o3 #o4))
           ((place v4 v8 p5 #g1 #o3 #o4))
           ((pick v4 v8 v9 #g1 #q1 #t1))
           ((place v4 v8 v9 #g1 #q1 #t1))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place objects v8, v12, v14, v16, and v18 on the surface v20.
           Looking at the initial state, we have:
           - `v8` is at `v9` and supported by `v11`. It is also supported by `p5` and `p10` on `v20`.
           - `v12` is at `v13` and supported by `v11`. It is also supported by `p6` and `p11` on `v20`.
           - `v14` is at `v15` and supported by `v11`. It is also supported by `p7` and `p12` on `v20`.
           - `v16` is at `v17` and supported by `v11`. It is also supported by `p8` and `p13` on `v20`.
           - `v18` is at `v19` and supported by `v11`. It is also supported by `p9` and `p14` on `v20`.
           
           All objects are initially on `v11` or are placed on `v20` at various poses. The goal is to have all of them on `v20`. We have an available arm `v4` that is currently at `v5` and is handempty. The robot base `v3` is at `v3`.
           
           The strategy will be to pick each object from its current location on `v11` or other locations and place it on `v20`. We will use the poses on `v20` that are already provided in the initial state and are collision-free.
           
           First, let's move `v8` from `v9` (on `v11`) to `p5` (on `v20`).
           Next, move `v12` from `v13` (on `v11`) to `p6` (on `v20`).
           Then, move `v14` from `v15` (on `v11`) to `p7` (on `v20`).
           After that, move `v16` from `v17` (on `v11`) to `p8` (on `v20`).
           Finally, move `v18` from `v19` (on `v11`) to `p9` (on `v20`).
           
           The robot's base will move to different configurations as needed for each pick and place operation. We should choose base configurations that are available from the initial state's kin relations.
           
           --Plan--:
           (pick v4 v8 v9 #g1 #q1 #t1)
           (place v4 v8 p5 #g1 #o3 #o4)
           (pick v4 v12 v13 #g2 #q7 #t7)
           (place v4 v12 p6 #g2 #o3 #o4)
           (pick v4 v14 v15 #g4 #q4 #t4)
           (place v4 v14 p7 #g4 #o3 #o4)
           (pick v4 v16 v17 #g3 #q8 #t16)
           (place v4 v16 p8 #g3 #o3 #o4)
           (pick v4 v18 v19 #g0 #q5 #t5)
           (place v4 v18 p9 #g0 #o3 #o4)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q4) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the robot was not in the correct base configuration (`#q4`) before attempting to pick `v14`. I need to ensure that `atbconf` is satisfied for each pick and place action by inserting `move_base` actions as needed.
           
           Let's re-evaluate the sequence, ensuring that the `atbconf` predicate is met for each pick/place action.
           The robot starts at `v3`.
           
           1.  To pick `v8` from `v9`, we need to be at base configuration `#q1`.
               *   `move_base v3 #q1 #t9`
               *   `pick v4 v8 v9 #g1 #q1 #t1`
               *   To place `v8` at `p5`, we need to be at base configuration `#o3`.
               *   `move_base #q1 #o3 #o0`
               *   `place v4 v8 p5 #g1 #o3 #o4`
           
           2.  To pick `v12` from `v13`, we need to be at base configuration `#q7`.
               *   `move_base #o3 #q7 #o0`
               *   `pick v4 v12 v13 #g2 #q7 #t7`
               *   To place `v12` at `p6`, we need to be at base configuration `#o3`.
               *   `move_base #q7 #o3 #o0`
               *   `place v4 v12 p6 #g2 #o3 #o4`
           
           3.  To pick `v14` from `v15`, we need to be at base configuration `#q4`.
               *   `move_base #o3 #q4 #o0`
               *   `pick v4 v14 v15 #g4 #q4 #t4`
               *   To place `v14` at `p7`, we need to be at base configuration `#o3`.
               *   `move_base #q4 #o3 #o0`
               *   `place v4 v14 p7 #g4 #o3 #o4`
           
           4.  To pick `v16` from `v17`, we need to be at base configuration `#q8`.
               *   `move_base #o3 #q8 #o0`
               *   `pick v4 v16 v17 #g3 #q8 #t16`
               *   To place `v16` at `p8`, we need to be at base configuration `#o3`.
               *   `move_base #q8 #o3 #o0`
               *   `place v4 v16 p8 #g3 #o3 #o4`
           
           5.  To pick `v18` from `v19`, we need to be at base configuration `#q5`.
               *   `move_base #o3 #q5 #o0`
               *   `pick v4 v18 v19 #g0 #q5 #t5`
               *   To place `v18` at `p9`, we need to be at base configuration `#o3`.
               *   `move_base #q5 #o3 #o0`
               *   `place v4 v18 p9 #g0 #o3 #o4`
           
           This revised plan incorporates the necessary base movements.
           
           --Plan--:
           (move_base v3 #q1 #t9)
           (pick v4 v8 v9 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v8 p5 #g1 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v12 v13 #g2 #q7 #t7)
           (move_base #q7 #o3 #o0)
           (place v4 v12 p6 #g2 #o3 #o4)
           (move_base #o3 #q4 #o0)
           (pick v4 v14 v15 #g4 #q4 #t4)
           (move_base #q4 #o3 #o0)
           (place v4 v14 p7 #g4 #o3 #o4)
           (move_base #o3 #q8 #o0)
           (pick v4 v16 v17 #g3 #q8 #t16)
           (move_base #q8 #o3 #o0)
           (place v4 v16 p8 #g3 #o3 #o4)
           (move_base #o3 #q5 #o0)
           (pick v4 v18 v19 #g0 #q5 #t5)
           (move_base #q5 #o3 #o0)
           (place v4 v18 p9 #g0 #o3 #o4)

