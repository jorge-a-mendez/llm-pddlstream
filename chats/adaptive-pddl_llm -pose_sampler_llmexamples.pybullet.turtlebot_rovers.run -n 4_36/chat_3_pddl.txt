User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v19)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom objective(v17)
           Atom conf(v14, v15)
           Atom rock(v3)
           Atom rock(v7)
           Atom atconf(v12, v13)
           Atom camera(v10)
           Atom onboard(v10, v12)
           Atom rock(v4)
           Atom type(v5, v6)
           Atom type(v7, v6)
           Atom type(v8, v6)
           Atom store(v16)
           Atom rock(v1)
           Atom rock(v8)
           Atom supports(v10, v11)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom atconf(v14, v15)
           Atom type(v1, v2)
           Atom type(v4, v2)
           Atom rock(v5)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom objective(v18)
           Atom objective(v20)
           Atom rover(v12)
           Atom imagevisible(v14, #q1, #y1, v17)
           Atom imagerange(v14, #q1, v17)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom imagevisible(v14, #q7, #y5, v20)
           Atom imagerange(v14, #q7, v20)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q9, #y7, v17)
           Atom imagerange(v12, #q9, v17)
           Atom conf(v12, #q9)
           Atom ray(#y7)
           Atom imagevisible(v12, #q10, #y8, v20)
           Atom imagerange(v12, #q10, v20)
           Atom conf(v12, #q10)
           Atom ray(#y8)
           Atom imagevisible(v12, #q11, #y9, v18)
           Atom imagerange(v12, #q11, v18)
           Atom conf(v12, #q11)
           Atom ray(#y9)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom comvisible(v14, #q2, #y2, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom comvisible(v12, #q3, #y3, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y3)
           Atom above(v14, #o5, v5)
           Atom above(v12, #q6, v5)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q8, #y6, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom imagevisible(v14, #q5, #y4, v19)
           Atom imagerange(v14, #q5, v19)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v3)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q4, v1)
           Atom conf(v12, #q4)
           Atom above(v14, #o5, v1)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #t21, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, v15, #t4, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q2, #t0, v15)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t12, #q1)
           Atom motion(v14, #q1, #t7, #q2)
           Atom motion(v12, #q8, #t19, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #t10, v13)
           Atom motion(v12, #q3, #t18, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #t17, #q3)
           Atom motion(v12, v13, #t16, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, v13, #t23, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v14, #q2, #t13, #q5)
           Atom motion(v14, v15, #t5, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #t8, #q2)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #t22, #q9)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #t20, #q3)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #t1, #q3)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, v13, #t15, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q3, #t2, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v14, #q0, #t6, #q2)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t3, #q0)
           Atom motion(v14, #q2, #t11, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q2, #t14, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q7, #t9, #q2)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q4 v1 v16))
           ((sample_rock v12 #q6 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #t10 v13))
           ((move v12 #q3 #t18 #q6))
           ((move v12 #q3 #t2 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t1 #q3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t17 #q3))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q3))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t20 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q4))
           ((move v12 v13 #t16 #q6))
           ((move v12 v13 #t21 #q8))
           ((move v12 v13 #t22 #q9))
           ((move v12 v13 #t23 #q10))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t6 #q2))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t7 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #t0 v15))
           ((move v14 #q2 #t11 #q0))
           ((move v14 #q2 #t12 #q1))
           ((move v14 #q2 #t13 #q5))
           ((move v14 #q2 #t14 #q7))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t8 #q2))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t9 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t3 #q0))
           ((move v14 v15 #t4 #q1))
           ((move v14 v15 #t5 #q5))
           ((calibrate v12 #q10 #y8 v20 v10))
           ((calibrate v12 #q11 #y9 v18 v10))
           ((calibrate v12 #q8 #y6 v19 v10))
           ((calibrate v12 #q9 #y7 v17 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q1 #y1 v17 v10))
           ((calibrate v14 #q5 #y4 v19 v10))
           ((calibrate v14 #q7 #y5 v20 v10))
           ((take_image v12 #q10 #y8 v20 v10 v11))
           ((take_image v12 #q11 #y9 v18 v10 v11))
           ((take_image v12 #q8 #y6 v19 v10 v11))
           ((take_image v12 #q9 #y7 v17 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q1 #y1 v17 v10 v11))
           ((take_image v14 #q5 #y4 v19 v10 v11))
           ((take_image v14 #q7 #y5 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y3 v9 v3))
           ((send_analysis v12 #q3 #y3 v9 v4))
           ((send_analysis v12 #q3 #y3 v9 v7))
           ((send_analysis v12 #q3 #y3 v9 v8))
           ((send_analysis v12 #q3 #y3 v9 v1))
           ((send_analysis v12 #q3 #y3 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y2 v9 v1))
           ((send_analysis v14 #q2 #y2 v9 v3))
           ((send_analysis v14 #q2 #y2 v9 v4))
           ((send_analysis v14 #q2 #y2 v9 v5))
           ((send_analysis v14 #q2 #y2 v9 v7))
           ((send_analysis v14 #q2 #y2 v9 v8))
           ((send_image v12 #q3 #y3 v9 v20 v11))
           ((send_image v12 #q3 #y3 v9 v18 v11))
           ((send_image v12 #q3 #y3 v9 v19 v11))
           ((send_image v12 #q3 #y3 v9 v17 v11))
           ((send_image v14 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q2 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y2 v9 v19 v11))
           ((send_image v14 #q2 #y2 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, both equipped with a camera `v10` and a store `v16`. There are several objectives (`v17`, `v18`, `v19`, `v20`), rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`), and a lander `v9` for communication. The rovers need to image objectives and analyze rocks, then send the data back to the lander. The goal `new-axiom@0()` requires:
           1. Both rovers `v12` and `v14` to be at some configuration. (Already true from initial state, `atconf(v12, v13)` and `atconf(v14, v15)`).
           2. Both rovers `v12` and `v14` to have free stores. (Already true from initial state, `free(v12, v16)` and `free(v14, v16)`).
           3. Images of objectives `v17`, `v18`, `v19`, `v20` to be received in mode `v11`.
           4. Rocks of type `v2` (which are `v1`, `v3`, `v4`) and type `v6` (which are `v5`, `v7`, `v8`) to be analyzed.
           
           Let's break down the plan:
           First, we need to ensure all required images are taken and sent.
           - For `v17`: Rover `v14` can image it at `#q1` and `v12` at `#q9`.
           - For `v18`: Rover `v14` can image it at `#q0` and `v12` at `#q11`.
           - For `v19`: Rover `v14` can image it at `#q5` and `v12` at `#q8`.
           - For `v20`: Rover `v14` can image it at `#q7` and `v12` at `#q10`.
           
           Then, these images need to be sent. Rovers can communicate with lander `v9` from `#q2` (for `v14`) and `#q3` (for `v12`).
           
           Second, we need to analyze the rocks and send the analysis.
           - Rocks of type `v2`: `v1`, `v3`, `v4`.
           - Rocks of type `v6`: `v5`, `v7`, `v8`.
           Both rovers can sample these rocks. `v12` can sample `v1`, `v3`, `v4`, `v5`, `v7`, `v8`. `v14` can sample `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
           
           The plan will leverage both rovers to achieve the goals efficiently.
           
           **Rover v14's tasks:**
           1. Calibrate camera and take images of `v17`, `v18`, `v19`, `v20`.
           2. Move to a communication position `#q2`.
           3. Send all taken images.
           4. Sample rock `v1` (type `v2`), `v5` (type `v6`).
           5. Move back to a communication position `#q2`.
           6. Send analysis of sampled rocks.
           
           **Rover v12's tasks:**
           1. Calibrate camera and take images of any remaining objectives or objectives where `v14` is not configured for, to ensure all are covered.
           2. Move to a communication position `#q3`.
           3. Send all taken images.
           4. Sample rock `v3` (type `v2`), `v4` (type `v2`), `v7` (type `v6`), `v8` (type `v6`).
           5. Move back to a communication position `#q3`.
           6. Send analysis of sampled rocks.
           
           To ensure all required images are sent, we'll assign `v14` to take images for `v17`, `v18`, `v19`, `v20`. `v12` will focus on rock sampling since it has many rocks above it at its current position `#o5` or can reach them easily. The initial state already shows both rovers have `free` stores.
           
           Let's prioritize:
           1. **Images:** `v14` can take images of `v17`, `v18`, `v19`, `v20`.
           2. **Rock analysis:** `v12` can sample multiple rocks from its current location or nearby. It can sample `v3` (type `v2`), `v4` (type `v2`), `v5` (type `v6`), `v7` (type `v6`), `v8` (type `v6`), `v1` (type `v2`).
           
           Let's use `v14` for all images and `v12` for all rock analysis.
           
           **Rover v14 Plan:**
           - Calibrate for `v17` at `#q1`, take image.
           - Move to `#q0`, calibrate for `v18`, take image.
           - Move to `#q5`, calibrate for `v19`, take image.
           - Move to `#q7`, calibrate for `v20`, take image.
           - Move to `#q2` (communication point).
           - Send images `v17`, `v18`, `v19`, `v20`.
           
           **Rover v12 Plan:**
           - Sample `v3` (rock type `v2`).
           - Sample `v4` (rock type `v2`).
           - Sample `v5` (rock type `v6`).
           - Sample `v7` (rock type `v6`).
           - Sample `v8` (rock type `v6`).
           - Sample `v1` (rock type `v2`).
           - Move to `#q3` (communication point).
           - Send analysis for `v3`, `v4`, `v5`, `v7`, `v8`, `v1`.
           
           This plan covers all goals. Note that sampling a rock also marks it as `analyzed`.
           
           --Plan--:
           (calibrate v14 #q1 #y1 v17 v10)
           (take_image v14 #q1 #y1 v17 v10 v11)
           (move v14 #q1 #o2 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #o2 #q5)
           (calibrate v14 #q5 #y4 v19 v10)
           (take_image v14 #q5 #y4 v19 v10 v11)
           (move v14 #q5 #o2 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t9 #q2)
           (send_image v14 #q2 #y2 v9 v17 v11)
           (send_image v14 #q2 #y2 v9 v18 v11)
           (send_image v14 #q2 #y2 v9 v19 v11)
           (send_image v14 #q2 #y2 v9 v20 v11)
           (sample_rock v12 #o5 v3 v16)
           (sample_rock v12 #o5 v4 v16)
           (sample_rock v12 #q6 v5 v16)
           (sample_rock v12 #o5 v7 v16)
           (sample_rock v12 #o5 v8 v16)
           (sample_rock v12 #q4 v1 v16)
           (move v12 v13 #o2 #q3)
           (send_analysis v12 #q3 #y3 v9 v3)
           (send_analysis v12 #q3 #y3 v9 v4)
           (send_analysis v12 #q3 #y3 v9 v5)
           (send_analysis v12 #q3 #y3 v9 v7)
           (send_analysis v12 #q3 #y3 v9 v8)
           (send_analysis v12 #q3 #y3 v9 v1)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. Let's re-evaluate `new-axiom@0()`. This axiom is a complex conjunction of many conditions, including `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)`, `receivedimage` for all four objectives (`v17`, `v18`, `v19`, `v20`) in mode `v11`, and `receivedanalysis` for rocks of type `v2` and `v6`.
           
           The initial state already provides:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `type(v3, v2)`, `type(v1, v2)`, `type(v4, v2)` (rocks of type v2)
           - `type(v5, v6)`, `type(v7, v6)`, `type(v8, v6)` (rocks of type v6)
           
           Therefore, the remaining parts of the goal are:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `receivedanalysis(v1)` (since `v1` is type `v2`)
           - `receivedanalysis(v3)` (since `v3` is type `v2`)
           - `receivedanalysis(v4)` (since `v4` is type `v2`)
           - `receivedanalysis(v5)` (since `v5` is type `v6`)
           - `receivedanalysis(v7)` (since `v7` is type `v6`)
           - `receivedanalysis(v8)` (since `v8` is type `v6`)
           
           My previous plan attempted to achieve all these. The issue might be a detail in the sequence or missing a rock analysis. Let's refine the strategy. I'll make sure each rover is moved to a communication point after completing their tasks, and ensure all specified rocks are analyzed and their analysis sent.
           
           **Rover v14 (Focus on Images):**
           1. Calibrate camera `v10` and take images of all four objectives `v17, v18, v19, v20`.
           2. Move to a configuration where it can communicate with `v9` (e.g., `#q2`).
           3. Send all four images to `v9`.
           
           **Rover v12 (Focus on Rock Analysis):**
           1. Sample all rocks of type `v2` and `v6`: `v1, v3, v4, v5, v7, v8`.
              - `v1` is above `v12` at `#q4`.
              - `v3` is above `v12` at `#o5`.
              - `v4` is above `v12` at `#o5`.
              - `v5` is above `v12` at `#q6`.
              - `v7` is above `v12` at `#o5`.
              - `v8` is above `v12` at `#o5`.
              It's more efficient to move the rover to cover these positions.
           2. Move to a configuration where it can communicate with `v9` (e.g., `#q3`).
           3. Send the analysis of all sampled rocks to `v9`.
           
           Let's carefully construct the plan, ensuring each rock that needs analysis is sampled and its analysis is sent, and each objective is imaged and its image sent.
           
           **Detailed Plan Steps:**
           
           **Rover v14 (Images and sending them):**
           - Calibrate and take images for `v17`, `v18`, `v19`, `v20`.
           - Move to `#q2` for communication.
           - Send all images.
           
           **Rover v12 (Sampling and sending analysis):**
           - Sample rocks `v3`, `v4`, `v7`, `v8` from `#o5`.
           - Move to `#q4` to sample `v1`.
           - Move to `#q6` to sample `v5`.
           - Move to `#q3` for communication.
           - Send analysis for `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
           
           All actions used in the plan below are available in the provided list of valid action instances.
           
           --Plan--:
           (calibrate v14 #q1 #y1 v17 v10)
           (take_image v14 #q1 #y1 v17 v10 v11)
           (move v14 #q1 #o2 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #o2 #q5)
           (calibrate v14 #q5 #y4 v19 v10)
           (take_image v14 #q5 #y4 v19 v10 v11)
           (move v14 #q5 #o2 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t9 #q2)
           (send_image v14 #q2 #y2 v9 v17 v11)
           (send_image v14 #q2 #y2 v9 v18 v11)
           (send_image v14 #q2 #y2 v9 v19 v11)
           (send_image v14 #q2 #y2 v9 v20 v11)
           (sample_rock v12 #o5 v3 v16)
           (sample_rock v12 #o5 v4 v16)
           (sample_rock v12 #o5 v7 v16)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q4)
           (sample_rock v12 #q4 v1 v16)
           (move v12 #q4 #o2 #q6)
           (sample_rock v12 #q6 v5 v16)
           (move v12 #q6 #t17 #q3)
           (send_analysis v12 #q3 #y3 v9 v3)
           (send_analysis v12 #q3 #y3 v9 v4)
           (send_analysis v12 #q3 #y3 v9 v7)
           (send_analysis v12 #q3 #y3 v9 v8)
           (send_analysis v12 #q3 #y3 v9 v1)
           (send_analysis v12 #q3 #y3 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan again failed to satisfy `new-axiom@0()`. Let's break down the `new-axiom@0()` goal precisely and check all its components against the plan.
           
           The goal `new-axiom@0()` requires:
           1. `atconf(v12, v13)`: Rover `v12` must be at configuration `v13`. (Initial state: `atconf(v12, v13)`). The plan must ensure `v12` ends up at `v13` or the specific configuration it started at. In my previous plan, `v12` moves to `#q3` at the end. This is a potential issue.
           2. `atconf(v14, v15)`: Rover `v14` must be at configuration `v15`. (Initial state: `atconf(v14, v15)`). The plan must ensure `v14` ends up at `v15` or the specific configuration it started at. In my previous plan, `v14` moves to `#q2` at the end. This is a potential issue.
           3. `free(v12, v16)`: Rover `v12` must have its store `v16` free. (Initial state: `free(v12, v16)`). My plan used `sample_rock` which makes the store `full`. It never used `drop_rock` to make it `free` again. This is a major issue.
           4. `free(v14, v16)`: Rover `v14` must have its store `v16` free. (Initial state: `free(v14, v16)`). Rover `v14` was not used for `sample_rock`, so its store should remain `free`. This is likely satisfied.
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
               The plan successfully took images with `v14` and sent them from `#q2`. This part should be fine.
           9. `type(?stone, v2)` and `receivedanalysis(?stone)`: This means all rocks of type `v2` must have their analysis received. Rocks of type `v2` are `v1`, `v3`, `v4`.
           10. `type(?soil, v6)` and `receivedanalysis(?soil)`: This means all rocks of type `v6` must have their analysis received. Rocks of type `v6` are `v5`, `v7`, `v8`.
               The plan sampled `v1`, `v3`, `v4`, `v5`, `v7`, `v8` with `v12` and sent their analysis from `#q3`. This part should be fine, assuming `analyzed` means `receivedanalysis` and is not undone.
           
           The key issues from the previous plan are likely:
           - **`free` store condition for `v12`**: After sampling rocks, `v12`'s store `v16` becomes `full`. To satisfy `free(v12, v16)` in the goal, `v12` must execute `drop_rock`.
           - **Final configuration of rovers**: The goal requires `atconf(v12, v13)` and `atconf(v14, v15)`. My previous plan ended with `v12` at `#q3` and `v14` at `#q2`. The rovers must return to their initial configurations `v13` and `v15` respectively.
           
           Let's revise the plan with these corrections.
           
           **Revised Strategy:**
           
           **Rover v14 (Images, Send Images, Return to initial config):**
           1. Calibrate camera `v10` and take images of all four objectives `v17, v18, v19, v20`.
           2. Move to a communication position (e.g., `#q2`).
           3. Send all four images to `v9`.
           4. Move back to its initial configuration `v15`.
           
           **Rover v12 (Sample Rocks, Send Analysis, Drop Rocks, Return to initial config):**
           1. Sample all rocks of type `v2` and `v6`: `v3, v4, v7, v8` from `#o5`, then `v1` from `#q4`, then `v5` from `#q6`.
           2. Move to a communication position (e.g., `#q3`).
           3. Send the analysis of all sampled rocks to `v9`.
           4. Drop the sampled rocks from `v16` to make the store `free` again.
           5. Move back to its initial configuration `v13`.
           
           Let's ensure the `move` actions are valid.
           - `v14` starts at `v15`.
           - `v12` starts at `v13`.
           
           **Rover v14 Moves:**
           - `v14` is initially at `v15`.
           - Moves to `#q1` for `v17` (using `motion(v14, v15, #t4, #q1)`).
           - Moves to `#q0` for `v18` (using `motion(v14, #q1, #o2, #q0)`).
           - Moves to `#q5` for `v19` (using `motion(v14, #q0, #o2, #q5)`).
           - Moves to `#q7` for `v20` (using `motion(v14, #q5, #o2, #q7)`).
           - Moves to `#q2` for communication (using `motion(v14, #q7, #t9, #q2)`).
           - Moves back to `v15` (using `motion(v14, #q2, #t0, v15)`).
           
           **Rover v12 Moves:**
           - `v12` is initially at `v13`.
           - Samples at `#o5`. `v12` is not at `#o5` initially. It needs to move there: `motion(v12, v13, #o2, #o5)`.
           - Samples `v1` at `#q4`. Needs to move from `#o5` to `#q4`: `motion(v12, #o5, #o2, #q4)`.
           - Samples `v5` at `#q6`. Needs to move from `#q4` to `#q6`: `motion(v12, #q4, #o2, #q6)`.
           - Moves to `#q3` for communication. Needs to move from `#q6` to `#q3`: `motion(v12, #q6, #t17, #q3)`.
           - Moves back to `v13` (using `motion(v12, #q3, #t10, v13)`).
           
           This detailed check of movement and final state conditions should ensure `new-axiom@0()` is satisfied.
           
           --Plan--:
           (calibrate v14 #q1 #y1 v17 v10)
           (take_image v14 #q1 #y1 v17 v10 v11)
           (move v14 #q1 #o2 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #o2 #q5)
           (calibrate v14 #q5 #y4 v19 v10)
           (take_image v14 #q5 #y4 v19 v10 v11)
           (move v14 #q5 #o2 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t9 #q2)
           (send_image v14 #q2 #y2 v9 v17 v11)
           (send_image v14 #q2 #y2 v9 v18 v11)
           (send_image v14 #q2 #y2 v9 v19 v11)
           (send_image v14 #q2 #y2 v9 v20 v11)
           (move v14 #q2 #t0 v15)
           (move v12 v13 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (sample_rock v12 #o5 v4 v16)
           (sample_rock v12 #o5 v7 v16)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q4)
           (sample_rock v12 #q4 v1 v16)
           (move v12 #q4 #o2 #q6)
           (sample_rock v12 #q6 v5 v16)
           (move v12 #q6 #t17 #q3)
           (send_analysis v12 #q3 #y3 v9 v3)
           (send_analysis v12 #q3 #y3 v9 v4)
           (send_analysis v12 #q3 #y3 v9 v7)
           (send_analysis v12 #q3 #y3 v9 v8)
           (send_analysis v12 #q3 #y3 v9 v1)
           (send_analysis v12 #q3 #y3 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q3 #t10 v13)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v14, #q1) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the precondition `atconf(v14, #q1)` was not satisfied for the `calibrate` action. This means `v14` was not at position `#q1` when it tried to calibrate. The initial state shows `atconf(v14, v15)`. Therefore, `v14` must first `move` from `v15` to `#q1`.
           
           Let's carefully re-verify all movement preconditions.
           
           **Initial State:**
           - `atconf(v14, v15)`
           - `atconf(v12, v13)`
           
           **Rover v14 (Images, Send Images, Return to initial config):**
           1. **Move to #q1:** `motion(v14, v15, #t4, #q1)`.
           2. **Calibrate and take image for v17:** `calibrate v14 #q1 #y1 v17 v10`, `take_image v14 #q1 #y1 v17 v10 v11`.
           3. **Move to #q0:** `motion(v14, #q1, #o2, #q0)`.
           4. **Calibrate and take image for v18:** `calibrate v14 #q0 #y0 v18 v10`, `take_image v14 #q0 #y0 v18 v10 v11`.
           5. **Move to #q5:** `motion(v14, #q0, #o2, #q5)`.
           6. **Calibrate and take image for v19:** `calibrate v14 #q5 #y4 v19 v10`, `take_image v14 #q5 #y4 v19 v10 v11`.
           7. **Move to #q7:** `motion(v14, #q5, #o2, #q7)`.
           8. **Calibrate and take image for v20:** `calibrate v14 #q7 #y5 v20 v10`, `take_image v14 #q7 #y5 v20 v10 v11`.
           9. **Move to #q2 (communication point):** `motion(v14, #q7, #t9, #q2)`.
           10. **Send images:** `send_image` actions.
           11. **Move back to v15:** `motion(v14, #q2, #t0, v15)`.
           
           **Rover v12 (Sample Rocks, Send Analysis, Drop Rocks, Return to initial config):**
           1. **Move to #o5:** `motion(v12, v13, #o2, #o5)`.
           2. **Sample rocks at #o5:** `sample_rock v12 #o5 v3 v16`, `sample_rock v12 #o5 v4 v16`, `sample_rock v12 #o5 v7 v16`, `sample_rock v12 #o5 v8 v16`.
           3. **Move to #q4:** `motion(v12, #o5, #o2, #q4)`.
           4. **Sample rock at #q4:** `sample_rock v12 #q4 v1 v16`.
           5. **Move to #q6:** `motion(v12, #q4, #o2, #q6)`.
           6. **Sample rock at #q6:** `sample_rock v12 #q6 v5 v16`.
           7. **Move to #q3 (communication point):** `motion(v12, #q6, #t17, #q3)`.
           8. **Send analysis:** `send_analysis` actions.
           9. **Drop rock:** `drop_rock v12 v16`.
           10. **Move back to v13:** `motion(v12, #q3, #t10, v13)`.
           
           This revised plan explicitly includes the initial moves for both rovers to their first task locations.
           
           --Plan--:
           (move v14 v15 #t4 #q1)
           (calibrate v14 #q1 #y1 v17 v10)
           (take_image v14 #q1 #y1 v17 v10 v11)
           (move v14 #q1 #o2 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #o2 #q5)
           (calibrate v14 #q5 #y4 v19 v10)
           (take_image v14 #q5 #y4 v19 v10 v11)
           (move v14 #q5 #o2 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t9 #q2)
           (send_image v14 #q2 #y2 v9 v17 v11)
           (send_image v14 #q2 #y2 v9 v18 v11)
           (send_image v14 #q2 #y2 v9 v19 v11)
           (send_image v14 #q2 #y2 v9 v20 v11)
           (move v14 #q2 #t0 v15)
           (move v12 v13 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (sample_rock v12 #o5 v4 v16)
           (sample_rock v12 #o5 v7 v16)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q4)
           (sample_rock v12 #q4 v1 v16)
           (move v12 #q4 #o2 #q6)
           (sample_rock v12 #q6 v5 v16)
           (move v12 #q6 #t17 #q3)
           (send_analysis v12 #q3 #y3 v9 v3)
           (send_analysis v12 #q3 #y3 v9 v4)
           (send_analysis v12 #q3 #y3 v9 v7)
           (send_analysis v12 #q3 #y3 v9 v8)
           (send_analysis v12 #q3 #y3 v9 v1)
           (send_analysis v12 #q3 #y3 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q3 #t10 v13)

