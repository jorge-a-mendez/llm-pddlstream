User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v19)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom objective(v17)
           Atom conf(v14, v15)
           Atom rock(v3)
           Atom rock(v7)
           Atom atconf(v12, v13)
           Atom camera(v10)
           Atom onboard(v10, v12)
           Atom rock(v4)
           Atom type(v5, v6)
           Atom type(v7, v6)
           Atom type(v8, v6)
           Atom store(v16)
           Atom rock(v1)
           Atom rock(v8)
           Atom supports(v10, v11)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom atconf(v14, v15)
           Atom type(v1, v2)
           Atom type(v4, v2)
           Atom rock(v5)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom objective(v18)
           Atom objective(v20)
           Atom rover(v12)
           Atom imagevisible(v14, #q1, #y1, v17)
           Atom imagerange(v14, #q1, v17)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom imagevisible(v14, #q7, #y5, v20)
           Atom imagerange(v14, #q7, v20)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q11, #y9, v18)
           Atom imagerange(v12, #q11, v18)
           Atom conf(v12, #q11)
           Atom ray(#y9)
           Atom imagevisible(v12, #q9, #y7, v17)
           Atom imagerange(v12, #q9, v17)
           Atom conf(v12, #q9)
           Atom ray(#y7)
           Atom imagevisible(v12, #q10, #y8, v20)
           Atom imagerange(v12, #q10, v20)
           Atom conf(v12, #q10)
           Atom ray(#y8)
           Atom above(v12, #q12, v4)
           Atom conf(v12, #q12)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom comvisible(v12, #q3, #y3, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y3)
           Atom comvisible(v14, #q2, #y2, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom above(v12, #q6, v5)
           Atom conf(v12, #q6)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v12, #q8, #y6, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom imagevisible(v14, #q5, #y4, v19)
           Atom imagerange(v14, #q5, v19)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v7)
           Atom above(v12, #q13, v7)
           Atom conf(v12, #q13)
           Atom above(v12, #q15, v8)
           Atom conf(v12, #q15)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q14, v3)
           Atom conf(v12, #q14)
           Atom above(v14, #o5, v1)
           Atom above(v12, #q4, v1)
           Atom conf(v12, #q4)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, v15, #t4, #q1)
           Atom motion(v12, v13, #t21, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q3, #t10, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q8, #t19, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v14, #q1, #t7, #q2)
           Atom motion(v14, #q2, #t0, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t12, #q1)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, v13, #t26, #q12)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, v13, #t23, #q10)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q3, #t18, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q6, #t17, #q3)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, v13, #t16, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #t22, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #t20, #q3)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #t8, #q2)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q2, #t13, #q5)
           Atom motion(v14, v15, #t5, #q5)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v14, #q2, #t11, #q0)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #t6, #q2)
           Atom motion(v14, #q0, #t31, #q5)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t3, #q0)
           Atom motion(v14, #q1, #t25, #q0)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q9, #o2, #q15)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, v13, #t15, #q4)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #t24, #q6)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, #q4, #t1, #q3)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q12, #t28, #q4)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q13, #t29, #q4)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q3, #t2, #q4)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q7, #t9, #q2)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q2, #t14, #q7)
           Atom motion(v14, #q5, #t27, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q14, #t30, #q4)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q12 v4 v16))
           ((sample_rock v12 #q13 v7 v16))
           ((sample_rock v12 #q14 v3 v16))
           ((sample_rock v12 #q15 v8 v16))
           ((sample_rock v12 #q4 v1 v16))
           ((sample_rock v12 #q6 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q15))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t28 #q4))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t29 #q4))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t30 #q4))
           ((move v12 #q15 #o2 #q10))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 #q9))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #t10 v13))
           ((move v12 #q3 #t18 #q6))
           ((move v12 #q3 #t2 #q4))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t1 #q3))
           ((move v12 #q4 #t24 #q6))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t17 #q3))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q3))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q15))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t20 #q3))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q4))
           ((move v12 v13 #t16 #q6))
           ((move v12 v13 #t21 #q8))
           ((move v12 v13 #t22 #q9))
           ((move v12 v13 #t23 #q10))
           ((move v12 v13 #t26 #q12))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t31 #q5))
           ((move v14 #q0 #t6 #q2))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t25 #q0))
           ((move v14 #q1 #t7 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #t0 v15))
           ((move v14 #q2 #t11 #q0))
           ((move v14 #q2 #t12 #q1))
           ((move v14 #q2 #t13 #q5))
           ((move v14 #q2 #t14 #q7))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t27 #q7))
           ((move v14 #q5 #t8 #q2))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t9 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t3 #q0))
           ((move v14 v15 #t4 #q1))
           ((move v14 v15 #t5 #q5))
           ((calibrate v12 #q10 #y8 v20 v10))
           ((calibrate v12 #q11 #y9 v18 v10))
           ((calibrate v12 #q8 #y6 v19 v10))
           ((calibrate v12 #q9 #y7 v17 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q1 #y1 v17 v10))
           ((calibrate v14 #q5 #y4 v19 v10))
           ((calibrate v14 #q7 #y5 v20 v10))
           ((take_image v12 #q10 #y8 v20 v10 v11))
           ((take_image v12 #q11 #y9 v18 v10 v11))
           ((take_image v12 #q8 #y6 v19 v10 v11))
           ((take_image v12 #q9 #y7 v17 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q1 #y1 v17 v10 v11))
           ((take_image v14 #q5 #y4 v19 v10 v11))
           ((take_image v14 #q7 #y5 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y3 v9 v4))
           ((send_analysis v12 #q3 #y3 v9 v7))
           ((send_analysis v12 #q3 #y3 v9 v3))
           ((send_analysis v12 #q3 #y3 v9 v8))
           ((send_analysis v12 #q3 #y3 v9 v1))
           ((send_analysis v12 #q3 #y3 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y2 v9 v1))
           ((send_analysis v14 #q2 #y2 v9 v3))
           ((send_analysis v14 #q2 #y2 v9 v4))
           ((send_analysis v14 #q2 #y2 v9 v5))
           ((send_analysis v14 #q2 #y2 v9 v7))
           ((send_analysis v14 #q2 #y2 v9 v8))
           ((send_image v12 #q3 #y3 v9 v20 v11))
           ((send_image v12 #q3 #y3 v9 v18 v11))
           ((send_image v12 #q3 #y3 v9 v19 v11))
           ((send_image v12 #q3 #y3 v9 v17 v11))
           ((send_image v14 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q2 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y2 v9 v19 v11))
           ((send_image v14 #q2 #y2 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, each with a camera `v10` and a storage unit `v16`. There are several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) of two types (`v2` and `v6`). There's also a lander `v9` for communication and several objectives (`v17`, `v18`, `v19`, `v20`).
           
           The goal is `new-axiom@0()`, which requires:
           1. `atconf(v12, v13)`
           2. `atconf(v14, v15)`
           3. `free(v12, v16)`
           4. `free(v14, v16)`
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `type(?stone, v2)` and `receivedanalysis(?stone)` (meaning any rock of type `v2` needs to be analyzed and sent)
           10. `type(?soil, v6)` and `receivedanalysis(?soil)` (meaning any rock of type `v6` needs to be analyzed and sent)
           
           Let's break down how to achieve each part of the goal:
           - `atconf(v12, v13)` and `atconf(v14, v15)` are already true in the initial state.
           - `free(v12, v16)` and `free(v14, v16)` are already true in the initial state.
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: This means images of all four objectives need to be taken and sent to the lander. Both rovers have the capability to take images of these objectives and send them.
           - `receivedanalysis(?stone)` for `type(?stone, v2)`: Rocks `v1`, `v3`, `v4` are of type `v2`. At least one of these needs to be sampled, analyzed, and the analysis sent.
           - `receivedanalysis(?soil)` for `type(?soil, v6)`: Rocks `v5`, `v7`, `v8` are of type `v6`. At least one of these needs to be sampled, analyzed, and the analysis sent.
           
           The plan will involve:
           1. Calibrating the camera for each objective for both rovers and taking the images.
           2. Sending all the images to the lander.
           3. Sampling at least one rock of type `v2` and one rock of type `v6`.
           4. Sending the analysis of these sampled rocks to the lander.
           
           Let's use rover `v14` for image tasks and `v12` for sampling tasks to distribute the work.
           
           For image tasks with `v14`:
           - Calibrate `v10` for `v17` at `#q1` and take image.
           - Calibrate `v10` for `v20` at `#q7` and take image.
           - Calibrate `v10` for `v18` at `#q0` and take image.
           - Calibrate `v10` for `v19` at `#q5` and take image.
           - Move to `#q2` to communicate with `v9` and send all images.
           
           For image tasks with `v12`:
           - Calibrate `v10` for `v18` at `#q11` and take image.
           - Calibrate `v10` for `v17` at `#q9` and take image.
           - Calibrate `v10` for `v20` at `#q10` and take image.
           - Calibrate `v10` for `v19` at `#q8` and take image.
           - Move to `#q3` to communicate with `v9` and send all images.
           
           For sampling tasks with `v12`:
           - Move to `#q14` to sample `v3` (type `v2`).
           - Move to `#q6` to sample `v5` (type `v6`).
           - Move to `#q3` to communicate with `v9` and send the analysis.
           
           It is important to ensure both rovers' `atconf` positions allow for the required actions and movements.
           Rover `v12` is at `v13`. Rover `v14` is at `v15`.
           
           Let's prioritize the images for all objectives and then the rock analysis.
           
           **Rover v14 (Images):**
           - Calibrate and take image for v17: `v14` is at `v15`. It needs to move to `#q1`.
           - Calibrate and take image for v20: `v14` needs to move to `#q7`.
           - Calibrate and take image for v18: `v14` needs to move to `#q0`.
           - Calibrate and take image for v19: `v14` needs to move to `#q5`.
           - Send all images: `v14` needs to move to `#q2`.
           
           **Rover v12 (Images and Rock Analysis):**
           - Calibrate and take image for v18: `v12` is at `v13`. It needs to move to `#q11`.
           - Calibrate and take image for v17: `v12` needs to move to `#q9`.
           - Calibrate and take image for v20: `v12` needs to move to `#q10`.
           - Calibrate and take image for v19: `v12` needs to move to `#q8`.
           - Sample rock v3 (type v2): `v12` needs to move to `#q14`.
           - Sample rock v5 (type v6): `v12` needs to move to `#q6`.
           - Send images and analysis: `v12` needs to move to `#q3`.
           
           The plan below will ensure all objectives are imaged and their images sent, and both rock types are analyzed and their analysis sent. The order of actions for each rover is chosen to minimize unnecessary movement.
           
           --Plan--:
           (move v14 v15 #t4 #q1)
           (calibrate v14 #q1 #y1 v17 v10)
           (take_image v14 #q1 #y1 v17 v10 v11)
           (move v14 #q1 #t25 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t31 #q5)
           (calibrate v14 #q5 #y4 v19 v10)
           (take_image v14 #q5 #y4 v19 v10 v11)
           (move v14 #q5 #t27 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t9 #q2)
           (send_image v14 #q2 #y2 v9 v17 v11)
           (send_image v14 #q2 #y2 v9 v18 v11)
           (send_image v14 #q2 #y2 v9 v19 v11)
           (send_image v14 #q2 #y2 v9 v20 v11)
           (move v12 v13 #t22 #q9)
           (calibrate v12 #q9 #y7 v17 v10)
           (take_image v12 #q9 #y7 v17 v10 v11)
           (move v12 #q9 #o2 #q10)
           (calibrate v12 #q10 #y8 v20 v10)
           (take_image v12 #q10 #y8 v20 v10 v11)
           (move v12 #q10 #o2 #q11)
           (calibrate v12 #q11 #y9 v18 v10)
           (take_image v12 #q11 #y9 v18 v10 v11)
           (move v12 #q11 #o2 #q8)
           (calibrate v12 #q8 #y6 v19 v10)
           (take_image v12 #q8 #y6 v19 v10 v11)
           (move v12 #q8 #o2 #q14)
           (sample_rock v12 #q14 v3 v16)
           (move v12 #q14 #o2 #q6)
           (sample_rock v12 #q6 v5 v16)
           (move v12 #q6 #t17 #q3)
           (send_analysis v12 #q3 #y3 v9 v3)
           (send_analysis v12 #q3 #y3 v9 v5)
           (send_image v12 #q3 #y3 v9 v17 v11)
           (send_image v12 #q3 #y3 v9 v20 v11)
           (send_image v12 #q3 #y3 v9 v18 v11)
           (send_image v12 #q3 #y3 v9 v19 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. Let's re-evaluate the components of `new-axiom@0()` and make sure all conditions are met.
           
           The goal `new-axiom@0()` requires:
           1. `atconf(v12, v13)` (Already true)
           2. `atconf(v14, v15)` (Already true)
           3. `free(v12, v16)` (Already true)
           4. `free(v14, v16)` (Already true)
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `type(?stone, v2)` and `receivedanalysis(?stone)` (meaning any rock of type `v2` needs to be analyzed and sent)
           10. `type(?soil, v6)` and `receivedanalysis(?soil)` (meaning any rock of type `v6` needs to be analyzed and sent)
           
           The issue might have been that even though both rovers were taking and sending images, I might have duplicated efforts, or the final check wasn't comprehensive enough. Also, the `free(v12, v16)` and `free(v14, v16)` conditions are initially true, but they become `full` after `sample_rock`. The axiom doesn't require the stores to be free *at the end*, just that they were free when the action of sampling took place. This is a common misconception in some PDDL interpretations, but given the error, I need to ensure that the final state explicitly satisfies the goal conditions as interpreted by the system. If `new-axiom@0()` implies the stores must be free at the end, then `drop_rock` actions would be necessary. However, the axiom only states `free(v12, v16)` and `free(v14, v16)` as part of its conjunction with other conditions, without specifying if they need to be true in the final state or if they refer to the initial state for being free. Let's assume it implies they must be free in the final state for now, and if not, the error would clarify. For the time being, I will add `drop_rock` to ensure they are free at the end of the plan if they are used for sampling.
           
           Let's carefully plan out the actions again.
           
           **Rover v14 will handle all image collection and sending.**
           - Calibrate and take images for all objectives `v17`, `v18`, `v19`, `v20`.
           - Move to a communication point and send all collected images to `v9`.
           
           **Rover v12 will handle all rock analysis and sending.**
           - Move to a rock of type `v2` (e.g., `v3`), sample it.
           - Move to a rock of type `v6` (e.g., `v5`), sample it.
           - Move to a communication point and send both analyses to `v9`.
           - If necessary to satisfy `free` condition at the end, drop the sampled rocks.
           
           Let's refine the movement for each rover to be efficient.
           
           **Rover v14 (Images and Sending):**
           Initial `atconf(v14, v15)`
           1. `move v14 v15 #t4 #q1` (to `q1` for `v17`)
           2. `calibrate v14 #q1 #y1 v17 v10`
           3. `take_image v14 #q1 #y1 v17 v10 v11`
           4. `move v14 #q1 #t25 #q0` (to `q0` for `v18`)
           5. `calibrate v14 #q0 #y0 v18 v10`
           6. `take_image v14 #q0 #y0 v18 v10 v11`
           7. `move v14 #q0 #t31 #q5` (to `q5` for `v19`)
           8. `calibrate v14 #q5 #y4 v19 v10`
           9. `take_image v14 #q5 #y4 v19 v10 v11`
           10. `move v14 #q5 #t27 #q7` (to `q7` for `v20`)
           11. `calibrate v14 #q7 #y5 v20 v10`
           12. `take_image v14 #q7 #y5 v20 v10 v11`
           13. `move v14 #q7 #t9 #q2` (to `q2` for communication)
           14. `send_image v14 #q2 #y2 v9 v17 v11`
           15. `send_image v14 #q2 #y2 v9 v18 v11`
           16. `send_image v14 #q2 #y2 v9 v19 v11`
           17. `send_image v14 #q2 #y2 v9 v20 v11`
           
           **Rover v12 (Rock Analysis and Sending):**
           Initial `atconf(v12, v13)`
           1. `move v12 v13 #o2 #q14` (to `q14` for rock `v3` - type `v2`)
           2. `sample_rock v12 #q14 v3 v16`
           3. `move v12 #q14 #o2 #q6` (to `q6` for rock `v5` - type `v6`)
           4. `sample_rock v12 #q6 v5 v16`
           5. `drop_rock v12 v16` (to ensure `free(v12, v16)` at the end)
           6. `move v12 #q6 #t17 #q3` (to `q3` for communication)
           7. `send_analysis v12 #q3 #y3 v9 v3`
           8. `send_analysis v12 #q3 #y3 v9 v5`
           
           Let's ensure the `new-axiom@0()` conditions are met:
           - `atconf(v12, v13)`: No final move for `v12` to `v13` is needed as the axiom does not require this configuration for `v12` at the end, only that it *can* be at `v13`. The initial state satisfies this. The rover `v12` will end up at `#q3`.
           - `atconf(v14, v15)`: Same as above. The rover `v14` will end up at `#q2`.
           - `free(v12, v16)`: Achieved by `drop_rock v12 v16`.
           - `free(v14, v16)`: `v14` never samples, so its store remains free. This is satisfied.
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: All handled by `v14` (and it could be by `v12` as well, but `v14` does it all).
           - `type(?stone, v2)` and `receivedanalysis(?stone)`: `v3` is type `v2`, and `send_analysis v12 #q3 #y3 v9 v3` handles this.
           - `type(?soil, v6)` and `receivedanalysis(?soil)`: `v5` is type `v6`, and `send_analysis v12 #q3 #y3 v9 v5` handles this.
           
           The `new-axiom@0()` explicitly lists `atconf(v12, v13)` and `atconf(v14, v15)` as *positive* conditions. This means the rovers need to be in these specific configurations in the final state. My previous plans did not return the rovers to these initial configurations. This is a critical detail.
           
           Let's adjust the plan to return rovers to `v13` and `v15` respectively.
           
           **Rover v14 (Images and Sending, then return to v15):**
           1. ... (all image and send actions as above) ...
           17. `send_image v14 #q2 #y2 v9 v20 v11`
           18. `move v14 #q2 #t0 v15` (return to `v15`)
           
           **Rover v12 (Rock Analysis and Sending, then return to v13):**
           1. ... (all sampling and send analysis actions as above) ...
           8. `send_analysis v12 #q3 #y3 v9 v5`
           9. `move v12 #q3 #t10 v13` (return to `v13`)
           
           This revised plan should meet all conditions.
           
           --Plan--:
           (move v14 v15 #t4 #q1)
           (calibrate v14 #q1 #y1 v17 v10)
           (take_image v14 #q1 #y1 v17 v10 v11)
           (move v14 #q1 #t25 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t31 #q5)
           (calibrate v14 #q5 #y4 v19 v10)
           (take_image v14 #q5 #y4 v19 v10 v11)
           (move v14 #q5 #t27 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t9 #q2)
           (send_image v14 #q2 #y2 v9 v17 v11)
           (send_image v14 #q2 #y2 v9 v18 v11)
           (send_image v14 #q2 #y2 v9 v19 v11)
           (send_image v14 #q2 #y2 v9 v20 v11)
           (move v14 #q2 #t0 v15)
           (move v12 v13 #o2 #q14)
           (sample_rock v12 #q14 v3 v16)
           (move v12 #q14 #o2 #q6)
           (sample_rock v12 #q6 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q6 #t17 #q3)
           (send_analysis v12 #q3 #y3 v9 v3)
           (send_analysis v12 #q3 #y3 v9 v5)
           (move v12 #q3 #t10 v13)

