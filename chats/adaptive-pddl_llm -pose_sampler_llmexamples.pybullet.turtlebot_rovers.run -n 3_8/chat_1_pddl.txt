User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom rover(v12)
           Atom conf(v12, v13)
           Atom mode(v11)
           Atom type(v5, v6)
           Atom rock(v4)
           Atom onboard(v10, v12)
           Atom objective(v17)
           Atom rock(v8)
           Atom rock(v7)
           Atom camera(v10)
           Atom onboard(v10, v14)
           Atom type(v4, v2)
           Atom store(v16)
           Atom objective(v19)
           Atom objective(v18)
           Atom supports(v10, v11)
           Atom free(v12, v16)
           Atom atconf(v14, v15)
           Atom rover(v14)
           Atom rock(v5)
           Atom atconf(v12, v13)
           Atom rock(v3)
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom type(v1, v2)
           Atom lander(v9)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v7)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom above(v12, #o5, v1)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom motion(v12, #o0, #o2, #o0)
           Atom motion(v12, v13, #o2, #o0)
           Atom motion(v12, #o0, #o2, v13)
           Atom motion(v12, #o3, #o2, #o0)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o0, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v14, v15, #o2, #o0)
           Atom motion(v14, #o0, #o2, v15)
           Atom motion(v14, #o0, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o0)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v12, #o0, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o0)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v14, #o5, #o2, #o0)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o0 #o2 #o0))
           ((move v12 #o0 #o2 #o3))
           ((move v12 #o0 #o2 #o5))
           ((move v12 #o0 #o2 v13))
           ((move v12 #o3 #o2 #o0))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o0))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 v13))
           ((move v12 v13 #o2 #o0))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 v13))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #o0 #o1 v9 v1))
           ((send_analysis v12 #o0 #o1 v9 v3))
           ((send_analysis v12 #o0 #o1 v9 v4))
           ((send_analysis v12 #o0 #o1 v9 v5))
           ((send_analysis v12 #o0 #o1 v9 v7))
           ((send_analysis v12 #o0 #o1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #o0 #o1 v9 v17 v11))
           ((send_image v12 #o0 #o1 v9 v18 v11))
           ((send_image v12 #o0 #o1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, v12 and v14, each equipped with a camera v10 that supports mode v11. Both rovers are at distinct initial configurations (v13 and v15 respectively) and have a storage v16 which is currently free. There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19). A lander v9 is present for communication. Both rovers can move between various configurations and can observe and communicate with the lander from configuration #o0. They can also image objectives v17, v18, v19 from configuration #o3. Both rovers are above all rocks at configuration #o5.
           
           The goal `new-axiom@0()` is a complex axiom that requires several conditions to be met. Let's break it down:
           
           1.  `atconf(v12, v13)` and `atconf(v14, v15)`: These are already true in the initial state.
           2.  `free(v12, v16)` and `free(v14, v16)`: These are also already true in the initial state.
           3.  `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`: This means images of all three objectives (v17, v18, v19) must be taken and sent using mode v11.
           4.  `type(?stone, v2)` and `receivedanalysis(?stone)`: At least one rock of type v2 must be sampled and its analysis sent. Rocks v1, v3, v4 are of type v2.
           5.  `type(?soil, v6)` and `receivedanalysis(?soil)`: At least one rock of type v6 must be sampled and its analysis sent. Rocks v5, v7, v8 are of type v6.
           
           To achieve the goal, we need to:
           *   Calibrate a camera (either on v12 or v14).
           *   Take images of v17, v18, and v19.
           *   Send those images.
           *   Sample a rock of type v2 (e.g., v1).
           *   Send the analysis of that rock.
           *   Sample a rock of type v6 (e.g., v5).
           *   Send the analysis of that rock.
           
           We can use one rover to perform the imaging and another for sampling, or one rover can do both. Since both rovers can access all necessary locations for imaging and sampling, we can try to use one rover to accomplish as much as possible to simplify the plan. Let's use rover v14 for all tasks.
           
           Steps:
           1.  **Calibrate the camera for imaging:** Rover v14 needs to be at #o3 to calibrate with respect to an objective. Let's use v17.
           2.  **Take images of all objectives:** After calibration, rover v14 can take images of v17, v18, and v19 from #o3. Note that calibration is consumed after each image, so it needs to be recalibrated for each image.
           3.  **Move to a communication point:** Rover v14 needs to be at #o0 to send the images to the lander v9.
           4.  **Send all images:** Send the three images to the lander.
           5.  **Move for sampling:** Rover v14 needs to be at #o5 to sample rocks.
           6.  **Sample rocks:** Sample a rock of type v2 (v1) and a rock of type v6 (v5). Note that each sample will fill the store. Since only one store is available per rover, we need to drop the rock after sampling to free the store for the next sample.
           7.  **Move to a communication point:** Rover v14 needs to be at #o0 to send the analysis to the lander v9.
           8.  **Send analysis:** Send the analysis for both sampled rocks.
           
           Let's refine the sampling part. If a rover samples and the store becomes full, it cannot sample another rock until it drops the current one. So, it will sample one, then move to #o0 to send the analysis, then move back to #o5 to drop the sample and sample another rock.
           
           However, the problem statement provides an axiom that states `atconf(v12, v13)` and `atconf(v14, v15)` are true for the new-axiom@0() to be true, and also `free(v12, v16)` and `free(v14, v16)`. This means that at the *end* of the plan, both rovers must be at their initial configurations, and their stores must be free. This means any sampled rocks must be dropped.
           
           Revised plan:
           1.  Rover v14 moves to #o3 for imaging.
           2.  Calibrate v14's camera for v17.
           3.  Take image of v17.
           4.  Calibrate v14's camera for v18.
           5.  Take image of v18.
           6.  Calibrate v14's camera for v19.
           7.  Take image of v19.
           8.  Rover v14 moves to #o0 for communication.
           9.  Send images of v17, v18, v19.
           10. Rover v14 moves to #o5 for sampling.
           11. Sample rock v1 (type v2). Store v16 becomes full.
           12. Rover v14 moves to #o0 for communication.
           13. Send analysis for rock v1.
           14. Rover v14 moves to #o5 to drop the sample.
           15. Drop rock from v14's store v16. Store v16 becomes free.
           16. Sample rock v5 (type v6). Store v16 becomes full.
           17. Rover v14 moves to #o0 for communication.
           18. Send analysis for rock v5.
           19. Rover v14 moves to #o5 to drop the sample.
           20. Drop rock from v14's store v16. Store v16 becomes free.
           21. Rover v14 moves back to its initial configuration v15.
           
           --Plan--:
           (move v14 v15 #o2 #o3)
           (calibrate v14 #o3 #o4 v17 v10)
           (take_image v14 #o3 #o4 v17 v10 v11)
           (calibrate v14 #o3 #o4 v18 v10)
           (take_image v14 #o3 #o4 v18 v10 v11)
           (calibrate v14 #o3 #o4 v19 v10)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (move v14 #o3 #o2 #o0)
           (send_image v14 #o0 #o1 v9 v17 v11)
           (send_image v14 #o0 #o1 v9 v18 v11)
           (send_image v14 #o0 #o1 v9 v19 v11)
           (move v14 #o0 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (move v14 #o5 #o2 #o0)
           (send_analysis v14 #o0 #o1 v9 v1)
           (move v14 #o0 #o2 #o5)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v5 v16)
           (move v14 #o5 #o2 #o0)
           (send_analysis v14 #o0 #o1 v9 v5)
           (move v14 #o0 #o2 #o5)
           (drop_rock v14 v16)
           (move v14 #o5 #o2 v15)

