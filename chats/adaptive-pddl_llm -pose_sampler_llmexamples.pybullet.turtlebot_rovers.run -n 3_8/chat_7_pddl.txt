User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom rover(v12)
           Atom conf(v12, v13)
           Atom mode(v11)
           Atom type(v5, v6)
           Atom rock(v4)
           Atom onboard(v10, v12)
           Atom objective(v17)
           Atom rock(v8)
           Atom rock(v7)
           Atom camera(v10)
           Atom onboard(v10, v14)
           Atom type(v4, v2)
           Atom store(v16)
           Atom objective(v19)
           Atom objective(v18)
           Atom supports(v10, v11)
           Atom free(v12, v16)
           Atom atconf(v14, v15)
           Atom rover(v14)
           Atom rock(v5)
           Atom atconf(v12, v13)
           Atom rock(v3)
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom type(v1, v2)
           Atom lander(v9)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom above(v14, #q2, v5)
           Atom conf(v14, #q2)
           Atom above(v14, #q0, v1)
           Atom conf(v14, #q0)
           Atom comvisible(v14, #q3, #y1, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y1)
           Atom above(v14, #q10, v3)
           Atom conf(v14, #q10)
           Atom imagevisible(v14, #q4, #y2, v18)
           Atom imagerange(v14, #q4, v18)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #q5, #y3, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v12, #q14, v7)
           Atom conf(v12, #q14)
           Atom above(v12, #q13, v3)
           Atom conf(v12, #q13)
           Atom imagevisible(v12, #q9, #y7, v17)
           Atom imagerange(v12, #q9, v17)
           Atom conf(v12, #q9)
           Atom ray(#y7)
           Atom above(v12, #q12, v5)
           Atom conf(v12, #q12)
           Atom comvisible(v12, #q7, #y5, v9)
           Atom comrange(v12, #q7, v9)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q15, v8)
           Atom conf(v12, #q15)
           Atom above(v12, #q11, v1)
           Atom conf(v12, #q11)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q8, #y6, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom imagevisible(v14, #q1, #y0, v19)
           Atom imagerange(v14, #q1, v19)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, v15, #t15, #q10)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, v15, #t7, #q1)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v14, #q10, #t16, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #t17, #q1)
           Atom motion(v14, #q3, #t13, v15)
           Atom motion(v14, #q1, #t3, #q3)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #t8, #q4)
           Atom motion(v14, #q3, #t29, #q4)
           Atom motion(v14, #q1, #t20, #q4)
           Atom motion(v14, #q4, #t4, #q3)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q5, #t19, #q3)
           Atom motion(v14, v15, #t9, #q5)
           Atom motion(v14, #q4, #t18, #q5)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q3, #t30, #q5)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, v13, #t36, #q15)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, v13, #t11, #q6)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q3, #t1, #q0)
           Atom motion(v14, #q0, #t5, #q3)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q0, #t0, v15)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, v15, #t14, #q0)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v12, #q7, #t12, v13)
           Atom motion(v12, #q8, #t27, #q7)
           Atom motion(v12, #q7, #t33, #q13)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q15, #t35, #q7)
           Atom motion(v12, #q6, #t10, #q7)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q7, #t34, #q14)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q7, #t23, #q6)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #t25, #q8)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q3, #t2, #q2)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, v15, #t24, #q2)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q2, #t6, #q3)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q7, #t32, #q12)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q12, #t31, #q7)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q9, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q9)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q9, #t28, #q7)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q7, #t26, #q9)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #t21, #q7)
           Atom motion(v12, v13, #t22, #q11)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #q11 v1 v16))
           ((sample_rock v12 #q12 v5 v16))
           ((sample_rock v12 #q13 v3 v16))
           ((sample_rock v12 #q14 v7 v16))
           ((sample_rock v12 #q15 v8 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v1 v16))
           ((sample_rock v14 #q10 v3 v16))
           ((sample_rock v14 #q2 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t21 #q7))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t31 #q7))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 #q9))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t35 #q7))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t10 #q7))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #t12 v13))
           ((move v12 #q7 #t23 #q6))
           ((move v12 #q7 #t25 #q8))
           ((move v12 #q7 #t26 #q9))
           ((move v12 #q7 #t32 #q12))
           ((move v12 #q7 #t33 #q13))
           ((move v12 #q7 #t34 #q14))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t27 #q7))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q15))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t28 #q7))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t11 #q6))
           ((move v12 v13 #t22 #q11))
           ((move v12 v13 #t36 #q15))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #t0 v15))
           ((move v14 #q0 #t5 #q3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t20 #q4))
           ((move v14 #q1 #t3 #q3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t16 #q3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t6 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #t1 #q0))
           ((move v14 #q3 #t13 v15))
           ((move v14 #q3 #t17 #q1))
           ((move v14 #q3 #t2 #q2))
           ((move v14 #q3 #t29 #q4))
           ((move v14 #q3 #t30 #q5))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t18 #q5))
           ((move v14 #q4 #t4 #q3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t19 #q3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q0))
           ((move v14 v15 #t15 #q10))
           ((move v14 v15 #t24 #q2))
           ((move v14 v15 #t7 #q1))
           ((move v14 v15 #t8 #q4))
           ((move v14 v15 #t9 #q5))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v12 #q8 #y6 v19 v10))
           ((calibrate v12 #q9 #y7 v17 v10))
           ((calibrate v14 #q1 #y0 v19 v10))
           ((calibrate v14 #q4 #y2 v18 v10))
           ((calibrate v14 #q5 #y3 v17 v10))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v12 #q8 #y6 v19 v10 v11))
           ((take_image v12 #q9 #y7 v17 v10 v11))
           ((take_image v14 #q1 #y0 v19 v10 v11))
           ((take_image v14 #q4 #y2 v18 v10 v11))
           ((take_image v14 #q5 #y3 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q7 #y5 v9 v4))
           ((send_analysis v12 #q7 #y5 v9 v1))
           ((send_analysis v12 #q7 #y5 v9 v5))
           ((send_analysis v12 #q7 #y5 v9 v3))
           ((send_analysis v12 #q7 #y5 v9 v7))
           ((send_analysis v12 #q7 #y5 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y1 v9 v4))
           ((send_analysis v14 #q3 #y1 v9 v7))
           ((send_analysis v14 #q3 #y1 v9 v8))
           ((send_analysis v14 #q3 #y1 v9 v1))
           ((send_analysis v14 #q3 #y1 v9 v3))
           ((send_analysis v14 #q3 #y1 v9 v5))
           ((send_image v12 #q7 #y5 v9 v18 v11))
           ((send_image v12 #q7 #y5 v9 v19 v11))
           ((send_image v12 #q7 #y5 v9 v17 v11))
           ((send_image v14 #q3 #y1 v9 v19 v11))
           ((send_image v14 #q3 #y1 v9 v18 v11))
           ((send_image v14 #q3 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, `v12` and `v14`, each with a camera `v10` and a storage unit `v16`. There are several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) of two types (`v2` and `v6`). There are also three objectives (`v17`, `v18`, `v19`) and a lander `v9`. Both rovers are initially at their respective configurations (`v13` for `v12` and `v15` for `v14`) and their storage units are free.
           
           The goal `new-axiom@0()` requires that:
           1. Both rovers (`v12`, `v14`) are at some configuration and have free storage (`v16`).
           2. Images for objectives `v17`, `v18`, and `v19` are received (sent to the lander) in mode `v11`.
           3. Rocks of type `v2` (e.g., `v1`, `v3`, `v4`) and type `v6` (e.g., `v5`, `v7`, `v8`) have their analysis received.
           
           Let's break down how to achieve these:
           - **Rover positions and free storage:** Both `v12` and `v14` are initially at `v13` and `v15` respectively, and their storage `v16` is free. So the first part of the goal related to free storage is already met if we don't sample too many rocks with one rover.
           - **Received Images:**
               - To receive an image, a rover must take an image and then send it.
               - Taking an image requires the camera to be calibrated, the rover to be at a visible configuration, and an unobstructed ray.
               - Sending an image requires the rover to be at a visible configuration for communication, have the image, and an unobstructed ray.
           - **Received Analysis:**
               - To receive analysis, a rover must sample a rock and then send the analysis.
               - Sampling a rock requires the rover to be above the rock and have free storage.
               - Sending analysis requires the rover to have analyzed the rock, be at a visible configuration for communication, and an unobstructed ray.
           
           We need to make sure to achieve all parts of `new-axiom@0()`.
           For the received images, we need to take images of `v17`, `v18`, `v19` and send them.
           For the received analysis, we need to sample and send analysis for a rock of type `v2` and a rock of type `v6`. `v1`, `v3`, `v4` are type `v2`. `v5`, `v7`, `v8` are type `v6`.
           
           Let's try to coordinate:
           - **Rover v14**: Can image `v19` (at `#q1`), `v18` (at `#q4`), `v17` (at `#q5`). It can also sample `v1` (at `#q0`), `v3` (at `#q10`), `v4` (at `#o5`), `v5` (at `#q2`), `v7` (at `#o5`), `v8` (at `#o5`). It can communicate from `#q3`.
           - **Rover v12**: Can image `v17` (at `#q9`), `v18` (at `#q6`), `v19` (at `#q8`). It can also sample `v1` (at `#q11`), `v3` (at `#q13`), `v4` (at `#o5`), `v5` (at `#q12`), `v7` (at `#q14`), `v8` (at `#q15`). It can communicate from `#q7`.
           
           Let's plan to get images and analysis:
           1. **Sample and Analyze Rocks:**
               - Rover `v14` can sample `v4` (type `v2`) at `#o5` and `v7` (type `v6`) at `#o5`.
               - Then `v14` can move to `#q3` to send the analysis.
           2. **Take and Send Images:**
               - Rover `v14` can take image of `v19` at `#q1`, `v18` at `#q4` and `v17` at `#q5`.
               - Then `v14` can move to `#q3` to send the images.
           
           Let's execute this.
           
           **Rover `v14` for Analysis:**
           - `v14` is at `v15`.
           - Move `v14` to `#o5` to sample rocks.
           - Sample `v4` (type `v2`).
           - Sample `v7` (type `v6`).
           - Move `v14` to `#q3` to send analysis.
           - Send analysis for `v4` and `v7`.
           
           **Rover `v14` for Images (Can be intertwined with sampling if locations align):**
           - Calibrate camera for `v19` at `#q1`.
           - Take image of `v19` at `#q1`.
           - Move `v14` to `#q4`.
           - Calibrate camera for `v18` at `#q4`.
           - Take image of `v18` at `#q4`.
           - Move `v14` to `#q5`.
           - Calibrate camera for `v17` at `#q5`.
           - Take image of `v17` at `#q5`.
           - Move `v14` to `#q3` to send images (if not already there).
           - Send images of `v17`, `v18`, `v19`.
           
           We need to make sure that the camera is recalibrated for each image.
           
           Let's try to optimize moves and recalibrations.
           
           **Rover v14 Plan:**
           1. Move to `#q0` (where `v1` is, type `v2`).
           2. Sample `v1`.
           3. Move to `#q2` (where `v5` is, type `v6`).
           4. Sample `v5`.
           5. Move to `#q1` for `v19`.
           6. Calibrate camera.
           7. Take image of `v19`.
           8. Move to `#q4` for `v18`.
           9. Calibrate camera.
           10. Take image of `v18`.
           11. Move to `#q5` for `v17`.
           12. Calibrate camera.
           13. Take image of `v17`.
           14. Move to `#q3` for communication.
           15. Send analysis for `v1`.
           16. Send analysis for `v5`.
           17. Send image for `v19`.
           18. Send image for `v18`.
           19. Send image for `v17`.
           
           This plan utilizes `v14` for all tasks, and `v12` is not needed.
           
           --Plan--:
           (move v14 v15 #t14 #q0)
           (sample_rock v14 #q0 v1 v16)
           (move v14 #q0 #o2 #q2)
           (sample_rock v14 #q2 v5 v16)
           (move v14 #q2 #o2 #q1)
           (calibrate v14 #q1 #y0 v19 v10)
           (take_image v14 #q1 #y0 v19 v10 v11)
           (move v14 #q1 #t20 #q4)
           (calibrate v14 #q4 #y2 v18 v10)
           (take_image v14 #q4 #y2 v18 v10 v11)
           (move v14 #q4 #t18 #q5)
           (calibrate v14 #q5 #y3 v17 v10)
           (take_image v14 #q5 #y3 v17 v10 v11)
           (move v14 #q5 #t19 #q3)
           (send_analysis v14 #q3 #y1 v9 v1)
           (send_analysis v14 #q3 #y1 v9 v5)
           (send_image v14 #q3 #y1 v9 v19 v11)
           (send_image v14 #q3 #y1 v9 v18 v11)
           (send_image v14 #q3 #y1 v9 v17 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not fully satisfied. Let's re-evaluate the components of the goal and ensure each is explicitly met.
           
           The goal `new-axiom@0()` states:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers must be at their initial configurations. This is satisfied by the initial state and will remain satisfied if they return to these configurations, or if they stay at the final configuration of the last action. However, the exact configuration does not matter, as long as `atconf(rover, some_q)` is true. The provided axiom definition `atconf(v12, v13)` and `atconf(v14, v15)` suggests these specific configurations as part of the goal state, so we should ensure the rovers end up there or that the axiom accepts any `atconf`. Given the PDDL syntax, the `atconf(v12, v13)` and `atconf(v14, v15)` are part of the axiom, implying that the rovers must explicitly be in these two specified configurations for the axiom to be satisfied.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers must have free storage. This is initially true for both. My previous plan sampled two rocks with `v14`, which would make `v14`'s `v16` full. Then I did not drop the rocks, so `v14`'s storage would not be free. This is a critical point that needs to be addressed.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`: Images for objectives `v17`, `v18`, `v19` must be received at the lander in mode `v11`. My previous plan addressed this using `v14`.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: Analysis for at least one rock of type `v2` must be received. My previous plan sampled `v1` which is type `v2`, and sent its analysis.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: Analysis for at least one rock of type `v6` must be received. My previous plan sampled `v5` which is type `v6`, and sent its analysis.
           
           The main issue in the previous plan was not freeing the storage after sampling to satisfy `free(v14, v16)`. Also, ensuring the rovers return to their exact `v13` and `v15` configurations is important given the axiom definition.
           
           Let's refine the plan, making sure to drop rocks to free storage, and ensuring the rovers return to their initial positions.
           
           **Revised Plan Strategy:**
           - Use `v14` for all tasks to simplify coordination.
           - Sample one rock of type `v2` (e.g., `v1`).
           - Drop the sampled rock to free `v14`'s storage.
           - Sample one rock of type `v6` (e.g., `v5`).
           - Drop the sampled rock to free `v14`'s storage.
           - Send analysis for both `v1` and `v5` (they are analyzed even after dropping).
           - Calibrate and take images of `v17`, `v18`, `v19`.
           - Send these images.
           - Ensure `v14` ends at `v15` and `v12` is still at `v13`.
           
           **Detailed Plan for `v14`:**
           
           1.  **Sample and Analyze Type v2 Rock:**
               *   `v14` is at `v15`.
               *   Move `v14` to `#q0` (location of `v1`, a type `v2` rock).
               *   Sample `v1`. `v14`'s `v16` is now full.
               *   Drop `v1` to free `v14`'s `v16`. `v1` is still analyzed.
           2.  **Sample and Analyze Type v6 Rock:**
               *   Move `v14` to `#q2` (location of `v5`, a type `v6` rock).
               *   Sample `v5`. `v14`'s `v16` is now full.
               *   Drop `v5` to free `v14`'s `v16`. `v5` is still analyzed.
           3.  **Send Analyses:**
               *   Move `v14` to `#q3` (communication configuration).
               *   Send analysis for `v1`.
               *   Send analysis for `v5`.
           4.  **Take and Send Images:**
               *   Move `v14` to `#q1` (image `v19`).
               *   Calibrate `v10`.
               *   Take image of `v19`.
               *   Move `v14` to `#q4` (image `v18`).
               *   Calibrate `v10`.
               *   Take image of `v18`.
               *   Move `v14` to `#q5` (image `v17`).
               *   Calibrate `v10`.
               *   Take image of `v17`.
               *   Move `v14` back to `#q3` (communication configuration if not there).
               *   Send images of `v17`, `v18`, `v19`.
           5.  **Return to initial state (optional if not required for atconf(v14,v15) based on axiom interpretation):** The axiom definition includes `atconf(v14, v15)`. We must ensure the rover ends up there. After sending images, `v14` is at `#q3`. We need to move it to `v15`.
           
           Let's re-check the movements for optimal path to cover image objectives and analysis points efficiently.
           
           Revised path:
           1.  **Start at v15**
           2.  **Move to #q0 (for v1, type v2)**
           3.  **Sample v1**
           4.  **Drop v1** (frees storage, keeps analysis)
           5.  **Move to #q2 (for v5, type v6)**
           6.  **Sample v5**
           7.  **Drop v5** (frees storage, keeps analysis)
           8.  **Move to #q1 (for v19 image)**
           9.  **Calibrate v10**
           10. **Take image v19**
           11. **Move to #q4 (for v18 image)**
           12. **Calibrate v10**
           13. **Take image v18**
           14. **Move to #q5 (for v17 image)**
           15. **Calibrate v10**
           16. **Take image v17**
           17. **Move to #q3 (for communication)**
           18. **Send analysis v1**
           19. **Send analysis v5**
           20. **Send image v19**
           21. **Send image v18**
           22. **Send image v17**
           23. **Move to v15 (to satisfy atconf(v14, v15) in the axiom if the exact configuration is required)**
           
           --Plan--:
           (move v14 v15 #t14 #q0)
           (sample_rock v14 #q0 v1 v16)
           (drop_rock v14 v16)
           (move v14 #q0 #o2 #q2)
           (sample_rock v14 #q2 v5 v16)
           (drop_rock v14 v16)
           (move v14 #q2 #t6 #q3)
           (send_analysis v14 #q3 #y1 v9 v1)
           (send_analysis v14 #q3 #y1 v9 v5)
           (move v14 #q3 #t17 #q1)
           (calibrate v14 #q1 #y0 v19 v10)
           (take_image v14 #q1 #y0 v19 v10 v11)
           (move v14 #q1 #t20 #q4)
           (calibrate v14 #q4 #y2 v18 v10)
           (take_image v14 #q4 #y2 v18 v10 v11)
           (move v14 #q4 #t18 #q5)
           (calibrate v14 #q5 #y3 v17 v10)
           (take_image v14 #q5 #y3 v17 v10 v11)
           (move v14 #q5 #t19 #q3)
           (send_image v14 #q3 #y1 v9 v19 v11)
           (send_image v14 #q3 #y1 v9 v18 v11)
           (send_image v14 #q3 #y1 v9 v17 v11)
           (move v14 #q3 #t13 v15)

