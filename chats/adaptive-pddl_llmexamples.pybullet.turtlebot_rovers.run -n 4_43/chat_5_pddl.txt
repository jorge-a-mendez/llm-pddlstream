User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom conf(v12, v13)
           Atom lander(v9)
           Atom mode(v11)
           Atom objective(v18)
           Atom rock(v8)
           Atom objective(v17)
           Atom rock(v4)
           Atom conf(v14, v15)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom type(v7, v6)
           Atom rock(v3)
           Atom rock(v5)
           Atom type(v3, v2)
           Atom free(v14, v16)
           Atom objective(v19)
           Atom objective(v20)
           Atom rover(v12)
           Atom rock(v7)
           Atom type(v4, v2)
           Atom free(v12, v16)
           Atom type(v1, v2)
           Atom onboard(v10, v14)
           Atom rover(v14)
           Atom type(v5, v6)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom camera(v10)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #q17, v8)
           Atom conf(v14, #q17)
           Atom imagevisible(v14, #q9, #y6, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom above(v12, #q14, v8)
           Atom conf(v12, #q14)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v12, #q10, v7)
           Atom conf(v12, #q10)
           Atom above(v12, #q12, v3)
           Atom conf(v12, #q12)
           Atom comvisible(v14, #q4, #y2, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom comvisible(v12, #q2, #y0, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y0)
           Atom above(v12, #q15, v4)
           Atom conf(v12, #q15)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q16, #y9, v20)
           Atom imagerange(v14, #q16, v20)
           Atom conf(v14, #q16)
           Atom ray(#y9)
           Atom imagevisible(v12, #q7, #y5, v20)
           Atom imagerange(v12, #q7, v20)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q11, #y7, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q13, #y8, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y8)
           Atom imagevisible(v12, #q3, #y1, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom motion(v14, v15, #t32, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #t4, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, v15, #t15, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v14, #q17, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q17)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q6, #t9, #q7)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q7, #t14, #q1)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q5, #t10, #q6)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q3, #t12, #q5)
           Atom motion(v12, v13, #t5, #q5)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, v15, #t8, #q0)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q17)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q17, #o2, #q0)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q0, #o2, #q16)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q0)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, #q2, #t28, #q5)
           Atom motion(v12, #q2, #t13, #q8)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q5, #t25, #q2)
           Atom motion(v12, #q6, #t30, #q2)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, #q2, #t7, #q1)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q3, #t2, #q2)
           Atom motion(v12, #q2, #t27, #q6)
           Atom motion(v12, #q8, #t11, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #t26, #q7)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q2, #t1, v13)
           Atom motion(v12, #q7, #t31, #q2)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q12, #t23, #q2)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q2, #t24, #q12)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q0, #t3, #q4)
           Atom motion(v14, #q17, #t29, #q4)
           Atom motion(v14, #q4, #t18, #q9)
           Atom motion(v14, #q4, #t6, v15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q16)
           Atom motion(v14, #q9, #t20, #q4)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q17)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q11, #t21, #q4)
           Atom motion(v14, #q16, #o2, #q4)
           Atom motion(v14, #q4, #t19, #q11)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q15)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q2, #t16, #q10)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #t17, #q10)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q10, #t22, #q2)
           Atom motion(v12, #q15, #o2, #q10)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q17)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #q17, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q12 v3 v16))
           ((sample_rock v12 #q14 v8 v16))
           ((sample_rock v12 #q15 v4 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((sample_rock v14 #q17 v8 v16))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q15))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t22 #q2))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t23 #q2))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q10))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #t1 v13))
           ((move v12 #q2 #t13 #q8))
           ((move v12 #q2 #t16 #q10))
           ((move v12 #q2 #t24 #q12))
           ((move v12 #q2 #t26 #q7))
           ((move v12 #q2 #t27 #q6))
           ((move v12 #q2 #t28 #q5))
           ((move v12 #q2 #t7 #q1))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t12 #q5))
           ((move v12 #q3 #t2 #q2))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t10 #q6))
           ((move v12 #q5 #t25 #q2))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t30 #q2))
           ((move v12 #q6 #t9 #q7))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t14 #q1))
           ((move v12 #q7 #t31 #q2))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t11 #q2))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q10))
           ((move v12 v13 #t4 #q3))
           ((move v12 v13 #t5 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q17))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q16))
           ((move v14 #q0 #o2 #q17))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t3 #q4))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q17))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t21 #q4))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q0))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q4))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q17 #o2 #o5))
           ((move v14 #q17 #o2 #q0))
           ((move v14 #q17 #o2 #q11))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t29 #q4))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q16))
           ((move v14 #q4 #o2 #q17))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #t18 #q9))
           ((move v14 #q4 #t19 #q11))
           ((move v14 #q4 #t6 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t20 #q4))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t15 #q9))
           ((move v14 v15 #t32 #q17))
           ((move v14 v15 #t8 #q0))
           ((calibrate v12 #q3 #y1 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v12 #q7 #y5 v20 v10))
           ((calibrate v14 #q11 #y7 v19 v10))
           ((calibrate v14 #q13 #y8 v17 v10))
           ((calibrate v14 #q16 #y9 v20 v10))
           ((calibrate v14 #q9 #y6 v18 v10))
           ((take_image v12 #q3 #y1 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v12 #q7 #y5 v20 v10 v11))
           ((take_image v14 #q11 #y7 v19 v10 v11))
           ((take_image v14 #q13 #y8 v17 v10 v11))
           ((take_image v14 #q16 #y9 v20 v10 v11))
           ((take_image v14 #q9 #y6 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y0 v9 v1))
           ((send_analysis v12 #q2 #y0 v9 v7))
           ((send_analysis v12 #q2 #y0 v9 v3))
           ((send_analysis v12 #q2 #y0 v9 v8))
           ((send_analysis v12 #q2 #y0 v9 v4))
           ((send_analysis v12 #q2 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y2 v9 v1))
           ((send_analysis v14 #q4 #y2 v9 v3))
           ((send_analysis v14 #q4 #y2 v9 v4))
           ((send_analysis v14 #q4 #y2 v9 v7))
           ((send_analysis v14 #q4 #y2 v9 v5))
           ((send_analysis v14 #q4 #y2 v9 v8))
           ((send_image v12 #q2 #y0 v9 v17 v11))
           ((send_image v12 #q2 #y0 v9 v18 v11))
           ((send_image v12 #q2 #y0 v9 v19 v11))
           ((send_image v12 #q2 #y0 v9 v20 v11))
           ((send_image v14 #q4 #y2 v9 v19 v11))
           ((send_image v14 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q4 #y2 v9 v20 v11))
           ((send_image v14 #q4 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each equipped with a camera v10. There are several rock objectives (v8, v4, v3, v5, v7, v1) and image objectives (v18, v17, v19, v20). There is one lander v9 to send data to. Both rovers have a storage compartment v16.
           
           The goal is to achieve 'new-axiom@0()'. This axiom represents a conjunction of conditions:
           1. Both rovers v12 and v14 must be at some configuration (already true in initial state).
           2. Both rovers must have free storage (already true in initial state).
           3. Images for all four objectives (v17, v18, v19, v20) must be received (by the lander v9) using mode v11.
           4. All rocks (v1, v3, v4, v5, v7, v8) must be analyzed and the analysis received by the lander. The types of rocks are given (v6 for v8, v7, v5; v2 for v3, v4, v1).
           
           Let's break down the goal into subgoals:
           - **Analyze rocks and send analysis:** For each rock, a rover needs to move to a position above it, sample it (which marks it as analyzed and fills a storage slot), and then send the analysis to the lander. Since there are 6 rocks and only one storage slot per rover, they will need to drop rocks or work together efficiently.
           - **Take images and send them:** For each objective, a rover needs to move to a visible position, calibrate its camera, take an image, and then send it to the lander.
           
           Since there are 6 rocks to be analyzed and 4 images to be taken, and each rover has only one storage `v16`, the rovers will need to drop rocks to sample all of them. Also, the `new-axiom@0()` implies that all rocks must be analyzed.
           
           Let's plan for Rover v12 first:
           1. **Sample rocks:** Rover v12 needs to sample v1, v3, v4, v5, v7, v8. It starts at v13.
               - Move to #q1 (above v1)
               - Sample v1
               - Move to #q2 (comvisible with v9)
               - Send analysis for v1
               - Drop rock (to free storage v16)
               - Repeat for other rocks. It has above configurations for all rocks.
           2. **Take images:** Rover v12 can take images for v17, v18, v19, v20.
               - Move to #q3 (imagevisible for v17)
               - Calibrate camera
               - Take image of v17
               - Move to #q2 (comvisible with v9)
               - Send image of v17
               - Repeat for other objectives.
           
           Rover v14 starts at v15. It can also perform similar actions.
           
           Since the goal states `type(?stone, v2)` and `receivedanalysis(?stone)` for rocks of type `v2` and `type(?soil, v6)` and `receivedanalysis(?soil)` for rocks of type `v6`, we need to make sure all rocks are analyzed.
           
           **Rocks to analyze:**
           - Type v2: v3, v4, v1
           - Type v6: v8, v7, v5
           
           Let's use Rover v12 for type v2 rocks and Rover v14 for type v6 rocks. Also, let's distribute image taking.
           
           **Rover v12 (focus on type v2 rocks and some images):**
           1. Calibrate for image (e.g., v17)
           2. Take image of v17
           3. Send image of v17
           4. Sample rock v1 (type v2)
           5. Send analysis for v1
           6. Drop rock v1
           7. Sample rock v3 (type v2)
           8. Send analysis for v3
           9. Drop rock v3
           10. Sample rock v4 (type v2)
           11. Send analysis for v4
           12. Drop rock v4
           13. Calibrate for image (e.g., v19)
           14. Take image of v19
           15. Send image of v19
           
           **Rover v14 (focus on type v6 rocks and some images):**
           1. Calibrate for image (e.g., v18)
           2. Take image of v18
           3. Send image of v18
           4. Sample rock v5 (type v6)
           5. Send analysis for v5
           6. Drop rock v5
           7. Sample rock v7 (type v6)
           8. Send analysis for v7
           9. Drop rock v7
           10. Sample rock v8 (type v6)
           11. Send analysis for v8
           12. Drop rock v8
           13. Calibrate for image (e.g., v20)
           14. Take image of v20
           15. Send image of v20
           
           This plan ensures all rocks are analyzed and all images are taken and sent. We need to be careful with the configurations (q's) and rays (y's) for each action.
           
           Let's trace a potential path, considering one rover for all rock samples and the other for all images, then combining them.
           However, since there are 6 rocks and only 1 storage per rover, each rover will need to sample and drop multiple times.
           
           Let's make a more efficient plan:
           
           **Rover v12:**
           - Calibrate for v17 at #q3
           - Take image of v17
           - Move to #q2 (for communication)
           - Send image of v17
           - Move to #q1 (above v1)
           - Sample v1
           - Move to #q2
           - Send analysis for v1
           - Drop v1
           - Move to #q12 (above v3)
           - Sample v3
           - Move to #q2
           - Send analysis for v3
           - Drop v3
           - Move to #q15 (above v4)
           - Sample v4
           - Move to #q2
           - Send analysis for v4
           - Drop v4
           - Calibrate for v19 at #q6
           - Take image of v19
           - Move to #q2
           - Send image of v19
           
           **Rover v14:**
           - Calibrate for v18 at #q9
           - Take image of v18
           - Move to #q4 (for communication)
           - Send image of v18
           - Move to #q0 (above v5)
           - Sample v5
           - Move to #q4
           - Send analysis for v5
           - Drop v5
           - Move to #o5 (above v7)
           - Sample v7
           - Move to #q4
           - Send analysis for v7
           - Drop v7
           - Move to #q17 (above v8)
           - Sample v8
           - Move to #q4
           - Send analysis for v8
           - Drop v8
           - Calibrate for v20 at #q16
           - Take image of v20
           - Move to #q4
           - Send image of v20
           
           This seems like a complete plan.
           
           --Plan--:
           (calibrate v12 #q3 #y1 v17 v10)
           (take_image v12 #q3 #y1 v17 v10 v11)
           (move v12 #q3 #t2 #q2)
           (send_image v12 #q2 #y0 v9 v17 v11)
           (move v12 #q2 #t7 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t0 #q2)
           (send_analysis v12 #q2 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q2 #t24 #q12)
           (sample_rock v12 #q12 v3 v16)
           (move v12 #q12 #t23 #q2)
           (send_analysis v12 #q2 #y0 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #q15)
           (sample_rock v12 #q15 v4 v16)
           (move v12 #q15 #o2 #q2)
           (send_analysis v12 #q2 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #t27 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t30 #q2)
           (send_image v12 #q2 #y0 v9 v19 v11)
           (calibrate v14 #q9 #y6 v18 v10)
           (take_image v14 #q9 #y6 v18 v10 v11)
           (move v14 #q9 #t20 #q4)
           (send_image v14 #q4 #y2 v9 v18 v11)
           (move v14 v15 #t8 #q0)
           (sample_rock v14 #q0 v5 v16)
           (move v14 #q0 #t3 #q4)
           (send_analysis v14 #q4 #y2 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q4 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #q4)
           (send_analysis v14 #q4 #y2 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q4 #o2 #q17)
           (sample_rock v14 #q17 v8 v16)
           (move v14 #q17 #t29 #q4)
           (send_analysis v14 #q4 #y2 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q4 #o2 #q16)
           (calibrate v14 #q16 #y9 v20 v10)
           (take_image v14 #q16 #y9 v20 v10 v11)
           (move v14 #q16 #o2 #q4)
           (send_image v14 #q4 #y2 v9 v20 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. This axiom requires several conditions to be true simultaneously:
           - Both rovers v12 and v14 at their configurations (v13 and v15 respectively).
           - Both rovers have free storage v16.
           - All four image objectives (v17, v18, v19, v20) have been received at the lander v9 with mode v11.
           - All six rock objectives (v1, v3, v4, v5, v7, v8) have been analyzed and their analysis received at the lander v9.
           
           My previous plan satisfied the received image and received analysis goals, but the rovers might not have been at their initial configurations (v13 and v15) at the very end, and their storage units (v16) might not have been free.
           
           To correct this, at the very end of the plan, both rovers must return to their initial configuration and drop any remaining rocks in their storage.
           
           Let's re-evaluate the plan with these final conditions in mind.
           
           **Revised Strategy:**
           
           1.  **Prioritize analyses and images:** Both rovers will take turns performing analysis and imaging tasks.
           2.  **Ensure all analyses are sent and all images are sent.**
           3.  **Final state cleanup:** Before the plan ends, each rover must:
               *   Drop any rock it might be holding.
               *   Move back to its initial configuration (v13 for v12, v15 for v14).
           
           **Detailed Plan Flow:**
           
           **Rover v12 (Initial: v13, free v16):**
           *   **Image v17:** Calibrate at #q3, take image, move to #q2, send image.
           *   **Rock v1:** Move to #q1, sample, move to #q2, send analysis, drop rock.
           *   **Rock v3:** Move to #q12, sample, move to #q2, send analysis, drop rock.
           *   **Rock v4:** Move to #q15, sample, move to #q2, send analysis, drop rock.
           *   **Image v19:** Move to #q6, calibrate, take image, move to #q2, send image.
           *   **Final move:** Move to v13.
           
           **Rover v14 (Initial: v15, free v16):**
           *   **Image v18:** Calibrate at #q9, take image, move to #q4, send image.
           *   **Rock v5:** Move to #q0, sample, move to #q4, send analysis, drop rock.
           *   **Rock v7:** Move to #o5, sample, move to #q4, send analysis, drop rock.
           *   **Rock v8:** Move to #q17, sample, move to #q4, send analysis, drop rock.
           *   **Image v20:** Move to #q16, calibrate, take image, move to #q4, send image.
           *   **Final move:** Move to v15.
           
           This revised strategy makes sure that all the `receivedimage`, `receivedanalysis`, `atconf`, and `free` predicates are true at the end.
           
           --Plan--:
           (calibrate v12 #q3 #y1 v17 v10)
           (take_image v12 #q3 #y1 v17 v10 v11)
           (move v12 #q3 #t2 #q2)
           (send_image v12 #q2 #y0 v9 v17 v11)
           (move v12 #q2 #t7 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t0 #q2)
           (send_analysis v12 #q2 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q2 #t24 #q12)
           (sample_rock v12 #q12 v3 v16)
           (move v12 #q12 #t23 #q2)
           (send_analysis v12 #q2 #y0 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #q15)
           (sample_rock v12 #q15 v4 v16)
           (move v12 #q15 #o2 #q2)
           (send_analysis v12 #q2 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #t27 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t30 #q2)
           (send_image v12 #q2 #y0 v9 v19 v11)
           (move v12 #q2 #t1 v13)
           (calibrate v14 #q9 #y6 v18 v10)
           (take_image v14 #q9 #y6 v18 v10 v11)
           (move v14 #q9 #t20 #q4)
           (send_image v14 #q4 #y2 v9 v18 v11)
           (move v14 v15 #t8 #q0)
           (sample_rock v14 #q0 v5 v16)
           (move v14 #q0 #t3 #q4)
           (send_analysis v14 #q4 #y2 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q4 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #q4)
           (send_analysis v14 #q4 #y2 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q4 #o2 #q17)
           (sample_rock v14 #q17 v8 v16)
           (move v14 #q17 #t29 #q4)
           (send_analysis v14 #q4 #y2 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q4 #o2 #q16)
           (calibrate v14 #q16 #y9 v20 v10)
           (take_image v14 #q16 #y9 v20 v10 v11)
           (move v14 #q16 #o2 #q4)
           (send_image v14 #q4 #y2 v9 v20 v11)
           (move v14 #q4 #t6 v15)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v14, #q9) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the precondition `atconf(v14, #q9)` was not satisfied for the action `(calibrate v14 #q9 #y6 v18 v10)`. Rover v14 starts at configuration `v15`. To calibrate at `#q9`, rover v14 must first move to `#q9`.
           
           Let's refine the plan, ensuring each move action is explicitly included before an action that requires a specific configuration.
           
           **Revised Strategy:**
           
           1.  **Strict adherence to `atconf`:** Every action that requires a specific configuration must be preceded by a `move` action (if the rover is not already at that configuration).
           2.  **Ensure all analyses are sent and all images are sent.**
           3.  **Final state cleanup:** Before the plan ends, each rover must:
               *   Drop any rock it might be holding.
               *   Move back to its initial configuration (v13 for v12, v15 for v14).
           
           **Detailed Plan Flow:**
           
           **Rover v12 (Initial: v13, free v16):**
           *   **Image v17:** Move to #q3, calibrate at #q3, take image, move to #q2, send image.
           *   **Rock v1:** Move to #q1, sample, move to #q2, send analysis, drop rock.
           *   **Rock v3:** Move to #q12, sample, move to #q2, send analysis, drop rock.
           *   **Rock v4:** Move to #q15, sample, move to #q2, send analysis, drop rock.
           *   **Image v19:** Move to #q6, calibrate, take image, move to #q2, send image.
           *   **Final move:** Move to v13.
           
           **Rover v14 (Initial: v15, free v16):**
           *   **Image v18:** Move to #q9, calibrate at #q9, take image, move to #q4, send image.
           *   **Rock v5:** Move to #q0, sample, move to #q4, send analysis, drop rock.
           *   **Rock v7:** Move to #o5, sample, move to #q4, send analysis, drop rock.
           *   **Rock v8:** Move to #q17, sample, move to #q4, send analysis, drop rock.
           *   **Image v20:** Move to #q16, calibrate, take image, move to #q4, send image.
           *   **Final move:** Move to v15.
           
           This refined plan ensures that `atconf` preconditions are met before executing the `calibrate` actions.
           
           --Plan--:
           (move v12 v13 #t4 #q3)
           (calibrate v12 #q3 #y1 v17 v10)
           (take_image v12 #q3 #y1 v17 v10 v11)
           (move v12 #q3 #t2 #q2)
           (send_image v12 #q2 #y0 v9 v17 v11)
           (move v12 #q2 #t7 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t0 #q2)
           (send_analysis v12 #q2 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q2 #t24 #q12)
           (sample_rock v12 #q12 v3 v16)
           (move v12 #q12 #t23 #q2)
           (send_analysis v12 #q2 #y0 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #q15)
           (sample_rock v12 #q15 v4 v16)
           (move v12 #q15 #o2 #q2)
           (send_analysis v12 #q2 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #t27 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t30 #q2)
           (send_image v12 #q2 #y0 v9 v19 v11)
           (move v12 #q2 #t1 v13)
           (move v14 v15 #t15 #q9)
           (calibrate v14 #q9 #y6 v18 v10)
           (take_image v14 #q9 #y6 v18 v10 v11)
           (move v14 #q9 #t20 #q4)
           (send_image v14 #q4 #y2 v9 v18 v11)
           (move v14 #q4 #o2 #q0)
           (sample_rock v14 #q0 v5 v16)
           (move v14 #q0 #t3 #q4)
           (send_analysis v14 #q4 #y2 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q4 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #q4)
           (send_analysis v14 #q4 #y2 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q4 #o2 #q17)
           (sample_rock v14 #q17 v8 v16)
           (move v14 #q17 #t29 #q4)
           (send_analysis v14 #q4 #y2 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q4 #o2 #q16)
           (calibrate v14 #q16 #y9 v20 v10)
           (take_image v14 #q16 #y9 v20 v10 v11)
           (move v14 #q16 #o2 #q4)
           (send_image v14 #q4 #y2 v9 v20 v11)
           (move v14 #q4 #t6 v15)

