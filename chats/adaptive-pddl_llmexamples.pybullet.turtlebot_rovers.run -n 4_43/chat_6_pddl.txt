User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom conf(v12, v13)
           Atom lander(v9)
           Atom mode(v11)
           Atom objective(v18)
           Atom rock(v8)
           Atom objective(v17)
           Atom rock(v4)
           Atom conf(v14, v15)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom type(v7, v6)
           Atom rock(v3)
           Atom rock(v5)
           Atom type(v3, v2)
           Atom free(v14, v16)
           Atom objective(v19)
           Atom objective(v20)
           Atom rover(v12)
           Atom rock(v7)
           Atom type(v4, v2)
           Atom free(v12, v16)
           Atom type(v1, v2)
           Atom onboard(v10, v14)
           Atom rover(v14)
           Atom type(v5, v6)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom camera(v10)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q17, v8)
           Atom conf(v14, #q17)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom imagevisible(v14, #q9, #y6, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q18, v7)
           Atom conf(v14, #q18)
           Atom above(v12, #q14, v8)
           Atom conf(v12, #q14)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom above(v12, #q12, v3)
           Atom conf(v12, #q12)
           Atom above(v12, #q10, v7)
           Atom conf(v12, #q10)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom comvisible(v14, #q4, #y2, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom comvisible(v12, #q2, #y0, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y0)
           Atom above(v12, #q15, v4)
           Atom conf(v12, #q15)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v12, #q7, #y5, v20)
           Atom imagerange(v12, #q7, v20)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q16, #y9, v20)
           Atom imagerange(v14, #q16, v20)
           Atom conf(v14, #q16)
           Atom ray(#y9)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q11, #y7, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom imagevisible(v14, #q13, #y8, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y8)
           Atom imagevisible(v12, #q3, #y1, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, v15, #t8, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #t4, #q3)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, v15, #t15, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v12, #q3, #t12, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, v13, #t5, #q5)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q5, #t10, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q0, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q16, #o2, #q0)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, v15, #t32, #q17)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q6, #t9, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q6, #t30, #q2)
           Atom motion(v12, #q3, #t2, #q2)
           Atom motion(v12, #q2, #t26, #q7)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q5, #t25, #q2)
           Atom motion(v12, #q7, #t31, #q2)
           Atom motion(v12, #q2, #t28, #q5)
           Atom motion(v12, #q15, #t34, #q2)
           Atom motion(v12, #q2, #t1, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q8, #t11, #q2)
           Atom motion(v12, #q2, #t36, #q15)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q2, #t13, #q8)
           Atom motion(v12, #q2, #t27, #q6)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v14, #q18, #o2, #q18)
           Atom motion(v14, #q0, #o2, #q18)
           Atom motion(v14, #q18, #o2, v15)
           Atom motion(v14, #q13, #o2, #q18)
           Atom motion(v14, #q17, #o2, #q18)
           Atom motion(v14, v15, #o2, #q18)
           Atom motion(v14, #q18, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q18)
           Atom motion(v14, #q18, #o2, #q11)
           Atom motion(v14, #q16, #o2, #q18)
           Atom motion(v14, #q11, #o2, #q18)
           Atom motion(v14, #q18, #o2, #q17)
           Atom motion(v14, #q18, #o2, #q13)
           Atom motion(v14, #q18, #o2, #q0)
           Atom motion(v14, #q18, #o2, #q16)
           Atom motion(v14, #q4, #t6, v15)
           Atom motion(v14, #q0, #t3, #q4)
           Atom motion(v14, #q9, #t20, #q4)
           Atom motion(v14, #q17, #t29, #q4)
           Atom motion(v14, #q4, #t19, #q11)
           Atom motion(v14, #q4, #t37, #q17)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #t40, #q16)
           Atom motion(v14, #q4, #t18, #q9)
           Atom motion(v14, #q16, #t33, #q4)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q4, #t38, #q18)
           Atom motion(v14, #q18, #t35, #q4)
           Atom motion(v14, #q11, #t21, #q4)
           Atom motion(v14, #q4, #t39, #q0)
           Atom motion(v12, #q2, #t7, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q7, #t14, #q1)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q15)
           Atom motion(v12, #q10, #t22, #q2)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q2, #t16, #q10)
           Atom motion(v12, v13, #t17, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q15, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q2, #t24, #q12)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, #q12, #t23, #q2)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v14, #q18, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q18)
           Atom motion(v14, #q17, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q17)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q9)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q12 v3 v16))
           ((sample_rock v12 #q14 v8 v16))
           ((sample_rock v12 #q15 v4 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((sample_rock v14 #q17 v8 v16))
           ((sample_rock v14 #q18 v7 v16))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q15))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t22 #q2))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t23 #q2))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q10))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t34 #q2))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #t1 v13))
           ((move v12 #q2 #t13 #q8))
           ((move v12 #q2 #t16 #q10))
           ((move v12 #q2 #t24 #q12))
           ((move v12 #q2 #t26 #q7))
           ((move v12 #q2 #t27 #q6))
           ((move v12 #q2 #t28 #q5))
           ((move v12 #q2 #t36 #q15))
           ((move v12 #q2 #t7 #q1))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t12 #q5))
           ((move v12 #q3 #t2 #q2))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t10 #q6))
           ((move v12 #q5 #t25 #q2))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t30 #q2))
           ((move v12 #q6 #t9 #q7))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t14 #q1))
           ((move v12 #q7 #t31 #q2))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t11 #q2))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q10))
           ((move v12 v13 #t4 #q3))
           ((move v12 v13 #t5 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q17))
           ((move v14 #o5 #o2 #q18))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q16))
           ((move v14 #q0 #o2 #q17))
           ((move v14 #q0 #o2 #q18))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t3 #q4))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q17))
           ((move v14 #q11 #o2 #q18))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t21 #q4))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q18))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q0))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q18))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t33 #q4))
           ((move v14 #q17 #o2 #o5))
           ((move v14 #q17 #o2 #q0))
           ((move v14 #q17 #o2 #q11))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q18))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t29 #q4))
           ((move v14 #q18 #o2 #o5))
           ((move v14 #q18 #o2 #q0))
           ((move v14 #q18 #o2 #q11))
           ((move v14 #q18 #o2 #q13))
           ((move v14 #q18 #o2 #q16))
           ((move v14 #q18 #o2 #q17))
           ((move v14 #q18 #o2 #q18))
           ((move v14 #q18 #o2 #q9))
           ((move v14 #q18 #o2 v15))
           ((move v14 #q18 #t35 #q4))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #t18 #q9))
           ((move v14 #q4 #t19 #q11))
           ((move v14 #q4 #t37 #q17))
           ((move v14 #q4 #t38 #q18))
           ((move v14 #q4 #t39 #q0))
           ((move v14 #q4 #t40 #q16))
           ((move v14 #q4 #t6 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q18))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t20 #q4))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q18))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t15 #q9))
           ((move v14 v15 #t32 #q17))
           ((move v14 v15 #t8 #q0))
           ((calibrate v12 #q3 #y1 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v12 #q7 #y5 v20 v10))
           ((calibrate v14 #q11 #y7 v19 v10))
           ((calibrate v14 #q13 #y8 v17 v10))
           ((calibrate v14 #q16 #y9 v20 v10))
           ((calibrate v14 #q9 #y6 v18 v10))
           ((take_image v12 #q3 #y1 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v12 #q7 #y5 v20 v10 v11))
           ((take_image v14 #q11 #y7 v19 v10 v11))
           ((take_image v14 #q13 #y8 v17 v10 v11))
           ((take_image v14 #q16 #y9 v20 v10 v11))
           ((take_image v14 #q9 #y6 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y0 v9 v1))
           ((send_analysis v12 #q2 #y0 v9 v7))
           ((send_analysis v12 #q2 #y0 v9 v3))
           ((send_analysis v12 #q2 #y0 v9 v8))
           ((send_analysis v12 #q2 #y0 v9 v4))
           ((send_analysis v12 #q2 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y2 v9 v1))
           ((send_analysis v14 #q4 #y2 v9 v3))
           ((send_analysis v14 #q4 #y2 v9 v4))
           ((send_analysis v14 #q4 #y2 v9 v5))
           ((send_analysis v14 #q4 #y2 v9 v8))
           ((send_analysis v14 #q4 #y2 v9 v7))
           ((send_image v12 #q2 #y0 v9 v17 v11))
           ((send_image v12 #q2 #y0 v9 v18 v11))
           ((send_image v12 #q2 #y0 v9 v19 v11))
           ((send_image v12 #q2 #y0 v9 v20 v11))
           ((send_image v14 #q4 #y2 v9 v19 v11))
           ((send_image v14 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q4 #y2 v9 v20 v11))
           ((send_image v14 #q4 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, both equipped with a camera v10. There are several rock objectives (v8, v4, v3, v5, v7, v1) and scientific objectives (v18, v17, v19, v20). There's a lander v9 for communication and a store v16 for sampled rocks. The goal `new-axiom@0()` represents a complex state where images of all objectives (v17, v18, v19, v20) have been received at the lander, and rocks of type v2 (v1, v3, v4) and v6 (v8, v7, v5) have been analyzed and their analysis received. Both rovers have free storage.
           
           To achieve the goal, both rovers need to:
           1. Sample rocks of both types (v2 and v6).
           2. Take images of all four objectives (v17, v18, v19, v20).
           3. Send both the rock analysis and the images to the lander.
           
           Let's break down the plan for each rover.
           
           **Rover v12:**
           *   **Sample rocks:** Rover v12 can sample v1 (type v2), v3 (type v2), v4 (type v2), v5 (type v6), v7 (type v6), and v8 (type v6). We need to ensure at least one of each type is sampled.
           *   **Take images:** Rover v12 can take images of v17, v18, v19, and v20. It needs to calibrate its camera before each image.
           *   **Send data:** Rover v12 can send analysis and images to the lander v9 from #q2.
           
           **Rover v14:**
           *   **Sample rocks:** Rover v14 can sample v1 (type v2), v3 (type v2), v4 (type v2), v5 (type v6), v7 (type v6), and v8 (type v6).
           *   **Take images:** Rover v14 can take images of v17, v18, v19, and v20. It needs to calibrate its camera before each image.
           *   **Send data:** Rover v14 can send analysis and images to the lander v9 from #q4.
           
           Since the goal requires that *all* images are received and *all* rock analyses are received, and there are multiple rocks and objectives, we need to coordinate the actions of both rovers.
           
           For simplicity and efficiency, each rover will cover some of the objectives and rocks.
           
           **Rover v12 Strategy:**
           1.  Sample rock v1 (type v2) at #q1.
           2.  Sample rock v7 (type v6) at #q10.
           3.  Move to a communication position #q2.
           4.  Send analysis of v1 and v7.
           5.  Move to image position #q3.
           6.  Calibrate camera.
           7.  Take image of v17.
           8.  Move to image position #q5.
           9.  Calibrate camera.
           10. Take image of v18.
           11. Move to image position #q6.
           12. Calibrate camera.
           13. Take image of v19.
           14. Move to image position #q7.
           15. Calibrate camera.
           16. Take image of v20.
           17. Move to communication position #q2.
           18. Send images of v17, v18, v19, v20.
           
           **Rover v14 Strategy:**
           Rover v14 is already at v15 which is a valid starting point for several moves. We can use it to cover the remaining sampling and imaging tasks if needed, or to provide redundancy. However, the current goal conditions (all receivedimage for objectives and receivedanalysis for rock types v2 and v6) can be met by rover v12 alone if it samples at least one of type v2 and one of type v6, and captures all four objective images. Let's verify if v12 can do all required tasks.
           
           The goal `new-axiom@0()` explicitly states:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `type(?stone, v2)` and `receivedanalysis(?stone)` (meaning one rock of type v2 needs analysis received)
           - `type(?soil, v6)` and `receivedanalysis(?soil)` (meaning one rock of type v6 needs analysis received)
           
           Rover v12 has access to all objectives and several rocks of both types. It also has a camera and communication capabilities. Therefore, Rover v12 can achieve the entire goal by itself.
           
           Let's refine Rover v12's plan to minimize moves and ensure all conditions are met.
           
           1.  **Sample rocks:**
               *   Move to #q1 (above v1, type v2).
               *   Sample v1.
               *   Move to #q10 (above v7, type v6).
               *   Sample v7.
           2.  **Image objectives:**
               *   Move to #q3 (image v17). Calibrate, take image.
               *   Move to #q5 (image v18). Calibrate, take image.
               *   Move to #q6 (image v19). Calibrate, take image.
               *   Move to #q7 (image v20). Calibrate, take image.
           3.  **Send data:**
               *   Move to #q2 (communication).
               *   Send analysis for v1 and v7.
               *   Send images for v17, v18, v19, v20.
           
           This plan ensures all preconditions are met and the goal is achieved.
           
           --Plan--:
           (move v12 v13 #o2 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #o2 #q10)
           (sample_rock v12 #q10 v7 v16)
           (move v12 #q10 #o2 #q3)
           (calibrate v12 #q3 #y1 v17 v10)
           (take_image v12 #q3 #y1 v17 v10 v11)
           (move v12 #q3 #t12 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #t10 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t9 #q7)
           (calibrate v12 #q7 #y5 v20 v10)
           (take_image v12 #q7 #y5 v20 v10 v11)
           (move v12 #q7 #t31 #q2)
           (send_analysis v12 #q2 #y0 v9 v1)
           (send_analysis v12 #q2 #y0 v9 v7)
           (send_image v12 #q2 #y0 v9 v17 v11)
           (send_image v12 #q2 #y0 v9 v18 v11)
           (send_image v12 #q2 #y0 v9 v19 v11)
           (send_image v12 #q2 #y0 v9 v20 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the axiom `new-axiom@0()` was not fully satisfied. Let's re-examine the `new-axiom@0()` definition:
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           My previous plan satisfied `receivedimage` for all four objectives and `receivedanalysis` for `v1` (type v2) and `v7` (type v6). However, the axiom also requires `atconf(v12, v13)` and `atconf(v14, v15)` and `free(v12, v16)` and `free(v14, v16)`.
           
           In the initial state, we have:
           *   `atconf(v12, v13)`
           *   `atconf(v14, v15)`
           *   `free(v12, v16)`
           *   `free(v14, v16)`
           
           My previous plan started with `(move v12 v13 #o2 #q1)`, which changes `atconf(v12, v13)` to `atconf(v12, #q1)`. This means that at the *end* of the plan, `atconf(v12, v13)` is not true. Similarly, sampling rocks fills the store, changing `free(v12, v16)` to `full(v12, v16)`. If we drop the rock at the end, it will become free again.
           
           The goal `new-axiom@0()` refers to a specific final state where both rovers are at their initial configurations and their stores are free. This implies that if any rock is sampled, it must be dropped later, and if a rover moves, it must return to its initial configuration.
           
           Let's revise the plan for `v12` to accommodate these final state requirements. We will only use `v12` to simplify, as it can achieve all the required tasks.
           
           **Revised Rover v12 Strategy:**
           1.  **Sample rocks (and drop to maintain free store):**
               *   Move to `q1` (above `v1`, type `v2`).
               *   Sample `v1`.
               *   Move to `q2` (communication point).
               *   Send analysis of `v1`.
               *   Drop `v1` to free the store.
               *   Move to `q10` (above `v7`, type `v6`).
               *   Sample `v7`.
               *   Move to `q2`.
               *   Send analysis of `v7`.
               *   Drop `v7` to free the store.
           2.  **Image objectives (and return to initial config):**
               *   Move to `q3` (image `v17`).
               *   Calibrate camera.
               *   Take image of `v17`.
               *   Move to `q5` (image `v18`).
               *   Calibrate camera.
               *   Take image of `v18`.
               *   Move to `q6` (image `v19`).
               *   Calibrate camera.
               *   Take image of `v19`.
               *   Move to `q7` (image `v20`).
               *   Calibrate camera.
               *   Take image of `v20`.
           3.  **Send images and return home:**
               *   Move to `q2` (communication point).
               *   Send images of `v17, v18, v19, v20`.
               *   Move back to `v13` (initial configuration).
           
           This ensures that at the end of the plan:
           *   `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)` are true.
           *   `receivedanalysis(v1)` (type v2) and `receivedanalysis(v7)` (type v6) are true.
           *   `atconf(v12, v13)` is true.
           *   `free(v12, v16)` is true.
           *   `atconf(v14, v15)` and `free(v14, v16)` are initially true and are not affected by `v12`'s actions.
           
           --Plan--:
           (move v12 v13 #o2 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t0 #q2)
           (send_analysis v12 #q2 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q2 #t16 #q10)
           (sample_rock v12 #q10 v7 v16)
           (move v12 #q10 #t22 #q2)
           (send_analysis v12 #q2 #y0 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #q3)
           (calibrate v12 #q3 #y1 v17 v10)
           (take_image v12 #q3 #y1 v17 v10 v11)
           (move v12 #q3 #t12 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #t10 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t9 #q7)
           (calibrate v12 #q7 #y5 v20 v10)
           (take_image v12 #q7 #y5 v20 v10 v11)
           (move v12 #q7 #t31 #q2)
           (send_image v12 #q2 #y0 v9 v17 v11)
           (send_image v12 #q2 #y0 v9 v18 v11)
           (send_image v12 #q2 #y0 v9 v19 v11)
           (send_image v12 #q2 #y0 v9 v20 v11)
           (move v12 #q2 #t1 v13)

