User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom camera(v10)
           Atom store(v16)
           Atom rock(v5)
           Atom type(v4, v2)
           Atom objective(v18)
           Atom conf(v12, v13)
           Atom rock(v8)
           Atom type(v8, v6)
           Atom rover(v12)
           Atom objective(v17)
           Atom type(v3, v2)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom rock(v4)
           Atom type(v1, v2)
           Atom rock(v1)
           Atom atconf(v12, v13)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom rock(v7)
           Atom supports(v10, v11)
           Atom onboard(v10, v14)
           Atom rock(v3)
           Atom type(v5, v6)
           Atom conf(v14, v15)
           Atom atconf(v14, v15)
           Atom onboard(v10, v12)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v7)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q3, v1)
           Atom conf(v14, #q3)
           Atom imagevisible(v14, #q1, #y1, v18)
           Atom imagerange(v14, #q1, v18)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom imagevisible(v14, #q2, #y2, v17)
           Atom imagerange(v14, #q2, v17)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom comvisible(v12, #q6, #y3, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y3)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v3)
           Atom above(v12, #q5, v5)
           Atom conf(v12, #q5)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #t16, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, v13, #t15, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #t0, v15)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #t3, #q0)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q0, #t4, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q2, #t8, #q0)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, v15, #t6, #q2)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q0, #t5, #q4)
           Atom motion(v14, #q4, #t7, #q0)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, v15, #t1, #q1)
           Atom motion(v14, #q1, #t2, #q0)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q0, #t9, #q1)
           Atom motion(v12, #q6, #t12, #q7)
           Atom motion(v12, #q5, #t13, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #t11, #q5)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t10, v13)
           Atom motion(v12, #q7, #t14, #q6)
           Atom motion(v12, #o3, #o2, #q7)
           Atom motion(v12, #o3, #o2, #q5)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #q7, #o2, #o3)
           Atom motion(v12, #q6, #o2, #o3)
           Atom motion(v12, #q5, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q7, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q5 v5 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q3 v1 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q5))
           ((move v12 #o3 #o2 #q6))
           ((move v12 #o3 #o2 #q7))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q5 #o2 #o3))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t13 #q6))
           ((move v12 #q6 #o2 #o3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #t10 v13))
           ((move v12 #q6 #t11 #q5))
           ((move v12 #q6 #t12 #q7))
           ((move v12 #q7 #o2 #o3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t14 #q6))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q5))
           ((move v12 v13 #t16 #q7))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #t0 v15))
           ((move v14 #q0 #t4 #q3))
           ((move v14 #q0 #t5 #q4))
           ((move v14 #q0 #t9 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t2 #q0))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t8 #q0))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q0))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t7 #q0))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q1))
           ((move v14 v15 #t6 #q2))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v14 #q1 #y1 v18 v10))
           ((calibrate v14 #q2 #y2 v17 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v14 #q1 #y1 v18 v10 v11))
           ((take_image v14 #q2 #y2 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y3 v9 v3))
           ((send_analysis v12 #q6 #y3 v9 v4))
           ((send_analysis v12 #q6 #y3 v9 v7))
           ((send_analysis v12 #q6 #y3 v9 v8))
           ((send_analysis v12 #q6 #y3 v9 v5))
           ((send_analysis v12 #q6 #y3 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q6 #y3 v9 v17 v11))
           ((send_image v12 #q6 #y3 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Plan to Achieve `new-axiom@0()`**
           
           Alright, let's break this down. The ultimate goal is `new-axiom@0()`, but that boils down to a conjunction of several conditions. My job, it seems, is to make sure these conditions hold true.
           
           Specifically, I need to focus on these crucial parts:
           
           1.  **Get images sent and received.** I need to ensure rovers *v12* and *v14* transmit images successfully. That involves taking images of objectives `v17` and `v18` and sending them to the lander, `v9`.
           2.  **Get analyses processed.** I need to sample rock analyses from various stones and soil. Then send their analyses to the lander, `v9`.
           3.  **Ensure preconditions met.** I need to move the rovers as needed, and make sure that the system is ready to send and receive images and analyses.
           
           **Phase 1: Imaging**
           
           I'm assigning rover *v14* to handle imaging because it appears to be better positioned for image captures. Here are the steps:
           
           1.  **Move Rover**: Get *v14* from `v15` to position `#q1`.
           2.  **Calibrate**: Get *v10* to calibrate for `v18`.
           3.  **Take Image**: Take the image of `v18` with camera *v10* in mode *v11*.
           4.  **Move Rover**: Now, get *v14* to position `#q2`.
           5.  **Calibrate**: Re-calibrate camera *v10* for `v17`.
           6.  **Take Image**: Grab the image of `v17` with *v10* in mode *v11*.
           7.  **Move Rover**: Bring *v14* over to `#q0` to be ready for the lander, `v9`
           8.  **Send Image**: Now that the images have been captured and camera calibrated, send `v18` to the lander, `v9`.
           9.  **Send Image**: Now that the images have been captured and camera calibrated, send `v17` to the lander, `v9`.
           10. **Move Rover**: Move *v14* from `q0` back to `v15`.
           
           **Phase 2: Analysis**
           
           I'll have rover *v12* take care of the analysis and transmissions.
           
           Rover v12 must visit rock locations to sample them.  Then it can send the results.
           
           Here is the plan for analysis:
           
           *I must ensure that the samples from each of the listed objects are performed correctly*
           
           *   The goal here is for rover v12 to sample all 6 objects:  *v3*, *v4*, *v7*, *v8*, *v5*, *v1*.
           *   I will also have v12 send each of their analyses to the lander: `v9`.
           *   Lastly I must make sure the rover is free to sample an object and move after completion.
           
           1.  Move Rover to location `#o5`.
           2.  Sample Rock: From `#o5`, sample rock *v3*.
           3.  Move Rover to location `#q6`.
           4.  Send Analysis: Send the data on `v3` to the lander.
           5.  Clear Space: The rover v12 has now dropped the object in position `#q6`.
           6.  Move Rover to location `#o5`.
           7.  Sample Rock: From `#o5`, sample rock *v4*.
           8.  Move Rover to location `#q6`.
           9.  Send Analysis: Send the data on `v4` to the lander.
           10. Clear Space: The rover v12 has now dropped the object in position `#q6`.
           11. Move Rover to location `#o5`.
           12. Sample Rock: From `#o5`, sample rock *v7*.
           13. Move Rover to location `#q6`.
           14. Send Analysis: Send the data on `v7` to the lander.
           15. Clear Space: The rover v12 has now dropped the object in position `#q6`.
           16. Move Rover to location `#o5`.
           17. Sample Rock: From `#o5`, sample rock *v8*.
           18. Move Rover to location `#q6`.
           19. Send Analysis: Send the data on `v8` to the lander.
           20. Clear Space: The rover v12 has now dropped the object in position `#q6`.
)

Model:     **The Plan to Achieve `new-axiom@0()`**
           
           Alright, let's break this down. The ultimate goal is `new-axiom@0()`, but that boils down to a conjunction of several conditions. My job, it seems, is to make sure these conditions hold true.
           
           Specifically, I need to focus on these crucial parts:
           
           1.  **Get images sent and received.** I need to ensure rovers *v12* and *v14* transmit images successfully. That involves taking images of objectives `v17` and `v18` and sending them to the lander, `v9`.
           2.  **Get analyses processed.** I need to sample rock analyses from various stones and soil. Then send their analyses to the lander, `v9`.
           3.  **Ensure preconditions met.** I need to move the rovers as needed, and make sure that the system is ready to send and receive images and analyses.
           
           **Phase 1: Imaging**
           
           I'm assigning rover *v14* to handle imaging because it appears to be better positioned for image captures. Here are the steps:
           
           1.  **Move Rover**: Get *v14* from `v15` to position `#q1`.
           2.  **Calibrate**: Get *v10* to calibrate for `v18`.
           3.  **Take Image**: Take the image of `v18` with camera *v10* in mode *v11*.
           4.  **Move Rover**: Now, get *v14* to position `#q2`.
           5.  **Calibrate**: Re-calibrate camera *v10* for `v17`.
           6.  **Take Image**: Grab the image of `v17` with *v10* in mode *v11*.
           7.  **Move Rover**: Bring *v14* over to `#q0` to be ready for the lander, `v9`
           8.  **Send Image**: Now that the images have been captured and camera calibrated, send `v18` to the lander, `v9`.
           9.  **Send Image**: Now that the images have been captured and camera calibrated, send `v17` to the lander, `v9`.
           10. **Move Rover**: Move *v14* from `q0` back to `v15`.
           
           **Phase 2: Analysis**
           
           I'll have rover *v12* take care of the analysis and transmissions.
           
           Rover v12 must visit rock locations to sample them.  Then it can send the results.
           
           Here is the plan for analysis:
           
           *I must ensure that the samples from each of the listed objects are performed correctly*
           
           *   The goal here is for rover v12 to sample all 6 objects:  *v3*, *v4*, *v7*, *v8*, *v5*, *v1*.
           *   I will also have v12 send each of their analyses to the lander: `v9`.
           *   Lastly I must make sure the rover is free to sample an object and move after completion.
           
           1.  Move Rover to location `#o5`.
           2.  Sample Rock: From `#o5`, sample rock *v3*.
           3.  Move Rover to location `#q6`.
           4.  Send Analysis: Send the data on `v3` to the lander.
           5.  Clear Space: The rover v12 has now dropped the object in position `#q6`.
           6.  Move Rover to location `#o5`.
           7.  Sample Rock: From `#o5`, sample rock *v4*.
           8.  Move Rover to location `#q6`.
           9.  Send Analysis: Send the data on `v4` to the lander.
           10. Clear Space: The rover v12 has now dropped the object in position `#q6`.
           11. Move Rover to location `#o5`.
           12. Sample Rock: From `#o5`, sample rock *v7*.
           13. Move Rover to location `#q6`.
           14. Send Analysis: Send the data on `v7` to the lander.
           15. Clear Space: The rover v12 has now dropped the object in position `#q6`.
           16. Move Rover to location `#o5`.
           17. Sample Rock: From `#o5`, sample rock *v8*.
           18. Move Rover to location `#q6`.
           19. Send Analysis: Send the data on `v8` to the lander.
           20. Clear Space: The rover v12 has now dropped the object in position `#q6`.

