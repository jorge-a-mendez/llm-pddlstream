User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom camera(v10)
           Atom store(v16)
           Atom rock(v5)
           Atom type(v4, v2)
           Atom objective(v18)
           Atom conf(v12, v13)
           Atom rock(v8)
           Atom type(v8, v6)
           Atom rover(v12)
           Atom objective(v17)
           Atom type(v3, v2)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom rock(v4)
           Atom type(v1, v2)
           Atom rock(v1)
           Atom atconf(v12, v13)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom rock(v7)
           Atom supports(v10, v11)
           Atom onboard(v10, v14)
           Atom rock(v3)
           Atom type(v5, v6)
           Atom conf(v14, v15)
           Atom atconf(v14, v15)
           Atom onboard(v10, v12)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v3)
           Atom above(v14, #q3, v1)
           Atom conf(v14, #q3)
           Atom imagevisible(v14, #q1, #y1, v18)
           Atom imagerange(v14, #q1, v18)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom imagevisible(v14, #q2, #y2, v17)
           Atom imagerange(v14, #q2, v17)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom above(v12, #q8, v7)
           Atom conf(v12, #q8)
           Atom above(v12, #q9, v4)
           Atom conf(v12, #q9)
           Atom comvisible(v12, #q6, #y3, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y3)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #q5, v5)
           Atom conf(v12, #q5)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q10, v8)
           Atom conf(v12, #q10)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v12, v13, #t21, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, v13, #t23, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v14, v15, #t1, #q1)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q1, #t24, #q2)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, v15, #t6, #q2)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, v13, #t15, #q5)
           Atom motion(v14, #q3, #t3, #q0)
           Atom motion(v14, #q0, #t5, #q4)
           Atom motion(v14, #q2, #t8, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q1, #t2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t9, #q1)
           Atom motion(v14, #q0, #t4, #q3)
           Atom motion(v14, #q0, #t0, v15)
           Atom motion(v14, #q0, #t25, #q2)
           Atom motion(v14, #q4, #t7, #q0)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, v13, #t16, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q10, #t20, #q6)
           Atom motion(v12, #q6, #t17, #q8)
           Atom motion(v12, #q6, #t10, v13)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q8, #t18, #q6)
           Atom motion(v12, #q6, #t11, #q5)
           Atom motion(v12, #q7, #t14, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t12, #q7)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q5, #t13, #q6)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, v13, #t22, #q9)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q9, #t19, #q6)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #t26, #q10)
           Atom motion(v12, #o3, #o2, #q5)
           Atom motion(v12, #q10, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q8)
           Atom motion(v12, #o3, #o2, #q9)
           Atom motion(v12, #q8, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q6)
           Atom motion(v12, #o3, #o2, #q7)
           Atom motion(v12, #q11, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #q10)
           Atom motion(v12, #q5, #o2, #o3)
           Atom motion(v12, #q6, #o2, #o3)
           Atom motion(v12, #q9, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #q7, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q11)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q1, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v8 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q5 v5 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q8 v7 v16))
           ((sample_rock v12 #q9 v4 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q3 v1 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #q10))
           ((move v12 #o3 #o2 #q11))
           ((move v12 #o3 #o2 #q5))
           ((move v12 #o3 #o2 #q6))
           ((move v12 #o3 #o2 #q7))
           ((move v12 #o3 #o2 #q8))
           ((move v12 #o3 #o2 #q9))
           ((move v12 #o3 #o2 v13))
           ((move v12 #q10 #o2 #o3))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t20 #q6))
           ((move v12 #q11 #o2 #o3))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q5 #o2 #o3))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t13 #q6))
           ((move v12 #q6 #o2 #o3))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #t10 v13))
           ((move v12 #q6 #t11 #q5))
           ((move v12 #q6 #t12 #q7))
           ((move v12 #q6 #t17 #q8))
           ((move v12 #q7 #o2 #o3))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t14 #q6))
           ((move v12 #q8 #o2 #o3))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t18 #q6))
           ((move v12 #q9 #o2 #o3))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t19 #q6))
           ((move v12 #q9 #t26 #q10))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q5))
           ((move v12 v13 #t16 #q7))
           ((move v12 v13 #t21 #q8))
           ((move v12 v13 #t22 #q9))
           ((move v12 v13 #t23 #q10))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #t0 v15))
           ((move v14 #q0 #t25 #q2))
           ((move v14 #q0 #t4 #q3))
           ((move v14 #q0 #t5 #q4))
           ((move v14 #q0 #t9 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t2 #q0))
           ((move v14 #q1 #t24 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t8 #q0))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q0))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t7 #q0))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q1))
           ((move v14 v15 #t6 #q2))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v14 #q1 #y1 v18 v10))
           ((calibrate v14 #q2 #y2 v17 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v14 #q1 #y1 v18 v10 v11))
           ((take_image v14 #q2 #y2 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y3 v9 v8))
           ((send_analysis v12 #q6 #y3 v9 v3))
           ((send_analysis v12 #q6 #y3 v9 v5))
           ((send_analysis v12 #q6 #y3 v9 v1))
           ((send_analysis v12 #q6 #y3 v9 v7))
           ((send_analysis v12 #q6 #y3 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q6 #y3 v9 v17 v11))
           ((send_image v12 #q6 #y3 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Comprehensive Plan for Axiom Fulfillment**
           
           Alright, let's break this down. The objective is to achieve `new-axiom@0()`, a conjunctive axiom. I need to ensure a number of conditions hold true. Initially, four conditions are already satisfied. The remaining conditions hinge on receiving two images, having analyzed a stone and soil sample, and receiving the analyses. I'll need to strategically move and use my resources (rovers and sensors) to meet these.
           
           First, the images. Rover `v14` seems like the best bet, as it has the right camera and communication setup. I'll need to have `v14` move to appropriate locations to observe and capture images of `v17` and `v18`. Then, the images need to be transmitted to the Lander `v9` in mode `v11`.
           
           To achieve the image transmission, I need to ensure the following:
           *   `v14` is in a communications-visible location.
           *   The camera of `v14` is calibrated.
           *   `v14` has actually captured the target images.
           
           I will have `v14` move to `q1`, calibrate its camera, take a picture of `v18`, move to the comms location `q0`, and send the image to `v9`. Then, `v14` will move to `q2`, take and send `v17`'s image in a similar manner.
           
           Next, I need to analyze a stone and a soil sample. Rover `v12` has a store and the ability to sample. I have to find a way to get the analyses to the lander. The analyses need to be transmitted as well.
           *   I can have Rover v12 move to locations where rocks can be sampled.
           *   Rocks are available at above locations.
           *   The rover has a free store at the beginning, so `sample_rock` can be run.
           *   I will move `v12` to `#q9`, which is above rock `v4`.
           *   Then it will sample `v4`, which I've designated as the stone.
           *   I'll then send the analysis to the lander, and then use a `drop_rock` call to free `v16`.
           *   I'll then do the same thing for the soil sample `v8`.
           
           The whole plan will be:
           1.  Move v14 to #q1, then calibrate and take a picture of #v18, move to q0, and send the image to v9.
           2.  Move v14 to #q2, then calibrate and take a picture of #v17, move to q0, and send the image to v9.
           3.  Move v12 to #q9, sample v4, move to q6, and send its analysis.
           4.  Then perform a `drop_rock` call to release v16.
           5.  Move v12 to #q10, sample v8, move to q6, and send the analysis.
           
           This should fulfill all the preconditions for the axiom to be true, and the goal should be met.
           
)

Model:     **A Comprehensive Plan for Axiom Fulfillment**
           
           Alright, let's break this down. The objective is to achieve `new-axiom@0()`, a conjunctive axiom. I need to ensure a number of conditions hold true. Initially, four conditions are already satisfied. The remaining conditions hinge on receiving two images, having analyzed a stone and soil sample, and receiving the analyses. I'll need to strategically move and use my resources (rovers and sensors) to meet these.
           
           First, the images. Rover `v14` seems like the best bet, as it has the right camera and communication setup. I'll need to have `v14` move to appropriate locations to observe and capture images of `v17` and `v18`. Then, the images need to be transmitted to the Lander `v9` in mode `v11`.
           
           To achieve the image transmission, I need to ensure the following:
           *   `v14` is in a communications-visible location.
           *   The camera of `v14` is calibrated.
           *   `v14` has actually captured the target images.
           
           I will have `v14` move to `q1`, calibrate its camera, take a picture of `v18`, move to the comms location `q0`, and send the image to `v9`. Then, `v14` will move to `q2`, take and send `v17`'s image in a similar manner.
           
           Next, I need to analyze a stone and a soil sample. Rover `v12` has a store and the ability to sample. I have to find a way to get the analyses to the lander. The analyses need to be transmitted as well.
           *   I can have Rover v12 move to locations where rocks can be sampled.
           *   Rocks are available at above locations.
           *   The rover has a free store at the beginning, so `sample_rock` can be run.
           *   I will move `v12` to `#q9`, which is above rock `v4`.
           *   Then it will sample `v4`, which I've designated as the stone.
           *   I'll then send the analysis to the lander, and then use a `drop_rock` call to free `v16`.
           *   I'll then do the same thing for the soil sample `v8`.
           
           The whole plan will be:
           1.  Move v14 to #q1, then calibrate and take a picture of #v18, move to q0, and send the image to v9.
           2.  Move v14 to #q2, then calibrate and take a picture of #v17, move to q0, and send the image to v9.
           3.  Move v12 to #q9, sample v4, move to q6, and send its analysis.
           4.  Then perform a `drop_rock` call to release v16.
           5.  Move v12 to #q10, sample v8, move to q6, and send the analysis.
           
           This should fulfill all the preconditions for the axiom to be true, and the goal should be met.
           

