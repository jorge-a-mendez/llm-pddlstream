User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom store(v16)
           Atom conf(v14, v15)
           Atom objective(v18)
           Atom free(v12, v16)
           Atom supports(v10, v11)
           Atom rock(v3)
           Atom conf(v12, v13)
           Atom onboard(v10, v14)
           Atom objective(v17)
           Atom rock(v7)
           Atom rock(v4)
           Atom type(v7, v6)
           Atom objective(v20)
           Atom lander(v9)
           Atom rover(v12)
           Atom mode(v11)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom rock(v8)
           Atom rover(v14)
           Atom rock(v1)
           Atom type(v8, v6)
           Atom free(v14, v16)
           Atom type(v5, v6)
           Atom camera(v10)
           Atom atconf(v12, v13)
           Atom onboard(v10, v12)
           Atom type(v1, v2)
           Atom type(v4, v2)
           Atom rock(v5)
           Atom objective(v19)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q1, #y1, v20)
           Atom imagerange(v14, #q1, v20)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v14, #q2, #y2, v19)
           Atom imagerange(v14, #q2, v19)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom above(v14, #o5, v1)
           Atom comvisible(v14, #q3, #y3, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y3)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q7, #y5, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #q4, v1)
           Atom conf(v12, #q4)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #o5, v5)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q5, v7)
           Atom conf(v12, #q5)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #t5, v15)
           Atom motion(v14, v15, #t10, #q6)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #t4, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t2, #q3)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, v15, #t9, #q2)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, v15, #t11, #q7)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, #q5, #t13, #q0)
           Atom motion(v12, #q0, #t7, #q5)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v14, #q1, #t1, #q3)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, v15, #t8, #q1)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #t12, #q0)
           Atom motion(v12, v13, #t3, #q4)
           Atom motion(v12, #q0, #t6, #q4)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #q4, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q4)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q0)
           Atom motion(v12, #q0, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q5)
           Atom motion(v12, #q5, #o2, #o3)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q4 v1 v16))
           ((sample_rock v12 #q5 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q0))
           ((move v12 #o3 #o2 #q4))
           ((move v12 #o3 #o2 #q5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o3))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t6 #q4))
           ((move v12 #q0 #t7 #q5))
           ((move v12 #q4 #o2 #o3))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t12 #q0))
           ((move v12 #q5 #o2 #o3))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t13 #q0))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t3 #q4))
           ((move v12 v13 #t4 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t2 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #t5 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q6))
           ((move v14 v15 #t11 #q7))
           ((move v14 v15 #t8 #q1))
           ((move v14 v15 #t9 #q2))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q1 #y1 v20 v10))
           ((calibrate v14 #q2 #y2 v19 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((calibrate v14 #q7 #y5 v17 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q1 #y1 v20 v10 v11))
           ((take_image v14 #q2 #y2 v19 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q7 #y5 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y3 v9 v1))
           ((send_analysis v14 #q3 #y3 v9 v3))
           ((send_analysis v14 #q3 #y3 v9 v4))
           ((send_analysis v14 #q3 #y3 v9 v5))
           ((send_analysis v14 #q3 #y3 v9 v7))
           ((send_analysis v14 #q3 #y3 v9 v8))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q3 #y3 v9 v20 v11))
           ((send_image v14 #q3 #y3 v9 v19 v11))
           ((send_image v14 #q3 #y3 v9 v18 v11))
           ((send_image v14 #q3 #y3 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), a store (v16), and several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). Rover v12 is at configuration v13 and rover v14 is at configuration v15. Both rovers have the camera v10 onboard, which supports mode v11. Both rovers also have a free store v16. There are various motion, image visibility, and communication visibility predicates defined, indicating possible movements and observations. The goal is to achieve 'new-axiom@0()', which translates to receiving images for all four objectives (v17, v18, v19, v20) in mode v11, receiving analyses for rocks v3 and v7 (type v2 and v6 respectively), and having both rovers at their initial configurations with free stores. Since rocks v3 and v7 have different types, this means we'll need to analyze them specifically. Looking at the axiom details for `new-axiom@0()`, it requires `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`, `receivedanalysis(v3)` (type v2), and `receivedanalysis(v7)` (type v6), and also `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)`. The rovers are already at their initial configurations and have free stores, so the main tasks are image acquisition and analysis.
           
           To achieve the goal, we need to:
           1. Analyze rock v3 (type v2). Rover v14 is above v3 at #o5.
           2. Analyze rock v7 (type v6). Rover v12 is above v7 at #q5, and Rover v14 is above v7 at #o5.
           3. Receive images for v17, v18, v19, v20 in mode v11.
           
           Let's use rover v14 for analyzing rock v3 and rover v12 for analyzing rock v7.
           Then, we can use both rovers for taking and sending images.
           
           Plan:
           - **Analyze rock v3 (type v2):** Rover v14 is above v3 at #o5.
               - Sample v3 with v14 using store v16.
               - Send analysis of v3 from v14 to lander v9.
           - **Analyze rock v7 (type v6):** Rover v12 is above v7 at #q5.
               - Move v12 to #q5 (if not already there). It is currently at v13, so it needs to move. However, the initial state shows `above(v12, #q5, v7)` which means it can sample from v13 after moving to #q5.
               - Sample v7 with v12 using store v16.
               - Send analysis of v7 from v12 to lander v9.
           - **Image acquisition and transmission:**
               - For v17: Rover v12 can image v17 from #o3, and Rover v14 can image v17 from #q7.
               - For v18: Rover v12 can image v18 from #o3, and Rover v14 can image v18 from #q6.
               - For v19: Rover v12 can image v19 from #o3, and Rover v14 can image v19 from #q2.
               - For v20: Rover v12 can image v20 from #o3, and Rover v14 can image v20 from #q1.
           
           Let's organize the image tasks to minimize movement:
           - Use rover v12 to take images of v17, v18, v19, v20 from #o3 and send them from #q0.
           - Use rover v14 to take images of v17, v18, v19, v20 from various configs and send them from #q3.
           
           The plan should ensure that the rovers are back to their initial configurations (v13 for v12, v15 for v14) and have free stores (v16) at the end. The `sample_rock` action makes the store `full`, so a `drop_rock` action is required.
           
           **Detailed Plan:**
           
           1.  **Analyze rock v3 (type v2) with v14:**
               *   `sample_rock v14 #o5 v3 v16` (v14 is at v15, can move to #o5 for sampling. Initial state has `atconf(v14, v15)` and `motion(v14, v15, #o2, #o5)`.) -> `full(v14, v16)`, `analyzed(v14, v3)`
               *   `move v14 #o5 #o2 #q3` (move to a communication-visible config for sending analysis)
               *   `send_analysis v14 #q3 #y3 v9 v3` -> `receivedanalysis(v3)`
               *   `drop_rock v14 v16` -> `free(v14, v16)`
               *   `move v14 #q3 #t5 v15` (return v14 to initial config)
           
           2.  **Analyze rock v7 (type v6) with v12:**
               *   `move v12 v13 #t4 #q5` (move v12 to #q5 to be above v7, v12 is at v13)
               *   `sample_rock v12 #q5 v7 v16` -> `full(v12, v16)`, `analyzed(v12, v7)`
               *   `move v12 #q5 #t13 #q0` (move to a communication-visible config for sending analysis)
               *   `send_analysis v12 #q0 #y0 v9 v7` -> `receivedanalysis(v7)`
               *   `drop_rock v12 v16` -> `free(v12, v16)`
               *   `move v12 #q0 #t0 v13` (return v12 to initial config)
           
           3.  **Image acquisition and transmission with v12:**
               *   `move v12 v13 #o2 #o3` (move v12 to image config #o3)
               *   `calibrate v12 #o3 #o4 v17 v10` -> `calibrated(v10, v12)`
               *   `take_image v12 #o3 #o4 v17 v10 v11` -> `haveimage(v12, v17, v11)`
               *   `calibrate v12 #o3 #o4 v18 v10` (re-calibrate for next image as camera is uncalibrated after use)
               *   `take_image v12 #o3 #o4 v18 v10 v11` -> `haveimage(v12, v18, v11)`
               *   `calibrate v12 #o3 #o4 v19 v10`
               *   `take_image v12 #o3 #o4 v19 v10 v11` -> `haveimage(v12, v19, v11)`
               *   `calibrate v12 #o3 #o4 v20 v10`
               *   `take_image v12 #o3 #o4 v20 v10 v11` -> `haveimage(v12, v20, v11)`
               *   `move v12 #o3 #o2 #q0` (move v12 to communication config #q0)
               *   `send_image v12 #q0 #y0 v9 v17 v11` -> `receivedimage(v17, v11)`
               *   `send_image v12 #q0 #y0 v9 v18 v11` -> `receivedimage(v18, v11)`
               *   `send_image v12 #q0 #y0 v9 v19 v11` -> `receivedimage(v19, v11)`
               *   `send_image v12 #q0 #y0 v9 v20 v11` -> `receivedimage(v20, v11)`
               *   `move v12 #q0 #t0 v13` (return v12 to initial config)
           
           The plan should satisfy all `receivedimage` and `receivedanalysis` predicates. The rovers are returned to their initial configurations `atconf(v12, v13)` and `atconf(v14, v15)` and have `free(v12, v16)` and `free(v14, v16)`.
           
           --Plan--:
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q3)
           (send_analysis v14 #q3 #y3 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q3 #t5 v15)
           (move v12 v13 #t4 #q5)
           (sample_rock v12 #q5 v7 v16)
           (move v12 #q5 #t13 #q0)
           (send_analysis v12 #q0 #y0 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q0 #t0 v13)
           (move v12 v13 #o2 #o3)
           (calibrate v12 #o3 #o4 v17 v10)
           (take_image v12 #o3 #o4 v17 v10 v11)
           (calibrate v12 #o3 #o4 v18 v10)
           (take_image v12 #o3 #o4 v18 v10 v11)
           (calibrate v12 #o3 #o4 v19 v10)
           (take_image v12 #o3 #o4 v19 v10 v11)
           (calibrate v12 #o3 #o4 v20 v10)
           (take_image v12 #o3 #o4 v20 v10 v11)
           (move v12 #o3 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #t0 v13)

