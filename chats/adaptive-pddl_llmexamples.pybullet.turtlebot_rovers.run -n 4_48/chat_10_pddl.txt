User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v19)
           Atom rock(v3)
           Atom store(v16)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom free(v14, v16)
           Atom rock(v7)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom rock(v5)
           Atom onboard(v10, v14)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom conf(v12, v13)
           Atom type(v1, v2)
           Atom camera(v10)
           Atom rock(v1)
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom type(v4, v2)
           Atom rover(v14)
           Atom free(v12, v16)
           Atom type(v7, v6)
           Atom lander(v9)
           Atom objective(v17)
           Atom atconf(v12, v13)
           Atom objective(v20)
           Atom rock(v8)
           Atom type(v8, v6)
           Atom above(v12, #q3, v3)
           Atom conf(v12, #q3)
           Atom above(v12, #q4, v8)
           Atom conf(v12, #q4)
           Atom imagevisible(v12, #q1, #y1, v20)
           Atom imagerange(v12, #q1, v20)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #q2, #y2, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom imagevisible(v14, #q16, #y8, v17)
           Atom imagerange(v14, #q16, v17)
           Atom conf(v14, #q16)
           Atom ray(#y8)
           Atom above(v14, #q13, v3)
           Atom conf(v14, #q13)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom imagevisible(v14, #q14, #y6, v20)
           Atom imagerange(v14, #q14, v20)
           Atom conf(v14, #q14)
           Atom ray(#y6)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom comvisible(v14, #q8, #y5, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom imagevisible(v14, #q15, #y7, v19)
           Atom imagerange(v14, #q15, v19)
           Atom conf(v14, #q15)
           Atom ray(#y7)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q9, v4)
           Atom conf(v14, #q9)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q17, #y9, v18)
           Atom imagerange(v14, #q17, v18)
           Atom conf(v14, #q17)
           Atom ray(#y9)
           Atom above(v12, #o5, v1)
           Atom above(v14, #q10, v1)
           Atom conf(v14, #q10)
           Atom above(v12, #o5, v7)
           Atom above(v14, #q11, v7)
           Atom conf(v14, #q11)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #t8, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q3, #t11, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v12, #q0, #t7, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t47, #q4)
           Atom motion(v12, #q4, #t6, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q5, #t13, #q0)
           Atom motion(v12, #q0, #t2, #q3)
           Atom motion(v12, #q0, #t12, #q5)
           Atom motion(v12, #q3, #t5, #q0)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q0, #t3, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #t1, #q0)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, v13, #t0, #q1)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, v15, #t37, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q0, #t4, #q2)
           Atom motion(v12, #q1, #t18, #q2)
           Atom motion(v12, #q2, #t40, #q3)
           Atom motion(v12, #q2, #t45, #q5)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #t10, #q0)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #t16, v15)
           Atom motion(v14, #q9, #t21, #q8)
           Atom motion(v14, #q8, #t26, #q9)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, v15, #t15, #q7)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #t20, #q8)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #t35, #q9)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q8, #t27, #q7)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q11, #t23, #q8)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q8, #t29, #q11)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q14, #t32, #q8)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #t42, #q15)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, v15, #t33, #q14)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t19, #q5)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q0, #t9, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q5, #t46, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #t14, #q0)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q2, #t17, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q8, #t28, #q12)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q12, #t24, #q8)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q13, #t25, #q8)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, v15, #t31, #q13)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q17)
           Atom motion(v14, #q8, #o2, #q17)
           Atom motion(v14, #q17, #t38, #q7)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q15, #t34, #q17)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q17, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q17, #t41, #q8)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q15, #t44, #q16)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #t43, #q17)
           Atom motion(v14, #q9, #t39, #q10)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #t36, #q11)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q16, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q17)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q10, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #t22, #q8)
           Atom motion(v14, #q8, #t30, #q10)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q3 v3 v16))
           ((sample_rock v12 #q4 v8 v16))
           ((sample_rock v14 #q10 v1 v16))
           ((sample_rock v14 #q11 v7 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q13 v3 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((sample_rock v14 #q9 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #t12 #q5))
           ((move v12 #q0 #t2 #q3))
           ((move v12 #q0 #t3 #q1))
           ((move v12 #q0 #t4 #q2))
           ((move v12 #q0 #t47 #q4))
           ((move v12 #q0 #t7 v13))
           ((move v12 #q0 #t9 #q6))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q0))
           ((move v12 #q1 #t18 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t10 #q0))
           ((move v12 #q2 #t17 #q6))
           ((move v12 #q2 #t40 #q3))
           ((move v12 #q2 #t45 #q5))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t11 #q4))
           ((move v12 #q3 #t5 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t6 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t13 #q0))
           ((move v12 #q5 #t46 #q6))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t14 #q0))
           ((move v12 #q6 #t19 #q5))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q1))
           ((move v12 v13 #t8 #q3))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q16))
           ((move v14 #q10 #o2 #q17))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t22 #q8))
           ((move v14 #q10 #t36 #q11))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q17))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t23 #q8))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t24 #q8))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t25 #q8))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t32 #q8))
           ((move v14 #q14 #t42 #q15))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t34 #q17))
           ((move v14 #q15 #t44 #q16))
           ((move v14 #q16 #o2 #q10))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t43 #q17))
           ((move v14 #q17 #o2 #q10))
           ((move v14 #q17 #o2 #q11))
           ((move v14 #q17 #o2 #q12))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t38 #q7))
           ((move v14 #q17 #t41 #q8))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t20 #q8))
           ((move v14 #q7 #t35 #q9))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q17))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #t16 v15))
           ((move v14 #q8 #t26 #q9))
           ((move v14 #q8 #t27 #q7))
           ((move v14 #q8 #t28 #q12))
           ((move v14 #q8 #t29 #q11))
           ((move v14 #q8 #t30 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t21 #q8))
           ((move v14 #q9 #t39 #q10))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t15 #q7))
           ((move v14 v15 #t31 #q13))
           ((move v14 v15 #t33 #q14))
           ((move v14 v15 #t37 #q15))
           ((calibrate v12 #q1 #y1 v20 v10))
           ((calibrate v12 #q2 #y2 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #q14 #y6 v20 v10))
           ((calibrate v14 #q15 #y7 v19 v10))
           ((calibrate v14 #q16 #y8 v17 v10))
           ((calibrate v14 #q17 #y9 v18 v10))
           ((take_image v12 #q1 #y1 v20 v10 v11))
           ((take_image v12 #q2 #y2 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #q14 #y6 v20 v10 v11))
           ((take_image v14 #q15 #y7 v19 v10 v11))
           ((take_image v14 #q16 #y8 v17 v10 v11))
           ((take_image v14 #q17 #y9 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y5 v9 v1))
           ((send_analysis v14 #q8 #y5 v9 v7))
           ((send_analysis v14 #q8 #y5 v9 v8))
           ((send_analysis v14 #q8 #y5 v9 v3))
           ((send_analysis v14 #q8 #y5 v9 v5))
           ((send_analysis v14 #q8 #y5 v9 v4))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v20 v11))
           ((send_image v14 #q8 #y5 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a lander (v9), a camera (v10), a store (v16), and various rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There are also different modes (v11) and types (v2, v6) for rocks.
           
           The initial state indicates that:
           - Both rovers v12 and v14 are at their respective initial configurations (v13 and v15) and have free storage (v16).
           - The camera v10 is onboard both rovers and supports mode v11.
           - There are multiple rocks of types v2 (v1, v3, v4) and v6 (v5, v7, v8).
           - There are four objectives: v17, v18, v19, v20.
           - Several motion and visibility predicates are defined, indicating the possible movements and observation points for the rovers.
           
           The goal `new-axiom@0()` can be satisfied if:
           - Both rovers v12 and v14 remain at their current configurations (v13 and v15) (not necessarily, the axiom implies *some* atconf for each rover, which is true at the beginning).
           - Both rovers have free storage (v16) (initially true).
           - Images of all four objectives (v17, v18, v19, v20) have been received in mode v11.
           - Analysis for at least one rock of type v2 (stone) and one rock of type v6 (soil) has been received.
           
           Let's break down the goal into subgoals:
           1. Receive images of all objectives (v17, v18, v19, v20) in mode v11.
           2. Receive analysis of a rock of type v2.
           3. Receive analysis of a rock of type v6.
           
           To achieve goal 1, we need to:
           - Calibrate the camera at a location where the objective is visible.
           - Take an image of the objective.
           - Move to a location where the lander is visible and send the image.
           Since the camera v10 is onboard both rovers, either rover can be used.
           
           To achieve goals 2 and 3, we need to:
           - Sample a rock of type v2 and a rock of type v6.
           - Move to a location where the lander is visible and send the analysis.
           
           Let's use rover v12 for the rock analysis and rover v14 for image capturing and sending.
           
           **For Rock Analysis (Rover v12):**
           - Rock v3 is type v2, and v12 is above v3 at #q3.
           - Rock v8 is type v6, and v12 is above v8 at #q4.
           - Rover v12 is currently at v13 and has free store v16.
           
           1. **Sample v3 (type v2):**
              - Move v12 from v13 to #q3.
              - Sample rock v3.
           2. **Sample v8 (type v6):**
              - Move v12 from #q3 to #q4.
              - Sample rock v8.
           3. **Send Analysis:**
              - Move v12 from #q4 to #q0 (where comvisible is true for v9).
              - Send analysis for v3 and v8.
           
           **For Image Acquisition and Sending (Rover v14):**
           - Objectives v17, v18, v19, v20 need to be imaged.
           - Rover v14 is currently at v15.
           
           Let's check available image and communication points for v14:
           - imagevisible(v14, #q16, #y8, v17)
           - imagevisible(v14, #q14, #y6, v20)
           - imagevisible(v14, #q15, #y7, v19) (v14 is at v15, can move to #q15)
           - imagevisible(v14, #q17, #y9, v18)
           - comvisible(v14, #q8, #y5, v9)
           
           We need to image all four objectives.
           1. **Image v17:**
              - Move v14 from v15 to #q16.
              - Calibrate camera.
              - Take image of v17.
           2. **Image v20:**
              - Move v14 from #q16 to #q14.
              - Calibrate camera.
              - Take image of v20.
           3. **Image v19:**
              - Move v14 from #q14 to #q15.
              - Calibrate camera.
              - Take image of v19.
           4. **Image v18:**
              - Move v14 from #q15 to #q17.
              - Calibrate camera.
              - Take image of v18.
           5. **Send Images:**
              - Move v14 from #q17 to #q8 (where comvisible is true for v9).
              - Send all four images.
           
           Let's combine these into a sequence of actions. Since the rovers can operate independently, we can interleave their actions.
           Since free(v12,v16) and free(v14,v16) are initially true, and sampling a rock fills the store, rover v12 will have a full store after sampling two rocks. To sample two rocks, we need two free stores, or drop one rock before sampling the second. However, the problem statement says "free(?v, ?s)" for "sample_rock" and "full(?v, ?s)" for "drop_rock". So, if `free` becomes `full` after one sample, we need to `drop_rock` before sampling the next one.
           The goal statement "Atom free(v12, v16) Atom free(v14, v16)" is an implicit part of the new-axiom@0(), so we have to ensure the stores are free at the end or if the axiom implies it has to be true throughout. If the goal only requires the final state, then it is fine to have full stores in between. However, since the goal states `free(v12, v16)` and `free(v14, v16)`, the rocks must be dropped after analysis.
           
           Revised plan for Rover v12:
           1. Move v12 to #q3.
           2. Sample v3 (type v2). Store v16 for v12 becomes full.
           3. Move v12 to #q4.
           4. Drop rock v3 to free store v16 for v12.
           5. Sample v8 (type v6). Store v16 for v12 becomes full.
           6. Move v12 to #q0 for communication.
           7. Send analysis for v3.
           8. Send analysis for v8.
           9. Drop rock v8 to free store v16 for v12.
           
           Let's re-evaluate the goals:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `receivedanalysis(v3)` (type v2)
           - `receivedanalysis(v5)` (type v6), or `receivedanalysis(v7)`, or `receivedanalysis(v8)`. Let's pick v8.
           
           The actions in the provided list are not independent. For example, to sample two rocks, we need to drop the first one before sampling the second, because the `sample_rock` action sets `full(?v, ?s)` and the `free(?v, ?s)` precondition for the next sample won't be met. The goal also requires that `free(v12, v16)` and `free(v14, v16)` are true.
           
           Let's execute the plan steps.
           
           **Rover v12 - Rock Analysis:**
           1. `move v12 v13 #t8 #q3` (move from current conf v13 to above rock v3 at #q3)
           2. `sample_rock v12 #q3 v3 v16` (sample rock v3. v12 store v16 becomes full, v3 analyzed)
           3. `drop_rock v12 v16` (v12 store v16 becomes free)
           4. `move v12 #q3 #t11 #q4` (move from above rock v3 at #q3 to above rock v8 at #q4)
           5. `sample_rock v12 #q4 v8 v16` (sample rock v8. v12 store v16 becomes full, v8 analyzed)
           6. `move v12 #q4 #t6 #q0` (move to communication point #q0)
           7. `send_analysis v12 #q0 #y0 v9 v3` (send analysis of v3)
           8. `send_analysis v12 #q0 #y0 v9 v8` (send analysis of v8)
           9. `drop_rock v12 v16` (v12 store v16 becomes free, satisfying goal condition)
           
           **Rover v14 - Image Acquisition and Sending:**
           Rover v14 starts at v15 with free store v16 and camera v10 (supports v11).
           1. `calibrate v14 #q16 #y8 v17 v10` (Calibrate for v17)
           2. `take_image v14 #q16 #y8 v17 v10 v11` (Take image of v17. Camera becomes uncalibrated)
           3. `move v14 v15 #o2 #q14` (Move to #q14 for v20. Note: v14 is currently at #q16, but there is no move action from #q16 directly to #q14 that matches the provided actions for rover v14 that does not change the camera state. I need to be careful with continuous parameters. Let's start from a known position, `v15`, and see if it can reach all target configurations.)
              - It appears there's no direct move from `v15` to `#q16` for `v14` in the `motion` predicates. Let's recheck the available moves for `v14` from `v15`.
              `motion(v14, v15, #o2, v15)` (stays at v15)
              `motion(v14, v15, #t37, #q15)` (moves to #q15)
              `motion(v14, v15, #o2, #q8)` (moves to #q8)
              `motion(v14, v15, #t15, #q7)` (moves to #q7)
              `motion(v14, v15, #o2, #q11)` (moves to #q11)
              `motion(v14, v15, #t31, #q13)` (moves to #q13)
              `motion(v14, v15, #o2, #q17)` (moves to #q17)
              `motion(v14, v15, #t33, #q14)` (moves to #q14)
              `motion(v14, v15, #o2, #q16)` (moves to #q16)
              `motion(v14, v15, #o2, #q10)` (moves to #q10)
           
              Great, `v14` can reach all image points from `v15` directly.
           
           **Rover v14 - Image Acquisition and Sending (Revised):**
           1. `move v14 v15 #o2 #q16` (Move to #q16 for v17)
           2. `calibrate v14 #q16 #y8 v17 v10`
           3. `take_image v14 #q16 #y8 v17 v10 v11`
           4. `move v14 #q16 #o2 #q14` (Move to #q14 for v20)
           5. `calibrate v14 #q14 #y6 v20 v10`
           6. `take_image v14 #q14 #y6 v20 v10 v11`
           7. `move v14 #q14 #t42 #q15` (Move to #q15 for v19)
           8. `calibrate v14 #q15 #y7 v19 v10`
           9. `take_image v14 #q15 #y7 v19 v10 v11`
           10. `move v14 #q15 #t34 #q17` (Move to #q17 for v18)
           11. `calibrate v14 #q17 #y9 v18 v10`
           12. `take_image v14 #q17 #y9 v18 v10 v11`
           13. `move v14 #q17 #t41 #q8` (Move to #q8 for communication)
           14. `send_image v14 #q8 #y5 v9 v17 v11`
           15. `send_image v14 #q8 #y5 v9 v20 v11`
           16. `send_image v14 #q8 #y5 v9 v19 v11`
           17. `send_image v14 #q8 #y5 v9 v18 v11`
           
           This plan covers all required goal conditions and respects the `free` store condition for `v12` by dropping rocks after analysis. `v14` does not sample rocks, so its store remains free.
           
           --Plan--:
           (move v12 v13 #t8 #q3)
           (sample_rock v12 #q3 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q3 #t11 #q4)
           (sample_rock v12 #q4 v8 v16)
           (move v14 v15 #o2 #q16)
           (calibrate v14 #q16 #y8 v17 v10)
           (take_image v14 #q16 #y8 v17 v10 v11)
           (move v14 #q16 #o2 #q14)
           (calibrate v14 #q14 #y6 v20 v10)
           (take_image v14 #q14 #y6 v20 v10 v11)
           (move v14 #q14 #t42 #q15)
           (calibrate v14 #q15 #y7 v19 v10)
           (take_image v14 #q15 #y7 v19 v10 v11)
           (move v14 #q15 #t34 #q17)
           (calibrate v14 #q17 #y9 v18 v10)
           (take_image v14 #q17 #y9 v18 v10 v11)
           (move v12 #q4 #t6 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (send_analysis v12 #q0 #y0 v9 v8)
           (drop_rock v12 v16)
           (move v14 #q17 #t41 #q8)
           (send_image v14 #q8 #y5 v9 v17 v11)
           (send_image v14 #q8 #y5 v9 v20 v11)
           (send_image v14 #q8 #y5 v9 v19 v11)
           (send_image v14 #q8 #y5 v9 v18 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the axiom `new-axiom@0()` was not satisfied. Let's re-examine the `new-axiom@0()`:
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           
           The key missing conditions that might have led to the previous plan failing are:
           1. `atconf(v12, v13)` must be true at the end.
           2. `atconf(v14, v15)` must be true at the end.
           3. `free(v12, v16)` must be true at the end.
           4. `free(v14, v16)` must be true at the end.
           
           My previous plan did ensure `free(v12, v16)` and `free(v14, v16)` by explicitly dropping sampled rocks. However, the rovers were left at their communication configurations (`#q0` for v12 and `#q8` for v14), not at their initial configurations (`v13` and `v15`). This is a critical detail.
           
           Therefore, after completing all tasks (sending analyses and images), both rovers must return to their initial configurations (v13 for v12, v15 for v14).
           
           Let's adjust the plan:
           
           **Rover v12 - Rock Analysis & Return:**
           1. `move v12 v13 #t8 #q3` (move from current conf v13 to above rock v3 at #q3)
           2. `sample_rock v12 #q3 v3 v16` (sample rock v3. v12 store v16 becomes full, v3 analyzed)
           3. `drop_rock v12 v16` (v12 store v16 becomes free)
           4. `move v12 #q3 #t11 #q4` (move from above rock v3 at #q3 to above rock v8 at #q4)
           5. `sample_rock v12 #q4 v8 v16` (sample rock v8. v12 store v16 becomes full, v8 analyzed)
           6. `move v12 #q4 #t6 #q0` (move to communication point #q0)
           7. `send_analysis v12 #q0 #y0 v9 v3` (send analysis of v3)
           8. `send_analysis v12 #q0 #y0 v9 v8` (send analysis of v8)
           9. `drop_rock v12 v16` (v12 store v16 becomes free)
           10. `move v12 #q0 #t7 v13` (Return to initial configuration v13)
           
           **Rover v14 - Image Acquisition, Sending & Return:**
           1. `move v14 v15 #o2 #q16` (Move to #q16 for v17)
           2. `calibrate v14 #q16 #y8 v17 v10`
           3. `take_image v14 #q16 #y8 v17 v10 v11`
           4. `move v14 #q16 #o2 #q14` (Move to #q14 for v20)
           5. `calibrate v14 #q14 #y6 v20 v10`
           6. `take_image v14 #q14 #y6 v20 v10 v11`
           7. `move v14 #q14 #t42 #q15` (Move to #q15 for v19)
           8. `calibrate v14 #q15 #y7 v19 v10`
           9. `take_image v14 #q15 #y7 v19 v10 v11`
           10. `move v14 #q15 #t34 #q17` (Move to #q17 for v18)
           11. `calibrate v14 #q17 #y9 v18 v10`
           12. `take_image v14 #q17 #y9 v18 v10 v11`
           13. `move v14 #q17 #t41 #q8` (Move to #q8 for communication)
           14. `send_image v14 #q8 #y5 v9 v17 v11`
           15. `send_image v14 #q8 #y5 v9 v20 v11`
           16. `send_image v14 #q8 #y5 v9 v19 v11`
           17. `send_image v14 #q8 #y5 v9 v18 v11`
           18. `move v14 #q8 #t16 v15` (Return to initial configuration v15)
           
           This revised plan addresses the `atconf` requirements of the goal axiom by ensuring both rovers return to their starting positions.
           
           --Plan--:
           (move v12 v13 #t8 #q3)
           (sample_rock v12 #q3 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q3 #t11 #q4)
           (sample_rock v12 #q4 v8 v16)
           (move v14 v15 #o2 #q16)
           (calibrate v14 #q16 #y8 v17 v10)
           (take_image v14 #q16 #y8 v17 v10 v11)
           (move v14 #q16 #o2 #q14)
           (calibrate v14 #q14 #y6 v20 v10)
           (take_image v14 #q14 #y6 v20 v10 v11)
           (move v14 #q14 #t42 #q15)
           (calibrate v14 #q15 #y7 v19 v10)
           (take_image v14 #q15 #y7 v19 v10 v11)
           (move v14 #q15 #t34 #q17)
           (calibrate v14 #q17 #y9 v18 v10)
           (take_image v14 #q17 #y9 v18 v10 v11)
           (move v12 #q4 #t6 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (send_analysis v12 #q0 #y0 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q0 #t7 v13)
           (move v14 #q17 #t41 #q8)
           (send_image v14 #q8 #y5 v9 v17 v11)
           (send_image v14 #q8 #y5 v9 v20 v11)
           (send_image v14 #q8 #y5 v9 v19 v11)
           (send_image v14 #q8 #y5 v9 v18 v11)
           (move v14 #q8 #t16 v15)

