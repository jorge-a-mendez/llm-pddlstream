User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v19)
           Atom rock(v3)
           Atom store(v16)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom free(v14, v16)
           Atom rock(v7)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom rock(v5)
           Atom onboard(v10, v14)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom conf(v12, v13)
           Atom type(v1, v2)
           Atom camera(v10)
           Atom rock(v1)
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom type(v4, v2)
           Atom rover(v14)
           Atom free(v12, v16)
           Atom type(v7, v6)
           Atom lander(v9)
           Atom objective(v17)
           Atom atconf(v12, v13)
           Atom objective(v20)
           Atom rock(v8)
           Atom type(v8, v6)
           Atom above(v12, #q3, v3)
           Atom conf(v12, #q3)
           Atom above(v12, #q4, v8)
           Atom conf(v12, #q4)
           Atom imagevisible(v12, #q1, #y1, v20)
           Atom imagerange(v12, #q1, v20)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #q2, #y2, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom imagevisible(v14, #q16, #y8, v17)
           Atom imagerange(v14, #q16, v17)
           Atom conf(v14, #q16)
           Atom ray(#y8)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom imagevisible(v14, #q14, #y6, v20)
           Atom imagerange(v14, #q14, v20)
           Atom conf(v14, #q14)
           Atom ray(#y6)
           Atom comvisible(v14, #q8, #y5, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom above(v14, #q13, v3)
           Atom conf(v14, #q13)
           Atom imagevisible(v14, #q15, #y7, v19)
           Atom imagerange(v14, #q15, v19)
           Atom conf(v14, #q15)
           Atom ray(#y7)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v4)
           Atom above(v14, #q9, v4)
           Atom conf(v14, #q9)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q17, #y9, v18)
           Atom imagerange(v14, #q17, v18)
           Atom conf(v14, #q17)
           Atom ray(#y9)
           Atom above(v14, #q10, v1)
           Atom conf(v14, #q10)
           Atom above(v12, #o5, v1)
           Atom above(v14, #q11, v7)
           Atom conf(v14, #q11)
           Atom above(v12, #o5, v7)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t8, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #t11, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #t6, #q0)
           Atom motion(v12, #q0, #t2, #q3)
           Atom motion(v12, #q3, #t5, #q0)
           Atom motion(v12, #q0, #t12, #q5)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q5, #t13, #q0)
           Atom motion(v12, #q0, #t7, v13)
           Atom motion(v12, #q1, #t1, #q0)
           Atom motion(v12, v13, #t0, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q0, #t3, #q1)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, v15, #t37, #q15)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v12, #q1, #t18, #q2)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q0, #t4, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #t40, #q3)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #t10, #q0)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q11, #t23, #q8)
           Atom motion(v14, #q8, #t16, v15)
           Atom motion(v14, #q12, #t24, #q8)
           Atom motion(v14, #q8, #t29, #q11)
           Atom motion(v14, #q8, #t28, #q12)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #t21, #q8)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q8, #t26, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #t31, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q13, #t25, #q8)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #t14, #q0)
           Atom motion(v12, #q2, #t17, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q0, #t9, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #t19, #q5)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #t32, #q8)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, v15, #t33, #q14)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q7, #t35, #q9)
           Atom motion(v14, #q7, #t20, #q8)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, v15, #t15, #q7)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q8, #t27, #q7)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q9, #t39, #q10)
           Atom motion(v14, #q10, #t36, #q11)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q10, #t22, #q8)
           Atom motion(v14, #q8, #t30, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q17)
           Atom motion(v14, #q17, #t38, #q7)
           Atom motion(v14, #q8, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q10)
           Atom motion(v14, #q15, #t34, #q17)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q11, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q12)
           Atom motion(v14, #q17, #o2, #q11)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q10, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q10)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q3 v3 v16))
           ((sample_rock v12 #q4 v8 v16))
           ((sample_rock v14 #q10 v1 v16))
           ((sample_rock v14 #q11 v7 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q13 v3 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((sample_rock v14 #q9 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #t12 #q5))
           ((move v12 #q0 #t2 #q3))
           ((move v12 #q0 #t3 #q1))
           ((move v12 #q0 #t4 #q2))
           ((move v12 #q0 #t7 v13))
           ((move v12 #q0 #t9 #q6))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q0))
           ((move v12 #q1 #t18 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t10 #q0))
           ((move v12 #q2 #t17 #q6))
           ((move v12 #q2 #t40 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t11 #q4))
           ((move v12 #q3 #t5 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t6 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t13 #q0))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t14 #q0))
           ((move v12 #q6 #t19 #q5))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q1))
           ((move v12 v13 #t8 #q3))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q16))
           ((move v14 #q10 #o2 #q17))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t22 #q8))
           ((move v14 #q10 #t36 #q11))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q17))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t23 #q8))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t24 #q8))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t25 #q8))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t32 #q8))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t34 #q17))
           ((move v14 #q16 #o2 #q10))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q17 #o2 #q10))
           ((move v14 #q17 #o2 #q11))
           ((move v14 #q17 #o2 #q12))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q8))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t38 #q7))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t20 #q8))
           ((move v14 #q7 #t35 #q9))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q17))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #t16 v15))
           ((move v14 #q8 #t26 #q9))
           ((move v14 #q8 #t27 #q7))
           ((move v14 #q8 #t28 #q12))
           ((move v14 #q8 #t29 #q11))
           ((move v14 #q8 #t30 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t21 #q8))
           ((move v14 #q9 #t39 #q10))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t15 #q7))
           ((move v14 v15 #t31 #q13))
           ((move v14 v15 #t33 #q14))
           ((move v14 v15 #t37 #q15))
           ((calibrate v12 #q1 #y1 v20 v10))
           ((calibrate v12 #q2 #y2 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #q14 #y6 v20 v10))
           ((calibrate v14 #q15 #y7 v19 v10))
           ((calibrate v14 #q16 #y8 v17 v10))
           ((calibrate v14 #q17 #y9 v18 v10))
           ((take_image v12 #q1 #y1 v20 v10 v11))
           ((take_image v12 #q2 #y2 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #q14 #y6 v20 v10 v11))
           ((take_image v14 #q15 #y7 v19 v10 v11))
           ((take_image v14 #q16 #y8 v17 v10 v11))
           ((take_image v14 #q17 #y9 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y5 v9 v1))
           ((send_analysis v14 #q8 #y5 v9 v7))
           ((send_analysis v14 #q8 #y5 v9 v8))
           ((send_analysis v14 #q8 #y5 v9 v3))
           ((send_analysis v14 #q8 #y5 v9 v5))
           ((send_analysis v14 #q8 #y5 v9 v4))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v20 v11))
           ((send_image v14 #q8 #y5 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, each equipped with a camera `v10` that supports the imaging mode `v11`. There are several rock samples (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) of different types (`v2` for `v1`, `v3`, `v4` and `v6` for `v5`, `v7`, `v8`), and several objectives (`v17`, `v18`, `v19`, `v20`) that can be imaged. Both rovers have a storage unit `v16` which is currently free. A lander `v9` serves as a communication relay. The goal is to achieve `new-axiom@0()`, which requires several conditions:
           
           1.  `atconf(v12, v13)`: Rover `v12` is at configuration `v13`. This is already true.
           2.  `atconf(v14, v15)`: Rover `v14` is at configuration `v15`. This is already true.
           3.  `free(v12, v16)`: Rover `v12` has a free store `v16`. This is already true.
           4.  `free(v14, v16)`: Rover `v14` has a free store `v16`. This is already true.
           5.  `receivedimage(v17, v11)`: Image of objective `v17` in mode `v11` has been received.
           6.  `receivedimage(v18, v11)`: Image of objective `v18` in mode `v11` has been received.
           7.  `receivedimage(v19, v11)`: Image of objective `v19` in mode `v11` has been received.
           8.  `receivedimage(v20, v11)`: Image of objective `v19` in mode `v11` has been received.
           9.  `type(?stone, v2)`: Some rock is of type `v2`. (e.g., `v1`, `v3`, `v4`)
           10. `receivedanalysis(?stone)`: Analysis of that rock of type `v2` has been received.
           11. `type(?soil, v6)`: Some rock is of type `v6`. (e.g., `v5`, `v7`, `v8`)
           12. `receivedanalysis(?soil)`: Analysis of that rock of type `v6` has been received.
           
           To achieve the image reception goals, both rovers have visibility to different objectives from different configurations. They also have communication visibility to the lander `v9`. To achieve the rock analysis goals, we need to sample a rock of type `v2` and a rock of type `v6`, then send their analyses.
           
           Here's a breakdown of the plan:
           
           *   **Image Reception**:
               *   Rover `v12` can image `v17`, `v18`, `v19`, `v20`.
               *   Rover `v14` can image `v17`, `v18`, `v19`, `v20`.
               *   We need to calibrate the camera before taking an image.
               *   We need to be at the correct configuration for imaging.
               *   We need to be at a communication configuration to send the images.
               *   We can have `v12` image `v20` and `v17`, then send them.
               *   We can have `v14` image `v19` and `v18`, then send them.
           
           *   **Rock Analysis**:
               *   Rover `v12` can sample `v3` (type `v2`) and `v8` (type `v6`) from specific configurations.
               *   Rover `v14` can sample `v3` (type `v2`) and `v8` (type `v6`) from specific configurations.
               *   We will use `v12` to sample `v3` and `v8`.
               *   After sampling, the store will be `full`, so we need to `drop_rock` to free it up for the second sample, then `sample_rock` again.
               *   We will need to be at a communication configuration to send the analyses.
           
           Let's refine the plan:
           
           1.  **Rover `v12` actions:**
               *   Calibrate camera `v10` to image `v20`.
               *   Take image of `v20`.
               *   Calibrate camera `v10` to image `v17`.
               *   Take image of `v17`.
               *   Move to a configuration where it can communicate (e.g., `#q0`).
               *   Send image of `v20`.
               *   Send image of `v17`.
               *   Move to `above(v12, #q3, v3)` to sample rock `v3`.
               *   Sample rock `v3` (type `v2`).
               *   Move to `above(v12, #q4, v8)` to sample rock `v8`. This also requires dropping the first rock.
               *   Drop rock `v3`.
               *   Sample rock `v8` (type `v6`).
               *   Move to a configuration where it can communicate (e.g., `#q0`).
               *   Send analysis of `v3`.
               *   Send analysis of `v8`.
           
           2.  **Rover `v14` actions:**
               *   Calibrate camera `v10` to image `v19`.
               *   Take image of `v19`.
               *   Calibrate camera `v10` to image `v18`.
               *   Take image of `v18`.
               *   Move to a configuration where it can communicate (e.g., `#q8`).
               *   Send image of `v19`.
               *   Send image of `v18`.
           
           Checking preconditions:
           - `atconf` changes with `move`.
           - `calibrated` is set by `calibrate` and undone by `take_image`. So we need to calibrate for each image.
           - `haveimage` is set by `take_image`.
           - `receivedimage` is set by `send_image`.
           - `free` becomes `full` with `sample_rock` and `full` becomes `free` with `drop_rock`.
           - `analyzed` is set by `sample_rock`.
           - `receivedanalysis` is set by `send_analysis`.
           
           All necessary moves are available from the `motion` facts.
           
           Let's create the plan step-by-step.
           
           Rover v12 is at `v13`. It needs to image `v20` and `v17`. `imagevisible(v12, #q1, #y1, v20)` and `imagevisible(v12, #q2, #y2, v17)`. It can communicate from `q0`.
           Rover v14 is at `v15`. It needs to image `v19` and `v18`. `imagevisible(v14, #q15, #y7, v19)` and `imagevisible(v14, #q17, #y9, v18)`. It can communicate from `q8`.
           
           --Plan--:
           (move v12 v13 #t0 #q1)
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t18 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #t10 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v14 v15 #t37 #q15)
           (calibrate v14 #q15 #y7 v19 v10)
           (take_image v14 #q15 #y7 v19 v10 v11)
           (move v14 #q15 #t34 #q17)
           (calibrate v14 #q17 #y9 v18 v10)
           (take_image v14 #q17 #y9 v18 v10 v11)
           (move v14 #q17 #o2 #q8)
           (send_image v14 #q8 #y5 v9 v19 v11)
           (send_image v14 #q8 #y5 v9 v18 v11)
           (move v12 #q0 #t2 #q3)
           (sample_rock v12 #q3 v3 v16)
           (move v12 #q3 #t11 #q4)
           (drop_rock v12 v16)
           (sample_rock v12 #q4 v8 v16)
           (move v12 #q4 #t6 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (send_analysis v12 #q0 #y0 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. I need to ensure all parts of the axiom are covered. The axiom `new-axiom@0()` requires:
           
           1.  `atconf(v12, v13)`: (Already true)
           2.  `atconf(v14, v15)`: (Already true)
           3.  `free(v12, v16)`: (Already true initially, but modified by `sample_rock` and `drop_rock`)
           4.  `free(v14, v16)`: (Already true initially)
           5.  `receivedimage(v17, v11)`: (Achieved by previous plan)
           6.  `receivedimage(v18, v11)`: (Achieved by previous plan)
           7.  `receivedimage(v19, v11)`: (Achieved by previous plan)
           8.  `receivedimage(v20, v11)`: (Achieved by previous plan)
           9.  `type(?stone, v2)` and `receivedanalysis(?stone)`: This means we need to sample and send analysis for a rock of type `v2` (e.g., `v3`). (Achieved by previous plan)
           10. `type(?soil, v6)` and `receivedanalysis(?soil)`: This means we need to sample and send analysis for a rock of type `v6` (e.g., `v8`). (Achieved by previous plan)
           
           Looking closely at the `new-axiom@0()` definition:
           `Atom atconf(v12, v13)` (True initially, and we ended with `v12` at `q0`, not `v13`)
           `Atom atconf(v14, v15)` (True initially, and we ended with `v14` at `q8`, not `v15`)
           This is the issue. The rovers need to be back at `v13` and `v15` respectively at the end of the plan.
           
           Revised Plan:
           
           1.  **Rover `v12` actions:**
               *   Image `v20` and `v17`.
               *   Send images of `v20` and `v17`.
               *   Sample rock `v3` (type `v2`).
               *   Drop rock `v3`.
               *   Sample rock `v8` (type `v6`).
               *   Send analyses of `v3` and `v8`.
               *   Move `v12` back to configuration `v13`.
           
           2.  **Rover `v14` actions:**
               *   Image `v19` and `v18`.
               *   Send images of `v19` and `v18`.
               *   Move `v14` back to configuration `v15`.
           
           The initial configurations for `v12` is `v13` and for `v14` is `v15`.
           `imagevisible(v12, #q1, #y1, v20)`
           `imagevisible(v12, #q2, #y2, v17)`
           `comvisible(v12, #q0, #y0, v9)`
           `above(v12, #q3, v3)`
           `above(v12, #q4, v8)`
           
           `imagevisible(v14, #q15, #y7, v19)`
           `imagevisible(v14, #q17, #y9, v18)`
           `comvisible(v14, #q8, #y5, v9)`
           
           I will add the final move actions for both rovers to return to their initial configurations.
           
           --Plan--:
           (move v12 v13 #t0 #q1)
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t18 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #t10 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v14 v15 #t37 #q15)
           (calibrate v14 #q15 #y7 v19 v10)
           (take_image v14 #q15 #y7 v19 v10 v11)
           (move v14 #q15 #t34 #q17)
           (calibrate v14 #q17 #y9 v18 v10)
           (take_image v14 #q17 #y9 v18 v10 v11)
           (move v14 #q17 #o2 #q8)
           (send_image v14 #q8 #y5 v9 v19 v11)
           (send_image v14 #q8 #y5 v9 v18 v11)
           (move v12 #q0 #t2 #q3)
           (sample_rock v12 #q3 v3 v16)
           (move v12 #q3 #t11 #q4)
           (drop_rock v12 v16)
           (sample_rock v12 #q4 v8 v16)
           (move v12 #q4 #t6 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (send_analysis v12 #q0 #y0 v9 v8)
           (move v12 #q0 #t7 v13)
           (move v14 #q8 #t16 v15)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed again, indicating `Atom new-axiom@0()` is not satisfied. I've re-examined the requirements for this axiom and the previous plan.
           
           The `new-axiom@0()` goal states:
           *   `atconf(v12, v13)`: Rover `v12` must end at configuration `v13`.
           *   `atconf(v14, v15)`: Rover `v14` must end at configuration `v15`.
           *   `free(v12, v16)`: Rover `v12`'s store `v16` must be free.
           *   `free(v14, v16)`: Rover `v14`'s store `v16` must be free.
           *   `receivedimage(v17, v11)`
           *   `receivedimage(v18, v11)`
           *   `receivedimage(v19, v11)`
           *   `receivedimage(v20, v11)`
           *   `receivedanalysis(?stone)` for `type(?stone, v2)` (e.g., `v3`)
           *   `receivedanalysis(?soil)` for `type(?soil, v6)` (e.g., `v8`)
           
           My previous plan should have satisfied the `atconf` requirements by adding the final `move` actions. Let me re-verify the `free(v12, v16)` and `free(v14, v16)` conditions.
           
           In the previous plan for `v12`:
           1.  `sample_rock v12 #q3 v3 v16` (makes `v16` full)
           2.  `drop_rock v12 v16` (makes `v16` free)
           3.  `sample_rock v12 #q4 v8 v16` (makes `v16` full again)
           
           So at the end of the `v12` actions, `free(v12, v16)` would be false, because `v12` sampled `v8` and its store `v16` is now `full`. This is the reason for the failure. I need to make sure both stores are free at the end.
           
           To fix this, `v12` needs to `drop_rock` after sampling `v8`.
           
           The goal `free(v14, v16)` is true initially and `v14` does not sample any rocks, so it remains true.
           
           Corrected Plan will involve adding one more `drop_rock` action for `v12`.
           
           --Plan--:
           (move v12 v13 #t0 #q1)
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t18 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #t10 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v14 v15 #t37 #q15)
           (calibrate v14 #q15 #y7 v19 v10)
           (take_image v14 #q15 #y7 v19 v10 v11)
           (move v14 #q15 #t34 #q17)
           (calibrate v14 #q17 #y9 v18 v10)
           (take_image v14 #q17 #y9 v18 v10 v11)
           (move v14 #q17 #o2 #q8)
           (send_image v14 #q8 #y5 v9 v19 v11)
           (send_image v14 #q8 #y5 v9 v18 v11)
           (move v12 #q0 #t2 #q3)
           (sample_rock v12 #q3 v3 v16)
           (move v12 #q3 #t11 #q4)
           (drop_rock v12 v16)
           (sample_rock v12 #q4 v8 v16)
           (drop_rock v12 v16)
           (move v12 #q4 #t6 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (send_analysis v12 #q0 #y0 v9 v8)
           (move v12 #q0 #t7 v13)
           (move v14 #q8 #t16 v15)

