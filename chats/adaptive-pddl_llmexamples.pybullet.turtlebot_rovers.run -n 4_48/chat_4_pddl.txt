User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v19)
           Atom rock(v3)
           Atom store(v16)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom free(v14, v16)
           Atom rock(v7)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom rock(v5)
           Atom onboard(v10, v14)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom conf(v12, v13)
           Atom type(v1, v2)
           Atom camera(v10)
           Atom rock(v1)
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom type(v4, v2)
           Atom rover(v14)
           Atom free(v12, v16)
           Atom type(v7, v6)
           Atom lander(v9)
           Atom objective(v17)
           Atom atconf(v12, v13)
           Atom objective(v20)
           Atom rock(v8)
           Atom type(v8, v6)
           Atom above(v12, #q3, v3)
           Atom conf(v12, #q3)
           Atom above(v12, #q4, v8)
           Atom conf(v12, #q4)
           Atom imagevisible(v12, #q1, #y1, v20)
           Atom imagerange(v12, #q1, v20)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #q2, #y2, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q13, v3)
           Atom conf(v14, #q13)
           Atom comvisible(v14, #q8, #y5, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q9, v4)
           Atom conf(v14, #q9)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #q10, v1)
           Atom conf(v14, #q10)
           Atom above(v12, #o5, v1)
           Atom above(v14, #q11, v7)
           Atom conf(v14, #q11)
           Atom above(v12, #o5, v7)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v12, v13, #t8, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #t11, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #t7, v13)
           Atom motion(v12, #q4, #t6, #q0)
           Atom motion(v12, #q3, #t5, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t2, #q3)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t1, #q0)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q0, #t3, #q1)
           Atom motion(v12, v13, #t0, #q1)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v12, #q1, #t18, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q0, #t4, #q2)
           Atom motion(v12, #q2, #t10, #q0)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #t15, #q7)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q8, #t16, v15)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q9, #t21, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q11, #t23, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q7, #t20, #q8)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #t14, #q0)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q2, #t17, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q0, #t9, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q13, #t25, #q8)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #t22, #q8)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q12, #t24, #q8)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #t13, #q0)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q6, #t19, #q5)
           Atom motion(v12, #q0, #t12, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #o3, #o2, #q13)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #q13, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #o3, #o2, #q8)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q3 v3 v16))
           ((sample_rock v12 #q4 v8 v16))
           ((sample_rock v14 #q10 v1 v16))
           ((sample_rock v14 #q11 v7 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q13 v3 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((sample_rock v14 #q9 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #t12 #q5))
           ((move v12 #q0 #t2 #q3))
           ((move v12 #q0 #t3 #q1))
           ((move v12 #q0 #t4 #q2))
           ((move v12 #q0 #t7 v13))
           ((move v12 #q0 #t9 #q6))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q0))
           ((move v12 #q1 #t18 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t10 #q0))
           ((move v12 #q2 #t17 #q6))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t11 #q4))
           ((move v12 #q3 #t5 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t6 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t13 #q0))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t14 #q0))
           ((move v12 #q6 #t19 #q5))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q1))
           ((move v12 v13 #t8 #q3))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q13))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t22 #q8))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t23 #q8))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t24 #q8))
           ((move v14 #q13 #o2 #o3))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t25 #q8))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t20 #q8))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #t16 v15))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t21 #q8))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t15 #q7))
           ((calibrate v12 #q1 #y1 v20 v10))
           ((calibrate v12 #q2 #y2 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q1 #y1 v20 v10 v11))
           ((take_image v12 #q2 #y2 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y5 v9 v1))
           ((send_analysis v14 #q8 #y5 v9 v7))
           ((send_analysis v14 #q8 #y5 v9 v8))
           ((send_analysis v14 #q8 #y5 v9 v3))
           ((send_analysis v14 #q8 #y5 v9 v5))
           ((send_analysis v14 #q8 #y5 v9 v4))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to satisfy the `new-axiom@0` which implies:
           1. Both rovers (v12 and v14) are at their current configurations (which is already true).
           2. Both rovers have free storage (which is already true).
           3. All four objectives (v17, v18, v19, v20) have their images received with mode v11.
           4. All rocks (v1, v3, v4, v5, v7, v8) of type v2 and v6 have their analysis received.
           
           Let's break down the plan into sub-goals:
           
           **Sub-goal 1: Receive all images**
           - Rover v12 can take images of v17, v18, v19, v20.
           - Rover v14 can also take images of v17, v18, v19, v20.
           
           We need to calibrate the camera before taking an image. Then, after taking the image, send it to the lander.
           
           **Sub-goal 2: Receive all rock analyses**
           - There are rocks v1, v3, v4, v5, v7, v8.
           - Some rocks are type v2 (v1, v3, v4) and some are type v6 (v5, v7, v8).
           - Rover v12 can sample v1, v3, v4, v5, v7, v8 (based on `above` predicates).
           - Rover v14 can sample v1, v3, v4, v5, v7, v8 (based on `above` predicates).
           
           We need to move the rovers to positions above the rocks, sample them, and then send the analysis. Since there's only one store (v16) for each rover and sampling fills it (`full(?v, ?s)`), we might need to `drop_rock` if a rover needs to sample more rocks than its capacity (which appears to be 1 since `full` is set after one sample). However, the goal doesn't require all rocks to be sampled by the same rover. The key is to achieve `receivedanalysis(?r)` for all rocks.
           
           Let's organize the plan. We can use rover v12 to take images and rover v14 to analyze rocks, or split tasks as needed.
           
           **Image Collection Plan:**
           - Rover v12 is at `v13`.
           - Calibrate v12 for v20, take image, send image.
           - Calibrate v12 for v17, take image, send image.
           - Calibrate v12 for v18, take image, send image.
           - Calibrate v12 for v19, take image, send image.
           (This needs to move v12 to various configs and then to `q0` for sending).
           
           **Rock Analysis Plan:**
           - Rover v14 is at `v15`.
           - Sample rock v3 (type v2) at `q13`
           - Send analysis for v3
           - Drop rock
           - Sample rock v4 (type v2) at `q9`
           - Send analysis for v4
           - Drop rock
           - Sample rock v1 (type v2) at `q10`
           - Send analysis for v1
           - Drop rock
           - Sample rock v5 (type v6) at `q7`
           - Send analysis for v5
           - Drop rock
           - Sample rock v7 (type v6) at `q11`
           - Send analysis for v7
           - Drop rock
           - Sample rock v8 (type v6) at `q12`
           - Send analysis for v8
           - Drop rock
           
           Let's try to make the plan more efficient by using both rovers concurrently for different parts of the goal.
           Rover v12 will focus on images, and Rover v14 will focus on rock analysis.
           
           **Rover v12 (Images):**
           Current at `v13`.
           To get all images:
           1. `calibrate v12 #q1 #y1 v20 v10` (at `q1`)
           2. `take_image v12 #q1 #y1 v20 v10 v11`
           3. `move v12 #q1 #t1 #q0` (to `q0` for communication)
           4. `send_image v12 #q0 #y0 v9 v20 v11`
           5. `move v12 #q0 #t3 #q1` (back to `q1` or move to another image config)
           6. `calibrate v12 #q2 #y2 v17 v10` (at `q2`) - Needs to move to `q2`
           7. `move v12 #q1 #t18 #q2`
           8. `take_image v12 #q2 #y2 v17 v10 v11`
           9. `move v12 #q2 #t10 #q0`
           10. `send_image v12 #q0 #y0 v9 v17 v11`
           11. `move v12 #q0 #t12 #q5`
           12. `calibrate v12 #q5 #y3 v18 v10`
           13. `take_image v12 #q5 #y3 v18 v10 v11`
           14. `move v12 #q5 #t13 #q0`
           15. `send_image v12 #q0 #y0 v9 v18 v11`
           16. `move v12 #q0 #t9 #q6`
           17. `calibrate v12 #q6 #y4 v19 v10`
           18. `take_image v12 #q6 #y4 v19 v10 v11`
           19. `move v12 #q6 #t14 #q0`
           20. `send_image v12 #q0 #y0 v9 v19 v11`
           
           **Rover v14 (Rock Analysis):**
           Current at `v15`.
           Rocks to analyze: v1, v3, v4, v5, v7, v8.
           Need to `sample_rock`, then `send_analysis`, then `drop_rock`.
           1. `move v14 v15 #o2 #q13` (to `q13` for rock v3)
           2. `sample_rock v14 #q13 v3 v16`
           3. `move v14 #q13 #t25 #q8` (to `q8` for communication)
           4. `send_analysis v14 #q8 #y5 v9 v3`
           5. `drop_rock v14 v16`
           6. `move v14 #q8 #o2 #q9` (to `q9` for rock v4)
           7. `sample_rock v14 #q9 v4 v16`
           8. `move v14 #q9 #t21 #q8`
           9. `send_analysis v14 #q8 #y5 v9 v4`
           10. `drop_rock v14 v16`
           11. `move v14 #q8 #o2 #q10` (to `q10` for rock v1)
           12. `sample_rock v14 #q10 v1 v16`
           13. `move v14 #q10 #t22 #q8`
           14. `send_analysis v14 #q8 #y5 v9 v1`
           15. `drop_rock v14 v16`
           16. `move v14 #q8 #o2 #q7` (to `q7` for rock v5)
           17. `sample_rock v14 #q7 v5 v16`
           18. `move v14 #q7 #t20 #q8`
           19. `send_analysis v14 #q8 #y5 v9 v5`
           20. `drop_rock v14 v16`
           21. `move v14 #q8 #o2 #q11` (to `q11` for rock v7)
           22. `sample_rock v14 #q11 v7 v16`
           23. `move v14 #q11 #t23 #q8`
           24. `send_analysis v14 #q8 #y5 v9 v7`
           25. `drop_rock v14 v16`
           26. `move v14 #q8 #o2 #q12` (to `q12` for rock v8)
           27. `sample_rock v14 #q12 v8 v16`
           28. `move v14 #q12 #t24 #q8`
           29. `send_analysis v14 #q8 #y5 v9 v8`
           30. `drop_rock v14 v16`
           
           This plan covers all the requirements for `new-axiom@0()`.
           
           --Plan--:
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t1 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #t3 #q1)
           (move v12 #q1 #t18 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #t10 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t12 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #t13 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #t9 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t14 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v14 v15 #o2 #q13)
           (sample_rock v14 #q13 v3 v16)
           (move v14 #q13 #t25 #q8)
           (send_analysis v14 #q8 #y5 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q9)
           (sample_rock v14 #q9 v4 v16)
           (move v14 #q9 #t21 #q8)
           (send_analysis v14 #q8 #y5 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q10)
           (sample_rock v14 #q10 v1 v16)
           (move v14 #q10 #t22 #q8)
           (send_analysis v14 #q8 #y5 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q7)
           (sample_rock v14 #q7 v5 v16)
           (move v14 #q7 #t20 #q8)
           (send_analysis v14 #q8 #y5 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q11)
           (sample_rock v14 #q11 v7 v16)
           (move v14 #q11 #t23 #q8)
           (send_analysis v14 #q8 #y5 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q12)
           (sample_rock v14 #q12 v8 v16)
           (move v14 #q12 #t24 #q8)
           (send_analysis v14 #q8 #y5 v9 v8)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. This axiom is a complex conjunction of several facts. Let's re-examine the goal `new-axiom@0()` and make sure all its components are met.
           
           The `new-axiom@0()` requires:
           - `atconf(v12, v13)` and `atconf(v14, v15)`: These are initially true. My previous plan involved moving the rovers, but they eventually returned to these states or were at other valid states for their respective tasks. The problem is that the axiom implicitly means these states must be true *at the end of the plan*. This means after all actions, the rovers must be back at `v13` and `v15` respectively, or at a configuration that makes this true. However, based on the problem description, `atconf(?v, ?q)` is a state and the axiom seems to indicate these *specific* configurations should be true. This might be a misunderstanding on my part. The axioms usually define *derived predicates* that become true if the conditions are met, not necessarily stating a final state. However, if the goal is `new-axiom@0()`, then the *final state* must have all the atoms of the conjunction true. I will ensure the rovers end up at their initial configurations, or if it doesn't matter, ensure the necessary conditions are met. Looking at previous successful plans in other domains, derived axioms as goals usually imply that all of the sub-conditions in the axiom need to be true at the final state. So, `atconf(v12, v13)` and `atconf(v14, v15)` must be true at the end.
           - `free(v12, v16)` and `free(v14, v16)`: This means both rovers' stores must be empty at the end. My previous plan ensures this by calling `drop_rock` after each sample.
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: All images must be successfully sent. My previous plan covered this.
           - `receivedanalysis(?stone)` (where stone is type `v2`) and `receivedanalysis(?soil)` (where soil is type `v6`). This means all rocks of type v2 (v1, v3, v4) and v6 (v5, v7, v8) must have their analysis received. My previous plan covered this.
           
           The key issue might be the `atconf(v12, v13)` and `atconf(v14, v15)` predicates at the *end* of the plan. My previous plan left `v12` at `#q0` and `v14` at `#q8`. I need to add final `move` actions to bring them back to `v13` and `v15` respectively.
           
           Let's adjust the plan by adding final moves for both rovers to their initial configurations.
           
           **Rover v12 (Images):**
           After sending the last image, `v12` is at `#q0`. Need to move `v12` to `v13`.
           - The last `send_image` leaves `v12` at `#q0`.
           - Add `(move v12 #q0 #t7 v13)` at the end of v12's tasks.
           
           **Rover v14 (Rock Analysis):**
           After sending the last analysis and dropping the rock, `v14` is at `#q8`. Need to move `v14` to `v15`.
           - The last `drop_rock` leaves `v14` at `#q8` (assuming `drop_rock` does not change configuration).
           - Add `(move v14 #q8 #t16 v15)` at the end of v14's tasks.
           
           Let's re-construct the plan with these final moves. The order of actions between the two rovers doesn't matter, only the sequence of actions for each individual rover.
           
           --Plan--:
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t1 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #t3 #q1)
           (move v12 #q1 #t18 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #t10 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t12 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #t13 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #t9 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t14 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v12 #q0 #t7 v13)
           (move v14 v15 #o2 #q13)
           (sample_rock v14 #q13 v3 v16)
           (move v14 #q13 #t25 #q8)
           (send_analysis v14 #q8 #y5 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q9)
           (sample_rock v14 #q9 v4 v16)
           (move v14 #q9 #t21 #q8)
           (send_analysis v14 #q8 #y5 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q10)
           (sample_rock v14 #q10 v1 v16)
           (move v14 #q10 #t22 #q8)
           (send_analysis v14 #q8 #y5 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q7)
           (sample_rock v14 #q7 v5 v16)
           (move v14 #q7 #t20 #q8)
           (send_analysis v14 #q8 #y5 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q11)
           (sample_rock v14 #q11 v7 v16)
           (move v14 #q11 #t23 #q8)
           (send_analysis v14 #q8 #y5 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q12)
           (sample_rock v14 #q12 v8 v16)
           (move v14 #q12 #t24 #q8)
           (send_analysis v14 #q8 #y5 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q8 #t16 v15)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q1) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `(calibrate v12 #q1 #y1 v20 v10)` required `atconf(v12, #q1)`, but `v12` was at `v13` initially. I made an assumption about the starting configuration for the first `calibrate` action.
           
           I need to explicitly move `v12` from its initial `atconf(v12, v13)` to `#q1` before attempting to calibrate or take an image there.
           
           Let's correct the sequence for Rover v12:
           
           **Rover v12 (Images):**
           Current at `v13`.
           1. `move v12 v13 #t0 #q1` (Move from `v13` to `#q1`)
           2. `calibrate v12 #q1 #y1 v20 v10`
           3. `take_image v12 #q1 #y1 v20 v10 v11`
           4. `move v12 #q1 #t1 #q0` (to `q0` for communication)
           5. `send_image v12 #q0 #y0 v9 v20 v11`
           6. `move v12 #q0 #t3 #q1` (back to `q1` for next image or continue to next image location if different)
               - From `#q1`, it needs to move to `#q2`. There's `(move v12 #q1 #t18 #q2)`
           7. `move v12 #q1 #t18 #q2`
           8. `calibrate v12 #q2 #y2 v17 v10`
           9. `take_image v12 #q2 #y2 v17 v10 v11`
           10. `move v12 #q2 #t10 #q0`
           11. `send_image v12 #q0 #y0 v9 v17 v11`
           12. `move v12 #q0 #t12 #q5`
           13. `calibrate v12 #q5 #y3 v18 v10`
           14. `take_image v12 #q5 #y3 v18 v10 v11`
           15. `move v12 #q5 #t13 #q0`
           16. `send_image v12 #q0 #y0 v9 v18 v11`
           17. `move v12 #q0 #t9 #q6`
           18. `calibrate v12 #q6 #y4 v19 v10`
           19. `take_image v12 #q6 #y4 v19 v10 v11`
           20. `move v12 #q6 #t14 #q0`
           21. `send_image v12 #q0 #y0 v9 v19 v11`
           22. `move v12 #q0 #t7 v13` (Return to initial configuration)
           
           The Rover v14 plan seems to have a similar initial move to `q13` from `v15` which is correct, so its sequence should be fine.
           
           --Plan--:
           (move v12 v13 #t0 #q1)
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t1 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #t3 #q1)
           (move v12 #q1 #t18 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #t10 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t12 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #t13 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #t9 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t14 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v12 #q0 #t7 v13)
           (move v14 v15 #o2 #q13)
           (sample_rock v14 #q13 v3 v16)
           (move v14 #q13 #t25 #q8)
           (send_analysis v14 #q8 #y5 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q9)
           (sample_rock v14 #q9 v4 v16)
           (move v14 #q9 #t21 #q8)
           (send_analysis v14 #q8 #y5 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q10)
           (sample_rock v14 #q10 v1 v16)
           (move v14 #q10 #t22 #q8)
           (send_analysis v14 #q8 #y5 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q7)
           (sample_rock v14 #q7 v5 v16)
           (move v14 #q7 #t20 #q8)
           (send_analysis v14 #q8 #y5 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q11)
           (sample_rock v14 #q11 v7 v16)
           (move v14 #q11 #t23 #q8)
           (send_analysis v14 #q8 #y5 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q8 #o2 #q12)
           (sample_rock v14 #q12 v8 v16)
           (move v14 #q12 #t24 #q8)
           (send_analysis v14 #q8 #y5 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q8 #t16 v15)

