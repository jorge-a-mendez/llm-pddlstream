User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g1: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p1: object
           #q2: object
           #q3: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           @sink: object
           @stove: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v6: object
           v7: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom handempty(v4)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v14)
           Atom graspable(v15)
           Atom pose(v15, v16)
           Atom atpose(v15, v16)
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #g1)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v12, v13, #g1, #q2, #t5)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v12, #p1, #g1, #q3, #t6)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t7))
           ((move_base v3 #q3 #t8))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p1 #g1 #q3 #t6))
           ((place v4 v12 #p1 #g1 #q3 #t6))
           ((pick v4 v12 v13 #g1 #q2 #t5))
           ((place v4 v12 v13 #g1 #q2 #t5))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true.
           From the initial state, we have `type(v12, v17)`. So, if we set `?green` to `v12`, then we need to achieve `on(v12, v18)`.
           The `on(v12, v18)` axiom requires `supported(v12, ?p, v18)` and `atpose(v12, ?p)`.
           From the initial state, we know `supported(v12, #p1, v18)`. So, the sub-goal simplifies to `atpose(v12, #p1)`.
           
           Currently, `v12` is at `v13` (`atpose(v12, v13)`). To achieve `atpose(v12, #p1)`, we need to pick `v12` from `v13` and place it at `#p1`.
           
           Let's break down the plan:
           1. **Pick v12 from v13:**
              - We need to use `pick(v4, v12, v13, #g1, #q2, #t5)`.
              - Preconditions:
                - `kin(v4, v12, v13, #g1, #q2, #t5)`: True in initial state.
                - `atpose(v12, v13)`: True in initial state.
                - `handempty(v4)`: True in initial state.
                - `atbconf(#q2)`: Not true in initial state. Current `atbconf` is `v3`. We need to move the base to `#q2`.
                - `NegatedAtom unsafeapproach(v12, v13, #g1)`: Assume false for now as no unsafe conditions are explicitly mentioned.
                - `NegatedAtom unsafeatraj(#t5)`: Assume false for now.
           
           2. **Move base to #q2:**
              - We need to use `move_base(v3, #q2, #t7)`.
              - Preconditions:
                - `basemotion(v3, #t7, #q2)`: True in initial state.
                - `atbconf(v3)`: True in initial state.
                - `canmove()`: True in initial state.
           
           3. **Place v12 at #p1:**
              - We need to use `place(v4, v12, #p1, #g1, #q3, #t6)`.
              - Preconditions:
                - `kin(v4, v12, #p1, #g1, #q3, #t6)`: True in initial state.
                - `atgrasp(v4, v12, #g1)`: This will be true after the `pick` action.
                - `atbconf(#q3)`: Not true. Current `atbconf` will be `#q2` after pick. We need to move the base to `#q3`.
                - `NegatedAtom unsafepose(v12, #p1)`: Assume false.
                - `NegatedAtom unsafeapproach(v12, #p1, #g1)`: Assume false.
                - `NegatedAtom unsafeatraj(#t6)`: Assume false.
           
           4. **Move base to #q3:**
              - We need to use `move_base(#q2, #q3, #o0)`. The `basemotion(#q2, #o0, #q3)` is available in the initial state.
           
           So the plan would be:
           1. Move the base from `v3` to `#q2`.
           2. Pick `v12` from `v13` using arm `v4`.
           3. Move the base from `#q2` to `#q3`.
           4. Place `v12` at `#p1` using arm `v4`.
           
           --Plan--:
           (move_base v3 #q2 #t7)
           (pick v4 v12 v13 #g1 #q2 #t5)
           (move_base #q2 #q3 #o0)
           (place v4 v12 #p1 #g1 #q3 #t6)

