User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           @sink: object
           @stove: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v9 is a pose with position (0.165, 0.428, 0.781) and quaternion (0.0, 0.0, -0.758, 0.652).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.236, -0.469, 0.781) and quaternion (0.0, 0.0, 0.97, -0.241).
           Object v13 is a pose with position (-0.191, 0.498, 0.781) and quaternion (0.0, 0.0, 1.0, 0.029).
           Object p7 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p8 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object p3 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p5 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p3)
           Atom supported(v8, p3, v16)
           Atom kin(v32, v33, p3, v34, v35, v36)
           Atom pose(v12, p4)
           Atom supported(v12, p4, v16)
           Atom kin(v32, v37, p4, v34, v35, v36)
           Atom pose(v14, p5)
           Atom supported(v14, p5, v16)
           Atom kin(v32, v38, p5, v34, v35, v36)
           Atom pose(v8, p6)
           Atom supported(v8, p6, v16)
           Atom kin(v32, v33, p6, v34, v35, v36)
           Atom pose(v12, p7)
           Atom supported(v12, p7, v16)
           Atom kin(v32, v37, p7, v34, v35, v36)
           Atom pose(v14, p8)
           Atom supported(v14, p8, v16)
           Atom kin(v32, v38, p8, v34, v35, v36)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g0)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g1)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v14, p8, #g0, #q3, #t3)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, v15, #g0, #q0, #t0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p5, #g0, #o3, #o4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, p6, #g1, #q1, #t1)
           Atom bconf(#q5)
           Atom atraj(#t10)
           Atom kin(v4, v8, v9, #g1, #q5, #t10)
           Atom kin(v4, v8, p3, #g1, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, p7, #g2, #q2, #t2)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v12, v13, #g2, #q4, #t4)
           Atom kin(v4, v12, p4, #g2, #o3, #o4)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t12)
           Atom basemotion(#q4, #t12, #q2)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom btraj(#t15)
           Atom basemotion(#q3, #t15, #q4)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom btraj(#t11)
           Atom basemotion(#q2, #t11, #q5)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t14)
           Atom basemotion(#q5, #t14, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t13)
           Atom basemotion(#q0, #t13, #q3)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q0)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q3 #t13))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t11))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q4 #t15))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q2 #t12))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q1 #t14))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t5))
           ((move_base v3 #q1 #t6))
           ((move_base v3 #q2 #t7))
           ((move_base v3 #q3 #t8))
           ((move_base v3 #q4 #t9))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p4 #g2 #o3 #o4))
           ((place v4 v12 p4 #g2 #o3 #o4))
           ((pick v4 v12 p7 #g2 #q2 #t2))
           ((place v4 v12 p7 #g2 #q2 #t2))
           ((pick v4 v12 v13 #g2 #q4 #t4))
           ((place v4 v12 v13 #g2 #q4 #t4))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 p5 #g0 #o3 #o4))
           ((place v4 v14 p5 #g0 #o3 #o4))
           ((pick v4 v14 p8 #g0 #q3 #t3))
           ((place v4 v14 p8 #g0 #q3 #t3))
           ((pick v4 v14 v15 #g0 #q0 #t0))
           ((place v4 v14 v15 #g0 #q0 #t0))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 p3 #g1 #o3 #o4))
           ((place v4 v8 p3 #g1 #o3 #o4))
           ((pick v4 v8 p6 #g1 #q1 #t1))
           ((place v4 v8 p6 #g1 #q1 #t1))
           ((pick v4 v8 v9 #g1 #q5 #t10))
           ((place v4 v8 v9 #g1 #q5 #t10))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three objects: `v8`, `v12`, and `v14`, and two arms: `v4` and `v6`. Initially, all objects are supported on `v11` (a surface) at poses `v9`, `v13`, and `v15` respectively. The robot's arm `v4` is empty, and it is at base configuration `v3` and arm configuration `v5`. The goal is to place all three objects on surface `v16`. Since the target poses on `v16` (p3, p4, p5, p6, p7, p8) are already defined and collision-free, the plan will involve picking each object from its initial pose and placing it on an available pose on `v16`.
           
           To minimize cost, we want to pick and place using the same base configuration where possible, and minimize base movements. The poses `p3`, `p4`, `p5`, `p6`, `p7`, `p8` are all supported on `v16`.
           
           Let's look at the initial poses of `v8`, `v12`, `v14` on `v11`:
           - `v8` at `v9`
           - `v12` at `v13`
           - `v14` at `v15`
           
           Let's consider the target poses on `v16`:
           - `v8` can go to `p3` or `p6`
           - `v12` can go to `p4` or `p7`
           - `v14` can go to `p5` or `p8`
           
           We have `kin` facts relating the arm `v4` to these objects, their initial poses, possible grasps, base configurations, and trajectories:
           - For `v14`: `kin(v4, v14, v15, #g0, #q0, #t0)` (initial pick)
           - For `v8`: `kin(v4, v8, v9, #g1, #q5, #t10)` (initial pick)
           - For `v12`: `kin(v4, v12, v13, #g2, #q4, #t4)` (initial pick)
           
           And also for placing on `v16`:
           - For `v14`: `kin(v4, v14, p5, #g0, #o3, #o4)` and `kin(v4, v14, p8, #g0, #q3, #t3)`
           - For `v8`: `kin(v4, v8, p3, #g1, #o3, #o4)` and `kin(v4, v8, p6, #g1, #q1, #t1)`
           - For `v12`: `kin(v4, v12, p4, #g2, #o3, #o4)` and `kin(v4, v12, p7, #g2, #q2, #t2)`
           
           We see that `v14` can be placed at `p5` using base config `#o3`, `v8` can be placed at `p3` using base config `#o3`, and `v12` can be placed at `p4` using base config `#o3`. This means we can potentially place all three objects using the same base configuration `#o3` for the placement actions.
           
           Let's analyze the base configurations for picking:
           - Pick `v14` from `v15`: base config `#q0`
           - Pick `v8` from `v9`: base config `#q5`
           - Pick `v12` from `v13`: base config `#q4`
           
           The current base configuration is `v3`. We need to move the base for each pick.
           
           Plan:
           1. Move to `#q0` to pick `v14`.
           2. Pick `v14` from `v15`.
           3. Move to `#o3` to place `v14`.
           4. Place `v14` on `p5`.
           5. Move to `#q5` to pick `v8`.
           6. Pick `v8` from `v9`.
           7. Move to `#o3` to place `v8`.
           8. Place `v8` on `p3`.
           9. Move to `#q4` to pick `v12`.
           10. Pick `v12` from `v13`.
           11. Move to `#o3` to place `v12`.
           12. Place `v12` on `p4`.
           
           This plan minimizes base movements to the distinct base configurations needed for picking and then uses a common base configuration (`#o3`) for all placements.
           
           --Plan--:
           (move_base v3 #q0 #t5)
           (pick v4 v14 v15 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v14 p5 #g0 #o3 #o4)
           (move_base #o3 #q5 #o0)
           (pick v4 v8 v9 #g1 #q5 #t10)
           (move_base #q5 #o3 #o0)
           (place v4 v8 p3 #g1 #o3 #o4)
           (move_base #o3 #q4 #o0)
           (pick v4 v12 v13 #g2 #q4 #t4)
           (move_base #q4 #o3 #o0)
           (place v4 v12 p4 #g2 #o3 #o4)

