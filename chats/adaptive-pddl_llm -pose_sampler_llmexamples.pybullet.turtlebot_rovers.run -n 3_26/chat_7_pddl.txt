User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rover(v14)
           Atom atconf(v12, v13)
           Atom rock(v4)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom store(v16)
           Atom onboard(v10, v14)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom type(v7, v6)
           Atom type(v5, v6)
           Atom type(v4, v2)
           Atom rock(v8)
           Atom onboard(v10, v12)
           Atom free(v12, v16)
           Atom rock(v1)
           Atom objective(v17)
           Atom camera(v10)
           Atom free(v14, v16)
           Atom objective(v19)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom lander(v9)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom rock(v3)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q9, v5)
           Atom conf(v12, #q9)
           Atom above(v12, #q10, v3)
           Atom conf(v12, #q10)
           Atom above(v12, #q8, v8)
           Atom conf(v12, #q8)
           Atom comvisible(v12, #q5, #y3, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #q13, #y5, v19)
           Atom imagerange(v14, #q13, v19)
           Atom conf(v14, #q13)
           Atom ray(#y5)
           Atom imagevisible(v14, #q14, #y6, v18)
           Atom imagerange(v14, #q14, v18)
           Atom conf(v14, #q14)
           Atom ray(#y6)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom above(v12, #q12, v7)
           Atom conf(v12, #q12)
           Atom above(v14, #o5, v7)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q7, v4)
           Atom conf(v12, #q7)
           Atom imagevisible(v14, #q15, #y7, v17)
           Atom imagerange(v14, #q15, v17)
           Atom conf(v14, #q15)
           Atom ray(#y7)
           Atom imagevisible(v12, #q1, #y0, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v14, #q0, v1)
           Atom conf(v14, #q0)
           Atom above(v12, #q11, v1)
           Atom conf(v12, #q11)
           Atom motion(v12, #q5, #t8, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q5, #t11, #q6)
           Atom motion(v12, #q6, #t9, #q5)
           Atom motion(v12, #q2, #t7, #q5)
           Atom motion(v12, v13, #t2, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t17, #q6)
           Atom motion(v12, #q5, #t12, #q2)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t0, #q0)
           Atom motion(v12, #q1, #t6, #q5)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q5, #t21, #q1)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, v13, #t1, #q1)
           Atom motion(v12, #q1, #t18, #q2)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q5, #t16, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #t14, #q5)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v14, v15, #t29, #q15)
           Atom motion(v14, #q15, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q10, #t20, #q5)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, v13, #t23, #q10)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v14, #q15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q5, #t22, #q12)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #t19, #q5)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q5, #t24, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q9, #t25, #q5)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q0, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v14, v15, #t28, #q14)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, v15, #t27, #q13)
           Atom motion(v12, #q5, #t26, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q11, #t30, #q5)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v14, #q15, #t33, #q3)
           Atom motion(v14, #q4, #t5, #q3)
           Atom motion(v14, #q14, #t32, #q3)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #t3, v15)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q0, #t4, #q3)
           Atom motion(v14, #q13, #t31, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #t10, #q4)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q5, #t15, #q7)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q7, #t13, #q5)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q11 v1 v16))
           ((sample_rock v12 #q12 v7 v16))
           ((sample_rock v12 #q7 v4 v16))
           ((sample_rock v12 #q8 v8 v16))
           ((sample_rock v12 #q9 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v1 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t18 #q2))
           ((move v12 #q1 #t6 #q5))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t20 #q5))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t30 #q5))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t19 #q5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t17 #q6))
           ((move v12 #q2 #t7 #q5))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t11 #q6))
           ((move v12 #q5 #t12 #q2))
           ((move v12 #q5 #t15 #q7))
           ((move v12 #q5 #t16 #q8))
           ((move v12 #q5 #t21 #q1))
           ((move v12 #q5 #t22 #q12))
           ((move v12 #q5 #t24 #q9))
           ((move v12 #q5 #t26 #q11))
           ((move v12 #q5 #t8 v13))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t9 #q5))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q5))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t14 #q5))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t25 #q5))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q1))
           ((move v12 v13 #t2 #q2))
           ((move v12 v13 #t23 #q10))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #o2 #q15))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t4 #q3))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t31 #q3))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t32 #q3))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q0))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t33 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #t10 #q4))
           ((move v14 #q3 #t3 v15))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t5 #q3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((move v14 v15 #t27 #q13))
           ((move v14 v15 #t28 #q14))
           ((move v14 v15 #t29 #q15))
           ((calibrate v12 #q1 #y0 v17 v10))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #q13 #y5 v19 v10))
           ((calibrate v14 #q14 #y6 v18 v10))
           ((calibrate v14 #q15 #y7 v17 v10))
           ((take_image v12 #q1 #y0 v17 v10 v11))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #q13 #y5 v19 v10 v11))
           ((take_image v14 #q14 #y6 v18 v10 v11))
           ((take_image v14 #q15 #y7 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y3 v9 v3))
           ((send_analysis v12 #q5 #y3 v9 v1))
           ((send_analysis v12 #q5 #y3 v9 v7))
           ((send_analysis v12 #q5 #y3 v9 v4))
           ((send_analysis v12 #q5 #y3 v9 v8))
           ((send_analysis v12 #q5 #y3 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_image v12 #q5 #y3 v9 v17 v11))
           ((send_image v12 #q5 #y3 v9 v18 v11))
           ((send_image v12 #q5 #y3 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. Both rovers have a camera `v10` onboard that supports mode `v11`. There are five rocks: `v1`, `v3`, `v4`, `v5`, `v7`, `v8`. The types of rocks are `v2` (for `v1`, `v3`, `v4`) and `v6` (for `v5`, `v7`, `v8`). The rovers can store samples in `v16`. There are three objectives: `v17`, `v18`, `v19`. The rovers have various movement capabilities between different configurations. They can also take images, calibrate their cameras, send images, sample rocks, and send analysis of sampled rocks. Both rovers are currently at a free store `v16`, meaning they can sample rocks.
           
           The goal `new-axiom@0()` can be achieved if:
           1. `receivedimage(v17, v11)` is true.
           2. `receivedimage(v18, v11)` is true.
           3. `receivedimage(v19, v11)` is true.
           4. `receivedanalysis(?stone)` is true for rocks of type `v2` (e.g., `v1`, `v3`, `v4`).
           5. `receivedanalysis(?soil)` is true for rocks of type `v6` (e.g., `v5`, `v7`, `v8`).
           6. Both rovers have a free store `v16` and are at some configuration.
           
           Let's break down the goal:
           - We need to receive images for all three objectives `v17`, `v18`, `v19` in mode `v11`.
           - We need to analyze and send analysis for at least one rock of type `v2` and at least one rock of type `v6`.
           
           Rover `v12` can see objectives `v17`, `v18`, `v19` at configurations `#q1`, `#q2`, `#q6` respectively, and can communicate with the lander `v9` at `#q5`.
           Rover `v14` can see objectives `v17`, `v18`, `v19` at configurations `#q15`, `#q14`, `#q13` respectively, and can communicate with the lander `v9` at `#q3`.
           
           For the analysis part:
           - Rover `v12` can sample `v3` (type `v2`) at `#q10`, `v1` (type `v2`) at `#q11`, `v7` (type `v6`) at `#q12`, `v4` (type `v2`) at `#q7`, `v8` (type `v6`) at `#q8`, `v5` (type `v6`) at `#q9`.
           - Rover `v14` can sample `v3` (type `v2`) at `#o5`, `v4` (type `v2`) at `#o5`, `v7` (type `v6`) at `#o5`, `v8` (type `v6`) at `#o5`, `v1` (type `v2`) at `#q0`, `v5` (type `v6`) at `#q4`.
           
           Let's use `v12` to handle the imaging and `v14` for rock analysis, or vice versa, to optimize. We need to ensure both types of rocks are analyzed and all three images are received.
           
           **Plan for images (using v12):**
           1. Calibrate camera for `v17` at `#q1`.
           2. Take image of `v17`.
           3. Move to `#q5` to send image.
           4. Send image of `v17`.
           5. Move to `#q2`.
           6. Calibrate camera for `v18`.
           7. Take image of `v18`.
           8. Move to `#q5`.
           9. Send image of `v18`.
           10. Move to `#q6`.
           11. Calibrate camera for `v19`.
           12. Take image of `v19`.
           13. Move to `#q5`.
           14. Send image of `v19`.
           
           **Plan for analysis (using v12 to sample a rock of type v2, and v14 to sample a rock of type v6):**
           
           Rover `v12` for type `v2`:
           1. Move to `#q10` (to be above `v3`, a type `v2` rock).
           2. Sample `v3`.
           3. Move to `#q5` (communication range).
           4. Send analysis of `v3`.
           
           Rover `v14` for type `v6`:
           1. Move to `#q4` (to be above `v5`, a type `v6` rock).
           2. Sample `v5`.
           3. Move to `#q3` (communication range).
           4. Send analysis of `v5`.
           
           All rovers start with a free store `v16`.
           
           The initial state shows that `atconf(v12, v13)` and `atconf(v14, v15)`.
           
           Let's combine these:
           
           **Rover v12 actions:**
           1. Calibrate and take images of v17, v18, v19 and send them.
           2. Sample rock v3 (type v2) and send analysis.
           
           **Rover v14 actions:**
           1. Sample rock v5 (type v6) and send analysis.
           
           We can ensure `v12` is at `v13` for sending images. `v12` is already at `v13`. It needs to move to image locations and then back to a comms location.
           `v12` is at `v13`.
           To send images it needs to be at `#q5`.
           `v12` has motion `(v12 v13 #t2 #q2)` and `(v12 #q2 #t7 #q5)`.
           `v12` has motion `(v12 v13 #t1 #q1)` and `(v12 #q1 #t6 #q5)`.
           `v12` has motion `(v12 v13 #o2 #q6)` and `(v12 #q6 #t9 #q5)`.
           
           For rock analysis:
           `v12` can go from `v13` to `#q10` to sample `v3` (`v12 v13 #t23 #q10`). Then from `#q10` to `#q5` (`v12 #q10 #t20 #q5`).
           `v14` can go from `v15` to `#q4` to sample `v5` (`v14 v15 #o2 #q4`). Then from `#q4` to `#q3` (`v14 #q4 #t5 #q3`).
           
           Let's make sure the sequence of moves and calibrations/imaging/sampling/sending works.
           
           --Plan--:
           (move v12 v13 #t1 #q1)
           (calibrate v12 #q1 #y0 v17 v10)
           (take_image v12 #q1 #y0 v17 v10 v11)
           (move v12 #q1 #t6 #q5)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (move v12 #q5 #t12 #q2)
           (calibrate v12 #q2 #y1 v18 v10)
           (take_image v12 #q2 #y1 v18 v10 v11)
           (move v12 #q2 #t7 #q5)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (move v12 #q5 #t11 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t9 #q5)
           (send_image v12 #q5 #y3 v9 v19 v11)
           (move v12 #q5 #o2 #q10)
           (sample_rock v12 #q10 v3 v16)
           (move v12 #q10 #t20 #q5)
           (send_analysis v12 #q5 #y3 v9 v3)
           (move v14 v15 #o2 #q4)
           (sample_rock v14 #q4 v5 v16)
           (move v14 #q4 #t5 #q3)
           (send_analysis v14 #q3 #y2 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan aimed to satisfy the `new-axiom@0()` goal by achieving its conjunctive components:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedanalysis(?stone)` for type `v2` rock
           - `receivedanalysis(?soil)` for type `v6` rock
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           
           The initial state already has `free(v12, v16)`, `free(v14, v16)`, `atconf(v12, v13)`, `atconf(v14, v15)`. Therefore, the focus should be on the image and analysis reception.
           
           Let's re-verify the plan and ensure all preconditions are met for each action and the goal is indeed achieved.
           
           The problem states "Fact is not satisfied: Atom new-axiom@0()". This means the entire conjunction was not satisfied. Let's re-examine the plan's actions:
           
           **Rover v12 for images and type v2 rock analysis:**
           1.  `(move v12 v13 #t1 #q1)`: `atconf(v12, v13)` is true. `motion(v12, v13, #t1, #q1)` is true. Preconditions met.
           2.  `(calibrate v12 #q1 #y0 v17 v10)`: `imagevisible(v12, #q1, #y0, v17)` is true. `onboard(v10, v12)` is true. `atconf(v12, #q1)` is now true. `blocked(#y0)` is false (it's not listed as blocked in initial state or by any axiom given the current state). Preconditions met.
           3.  `(take_image v12 #q1 #y0 v17 v10 v11)`: `imagevisible(v12, #q1, #y0, v17)` is true. `onboard(v10, v12)` is true. `supports(v10, v11)` is true. `atconf(v12, #q1)` is true. `calibrated(v10, v12)` is now true (from previous action). `blocked(#y0)` is false. Preconditions met.
           4.  `(move v12 #q1 #t6 #q5)`: `motion(v12, #q1, #t6, #q5)` is true. `atconf(v12, #q1)` is true. Preconditions met.
           5.  `(send_image v12 #q5 #y3 v9 v17 v11)`: `comvisible(v12, #q5, #y3, v9)` is true. `objective(v17)` is true. `mode(v11)` is true. `haveimage(v12, v17, v11)` is now true. `atconf(v12, #q5)` is true. `blocked(#y3)` is false. Preconditions met. **Achieves `receivedimage(v17, v11)`**
           6.  `(move v12 #q5 #t12 #q2)`: `motion(v12, #q5, #t12, #q2)` is true. `atconf(v12, #q5)` is true. Preconditions met.
           7.  `(calibrate v12 #q2 #y1 v18 v10)`: `imagevisible(v12, #q2, #y1, v18)` is true. `onboard(v10, v12)` is true. `atconf(v12, #q2)` is true. `blocked(#y1)` is false. Preconditions met.
           8.  `(take_image v12 #q2 #y1 v18 v10 v11)`: `calibrated(v10, v12)` is true. Preconditions met.
           9.  `(move v12 #q2 #t7 #q5)`: `motion(v12, #q2, #t7, #q5)` is true. `atconf(v12, #q2)` is true. Preconditions met.
           10. `(send_image v12 #q5 #y3 v9 v18 v11)`: `haveimage(v12, v18, v11)` is true. Preconditions met. **Achieves `receivedimage(v18, v11)`**
           11. `(move v12 #q5 #t11 #q6)`: `motion(v12, #q5, #t11, #q6)` is true. `atconf(v12, #q5)` is true. Preconditions met.
           12. `(calibrate v12 #q6 #y4 v19 v10)`: `imagevisible(v12, #q6, #y4, v19)` is true. `onboard(v10, v12)` is true. `atconf(v12, #q6)` is true. `blocked(#y4)` is false. Preconditions met.
           13. `(take_image v12 #q6 #y4 v19 v10 v11)`: `calibrated(v10, v12)` is true. Preconditions met.
           14. `(move v12 #q6 #t9 #q5)`: `motion(v12, #q6, #t9, #q5)` is true. `atconf(v12, #q6)` is true. Preconditions met.
           15. `(send_image v12 #q5 #y3 v9 v19 v11)`: `haveimage(v12, v19, v11)` is true. Preconditions met. **Achieves `receivedimage(v19, v11)`**
           16. `(move v12 #q5 #o2 #q10)`: `motion(v12, #q5, #o2, #q10)` is true. `atconf(v12, #q5)` is true. Preconditions met.
           17. `(sample_rock v12 #q10 v3 v16)`: `above(v12, #q10, v3)` is true. `store(v16)` is true. `atconf(v12, #q10)` is true. `free(v12, v16)` is true. Preconditions met. **Achieves `analyzed(v12, v3)` and makes `full(v12, v16)`**
           18. `(move v12 #q10 #t20 #q5)`: `motion(v12, #q10, #t20, #q5)` is true. `atconf(v12, #q10)` is true. Preconditions met.
           19. `(send_analysis v12 #q5 #y3 v9 v3)`: `comvisible(v12, #q5, #y3, v9)` is true. `rock(v3)` is true. `analyzed(v12, v3)` is true. `atconf(v12, #q5)` is true. `blocked(#y3)` is false. Preconditions met. **Achieves `receivedanalysis(v3)` for rock type `v2`**
           
           **Rover v14 for type v6 rock analysis:**
           1.  `(move v14 v15 #o2 #q4)`: `atconf(v14, v15)` is true. `motion(v14, v15, #o2, #q4)` is true. Preconditions met.
           2.  `(sample_rock v14 #q4 v5 v16)`: `above(v14, #q4, v5)` is true. `store(v16)` is true. `atconf(v14, #q4)` is true. `free(v14, v16)` is true. Preconditions met. **Achieves `analyzed(v14, v5)` and makes `full(v14, v16)`**
           3.  `(move v14 #q4 #t5 #q3)`: `motion(v14, #q4, #t5, #q3)` is true. `atconf(v14, #q4)` is true. Preconditions met.
           4.  `(send_analysis v14 #q3 #y2 v9 v5)`: `comvisible(v14, #q3, #y2, v9)` is true. `rock(v5)` is true. `analyzed(v14, v5)` is true. `atconf(v14, #q3)` is true. `blocked(#y2)` is false. Preconditions met. **Achieves `receivedanalysis(v5)` for rock type `v6`**
           
           All the necessary conditions for `new-axiom@0()` are met by this plan. The problem description for the axiom `new-axiom@0()` states:
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           The plan achieves `receivedimage` for `v17, v18, v19`. It also achieves `receivedanalysis(v3)` where `type(v3, v2)` (satisfies `receivedanalysis(?stone)` for type `v2`). And it achieves `receivedanalysis(v5)` where `type(v5, v6)` (satisfies `receivedanalysis(?soil)` for type `v6`). The state of `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` are initially true. After sampling, `free(v12, v16)` becomes false and `full(v12, v16)` becomes true. Same for `v14`. However, the axiom only needs existence of variables `?stone` and `?soil` such that their analysis is received and their type matches. It does not require that `v12` or `v14` remain `free`. It also does not require `v12` and `v14` to be at `v13` and `v15` at the *end* of the plan, only that these predicates contribute to the axiom. But even if it did, `atconf(v12, #q5)` is the final state for `v12` and `atconf(v14, #q3)` is for `v14`. This indicates that the goal condition implies that the rovers must be in their initial configurations and have a free store to satisfy the axiom, which is a stronger interpretation of "new-axiom@0()".
           
           If the goal `new-axiom@0()` explicitly requires `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` to be true *at the end of the plan*, then the previous plan would fail because `v12` and `v14` move to different configurations and their stores become `full`. If this is the case, the rovers would need to move back to `v13` and `v15` and drop their rocks to free their stores.
           
           Let's assume the goal conditions `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` must hold at the very end.
           
           **Revised Plan:**
           
           **Rover v12:**
           1.  Calibrate, take, and send images for `v17, v18, v19`.
           2.  Sample rock `v3` (type `v2`).
           3.  Send analysis for `v3`.
           4.  Return to `v13`.
           5.  Drop rock to free store.
           
           **Rover v14:**
           1.  Sample rock `v5` (type `v6`).
           2.  Send analysis for `v5`.
           3.  Return to `v15`.
           4.  Drop rock to free store.
           
           --Plan--:
           (move v12 v13 #t1 #q1)
           (calibrate v12 #q1 #y0 v17 v10)
           (take_image v12 #q1 #y0 v17 v10 v11)
           (move v12 #q1 #t6 #q5)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (move v12 #q5 #t12 #q2)
           (calibrate v12 #q2 #y1 v18 v10)
           (take_image v12 #q2 #y1 v18 v10 v11)
           (move v12 #q2 #t7 #q5)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (move v12 #q5 #t11 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t9 #q5)
           (send_image v12 #q5 #y3 v9 v19 v11)
           (move v12 #q5 #o2 #q10)
           (sample_rock v12 #q10 v3 v16)
           (move v12 #q10 #t20 #q5)
           (send_analysis v12 #q5 #y3 v9 v3)
           (move v12 #q5 #t8 v13)
           (drop_rock v12 v16)
           (move v14 v15 #o2 #q4)
           (sample_rock v14 #q4 v5 v16)
           (move v14 #q4 #t5 #q3)
           (send_analysis v14 #q3 #y2 v9 v5)
           (move v14 #q3 #t3 v15)
           (drop_rock v14 v16)

