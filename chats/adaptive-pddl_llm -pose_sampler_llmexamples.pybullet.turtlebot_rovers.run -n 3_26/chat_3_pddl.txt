User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rover(v14)
           Atom atconf(v12, v13)
           Atom rock(v4)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom store(v16)
           Atom onboard(v10, v14)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom type(v7, v6)
           Atom type(v5, v6)
           Atom type(v4, v2)
           Atom rock(v8)
           Atom onboard(v10, v12)
           Atom free(v12, v16)
           Atom rock(v1)
           Atom objective(v17)
           Atom camera(v10)
           Atom free(v14, v16)
           Atom objective(v19)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom lander(v9)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom rock(v3)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v5)
           Atom comvisible(v12, #q5, #y3, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v7)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v4)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v12, #q1, #y0, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v14, #q0, v1)
           Atom conf(v14, #q0)
           Atom above(v12, #o5, v1)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #t3, v15)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q0, #t4, #q3)
           Atom motion(v14, v15, #t0, #q0)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #t8, v13)
           Atom motion(v12, #q5, #t11, #q6)
           Atom motion(v12, #q6, #t9, #q5)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, v13, #t2, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q5, #t12, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t7, #q5)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #t6, #q5)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #t1, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q4, #t5, #q3)
           Atom motion(v14, #q3, #t10, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v1 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t6 #q5))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t7 #q5))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t11 #q6))
           ((move v12 #q5 #t12 #q2))
           ((move v12 #q5 #t8 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t9 #q5))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q1))
           ((move v12 v13 #t2 #q2))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q3))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t4 #q3))
           ((move v14 #q3 #o2 #o3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #t10 #q4))
           ((move v14 #q3 #t3 v15))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t5 #q3))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((calibrate v12 #q1 #y0 v17 v10))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q1 #y0 v17 v10 v11))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y3 v9 v1))
           ((send_analysis v12 #q5 #y3 v9 v3))
           ((send_analysis v12 #q5 #y3 v9 v4))
           ((send_analysis v12 #q5 #y3 v9 v5))
           ((send_analysis v12 #q5 #y3 v9 v7))
           ((send_analysis v12 #q5 #y3 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_image v12 #q5 #y3 v9 v17 v11))
           ((send_image v12 #q5 #y3 v9 v18 v11))
           ((send_image v12 #q5 #y3 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10) that supports mode v11, a store (v16), and various rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19). The goal `new-axiom@0()` represents a complex state where:
           - Both rovers v12 and v14 are at their respective configurations (v13 and v15) and have a free store (v16).
           - Images of all objectives (v17, v18, v19) have been received in mode v11.
           - Analysis of all rocks classified as type v2 (v1, v3, v4) and type v6 (v5, v7, v8) has been received.
           
           Let's break down the goal into subgoals and see how to achieve them:
           
           1.  **Received images of objectives (v17, v18, v19) in mode v11**:
               *   This requires taking images of each objective with a calibrated camera and then sending those images.
               *   Rover v12 has visibility to v17, v18, v19 at different configurations (#q1, #q2, #q6 respectively).
               *   Rover v14 has visibility to v17, v18, v19 at configuration #o3.
               *   Both rovers have onboard camera v10 that supports mode v11.
               *   Both rovers have communication visibility to the lander v9 at certain configurations.
           
           2.  **Received analysis of rocks**:
               *   This requires sampling each rock (v1, v3, v4, v5, v7, v8) and then sending the analysis.
               *   Both rovers have `free(v_rover, v16)` initially, so they can sample rocks.
               *   Rover v12 is `above` multiple rocks at configuration #o5.
               *   Rover v14 is `above` multiple rocks at configurations #o5, #q0, #q4.
           
           **Plan Strategy:**
           
           *   **Image Collection and Transmission**: We can use rover v12 to take images of v17, v18, v19 and then transmit them. Rover v12 is currently at v13 and has motion paths to #q1, #q2, #q6, and #q5 (for communication).
           *   **Rock Sampling and Analysis**: We can use rover v12 to sample all available rocks at #o5. Then move it to #q5 to send the analysis. Since there are 6 rocks and only one store, we need to sample a rock, send its analysis, then drop it, and repeat. Alternatively, we can use both rovers. Let's try to do it with v12 first for simplicity. Rover v14 also has access to several rocks.
           
           Let's refine the plan:
           
           *   **Rover v12 for Image and Analysis**:
               1.  Calibrate camera v10 for all visible objectives.
               2.  Take images of all objectives.
               3.  Move to a configuration with communication visibility to send images.
               4.  Move to a configuration where rocks are above it to sample them.
               5.  For each rock: sample, send analysis, drop.
           
           Let's check the number of rocks and store capacity. There are 6 rocks, and each rover has one store (v16). So each rover can sample one rock at a time. The goal is `receivedanalysis(?r)` for all rocks.
           
           **Detailed Plan for Rover v12:**
           
           1.  **Calibrate and take images:**
               *   `calibrate v12 #q1 #y0 v17 v10` (at v13, move to #q1)
               *   `take_image v12 #q1 #y0 v17 v10 v11`
               *   `calibrate v12 #q2 #y1 v18 v10` (at #q1, move to #q2)
               *   `take_image v12 #q2 #y1 v18 v10 v11`
               *   `calibrate v12 #q6 #y4 v19 v10` (at #q2, move to #q6)
               *   `take_image v12 #q6 #y4 v19 v10 v11`
           2.  **Send images:**
               *   `move v12 #q6 #t9 #q5` (move to com-visible config)
               *   `send_image v12 #q5 #y3 v9 v17 v11`
               *   `send_image v12 #q5 #y3 v9 v18 v11`
               *   `send_image v12 #q5 #y3 v9 v19 v11`
           3.  **Sample and analyze rocks with v12:**
               *   `move v12 #q5 #o2 #o5` (move to config above rocks)
               *   For rock v1: `sample_rock v12 #o5 v1 v16`, `move v12 #o5 #o2 #q5`, `send_analysis v12 #q5 #y3 v9 v1`, `drop_rock v12 v16`
               *   For rock v3: `move v12 #q5 #o2 #o5`, `sample_rock v12 #o5 v3 v16`, `move v12 #o5 #o2 #q5`, `send_analysis v12 #q5 #y3 v9 v3`, `drop_rock v12 v16`
               *   For rock v4: `move v12 #q5 #o2 #o5`, `sample_rock v12 #o5 v4 v16`, `move v12 #o5 #o2 #q5`, `send_analysis v12 #q5 #y3 v9 v4`, `drop_rock v12 v16`
               *   For rock v5: `move v12 #q5 #o2 #o5`, `sample_rock v12 #o5 v5 v16`, `move v12 #o5 #o2 #q5`, `send_analysis v12 #q5 #y3 v9 v5`, `drop_rock v12 v16`
               *   For rock v7: `move v12 #q5 #o2 #o5`, `sample_rock v12 #o5 v7 v16`, `move v12 #o5 #o2 #q5`, `send_analysis v12 #q5 #y3 v9 v7`, `drop_rock v12 v16`
               *   For rock v8: `move v12 #q5 #o2 #o5`, `sample_rock v12 #o5 v8 v16`, `move v12 #o5 #o2 #q5`, `send_analysis v12 #q5 #y3 v9 v8`, `drop_rock v12 v16`
           
           This plan covers all objectives and all rocks for analysis. The state of `atconf` for both rovers and `free` for both stores (as they are dropped at the end of each sample-send-drop cycle) will be met by the end of the plan.
           
           Let's ensure the `atconf` states for v12 and v14 are handled. The goal needs `atconf(v12, v13)` and `atconf(v14, v15)`. Since the plan for v12 ends with a `drop_rock` action after `send_analysis`, and `send_analysis` requires `atconf(v12, #q5)`, we will need to move v12 back to v13 at the end. Rover v14 starts at v15 and is not used in this plan, so its `atconf` state remains v15.
           
           Final check of action availability:
           All `calibrate`, `take_image`, `send_image`, `sample_rock`, `send_analysis`, `drop_rock`, and `move` actions appear in the provided list.
           
           The plan seems viable.
           
           --Plan--:
           (move v12 v13 #t1 #q1)
           (calibrate v12 #q1 #y0 v17 v10)
           (take_image v12 #q1 #y0 v17 v10 v11)
           (move v12 #q1 #o2 #q2)
           (calibrate v12 #q2 #y1 v18 v10)
           (take_image v12 #q2 #y1 v18 v10 v11)
           (move v12 #q2 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t9 #q5)
           (send_image v12 #q5 #y3 v9 v17 v11)
           (send_image v12 #q5 #y3 v9 v18 v11)
           (send_image v12 #q5 #y3 v9 v19 v11)
           (move v12 #q5 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (move v12 #o5 #o2 #q5)
           (send_analysis v12 #q5 #y3 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q5 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (move v12 #o5 #o2 #q5)
           (send_analysis v12 #q5 #y3 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q5 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q5)
           (send_analysis v12 #q5 #y3 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q5 #o2 #o5)
           (sample_rock v12 #o5 v5 v16)
           (move v12 #o5 #o2 #q5)
           (send_analysis v12 #q5 #y3 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q5 #o2 #o5)
           (sample_rock v12 #o5 v7 v16)
           (move v12 #o5 #o2 #q5)
           (send_analysis v12 #q5 #y3 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q5 #o2 #o5)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q5)
           (send_analysis v12 #q5 #y3 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q5 #t8 v13)

