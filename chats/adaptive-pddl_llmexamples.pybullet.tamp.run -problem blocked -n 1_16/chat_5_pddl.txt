User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom handempty(v6)
           Atom arm(v6)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v21, v15, v16)
           Atom aconf(v4, v5)
           Atom pose(v12, v13)
           Atom graspable(v8)
           Atom ataconf(v4, v5)
           Atom aconf(v6, v7)
           Atom stackable(v12, v18)
           Atom controllable(v4)
           Atom pose(v15, v16)
           Atom stackable(v15, v10)
           Atom stackable(v12, v10)
           Atom stackable(v8, v10)
           Atom bconf(v3)
           Atom pose(v8, v9)
           Atom atbconf(v3)
           Atom type(v8, v17)
           Atom atpose(v12, v13)
           Atom handempty(v4)
           Atom canmove()
           Atom graspable(v15)
           Atom type(v12, v17)
           Atom stackable(v8, v18)
           Atom atpose(v15, v16)
           Atom graspable(v12)
           Atom arm(v4)
           Atom atpose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom ataconf(v6, v7)
           Atom supported(v12, v13, v14)
           Atom supported(v15, v16, v11)
           Atom grasp(v12, #o1)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom grasp(v15, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom grasp(v8, v22)
           Atom grasp(v8, v21)
           Atom grasp(v8, v23)
           Atom grasp(v8, v20)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v22, v26, v27)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, v21, #o3, #o4)
           Atom kin(v4, v8, v19, v21, #o3, #o4)
           Atom bconf(v28)
           Atom atraj(v29)
           Atom kin(v4, v8, v19, v23, v28, v29)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v20, v24, v25)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v3, #o0, v26)
           Atom basemotion(v28, #o0, v26)
           Atom basemotion(v28, #o0, v3)
           Atom basemotion(v26, #o0, v28)
           Atom basemotion(v3, #o0, v28)
           Atom basemotion(v28, #o0, v28)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v28, #o0, v24)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v24, #o0, v28)
           Atom basemotion(v24, #o0, v3)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v28)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v28, #o0, #o3)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, v24)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v28 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v24 #o3 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v28 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v28 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v28 #o3 #o0))
           ((move_base v28 v24 #o0))
           ((move_base v28 v26 #o0))
           ((move_base v28 v28 #o0))
           ((move_base v28 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v28 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 v24 v25))
           ((place v4 v8 v19 v20 v24 v25))
           ((pick v4 v8 v19 v21 #o3 #o4))
           ((place v4 v8 v19 v21 #o3 #o4))
           ((pick v4 v8 v19 v22 v26 v27))
           ((place v4 v8 v19 v22 v26 v27))
           ((pick v4 v8 v19 v23 v28 v29))
           ((place v4 v8 v19 v23 v28 v29))
           ((pick v4 v8 v9 v21 #o3 #o4))
           ((place v4 v8 v9 v21 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three objects, `v8`, `v12`, and `v15`, which are all `graspable` and of `type v17`. They are currently at `pose v9`, `v13`, and `v16` respectively. The robot has two arms, `v4` and `v6`, both currently `handempty`. The robot is at `bconf v3`. The goal is `new-axiom@0()`, which means `on(?green, v18)` and `type(?green, v17)`. In the initial state, `v8` is `supported` by `v11` at `pose v9`, `v12` is `supported` by `v14` at `pose v13`, and `v15` is `supported` by `v11` at `pose v16`. There are also facts indicating that `v8` can be supported by `v18` at `pose v19` and by `v10` at `pose #o2`. Similarly, `v12` and `v15` can be supported by `v10` at `pose #o2`. `v18` is a `stackable` surface for `v8` and `v12`.
           
           The goal requires an object of `type v17` to be `on v18`. `v8`, `v12`, and `v15` are all of `type v17`.
           Let's consider placing `v8` on `v18`. From the initial state, we know `supported(v8, v19, v18)`. So, if we can place `v8` at `pose v19`, the `on(v8, v18)` condition will be met because `v8` is already of `type v17`.
           
           Currently, `v8` is at `pose v9`. We need to pick `v8` from `pose v9` and place it at `pose v19`.
           There are `pick` and `place` actions available for `v8` with arm `v4`.
           To pick `v8` from `pose v9` with arm `v4`, we can use `grasp v21` and `bconf #o3`. The action is `(pick v4 v8 v9 v21 #o3 #o4)`.
           To place `v8` at `pose v19` with arm `v4`, we can use `grasp v21` and `bconf #o3`. The action is `(place v4 v8 v19 v21 #o3 #o4)`.
           
           The current robot base configuration is `v3`. The pick/place actions for `v8` at `pose v9` or `v19` with `grasp v21` use `bconf #o3`. Therefore, the robot needs to move its base from `v3` to `#o3` before picking. After picking, it can stay at `#o3` to place the object.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 v21 #o3 #o4)
           (place v4 v8 v19 v21 #o3 #o4)

