User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v20)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom atconf(v14, v15)
           Atom rock(v1)
           Atom rock(v8)
           Atom objective(v18)
           Atom type(v4, v2)
           Atom free(v12, v16)
           Atom conf(v14, v15)
           Atom objective(v17)
           Atom objective(v19)
           Atom rock(v7)
           Atom type(v3, v2)
           Atom rock(v3)
           Atom camera(v10)
           Atom lander(v9)
           Atom type(v1, v2)
           Atom atconf(v12, v13)
           Atom rock(v4)
           Atom rock(v5)
           Atom type(v5, v6)
           Atom onboard(v10, v14)
           Atom type(v7, v6)
           Atom rover(v12)
           Atom supports(v10, v11)
           Atom type(v8, v6)
           Atom rover(v14)
           Atom conf(v12, v13)
           Atom mode(v11)
           Atom free(v14, v16)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q1, v8)
           Atom conf(v14, #q1)
           Atom above(v14, #q3, v7)
           Atom conf(v14, #q3)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v1)
           Atom above(v14, #q7, v1)
           Atom conf(v14, #q7)
           Atom imagevisible(v14, #q12, #y6, v19)
           Atom imagerange(v14, #q12, v19)
           Atom conf(v14, #q12)
           Atom ray(#y6)
           Atom imagevisible(v12, #q8, #y3, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y3)
           Atom imagevisible(v12, #q11, #y5, v17)
           Atom imagerange(v12, #q11, v17)
           Atom conf(v12, #q11)
           Atom ray(#y5)
           Atom imagevisible(v14, #q15, #y9, v17)
           Atom imagerange(v14, #q15, v17)
           Atom conf(v14, #q15)
           Atom ray(#y9)
           Atom imagevisible(v12, #q6, #y2, v20)
           Atom imagerange(v12, #q6, v20)
           Atom conf(v12, #q6)
           Atom ray(#y2)
           Atom imagevisible(v14, #q14, #y8, v20)
           Atom imagerange(v14, #q14, v20)
           Atom conf(v14, #q14)
           Atom ray(#y8)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom above(v12, #o5, v5)
           Atom above(v14, #q4, v4)
           Atom conf(v14, #q4)
           Atom above(v12, #o5, v4)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #q13, #y7, v18)
           Atom imagerange(v14, #q13, v18)
           Atom conf(v14, #q13)
           Atom ray(#y7)
           Atom imagevisible(v12, #q9, #y4, v18)
           Atom imagerange(v12, #q9, v18)
           Atom conf(v12, #q9)
           Atom ray(#y4)
           Atom above(v14, #q10, v3)
           Atom conf(v14, #q10)
           Atom above(v12, #o5, v3)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, v15, #t12, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #t16, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v12, v13, #t9, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #t10, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, v15, #t17, #q10)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #t19, #q3)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, v15, #t13, #q3)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q3, #t23, #q13)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v12, #q2, #t18, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q8, #t7, #q2)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q3, #t24, #q14)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q13, #t21, #q0)
           Atom motion(v14, #q7, #t5, #q0)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q0, #t11, v15)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q14)
           Atom motion(v14, #q1, #t1, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q3, #t2, #q0)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q0, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q0)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #t6, #q2)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, v13, #t8, #q6)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q15)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q14, #o2, #q5)
           Atom motion(v14, #q5, #t4, #q0)
           Atom motion(v14, #q15, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q14)
           Atom motion(v14, v15, #t15, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q4, #o2, #q15)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, v15, #t14, #q4)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q15, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #t3, #q0)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q12, #t20, #q0)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q3, #t22, #q12)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q6, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #q1 v8 v16))
           ((sample_rock v14 #q10 v3 v16))
           ((sample_rock v14 #q3 v7 v16))
           ((sample_rock v14 #q4 v4 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((sample_rock v14 #q7 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #t18 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t6 #q2))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t7 #q2))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q9))
           ((move v12 v13 #t8 #q6))
           ((move v12 v13 #t9 #q8))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #o2 #q15))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q0 #t11 v15))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q0))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t20 #q0))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t21 #q0))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q5))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q15 #o2 #q0))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 #q5))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t2 #q0))
           ((move v14 #q3 #t22 #q12))
           ((move v14 #q3 #t23 #q13))
           ((move v14 #q3 #t24 #q14))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t3 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t4 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t19 #q3))
           ((move v14 #q7 #t5 #q0))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q1))
           ((move v14 v15 #t13 #q3))
           ((move v14 v15 #t14 #q4))
           ((move v14 v15 #t15 #q5))
           ((move v14 v15 #t16 #q7))
           ((move v14 v15 #t17 #q10))
           ((calibrate v12 #q11 #y5 v17 v10))
           ((calibrate v12 #q6 #y2 v20 v10))
           ((calibrate v12 #q8 #y3 v19 v10))
           ((calibrate v12 #q9 #y4 v18 v10))
           ((calibrate v14 #q12 #y6 v19 v10))
           ((calibrate v14 #q13 #y7 v18 v10))
           ((calibrate v14 #q14 #y8 v20 v10))
           ((calibrate v14 #q15 #y9 v17 v10))
           ((take_image v12 #q11 #y5 v17 v10 v11))
           ((take_image v12 #q6 #y2 v20 v10 v11))
           ((take_image v12 #q8 #y3 v19 v10 v11))
           ((take_image v12 #q9 #y4 v18 v10 v11))
           ((take_image v14 #q12 #y6 v19 v10 v11))
           ((take_image v14 #q13 #y7 v18 v10 v11))
           ((take_image v14 #q14 #y8 v20 v10 v11))
           ((take_image v14 #q15 #y9 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v20 v11))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Path to New Knowledge**
           
           Alright, let's break this down. My objective is to achieve `new-axiom@0()`, but that's just a conjunction of sub-goals. I need to get images of four specific objectives (v17, v18, v19, v20) in a certain mode (v11), and analyze two types of rocks (v2, which includes rocks v1, v3, and v4; and v6, which includes rocks v5, v7, and v8).  Plus, there's the initial and final configuration constraints for my rovers.
           
           I see that I have two rovers at my disposal: v12, and v14, each with a free store (v16). They're both initially at specific configurations, v12 at v13 and v14 at v15, and they each must return to that state. My camera, v10, supports the necessary imaging mode, v11.
           
           To analyze rocks, I'll need to use the `sample_rock` action, but that requires the rover to be *above* the rock and have a free store. Then, the `send_analysis` action will get that data to the lander.  To get the images, I'll use `calibrate` then `take_image` actions, followed by sending those images.
           
           Here's the plan I've cooked up, keeping in mind the need to end in the right spot, with the store free:
           
           **v14 Plan (analyzing rock v3):**
           
           1.  v14 will move to a location to get above rock `v3`
           2.  v14 will sample the rock
           3.  v14 moves to a comms point
           4.  v14 sends the analysis data to the lander
           5.  v14 will drop the sample
           6.  v14 returns to its starting configuration at location `v15`
           
           **v12 Plan (imaging objectives and analyzing rock v8):**
           
           1.  v12 will move to location above the first objective.
           2.  v12 will calibrate the camera
           3.  v12 will take an image of objective v18
           4.  Repeat the above steps for the remaining objectives, v17, v20, and v19.
           5.  Then, v12 moves to a location above rock `v8`.
           6.  v12 will sample the rock.
           7.  v12 moves to a communication location.
           8.  v12 sends the analysis data for rock `v8`.
           9.  v12 sends the images.
           10. v12 drops its sample.
           11. v12 returns to its initial configuration location, v13.
           
           Now, that should do it! The plan accomplishes the sub-goals and should leave everything in the target state, including satisfying the final location and store conditions.
           
)

Model:     **The Path to New Knowledge**
           
           Alright, let's break this down. My objective is to achieve `new-axiom@0()`, but that's just a conjunction of sub-goals. I need to get images of four specific objectives (v17, v18, v19, v20) in a certain mode (v11), and analyze two types of rocks (v2, which includes rocks v1, v3, and v4; and v6, which includes rocks v5, v7, and v8).  Plus, there's the initial and final configuration constraints for my rovers.
           
           I see that I have two rovers at my disposal: v12, and v14, each with a free store (v16). They're both initially at specific configurations, v12 at v13 and v14 at v15, and they each must return to that state. My camera, v10, supports the necessary imaging mode, v11.
           
           To analyze rocks, I'll need to use the `sample_rock` action, but that requires the rover to be *above* the rock and have a free store. Then, the `send_analysis` action will get that data to the lander.  To get the images, I'll use `calibrate` then `take_image` actions, followed by sending those images.
           
           Here's the plan I've cooked up, keeping in mind the need to end in the right spot, with the store free:
           
           **v14 Plan (analyzing rock v3):**
           
           1.  v14 will move to a location to get above rock `v3`
           2.  v14 will sample the rock
           3.  v14 moves to a comms point
           4.  v14 sends the analysis data to the lander
           5.  v14 will drop the sample
           6.  v14 returns to its starting configuration at location `v15`
           
           **v12 Plan (imaging objectives and analyzing rock v8):**
           
           1.  v12 will move to location above the first objective.
           2.  v12 will calibrate the camera
           3.  v12 will take an image of objective v18
           4.  Repeat the above steps for the remaining objectives, v17, v20, and v19.
           5.  Then, v12 moves to a location above rock `v8`.
           6.  v12 will sample the rock.
           7.  v12 moves to a communication location.
           8.  v12 sends the analysis data for rock `v8`.
           9.  v12 sends the images.
           10. v12 drops its sample.
           11. v12 returns to its initial configuration location, v13.
           
           Now, that should do it! The plan accomplishes the sub-goals and should leave everything in the target state, including satisfying the final location and store conditions.
           

