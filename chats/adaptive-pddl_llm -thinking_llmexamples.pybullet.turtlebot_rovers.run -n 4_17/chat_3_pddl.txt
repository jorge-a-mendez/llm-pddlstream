User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v14)
           Atom rock(v5)
           Atom rock(v4)
           Atom rock(v7)
           Atom camera(v10)
           Atom objective(v17)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom rock(v8)
           Atom store(v16)
           Atom objective(v19)
           Atom rover(v12)
           Atom type(v1, v2)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom objective(v18)
           Atom mode(v11)
           Atom rover(v14)
           Atom conf(v14, v15)
           Atom type(v3, v2)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom objective(v20)
           Atom rock(v1)
           Atom rock(v3)
           Atom type(v7, v6)
           Atom conf(v12, v13)
           Atom free(v14, v16)
           Atom type(v4, v2)
           Atom supports(v10, v11)
           Atom atconf(v14, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q2, #y1, v20)
           Atom imagerange(v14, #q2, v20)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q7, #y5, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #q0, v5)
           Atom conf(v12, #q0)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom above(v12, #q4, v1)
           Atom conf(v12, #q4)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v14, #q5, #y3, v19)
           Atom imagerange(v14, #q5, v19)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q8, v4)
           Atom conf(v12, #q8)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom motion(v14, v15, #t10, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #t15, #q6)
           Atom motion(v14, #q3, #t11, v15)
           Atom motion(v14, #q6, #t13, #q3)
           Atom motion(v14, #q3, #t19, #q7)
           Atom motion(v14, #q7, #t18, #q3)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v12, #q1, #t1, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q3, #t16, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, v15, #t9, #q5)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q5, #t14, #q3)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v12, v13, #t12, #q8)
           Atom motion(v12, #q8, #t17, #q1)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, v15, #t8, #q2)
           Atom motion(v14, #q3, #t2, #q2)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q2, #t3, #q3)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t7, #q4)
           Atom motion(v12, #q1, #t5, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, v13, #t6, #q0)
           Atom motion(v12, #q1, #t4, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q8)
           Atom motion(v12, #o3, #o2, #q0)
           Atom motion(v12, #q8, #o2, #o3)
           Atom motion(v12, #q1, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q4)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #q1)
           Atom motion(v12, #q0, #o2, #o3)
           Atom motion(v12, #q4, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v5 v16))
           ((sample_rock v12 #q4 v1 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q0))
           ((move v12 #o3 #o2 #q1))
           ((move v12 #o3 #o2 #q4))
           ((move v12 #o3 #o2 #q8))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o3))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q1 #o2 #o3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #t1 v13))
           ((move v12 #q1 #t4 #q0))
           ((move v12 #q1 #t5 #q4))
           ((move v12 #q4 #o2 #o3))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q8 #o2 #o3))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t17 #q1))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t12 #q8))
           ((move v12 v13 #t6 #q0))
           ((move v12 v13 #t7 #q4))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t3 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #t11 v15))
           ((move v14 #q3 #t15 #q6))
           ((move v14 #q3 #t16 #q5))
           ((move v14 #q3 #t19 #q7))
           ((move v14 #q3 #t2 #q2))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t14 #q3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t13 #q3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t18 #q3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q6))
           ((move v14 v15 #t8 #q2))
           ((move v14 v15 #t9 #q5))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q2 #y1 v20 v10))
           ((calibrate v14 #q5 #y3 v19 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((calibrate v14 #q7 #y5 v17 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q2 #y1 v20 v10 v11))
           ((take_image v14 #q5 #y3 v19 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q7 #y5 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v14 #q3 #y2 v9 v20 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Strategic Plan for Axiom Achievement**
           
           Okay, here's my thought process to achieve the goal `new-axiom@0()`: It's essentially a conjunctive goal, meaning I need to satisfy a bunch of individual atoms. After a careful decomposition of the goal, it's clear the key tasks are to obtain and transmit images (`receivedimage`) and rock analyses (`receivedanalysis`). There's also some initial configuration state that I'll need to account for.
           
           First, let's address the images. I have two rovers at my disposal: `v12` and `v14`. I've determined `v12` is the most efficient choice to handle the image acquisition due to its proximity to the objectives and available camera view. The goal is to get images of `v17`, `v18`, `v19`, and `v20` using mode `v11`. `v12` needs to move to configuration `#o3` to acquire all those images, then move to `#q1` to send those images to the lander. The sequence will be:
           
           1.  **Move** `v12` to `#o3`.
           2.  **Calibrate** camera `v10` for each objective (`v17`, `v18`, `v19`, and `v20`).
           3.  **Take Images** (for each of the four objectives) using `v10` and `v11`.
           4.  **Move** `v12` to `#q1`.
           5.  **Send Images** to lander (`v9`).
           6.  **Move v12 back to v13** to satisfy the initial goal constraints.
           
           Now, for rock analyses. Rover `v14` is the better choice for this task. It needs to acquire and transmit analyses of rocks `v1, v3, v4` (stones) and `v5, v7, v8` (soil). The process will be:
           
           1.  **Move** `v14` to configuration `#o5`.
           2.  **Sample** a rock (`v1`, and then `v3`, `v4`, `v5`, `v7`, `v8`), storing each sample in the store (`v16`).
           3.  **Move** to `#q3`.
           4.  **Send Analysis** for each of the rocks to the lander.
           5.  **Drop Rock** from store to prepare for the next sample.
           6. **Move v14 back to v15** to satisfy the initial goal constraints.
           
           Because the goal requires the final states of `atconf(v12, v13)` and `atconf(v14, v15)`, these final movements are essential to satisfy those constraints. The final plan consists of the sequential actions of each rover, and this should yield the desired goal.
           
)

Model:     **Strategic Plan for Axiom Achievement**
           
           Okay, here's my thought process to achieve the goal `new-axiom@0()`: It's essentially a conjunctive goal, meaning I need to satisfy a bunch of individual atoms. After a careful decomposition of the goal, it's clear the key tasks are to obtain and transmit images (`receivedimage`) and rock analyses (`receivedanalysis`). There's also some initial configuration state that I'll need to account for.
           
           First, let's address the images. I have two rovers at my disposal: `v12` and `v14`. I've determined `v12` is the most efficient choice to handle the image acquisition due to its proximity to the objectives and available camera view. The goal is to get images of `v17`, `v18`, `v19`, and `v20` using mode `v11`. `v12` needs to move to configuration `#o3` to acquire all those images, then move to `#q1` to send those images to the lander. The sequence will be:
           
           1.  **Move** `v12` to `#o3`.
           2.  **Calibrate** camera `v10` for each objective (`v17`, `v18`, `v19`, and `v20`).
           3.  **Take Images** (for each of the four objectives) using `v10` and `v11`.
           4.  **Move** `v12` to `#q1`.
           5.  **Send Images** to lander (`v9`).
           6.  **Move v12 back to v13** to satisfy the initial goal constraints.
           
           Now, for rock analyses. Rover `v14` is the better choice for this task. It needs to acquire and transmit analyses of rocks `v1, v3, v4` (stones) and `v5, v7, v8` (soil). The process will be:
           
           1.  **Move** `v14` to configuration `#o5`.
           2.  **Sample** a rock (`v1`, and then `v3`, `v4`, `v5`, `v7`, `v8`), storing each sample in the store (`v16`).
           3.  **Move** to `#q3`.
           4.  **Send Analysis** for each of the rocks to the lander.
           5.  **Drop Rock** from store to prepare for the next sample.
           6. **Move v14 back to v15** to satisfy the initial goal constraints.
           
           Because the goal requires the final states of `atconf(v12, v13)` and `atconf(v14, v15)`, these final movements are essential to satisfy those constraints. The final plan consists of the sequential actions of each rover, and this should yield the desired goal.
           

