User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v14)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom rock(v3)
           Atom type(v5, v6)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom rock(v8)
           Atom rock(v1)
           Atom rock(v4)
           Atom conf(v14, v15)
           Atom conf(v12, v13)
           Atom atconf(v14, v15)
           Atom lander(v9)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom objective(v19)
           Atom free(v12, v16)
           Atom type(v3, v2)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom objective(v18)
           Atom supports(v10, v11)
           Atom type(v1, v2)
           Atom mode(v11)
           Atom store(v16)
           Atom objective(v20)
           Atom rock(v5)
           Atom rover(v12)
           Atom onboard(v10, v12)
           Atom above(v12, #q10, v5)
           Atom conf(v12, #q10)
           Atom imagevisible(v12, #q5, #y3, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q12, v4)
           Atom conf(v12, #q12)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q8, v3)
           Atom conf(v12, #q8)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom imagevisible(v14, #q11, #y7, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q9, #y6, v20)
           Atom imagerange(v14, #q9, v20)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom above(v14, #o5, v3)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v14, #q14, #y9, v19)
           Atom imagerange(v14, #q14, v19)
           Atom conf(v14, #q14)
           Atom ray(#y9)
           Atom imagevisible(v12, #q4, #y2, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom imagevisible(v14, #q13, #y8, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y8)
           Atom imagevisible(v12, #q0, #y0, v17)
           Atom imagerange(v12, #q0, v17)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q7, #y5, v9)
           Atom comrange(v14, #q7, v9)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, v13, #t23, #q10)
           Atom motion(v12, v13, #t24, #q12)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, v15, #t20, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v12, #q2, #t25, #q10)
           Atom motion(v12, #q12, #t22, #q2)
           Atom motion(v12, #q2, #t26, #q12)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q10, #t21, #q2)
           Atom motion(v12, #q2, #t5, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v14, #q7, #t6, v15)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q2, #t13, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #t10, #q2)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, v13, #t2, #q4)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q2, #t16, #q4)
           Atom motion(v12, #q4, #t9, #q2)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q2, #t14, #q6)
           Atom motion(v12, #q6, #t11, #q2)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q3, #t7, #q7)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #t4, #q3)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t8, #q2)
           Atom motion(v12, v13, #t1, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q8, #t12, #q2)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q2, #t15, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q2, #t3, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v14, #q9, #t17, #q7)
           Atom motion(v14, v15, #t19, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q7, #t18, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q6)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q10 v5 v16))
           ((sample_rock v12 #q12 v4 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t8 #q2))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t21 #q2))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t22 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #t13 #q5))
           ((move v12 #q2 #t14 #q6))
           ((move v12 #q2 #t15 #q8))
           ((move v12 #q2 #t16 #q4))
           ((move v12 #q2 #t25 #q10))
           ((move v12 #q2 #t26 #q12))
           ((move v12 #q2 #t3 #q1))
           ((move v12 #q2 #t5 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t9 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t10 #q2))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t11 #q2))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t12 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q0))
           ((move v12 v13 #t2 #q4))
           ((move v12 v13 #t23 #q10))
           ((move v12 v13 #t24 #q12))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t7 #q7))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #t18 #q9))
           ((move v14 #q7 #t6 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t17 #q7))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t19 #q9))
           ((move v14 v15 #t20 #q11))
           ((move v14 v15 #t4 #q3))
           ((calibrate v12 #q0 #y0 v17 v10))
           ((calibrate v12 #q4 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q11 #y7 v18 v10))
           ((calibrate v14 #q13 #y8 v17 v10))
           ((calibrate v14 #q14 #y9 v19 v10))
           ((calibrate v14 #q9 #y6 v20 v10))
           ((take_image v12 #q0 #y0 v17 v10 v11))
           ((take_image v12 #q4 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q11 #y7 v18 v10 v11))
           ((take_image v14 #q13 #y8 v17 v10 v11))
           ((take_image v14 #q14 #y9 v19 v10 v11))
           ((take_image v14 #q9 #y6 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q7 #y5 v9 v1))
           ((send_analysis v14 #q7 #y5 v9 v3))
           ((send_analysis v14 #q7 #y5 v9 v4))
           ((send_analysis v14 #q7 #y5 v9 v7))
           ((send_analysis v14 #q7 #y5 v9 v8))
           ((send_analysis v14 #q7 #y5 v9 v5))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v12 #q2 #y1 v9 v20 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q7 #y5 v9 v18 v11))
           ((send_image v14 #q7 #y5 v9 v17 v11))
           ((send_image v14 #q7 #y5 v9 v19 v11))
           ((send_image v14 #q7 #y5 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each equipped with a camera v10. Both rovers are initially at different configurations (v13 and v15 respectively) and have a free store v16. There are several rocks (v1, v3, v4, v5, v7, v8) of different types (v2, v6) and objectives (v17, v18, v19, v20). A lander v9 is present for communication. The goal `new-axiom@0()` can be satisfied by analyzing rocks of type v2 and v6, and receiving images of objectives v17, v18, v19, and v20. It also requires both rovers to have a free store and be at a configuration. The current state already satisfies the `atconf` and `free` predicates for both rovers.
           
           To achieve the goal, we need to:
           1. Analyze rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8).
           2. Receive images of objectives v17, v18, v19, and v20.
           
           We can achieve rock analysis by sampling them and then sending the analysis.
           We can achieve image reception by taking images and then sending them.
           
           Let's prioritize Rover v12 for rock analysis and image acquisition/transmission, as it has more "above" predicates listed.
           
           For rock analysis:
           - Rover v12 can sample v5, v4, v3, v1, v8, v7.
           - Rover v14 can sample v1, v3, v4, v7, v8, v5.
           
           We need to analyze one rock of type v2 and one of type v6.
           From the initial state:
           - type(v1, v2)
           - type(v3, v2)
           - type(v4, v2)
           - type(v5, v6)
           - type(v7, v6)
           - type(v8, v6)
           
           Let's pick v3 (type v2) and v5 (type v6) for analysis.
           
           For image reception:
           - Objective v17: v12 can take image at #q0, v14 at #q13.
           - Objective v18: v12 can take image at #q6, v14 at #q11.
           - Objective v19: v12 can take image at #q4, v14 at #q14.
           - Objective v20: v12 can take image at #q5, v14 at #q9.
           
           We need to calibrate the camera before taking images.
           We need to move the rover to the correct configuration for sampling, imaging, and communication.
           
           Let's plan to use rover v12 to sample a rock of type v2 and one of type v6 and send their analyses, and to take and send all objective images.
           
           Plan:
           1. Move v12 to #q8 to sample rock v3 (type v2).
           2. Sample rock v3.
           3. Move v12 to #q10 to sample rock v5 (type v6).
           4. Sample rock v5.
           5. Move v12 to #q2 to send analyses for v3 and v5.
           6. Send analysis for v3.
           7. Send analysis for v5.
           8. Calibrate v12 camera at #q0 for v17.
           9. Take image of v17.
           10. Calibrate v12 camera at #q6 for v18.
           11. Take image of v18.
           12. Calibrate v12 camera at #q4 for v19.
           13. Take image of v19.
           14. Calibrate v12 camera at #q5 for v20.
           15. Take image of v20.
           16. Move v12 to #q2 to send images.
           17. Send image of v17.
           18. Send image of v18.
           19. Send image of v19.
           20. Send image of v20.
           
           This plan achieves all the required conditions for `new-axiom@0()`.
           
           --Plan--:
           (move v12 v13 #o2 #q8)
           (sample_rock v12 #q8 v3 v16)
           (move v12 #q8 #o2 #q10)
           (sample_rock v12 #q10 v5 v16)
           (move v12 #q10 #t21 #q2)
           (send_analysis v12 #q2 #y1 v9 v3)
           (send_analysis v12 #q2 #y1 v9 v5)
           (calibrate v12 #q0 #y0 v17 v10)
           (take_image v12 #q0 #y0 v17 v10 v11)
           (move v12 #q0 #o2 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #o2 #q4)
           (calibrate v12 #q4 #y2 v19 v10)
           (take_image v12 #q4 #y2 v19 v10 v11)
           (move v12 #q4 #o2 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #t10 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (send_image v12 #q2 #y1 v9 v18 v11)
           (send_image v12 #q2 #y1 v9 v19 v11)
           (send_image v12 #q2 #y1 v9 v20 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan was rejected because the goal `new-axiom@0()` was not satisfied. The axiom `new-axiom@0()` requires:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `type(?stone, v2)` and `receivedanalysis(?stone)` (meaning one rock of type v2 is analyzed)
           - `type(?soil, v6)` and `receivedanalysis(?soil)` (meaning one rock of type v6 is analyzed)
           
           The initial state already provides `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)`.
           My previous plan correctly identified the need to analyze rocks and send images. However, the movement and calibration steps must be carefully sequenced to ensure preconditions are met, and that the `atconf` state is correctly tracked, especially when a rover moves away from its initial configuration `v13` or `v15` for actions and then needs to return to that initial configuration for the axiom to hold (this seems to be a common issue with `atconf` in the axiom).
           
           Let's re-evaluate the plan, making sure the final state satisfies the `atconf` requirements of the axiom, and that all images are received and at least one rock of each required type is analyzed and transmitted.
           
           To simplify the `atconf` part of the goal, the rovers should ideally end up at `v13` and `v15` respectively, or at configurations that are equivalent in the eyes of the axiom. Since the problem states `atconf(v12, v13)` and `atconf(v14, v15)` as part of the axiom, the rovers must be in these exact configurations when the goal is checked. This means any plan must end with the rovers returning to their initial configurations.
           
           Revised strategy:
           1. **Rover v12**: Analyze one rock of type v2 and one of type v6, and send their analyses.
           2. **Rover v12**: Take and send images for two objectives.
           3. **Rover v14**: Take and send images for the other two objectives.
           4. Both rovers must return to their initial configurations (`v13` for v12, `v15` for v14) at the end.
           
           Let's pick v3 (type v2) and v5 (type v6) for analysis.
           Objectives: v17, v18, v19, v20.
           Let v12 handle v17 and v18.
           Let v14 handle v19 and v20.
           
           Detailed Plan:
           
           **Rover v12 actions:**
           - Move to #q8 (above v3).
           - Sample v3.
           - Move to #q10 (above v5).
           - Sample v5.
           - Move to #q2 (comms config).
           - Send analysis of v3.
           - Send analysis of v5.
           - Calibrate for v17 at #q0.
           - Take image of v17.
           - Move to #q6 (image v18 config).
           - Calibrate for v18.
           - Take image of v18.
           - Move to #q2 (comms config).
           - Send image of v17.
           - Send image of v18.
           - Move v12 back to v13.
           
           **Rover v14 actions:**
           - Calibrate for v19 at #q14.
           - Take image of v19.
           - Move to #q9 (image v20 config).
           - Calibrate for v20.
           - Take image of v20.
           - Move to #q7 (comms config).
           - Send image of v19.
           - Send image of v20.
           - Move v14 back to v15.
           
           All calibration and image actions require the rover to be at the correct configuration and the camera to be onboard and supported, which is true. The communication actions require `comvisible` at the current config.
           
           --Plan--:
           (move v12 v13 #o2 #q8)
           (sample_rock v12 #q8 v3 v16)
           (move v12 #q8 #o2 #q10)
           (sample_rock v12 #q10 v5 v16)
           (move v12 #q10 #t21 #q2)
           (send_analysis v12 #q2 #y1 v9 v3)
           (send_analysis v12 #q2 #y1 v9 v5)
           (move v12 #q2 #o2 #q0)
           (calibrate v12 #q0 #y0 v17 v10)
           (take_image v12 #q0 #y0 v17 v10 v11)
           (move v12 #q0 #o2 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t11 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (send_image v12 #q2 #y1 v9 v18 v11)
           (calibrate v14 #q14 #y9 v19 v10)
           (take_image v14 #q14 #y9 v19 v10 v11)
           (move v14 #q14 #o2 #q9)
           (calibrate v14 #q9 #y6 v20 v10)
           (take_image v14 #q9 #y6 v20 v10 v11)
           (move v14 #q9 #t17 #q7)
           (send_image v14 #q7 #y5 v9 v19 v11)
           (send_image v14 #q7 #y5 v9 v20 v11)
           (move v12 #q2 #t5 v13)
           (move v14 #q7 #t6 v15)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal `new-axiom@0()` includes several conditions:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers must be in their specific initial configurations at the end of the plan.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers' stores must be free at the end. Initially, they are free. If we sample, we need to drop the sample.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: All four objectives must have their images received.
           4. `receivedanalysis(?stone)` where `type(?stone, v2)`: At least one rock of type v2 must be analyzed and its analysis received.
           5. `receivedanalysis(?soil)` where `type(?soil, v6)`: At least one rock of type v6 must be analyzed and its analysis received.
           
           My previous plan failed to satisfy `new-axiom@0()`, likely because I sampled rocks, but didn't drop them, thus `free(v12, v16)` would be false. Also, I need to ensure the final positions of the rovers are `v13` and `v15`.
           
           Let's refine the plan, explicitly including `drop_rock` actions after sampling and sending analysis to ensure stores are free.
           
           **Selected Rocks for Analysis:**
           - Type v2: v3 (sampled by v12)
           - Type v6: v5 (sampled by v12)
           
           **Selected Objectives for Images:**
           - v17, v18 (handled by v12)
           - v19, v20 (handled by v14)
           
           **Revised Plan Strategy:**
           
           **Rover v12:**
           1. Move to a configuration where v3 is `above`.
           2. `sample_rock` v3.
           3. Move to a configuration where v5 is `above`.
           4. `sample_rock` v5.
           5. Move to a communication configuration.
           6. `send_analysis` for v3.
           7. `drop_rock` v3 (assuming it was in v12's store). *Correction: `drop_rock` clears the store, not specific rock. `full(v12, v16)` becomes `free(v12, v16)`.*
           8. `send_analysis` for v5.
           9. `drop_rock` v5.
           10. Move to configurations for imaging v17, v18, `calibrate` and `take_image` for each.
           11. Move to a communication configuration.
           12. `send_image` for v17 and v18.
           13. Move back to `v13`.
           
           **Rover v14:**
           1. Move to configurations for imaging v19, v20, `calibrate` and `take_image` for each.
           2. Move to a communication configuration.
           3. `send_image` for v19 and v20.
           4. Move back to `v15`.
           
           It's important to remember that `drop_rock` simply makes the store free, it doesn't specify which rock is dropped. We have two rocks to sample and one store for each rover. So rover v12 will pick up v3 (store full), then pick up v5 (this is an issue, a rover has only one store, so it can only carry one rock at a time).
           
           **Corrected Rock Handling Logic:**
           Each rover has only one `store`. We need to analyze one rock of type v2 and one of type v6.
           - Rover v12 samples v3 (type v2). Sends analysis. Drops v3.
           - Rover v14 samples v5 (type v6). Sends analysis. Drops v5.
           This way both rovers can ensure their stores are free at the end.
           
           Let's adjust the plan with this in mind.
           
           --Plan--:
           (move v12 v13 #o2 #q8)
           (sample_rock v12 #q8 v3 v16)
           (move v12 #q8 #t12 #q2)
           (send_analysis v12 #q2 #y1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #q0)
           (calibrate v12 #q0 #y0 v17 v10)
           (take_image v12 #q0 #y0 v17 v10 v11)
           (move v12 #q0 #o2 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t11 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (send_image v12 #q2 #y1 v9 v18 v11)
           (move v12 #q2 #t5 v13)
           (move v14 v15 #t4 #q3)
           (sample_rock v14 #q3 v5 v16)
           (move v14 #q3 #t7 #q7)
           (send_analysis v14 #q7 #y5 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q7 #o2 #q14)
           (calibrate v14 #q14 #y9 v19 v10)
           (take_image v14 #q14 #y9 v19 v10 v11)
           (move v14 #q14 #o2 #q9)
           (calibrate v14 #q9 #y6 v20 v10)
           (take_image v14 #q9 #y6 v20 v10 v11)
           (move v14 #q9 #t17 #q7)
           (send_image v14 #q7 #y5 v9 v19 v11)
           (send_image v14 #q7 #y5 v9 v20 v11)
           (move v14 #q7 #t6 v15)

