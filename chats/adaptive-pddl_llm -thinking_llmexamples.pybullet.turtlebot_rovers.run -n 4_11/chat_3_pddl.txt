User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v4, v2)
           Atom rover(v14)
           Atom rover(v12)
           Atom free(v14, v16)
           Atom onboard(v10, v14)
           Atom lander(v9)
           Atom objective(v18)
           Atom free(v12, v16)
           Atom rock(v7)
           Atom conf(v14, v15)
           Atom objective(v20)
           Atom onboard(v10, v12)
           Atom conf(v12, v13)
           Atom mode(v11)
           Atom rock(v8)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom type(v1, v2)
           Atom objective(v19)
           Atom rock(v4)
           Atom objective(v17)
           Atom atconf(v14, v15)
           Atom type(v7, v6)
           Atom atconf(v12, v13)
           Atom rock(v3)
           Atom type(v3, v2)
           Atom type(v8, v6)
           Atom camera(v10)
           Atom rock(v1)
           Atom type(v5, v6)
           Atom store(v16)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q7, #y5, v20)
           Atom imagerange(v14, #q7, v20)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q4, #y3, v17)
           Atom imagerange(v14, #q4, v17)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom above(v14, #q10, v7)
           Atom conf(v14, #q10)
           Atom above(v14, #q12, v4)
           Atom conf(v14, #q12)
           Atom imagevisible(v14, #q0, #y0, v19)
           Atom imagerange(v14, #q0, v19)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q8, #y6, v17)
           Atom imagerange(v12, #q8, v17)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v3)
           Atom above(v12, #q3, v1)
           Atom conf(v12, #q3)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom imagevisible(v12, #q13, #y9, v19)
           Atom imagerange(v12, #q13, v19)
           Atom conf(v12, #q13)
           Atom ray(#y9)
           Atom above(v12, #q5, v7)
           Atom conf(v12, #q5)
           Atom imagevisible(v12, #q11, #y8, v20)
           Atom imagerange(v12, #q11, v20)
           Atom conf(v12, #q11)
           Atom ray(#y8)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q9, #y7, v18)
           Atom imagerange(v12, #q9, v18)
           Atom conf(v12, #q9)
           Atom ray(#y7)
           Atom above(v12, #o5, v5)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, v15, #t2, #q0)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q1, #t5, v15)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #t4, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, v13, #t3, #q3)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #t7, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #t1, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q3, #t6, #q2)
           Atom motion(v12, #q9, #t13, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q1, #t9, #q10)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, v15, #t10, #q10)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q10, #t15, #q1)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, v15, #t11, #q12)
           Atom motion(v14, #q12, #o2, #q0)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q12, #t16, #q1)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, v13, #t8, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q8, #t12, #q2)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #t14, #q2)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q9, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q3 v1 v16))
           ((sample_rock v12 #q5 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q10 v7 v16))
           ((sample_rock v14 #q12 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t14 #q2))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #t1 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t6 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t7 #q2))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t12 #q2))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t13 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t3 #q3))
           ((move v12 v13 #t4 #q5))
           ((move v12 v13 #t8 #q8))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #t5 v15))
           ((move v14 #q1 #t9 #q10))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t15 #q1))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t16 #q1))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q10))
           ((move v14 v15 #t11 #q12))
           ((move v14 v15 #t2 #q0))
           ((calibrate v12 #q11 #y8 v20 v10))
           ((calibrate v12 #q13 #y9 v19 v10))
           ((calibrate v12 #q8 #y6 v17 v10))
           ((calibrate v12 #q9 #y7 v18 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q4 #y3 v17 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((calibrate v14 #q7 #y5 v20 v10))
           ((take_image v12 #q11 #y8 v20 v10 v11))
           ((take_image v12 #q13 #y9 v19 v10 v11))
           ((take_image v12 #q8 #y6 v17 v10 v11))
           ((take_image v12 #q9 #y7 v18 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q4 #y3 v17 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q7 #y5 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_image v12 #q2 #y2 v9 v20 v11))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Initial Assessment and Planning for `new-axiom@0()`**
           
           Okay, here's my plan to achieve the goal `new-axiom@0()`. This looks like a fun one! The core of it boils down to satisfying a conjunction of conditions, some of which are already true in the initial state. The hard part is ensuring all the `receivedimage` and `receivedanalysis` predicates are achieved.
           
           First, I need to break down the task:
           
           1.  **Image Acquisition:** I need to receive images for four objectives: `v17`, `v18`, `v19`, and `v20`.
           2.  **Analysis Acquisition:** I have to receive analysis for rocks of type `v2` (stone, specifically `v4`, `v1`, and `v3`) and rocks of type `v6` (soil, `v7`, `v8`, and `v5`).
           
           Since I'm looking for a straightforward solution, the most obvious approach is to make a sequence of actions:
           *   Use `v14` (which is already at a good location) for most of the work.
           *   Get and send an image from `v14` for each of the four objectives.
           *   Then sample the rocks and send the results to `v9`.
           
           To get an image (`receivedimage`), I'll need to calibrate the camera and then take the picture. Then, send the image.
           To get rock analysis (`receivedanalysis`), I'll need to sample the rock, then send the analysis. And then I have to drop the sample.
           
           I've looked at the available `imagevisible` and `comvisible` facts for each rover. I can use the existing `comvisible` to `#q1`, and the existing image locations. `v14` has some of the best locations for doing this. The rovers have to move to a spot to take an image, then I can use `send_image` and `send_analysis`.
           
           So, the general plan is this:
           1.  **Move to Image Target:** `v14` moves to a location where it can see the objective.
           2.  **Calibrate and Image:** Calibrate the camera, take the picture.
           3.  **Move to Communication Point:** Move to `#q1`.
           4.  **Send Image:** `send_image`.
           5.  **Sampling and Analysis:** Then I will repeat this process but for the `receivedanalysis` sub-goals by sampling rocks and sending their analysis.
           
           **The Strategy Implementation**
           
           Alright, let's nail down the specifics, making sure I use the available motion and perception facts:
           
           1.  **Rover `v14` (Currently at `v15`)**
           
           *   **Imaging:**
               *   `Objective v17`:
                   *   Move `v14` to `#q4`
                   *   Calibrate `v10`
                   *   Take image of `v17`
                   *   Move `v14` to `#q1`
                   *   Send image of `v17`
               *   `Objective v18`:
                   *   Move `v14` to `#q6`
                   *   Calibrate `v10`
                   *   Take image of `v18`
                   *   Move `v14` to `#q1`
                   *   Send image of `v18`
               *   `Objective v19`:
                   *   Move `v14` to `#q0`
                   *   Calibrate `v10`
                   *   Take image of `v19`
                   *   Move `v14` to `#q1`
                   *   Send image of `v19`
               *   `Objective v20`:
                   *   Move `v14` to `#q7`
                   *   Calibrate `v10`
                   *   Take image of `v20`
                   *   Move `v14` to `#q1`
                   *   Send image of `v20`
           
           *   **Sampling and Analysis:**
               *   Move `v14` to `#o5`
               *   Sample `v1` (stone)
               *   Move `v14` to `#q1`
               *   Send analysis of `v1`
               *   Drop rock (store becomes free again)
               *   Repeat the sample/send/drop sequence for each rock at `#o5`: `v3`, `v5`, and `v8`.
               *   Move `v14` to `#q10`
               *   Sample
)

Model:     **Initial Assessment and Planning for `new-axiom@0()`**
           
           Okay, here's my plan to achieve the goal `new-axiom@0()`. This looks like a fun one! The core of it boils down to satisfying a conjunction of conditions, some of which are already true in the initial state. The hard part is ensuring all the `receivedimage` and `receivedanalysis` predicates are achieved.
           
           First, I need to break down the task:
           
           1.  **Image Acquisition:** I need to receive images for four objectives: `v17`, `v18`, `v19`, and `v20`.
           2.  **Analysis Acquisition:** I have to receive analysis for rocks of type `v2` (stone, specifically `v4`, `v1`, and `v3`) and rocks of type `v6` (soil, `v7`, `v8`, and `v5`).
           
           Since I'm looking for a straightforward solution, the most obvious approach is to make a sequence of actions:
           *   Use `v14` (which is already at a good location) for most of the work.
           *   Get and send an image from `v14` for each of the four objectives.
           *   Then sample the rocks and send the results to `v9`.
           
           To get an image (`receivedimage`), I'll need to calibrate the camera and then take the picture. Then, send the image.
           To get rock analysis (`receivedanalysis`), I'll need to sample the rock, then send the analysis. And then I have to drop the sample.
           
           I've looked at the available `imagevisible` and `comvisible` facts for each rover. I can use the existing `comvisible` to `#q1`, and the existing image locations. `v14` has some of the best locations for doing this. The rovers have to move to a spot to take an image, then I can use `send_image` and `send_analysis`.
           
           So, the general plan is this:
           1.  **Move to Image Target:** `v14` moves to a location where it can see the objective.
           2.  **Calibrate and Image:** Calibrate the camera, take the picture.
           3.  **Move to Communication Point:** Move to `#q1`.
           4.  **Send Image:** `send_image`.
           5.  **Sampling and Analysis:** Then I will repeat this process but for the `receivedanalysis` sub-goals by sampling rocks and sending their analysis.
           
           **The Strategy Implementation**
           
           Alright, let's nail down the specifics, making sure I use the available motion and perception facts:
           
           1.  **Rover `v14` (Currently at `v15`)**
           
           *   **Imaging:**
               *   `Objective v17`:
                   *   Move `v14` to `#q4`
                   *   Calibrate `v10`
                   *   Take image of `v17`
                   *   Move `v14` to `#q1`
                   *   Send image of `v17`
               *   `Objective v18`:
                   *   Move `v14` to `#q6`
                   *   Calibrate `v10`
                   *   Take image of `v18`
                   *   Move `v14` to `#q1`
                   *   Send image of `v18`
               *   `Objective v19`:
                   *   Move `v14` to `#q0`
                   *   Calibrate `v10`
                   *   Take image of `v19`
                   *   Move `v14` to `#q1`
                   *   Send image of `v19`
               *   `Objective v20`:
                   *   Move `v14` to `#q7`
                   *   Calibrate `v10`
                   *   Take image of `v20`
                   *   Move `v14` to `#q1`
                   *   Send image of `v20`
           
           *   **Sampling and Analysis:**
               *   Move `v14` to `#o5`
               *   Sample `v1` (stone)
               *   Move `v14` to `#q1`
               *   Send analysis of `v1`
               *   Drop rock (store becomes free again)
               *   Repeat the sample/send/drop sequence for each rock at `#o5`: `v3`, `v5`, and `v8`.
               *   Move `v14` to `#q10`
               *   Sample

