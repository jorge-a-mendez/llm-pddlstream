User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v14)
           Atom rock(v5)
           Atom rock(v8)
           Atom type(v7, v6)
           Atom rock(v4)
           Atom type(v1, v2)
           Atom free(v14, v16)
           Atom conf(v14, v15)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom rover(v12)
           Atom rock(v7)
           Atom lander(v9)
           Atom atconf(v14, v15)
           Atom objective(v17)
           Atom rock(v1)
           Atom rock(v3)
           Atom atconf(v12, v13)
           Atom rover(v14)
           Atom type(v5, v6)
           Atom free(v12, v16)
           Atom type(v4, v2)
           Atom type(v8, v6)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom mode(v11)
           Atom camera(v10)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom objective(v19)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q13, #y7, v19)
           Atom imagerange(v14, #q13, v19)
           Atom conf(v14, #q13)
           Atom ray(#y7)
           Atom above(v14, #q1, v5)
           Atom conf(v14, #q1)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #q3, v1)
           Atom conf(v14, #q3)
           Atom imagevisible(v14, #q12, #y6, v17)
           Atom imagerange(v14, #q12, v17)
           Atom conf(v14, #q12)
           Atom ray(#y6)
           Atom above(v14, #o5, v4)
           Atom above(v14, #q14, v7)
           Atom conf(v14, #q14)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #q11, v4)
           Atom conf(v12, #q11)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #o5, v5)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v12, #q4, #y2, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q8, v3)
           Atom conf(v12, #q8)
           Atom imagevisible(v14, #q9, #y5, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y5)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q10, v8)
           Atom conf(v14, #q10)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #t0, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #t32, #q0)
           Atom motion(v14, #q0, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q12, #t29, #q0)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #t24, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q0, #t21, #q10)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q10, #t31, #q0)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, v15, #t9, #q3)
           Atom motion(v14, #q3, #t2, #q0)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q0, #t34, #q3)
           Atom motion(v12, v13, #t19, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q9, #t20, #q0)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q0, #t18, #q9)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q12, #t33, #q9)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, v13, #t4, #q4)
           Atom motion(v14, #q1, #t1, #q0)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q0, #t28, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, v15, #t8, #q1)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #t16, #q4)
           Atom motion(v12, #q8, #t17, #q2)
           Atom motion(v12, #q2, #t7, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t26, #q8)
           Atom motion(v12, #q4, #t3, #q2)
           Atom motion(v12, #q7, #t11, #q2)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, v13, #t13, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q2, #t27, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q2, #t14, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, v13, #t6, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t12, #q2)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, v15, #t25, #q13)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q13, #t30, #q0)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q0, #t36, #q13)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q13, #t35, #q12)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q5, #t15, #q2)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #t5, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q2, #t10, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q2, #t22, #q11)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q11, #t23, #q2)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q11 v4 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #q1 v5 v16))
           ((sample_rock v14 #q10 v8 v16))
           ((sample_rock v14 #q14 v7 v16))
           ((sample_rock v14 #q3 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t23 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #t10 #q5))
           ((move v12 #q2 #t14 #q6))
           ((move v12 #q2 #t16 #q4))
           ((move v12 #q2 #t22 #q11))
           ((move v12 #q2 #t26 #q8))
           ((move v12 #q2 #t27 #q7))
           ((move v12 #q2 #t7 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t3 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t15 #q2))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q2))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t11 #q2))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t17 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t13 #q7))
           ((move v12 v13 #t19 #q8))
           ((move v12 v13 #t4 #q4))
           ((move v12 v13 #t5 #q5))
           ((move v12 v13 #t6 #q6))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #t0 v15))
           ((move v14 #q0 #t18 #q9))
           ((move v14 #q0 #t21 #q10))
           ((move v14 #q0 #t28 #q1))
           ((move v14 #q0 #t34 #q3))
           ((move v14 #q0 #t36 #q13))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q0))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t31 #q0))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t29 #q0))
           ((move v14 #q12 #t33 #q9))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t30 #q0))
           ((move v14 #q13 #t35 #q12))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t32 #q0))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t2 #q0))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t20 #q0))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t24 #q12))
           ((move v14 v15 #t25 #q13))
           ((move v14 v15 #t8 #q1))
           ((move v14 v15 #t9 #q3))
           ((calibrate v12 #q4 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q12 #y6 v17 v10))
           ((calibrate v14 #q13 #y7 v19 v10))
           ((calibrate v14 #q9 #y5 v18 v10))
           ((take_image v12 #q4 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q12 #y6 v17 v10 v11))
           ((take_image v14 #q13 #y7 v19 v10 v11))
           ((take_image v14 #q9 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Plan to Satisfy new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal here is to satisfy the conditions laid out in `new-axiom@0()`. We've got two rovers, `v12` and `v14`, each starting at a specific configuration, with stores, and the need to achieve several image and analysis goals, all while *keeping* the rovers in their *initial* configurations and the stores free at the end. That's the core challenge: satisfying the final state requirement.
           
           First, let's look at what needs to be accomplished: obtaining images of objectives `v17`, `v18`, and `v19` using mode `v11`, and receiving analyses of a stone (type `v2`) and soil (type `v6`). We have a whole bunch of pre-conditions that are already true.
           
           Here's the plan I've hammered out to satisfy the goals:
           
           *   **v14's Agenda (Starting at v15):**
               1.  *Image Acquisition:*
                   *   Move v14 to #q12, calibrate and photograph v17.
                   *   Move v14 to #q13, calibrate and photograph v19.
                   *   Send those images to the lander.
               2.  *Sampling & Analysis:*
                   *   Move v14 to #q3, sample rock v1, then analyze and send to lander. (Drop_rock v16)
                   *   Move v14 to #q14, sample rock v7, then analyze and send to the lander. (Drop_rock v16)
               3.  *Return:* Move back to initial configuration v15.
           
           *   **v12's Agenda (Starting at v13):**
               1.  *Image Acquisition:*
                   *   Move v12 to #q6, calibrate, and take a photo of v18.
                   *   Send the image to the lander.
               2.  *Return:* Move back to initial configuration v13.
           
           Now, some of the key actions will be:
           
           *   **Image Capture:** Calibrate then image objective using `calibrate()`, then `take_image()`, then move to a lander location, and then `send_image()`.
           *   **Analysis of Rocks:** Move to a location above the stone, use `sample_rock()`, move to a comm location, use `send_analysis()`, then use `drop_rock()`
           *   *Keep Track* of each rover and the states they are.
           
           This plan hits all the requirements: the final state will meet all the criteria as specified in the axiom. This strategy seems efficient. We should be good to go.
           
)

Model:     **Plan to Satisfy new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal here is to satisfy the conditions laid out in `new-axiom@0()`. We've got two rovers, `v12` and `v14`, each starting at a specific configuration, with stores, and the need to achieve several image and analysis goals, all while *keeping* the rovers in their *initial* configurations and the stores free at the end. That's the core challenge: satisfying the final state requirement.
           
           First, let's look at what needs to be accomplished: obtaining images of objectives `v17`, `v18`, and `v19` using mode `v11`, and receiving analyses of a stone (type `v2`) and soil (type `v6`). We have a whole bunch of pre-conditions that are already true.
           
           Here's the plan I've hammered out to satisfy the goals:
           
           *   **v14's Agenda (Starting at v15):**
               1.  *Image Acquisition:*
                   *   Move v14 to #q12, calibrate and photograph v17.
                   *   Move v14 to #q13, calibrate and photograph v19.
                   *   Send those images to the lander.
               2.  *Sampling & Analysis:*
                   *   Move v14 to #q3, sample rock v1, then analyze and send to lander. (Drop_rock v16)
                   *   Move v14 to #q14, sample rock v7, then analyze and send to the lander. (Drop_rock v16)
               3.  *Return:* Move back to initial configuration v15.
           
           *   **v12's Agenda (Starting at v13):**
               1.  *Image Acquisition:*
                   *   Move v12 to #q6, calibrate, and take a photo of v18.
                   *   Send the image to the lander.
               2.  *Return:* Move back to initial configuration v13.
           
           Now, some of the key actions will be:
           
           *   **Image Capture:** Calibrate then image objective using `calibrate()`, then `take_image()`, then move to a lander location, and then `send_image()`.
           *   **Analysis of Rocks:** Move to a location above the stone, use `sample_rock()`, move to a comm location, use `send_analysis()`, then use `drop_rock()`
           *   *Keep Track* of each rover and the states they are.
           
           This plan hits all the requirements: the final state will meet all the criteria as specified in the axiom. This strategy seems efficient. We should be good to go.
           

