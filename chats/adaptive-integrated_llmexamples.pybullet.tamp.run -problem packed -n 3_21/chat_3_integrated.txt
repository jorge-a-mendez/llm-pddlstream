User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           p10: object
           p11: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v13 is a pose with position (-0.186, -0.339, 0.781) and quaternion (0.0, 0.0, 0.22, 0.976).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p10 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.08, -0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p8 is a pose with position (0.08, -0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, 0.045), (-0.045, 0.115)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.045, -0.115), (0.115, -0.045)).
           Object v9 is a pose with position (-0.239, 0.508, 0.781) and quaternion (0.0, 0.0, 0.827, 0.561).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p9 is a pose with position (-0.08, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (-0.08, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.008, -0.263, 0.781) and quaternion (0.0, 0.0, 0.683, 0.73).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom arm(v6)
           Atom arm(v4)
           Atom pose(v8, p9)
           Atom handempty(v4)
           Atom pose(v12, p10)
           Atom kin(v27, v33, p11, v29, v30, v31)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom handempty(v6)
           Atom aconf(v4, v5)
           Atom kin(v27, v28, p9, v29, v30, v31)
           Atom atpose(v12, v13)
           Atom stackable(v14, v10)
           Atom atbconf(v3)
           Atom supported(v8, v9, v11)
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom atpose(v14, v15)
           Atom pose(v14, p8)
           Atom supported(v12, p10, v16)
           Atom kin(v27, v32, p10, v29, v30, v31)
           Atom supported(v8, p9, v16)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom ataconf(v6, v7)
           Atom stackable(v8, v16)
           Atom supported(v12, v13, v11)
           Atom pose(v12, p7)
           Atom stackable(v12, v16)
           Atom graspable(v8)
           Atom stackable(v12, v10)
           Atom supported(v14, v15, v11)
           Atom pose(v8, p6)
           Atom aconf(v6, v7)
           Atom pose(v14, p11)
           Atom supported(v14, p11, v16)
           Atom supported(v14, p8, v16)
           Atom pose(v8, v9)
           Atom graspable(v12)
           Atom stackable(v14, v16)
           Atom canmove()
           Atom ataconf(v4, v5)
           Atom bconf(v3)
           Atom controllable(v4)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom supported(v12, p7, v16)
           Atom atpose(v8, v9)
           Atom supported(v8, p6, v16)
           Atom stackable(v8, v10)
           Atom pose(v12, v13)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v14, #g1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #g2)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v12, #o2, v16)
           Atom supported(v14, #o2, v16)
           Atom grasp(v12, #g0)
           Atom supported(v8, #o2, v16)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, p11, #g1, #q0, #t0)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v14, v15, #g1, #q2, #t5)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p8, #g1, #o3, #o4)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v8, v9, #g2, #q1, #t2)
           Atom kin(v4, v8, p6, #g2, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v8, p9, #g2, #q5, #t8)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v12, v13, #g0, #q3, #t6)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v12, p10, #g0, #q4, #t7)
           Atom kin(v4, v12, p7, #g0, #o3, #o4)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom btraj(#t1)
           Atom basemotion(#q0, #t1, v3)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q4, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(v3, #o0, #q2)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #t1))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 p10 #g0 #q4 #t7))
           ((place v4 v12 p10 #g0 #q4 #t7))
           ((pick v4 v12 p7 #g0 #o3 #o4))
           ((place v4 v12 p7 #g0 #o3 #o4))
           ((pick v4 v12 v13 #g0 #q3 #t6))
           ((place v4 v12 v13 #g0 #q3 #t6))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p11 #g1 #q0 #t0))
           ((place v4 v14 p11 #g1 #q0 #t0))
           ((pick v4 v14 p8 #g1 #o3 #o4))
           ((place v4 v14 p8 #g1 #o3 #o4))
           ((pick v4 v14 v15 #g1 #q2 #t5))
           ((place v4 v14 v15 #g1 #q2 #t5))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 p6 #g2 #o3 #o4))
           ((place v4 v8 p6 #g2 #o3 #o4))
           ((pick v4 v8 p9 #g2 #q5 #t8))
           ((place v4 v8 p9 #g2 #q5 #t8))
           ((pick v4 v8 v9 #g2 #q1 #t2))
           ((place v4 v8 v9 #g2 #q1 #t2))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place three objects (v8, v12, and v14) on the surface v16. Currently, v8 is at v9 (supported by v11), v12 is at v13 (supported by v11), and v14 is at v15 (supported by v11). The robot arm v4 is handempty and ataconf v5. The base is at v3.
           
           To achieve the goal, we need to pick up each object and place it on v16. Since the target pose `on(object, v16)` refers to a surface that has a bounding box (v16 is ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135))), and there are no explicit collision-free poses for placement on v16, we will need to use the #o2 pose which is supported by v16. We will need to define a new pose for each object.
           
           First, we will pick up v8 from v9 and place it on v16 at a new pose, #o2_v8.
           Then, we will pick up v12 from v13 and place it on v16 at a new pose, #o2_v12.
           Finally, we will pick up v14 from v15 and place it on v16 at a new pose, #o2_v14.
           We will use arm v4 for all pick and place operations.
           
           --Plan--:
           (move_base v3 #q1 #t4)
           (pick v4 v8 v9 #g2 #q1 #t2)
           (move_base #q1 #o3 #o0)
           (place v4 v8 #o2 #g2 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v12 v13 #g0 #q3 #t6)
           (move_base #q3 #o3 #o0)
           (place v4 v12 #o2 #g0 #o3 #o4)
           (move_base #o3 #q2 #o0)
           (pick v4 v14 v15 #g1 #q2 #t5)
           (move_base #q2 #o3 #o0)
           (place v4 v14 #o2 #g1 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v16): (0.0, 0.0, 0.782, 0.0)
           (#o2 v12 v16): (0.04, 0.0, 0.782, 0.0)
           (#o2 v14 v16): (-0.04, 0.0, 0.782, 0.0)

User:      Pose #o2 = (0.0 for object v8 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0 for object v8 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v8 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v8 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.04 for object v12 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0 for object v12 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v12 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v12 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (-0.04 for object v14 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0 for object v14 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v14 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v14 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The goal is to place three objects (v8, v12, and v14) on the surface v16. Currently, v8 is at v9 (supported by v11), v12 is at v13 (supported by v11), and v14 is at v15 (supported by v11). The robot arm v4 is handempty and ataconf v5. The base is at v3.
           
           To achieve the goal, we need to pick up each object and place it on v16. Since the target pose `on(object, v16)` refers to a surface that has a bounding box (v16 is ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135))), and there are no explicit collision-free poses for placement on v16, we will need to use the #o2 pose which is supported by v16. We will need to define a new pose for each object.
           
           First, we will pick up v8 from v9 and place it on v16 at a new pose, #o2_v8.
           Then, we will pick up v12 from v13 and place it on v16 at a new pose, #o2_v12.
           Finally, we will pick up v14 from v15 and place it on v16 at a new pose, #o2_v14.
           We will use arm v4 for all pick and place operations.
           
           --Plan--:
           (move_base v3 #q1 #t4)
           (pick v4 v8 v9 #g2 #q1 #t2)
           (move_base #q1 #o3 #o0)
           (place v4 v8 #o2 #g2 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v12 v13 #g0 #q3 #t6)
           (move_base #q3 #o3 #o0)
           (place v4 v12 #o2 #g0 #o3 #o4)
           (move_base #o3 #q2 #o0)
           (pick v4 v14 v15 #g1 #q2 #t5)
           (move_base #q2 #o3 #o0)
           (place v4 v14 #o2 #g1 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v16): 0.0 0.0 0.782 0.0
           (#o2 v12 v16): 0.04 0.0 0.782 0.0
           (#o2 v14 v16): -0.04 0.0 0.782 0.0

