User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p4 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.707, 0.707).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 1.0, 0.001).
           Object p7 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, -0.707, 0.707).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p8 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (0.057, -0.481, 0.781) and quaternion (0.0, 0.0, 0.633, 0.774).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.707, 0.707).
           Object v17 is a pose with position (0.2, 0.467, 0.781) and quaternion (0.0, 0.0, 0.155, 0.988).
           Object v15 is a pose with position (-0.241, 0.137, 0.781) and quaternion (0.0, 0.0, -0.678, 0.735).
           Object v13 is a pose with position (0.085, -0.278, 0.781) and quaternion (0.0, 0.0, 0.999, -0.042).
           Object p10 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 1.0, 0.001).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p11 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, -0.707, 0.707).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v8, v9, v11)
           Atom atpose(v16, v17)
           Atom pose(v16, v17)
           Atom graspable(v16)
           Atom handempty(v6)
           Atom controllable(v4)
           Atom supported(v12, p9, v18)
           Atom stackable(v12, v18)
           Atom atbconf(v3)
           Atom kin(v31, v37, p6, v33, v34, v35)
           Atom supported(v16, p7, v18)
           Atom arm(v6)
           Atom supported(v8, p8, v18)
           Atom aconf(v6, v7)
           Atom supported(v16, v17, v11)
           Atom kin(v31, v32, p4, v33, v34, v35)
           Atom pose(v8, p8)
           Atom pose(v12, p9)
           Atom stackable(v16, v10)
           Atom graspable(v8)
           Atom graspable(v12)
           Atom stackable(v16, v18)
           Atom pose(v8, p4)
           Atom kin(v31, v32, p8, v33, v34, v35)
           Atom pose(v12, p5)
           Atom supported(v14, p6, v18)
           Atom stackable(v8, v18)
           Atom canmove()
           Atom stackable(v14, v10)
           Atom aconf(v4, v5)
           Atom atpose(v14, v15)
           Atom atpose(v8, v9)
           Atom supported(v12, p5, v18)
           Atom pose(v8, v9)
           Atom graspable(v14)
           Atom pose(v14, p6)
           Atom pose(v16, p7)
           Atom handempty(v4)
           Atom pose(v12, v13)
           Atom ataconf(v4, v5)
           Atom pose(v16, p11)
           Atom arm(v4)
           Atom ataconf(v6, v7)
           Atom bconf(v3)
           Atom supported(v12, v13, v11)
           Atom supported(v14, v15, v11)
           Atom stackable(v14, v18)
           Atom kin(v31, v38, p7, v33, v34, v35)
           Atom kin(v31, v36, p9, v33, v34, v35)
           Atom supported(v14, p10, v18)
           Atom pose(v14, v15)
           Atom kin(v31, v36, p5, v33, v34, v35)
           Atom kin(v31, v38, p11, v33, v34, v35)
           Atom atpose(v12, v13)
           Atom kin(v31, v37, p10, v33, v34, v35)
           Atom stackable(v8, v10)
           Atom stackable(v12, v10)
           Atom supported(v8, p4, v18)
           Atom pose(v14, p10)
           Atom supported(v16, p11, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom supported(v14, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v14, #g1)
           Atom grasp(v16, #g3)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom grasp(v12, #g2)
           Atom grasp(v8, #g0)
           Atom supported(v16, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom bconf(#q6)
           Atom atraj(#t13)
           Atom kin(v4, v14, v15, #g1, #q6, #t13)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p6, #g1, #o3, #o4)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v14, p10, #g1, #q1, #t2)
           Atom bconf(#q5)
           Atom atraj(#t6)
           Atom kin(v4, v16, p11, #g3, #q5, #t6)
           Atom kin(v4, v16, p7, #g3, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t5)
           Atom kin(v4, v16, v17, #g3, #q4, #t5)
           Atom kin(v4, v12, p5, #g2, #o3, #o4)
           Atom bconf(#q7)
           Atom atraj(#t14)
           Atom kin(v4, v12, p9, #g2, #q7, #t14)
           Atom bconf(#q3)
           Atom atraj(#t4)
           Atom kin(v4, v12, v13, #g2, #q3, #t4)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom kin(v4, v8, p4, #g0, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t3)
           Atom kin(v4, v8, p8, #g0, #q2, #t3)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q4)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q4)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q2, #o0, #q1)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q6, #o0, #q4)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q5, #o0, #q0)
           Atom btraj(#t1)
           Atom basemotion(#q0, #t1, v3)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q1, #o0, #q3)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q7, #o0, #q1)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v16, #o2, #g3, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 v3 #t1))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q3 #t10))
           ((move_base v3 #q4 #t11))
           ((move_base v3 #q5 #t12))
           ((move_base v3 #q0 #t7))
           ((move_base v3 #q1 #t8))
           ((move_base v3 #q2 #t9))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p5 #g2 #o3 #o4))
           ((place v4 v12 p5 #g2 #o3 #o4))
           ((pick v4 v12 p9 #g2 #q7 #t14))
           ((place v4 v12 p9 #g2 #q7 #t14))
           ((pick v4 v12 v13 #g2 #q3 #t4))
           ((place v4 v12 v13 #g2 #q3 #t4))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p10 #g1 #q1 #t2))
           ((place v4 v14 p10 #g1 #q1 #t2))
           ((pick v4 v14 p6 #g1 #o3 #o4))
           ((place v4 v14 p6 #g1 #o3 #o4))
           ((pick v4 v14 v15 #g1 #q6 #t13))
           ((place v4 v14 v15 #g1 #q6 #t13))
           ((pick v4 v16 #o2 #g3 #o3 #o4))
           ((place v4 v16 #o2 #g3 #o3 #o4))
           ((pick v4 v16 p11 #g3 #q5 #t6))
           ((place v4 v16 p11 #g3 #q5 #t6))
           ((pick v4 v16 p7 #g3 #o3 #o4))
           ((place v4 v16 p7 #g3 #o3 #o4))
           ((pick v4 v16 v17 #g3 #q4 #t5))
           ((place v4 v16 v17 #g3 #q4 #t5))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p4 #g0 #o3 #o4))
           ((place v4 v8 p4 #g0 #o3 #o4))
           ((pick v4 v8 p8 #g0 #q2 #t3))
           ((place v4 v8 p8 #g0 #q2 #t3))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place all four objects (v8, v12, v14, and v16) on the surface v18. Currently, v8 is on v11, v12 is on v11, v14 is on v11, and v16 is on v11. The robot needs to pick up each object and place it on v18. There are multiple possible poses for each object on v18, and we should choose the ones that minimize movement cost. We should also avoid collisions.
           
           The initial state shows that:
           - `v8` is at `v9` on `v11`. It can be placed at `p4` or `p8` on `v18`.
           - `v12` is at `v13` on `v11`. It can be placed at `p5` or `p9` on `v18`.
           - `v14` is at `v15` on `v11`. It can be placed at `p6` or `p10` on `v18`.
           - `v16` is at `v17` on `v11`. It can be placed at `p7` or `p11` on `v18`.
           
           All of the objects currently sit on `v11`, and all need to be placed on `v18`. The robot is at `v3` and has arm `v4` empty at `v5`. Since all target poses are available for placement on `v18`, the plan will involve picking each object from its current location on `v11` and placing it on `v18`. The base will need to move to configurations that allow the arm to reach the pick and place locations.
           
           We will pick up `v8` from `v9` and place it at `p4` on `v18`.
           Then we will pick up `v12` from `v13` and place it at `p5` on `v18`.
           Then we will pick up `v14` from `v15` and place it at `p6` on `v18`.
           Finally, we will pick up `v16` from `v17` and place it at `p7` on `v18`.
           
           We will utilize the base configurations and corresponding trajectories provided in the initial state to minimize move_base actions.
           
           --Plan--:
           (move_base v3 #q0 #t7)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 p4 #g0 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v12 v13 #g2 #q3 #t4)
           (move_base #q3 #o3 #o0)
           (place v4 v12 p5 #g2 #o3 #o4)
           (move_base #o3 #q6 #o0)
           (pick v4 v14 v15 #g1 #q6 #t13)
           (move_base #q6 #o3 #o0)
           (place v4 v14 p6 #g1 #o3 #o4)
           (move_base #o3 #q4 #o0)
           (pick v4 v16 v17 #g3 #q4 #t5)
           (move_base #q4 #o3 #o0)
           (place v4 v16 p7 #g3 #o3 #o4)

