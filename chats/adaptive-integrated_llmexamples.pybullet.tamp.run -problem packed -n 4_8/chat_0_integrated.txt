User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.016, -0.523), (0.099, -0.44)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.156, 0.423), (0.244, 0.511)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.279, 0.099), (-0.204, 0.175)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v9 is a pose with position (0.057, -0.481, 0.781) and quaternion (0.0, 0.0, 0.633, 0.774).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.047, -0.315), (0.123, -0.24)).
           Object v17 is a pose with position (0.2, 0.467, 0.781) and quaternion (0.0, 0.0, 0.155, 0.988).
           Object v15 is a pose with position (-0.241, 0.137, 0.781) and quaternion (0.0, 0.0, -0.678, 0.735).
           Object v13 is a pose with position (0.085, -0.278, 0.781) and quaternion (0.0, 0.0, 0.999, -0.042).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v8, v9, v11)
           Atom atpose(v16, v17)
           Atom pose(v16, v17)
           Atom graspable(v16)
           Atom handempty(v6)
           Atom controllable(v4)
           Atom stackable(v12, v18)
           Atom atbconf(v3)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom supported(v16, v17, v11)
           Atom stackable(v16, v10)
           Atom graspable(v8)
           Atom graspable(v12)
           Atom stackable(v16, v18)
           Atom stackable(v8, v18)
           Atom canmove()
           Atom stackable(v14, v10)
           Atom aconf(v4, v5)
           Atom atpose(v14, v15)
           Atom atpose(v8, v9)
           Atom pose(v8, v9)
           Atom graspable(v14)
           Atom handempty(v4)
           Atom pose(v12, v13)
           Atom ataconf(v4, v5)
           Atom arm(v4)
           Atom ataconf(v6, v7)
           Atom bconf(v3)
           Atom supported(v12, v13, v11)
           Atom supported(v14, v15, v11)
           Atom stackable(v14, v18)
           Atom pose(v14, v15)
           Atom atpose(v12, v13)
           Atom stackable(v8, v10)
           Atom stackable(v12, v10)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v18)
           Atom grasp(v14, #o1)
           Atom grasp(v16, #o1)
           Atom supported(v14, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom supported(v8, #o2, v18)
           Atom supported(v16, #o2, v18)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains four graspable objects: v8, v12, v14, and v16. These objects are initially located at different poses on object v11. The goal is to place all four objects on object v18. The robot has two arms, v4 and v6, which are currently at initial configurations. There is only one base motion available, which is moving from v3 to v3 (effectively staying in place).
           
           The initial state indicates that the objects v8, v12, v14, and v16 are currently supported by v11. The goal is to have all of them supported by v18. The problem statement also indicates that there are potential poses for all these objects on v18, represented by the continuous pose #o2, and also on v10, though the goal specifically requests placement on v18.
           
           Since the initial state only provides a `move_base` action that moves from `v3` to `v3`, it implies that the robot's base configuration will remain `v3` throughout the task. This means that all pick and place actions must be executable from the `v3` base configuration.
           
           The provided available action instance `((move_base v3 v3 #o0))` is not enough to achieve the goal as it only moves the base, and no other pick/place/clean/cook actions are provided. Without pick and place actions, the robot cannot move the objects from v11 to v18. Therefore, the goal is not achievable.

