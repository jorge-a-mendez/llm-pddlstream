User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p15: object
           p16: object
           p17: object
           p18: object
           p19: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v35: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v15 is a pose with position (0.205, -0.428, 0.781) and quaternion (0.0, 0.0, 0.872, 0.49).
           Object p15 is a pose with position (-0.08, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.115, -0.309, 0.781) and quaternion (0.0, 0.0, -0.861, 0.509).
           Object p10 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p13 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p16 is a pose with position (0.0, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p17 is a pose with position (0.08, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p18 is a pose with position (-0.08, -0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p19 is a pose with position (0.0, -0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.115), (0.035, -0.045)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, -0.115), (-0.045, -0.045)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.045, 0.045), (0.115, 0.115)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, 0.045), (0.035, 0.115)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, 0.045), (-0.045, 0.115)).
           Object v9 is a pose with position (0.018, 0.526, 0.781) and quaternion (0.0, 0.0, 0.092, 0.996).
           Object v19 is a pose with position (-0.091, -0.563, 0.781) and quaternion (0.0, 0.0, -0.701, 0.713).
           Object v17 is a pose with position (0.027, 0.329, 0.781) and quaternion (0.0, 0.0, 0.946, 0.324).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom kin(v35, v40, p16, v37, v38, v39)
           Atom pose(v8, p14)
           Atom stackable(v12, v20)
           Atom supported(v14, p11, v20)
           Atom arm(v6)
           Atom supported(v16, v17, v11)
           Atom pose(v8, p19)
           Atom stackable(v16, v20)
           Atom canmove()
           Atom stackable(v12, v10)
           Atom stackable(v16, v10)
           Atom supported(v16, p17, v20)
           Atom atpose(v16, v17)
           Atom pose(v18, p18)
           Atom supported(v16, p12, v20)
           Atom pose(v16, v17)
           Atom pose(v12, v13)
           Atom supported(v18, p13, v20)
           Atom supported(v12, p15, v20)
           Atom kin(v35, v43, p14, v37, v38, v39)
           Atom stackable(v18, v10)
           Atom atpose(v14, v15)
           Atom kin(v35, v36, p15, v37, v38, v39)
           Atom graspable(v18)
           Atom graspable(v16)
           Atom supported(v12, p10, v20)
           Atom pose(v18, p13)
           Atom aconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom pose(v14, v15)
           Atom handempty(v4)
           Atom pose(v16, p12)
           Atom kin(v35, v42, p13, v37, v38, v39)
           Atom supported(v14, p16, v20)
           Atom atpose(v8, v9)
           Atom atpose(v18, v19)
           Atom stackable(v8, v10)
           Atom aconf(v6, v7)
           Atom pose(v14, p11)
           Atom supported(v18, p18, v20)
           Atom supported(v8, p19, v20)
           Atom supported(v14, v15, v11)
           Atom pose(v12, p15)
           Atom kin(v35, v42, p18, v37, v38, v39)
           Atom pose(v8, v9)
           Atom atpose(v12, v13)
           Atom pose(v18, v19)
           Atom handempty(v6)
           Atom supported(v12, v13, v11)
           Atom kin(v35, v41, p12, v37, v38, v39)
           Atom atbconf(v3)
           Atom stackable(v14, v10)
           Atom stackable(v8, v20)
           Atom graspable(v8)
           Atom pose(v16, p17)
           Atom supported(v8, v9, v11)
           Atom controllable(v4)
           Atom kin(v35, v36, p10, v37, v38, v39)
           Atom graspable(v14)
           Atom supported(v18, v19, v11)
           Atom kin(v35, v40, p11, v37, v38, v39)
           Atom arm(v4)
           Atom stackable(v14, v20)
           Atom pose(v12, p10)
           Atom ataconf(v4, v5)
           Atom graspable(v12)
           Atom stackable(v18, v20)
           Atom supported(v8, p14, v20)
           Atom kin(v35, v41, p17, v37, v38, v39)
           Atom kin(v35, v43, p19, v37, v38, v39)
           Atom bconf(v3)
           Atom pose(v14, p16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom grasp(v12, #g4)
           Atom grasp(v14, #g1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v20)
           Atom grasp(v16, #g2)
           Atom grasp(v8, #g3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom grasp(v18, #g0)
           Atom supported(v14, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v18, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v20)
           Atom supported(v16, #o2, v20)
           Atom bconf(#q7)
           Atom atraj(#t7)
           Atom kin(v4, v12, v13, #g4, #q7, #t7)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v12, p15, #g4, #q5, #t5)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, p10, #g4, #o3, #o4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, v15, #g1, #q1, #t1)
           Atom kin(v4, v14, p11, #g1, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, p16, #g1, #q2, #t2)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v16, v17, #g2, #q3, #t3)
           Atom bconf(#q6)
           Atom atraj(#t6)
           Atom kin(v4, v16, p17, #g2, #q6, #t6)
           Atom kin(v4, v16, p12, #g2, #o3, #o4)
           Atom bconf(#q8)
           Atom atraj(#t8)
           Atom kin(v4, v18, v19, #g0, #q8, #t8)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v18, p18, #g0, #q0, #t0)
           Atom kin(v4, v18, p13, #g0, #o3, #o4)
           Atom bconf(#q9)
           Atom atraj(#t18)
           Atom kin(v4, v8, v9, #g3, #q9, #t18)
           Atom kin(v4, v8, p14, #g3, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v8, p19, #g3, #q4, #t4)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q1)
           Atom btraj(#t13)
           Atom basemotion(v3, #t13, #q4)
           Atom basemotion(#q5, #o0, #q1)
           Atom btraj(#t14)
           Atom basemotion(v3, #t14, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q1)
           Atom basemotion(#q4, #o0, #q9)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q1, #o0, #q7)
           Atom btraj(#t16)
           Atom basemotion(v3, #t16, #q7)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom btraj(#t17)
           Atom basemotion(v3, #t17, #q8)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q0, #o0, #q6)
           Atom btraj(#t15)
           Atom basemotion(v3, #t15, #q6)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q3, #o0, #q8)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q8, #o0, #q3)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q3)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q2, #o0, #q1)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q8, #o0, #q2)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g3, #o3, #o4)
           Atom kin(v4, v12, #o2, #g4, #o3, #o4)
           Atom kin(v4, v16, #o2, #g2, #o3, #o4)
           Atom kin(v4, v18, #o2, #g0, #o3, #o4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q1 #t10))
           ((move_base v3 #q2 #t11))
           ((move_base v3 #q3 #t12))
           ((move_base v3 #q4 #t13))
           ((move_base v3 #q5 #t14))
           ((move_base v3 #q6 #t15))
           ((move_base v3 #q7 #t16))
           ((move_base v3 #q8 #t17))
           ((move_base v3 #q0 #t9))
           ((pick v4 v12 #o2 #g4 #o3 #o4))
           ((place v4 v12 #o2 #g4 #o3 #o4))
           ((pick v4 v12 p10 #g4 #o3 #o4))
           ((place v4 v12 p10 #g4 #o3 #o4))
           ((pick v4 v12 p15 #g4 #q5 #t5))
           ((place v4 v12 p15 #g4 #q5 #t5))
           ((pick v4 v12 v13 #g4 #q7 #t7))
           ((place v4 v12 v13 #g4 #q7 #t7))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p11 #g1 #o3 #o4))
           ((place v4 v14 p11 #g1 #o3 #o4))
           ((pick v4 v14 p16 #g1 #q2 #t2))
           ((place v4 v14 p16 #g1 #q2 #t2))
           ((pick v4 v14 v15 #g1 #q1 #t1))
           ((place v4 v14 v15 #g1 #q1 #t1))
           ((pick v4 v16 #o2 #g2 #o3 #o4))
           ((place v4 v16 #o2 #g2 #o3 #o4))
           ((pick v4 v16 p12 #g2 #o3 #o4))
           ((place v4 v16 p12 #g2 #o3 #o4))
           ((pick v4 v16 p17 #g2 #q6 #t6))
           ((place v4 v16 p17 #g2 #q6 #t6))
           ((pick v4 v16 v17 #g2 #q3 #t3))
           ((place v4 v16 v17 #g2 #q3 #t3))
           ((pick v4 v18 #o2 #g0 #o3 #o4))
           ((place v4 v18 #o2 #g0 #o3 #o4))
           ((pick v4 v18 p13 #g0 #o3 #o4))
           ((place v4 v18 p13 #g0 #o3 #o4))
           ((pick v4 v18 p18 #g0 #q0 #t0))
           ((place v4 v18 p18 #g0 #q0 #t0))
           ((pick v4 v18 v19 #g0 #q8 #t8))
           ((place v4 v18 v19 #g0 #q8 #t8))
           ((pick v4 v8 #o2 #g3 #o3 #o4))
           ((place v4 v8 #o2 #g3 #o3 #o4))
           ((pick v4 v8 p14 #g3 #o3 #o4))
           ((place v4 v8 p14 #g3 #o3 #o4))
           ((pick v4 v8 p19 #g3 #q4 #t4))
           ((place v4 v8 p19 #g3 #q4 #t4))
           ((pick v4 v8 v9 #g3 #q9 #t18))
           ((place v4 v8 v9 #g3 #q9 #t18))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place objects v8, v12, v14, v16, and v18 on the surface v20.
           Currently, v16 is on v11 (supported at v17).
           v14 is on v11 (supported at v15).
           v18 is on v11 (supported at v19).
           v8 is on v11 (supported at v9).
           v12 is on v11 (supported at v13).
           
           All objects need to be moved from their current locations on v11 to a pose on v20.
           The available poses on v20 are:
           - #o2 for all objects (v8, v12, v14, v16, v18)
           
           We will pick each object from its initial location and place it on #o2, which is supported by v20.
           
           The order of operations is important to avoid collisions. We can pick and place each object sequentially.
           
           First, v16 is at v17 (on v11). We pick it and place it at #o2 (on v20).
           Then v14 is at v15 (on v11). We pick it and place it at #o2 (on v20).
           Then v18 is at v19 (on v11). We pick it and place it at #o2 (on v20).
           Then v8 is at v9 (on v11). We pick it and place it at #o2 (on v20).
           Finally, v12 is at v13 (on v11). We pick it and place it at #o2 (on v20).
           
           Since all objects are being placed on the same pose `#o2`, we need to provide distinct continuous values for each object on the surface `v20`.
           
           --Plan--:
           (move_base v3 #q3 #t12)
           (pick v4 v16 v17 #g2 #q3 #t3)
           (place v4 v16 #o2 #g2 #o3 #o4)
           (move_base #q3 #q1 #o0)
           (pick v4 v14 v15 #g1 #q1 #t1)
           (place v4 v14 #o2 #g1 #o3 #o4)
           (move_base #q1 #q8 #o0)
           (pick v4 v18 v19 #g0 #q8 #t8)
           (place v4 v18 #o2 #g0 #o3 #o4)
           (move_base #q8 #q9 #o0)
           (pick v4 v8 v9 #g3 #q9 #t18)
           (place v4 v8 #o2 #g3 #o3 #o4)
           (move_base #q9 #q7 #o0)
           (pick v4 v12 v13 #g4 #q7 #t7)
           (place v4 v12 #o2 #g4 #o3 #o4)
           
           --Poses--:
           (#o2 v16 v20): (0.07 0.0 0.782 0.0)
           (#o2 v14 v20): (0.0 0.07 0.782 0.0)
           (#o2 v18 v20): (-0.07 0.0 0.782 0.0)
           (#o2 v8 v20): (0.0 -0.07 0.782 0.0)
           (#o2 v12 v20): (0.0 0.0 0.782 0.0)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', v38) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan failed because `atbconf(v38)` was not satisfied for a pick/place action. The kin terms use `v38` as a base configuration, but the initial state only provides `atbconf(v3)`. We need to ensure that the `atbconf` predicate matches the one used in the kin terms for pick/place actions. The kin terms provided are of the form `kin(v35, object, pose, v37, v38, v39)` for `v35` as arm and `v38` as a base configuration. However, the available pick/place actions use `v4` as the arm and specific base configurations (`#q1`, `#q2`, etc.) and `atraj` values. The kin terms provided in the initial state are `kin(v35, v40, p16, v37, v38, v39)`, etc. which refer to arm `v35` and base `v38`, not `v4` and the numbered q-configs. The valid pick/place actions use arm `v4`. Therefore, we must use the `kin` relations that refer to `v4` as the arm, which have `bconf` terms like `#q1`, `#q2`, etc.
           
           Let's re-examine the available kin terms that correctly reference arm `v4` and have valid base configurations:
           - `kin(v4, v12, v13, #g4, #q7, #t7)`
           - `kin(v4, v12, p15, #g4, #q5, #t5)`
           - `kin(v4, v12, p10, #g4, #o3, #o4)`
           - `kin(v4, v14, v15, #g1, #q1, #t1)`
           - `kin(v4, v14, p11, #g1, #o3, #o4)`
           - `kin(v4, v14, p16, #g1, #q2, #t2)`
           - `kin(v4, v16, v17, #g2, #q3, #t3)`
           - `kin(v4, v16, p17, #g2, #q6, #t6)`
           - `kin(v4, v16, p12, #g2, #o3, #o4)`
           - `kin(v4, v18, v19, #g0, #q8, #t8)`
           - `kin(v4, v18, p18, #g0, #q0, #t0)`
           - `kin(v4, v18, p13, #g0, #o3, #o4)`
           - `kin(v4, v8, v9, #g3, #q9, #t18)`
           - `kin(v4, v8, p14, #g3, #o3, #o4)`
           - `kin(v4, v8, p19, #g3, #q4, #t4)`
           - `kin(v4, v14, #o2, #g1, #o3, #o4)`
           - `kin(v4, v8, #o2, #g3, #o3, #o4)`
           - `kin(v4, v12, #o2, #g4, #o3, #o4)`
           - `kin(v4, v16, #o2, #g2, #o3, #o4)`
           - `kin(v4, v18, #o2, #g0, #o3, #o4)`
           
           The `atbconf` must be correctly set before each pick and place operation. We will need to use `move_base` actions to change the `atbconf` from `v3` to the appropriate `q` before each pick/place action.
           
           Initial state: `atbconf(v3)` and `ataconf(v4, v5)`, `handempty(v4)`.
           
           The plan sequence will be:
           1. Move base to `q3` (for picking `v16` at `v17`).
           2. Pick `v16`.
           3. Place `v16` at `#o2` on `v20`. This requires `atbconf(#o3)` as `kin(v4, v16, #o2, #g2, #o3, #o4)` is available.
           4. Move base to `q1` (for picking `v14` at `v15`).
           5. Pick `v14`.
           6. Place `v14` at `#o2` on `v20` (requires `atbconf(#o3)`).
           7. Move base to `q8` (for picking `v18` at `v19`).
           8. Pick `v18`.
           9. Place `v18` at `#o2` on `v20` (requires `atbconf(#o3)`).
           10. Move base to `q9` (for picking `v8` at `v9`).
           11. Pick `v8`.
           12. Place `v8` at `#o2` on `v20` (requires `atbconf(#o3)`).
           13. Move base to `q7` (for picking `v12` at `v13`).
           14. Pick `v12`.
           15. Place `v12` at `#o2` on `v20` (requires `atbconf(#o3)`).
           
           --Plan--:
           (move_base v3 #q3 #t12)
           (pick v4 v16 v17 #g2 #q3 #t3)
           (move_base #q3 #o3 #o0)
           (place v4 v16 #o2 #g2 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v14 v15 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v14 #o2 #g1 #o3 #o4)
           (move_base #o3 #q8 #o0)
           (pick v4 v18 v19 #g0 #q8 #t8)
           (move_base #q8 #o3 #o0)
           (place v4 v18 #o2 #g0 #o3 #o4)
           (move_base #o3 #q9 #o0)
           (pick v4 v8 v9 #g3 #q9 #t18)
           (move_base #q9 #o3 #o0)
           (place v4 v8 #o2 #g3 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v12 v13 #g4 #q7 #t7)
           (move_base #q7 #o3 #o0)
           (place v4 v12 #o2 #g4 #o3 #o4)
           
           --Poses--:
           (#o2 v16 v20): (0.07 0.0 0.782 0.0)
           (#o2 v14 v20): (0.0 0.07 0.782 0.0)
           (#o2 v18 v20): (-0.07 0.0 0.782 0.0)
           (#o2 v8 v20): (0.0 -0.07 0.782 0.0)
           (#o2 v12 v20): (0.0 0.0 0.782 0.0)

