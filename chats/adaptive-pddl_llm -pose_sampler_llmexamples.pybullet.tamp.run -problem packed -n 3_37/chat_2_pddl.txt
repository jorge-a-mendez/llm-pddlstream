User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v12)
           Atom supported(v14, v15, v11)
           Atom stackable(v14, v10)
           Atom atpose(v12, v13)
           Atom supported(v12, v13, v11)
           Atom pose(v14, v15)
           Atom atbconf(v3)
           Atom pose(v12, v13)
           Atom stackable(v14, v16)
           Atom aconf(v4, v5)
           Atom canmove()
           Atom pose(v8, v9)
           Atom stackable(v12, v16)
           Atom stackable(v8, v16)
           Atom stackable(v12, v10)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom atpose(v14, v15)
           Atom arm(v6)
           Atom handempty(v4)
           Atom atpose(v8, v9)
           Atom controllable(v4)
           Atom graspable(v14)
           Atom ataconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom handempty(v6)
           Atom arm(v4)
           Atom aconf(v6, v7)
           Atom graspable(v8)
           Atom bconf(v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #o1)
           Atom grasp(v12, #o1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom supported(v14, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes three graspable objects, `v12`, `v14`, and `v8`, initially located on `v11` at various poses. There are two arms, `v4` and `v6`, with `v4` being controllable and both starting handempty. The robot's base is at configuration `v3`. The goal is to move all three objects (`v8`, `v12`, and `v14`) onto `v16`.
           
           To achieve the goal, we need to pick up each object from its initial location and place it onto `v16` at a new pose. The `on` predicate is derived from `supported` and `atpose`, so we need to place the objects in a pose that is supported by `v16`. The available actions include `pick` and `place` for `v4` and the objects, and `move_base`.
           
           The objects `v8`, `v12`, and `v14` are initially at poses `v9`, `v13`, and `v15` respectively, supported by `v11`. The goal requires them to be on `v16`. There are available `kin` facts that suggest `#o2` is a valid pose on `v16` for all three objects. Also, the `supported` facts indicate that `#o2` can be supported by `v16` for all three objects.
           
           The plan will involve:
           1. Picking up `v12` from `v13` and placing it at `#o2` on `v16`.
           2. Picking up `v14` from `v15` and placing it at `#o2` on `v16`.
           3. Picking up `v8` from `v9` and placing it at `#o2` on `v16`.
           
           The base will need to be at configuration `#o3` for all pick and place operations, and the arm `v4` will be used. The robot starts at `v3`, so a `move_base` action might be needed if `v3` is not `#o3`, but the available `kin` facts show that pick and place are valid with base configuration `#o3`. Thus, we should use `move_base v3 #o3 #o0` at the beginning.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)

