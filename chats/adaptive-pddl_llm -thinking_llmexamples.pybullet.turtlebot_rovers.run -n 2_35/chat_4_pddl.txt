User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v5)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom type(v4, v2)
           Atom type(v8, v6)
           Atom rock(v3)
           Atom lander(v9)
           Atom free(v12, v16)
           Atom type(v1, v2)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom atconf(v14, v15)
           Atom conf(v12, v13)
           Atom rock(v1)
           Atom supports(v10, v11)
           Atom onboard(v10, v14)
           Atom rock(v7)
           Atom store(v16)
           Atom rock(v8)
           Atom mode(v11)
           Atom free(v14, v16)
           Atom objective(v18)
           Atom rover(v12)
           Atom camera(v10)
           Atom conf(v14, v15)
           Atom objective(v17)
           Atom atconf(v12, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q7, v3)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #q3, #y2, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #q8, #y5, v17)
           Atom imagerange(v14, #q8, v17)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #q2, v3)
           Atom conf(v14, #q2)
           Atom above(v14, #q10, v4)
           Atom conf(v14, #q10)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom above(v12, #q9, v5)
           Atom conf(v12, #q9)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v7)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v12, #o5, v1)
           Atom above(v14, #o5, v1)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #t3, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v14, v15, #t14, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, v13, #t2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t9, v15)
           Atom motion(v14, #q8, #t20, #q1)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, v13, #t15, #q7)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, v15, #t1, #q2)
           Atom motion(v14, #q2, #t6, #q1)
           Atom motion(v14, #q1, #t0, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #t16, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #t7, #q1)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q1, #t21, #q10)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #t22, #q1)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, #q0, #t12, #q7)
           Atom motion(v12, #q4, #t11, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #t8, v13)
           Atom motion(v12, #q0, #t23, #q9)
           Atom motion(v12, #q3, #t10, #q0)
           Atom motion(v12, #q0, #t4, #q3)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q9, #t18, #q0)
           Atom motion(v12, #q0, #t5, #q4)
           Atom motion(v12, #q7, #t17, #q0)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q6, #t19, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, v15, #t13, #q6)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q7 v3 v16))
           ((sample_rock v12 #q9 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q10 v4 v16))
           ((sample_rock v14 #q2 v3 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #t12 #q7))
           ((move v12 #q0 #t23 #q9))
           ((move v12 #q0 #t4 #q3))
           ((move v12 #q0 #t5 #q4))
           ((move v12 #q0 #t8 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t10 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t11 #q0))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t17 #q0))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t18 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q7))
           ((move v12 v13 #t16 #q9))
           ((move v12 v13 #t2 #q3))
           ((move v12 v13 #t3 #q4))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #t0 #q2))
           ((move v14 #q1 #t21 #q10))
           ((move v14 #q1 #t9 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t22 #q1))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t6 #q1))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t7 #q1))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t19 #q1))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t20 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q2))
           ((move v14 v15 #t13 #q6))
           ((move v14 v15 #t14 #q8))
           ((calibrate v12 #q3 #y2 v17 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((calibrate v14 #q8 #y5 v17 v10))
           ((take_image v12 #q3 #y2 v17 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q8 #y5 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Strategic Plan for Axiom Fulfillment**
           
           Alright, let's break this down. The ultimate goal, `new-axiom@0()`, boils down to a conjunction of several conditions. First, we need to get images of two objectives, `v17` and `v18`, in mode `v11`. Then, we need to analyze both a stone and a soil sample.  Finally, we need to ensure the rovers end up in certain configurations, but as I examine the goal, I find that this particular set of constraints will keep the rovers in the same state that they initially started out in.
           
           **Phase 1: Image Acquisition**
           
           1.  **For `v17`**:  Rover `v12`, initially at `v13`, will handle this. We need to move `v12` to `#q3` (via available move actions) to get a clear line of sight, calibrate its camera `v10` for objective `v17` and mode `v11`, take the image, and then move to a communications node, `#q0`, to send it.
           2.  **For `v18`**:  Rover `v14`, initially at `v15`, will handle this. We'll follow the same procedure – move to `#q6`, calibrate, take the image, move to a comms node, `#q1`, and transmit it.
           
           **Phase 2: Sample Analysis**
           
           1.  **Analyzing a Stone:** Rover `v14` will then move from `#q1` to `#q10` (again, via available move actions), sample rock `v4` (a type v2 stone, as indicated in the goal), drop the sample to free the store, return to comms, and send the analysis.
           2.  **Analyzing Soil:** Rover `v12` will move from `#q0` to `#q9`, sample soil `v5` (a type v6 sample), drop the sample, and then communicate the analysis.
           
           **Phase 3: Rover return home**
           
           1.   **Move V12 to V13**: From its last configuration, move back to v13 to satisfy the axiom.
           2.   **Move V14 to V15**: From its last configuration, move back to v15 to satisfy the axiom.
           
           **Plan Evaluation:**
           
           This should satisfy every condition: images received, analyses received, rovers in initial state, and with stores freed.
           
           All of the actions I am planning are achievable given the facts and constraints of the current environment. The plan should work flawlessly, as I have chosen a route for each rover based on communication, camera, and sample capabilities as well as the available configurations.
           
)

Model:     **Strategic Plan for Axiom Fulfillment**
           
           Alright, let's break this down. The ultimate goal, `new-axiom@0()`, boils down to a conjunction of several conditions. First, we need to get images of two objectives, `v17` and `v18`, in mode `v11`. Then, we need to analyze both a stone and a soil sample.  Finally, we need to ensure the rovers end up in certain configurations, but as I examine the goal, I find that this particular set of constraints will keep the rovers in the same state that they initially started out in.
           
           **Phase 1: Image Acquisition**
           
           1.  **For `v17`**:  Rover `v12`, initially at `v13`, will handle this. We need to move `v12` to `#q3` (via available move actions) to get a clear line of sight, calibrate its camera `v10` for objective `v17` and mode `v11`, take the image, and then move to a communications node, `#q0`, to send it.
           2.  **For `v18`**:  Rover `v14`, initially at `v15`, will handle this. We'll follow the same procedure – move to `#q6`, calibrate, take the image, move to a comms node, `#q1`, and transmit it.
           
           **Phase 2: Sample Analysis**
           
           1.  **Analyzing a Stone:** Rover `v14` will then move from `#q1` to `#q10` (again, via available move actions), sample rock `v4` (a type v2 stone, as indicated in the goal), drop the sample to free the store, return to comms, and send the analysis.
           2.  **Analyzing Soil:** Rover `v12` will move from `#q0` to `#q9`, sample soil `v5` (a type v6 sample), drop the sample, and then communicate the analysis.
           
           **Phase 3: Rover return home**
           
           1.   **Move V12 to V13**: From its last configuration, move back to v13 to satisfy the axiom.
           2.   **Move V14 to V15**: From its last configuration, move back to v15 to satisfy the axiom.
           
           **Plan Evaluation:**
           
           This should satisfy every condition: images received, analyses received, rovers in initial state, and with stores freed.
           
           All of the actions I am planning are achievable given the facts and constraints of the current environment. The plan should work flawlessly, as I have chosen a route for each rover based on communication, camera, and sample capabilities as well as the available configurations.
           

