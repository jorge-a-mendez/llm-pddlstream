User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom type(v12, v17)
           Atom handempty(v6)
           Atom supported(v15, v16, v11)
           Atom ataconf(v6, v7)
           Atom graspable(v15)
           Atom arm(v4)
           Atom bconf(v3)
           Atom stackable(v8, v18)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v14)
           Atom arm(v6)
           Atom supported(v8, v9, v11)
           Atom pose(v12, v13)
           Atom atbconf(v3)
           Atom canmove()
           Atom stackable(v12, v18)
           Atom controllable(v4)
           Atom graspable(v8)
           Atom graspable(v12)
           Atom pose(v15, v16)
           Atom atpose(v15, v16)
           Atom aconf(v6, v7)
           Atom pose(v8, v9)
           Atom type(v8, v17)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom stackable(v15, v10)
           Atom stackable(v8, v10)
           Atom aconf(v4, v5)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v18)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #g0)
           Atom supported(v12, #o2, v18)
           Atom grasp(v15, #o1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v8, #p0, #g0, #q1, #t2)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t3)
           Atom basemotion(#q0, #t3, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(v3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q1 #t3))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p0 #g0 #q1 #t2))
           ((place v4 v8 #p0 #g0 #q1 #t2))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `new-axiom@0()`, which is an axiom representing the state `on(green, v18)` and `type(green, v17)`. In the given problem, `green` is represented by `v8`. The initial state has `atpose(v8, v9)` and `supported(v8, v9, v11)`. The goal `on(v8, v18)` requires that `v8` is supported by `v18` and `atpose(v8, #p0)` (since `supported(v8, #p0, v18)` is given). Thus, the plan needs to pick up `v8` from `v9` and place it at `#p0`.
           
           The robot arm `v4` is currently `handempty(v4)`. The object `v8` is at `atpose(v8, v9)`.
           To achieve `on(v8, v18)`, we need to place `v8` at `#p0`. This means we need to first pick `v8` from its current pose `v9`, and then place it at `#p0`.
           
           The initial state has `atbconf(v3)`.
           For picking `v8` from `v9`:
           `kin(v4, v8, v9, #g0, #q0, #t0)` is given. This requires the robot to be at `atbconf(#q0)`.
           Since the current base configuration is `v3`, we need to move the base from `v3` to `#q0`. The action `(move_base v3 #q0 #t1)` can achieve this.
           
           After picking, to place `v8` at `#p0`:
           `kin(v4, v8, #p0, #g0, #q1, #t2)` is given. This requires the robot to be at `atbconf(#q1)`.
           After picking, the robot will be at `atbconf(#q0)`, so we need to move the base from `#q0` to `#q1`. The action `(move_base #q0 #q1 #t3)` can achieve this.
           
           The sequence of actions would be:
           1. `move_base` from `v3` to `#q0`.
           2. `pick` `v8` from `v9` with arm `v4`.
           3. `move_base` from `#q0` to `#q1`.
           4. `place` `v8` at `#p0` with arm `v4`.
           
           --Plan--:
           (move_base v3 #q0 #t1)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q1 #t3)
           (place v4 v8 #p0 #g0 #q1 #t2)

