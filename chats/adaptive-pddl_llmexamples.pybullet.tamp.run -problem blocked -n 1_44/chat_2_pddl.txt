User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom type(v12, v17)
           Atom handempty(v6)
           Atom supported(v15, v16, v11)
           Atom ataconf(v6, v7)
           Atom graspable(v15)
           Atom arm(v4)
           Atom bconf(v3)
           Atom stackable(v8, v18)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v14)
           Atom arm(v6)
           Atom supported(v8, v9, v11)
           Atom pose(v12, v13)
           Atom atbconf(v3)
           Atom canmove()
           Atom stackable(v12, v18)
           Atom controllable(v4)
           Atom graspable(v8)
           Atom graspable(v12)
           Atom pose(v15, v16)
           Atom atpose(v15, v16)
           Atom aconf(v6, v7)
           Atom pose(v8, v9)
           Atom type(v8, v17)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom stackable(v15, v10)
           Atom stackable(v8, v10)
           Atom aconf(v4, v5)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #o1)
           Atom supported(v12, #o2, v18)
           Atom grasp(v15, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be achieved if `on(?green, v18)` and `type(?green, v17)` are true.
           From the initial state, we know `type(v8, v17)`, so we can set `?green` to `v8`.
           Therefore, the goal is reduced to making `on(v8, v18)` true.
           The initial state shows `atpose(v8, v9)` and `supported(v8, v9, v11)`. This means `v8` is currently on `v11`.
           To achieve `on(v8, v18)`, we need to move `v8` from `v11` to `v18`.
           We can use the `pick` action to pick up `v8` and then `place` it on `v18`.
           
           `v8` is at `pose(v8, v9)`. We have `kin(v4, v8, v9, #o1, #o3, #o4)`, `handempty(v4)`, and `atbconf(v3)`.
           However, `pick` requires `atbconf(?q)` to be true, and here `?q` is `#o3`.
           Since `atbconf(v3)` is true, and we have `basemotion(v3, #o0, #o3)`, we need to `move_base` from `v3` to `#o3` first.
           
           After picking up `v8`, we will need to place it on `v18`.
           We have `supported(v8, #o2, v18)` and `pose(v8, #o2)`. This indicates that `#o2` is a valid pose for `v8` on `v18`.
           So, the plan would be:
           1. `move_base` from `v3` to `#o3`.
           2. `pick` `v8` at `pose v9` using `arm v4`.
           3. `place` `v8` at `pose #o2` on `v18` using `arm v4`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)

