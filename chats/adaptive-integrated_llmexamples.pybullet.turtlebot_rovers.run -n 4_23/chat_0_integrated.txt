User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v5 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.82, -0.077), (-1.68, 0.063)).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.212, 2.133), (-2.12, 2.225)).
           Object v1 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.686, 0.612), (1.788, 0.714)).
           Object v9 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.405, -2.346), (-1.395, -1.654)).
           Object v15 is a base configuration with (x, y, theta) = (-1.0, -1.75, 0.0).
           Object v13 is a base configuration with (x, y, theta) = (1.0, -1.75, 3.142).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.635, 1.915), (-0.562, 1.988)).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((2.066, 1.974), (2.157, 2.064)).
           Object v7 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.593, -2.1), (1.709, -1.983)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.29, 1.95), (0.369, 2.03)).
           Object v4 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.145, -1.014), (-2.063, -0.932)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.187, -1.929), (-0.821, -1.571)).
           Object v3 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.547, -0.174), (1.653, -0.068)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.821, -1.929), (1.187, -1.571)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.787, 0.521), (-0.677, 0.632)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v4)
           Atom onboard(v10, v12)
           Atom atconf(v12, v13)
           Atom store(v16)
           Atom rock(v1)
           Atom mode(v11)
           Atom rover(v12)
           Atom objective(v19)
           Atom lander(v9)
           Atom type(v7, v6)
           Atom atconf(v14, v15)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom rock(v3)
           Atom conf(v12, v13)
           Atom type(v5, v6)
           Atom rock(v8)
           Atom type(v3, v2)
           Atom type(v8, v6)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom objective(v20)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom type(v1, v2)
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom rock(v5)
           Atom rover(v14)
           Atom free(v12, v16)
           Atom camera(v10)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v5)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom motion(v12, v13, #o2, v13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, two landers, v9, and several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There is a camera v10 that can be used by both rovers, and it supports mode v11. Both rovers have a store v16 that is currently free.
           
           The goal `new-axiom@0()` represents a complex set of conditions:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers are at their initial configurations. This is true initially.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers have free storage. This is true initially.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: Images of all four objectives (v17, v18, v19, v20) in mode v11 must be received.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: At least one rock of type v2 (stone) must be analyzed and the analysis received. The rocks of type v2 are v1, v3, v4.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: At least one rock of type v6 (soil) must be analyzed and the analysis received. The rocks of type v6 are v5, v7, v8.
           
           The available actions are limited to `move`, `drop_rock`. This means we cannot use `take_image`, `calibrate`, `send_image`, `sample_rock`, or `send_analysis`. Given this severe restriction, the goal is *unachievable*.
           
           The problem statement explicitly mentions that the goal is to achieve `new-axiom@0()`, which requires taking images, sending images, sampling rocks, and sending analyses. However, the provided list of valid action instances only contains `move` and `drop_rock` actions. Without actions like `take_image`, `send_image`, `sample_rock`, and `send_analysis`, it's impossible to satisfy the `receivedimage` and `receivedanalysis` predicates in the goal. Therefore, the goal is not achievable with the given set of allowed actions.

