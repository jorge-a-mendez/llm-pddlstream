User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g12: object
           #g13: object
           #g14: object
           #g15: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q40: object
           #q41: object
           #q42: object
           #q43: object
           #q44: object
           #q45: object
           #q46: object
           #q47: object
           #t160: object
           #t161: object
           #t162: object
           #t163: object
           #t164: object
           #t165: object
           #t166: object
           #t167: object
           #t168: object
           #t169: object
           #t170: object
           #t171: object
           #t172: object
           @sink: object
           @stove: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p15: object
           p16: object
           p17: object
           p18: object
           p19: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p4 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (0.08, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p5 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p16 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, 0.015), (0.035, 0.085)).
           Object p11 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, -0.035), (-0.045, 0.035)).
           Object p6 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (-0.08, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object p7 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (0.206, -0.364, 0.781) and quaternion (0.0, 0.0, -0.181, 0.983).
           Object p9 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v17 is a pose with position (-0.219, 0.392, 0.781) and quaternion (0.0, 0.0, 0.861, 0.509).
           Object p19 is a pose with position (0.0, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.009, -0.548, 0.781) and quaternion (0.0, 0.0, 0.514, 0.858).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v13 is a pose with position (0.215, 0.351, 0.781) and quaternion (0.0, 0.0, 0.789, 0.614).
           Object p8 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p17 is a pose with position (0.08, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p15 is a pose with position (0.0, 0.08, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p18 is a pose with position (-0.08, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom graspable(v16)
           Atom pose(v16, v17)
           Atom atpose(v16, v17)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom stackable(v8, v18)
           Atom stackable(v12, v18)
           Atom stackable(v14, v18)
           Atom stackable(v16, v18)
           Atom pose(v14, p6)
           Atom supported(v14, p6, v10)
           Atom pose(v16, p7)
           Atom supported(v16, p7, v18)
           Atom supported(v14, p6, v18)
           Atom pose(v12, p5)
           Atom supported(v12, p5, v18)
           Atom pose(v8, p4)
           Atom supported(v8, p4, v18)
           Atom supported(v12, p5, v10)
           Atom supported(v16, p7, v10)
           Atom supported(v8, p4, v10)
           Atom kin(v36, v43, p7, v38, v39, v40)
           Atom kin(v36, v42, p6, v38, v39, v40)
           Atom kin(v36, v41, p5, v38, v39, v40)
           Atom kin(v36, v37, p4, v38, v39, v40)
           Atom pose(v14, p10)
           Atom supported(v14, p10, v18)
           Atom supported(v14, p10, v10)
           Atom pose(v8, p8)
           Atom supported(v8, p8, v10)
           Atom pose(v16, p11)
           Atom supported(v16, p11, v18)
           Atom supported(v16, p11, v10)
           Atom pose(v12, p9)
           Atom supported(v12, p9, v18)
           Atom supported(v8, p8, v18)
           Atom supported(v12, p9, v10)
           Atom kin(v36, v37, p8, v38, v39, v40)
           Atom kin(v36, v41, p9, v38, v39, v40)
           Atom kin(v36, v42, p10, v38, v39, v40)
           Atom kin(v36, v43, p11, v38, v39, v40)
           Atom pose(v14, p14)
           Atom supported(v14, p14, v10)
           Atom pose(v16, p15)
           Atom supported(v16, p15, v18)
           Atom supported(v14, p14, v18)
           Atom pose(v12, p13)
           Atom supported(v12, p13, v18)
           Atom pose(v8, p12)
           Atom supported(v8, p12, v18)
           Atom supported(v12, p13, v10)
           Atom supported(v16, p15, v10)
           Atom supported(v8, p12, v10)
           Atom kin(v36, v41, p13, v38, v39, v40)
           Atom kin(v36, v42, p14, v38, v39, v40)
           Atom kin(v36, v37, p12, v38, v39, v40)
           Atom kin(v36, v43, p15, v38, v39, v40)
           Atom pose(v14, p18)
           Atom supported(v14, p18, v10)
           Atom pose(v8, p16)
           Atom supported(v8, p16, v10)
           Atom pose(v16, p19)
           Atom supported(v16, p19, v18)
           Atom supported(v16, p19, v10)
           Atom pose(v12, p17)
           Atom supported(v12, p17, v18)
           Atom supported(v8, p16, v18)
           Atom supported(v12, p17, v10)
           Atom supported(v14, p18, v18)
           Atom kin(v36, v37, p16, v38, v39, v40)
           Atom kin(v36, v41, p17, v38, v39, v40)
           Atom kin(v36, v42, p18, v38, v39, v40)
           Atom kin(v36, v43, p19, v38, v39, v40)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #g13)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom supported(v14, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v14, #g14)
           Atom supported(v12, #o2, v10)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #g12)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g15)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, p11, #g13, #o3, #o4)
           Atom bconf(#q40)
           Atom atraj(#t160)
           Atom kin(v4, v16, p19, #g13, #q40, #t160)
           Atom bconf(#q46)
           Atom atraj(#t171)
           Atom kin(v4, v16, v17, #g13, #q46, #t171)
           Atom kin(v4, v16, p7, #g13, #o3, #o4)
           Atom kin(v4, v16, p15, #g13, #o3, #o4)
           Atom bconf(#q41)
           Atom atraj(#t161)
           Atom kin(v4, v14, p18, #g14, #q41, #t161)
           Atom kin(v4, v14, p6, #g14, #o3, #o4)
           Atom kin(v4, v14, p10, #g14, #o3, #o4)
           Atom kin(v4, v14, p14, #g14, #o3, #o4)
           Atom bconf(#q43)
           Atom atraj(#t163)
           Atom kin(v4, v14, v15, #g14, #q43, #t163)
           Atom kin(v4, v12, p5, #g12, #o3, #o4)
           Atom kin(v4, v12, p13, #g12, #o3, #o4)
           Atom kin(v4, v12, p9, #g12, #o3, #o4)
           Atom bconf(#q42)
           Atom atraj(#t162)
           Atom kin(v4, v12, p17, #g12, #q42, #t162)
           Atom bconf(#q44)
           Atom atraj(#t164)
           Atom kin(v4, v12, v13, #g12, #q44, #t164)
           Atom kin(v4, v8, p8, #g15, #o3, #o4)
           Atom kin(v4, v8, p12, #g15, #o3, #o4)
           Atom kin(v4, v8, p16, #g15, #o3, #o4)
           Atom bconf(#q47)
           Atom atraj(#t172)
           Atom kin(v4, v8, p4, #g15, #q47, #t172)
           Atom bconf(#q45)
           Atom atraj(#t170)
           Atom kin(v4, v8, v9, #g15, #q45, #t170)
           Atom basemotion(#q46, #o0, v3)
           Atom basemotion(v3, #o0, #q46)
           Atom basemotion(#q46, #o0, #q46)
           Atom basemotion(#q41, #o0, v3)
           Atom btraj(#t166)
           Atom basemotion(v3, #t166, #q41)
           Atom basemotion(#q41, #o0, #q41)
           Atom basemotion(#q46, #o0, #q41)
           Atom basemotion(#q41, #o0, #q46)
           Atom basemotion(#q45, #o0, v3)
           Atom basemotion(#q45, #o0, #q45)
           Atom basemotion(v3, #o0, #q45)
           Atom basemotion(#q41, #o0, #q45)
           Atom basemotion(#q45, #o0, #q41)
           Atom basemotion(#q46, #o0, #q45)
           Atom basemotion(#q45, #o0, #q46)
           Atom basemotion(#q40, #o0, #q45)
           Atom basemotion(#q40, #o0, v3)
           Atom basemotion(#q40, #o0, #q41)
           Atom basemotion(#q45, #o0, #q40)
           Atom basemotion(#q40, #o0, #q40)
           Atom btraj(#t165)
           Atom basemotion(v3, #t165, #q40)
           Atom basemotion(#q41, #o0, #q40)
           Atom basemotion(#q46, #o0, #q40)
           Atom basemotion(#q40, #o0, #q46)
           Atom basemotion(#q47, #o0, v3)
           Atom basemotion(#q47, #o0, #q47)
           Atom basemotion(v3, #o0, #q47)
           Atom basemotion(#q45, #o0, #q47)
           Atom basemotion(#q47, #o0, #q45)
           Atom basemotion(#q41, #o0, #q47)
           Atom basemotion(#q47, #o0, #q41)
           Atom basemotion(#q40, #o0, #q47)
           Atom basemotion(#q47, #o0, #q40)
           Atom basemotion(#q46, #o0, #q47)
           Atom basemotion(#q47, #o0, #q46)
           Atom basemotion(#q44, #o0, #q45)
           Atom basemotion(#q44, #o0, #q47)
           Atom basemotion(#q44, #o0, v3)
           Atom basemotion(#q45, #o0, #q44)
           Atom basemotion(#q47, #o0, #q44)
           Atom btraj(#t169)
           Atom basemotion(v3, #t169, #q44)
           Atom basemotion(#q44, #o0, #q44)
           Atom basemotion(#q41, #o0, #q44)
           Atom basemotion(#q44, #o0, #q41)
           Atom basemotion(#q40, #o0, #q44)
           Atom basemotion(#q44, #o0, #q40)
           Atom basemotion(#q46, #o0, #q44)
           Atom basemotion(#q44, #o0, #q46)
           Atom basemotion(#q43, #o0, #q45)
           Atom basemotion(#q43, #o0, #q47)
           Atom basemotion(#q43, #o0, v3)
           Atom basemotion(#q43, #o0, #q41)
           Atom basemotion(#q43, #o0, #q44)
           Atom basemotion(#q45, #o0, #q43)
           Atom basemotion(#q47, #o0, #q43)
           Atom basemotion(#q43, #o0, #q43)
           Atom btraj(#t168)
           Atom basemotion(v3, #t168, #q43)
           Atom basemotion(#q41, #o0, #q43)
           Atom basemotion(#q44, #o0, #q43)
           Atom basemotion(#q40, #o0, #q43)
           Atom basemotion(#q43, #o0, #q40)
           Atom basemotion(#q46, #o0, #q43)
           Atom basemotion(#q43, #o0, #q46)
           Atom basemotion(#q42, #o0, #q47)
           Atom basemotion(#q42, #o0, #q45)
           Atom basemotion(#q42, #o0, v3)
           Atom basemotion(#q45, #o0, #q42)
           Atom basemotion(#q47, #o0, #q42)
           Atom basemotion(#q42, #o0, #q42)
           Atom btraj(#t167)
           Atom basemotion(v3, #t167, #q42)
           Atom basemotion(#q44, #o0, #q42)
           Atom basemotion(#q42, #o0, #q44)
           Atom basemotion(#q41, #o0, #q42)
           Atom basemotion(#q42, #o0, #q41)
           Atom basemotion(#q43, #o0, #q42)
           Atom basemotion(#q42, #o0, #q43)
           Atom basemotion(#q40, #o0, #q42)
           Atom basemotion(#q42, #o0, #q40)
           Atom basemotion(#q46, #o0, #q42)
           Atom basemotion(#q42, #o0, #q46)
           Atom kin(v4, v8, #o2, #g15, #o3, #o4)
           Atom kin(v4, v12, #o2, #g12, #o3, #o4)
           Atom kin(v4, v14, #o2, #g14, #o3, #o4)
           Atom kin(v4, v16, #o2, #g13, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q47, #o0, #o3)
           Atom basemotion(#o3, #o0, #q47)
           Atom basemotion(#q45, #o0, #o3)
           Atom basemotion(#o3, #o0, #q45)
           Atom basemotion(#q42, #o0, #o3)
           Atom basemotion(#o3, #o0, #q42)
           Atom basemotion(#q44, #o0, #o3)
           Atom basemotion(#o3, #o0, #q44)
           Atom basemotion(#q41, #o0, #o3)
           Atom basemotion(#o3, #o0, #q41)
           Atom basemotion(#q43, #o0, #o3)
           Atom basemotion(#o3, #o0, #q43)
           Atom basemotion(#q40, #o0, #o3)
           Atom basemotion(#o3, #o0, #q40)
           Atom basemotion(#q46, #o0, #o3)
           Atom basemotion(#o3, #o0, #q46)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q40 #o0))
           ((move_base #o3 #q41 #o0))
           ((move_base #o3 #q42 #o0))
           ((move_base #o3 #q43 #o0))
           ((move_base #o3 #q44 #o0))
           ((move_base #o3 #q45 #o0))
           ((move_base #o3 #q46 #o0))
           ((move_base #o3 #q47 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q40 #o3 #o0))
           ((move_base #q40 #q40 #o0))
           ((move_base #q40 #q41 #o0))
           ((move_base #q40 #q42 #o0))
           ((move_base #q40 #q43 #o0))
           ((move_base #q40 #q44 #o0))
           ((move_base #q40 #q45 #o0))
           ((move_base #q40 #q46 #o0))
           ((move_base #q40 #q47 #o0))
           ((move_base #q40 v3 #o0))
           ((move_base #q41 #o3 #o0))
           ((move_base #q41 #q40 #o0))
           ((move_base #q41 #q41 #o0))
           ((move_base #q41 #q42 #o0))
           ((move_base #q41 #q43 #o0))
           ((move_base #q41 #q44 #o0))
           ((move_base #q41 #q45 #o0))
           ((move_base #q41 #q46 #o0))
           ((move_base #q41 #q47 #o0))
           ((move_base #q41 v3 #o0))
           ((move_base #q42 #o3 #o0))
           ((move_base #q42 #q40 #o0))
           ((move_base #q42 #q41 #o0))
           ((move_base #q42 #q42 #o0))
           ((move_base #q42 #q43 #o0))
           ((move_base #q42 #q44 #o0))
           ((move_base #q42 #q45 #o0))
           ((move_base #q42 #q46 #o0))
           ((move_base #q42 #q47 #o0))
           ((move_base #q42 v3 #o0))
           ((move_base #q43 #o3 #o0))
           ((move_base #q43 #q40 #o0))
           ((move_base #q43 #q41 #o0))
           ((move_base #q43 #q42 #o0))
           ((move_base #q43 #q43 #o0))
           ((move_base #q43 #q44 #o0))
           ((move_base #q43 #q45 #o0))
           ((move_base #q43 #q46 #o0))
           ((move_base #q43 #q47 #o0))
           ((move_base #q43 v3 #o0))
           ((move_base #q44 #o3 #o0))
           ((move_base #q44 #q40 #o0))
           ((move_base #q44 #q41 #o0))
           ((move_base #q44 #q42 #o0))
           ((move_base #q44 #q43 #o0))
           ((move_base #q44 #q44 #o0))
           ((move_base #q44 #q45 #o0))
           ((move_base #q44 #q46 #o0))
           ((move_base #q44 #q47 #o0))
           ((move_base #q44 v3 #o0))
           ((move_base #q45 #o3 #o0))
           ((move_base #q45 #q40 #o0))
           ((move_base #q45 #q41 #o0))
           ((move_base #q45 #q42 #o0))
           ((move_base #q45 #q43 #o0))
           ((move_base #q45 #q44 #o0))
           ((move_base #q45 #q45 #o0))
           ((move_base #q45 #q46 #o0))
           ((move_base #q45 #q47 #o0))
           ((move_base #q45 v3 #o0))
           ((move_base #q46 #o3 #o0))
           ((move_base #q46 #q40 #o0))
           ((move_base #q46 #q41 #o0))
           ((move_base #q46 #q42 #o0))
           ((move_base #q46 #q43 #o0))
           ((move_base #q46 #q44 #o0))
           ((move_base #q46 #q45 #o0))
           ((move_base #q46 #q46 #o0))
           ((move_base #q46 #q47 #o0))
           ((move_base #q46 v3 #o0))
           ((move_base #q47 #o3 #o0))
           ((move_base #q47 #q40 #o0))
           ((move_base #q47 #q41 #o0))
           ((move_base #q47 #q42 #o0))
           ((move_base #q47 #q43 #o0))
           ((move_base #q47 #q44 #o0))
           ((move_base #q47 #q45 #o0))
           ((move_base #q47 #q46 #o0))
           ((move_base #q47 #q47 #o0))
           ((move_base #q47 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q45 #o0))
           ((move_base v3 #q46 #o0))
           ((move_base v3 #q47 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q40 #t165))
           ((move_base v3 #q41 #t166))
           ((move_base v3 #q42 #t167))
           ((move_base v3 #q43 #t168))
           ((move_base v3 #q44 #t169))
           ((pick v4 v12 #o2 #g12 #o3 #o4))
           ((place v4 v12 #o2 #g12 #o3 #o4))
           ((pick v4 v12 p13 #g12 #o3 #o4))
           ((place v4 v12 p13 #g12 #o3 #o4))
           ((pick v4 v12 p17 #g12 #q42 #t162))
           ((place v4 v12 p17 #g12 #q42 #t162))
           ((pick v4 v12 p5 #g12 #o3 #o4))
           ((place v4 v12 p5 #g12 #o3 #o4))
           ((pick v4 v12 p9 #g12 #o3 #o4))
           ((place v4 v12 p9 #g12 #o3 #o4))
           ((pick v4 v12 v13 #g12 #q44 #t164))
           ((place v4 v12 v13 #g12 #q44 #t164))
           ((pick v4 v14 #o2 #g14 #o3 #o4))
           ((place v4 v14 #o2 #g14 #o3 #o4))
           ((pick v4 v14 p10 #g14 #o3 #o4))
           ((place v4 v14 p10 #g14 #o3 #o4))
           ((pick v4 v14 p14 #g14 #o3 #o4))
           ((place v4 v14 p14 #g14 #o3 #o4))
           ((pick v4 v14 p18 #g14 #q41 #t161))
           ((place v4 v14 p18 #g14 #q41 #t161))
           ((pick v4 v14 p6 #g14 #o3 #o4))
           ((place v4 v14 p6 #g14 #o3 #o4))
           ((pick v4 v14 v15 #g14 #q43 #t163))
           ((place v4 v14 v15 #g14 #q43 #t163))
           ((pick v4 v16 #o2 #g13 #o3 #o4))
           ((place v4 v16 #o2 #g13 #o3 #o4))
           ((pick v4 v16 p11 #g13 #o3 #o4))
           ((place v4 v16 p11 #g13 #o3 #o4))
           ((pick v4 v16 p15 #g13 #o3 #o4))
           ((place v4 v16 p15 #g13 #o3 #o4))
           ((pick v4 v16 p19 #g13 #q40 #t160))
           ((place v4 v16 p19 #g13 #q40 #t160))
           ((pick v4 v16 p7 #g13 #o3 #o4))
           ((place v4 v16 p7 #g13 #o3 #o4))
           ((pick v4 v16 v17 #g13 #q46 #t171))
           ((place v4 v16 v17 #g13 #q46 #t171))
           ((pick v4 v8 #o2 #g15 #o3 #o4))
           ((place v4 v8 #o2 #g15 #o3 #o4))
           ((pick v4 v8 p12 #g15 #o3 #o4))
           ((place v4 v8 p12 #g15 #o3 #o4))
           ((pick v4 v8 p16 #g15 #o3 #o4))
           ((place v4 v8 p16 #g15 #o3 #o4))
           ((pick v4 v8 p4 #g15 #q47 #t172))
           ((place v4 v8 p4 #g15 #q47 #t172))
           ((pick v4 v8 p8 #g15 #o3 #o4))
           ((place v4 v8 p8 #g15 #o3 #o4))
           ((pick v4 v8 v9 #g15 #q45 #t170))
           ((place v4 v8 v9 #g15 #q45 #t170))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q34', '#t147'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g9', '#q34', '#t140'))
           Action(name='move_base', args=('#q34', '#q33', '#t154'))
           Action(name='place', args=('v4', 'v8', 'p4', '#g9', '#q33', '#t139'))
           Action(name='move_base', args=('#q33', '#q32', '#t159'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g8', '#q32', '#t138'))
           Action(name='move_base', args=('#q32', '#q36', '#t156'))
           Action(name='place', args=('v4', 'v12', 'p5', '#g8', '#q36', '#t142'))
           Action(name='move_base', args=('#q36', '#q39', '#t158'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g11', '#q39', '#t152'))
           Action(name='move_base', args=('#q39', '#q37', '#t153'))
           Action(name='place', args=('v4', 'v14', 'p6', '#g11', '#q37', '#t143'))
           Action(name='move_base', args=('#q37', '#q35', '#t155'))
           Action(name='pick', args=('v4', 'v16', 'v17', '#g10', '#q35', '#t141'))
           Action(name='move_base', args=('#q35', '#q38', '#t157'))
           Action(name='place', args=('v4', 'v16', 'p7', '#g10', '#q38', '#t144'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v16', 'p7', 'v12', 'p5')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The goal is to place all four objects (v8, v12, v14, v16) on the surface v18. Currently, all four objects are supported by v11, which is a large surface. The previous plan failed because placing v16 at p7 and v12 at p5 resulted in a collision between v16 and v12. This suggests that the chosen poses p7 and p5 for objects v16 and v12 respectively are too close or overlapping on the surface v18, leading to a collision. We need to select collision-free poses for the objects on v18.
           
           Let's re-evaluate the available poses on v18 for each object to find a collision-free arrangement.
           For object v8, the available poses on v18 are p4, p8, p12, p16, and #o2.
           For object v12, the available poses on v18 are p5, p9, p13, p17, and #o2.
           For object v14, the available poses on v18 are p6, p10, p14, p18, and #o2.
           For object v16, the available poses on v18 are p7, p11, p15, p19, and #o2.
           
           Since the previous plan failed due to a collision between v16 at p7 and v12 at p5, we should choose alternative poses to avoid this. Let's try to arrange them in a way that minimizes the chance of collision. The given bounding box for v18 is `((-0.135, -0.135), (0.135, 0.135))`. The provided poses p4-p19 are all centered at (0,0,0.782), with slight offsets.
           Let's try to place them at distinct locations.
           For v8, we can use p4.
           For v12, we can use p5.
           For v14, we can use p6.
           For v16, we can use p7.
           The previous plan failed because of collision between v16 at p7 and v12 at p5. Let's try to use other poses.
           If we use p4, p5, p6, p7 as listed, their x-y coordinates are:
           p4: (0.0, 0.0)
           p5: (0.05, 0.0)
           p6: (-0.05, 0.0)
           p7: (0.0, 0.05)
           These are very close to each other.
           
           Let's pick v8 from its current pose v9 and place it at p4 on v18.
           Then, pick v12 from v13 and place it at p5 on v18.
           Then, pick v14 from v15 and place it at p6 on v18.
           Finally, pick v16 from v17 and place it at p7 on v18.
           
           The previous plan placed v8 at p4, v12 at p5, v14 at p6 and v16 at p7. The specific collision that occurred was between v16 at p7 and v12 at p5. This means that (0, 0.05) and (0.05, 0.0) are too close. Let's try to use poses that are further apart, such as p12, p13, p14, p15.
           p12: (0.0, 0.0, 0.782) for v8
           p13: (0.08, 0.0, 0.782) for v12
           p14: (-0.08, 0.0, 0.782) for v14
           p15: (0.0, 0.08, 0.782) for v16
           These positions are somewhat more spread out, and could avoid collisions.
           The available actions have specific kin configurations and base configurations. We must use the exact available actions.
           
           For v8, we can pick from v9 and place at p12.
           For v12, we can pick from v13 and place at p13.
           For v14, we can pick from v15 and place at p14.
           For v16, we can pick from v17 and place at p15.
           
           Let's plan to pick v8 from v9, move to a base config that allows placing at p12, then place. Repeat for the other objects.
           
           Initial state:
           v8 at v9 (supported by v11)
           v12 at v13 (supported by v11)
           v14 at v15 (supported by v11)
           v16 at v17 (supported by v11)
           
           Goal:
           v8 on v18 (meaning atpose(v8, p) and supported(v8, p, v18))
           v12 on v18
           v14 on v18
           v16 on v18
           
           Available pick actions with their current poses and base/arm configs:
           (pick v4 v8 v9 #g15 #q45 #t170)
           (pick v4 v12 v13 #g12 #q44 #t164)
           (pick v4 v14 v15 #g14 #q43 #t163)
           (pick v4 v16 v17 #g13 #q46 #t171)
           
           Available place actions for the target poses (on v18):
           (place v4 v8 p12 #g15 #o3 #o4) -- here, the base config is #o3, which is the current base config from the `pick` action. We can use `move_base` to get to #o3.
           (place v4 v12 p13 #g12 #o3 #o4)
           (place v4 v14 p14 #g14 #o3 #o4)
           (place v4 v16 p15 #g13 #o3 #o4)
           
           Let's check the base configurations:
           Current: atbconf(v3)
           Pick v8: #q45
           Place v8 at p12: #o3
           
           Pick v12: #q44
           Place v12 at p13: #o3
           
           Pick v14: #q43
           Place v14 at p14: #o3
           
           Pick v16: #q46
           Place v16 at p15: #o3
           
           It seems like we need to move to the specific base configurations for each pick and place action. The `place` actions all target #o3 as the base configuration. The `pick` actions target different base configurations. It's more efficient to place all objects at #o3 if possible.
           
           Plan:
           1. Move to #q45 to pick v8.
           2. Pick v8 from v9.
           3. Move from #q45 to #o3 to place v8 at p12.
           4. Place v8 at p12.
           5. Move from #o3 to #q44 to pick v12.
           6. Pick v12 from v13.
           7. Move from #q44 to #o3 to place v12 at p13.
           8. Place v12 at p13.
           9. Move from #o3 to #q43 to pick v14.
           10. Pick v14 from v15.
           11. Move from #q43 to #o3 to place v14 at p14.
           12. Place v14 at p14.
           13. Move from #o3 to #q46 to pick v16.
           14. Pick v16 from v17.
           15. Move from #q46 to #o3 to place v16 at p15.
           16. Place v16 at p15.
           
           This plan uses the specific base configurations required for each pick and place, and then returns to the common base config #o3 to place. This should avoid collisions between objects being placed, as the poses p12, p13, p14, p15 are more spaced out.
           
           --Plan--:
           (move_base v3 #q45 #o0)
           (pick v4 v8 v9 #g15 #q45 #t170)
           (move_base #q45 #o3 #o0)
           (place v4 v8 p12 #g15 #o3 #o4)
           (move_base #o3 #q44 #o0)
           (pick v4 v12 v13 #g12 #q44 #t164)
           (move_base #q44 #o3 #o0)
           (place v4 v12 p13 #g12 #o3 #o4)
           (move_base #o3 #q43 #o0)
           (pick v4 v14 v15 #g14 #q43 #t163)
           (move_base #q43 #o3 #o0)
           (place v4 v14 p14 #g14 #o3 #o4)
           (move_base #o3 #q46 #o0)
           (pick v4 v16 v17 #g13 #q46 #t171)
           (move_base #q46 #o3 #o0)
           (place v4 v16 p15 #g13 #o3 #o4)

