User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v12)
           Atom arm(v6)
           Atom controllable(v4)
           Atom supported(v16, v17, v11)
           Atom stackable(v14, v18)
           Atom aconf(v6, v7)
           Atom bconf(v3)
           Atom atpose(v8, v9)
           Atom aconf(v4, v5)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom graspable(v8)
           Atom canmove()
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v10)
           Atom pose(v16, v17)
           Atom stackable(v16, v18)
           Atom handempty(v4)
           Atom graspable(v14)
           Atom ataconf(v4, v5)
           Atom atbconf(v3)
           Atom graspable(v16)
           Atom atpose(v16, v17)
           Atom supported(v12, v13, v11)
           Atom ataconf(v6, v7)
           Atom stackable(v12, v18)
           Atom handempty(v6)
           Atom atpose(v12, v13)
           Atom stackable(v8, v10)
           Atom stackable(v8, v18)
           Atom atpose(v14, v15)
           Atom stackable(v16, v10)
           Atom pose(v14, v15)
           Atom arm(v4)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v14, #o2, v18)
           Atom grasp(v16, #o1)
           Atom grasp(v12, #o1)
           Atom grasp(v14, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v16, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v16 #o2 #o1 #o3 #o4))
           ((place v4 v16 #o2 #o1 #o3 #o4))
           ((pick v4 v16 v17 #o1 #o3 #o4))
           ((place v4 v16 v17 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (v8, v12, v14, v16) that are `graspable` and `stackable`. There are two arms, v4 and v6, both `handempty`. The objects are currently supported by `v11`. The goal is to place all four objects (v8, v12, v14, v16) onto `v18`. We will use arm v4 to pick and place the objects. We will need to move the robot base to a suitable configuration (#o3) for picking and placing each object, then pick the object from its current pose, and then place it onto the target surface `v18` at a new pose (#o2). Since the base motions are defined for moving from v3 to #o3 and back, we will need to ensure the robot is at the correct base configuration when executing pick/place actions.
           
           The plan involves the following sequence of actions:
           1. Move the robot base to configuration #o3 to be able to interact with the objects.
           2. Pick `v8` from its current position `v9`.
           3. Place `v8` onto `v18` at pose `#o2`.
           4. Pick `v12` from its current position `v13`.
           5. Place `v12` onto `v18` at pose `#o2`.
           6. Pick `v14` from its current position `v15`.
           7. Place `v14` onto `v18` at pose `#o2`.
           8. Pick `v16` from its current position `v17`.
           9. Place `v16` onto `v18` at pose `#o2`.
           
           All `pick` and `place` actions use arm `v4`, grasp `#o1`, base configuration `#o3`, and trajectory `#o4`.
           The target pose for placing objects on `v18` is given as `#o2`. The initial poses of the objects are `v9`, `v13`, `v15`, and `v17` respectively.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v16 v17 #o1 #o3 #o4)
           (place v4 v16 #o2 #o1 #o3 #o4)

