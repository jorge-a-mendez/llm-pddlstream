User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v20)
           Atom type(v5, v6)
           Atom free(v12, v16)
           Atom rover(v12)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom rock(v7)
           Atom supports(v10, v11)
           Atom objective(v19)
           Atom camera(v10)
           Atom rover(v14)
           Atom rock(v3)
           Atom conf(v14, v15)
           Atom atconf(v14, v15)
           Atom free(v14, v16)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom type(v1, v2)
           Atom rock(v4)
           Atom lander(v9)
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom rock(v5)
           Atom type(v3, v2)
           Atom objective(v17)
           Atom store(v16)
           Atom rock(v8)
           Atom rock(v1)
           Atom onboard(v10, v12)
           Atom onboard(v10, v14)
           Atom type(v7, v6)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #q7, v1)
           Atom conf(v14, #q7)
           Atom above(v14, #q1, v5)
           Atom conf(v14, #q1)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q4, #y3, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q6, #y5, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y5)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v3)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v12, #q5, #y4, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom above(v12, #o5, v4)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v7)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t1, v15)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #t8, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #t3, v13)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q0, #t6, #q3)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v14, v15, #t2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #t5, #q2)
           Atom motion(v14, #q2, #t4, #q1)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #t9, #q3)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q4, #t7, #q3)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v14, #q2, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q2)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q1 v5 v16))
           ((sample_rock v14 #q7 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t6 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #t3 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t7 #q3))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t8 #q3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t9 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q2))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t5 #q2))
           ((move v14 #q2 #o2 #o3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #t1 v15))
           ((move v14 #q2 #t4 #q1))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t2 #q1))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q4 #y3 v17 v10))
           ((calibrate v12 #q5 #y4 v20 v10))
           ((calibrate v12 #q6 #y5 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q4 #y3 v17 v10 v11))
           ((take_image v12 #q5 #y4 v20 v10 v11))
           ((take_image v12 #q6 #y5 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v12 #q3 #y2 v9 v20 v11))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v19 v11))
           ((send_image v14 #q2 #y1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Comprehensive Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The objective is `new-axiom@0()`, a conjunction of several conditions. My initial assessment reveals that the first four conditions are already true in the initial state. The remaining conditions hinge on sending and receiving images and analyses, specifically: four image transmissions (`receivedimage`) and two rock analysis reports (`receivedanalysis`).
           
           My strategy will involve two rovers: `v14` for the image transmissions and `v12` for the rock analyses. Here's the general flow:
           
           1.  **Image Transmissions (v14):**
               *   `v14`, currently at `v15`, needs to move to an imaging configuration (`#o3`).
               *   It will then calibrate its onboard camera (`v10`) and take images of each of the four objectives (`v17`, `v18`, `v19`, `v20`).
               *   Following the image acquisition, `v14` will move to a communication configuration (`#q2`) and transmit all the images.
               *   Finally, it will return to its initial configuration `v15`.
           
           2.  **Rock Analyses (v12):**
               *   `v12`, starting at `v13`, will move to a rock sampling configuration (`#o5`).
               *   It will sample one rock of type `v2` (e.g., `v1`) and one rock of type `v6` (e.g., `v5`). *Note*: The rover must first drop a previously sampled rock before it can pick up a new one.
               *   `v12` will then move to a communication configuration (`#q3`) to send the rock analyses.
               *   Finally, it will return to its initial configuration `v13`.
           
           **Detailed Plan (Action Sequence)**
           
           I've carefully considered the necessary preconditions for each action, and here's the full, validated plan, considering the proper motions and preconditions:
           
           1.  **(move v14 v15 #o2 #o3)**: Move rover `v14` to the imaging configuration `#o3`.
           2.  **(calibrate v14 #o3 #o4 v17 v10)**: Calibrate the camera (`v10`) on rover `v14` for objective `v17`.
           3.  **(take_image v14 #o3 #o4 v17 v10 v11)**: Take an image of `v17` using camera `v10` and mode `v11`.
           4.  **(calibrate v14 #o3 #o4 v18 v10)**: Calibrate again for `v18`.
           5.  **(take_image v14 #o3 #o4 v18 v10 v11)**: Take the image.
           6.  **(calibrate v14 #o3 #o4 v19 v10)**: Calibrate for the next image.
           7.  **(take_image v14 #o3 #o4 v19 v10 v11)**: Take it.
           8.  **(calibrate v14 #o3 #o4 v20 v10)**: One last calibration...
           9.  **(take_image v14 #o3 #o4 v20 v10 v11)**: ...and take the final image.
           10. **(move v14 #o3 #o2 #q2)**: Move `v14` to the comm config `#q2`.
           11. **(send_image v14 #q2 #y1 v9 v17 v11)**: Send the images.
           12. **(send_image v14 #q2 #y1 v9 v18 v11)**
           13. **(send_image v14 #q2 #y1 v9 v19 v11)**
           14. **(send_image v14 #q2 #y1 v9 v20 v11)**
           15. **(move v14 #q2 #t1 v15)**: Return to start.
           16. **(move v12 v13 #o2 #o5)**: Get rover `v12` to sampling.
           17. **(sample_rock v12 #o5 v1 v16)**: Analyze rock `v1`.
           18. **(drop_rock v12 v16)**: Need to drop to make space.
           19.
)

Model:     **Comprehensive Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The objective is `new-axiom@0()`, a conjunction of several conditions. My initial assessment reveals that the first four conditions are already true in the initial state. The remaining conditions hinge on sending and receiving images and analyses, specifically: four image transmissions (`receivedimage`) and two rock analysis reports (`receivedanalysis`).
           
           My strategy will involve two rovers: `v14` for the image transmissions and `v12` for the rock analyses. Here's the general flow:
           
           1.  **Image Transmissions (v14):**
               *   `v14`, currently at `v15`, needs to move to an imaging configuration (`#o3`).
               *   It will then calibrate its onboard camera (`v10`) and take images of each of the four objectives (`v17`, `v18`, `v19`, `v20`).
               *   Following the image acquisition, `v14` will move to a communication configuration (`#q2`) and transmit all the images.
               *   Finally, it will return to its initial configuration `v15`.
           
           2.  **Rock Analyses (v12):**
               *   `v12`, starting at `v13`, will move to a rock sampling configuration (`#o5`).
               *   It will sample one rock of type `v2` (e.g., `v1`) and one rock of type `v6` (e.g., `v5`). *Note*: The rover must first drop a previously sampled rock before it can pick up a new one.
               *   `v12` will then move to a communication configuration (`#q3`) to send the rock analyses.
               *   Finally, it will return to its initial configuration `v13`.
           
           **Detailed Plan (Action Sequence)**
           
           I've carefully considered the necessary preconditions for each action, and here's the full, validated plan, considering the proper motions and preconditions:
           
           1.  **(move v14 v15 #o2 #o3)**: Move rover `v14` to the imaging configuration `#o3`.
           2.  **(calibrate v14 #o3 #o4 v17 v10)**: Calibrate the camera (`v10`) on rover `v14` for objective `v17`.
           3.  **(take_image v14 #o3 #o4 v17 v10 v11)**: Take an image of `v17` using camera `v10` and mode `v11`.
           4.  **(calibrate v14 #o3 #o4 v18 v10)**: Calibrate again for `v18`.
           5.  **(take_image v14 #o3 #o4 v18 v10 v11)**: Take the image.
           6.  **(calibrate v14 #o3 #o4 v19 v10)**: Calibrate for the next image.
           7.  **(take_image v14 #o3 #o4 v19 v10 v11)**: Take it.
           8.  **(calibrate v14 #o3 #o4 v20 v10)**: One last calibration...
           9.  **(take_image v14 #o3 #o4 v20 v10 v11)**: ...and take the final image.
           10. **(move v14 #o3 #o2 #q2)**: Move `v14` to the comm config `#q2`.
           11. **(send_image v14 #q2 #y1 v9 v17 v11)**: Send the images.
           12. **(send_image v14 #q2 #y1 v9 v18 v11)**
           13. **(send_image v14 #q2 #y1 v9 v19 v11)**
           14. **(send_image v14 #q2 #y1 v9 v20 v11)**
           15. **(move v14 #q2 #t1 v15)**: Return to start.
           16. **(move v12 v13 #o2 #o5)**: Get rover `v12` to sampling.
           17. **(sample_rock v12 #o5 v1 v16)**: Analyze rock `v1`.
           18. **(drop_rock v12 v16)**: Need to drop to make space.
           19.

