User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom rock(v8)
           Atom objective(v19)
           Atom objective(v17)
           Atom objective(v20)
           Atom type(v3, v2)
           Atom objective(v18)
           Atom rover(v14)
           Atom atconf(v12, v13)
           Atom free(v12, v16)
           Atom atconf(v14, v15)
           Atom mode(v11)
           Atom onboard(v10, v12)
           Atom free(v14, v16)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom rock(v1)
           Atom onboard(v10, v14)
           Atom rock(v3)
           Atom camera(v10)
           Atom rock(v4)
           Atom rover(v12)
           Atom conf(v12, v13)
           Atom type(v4, v2)
           Atom lander(v9)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom type(v5, v6)
           Atom type(v7, v6)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q0, #y0, v20)
           Atom imagerange(v12, #q0, v20)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q14, v5)
           Atom conf(v12, #q14)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q1, v7)
           Atom conf(v12, #q1)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #q4, v3)
           Atom conf(v12, #q4)
           Atom imagevisible(v12, #q3, #y2, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q8, #y5, v19)
           Atom imagerange(v14, #q8, v19)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom comvisible(v14, #q11, #y8, v9)
           Atom comrange(v14, #q11, v9)
           Atom conf(v14, #q11)
           Atom ray(#y8)
           Atom above(v14, #q13, v5)
           Atom conf(v14, #q13)
           Atom imagevisible(v14, #q9, #y6, v20)
           Atom imagerange(v14, #q9, v20)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom imagevisible(v14, #q10, #y7, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom above(v14, #q17, v7)
           Atom conf(v14, #q17)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #q16, v3)
           Atom conf(v14, #q16)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q7, v8)
           Atom conf(v12, #q7)
           Atom imagevisible(v14, #q12, #y9, v18)
           Atom imagerange(v14, #q12, v18)
           Atom conf(v14, #q12)
           Atom ray(#y9)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q15, v1)
           Atom conf(v12, #q15)
           Atom above(v14, #o5, v1)
           Atom motion(v12, v13, #t7, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v12, #q2, #t2, v13)
           Atom motion(v12, #q2, #t27, #q5)
           Atom motion(v12, #q5, #t24, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q2, #t1, #q1)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q2, #t33, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q14, #t32, #q2)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v12, #q4, #t18, #q2)
           Atom motion(v12, #q2, #t20, #q4)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, v13, #t13, #q4)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, v15, #t12, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q17, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q17)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #t3, #q2)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, v13, #t5, #q0)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q2, #t30, #q0)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q2, #t31, #q3)
           Atom motion(v12, #q0, #t26, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, v13, #t6, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #t4, #q2)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, v15, #t11, #q9)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, v15, #t25, #q13)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q17)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q10, #t17, #q11)
           Atom motion(v14, #q17, #o2, #q11)
           Atom motion(v14, #q11, #t14, v15)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q9, #t16, #q11)
           Atom motion(v14, #q13, #t21, #q11)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v12, #q6, #t22, #q5)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q3, #t23, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #t28, #q2)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #t8, #q6)
           Atom motion(v12, #q2, #t29, #q6)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, v15, #t10, #q8)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q17)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #t15, #q11)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q17, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q16, #t34, #q11)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, v15, #t35, #q16)
           Atom motion(v14, #q16, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q16)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q2, #t9, #q7)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q7, #t19, #q2)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q17)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q17, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q8, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #q1 v7 v16))
           ((sample_rock v12 #q14 v5 v16))
           ((sample_rock v12 #q15 v1 v16))
           ((sample_rock v12 #q4 v3 v16))
           ((sample_rock v12 #q7 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q13 v5 v16))
           ((sample_rock v14 #q16 v3 v16))
           ((sample_rock v14 #q17 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t26 #q3))
           ((move v12 #q0 #t3 #q2))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t32 #q2))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #t1 #q1))
           ((move v12 #q2 #t2 v13))
           ((move v12 #q2 #t20 #q4))
           ((move v12 #q2 #t27 #q5))
           ((move v12 #q2 #t29 #q6))
           ((move v12 #q2 #t30 #q0))
           ((move v12 #q2 #t31 #q3))
           ((move v12 #q2 #t33 #q14))
           ((move v12 #q2 #t9 #q7))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t23 #q6))
           ((move v12 #q3 #t4 #q2))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t18 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t24 #q2))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t22 #q5))
           ((move v12 #q6 #t28 #q2))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t19 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t13 #q4))
           ((move v12 v13 #t5 #q0))
           ((move v12 v13 #t6 #q3))
           ((move v12 v13 #t7 #q5))
           ((move v12 v13 #t8 #q6))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q17))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q16))
           ((move v14 #q10 #o2 #q17))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t17 #q11))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q17))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #t14 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t21 #q11))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q10))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t34 #q11))
           ((move v14 #q17 #o2 #o5))
           ((move v14 #q17 #o2 #q10))
           ((move v14 #q17 #o2 #q11))
           ((move v14 #q17 #o2 #q12))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q8))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q17))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t15 #q11))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t16 #q11))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q8))
           ((move v14 v15 #t11 #q9))
           ((move v14 v15 #t12 #q10))
           ((move v14 v15 #t25 #q13))
           ((move v14 v15 #t35 #q16))
           ((calibrate v12 #q0 #y0 v20 v10))
           ((calibrate v12 #q3 #y2 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #q10 #y7 v17 v10))
           ((calibrate v14 #q12 #y9 v18 v10))
           ((calibrate v14 #q8 #y5 v19 v10))
           ((calibrate v14 #q9 #y6 v20 v10))
           ((take_image v12 #q0 #y0 v20 v10 v11))
           ((take_image v12 #q3 #y2 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #q10 #y7 v17 v10 v11))
           ((take_image v14 #q12 #y9 v18 v10 v11))
           ((take_image v14 #q8 #y5 v19 v10 v11))
           ((take_image v14 #q9 #y6 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q11 #y8 v9 v1))
           ((send_analysis v14 #q11 #y8 v9 v4))
           ((send_analysis v14 #q11 #y8 v9 v8))
           ((send_analysis v14 #q11 #y8 v9 v5))
           ((send_analysis v14 #q11 #y8 v9 v3))
           ((send_analysis v14 #q11 #y8 v9 v7))
           ((send_image v12 #q2 #y1 v9 v20 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v14 #q11 #y8 v9 v17 v11))
           ((send_image v14 #q11 #y8 v9 v18 v11))
           ((send_image v14 #q11 #y8 v9 v19 v11))
           ((send_image v14 #q11 #y8 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Alright, let's break this down.** My goal is to achieve the state defined by `new-axiom@0()` in the `rovers` domain. This basically means I need to make sure a few things are true about the rovers, the images, and the analyses. Here's my thought process:
           
           First, I looked at the definition of the axiom. It includes two rovers (`v12` and `v14`), and their locations (`atconf`), their storage space (`free`), and images and analyses received by the lander. The initial state tells me that both rovers start with the required configuration and free storage, so I just need to achieve the "received" goals.
           
           I noticed that both rovers start with locations and free storage, and that the locations are mentioned explicitly in the axiom as initial states so they must be *maintained* by returning to them. 
           
           Then I laid out the objects. There are rovers, a lander, cameras, objectives, and rocks. I looked for existing "calibrated" states, to see if some images are already taken. None are initially. Rover `v12` can see the objectives: `v20`, `v17`, `v19`, and `v18`. Rover `v14` can see the same objectives. 
           
           Both rovers can see all objectives, so I figured I can pick either one. But the objective is to *maintain* the initial state of the rover configurations, so I'm going to stick with the rover that's closest to the communication location where images will be sent (`q2`). I'll use rover `v12` to handle the image acquisition and analyses.
           
           To achieve `receivedimage` for all the objectives, I need to Calibrate the camera, take pictures, then send the picture to the lander. To achieve `receivedanalysis`, I need to sample, and send the results to the lander. So I need to move to the objectives, get the images, get the analyses, move to a communication position, then send to the lander. So I will plan image taking and image sending for `v12` first and then the sample/send operations.
           
           Rover `v12` starts at `v13`, and needs to move to `q0`, `q3`, `q6`, `q5`, and then `q2`. `v12` needs to take pictures from each objective, then move to the communication spot and send the images.
           
           Now, for `receivedanalysis`, I need to sample and send analysis for a `v2` rock (`stone`) and a `v6` rock (`soil`). The initial state provides the coordinates of some rocks. I decided to sample stone `v4` and soil `v7`. I looked at the locations of `v4` and `v7`.  I chose `v4` and `v7` to use with `v12` to not change initial state. After the rock sampling, I must move `v12` to `q2` and send the analyses. But I noted that the storage of `v12` is *full* after one sampling and needs to be dropped before the next. Then the rock must be sent to the lander. Then send the analysis.
           
           Now it's just a matter of executing the plan by writing the action sequence. But first I need to ensure that the initial condition for each state *includes* the starting state. Rover 12 must start at `v13` and must remain there at the end. Rover 14 must start and remain at its initial condition `v15` as well. To finish, I will need to consider the order. It is crucial for these actions to complete their preconditions and have the correct effects.
           
           Here is the finalized sequence. I need to make sure both rovers are at the correct configuration at the end as well and that `free(v12, v16)` is true at the end.
           
)

Model:     **Alright, let's break this down.** My goal is to achieve the state defined by `new-axiom@0()` in the `rovers` domain. This basically means I need to make sure a few things are true about the rovers, the images, and the analyses. Here's my thought process:
           
           First, I looked at the definition of the axiom. It includes two rovers (`v12` and `v14`), and their locations (`atconf`), their storage space (`free`), and images and analyses received by the lander. The initial state tells me that both rovers start with the required configuration and free storage, so I just need to achieve the "received" goals.
           
           I noticed that both rovers start with locations and free storage, and that the locations are mentioned explicitly in the axiom as initial states so they must be *maintained* by returning to them. 
           
           Then I laid out the objects. There are rovers, a lander, cameras, objectives, and rocks. I looked for existing "calibrated" states, to see if some images are already taken. None are initially. Rover `v12` can see the objectives: `v20`, `v17`, `v19`, and `v18`. Rover `v14` can see the same objectives. 
           
           Both rovers can see all objectives, so I figured I can pick either one. But the objective is to *maintain* the initial state of the rover configurations, so I'm going to stick with the rover that's closest to the communication location where images will be sent (`q2`). I'll use rover `v12` to handle the image acquisition and analyses.
           
           To achieve `receivedimage` for all the objectives, I need to Calibrate the camera, take pictures, then send the picture to the lander. To achieve `receivedanalysis`, I need to sample, and send the results to the lander. So I need to move to the objectives, get the images, get the analyses, move to a communication position, then send to the lander. So I will plan image taking and image sending for `v12` first and then the sample/send operations.
           
           Rover `v12` starts at `v13`, and needs to move to `q0`, `q3`, `q6`, `q5`, and then `q2`. `v12` needs to take pictures from each objective, then move to the communication spot and send the images.
           
           Now, for `receivedanalysis`, I need to sample and send analysis for a `v2` rock (`stone`) and a `v6` rock (`soil`). The initial state provides the coordinates of some rocks. I decided to sample stone `v4` and soil `v7`. I looked at the locations of `v4` and `v7`.  I chose `v4` and `v7` to use with `v12` to not change initial state. After the rock sampling, I must move `v12` to `q2` and send the analyses. But I noted that the storage of `v12` is *full* after one sampling and needs to be dropped before the next. Then the rock must be sent to the lander. Then send the analysis.
           
           Now it's just a matter of executing the plan by writing the action sequence. But first I need to ensure that the initial condition for each state *includes* the starting state. Rover 12 must start at `v13` and must remain there at the end. Rover 14 must start and remain at its initial condition `v15` as well. To finish, I will need to consider the order. It is crucial for these actions to complete their preconditions and have the correct effects.
           
           Here is the finalized sequence. I need to make sure both rovers are at the correct configuration at the end as well and that `free(v12, v16)` is true at the end.
           

