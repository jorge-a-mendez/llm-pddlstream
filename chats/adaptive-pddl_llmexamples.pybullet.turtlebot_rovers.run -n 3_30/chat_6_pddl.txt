User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v1, v2)
           Atom rover(v12)
           Atom atconf(v14, v15)
           Atom rock(v1)
           Atom type(v7, v6)
           Atom conf(v12, v13)
           Atom store(v16)
           Atom type(v4, v2)
           Atom onboard(v10, v14)
           Atom type(v8, v6)
           Atom type(v3, v2)
           Atom rock(v7)
           Atom rock(v5)
           Atom objective(v17)
           Atom objective(v19)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom camera(v10)
           Atom rock(v8)
           Atom free(v12, v16)
           Atom mode(v11)
           Atom atconf(v12, v13)
           Atom conf(v14, v15)
           Atom lander(v9)
           Atom type(v5, v6)
           Atom rover(v14)
           Atom onboard(v10, v12)
           Atom free(v14, v16)
           Atom rock(v3)
           Atom objective(v18)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q7, v3)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom above(v12, #q10, v7)
           Atom conf(v12, #q10)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom above(v14, #o5, v7)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q12, v8)
           Atom conf(v12, #q12)
           Atom above(v12, #q11, v4)
           Atom conf(v12, #q11)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v12, #q9, #y5, v19)
           Atom imagerange(v12, #q9, v19)
           Atom conf(v12, #q9)
           Atom ray(#y5)
           Atom imagevisible(v14, #q4, #y3, v19)
           Atom imagerange(v14, #q4, v19)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, v13, #t12, #q6)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #t8, #q4)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, v13, #t20, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #t3, #q2)
           Atom motion(v12, #q6, #t13, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t27, #q0)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q7, #t18, #q8)
           Atom motion(v12, #q8, #t17, #q6)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #t6, #q0)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q4, #t2, #q1)
           Atom motion(v14, #q1, #t11, v15)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q2, #t16, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q11, #t26, #q3)
           Atom motion(v12, #q8, #t21, #q3)
           Atom motion(v12, #q3, #t1, #q2)
           Atom motion(v12, #q3, #t23, #q10)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q2, #t9, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q3, #t22, #q8)
           Atom motion(v12, #q9, #t19, #q3)
           Atom motion(v12, #q3, #t24, #q11)
           Atom motion(v12, #q6, #t10, #q3)
           Atom motion(v12, #q10, #t25, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q7, #t15, #q3)
           Atom motion(v12, #q3, #t4, v13)
           Atom motion(v12, #q3, #t14, #q7)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #t5, #q3)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q3, #t7, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #q0, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q11 v4 v16))
           ((sample_rock v12 #q12 v8 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v12 #q7 v3 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t25 #q3))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t26 #q3))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t16 #q9))
           ((move v12 #q2 #t9 #q3))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #t1 #q2))
           ((move v12 #q3 #t14 #q7))
           ((move v12 #q3 #t22 #q8))
           ((move v12 #q3 #t23 #q10))
           ((move v12 #q3 #t24 #q11))
           ((move v12 #q3 #t4 v13))
           ((move v12 #q3 #t7 #q5))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t5 #q3))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t10 #q3))
           ((move v12 #q6 #t13 #q2))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t15 #q3))
           ((move v12 #q7 #t18 #q8))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t17 #q6))
           ((move v12 #q8 #t21 #q3))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t19 #q3))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t12 #q6))
           ((move v12 v13 #t20 #q7))
           ((move v12 v13 #t3 #q2))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #t11 v15))
           ((move v14 #q1 #t6 #q0))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t2 #q1))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t27 #q0))
           ((move v14 v15 #t8 #q4))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v12 #q9 #y5 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #q4 #y3 v19 v10))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v12 #q9 #y5 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #q4 #y3 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ((send_image v14 #q1 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to achieve `new-axiom@0()`, which is a conjunction of several conditions related to the state of two rovers (`v12`, `v14`), a store (`v16`), received images for objectives (`v17`, `v18`, `v19`) using mode `v11`, and received analysis for rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`).
           
           From the initial state, we know:
           - Two rovers `v12` and `v14` are present, both having a store `v16` and being free.
           - Rover `v12` is at `v13` and has camera `v10` onboard, which supports mode `v11`.
           - Rover `v14` is at `v15` and also has camera `v10` onboard.
           - There are multiple rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`, `v19`).
           - There are various motion, image visibility, and communication visibility predicates.
           
           The goal `new-axiom@0()` implies:
           1. `atconf(v12, v13)` and `atconf(v14, v15)` are true (which they are initially).
           2. `free(v12, v16)` and `free(v14, v16)` are true (which they are initially).
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)` must be true. This requires taking images of objectives `v17`, `v18`, `v19` with mode `v11` and sending them to the lander `v9`.
           4. `receivedanalysis(v1)`, `receivedanalysis(v3)`, `receivedanalysis(v4)`, `receivedanalysis(v5)`, `receivedanalysis(v7)`, `receivedanalysis(v8)` must be true. This requires sampling these rocks and sending their analysis to the lander `v9`.
           
           Let's break down the tasks for the rovers:
           
           **Task 1: Obtain all images and send them.**
           - Rover `v12` can take images of `v17`, `v18`, `v19`.
               - To take `v17`: Move to `#q6`, calibrate, take image, move to `#q3`, send image.
               - To take `v18`: Move to `#q2`, calibrate, take image, move to `#q3`, send image.
               - To take `v19`: Move to `#q9`, calibrate, take image, move to `#q3`, send image.
           - Rover `v14` can also take images of `v17`, `v18`, `v19`.
               - To take `v17`: Move to `#o3`, calibrate, take image, move to `#q1`, send image.
               - To take `v18`: Move to `#o3`, calibrate, take image, move to `#q1`, send image.
               - To take `v19`: Move to `#q4`, calibrate, take image, move to `#q1`, send image.
           
           We will have `v12` handle its imaging tasks. The same camera `v10` is on both rovers, and calibration makes it uncalibrated, so we need to recalibrate between images.
           
           **Task 2: Sample all rocks and send analysis.**
           - Rover `v12` can sample `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
               - `v3` at `#q7`
               - `v5` at `#q8`
               - `v7` at `#q10`
               - `v1` at `#q5`
               - `v4` at `#q11`
               - `v8` at `#q12`
               After sampling, move to `#q3` to send analysis.
           - Rover `v14` can also sample some rocks.
               - `v1` at `#o5`
               - `v3` at `#o5`
               - `v4` at `#o5`
               - `v7` at `#o5`
               - `v8` at `#o5`
               - `v5` at `#q0`
               After sampling, move to `#q1` to send analysis.
           
           We will utilize both rovers for efficiency.
           
           **Plan Strategy:**
           1. Use `v12` to take images of `v17`, `v18`, `v19` and send them.
           2. Use `v12` to sample rocks `v3`, `v5`, `v7`, `v1`, `v4`, `v8` and send their analysis.
           3. This covers all the goals as the rovers start at their home configurations `v13` and `v15` and have free stores.
           
           Let's trace the actions for `v12` to cover all image and analysis goals:
           
           **Images for v12:**
           - Calibrate for `v17` at `#q6`.
           - Take image of `v17`.
           - Calibrate for `v18` at `#q2`.
           - Take image of `v18`.
           - Calibrate for `v19` at `#q9`.
           - Take image of `v19`.
           - Move to `#q3` (comvisible) and send all three images.
           
           **Analysis for v12:**
           - Sample `v3` at `#q7`.
           - Sample `v5` at `#q8`.
           - Sample `v7` at `#q10`.
           - Sample `v1` at `#q5`.
           - Sample `v4` at `#q11`.
           - Sample `v8` at `#q12`.
           - Move to `#q3` (comvisible) and send all six analyses.
           
           We can interleave these tasks, but a sequential approach is clearer and valid as long as preconditions are met.
           
           Let's try to make a coherent plan for rover v12:
           
           Initialize `v12` at `v13`.
           
           **Images:**
           1. Move to `#q6` for `v17`.
           2. Calibrate `v10` for `v17`.
           3. Take image of `v17`.
           4. Move to `#q2` for `v18`.
           5. Calibrate `v10` for `v18`.
           6. Take image of `v18`.
           7. Move to `#q9` for `v19`.
           8. Calibrate `v10` for `v19`.
           9. Take image of `v19`.
           10. Move to `#q3` (communication point).
           11. Send image of `v17`.
           12. Send image of `v18`.
           13. Send image of `v19`.
           
           **Analysis:**
           1. Move to `#q7` for `v3`.
           2. Sample `v3`.
           3. Move to `#q8` for `v5`.
           4. Sample `v5`.
           5. Move to `#q10` for `v7`.
           6. Sample `v7`.
           7. Move to `#q5` for `v1`.
           8. Sample `v1`.
           9. Move to `#q11` for `v4`.
           10. Sample `v4`.
           11. Move to `#q12` for `v8`.
           12. Sample `v8`.
           13. Move to `#q3` (communication point, if not already there).
           14. Send analysis of `v3`.
           15. Send analysis of `v5`.
           16. Send analysis of `v7`.
           17. Send analysis of `v1`.
           18. Send analysis of `v4`.
           19. Send analysis of `v8`.
           
           This plan covers all required goals for `receivedimage` and `receivedanalysis`. The `atconf` and `free` conditions are met initially and sustained. The camera `v10` is onboard `v12` and supports mode `v11`.
           
           I will ensure to move to the correct configuration for each action and then to a communication configuration to send the data.
           
           --Plan--:
           (move v12 v13 #t12 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t13 #q2)
           (calibrate v12 #q2 #y1 v18 v10)
           (take_image v12 #q2 #y1 v18 v10 v11)
           (move v12 #q2 #t16 #q9)
           (calibrate v12 #q9 #y5 v19 v10)
           (take_image v12 #q9 #y5 v19 v10 v11)
           (move v12 #q9 #t19 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (move v12 #q3 #t14 #q7)
           (sample_rock v12 #q7 v3 v16)
           (move v12 #q7 #t18 #q8)
           (sample_rock v12 #q8 v5 v16)
           (move v12 #q8 #o2 #q10)
           (sample_rock v12 #q10 v7 v16)
           (move v12 #q10 #o2 #q5)
           (sample_rock v12 #q5 v1 v16)
           (move v12 #q5 #o2 #q11)
           (sample_rock v12 #q11 v4 v16)
           (move v12 #q11 #o2 #q12)
           (sample_rock v12 #q12 v8 v16)
           (move v12 #q12 #o2 #q3)
           (send_analysis v12 #q3 #y2 v9 v3)
           (send_analysis v12 #q3 #y2 v9 v5)
           (send_analysis v12 #q3 #y2 v9 v7)
           (send_analysis v12 #q3 #y2 v9 v1)
           (send_analysis v12 #q3 #y2 v9 v4)
           (send_analysis v12 #q3 #y2 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. This axiom requires a very specific set of conditions to be met simultaneously:
           - Both rovers `v12` and `v14` must be at their initial configurations (`v13`, `v15`).
           - Both rovers `v12` and `v14` must have a free store `v16`.
           - All three objectives (`v17`, `v18`, `v19`) must have their images received (`receivedimage`).
           - All six rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) must have their analyses received (`receivedanalysis`).
           
           My previous plan only used `v12` to achieve all image and analysis goals. While this might be possible for `receivedimage` and `receivedanalysis`, it does not guarantee that `v14` is at `v15` or that its store is free if it was used. Also, if I used `v12` for all sampling, it would not have a free store, which is part of the `new-axiom@0()` goal. The axiom states `free(v12, v16)` AND `free(v14, v16)`. If `v12` samples any rock, its store `v16` becomes `full`, and I would need to `drop_rock` to make it `free` again.
           
           Let's revise the strategy considering the full axiom.
           
           **Revised Strategy:**
           
           1.  **Image Collection and Transmission:**
               *   Rover `v12` will take images of `v17`, `v18`, `v19` and send them. It will need to calibrate its camera `v10` before each image. It will move to a communication-visible location (`#q3`) to send the images.
           2.  **Rock Sampling and Analysis:**
               *   This is the tricky part because `free(v12, v16)` and `free(v14, v16)` must be true at the end. This means any rover that samples a rock *must* drop it afterwards to free its store.
               *   We need to sample and send analysis for all 6 rocks: `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
               *   Since both rovers have a free store initially, we can use both. Let's assign `v12` to sample 3 rocks and `v14` to sample the other 3.
               *   For each sampled rock, the rover will:
                   *   Move to the rock's location.
                   *   Sample the rock (store becomes `full`).
                   *   Move to a communication-visible location (`#q3` for `v12`, `#q1` for `v14`).
                   *   Send the analysis.
                   *   Drop the rock (store becomes `free`).
               *   This ensures that at the end, both `v12` and `v14` have free stores.
           
           3.  **Final Configurations:**
               *   After all tasks, both rovers need to return to their initial configurations (`v13` for `v12`, `v15` for `v14`).
           
           Let's try to make a detailed plan:
           
           **Part 1: Rover v12 - Images and 3 Rocks Analysis**
           
           1.  **Images:**
               *   (move v12 v13 #t12 #q6) - Move to `q6` for `v17`
               *   (calibrate v12 #q6 #y4 v17 v10) - Calibrate for `v17`
               *   (take_image v12 #q6 #y4 v17 v10 v11) - Take image of `v17`
               *   (move v12 #q6 #t13 #q2) - Move to `q2` for `v18`
               *   (calibrate v12 #q2 #y1 v18 v10) - Calibrate for `v18`
               *   (take_image v12 #q2 #y1 v18 v10 v11) - Take image of `v18`
               *   (move v12 #q2 #t16 #q9) - Move to `q9` for `v19`
               *   (calibrate v12 #q9 #y5 v19 v10) - Calibrate for `v19`
               *   (take_image v12 #q9 #y5 v19 v10 v11) - Take image of `v19`
               *   (move v12 #q9 #t19 #q3) - Move to `q3` (comms)
               *   (send_image v12 #q3 #y2 v9 v17 v11) - Send `v17`
               *   (send_image v12 #q3 #y2 v9 v18 v11) - Send `v18`
               *   (send_image v12 #q3 #y2 v9 v19 v11) - Send `v19`
           
           2.  **Rocks for v12 (3 rocks):** Let's pick `v3`, `v5`, `v7` for `v12`.
               *   (move v12 #q3 #t14 #q7) - Move to `q7` for `v3`
               *   (sample_rock v12 #q7 v3 v16)
               *   (move v12 #q7 #t15 #q3) - Move to `q3` (comms)
               *   (send_analysis v12 #q3 #y2 v9 v3)
               *   (drop_rock v12 v16) - Free store
               *   (move v12 #q3 #t22 #q8) - Move to `q8` for `v5`
               *   (sample_rock v12 #q8 v5 v16)
               *   (move v12 #q8 #t21 #q3) - Move to `q3` (comms)
               *   (send_analysis v12 #q3 #y2 v9 v5)
               *   (drop_rock v12 v16) - Free store
               *   (move v12 #q3 #t23 #q10) - Move to `q10` for `v7`
               *   (sample_rock v12 #q10 v7 v16)
               *   (move v12 #q10 #t25 #q3) - Move to `q3` (comms)
               *   (send_analysis v12 #q3 #y2 v9 v7)
               *   (drop_rock v12 v16) - Free store
           
           3.  **Rover v12 returns to initial configuration:**
               *   (move v12 #q3 #t4 v13) - Return `v12` to `v13`
           
           **Part 2: Rover v14 - 3 Rocks Analysis**
           
           1.  **Rocks for v14 (3 rocks):** Let's pick `v1`, `v4`, `v8` for `v14`.
               *   (move v14 v15 #o2 #o5) - Move to `o5` for `v1`, `v3`, `v4`, `v7`, `v8`. The problem is that `above` for `v14` is only given at `#o5` for `v1, v3, v4, v7, v8` and `#q0` for `v5`. Since we used `v3, v5, v7` with `v12`, `v1, v4, v8` remain for `v14`. All of them are above `#o5`. This is fine, we will just sample them sequentially.
               *   (sample_rock v14 #o5 v1 v16)
               *   (move v14 #o5 #o2 #q1) - Move to `q1` (comms)
               *   (send_analysis v14 #q1 #y0 v9 v1)
               *   (drop_rock v14 v16) - Free store
               *   (move v14 #q1 #o2 #o5) - Move back to `o5` for `v4`
               *   (sample_rock v14 #o5 v4 v16)
               *   (move v14 #o5 #o2 #q1) - Move to `q1` (comms)
               *   (send_analysis v14 #q1 #y0 v9 v4)
               *   (drop_rock v14 v16) - Free store
               *   (move v14 #q1 #o2 #o5) - Move back to `o5` for `v8`
               *   (sample_rock v14 #o5 v8 v16)
               *   (move v14 #o5 #o2 #q1) - Move to `q1` (comms)
               *   (send_analysis v14 #q1 #y0 v9 v8)
               *   (drop_rock v14 v16) - Free store
           
           2.  **Rover v14 returns to initial configuration:**
               *   (move v14 #q1 #t11 v15) - Return `v14` to `v15`
           
           This plan ensures:
           - All images are taken and sent.
           - All rocks are sampled, analyzed, and the analysis sent.
           - Both rovers are at their initial configurations.
           - Both rovers have free stores.
           - All preconditions are satisfied at each step.
           
           --Plan--:
           (move v12 v13 #t12 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t13 #q2)
           (calibrate v12 #q2 #y1 v18 v10)
           (take_image v12 #q2 #y1 v18 v10 v11)
           (move v12 #q2 #t16 #q9)
           (calibrate v12 #q9 #y5 v19 v10)
           (take_image v12 #q9 #y5 v19 v10 v11)
           (move v12 #q9 #t19 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (move v12 #q3 #t14 #q7)
           (sample_rock v12 #q7 v3 v16)
           (move v12 #q7 #t15 #q3)
           (send_analysis v12 #q3 #y2 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q3 #t22 #q8)
           (sample_rock v12 #q8 v5 v16)
           (move v12 #q8 #t21 #q3)
           (send_analysis v12 #q3 #y2 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q3 #t23 #q10)
           (sample_rock v12 #q10 v7 v16)
           (move v12 #q10 #t25 #q3)
           (send_analysis v12 #q3 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q3 #t4 v13)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (move v14 #o5 #o2 #q1)
           (send_analysis v14 #q1 #y0 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #o5)
           (sample_rock v14 #o5 v4 v16)
           (move v14 #o5 #o2 #q1)
           (send_analysis v14 #q1 #y0 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #o5)
           (sample_rock v14 #o5 v8 v16)
           (move v14 #o5 #o2 #q1)
           (send_analysis v14 #q1 #y0 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q1 #t11 v15)

