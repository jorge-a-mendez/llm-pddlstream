User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supports(v10, v11)
           Atom type(v7, v6)
           Atom rover(v12)
           Atom atconf(v12, v13)
           Atom rock(v4)
           Atom onboard(v10, v14)
           Atom mode(v11)
           Atom type(v1, v2)
           Atom rover(v14)
           Atom lander(v9)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom onboard(v10, v12)
           Atom objective(v18)
           Atom rock(v3)
           Atom conf(v12, v13)
           Atom type(v3, v2)
           Atom objective(v17)
           Atom free(v12, v16)
           Atom type(v4, v2)
           Atom camera(v10)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom rock(v8)
           Atom store(v16)
           Atom rock(v7)
           Atom type(v5, v6)
           Atom free(v14, v16)
           Atom rock(v5)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v7)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q7, #y4, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y4)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v4)
           Atom above(v14, #q1, v5)
           Atom conf(v14, #q1)
           Atom imagevisible(v14, #q5, #y3, v18)
           Atom imagerange(v14, #q5, v18)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #q8, #y5, v18)
           Atom imagerange(v12, #q8, v18)
           Atom conf(v12, #q8)
           Atom ray(#y5)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #q9, v1)
           Atom conf(v12, #q9)
           Atom above(v12, #q4, v3)
           Atom conf(v12, #q4)
           Atom above(v12, #q6, v4)
           Atom conf(v12, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v14, #q0, #t0, v15)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t8, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v14, #q0, #t1, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #t4, #q0)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #t6, #q0)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, v15, #t3, #q5)
           Atom motion(v12, v13, #t18, #q9)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q3, #t7, v13)
           Atom motion(v12, #q3, #t10, #q6)
           Atom motion(v12, #q9, #t17, #q3)
           Atom motion(v12, #q3, #t9, #q4)
           Atom motion(v12, #q2, #t5, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q6, #t12, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q4, #t2, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, v15, #t13, #q7)
           Atom motion(v14, #q7, #t14, #q0)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q7, #t16, #q5)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q8, #t15, #q3)
           Atom motion(v12, v13, #t11, #q8)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q7)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q4 v3 v16))
           ((sample_rock v12 #q6 v4 v16))
           ((sample_rock v12 #q9 v1 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q1 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t5 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #t10 #q6))
           ((move v12 #q3 #t7 v13))
           ((move v12 #q3 #t9 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t2 #q3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q3))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t15 #q3))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t17 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t11 #q8))
           ((move v12 v13 #t18 #q9))
           ((move v12 v13 #t8 #q2))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #t0 v15))
           ((move v14 #q0 #t1 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t4 #q0))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t6 #q0))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t14 #q0))
           ((move v14 #q7 #t16 #q5))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t13 #q7))
           ((move v14 v15 #t3 #q5))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v12 #q8 #y5 v18 v10))
           ((calibrate v14 #q5 #y3 v18 v10))
           ((calibrate v14 #q7 #y4 v17 v10))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v12 #q8 #y5 v18 v10 v11))
           ((take_image v14 #q5 #y3 v18 v10 v11))
           ((take_image v14 #q7 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Plan for `Atom new-axiom@0()` in the `rovers` Domain**
           
           Okay, here's the game plan. The goal is complex, but manageable. We need to receive images and analyses, specifically for:
           
           *   Images: `v17` and `v18` in mode `v11`.
           *   Analyses: `v1`, `v3`, `v4` (stones of type `v2`), and `v5`, `v7`, `v8` (soils of type `v6`).
           
           First, let's take care of the images. We have two rovers (`v12`, `v14`) and a lander (`v9`). Both rovers have a camera (`v10`) that supports the necessary mode (`v11`).  We'll use rover `v12` as it's more convenient based on the initial configuration.
           
           1.  **Move Rover `v12` to `#q2`** for the first image.
           2.  **Calibrate the camera `v10` for image `v17`**.
           3.  **Take the image of `v17`**.
           4.  **Move Rover `v12` to `#q8`** for the second image.
           5.  **Re-calibrate the camera** (as `take_image` invalidates the calibration).
           6.  **Take the image of `v18`**.
           7.  **Move Rover `v12` to `#q3`** (the communication location).
           8.  **Send the image of `v17` to the lander**.
           9.  **Send the image of `v18` to the lander**.
           
           Now for rock analysis. Rover `v12` has a store (`v16`).
           
           1.  **Move to the sampling location for soils `v5`, `v7`, and `v8`**, which is at `#o5`.
               -   **Sample the first soil `v7`**.
               -   **Send its analysis**.
               -   **Drop the sample** to free the store.
               -   Repeat steps for remaining soils `v5` and `v8`.
           
           2.  **Move the rover to sampling location for rock `v1` which is #q9**.
               -   **Sample rock v1.**
               -   **Send its analysis**.
               -   **Drop the sample**.
           3.  **Move the rover to sampling location for rock `v3`, which is #q4**.
               -   **Sample rock v3.**
               -   **Send its analysis**.
               -   **Drop the sample**.
           4.  **Move the rover to sampling location for rock `v4`, which is #q6**.
               -   **Sample rock v4.**
               -   **Send its analysis**.
               -   **Drop the sample**.
           
           With the analyses sent, Rover `v12` is at the correct starting position, which is `#q3`. We just need the rover to return to its initial configuration.
           5.  **Move Rover `v12` to `v13`** (its initial configuration).
           
           That should do it.  The initial preconditions are met, and we ensure that `receivedimage` and `receivedanalysis` are always true. The store is managed for multiple samples, but the number of required analyses is relatively low, so the approach seems viable and efficient.
           
)

Model:     **The Plan for `Atom new-axiom@0()` in the `rovers` Domain**
           
           Okay, here's the game plan. The goal is complex, but manageable. We need to receive images and analyses, specifically for:
           
           *   Images: `v17` and `v18` in mode `v11`.
           *   Analyses: `v1`, `v3`, `v4` (stones of type `v2`), and `v5`, `v7`, `v8` (soils of type `v6`).
           
           First, let's take care of the images. We have two rovers (`v12`, `v14`) and a lander (`v9`). Both rovers have a camera (`v10`) that supports the necessary mode (`v11`).  We'll use rover `v12` as it's more convenient based on the initial configuration.
           
           1.  **Move Rover `v12` to `#q2`** for the first image.
           2.  **Calibrate the camera `v10` for image `v17`**.
           3.  **Take the image of `v17`**.
           4.  **Move Rover `v12` to `#q8`** for the second image.
           5.  **Re-calibrate the camera** (as `take_image` invalidates the calibration).
           6.  **Take the image of `v18`**.
           7.  **Move Rover `v12` to `#q3`** (the communication location).
           8.  **Send the image of `v17` to the lander**.
           9.  **Send the image of `v18` to the lander**.
           
           Now for rock analysis. Rover `v12` has a store (`v16`).
           
           1.  **Move to the sampling location for soils `v5`, `v7`, and `v8`**, which is at `#o5`.
               -   **Sample the first soil `v7`**.
               -   **Send its analysis**.
               -   **Drop the sample** to free the store.
               -   Repeat steps for remaining soils `v5` and `v8`.
           
           2.  **Move the rover to sampling location for rock `v1` which is #q9**.
               -   **Sample rock v1.**
               -   **Send its analysis**.
               -   **Drop the sample**.
           3.  **Move the rover to sampling location for rock `v3`, which is #q4**.
               -   **Sample rock v3.**
               -   **Send its analysis**.
               -   **Drop the sample**.
           4.  **Move the rover to sampling location for rock `v4`, which is #q6**.
               -   **Sample rock v4.**
               -   **Send its analysis**.
               -   **Drop the sample**.
           
           With the analyses sent, Rover `v12` is at the correct starting position, which is `#q3`. We just need the rover to return to its initial configuration.
           5.  **Move Rover `v12` to `v13`** (its initial configuration).
           
           That should do it.  The initial preconditions are met, and we ensure that `receivedimage` and `receivedanalysis` are always true. The store is managed for multiple samples, but the number of required analyses is relatively low, so the approach seems viable and efficient.
           

