User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom handempty(v4)
           Atom handempty(v6)
           Atom atbconf(v3)
           Atom stackable(v12, v18)
           Atom controllable(v4)
           Atom atpose(v15, v16)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)
           Atom graspable(v8)
           Atom stackable(v12, v10)
           Atom supported(v8, v9, v11)
           Atom supported(v15, v16, v11)
           Atom arm(v4)
           Atom canmove()
           Atom arm(v6)
           Atom stackable(v15, v10)
           Atom stackable(v8, v18)
           Atom aconf(v6, v7)
           Atom pose(v15, v16)
           Atom ataconf(v4, v5)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom supported(v12, v13, v14)
           Atom pose(v12, v13)
           Atom type(v8, v17)
           Atom pose(v8, v9)
           Atom graspable(v15)
           Atom stackable(v8, v10)
           Atom graspable(v12)
           Atom aconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom type(v12, v17)
           Atom bconf(v3)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, v22)
           Atom grasp(v8, v23)
           Atom grasp(v8, v21)
           Atom grasp(v8, v20)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v8, v9, v22, #q2, #t5)
           Atom bconf(#q3)
           Atom atraj(#t7)
           Atom kin(v4, v8, v19, v22, #q3, #t7)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v19, v23, #o3, #o4)
           Atom kin(v4, v8, v19, v21, #o3, #o4)
           Atom kin(v4, v8, v19, v20, #o3, #o4)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t8)
           Atom basemotion(#q2, #t8, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q3 #t8))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t6))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 #o3 #o4))
           ((place v4 v8 v19 v20 #o3 #o4))
           ((pick v4 v8 v19 v21 #o3 #o4))
           ((place v4 v8 v19 v21 #o3 #o4))
           ((pick v4 v8 v19 v22 #q3 #t7))
           ((place v4 v8 v19 v22 #q3 #t7))
           ((pick v4 v8 v19 v23 #o3 #o4))
           ((place v4 v8 v19 v23 #o3 #o4))
           ((pick v4 v8 v9 v22 #q2 #t5))
           ((place v4 v8 v9 v22 #q2 #t5))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (`v8`, `v12`, `v15`) that can be picked and placed. The goal `new-axiom@0()` refers to the fact `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, `v8` is of `type v17`. Therefore, to achieve the goal, `v8` needs to be placed on `v18`. Currently, `v8` is at `atpose(v8, v9)` and `supported(v8, v9, v11)`. `v18` is a surface on which `v8` can be placed, indicated by `stackable(v8, v18)` and `supported(v8, v19, v18)`. So the plan involves picking up `v8` from `v9` and placing it on `v19` on `v18`. There are specific kinematic and motion parameters provided for these actions, which need to be used.
           
           --Plan--:
           (move_base v3 #q2 #t6)
           (pick v4 v8 v9 v22 #q2 #t5)
           (move_base #q2 #q3 #t8)
           (place v4 v8 v19 v22 #q3 #t7)

