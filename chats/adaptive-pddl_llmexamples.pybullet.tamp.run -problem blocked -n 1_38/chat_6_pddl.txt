User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #t5: object
           #t6: object
           #t7: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom handempty(v4)
           Atom handempty(v6)
           Atom atbconf(v3)
           Atom stackable(v12, v18)
           Atom controllable(v4)
           Atom atpose(v15, v16)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)
           Atom graspable(v8)
           Atom stackable(v12, v10)
           Atom supported(v8, v9, v11)
           Atom supported(v15, v16, v11)
           Atom arm(v4)
           Atom canmove()
           Atom arm(v6)
           Atom stackable(v15, v10)
           Atom stackable(v8, v18)
           Atom aconf(v6, v7)
           Atom pose(v15, v16)
           Atom ataconf(v4, v5)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom supported(v12, v13, v14)
           Atom pose(v12, v13)
           Atom type(v8, v17)
           Atom pose(v8, v9)
           Atom graspable(v15)
           Atom stackable(v8, v10)
           Atom graspable(v12)
           Atom aconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom type(v12, v17)
           Atom bconf(v3)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, v22)
           Atom grasp(v8, v23)
           Atom grasp(v8, v21)
           Atom grasp(v8, v20)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v8, v9, v22, #q2, #t5)
           Atom bconf(#q3)
           Atom atraj(#t7)
           Atom kin(v4, v8, v19, v22, #q3, #t7)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v19, v23, #o3, #o4)
           Atom kin(v4, v8, v19, v21, #o3, #o4)
           Atom kin(v4, v8, v19, v20, #o3, #o4)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q2, #o0, #o3)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t6))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 #o3 #o4))
           ((place v4 v8 v19 v20 #o3 #o4))
           ((pick v4 v8 v19 v21 #o3 #o4))
           ((place v4 v8 v19 v21 #o3 #o4))
           ((pick v4 v8 v19 v22 #q3 #t7))
           ((place v4 v8 v19 v22 #q3 #t7))
           ((pick v4 v8 v19 v23 #o3 #o4))
           ((place v4 v8 v19 v23 #o3 #o4))
           ((pick v4 v8 v9 v22 #q2 #t5))
           ((place v4 v8 v9 v22 #q2 #t5))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects: `#o0`, `#o1`, `#o2`, `#o3`, `#o4`, `#q2`, `#q3`, `#t5`, `#t6`, `#t7`, `v10`, `v11`, `v12`, `v13`, `v14`, `v15`, `v16`, `v17`, `v18`, `v19`, `v20`, `v21`, `v22`, `v23`, `v3`, `v4`, `v5`, `v6`, `v7`, `v8`, `v9`.
           
           The robot has two arms, `v4` and `v6`, both are initially empty. The robot's base is at `v3`. There are three objects `v8`, `v12`, and `v15`.
           `v8` is at `v9` and is supported by `v11`. It is also type `v17`. `v8` can be stacked on `v18` or `v10`.
           `v12` is at `v13` and is supported by `v14`. It is also type `v17`. `v12` can be stacked on `v18` or `v10`.
           `v15` is at `v16` and is supported by `v11`. `v15` can be stacked on `v10`.
           
           The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true. This means we need to place an object of type `v17` onto `v18`. Both `v8` and `v12` are of type `v17`.
           
           Let's try to pick `v8` and place it on `v18`.
           `v8` is at `v9`. `v4` can grasp `v8` at `v22` from `v9` with base configuration `#q2` and trajectory `#t5`.
           We can pick `v8` from `v9` if the robot moves its base to `#q2`.
           Then we need to place `v8` on `v18`. One possible pose for `v8` on `v18` is `v19` (supported by `v18`). `v4` can place `v8` at `v19` with grasp `v22`, base config `#q3` and trajectory `#t7`.
           So, the plan would involve moving the base to `#q2`, picking `v8`, moving the base to `#q3`, and then placing `v8` at `v19`.
           
           Initial state: `atbconf(v3)`, `atpose(v8, v9)`, `handempty(v4)`.
           The goal `new-axiom@0()` implies `on(?green, v18)` and `type(?green, v17)`. We can achieve this by placing `v8` (which is of type `v17`) on `v18`. The pose `v19` is supported by `v18`.
           
           1. **Move base to #q2**: The robot is at `v3` and `pick v4 v8 v9 v22 #q2 #t5` requires the robot to be at `#q2`. We have `basemotion(v3, #t6, #q2)`.
           2. **Pick v8**: `pick v4 v8 v9 v22 #q2 #t5` is applicable since `kin(v4, v8, v9, v22, #q2, #t5)`, `atpose(v8, v9)`, `handempty(v4)`, `atbconf(#q2)`, and collision conditions are not violated.
           3. **Move base to #q3**: After picking, the robot is at `#q2`. `place v4 v8 v19 v22 #q3 #t7` requires the robot to be at `#q3`. We have `basemotion(#q2, #o0, #q3)`.
           4. **Place v8**: `place v4 v8 v19 v22 #q3 #t7` is applicable since `kin(v4, v8, v19, v22, #q3, #t7)`, `atgrasp(v4, v8, v22)` (from pick action), `atbconf(#q3)`, and collision conditions are not violated. After this, `atpose(v8, v19)` will be true, and since `supported(v8, v19, v18)` and `type(v8, v17)`, the goal `new-axiom@0()` (i.e., `on(v8, v18)` and `type(v8, v17)`) will be satisfied.
           
           --Plan--:
           (move_base v3 #q2 #t6)
           (pick v4 v8 v9 v22 #q2 #t5)
           (move_base #q2 #q3 #o0)
           (place v4 v8 v19 v22 #q3 #t7)

