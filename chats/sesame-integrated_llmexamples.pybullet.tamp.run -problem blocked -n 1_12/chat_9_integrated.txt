User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g3: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p3: object
           #q6: object
           #q7: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           @sink: object
           @stove: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v15 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.315, 0.265), (4.385, 0.335)).
           Object v9 is a pose with position (4.5, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.393, 0.333, 0.0, -1.522, 2.722, -1.219, -2.989).
           Object v13 is a pose with position (-4.489, -0.361, 0.801) and quaternion (0.0, 0.0, -0.233, 0.972).
           Object v16 is a pose with position (4.35, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (2.5, 0.0, 0.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.0)).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((3.604, -0.364), (4.572, 0.696)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.6)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.8, -0.6), (-4.2, 0.6)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.536, -0.409), (-4.442, -0.314)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom handempty(v6)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v14)
           Atom graspable(v15)
           Atom pose(v15, v16)
           Atom atpose(v15, v16)
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #g3)
           Atom pose(v12, #p3)
           Atom supported(v12, #p3, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom bconf(#q7)
           Atom atraj(#t15)
           Atom kin(v4, v12, v13, #g3, #q7, #t15)
           Atom bconf(#q6)
           Atom atraj(#t14)
           Atom kin(v4, v12, #p3, #g3, #q6, #t14)
           Atom basemotion(#q7, #o0, v3)
           Atom btraj(#t17)
           Atom basemotion(v3, #t17, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q7)
           Atom btraj(#t16)
           Atom basemotion(v3, #t16, #q6)
           Atom btraj(#t18)
           Atom basemotion(#q7, #t18, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g3, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q6 #t18))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q6 #t16))
           ((move_base v3 #q7 #t17))
           ((pick v4 v12 #o2 #g3 #o3 #o4))
           ((place v4 v12 #o2 #g3 #o3 #o4))
           ((pick v4 v12 #p3 #g3 #q6 #t14))
           ((place v4 v12 #p3 #g3 #q6 #t14))
           ((pick v4 v12 v13 #g3 #q7 #t15))
           ((place v4 v12 v13 #g3 #q7 #t15))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to achieve `new-axiom@0()`, which is equivalent to `on(?green, v18)` and `type(?green, v17)`. In this problem, `?green` refers to `v12`. So, we need to place `v12` on `v18` such that `v12` is of type `v17`. The initial state already tells us that `type(v12, v17)`. Therefore, we only need to achieve `on(v12, v18)`. From the axioms, `on(v12, v18)` is true if `supported(v12, ?p, v18)` and `atpose(v12, ?p)` are true for some pose `?p`. The initial state gives us `supported(v12, #p3, v18)`. So the task is to pick `v12` from its current pose `v13` and place it at pose `#p3`.
           
           The initial state shows that `v12` is at `v13` supported by `v14` (a sink). `v15` is at `v16` supported by `v11`.
           
           To achieve `on(v12, v18)`, we need to pick `v12` and place it at `#p3`.
           There are two pick actions for `v12`:
           1. `(pick v4 v12 v13 #g3 #q7 #t15)`: This picks `v12` from `v13`.
           2. `(pick v4 v12 #o2 #g3 #o3 #o4)`: This picks `v12` from `#o2`.
           
           Since `v12` is currently at `v13`, we will use the first pick action. This requires the robot to be at `bconf #q7`. The current base configuration is `v3`. So we need to move the base from `v3` to `#q7`.
           
           After picking `v12`, we need to place it at `#p3`. There are two place actions for `v12`:
           1. `(place v4 v12 v13 #g3 #q7 #t15)`: This places `v12` at `v13`.
           2. `(place v4 v12 #p3 #g3 #q6 #t14)`: This places `v12` at `#p3`.
           3. `(place v4 v12 #o2 #g3 #o3 #o4)`: This places `v12` at `#o2`.
           
           We want to place `v12` at `#p3`, which requires the robot to be at `bconf #q6`. After picking `v12` the robot is at `#q7`. So we need to move the base from `#q7` to `#q6`.
           
           The plan would be:
           1. `(move_base v3 #q7 #t17)`: Move base to the pick configuration.
           2. `(pick v4 v12 v13 #g3 #q7 #t15)`: Pick `v12` from `v13`.
           3. `(move_base #q7 #q6 #t18)`: Move base to the place configuration.
           4. `(place v4 v12 #p3 #g3 #q6 #t14)`: Place `v12` at `#p3`.
           
           --Plan--:
           (move_base v3 #q7 #t17)
           (pick v4 v12 v13 #g3 #q7 #t15)
           (move_base #q7 #q6 #t18)
           (place v4 v12 #p3 #g3 #q6 #t14)
           
           --Poses--:
           (#p3 v12 v18): (4.489 -0.361 0.801 0.0)

