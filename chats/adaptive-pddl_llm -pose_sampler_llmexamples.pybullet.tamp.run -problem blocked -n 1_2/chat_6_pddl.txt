User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #t4: object
           #t5: object
           #t6: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v4, v5)
           Atom graspable(v8)
           Atom controllable(v4)
           Atom bconf(v3)
           Atom supported(v15, v16, v11)
           Atom stackable(v12, v18)
           Atom stackable(v8, v18)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom atpose(v15, v16)
           Atom arm(v6)
           Atom graspable(v12)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v21, v15, v16)
           Atom stackable(v8, v10)
           Atom arm(v4)
           Atom graspable(v15)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v10)
           Atom stackable(v15, v10)
           Atom atbconf(v3)
           Atom type(v8, v17)
           Atom atpose(v8, v9)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom canmove()
           Atom handempty(v4)
           Atom aconf(v6, v7)
           Atom type(v12, v17)
           Atom supported(v12, v13, v14)
           Atom ataconf(v4, v5)
           Atom atpose(v12, v13)
           Atom pose(v15, v16)
           Atom grasp(v8, v22)
           Atom grasp(v8, v23)
           Atom grasp(v8, v20)
           Atom grasp(v8, v21)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v15, #o1)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, v9, v21, #q2, #t4)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v22, v26, v27)
           Atom bconf(v28)
           Atom atraj(v29)
           Atom kin(v4, v8, v19, v23, v28, v29)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v20, v24, v25)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v8, v19, v21, #q3, #t6)
           Atom basemotion(v3, #o0, v26)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v3, #o0, v28)
           Atom basemotion(v28, #o0, v3)
           Atom basemotion(v28, #o0, v28)
           Atom basemotion(v28, #o0, v26)
           Atom basemotion(v26, #o0, v28)
           Atom basemotion(v28, #o0, v24)
           Atom basemotion(v24, #o0, v28)
           Atom basemotion(v26, #o0, #q2)
           Atom basemotion(#q2, #o0, v28)
           Atom basemotion(v28, #o0, #q2)
           Atom basemotion(#q2, #o0, v24)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(v24, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, v26)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, v24)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(v26, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(v28, #o0, #q3)
           Atom basemotion(v24, #o0, #q3)
           Atom basemotion(#q3, #o0, v26)
           Atom basemotion(#q3, #o0, v28)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v24)
           Atom basemotion(#o3, #o0, v28)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(v28, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v28 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v28 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v24 #o0))
           ((move_base #q3 v26 #o0))
           ((move_base #q3 v28 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q3 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v28 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q3 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v28 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v28 #o3 #o0))
           ((move_base v28 #q2 #o0))
           ((move_base v28 #q3 #o0))
           ((move_base v28 v24 #o0))
           ((move_base v28 v26 #o0))
           ((move_base v28 v28 #o0))
           ((move_base v28 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v28 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 v24 v25))
           ((place v4 v8 v19 v20 v24 v25))
           ((pick v4 v8 v19 v21 #q3 #t6))
           ((place v4 v8 v19 v21 #q3 #t6))
           ((pick v4 v8 v19 v22 v26 v27))
           ((place v4 v8 v19 v22 v26 v27))
           ((pick v4 v8 v19 v23 v28 v29))
           ((place v4 v8 v19 v23 v28 v29))
           ((pick v4 v8 v9 v21 #q2 #t4))
           ((place v4 v8 v9 v21 #q2 #t4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true for some object `?green`. In this problem, `v8` is an object of `type v17` (`type(v8, v17)`). If we can place `v8` on `v18`, the goal will be achieved.
           
           The initial state shows that `v8` is currently at `pose v9` and is supported by `v11` (`atpose(v8, v9)` and `supported(v8, v9, v11)`). There is also a possible pose `v19` for `v8` where it can be supported by `v18` (`pose(v8, v19)` and `supported(v8, v19, v18)`).
           
           The robot arm `v4` is `handempty` and `ataconf(v4, v5)`. The base is `atbconf(v3)`.
           
           To achieve the goal, we need to:
           1. Pick up `v8` from its current `pose v9`.
           2. Move the base to a configuration that allows placing `v8` at `pose v19` on `v18`.
           3. Place `v8` at `pose v19` on `v18`.
           
           Let's check the available actions:
           - `pick v4 v8 v9 v21 #q2 #t4`: This action picks `v8` from `pose v9` using `grasp v21` with arm `v4`, at base configuration `#q2` and arm trajectory `#t4`. This is a valid action as `kin(v4, v8, v9, v21, #q2, #t4)` is true, `atpose(v8, v9)` is true, `handempty(v4)` is true, and `atbconf(v3)` is true. However, to execute this, the robot needs to be at `atbconf(#q2)`. So a `move_base` action will be needed first.
           
           - `place v4 v8 v19 v22 v26 v27`: This action places `v8` at `pose v19` using `grasp v22` with arm `v4`, at base configuration `v26` and arm trajectory `v27`.
           - There are similar `place` actions for `v8` at `pose v19` with different grasps (`v20`, `v21`, `v23`) and corresponding base configurations (`v24`, `#q3`, `v28`). We need to choose one consistent with the pick action.
           
           Let's plan:
           1. Move the base from `v3` to `#q2` to align for picking `v8`.
           2. Pick `v8` from `pose v9` using `grasp v21` with arm `v4`. This will make `v8` held by `v4`.
           3. The `place` action that uses grasp `v21` and places `v8` at `v19` on `v18` is `place v4 v8 v19 v21 #q3 #t6`. This requires the base to be at `#q3`. So we need to move the base from `#q2` to `#q3`.
           4. Place `v8` at `pose v19` on `v18`.
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v8 v9 v21 #q2 #t4)
           (move_base #q2 #q3 #o0)
           (place v4 v8 v19 v21 #q3 #t6)

