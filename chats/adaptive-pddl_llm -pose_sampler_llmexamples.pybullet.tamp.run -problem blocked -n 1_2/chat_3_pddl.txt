User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v4, v5)
           Atom graspable(v8)
           Atom controllable(v4)
           Atom bconf(v3)
           Atom supported(v15, v16, v11)
           Atom stackable(v12, v18)
           Atom stackable(v8, v18)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom atpose(v15, v16)
           Atom arm(v6)
           Atom graspable(v12)
           Atom stackable(v8, v10)
           Atom arm(v4)
           Atom graspable(v15)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v10)
           Atom stackable(v15, v10)
           Atom atbconf(v3)
           Atom type(v8, v17)
           Atom atpose(v8, v9)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom canmove()
           Atom handempty(v4)
           Atom aconf(v6, v7)
           Atom type(v12, v17)
           Atom supported(v12, v13, v14)
           Atom ataconf(v4, v5)
           Atom atpose(v12, v13)
           Atom pose(v15, v16)
           Atom grasp(v8, #g0)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v18)
           Atom grasp(v15, #o1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v8, #p0, #g0, #q1, #t2)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(v3, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q0, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p0 #g0 #q1 #t2))
           ((place v4 v8 #p0 #g0 #q1 #t2))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, `v8`, `v12`, and `v15` which are graspable and stackable. `v4` and `v6` are arms, currently `v4` and `v6` are handempty. The robot is at base configuration `v3`.
           The goal `new-axiom@0()` implies the condition `on(?green, v18)` and `type(?green, v17)`. From the initial state, we know that `v8` and `v12` are of type `v17`. Also `v8` and `v12` are stackable on `v18`. So, to achieve the goal, we need to place either `v8` or `v12` on `v18`. Let's choose `v8`.
           
           Currently, `v8` is at `v9` and `v18` does not have an explicit pose but we have `supported(v8, #p0, v18)`. This means we can place `v8` at pose `#p0` on `v18`.
           
           The plan will involve moving the robot to a configuration where it can pick `v8`, picking `v8`, moving to a configuration where it can place `v8` on `v18`, and finally placing it.
           
           1. **Move to a suitable base configuration for picking `v8` from `v9`**: The pick action `(pick v4 v8 v9 #g0 #q0 #t0)` requires `atbconf(#q0)`. So, the robot needs to move from `v3` to `#q0`. This is done by `(move_base v3 #q0 #t1)`.
           
           2. **Pick `v8`**: After moving, the robot can pick `v8` from `v9` using `v4`. The action instance is `(pick v4 v8 v9 #g0 #q0 #t0)`.
           
           3. **Move to a suitable base configuration for placing `v8` on `v18`**: The place action `(place v4 v8 #p0 #g0 #q1 #t2)` requires `atbconf(#q1)`. So, the robot needs to move from `#q0` to `#q1`. There is a `basemotion(#q0, #o0, #q1)` action, which we can use with the `move_base` action.
           
           4. **Place `v8`**: After moving, the robot can place `v8` at `#p0` on `v18`. The action instance is `(place v4 v8 #p0 #g0 #q1 #t2)`.
           
           --Plan--:
           (move_base v3 #q0 #t1)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q1 #o0)
           (place v4 v8 #p0 #g0 #q1 #t2)

