User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v12, v16)
           Atom rock(v8)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom objective(v18)
           Atom type(v1, v2)
           Atom atconf(v12, v13)
           Atom rover(v12)
           Atom rock(v1)
           Atom rover(v14)
           Atom store(v16)
           Atom type(v7, v6)
           Atom supports(v10, v11)
           Atom onboard(v10, v12)
           Atom objective(v17)
           Atom onboard(v10, v14)
           Atom conf(v12, v13)
           Atom rock(v3)
           Atom rock(v5)
           Atom camera(v10)
           Atom type(v5, v6)
           Atom mode(v11)
           Atom objective(v19)
           Atom type(v8, v6)
           Atom atconf(v14, v15)
           Atom conf(v14, v15)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom free(v14, v16)
           Atom lander(v9)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q1, #y0, v18)
           Atom imagerange(v14, #q1, v18)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom imagevisible(v14, #q5, #y3, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom imagevisible(v14, #q4, #y2, v19)
           Atom imagerange(v14, #q4, v19)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v7)
           Atom comvisible(v14, #q3, #y1, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y1)
           Atom above(v14, #q2, v1)
           Atom conf(v14, #q2)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v4)
           Atom above(v14, #o5, v4)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q5, #t3, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #t1, #q3)
           Atom motion(v14, v15, #t0, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q2, #t5, v15)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q3, #t7, #q2)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #t2, #q3)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q3, #t6, #q0)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q0, #t4, v15)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o0, #o2, #o0)
           Atom motion(v12, #o0, #o2, v13)
           Atom motion(v12, v13, #o2, #o0)
           Atom motion(v12, #o0, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o0)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o0, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o0)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((sample_rock v14 #q2 v1 v16))
           ((move v12 #o0 #o2 #o0))
           ((move v12 #o0 #o2 #o3))
           ((move v12 #o0 #o2 #o5))
           ((move v12 #o0 #o2 v13))
           ((move v12 #o3 #o2 #o0))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o0))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 v13))
           ((move v12 v13 #o2 #o0))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 v13))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #t4 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #t5 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t6 #q0))
           ((move v14 #q3 #t7 #q2))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t2 #q3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t3 #q3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q1))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v14 #q1 #y0 v18 v10))
           ((calibrate v14 #q4 #y2 v19 v10))
           ((calibrate v14 #q5 #y3 v17 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v14 #q1 #y0 v18 v10 v11))
           ((take_image v14 #q4 #y2 v19 v10 v11))
           ((take_image v14 #q5 #y3 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #o0 #o1 v9 v1))
           ((send_analysis v12 #o0 #o1 v9 v3))
           ((send_analysis v12 #o0 #o1 v9 v4))
           ((send_analysis v12 #o0 #o1 v9 v5))
           ((send_analysis v12 #o0 #o1 v9 v7))
           ((send_analysis v12 #o0 #o1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y1 v9 v3))
           ((send_analysis v14 #q3 #y1 v9 v4))
           ((send_analysis v14 #q3 #y1 v9 v7))
           ((send_analysis v14 #q3 #y1 v9 v8))
           ((send_analysis v14 #q3 #y1 v9 v5))
           ((send_analysis v14 #q3 #y1 v9 v1))
           ((send_image v12 #o0 #o1 v9 v17 v11))
           ((send_image v12 #o0 #o1 v9 v18 v11))
           ((send_image v12 #o0 #o1 v9 v19 v11))
           ((send_image v14 #q3 #y1 v9 v18 v11))
           ((send_image v14 #q3 #y1 v9 v19 v11))
           ((send_image v14 #q3 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a lander (v9), a camera (v10), a store (v16), and several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19). The goal is to achieve `new-axiom@0()`, which is a complex goal implying several subgoals:
           1. `atconf(v12, v13)`: Rover v12 is at configuration v13. (Initially true)
           2. `atconf(v14, v15)`: Rover v14 is at configuration v15. (Initially true)
           3. `free(v12, v16)`: Store v16 on rover v12 is free. (Initially true)
           4. `free(v14, v16)`: Store v16 on rover v14 is free. (Initially true)
           5. `receivedimage(v17, v11)`: Image of objective v17 received with mode v11.
           6. `receivedimage(v18, v11)`: Image of objective v18 received with mode v11.
           7. `receivedimage(v19, v11)`: Image of objective v19 received with mode v11.
           8. `type(?stone, v2)`: A rock of type stone (v2) exists. (Implicitly true with v1, v3, v4 being type v2 rocks)
           9. `receivedanalysis(?stone)`: Analysis of a stone (type v2 rock) received.
           10. `type(?soil, v6)`: A rock of type soil (v6) exists. (Implicitly true with v5, v7, v8 being type v6 rocks)
           11. `receivedanalysis(?soil)`: Analysis of soil (type v6 rock) received.
           
           Let's break down the plan to achieve these subgoals:
           
           For `receivedimage` goals:
           - We need to `calibrate` the camera, then `take_image`, and then `send_image`.
           - Rover v12 can see objectives v17, v18, v19 from #o3 using camera v10 (onboard v12).
           - Rover v14 can see v18 from #q1, v17 from #q5, and v19 from #q4 using camera v10 (onboard v14).
           
           For `receivedanalysis` goals for both `stone` (type v2) and `soil` (type v6):
           - We need to `sample_rock` and then `send_analysis`.
           - Rover v12 can sample rocks v1, v3, v4 (type v2), v5, v7, v8 (type v6) at #o5.
           - Rover v14 can sample rocks v3, v4 (type v2), v5, v7, v8 (type v6) at #o5.
           - Rover v14 can sample rock v5 (type v6) at #q0.
           - Rover v14 can sample rock v1 (type v2) at #q2.
           
           The rovers are currently at `atconf(v12, v13)` and `atconf(v14, v15)`. Both have free stores. Camera v10 is on both rovers, and supports mode v11.
           
           Let's use rover v12 for imaging and analysis of one rock, and rover v14 for analysis of another rock and some imaging to cover all `receivedimage` goals.
           
           Rover v12:
           - Calibrate for an image (e.g., v17).
           - Take image of v17.
           - Send image of v17.
           - Sample a type v2 rock (e.g., v1).
           - Send analysis of v1.
           
           Rover v14:
           - Calibrate for an image (e.g., v18).
           - Take image of v18.
           - Send image of v18.
           - Calibrate for an image (e.g., v19).
           - Take image of v19.
           - Send image of v19.
           - Sample a type v6 rock (e.g., v5).
           - Send analysis of v5.
           
           This covers all `receivedimage` goals and `receivedanalysis` for both stone and soil. We will check the positions required for each action and move the rovers accordingly.
           
           For v12 to take images and sample:
           - It needs to be at #o3 for imaging and #o5 for sampling. It is currently at v13. We can move it to #o3 for imaging, then to #o5 for sampling. Or, since both #o3 and #o5 are reachable from v13, we can consider the optimal path. `imagevisible(v12, #o3, #o4, v17)` and `above(v12, #o5, v1)`. We need to move v12 to #o3 and #o5.
           For v14 to take images and sample:
           - It needs to be at #q1 for v18, #q5 for v17, #q4 for v19, #o5 for rocks, #q0 for v5, #q2 for v1.
           - To fulfill the remaining imaging goals (v18, v19) and analysis of a type v6 rock.
           - Let's use v14 to take images of v18 and v19, and sample v5.
           - It is currently at v15. We can move it to #q1, then to #q4, then to #q0.
           
           Plan:
           1. Rover v12 moves to #o3.
           2. Rover v12 calibrates its camera for v17.
           3. Rover v12 takes an image of v17.
           4. Rover v12 moves to #o0 (a position where it can communicate).
           5. Rover v12 sends the image of v17.
           6. Rover v12 moves to #o5 to sample a rock.
           7. Rover v12 samples rock v1 (type v2, stone).
           8. Rover v12 moves to #o0.
           9. Rover v12 sends the analysis of v1.
           
           10. Rover v14 moves to #q1.
           11. Rover v14 calibrates its camera for v18.
           12. Rover v14 takes an image of v18.
           13. Rover v14 moves to #q4.
           14. Rover v14 calibrates its camera for v19.
           15. Rover v14 takes an image of v19.
           16. Rover v14 moves to #q0.
           17. Rover v14 samples rock v5 (type v6, soil).
           18. Rover v14 moves to #q3 (a position where it can communicate).
           19. Rover v14 sends the image of v18.
           20. Rover v14 sends the image of v19.
           21. Rover v14 sends the analysis of v5.
           
           This plan achieves all the required `receivedimage` and `receivedanalysis` goals, and the initial `atconf` and `free` predicates are maintained or restored.
           
           --Plan--:
           (move v12 v13 #o2 #o3)
           (calibrate v12 #o3 #o4 v17 v10)
           (take_image v12 #o3 #o4 v17 v10 v11)
           (move v12 #o3 #o2 #o0)
           (send_image v12 #o0 #o1 v9 v17 v11)
           (move v12 #o0 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (move v12 #o5 #o2 #o0)
           (send_analysis v12 #o0 #o1 v9 v1)
           (move v14 v15 #t0 #q1)
           (calibrate v14 #q1 #y0 v18 v10)
           (take_image v14 #q1 #y0 v18 v10 v11)
           (move v14 #q1 #o2 #q4)
           (calibrate v14 #q4 #y2 v19 v10)
           (take_image v14 #q4 #y2 v19 v10 v11)
           (move v14 #q4 #o2 #q0)
           (sample_rock v14 #q0 v5 v16)
           (move v14 #q0 #o2 #q3)
           (send_image v14 #q3 #y1 v9 v18 v11)
           (send_image v14 #q3 #y1 v9 v19 v11)
           (send_analysis v14 #q3 #y1 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. This axiom represents a conjunction of several conditions, and my plan did not explicitly check if all of them were met. Let's re-evaluate the goal and ensure all conditions are covered.
           
           The goal `new-axiom@0()` requires:
           1. `atconf(v12, v13)`: Rover v12 at configuration v13. (Initially true, needs to be true at the end)
           2. `atconf(v14, v15)`: Rover v14 at configuration v15. (Initially true, needs to be true at the end)
           3. `free(v12, v16)`: Store v16 on rover v12 is free. (Initially true, needs to be true at the end)
           4. `free(v14, v16)`: Store v16 on rover v14 is free. (Initially true, needs to be true at the end)
           5. `receivedimage(v17, v11)`: Image of objective v17 received with mode v11.
           6. `receivedimage(v18, v11)`: Image of objective v18 received with mode v11.
           7. `receivedimage(v19, v11)`: Image of objective v19 received with mode v11.
           8. `type(?stone, v2)`: A rock of type stone (v2) exists. (Satisfied by v1, v3, v4)
           9. `receivedanalysis(?stone)`: Analysis of a stone (type v2 rock) received.
           10. `type(?soil, v6)`: A rock of type soil (v6) exists. (Satisfied by v5, v7, v8)
           11. `receivedanalysis(?soil)`: Analysis of soil (type v6 rock) received.
           
           My previous plan did satisfy 5, 6, 7, 9, 11. The issues likely arise from not returning the rovers to their initial configurations (v13 and v15) or leaving their stores full. The stores become `full` after `sample_rock` and then need to be `drop_rock` to become `free` again.
           
           Let's refine the plan with these considerations:
           
           Rover v12:
           - Needs to take an image of v17 (or v18 or v19).
           - Needs to sample a type v2 rock (e.g., v1).
           - Needs to send both image and analysis.
           - Needs to ensure its store is free and ends at v13.
           
           Rover v14:
           - Needs to take images of the remaining objectives (e.g., v18 and v19).
           - Needs to sample a type v6 rock (e.g., v5).
           - Needs to send both images and analysis.
           - Needs to ensure its store is free and ends at v15.
           
           Revised Plan Strategy:
           
           **Rover v12 Actions:**
           1. Move to #o3 (for imaging v17, v18, v19).
           2. Calibrate camera.
           3. Take image of v17.
           4. Move to #o5 (for sampling rocks).
           5. Sample rock v1 (type v2 - stone). Store v16 on v12 becomes full.
           6. Drop rock from v12's store (v16 becomes free again).
           7. Move to #o0 (for communication).
           8. Send analysis of v1.
           9. Send image of v17.
           10. Move back to v13.
           
           **Rover v14 Actions:**
           1. Move to #q1 (for imaging v18).
           2. Calibrate camera.
           3. Take image of v18.
           4. Move to #q4 (for imaging v19).
           5. Calibrate camera.
           6. Take image of v19.
           7. Move to #q0 (for sampling rock v5).
           8. Sample rock v5 (type v6 - soil). Store v16 on v14 becomes full.
           9. Drop rock from v14's store (v16 becomes free again).
           10. Move to #q3 (for communication).
           11. Send analysis of v5.
           12. Send image of v18.
           13. Send image of v19.
           14. Move back to v15.
           
           This revised plan addresses the `free` store and `atconf` requirements at the end of the plan.
           
           --Plan--:
           (move v12 v13 #o2 #o3)
           (calibrate v12 #o3 #o4 v17 v10)
           (take_image v12 #o3 #o4 v17 v10 v11)
           (move v12 #o3 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #o0)
           (send_analysis v12 #o0 #o1 v9 v1)
           (send_image v12 #o0 #o1 v9 v17 v11)
           (move v12 #o0 #o2 v13)
           (move v14 v15 #t0 #q1)
           (calibrate v14 #q1 #y0 v18 v10)
           (take_image v14 #q1 #y0 v18 v10 v11)
           (move v14 #q1 #o2 #q4)
           (calibrate v14 #q4 #y2 v19 v10)
           (take_image v14 #q4 #y2 v19 v10 v11)
           (move v14 #q4 #o2 #q0)
           (sample_rock v14 #q0 v5 v16)
           (drop_rock v14 v16)
           (move v14 #q0 #o2 #q3)
           (send_analysis v14 #q3 #y1 v9 v5)
           (send_image v14 #q3 #y1 v9 v18 v11)
           (send_image v14 #q3 #y1 v9 v19 v11)
           (move v14 #q3 #o2 v15)

