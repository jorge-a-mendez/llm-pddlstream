User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supports(v10, v11)
           Atom type(v8, v6)
           Atom type(v1, v2)
           Atom type(v4, v2)
           Atom rock(v3)
           Atom objective(v18)
           Atom type(v3, v2)
           Atom store(v16)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom free(v12, v16)
           Atom camera(v10)
           Atom free(v14, v16)
           Atom rock(v4)
           Atom mode(v11)
           Atom conf(v12, v13)
           Atom onboard(v10, v12)
           Atom objective(v17)
           Atom objective(v19)
           Atom rock(v1)
           Atom onboard(v10, v14)
           Atom rover(v12)
           Atom rock(v5)
           Atom lander(v9)
           Atom atconf(v14, v15)
           Atom type(v5, v6)
           Atom rover(v14)
           Atom rock(v7)
           Atom atconf(v12, v13)
           Atom imagevisible(v14, #q5, #y3, v18)
           Atom imagerange(v14, #q5, v18)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #q7, v7)
           Atom conf(v14, #q7)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v8)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #q10, v3)
           Atom conf(v12, #q10)
           Atom imagevisible(v12, #q11, #y7, v18)
           Atom imagerange(v12, #q11, v18)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v12, #q8, #y5, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y5)
           Atom imagevisible(v14, #q0, #y0, v19)
           Atom imagerange(v14, #q0, v19)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q9, #y6, v17)
           Atom imagerange(v12, #q9, v17)
           Atom conf(v12, #q9)
           Atom ray(#y6)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom motion(v14, v15, #t12, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q7, #t10, #q2)
           Atom motion(v14, #q2, #t9, v15)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, v15, #t0, #q0)
           Atom motion(v14, #q0, #t2, #q2)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q2, #t4, #q0)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #t11, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #t1, #q1)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q9, #t14, #q3)
           Atom motion(v12, #q3, #t16, #q10)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q3, #t8, #q4)
           Atom motion(v12, #q4, #t6, #q3)
           Atom motion(v12, #q8, #t13, #q3)
           Atom motion(v12, #q3, #t3, v13)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q1, #t5, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q10, #t15, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q3, #t7, #q1)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q7 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t5 #q3))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t15 #q3))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #t16 #q10))
           ((move v12 #q3 #t3 v13))
           ((move v12 #q3 #t7 #q1))
           ((move v12 #q3 #t8 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t6 #q3))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t13 #q3))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t14 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q1))
           ((move v12 v13 #t11 #q8))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t2 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #t4 #q0))
           ((move v14 #q2 #t9 v15))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t10 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((move v14 v15 #t12 #q7))
           ((calibrate v12 #q11 #y7 v18 v10))
           ((calibrate v12 #q8 #y5 v19 v10))
           ((calibrate v12 #q9 #y6 v17 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q5 #y3 v18 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #q11 #y7 v18 v10 v11))
           ((take_image v12 #q8 #y5 v19 v10 v11))
           ((take_image v12 #q9 #y6 v17 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q5 #y3 v18 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v19 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Plan for Axiom Achievement**
           
           Okay, here's my line of thinking: the goal is to satisfy `Atom new-axiom@0()`, which boils down to several predicates that need to be true. Initially, I noticed that `receivedimage` and `receivedanalysis` predicates need to be met. I broke down how to address them.
           
           I identified the required actions: `send_image` and `send_analysis`. These have a set of preconditions that need to be true before they can execute. These preconditions involved concepts like `comvisible`, `haveimage`, and `analyzed`. To fulfill those requirements, I needed the actions `take_image`, `calibrate`, and `sample_rock`.
           
           *   **`receivedimage` goal.** I assessed which rovers could take the images: I chose the rovers available, `v12` and `v14`, and I had them move to the designated locations, calibrate their cameras (`v10`), and snap pictures. After taking the pictures, they needed to move to a communication position (`#q2`) and "send" the image to the lander (`v9`). The problem was that the `new-axiom` goal insists on the rovers being back in their starting positions. I needed to add moves back to the starting locations to the plan for both rovers.
           *   **`receivedanalysis` goal.** For the analysis, I needed to have the rovers sample rocks. Since rocks could be stone (`v2`) and soil (`v6`), I realized that I had to include sampling and analysis of the stone *and* the soil to meet the requirements of the goal. Rover `v12` was selected to perform the tasks. After sampling a rock, the analysis needs to be sent to the lander. I noticed that the `sample_rock` action made the store full, so I had to make sure the store was emptied after sending the first analysis, before sampling the second rock!
           
           I now need to combine the two plans and sequence it. I noticed that the rovers' actions are largely independent of each other (with the communication being the only dependency), so I combined them in a way that minimizes travel. Now, the plans make sure that the rovers are free in the initial config after sending everything, which satisfies the final conditions of `new-axiom()`.
           
           Here is the final planned sequence:
           
           ```
           Rover v14 (Images):
           (move v14 v15 #o2 #q6)
           (calibrate v14 #q6 #y4 v17 v10)
           (take_image v14 #q6 #y4 v17 v10 v11)
           (move v14 #q6 #o2 #q2)
           (send_image v14 #q2 #y1 v9 v17 v11)
           (move v14 #q2 #o2 #q5)
           (calibrate v14 #q5 #y3 v18 v10)
           (take_image v14 #q5 #y3 v18 v10 v11)
           (move v14 #q5 #o2 #q2)
           (send_image v14 #q2 #y1 v9 v18 v11)
           (move v14 #q2 #t4 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #t2 #q2)
           (send_image v14 #q2 #y1 v9 v19 v11)
           (move v14 #q2 #t9 v15)
           
           Rover v12 (Analyses):
           (move v12 v13 #t1 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t5 #q3)
           (send_analysis v12 #q3 #y2 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q3 #o2 #o5)
           (sample_rock v12 #o5 v7 v16)
           (move v12 #o5 #o2 #q3)
           (send_analysis v12 #q3 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q3 #t3 v13)
           ```
           
)

Model:     **The Plan for Axiom Achievement**
           
           Okay, here's my line of thinking: the goal is to satisfy `Atom new-axiom@0()`, which boils down to several predicates that need to be true. Initially, I noticed that `receivedimage` and `receivedanalysis` predicates need to be met. I broke down how to address them.
           
           I identified the required actions: `send_image` and `send_analysis`. These have a set of preconditions that need to be true before they can execute. These preconditions involved concepts like `comvisible`, `haveimage`, and `analyzed`. To fulfill those requirements, I needed the actions `take_image`, `calibrate`, and `sample_rock`.
           
           *   **`receivedimage` goal.** I assessed which rovers could take the images: I chose the rovers available, `v12` and `v14`, and I had them move to the designated locations, calibrate their cameras (`v10`), and snap pictures. After taking the pictures, they needed to move to a communication position (`#q2`) and "send" the image to the lander (`v9`). The problem was that the `new-axiom` goal insists on the rovers being back in their starting positions. I needed to add moves back to the starting locations to the plan for both rovers.
           *   **`receivedanalysis` goal.** For the analysis, I needed to have the rovers sample rocks. Since rocks could be stone (`v2`) and soil (`v6`), I realized that I had to include sampling and analysis of the stone *and* the soil to meet the requirements of the goal. Rover `v12` was selected to perform the tasks. After sampling a rock, the analysis needs to be sent to the lander. I noticed that the `sample_rock` action made the store full, so I had to make sure the store was emptied after sending the first analysis, before sampling the second rock!
           
           I now need to combine the two plans and sequence it. I noticed that the rovers' actions are largely independent of each other (with the communication being the only dependency), so I combined them in a way that minimizes travel. Now, the plans make sure that the rovers are free in the initial config after sending everything, which satisfies the final conditions of `new-axiom()`.
           
           Here is the final planned sequence:
           
           ```
           Rover v14 (Images):
           (move v14 v15 #o2 #q6)
           (calibrate v14 #q6 #y4 v17 v10)
           (take_image v14 #q6 #y4 v17 v10 v11)
           (move v14 #q6 #o2 #q2)
           (send_image v14 #q2 #y1 v9 v17 v11)
           (move v14 #q2 #o2 #q5)
           (calibrate v14 #q5 #y3 v18 v10)
           (take_image v14 #q5 #y3 v18 v10 v11)
           (move v14 #q5 #o2 #q2)
           (send_image v14 #q2 #y1 v9 v18 v11)
           (move v14 #q2 #t4 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #t2 #q2)
           (send_image v14 #q2 #y1 v9 v19 v11)
           (move v14 #q2 #t9 v15)
           
           Rover v12 (Analyses):
           (move v12 v13 #t1 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t5 #q3)
           (send_analysis v12 #q3 #y2 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q3 #o2 #o5)
           (sample_rock v12 #o5 v7 v16)
           (move v12 #o5 #o2 #q3)
           (send_analysis v12 #q3 #y2 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q3 #t3 v13)
           ```
           

