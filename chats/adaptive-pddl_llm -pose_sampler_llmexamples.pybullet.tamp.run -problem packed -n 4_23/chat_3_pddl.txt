User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #p3: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v14)
           Atom supported(v12, v13, v11)
           Atom pose(v14, v15)
           Atom stackable(v8, v18)
           Atom stackable(v16, v18)
           Atom atpose(v14, v15)
           Atom ataconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom pose(v8, v9)
           Atom stackable(v12, v18)
           Atom arm(v4)
           Atom graspable(v16)
           Atom stackable(v14, v10)
           Atom bconf(v3)
           Atom graspable(v8)
           Atom atpose(v12, v13)
           Atom atpose(v8, v9)
           Atom handempty(v4)
           Atom handempty(v6)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v10)
           Atom supported(v14, v15, v11)
           Atom arm(v6)
           Atom stackable(v8, v10)
           Atom controllable(v4)
           Atom pose(v16, v17)
           Atom aconf(v6, v7)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom aconf(v4, v5)
           Atom atbconf(v3)
           Atom canmove()
           Atom stackable(v14, v18)
           Atom atpose(v16, v17)
           Atom grasp(v16, #g1)
           Atom pose(v14, #p1)
           Atom supported(v14, #p1, v18)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v16, #p3)
           Atom supported(v16, #p3, v18)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #g0)
           Atom pose(v8, #p2)
           Atom supported(v8, #p2, v18)
           Atom grasp(v12, #g2)
           Atom grasp(v8, #g3)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v16, v17, #g1, #q2, #t2)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v16, #p3, #g1, #q4, #t4)
           Atom bconf(#q6)
           Atom atraj(#t6)
           Atom kin(v4, v12, v13, #g2, #q6, #t6)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, #p1, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, v15, #g0, #q0, #t0)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v12, #p0, #g2, #q3, #t3)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v8, v9, #g3, #q5, #t5)
           Atom bconf(#q7)
           Atom atraj(#t14)
           Atom kin(v4, v8, #p2, #g3, #q7, #t14)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q5)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q6, #o0, v3)
           Atom btraj(#t13)
           Atom basemotion(v3, #t13, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q2)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q3, #o0, #q0)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q6, #o0, #q1)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, #q6)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, #q6)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v16, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g3, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q3 #t10))
           ((move_base v3 #q4 #t11))
           ((move_base v3 #q5 #t12))
           ((move_base v3 #q6 #t13))
           ((move_base v3 #q0 #t7))
           ((move_base v3 #q1 #t8))
           ((move_base v3 #q2 #t9))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 #p0 #g2 #q3 #t3))
           ((place v4 v12 #p0 #g2 #q3 #t3))
           ((pick v4 v12 v13 #g2 #q6 #t6))
           ((place v4 v12 v13 #g2 #q6 #t6))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 #p1 #g0 #q1 #t1))
           ((place v4 v14 #p1 #g0 #q1 #t1))
           ((pick v4 v14 v15 #g0 #q0 #t0))
           ((place v4 v14 v15 #g0 #q0 #t0))
           ((pick v4 v16 #o2 #g1 #o3 #o4))
           ((place v4 v16 #o2 #g1 #o3 #o4))
           ((pick v4 v16 #p3 #g1 #q4 #t4))
           ((place v4 v16 #p3 #g1 #q4 #t4))
           ((pick v4 v16 v17 #g1 #q2 #t2))
           ((place v4 v16 v17 #g1 #q2 #t2))
           ((pick v4 v8 #o2 #g3 #o3 #o4))
           ((place v4 v8 #o2 #g3 #o3 #o4))
           ((pick v4 v8 #p2 #g3 #q7 #t14))
           ((place v4 v8 #p2 #g3 #q7 #t14))
           ((pick v4 v8 v9 #g3 #q5 #t5))
           ((place v4 v8 v9 #g3 #q5 #t5))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains four objects: v8, v12, v14, and v16, all of which are stackable on either v10 or v18. The goal is to place all four objects (v8, v12, v14, and v16) on v18. Currently, all four objects are on v11, at specific poses. The robot has two arms (v4 and v6), but only v4 is controllable in this problem. Both arms are initially empty. The robot's base is at configuration v3.
           
           To achieve the goal, the robot needs to pick up each object and place it on v18. Since all objects are currently on v11, they need to be moved to v18. The poses for placing objects on v18 are defined by variables like `#p2`, `#p0`, `#p1`, and `#p3`.
           
           The plan will involve the following steps for each object:
           1. Move the robot's base to a configuration that allows picking up the object.
           2. Pick up the object.
           3. Move the robot's base to a configuration that allows placing the object on v18.
           4. Place the object on v18.
           
           This sequence needs to be repeated for all four objects (v8, v12, v14, v16).
           
           Let's break down the plan for each object:
           
           *   **For v8:**
               *   Currently at `v9` on `v11`. Need to place it at `#p2` on `v18`.
               *   Pick action for `v8` from `v9` is `(pick v4 v8 v9 #g3 #q5 #t5)`. This requires the robot to be at `atbconf(#q5)`.
               *   Place action for `v8` to `#p2` is `(place v4 v8 #p2 #g3 #q7 #t14)`. This requires the robot to be at `atbconf(#q7)`.
           
           *   **For v12:**
               *   Currently at `v13` on `v11`. Need to place it at `#p0` on `v18`.
               *   Pick action for `v12` from `v13` is `(pick v4 v12 v13 #g2 #q6 #t6)`. This requires the robot to be at `atbconf(#q6)`.
               *   Place action for `v12` to `#p0` is `(place v4 v12 #p0 #g2 #q3 #t3)`. This requires the robot to be at `atbconf(#q3)`.
           
           *   **For v14:**
               *   Currently at `v15` on `v11`. Need to place it at `#p1` on `v18`.
               *   Pick action for `v14` from `v15` is `(pick v4 v14 v15 #g0 #q0 #t0)`. This requires the robot to be at `atbconf(#q0)`.
               *   Place action for `v14` to `#p1` is `(place v4 v14 #p1 #g0 #q1 #t1)`. This requires the robot to be at `atbconf(#q1)`.
           
           *   **For v16:**
               *   Currently at `v17` on `v11`. Need to place it at `#p3` on `v18`.
               *   Pick action for `v16` from `v17` is `(pick v4 v16 v17 #g1 #q2 #t2)`. This requires the robot to be at `atbconf(#q2)`.
               *   Place action for `v16` to `#p3` is `(place v4 v16 #p3 #g1 #q4 #t4)`. This requires the robot to be at `atbconf(#q4)`.
           
           The robot starts at `atbconf(v3)`. It can move between any `q` and `v3` using the provided `basemotion` and `btraj` facts.
           
           --Plan--:
           (move_base v3 #q5 #t12)
           (pick v4 v8 v9 #g3 #q5 #t5)
           (move_base #q5 #q7 #o0)
           (place v4 v8 #p2 #g3 #q7 #t14)
           (move_base #q7 #q6 #o0)
           (pick v4 v12 v13 #g2 #q6 #t6)
           (move_base #q6 #q3 #o0)
           (place v4 v12 #p0 #g2 #q3 #t3)
           (move_base #q3 #q0 #o0)
           (pick v4 v14 v15 #g0 #q0 #t0)
           (move_base #q0 #q1 #o0)
           (place v4 v14 #p1 #g0 #q1 #t1)
           (move_base #q1 #q2 #o0)
           (pick v4 v16 v17 #g1 #q2 #t2)
           (move_base #q2 #q4 #o0)
           (place v4 v16 #p3 #g1 #q4 #t4)

