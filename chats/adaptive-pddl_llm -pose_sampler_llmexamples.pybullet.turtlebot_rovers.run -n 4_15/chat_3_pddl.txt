User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom camera(v10)
           Atom rock(v8)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom objective(v20)
           Atom rock(v7)
           Atom store(v16)
           Atom objective(v18)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom rock(v5)
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom objective(v17)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom type(v7, v6)
           Atom supports(v10, v11)
           Atom objective(v19)
           Atom type(v4, v2)
           Atom lander(v9)
           Atom conf(v12, v13)
           Atom onboard(v10, v12)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom conf(v14, v15)
           Atom type(v1, v2)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v12, #q4, #y3, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q3, #y2, v20)
           Atom imagerange(v12, #q3, v20)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v12, #q0, #y0, v17)
           Atom imagerange(v12, #q0, v17)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q12, v1)
           Atom conf(v12, #q12)
           Atom imagevisible(v12, #q8, #y4, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y4)
           Atom above(v12, #q14, v5)
           Atom conf(v12, #q14)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v3)
           Atom above(v14, #q7, v1)
           Atom conf(v14, #q7)
           Atom above(v14, #q2, v3)
           Atom conf(v14, #q2)
           Atom imagevisible(v14, #q15, #y7, v19)
           Atom imagerange(v14, #q15, v19)
           Atom conf(v14, #q15)
           Atom ray(#y7)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom imagevisible(v14, #q13, #y6, v20)
           Atom imagerange(v14, #q13, v20)
           Atom conf(v14, #q13)
           Atom ray(#y6)
           Atom above(v14, #q9, v4)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #q17, #y9, v17)
           Atom imagerange(v14, #q17, v17)
           Atom conf(v14, #q17)
           Atom ray(#y9)
           Atom imagevisible(v14, #q16, #y8, v18)
           Atom imagerange(v14, #q16, v18)
           Atom conf(v14, #q16)
           Atom ray(#y8)
           Atom imagevisible(v12, #q11, #y5, v18)
           Atom imagerange(v12, #q11, v18)
           Atom conf(v12, #q11)
           Atom ray(#y5)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q10, v8)
           Atom conf(v14, #q10)
           Atom above(v14, #q6, v7)
           Atom conf(v14, #q6)
           Atom above(v12, #o5, v7)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #t7, v13)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, v13, #t10, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, v13, #t11, #q11)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q6, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q6)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, v13, #t12, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #t19, #q4)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q4, #t14, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q0, #t1, #q4)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, v13, #t8, #q0)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q14, #t20, #q4)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v14, v15, #t13, #q13)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q16)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q16, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q1, #t6, v15)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q16, #t17, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q13, #t15, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q16)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q16, #o2, #q5)
           Atom motion(v14, #q5, #t5, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #t9, #q3)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #t2, #q4)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q15, #t16, #q1)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q15)
           Atom motion(v14, #q5, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q17)
           Atom motion(v14, #q17, #t18, #q1)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q6, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q10, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, #q17, #o2, #q5)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q17)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q6)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q1, #t0, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q2, #t4, #q1)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v14, v15, #t3, #q2)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q16)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q17)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q17, #o2, #q2)
           Atom motion(v14, #q16, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v12 #q14 v5 v16))
           ((sample_rock v14 #q10 v8 v16))
           ((sample_rock v14 #q2 v3 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((sample_rock v14 #q6 v7 v16))
           ((sample_rock v14 #q7 v1 v16))
           ((sample_rock v14 #q9 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q4))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t19 #q4))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t20 #q4))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t2 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #t14 #q12))
           ((move v12 #q4 #t7 v13))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q8))
           ((move v12 v13 #t11 #q11))
           ((move v12 v13 #t12 #q12))
           ((move v12 v13 #t8 #q0))
           ((move v12 v13 #t9 #q3))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q17))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t0 #q2))
           ((move v14 #q1 #t6 v15))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q16))
           ((move v14 #q10 #o2 #q17))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t15 #q1))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q5))
           ((move v14 #q15 #o2 #q6))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t16 #q1))
           ((move v14 #q16 #o2 #q10))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q2))
           ((move v14 #q16 #o2 #q5))
           ((move v14 #q16 #o2 #q6))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t17 #q1))
           ((move v14 #q17 #o2 #q10))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q2))
           ((move v14 #q17 #o2 #q5))
           ((move v14 #q17 #o2 #q6))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t18 #q1))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q16))
           ((move v14 #q2 #o2 #q17))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t4 #q1))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q16))
           ((move v14 #q5 #o2 #q17))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t5 #q1))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q15))
           ((move v14 #q6 #o2 #q16))
           ((move v14 #q6 #o2 #q17))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t13 #q13))
           ((move v14 v15 #t3 #q2))
           ((calibrate v12 #q0 #y0 v17 v10))
           ((calibrate v12 #q11 #y5 v18 v10))
           ((calibrate v12 #q3 #y2 v20 v10))
           ((calibrate v12 #q8 #y4 v19 v10))
           ((calibrate v14 #q13 #y6 v20 v10))
           ((calibrate v14 #q15 #y7 v19 v10))
           ((calibrate v14 #q16 #y8 v18 v10))
           ((calibrate v14 #q17 #y9 v17 v10))
           ((take_image v12 #q0 #y0 v17 v10 v11))
           ((take_image v12 #q11 #y5 v18 v10 v11))
           ((take_image v12 #q3 #y2 v20 v10 v11))
           ((take_image v12 #q8 #y4 v19 v10 v11))
           ((take_image v14 #q13 #y6 v20 v10 v11))
           ((take_image v14 #q15 #y7 v19 v10 v11))
           ((take_image v14 #q16 #y8 v18 v10 v11))
           ((take_image v14 #q17 #y9 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y3 v9 v3))
           ((send_analysis v12 #q4 #y3 v9 v4))
           ((send_analysis v12 #q4 #y3 v9 v7))
           ((send_analysis v12 #q4 #y3 v9 v8))
           ((send_analysis v12 #q4 #y3 v9 v1))
           ((send_analysis v12 #q4 #y3 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_image v12 #q4 #y3 v9 v17 v11))
           ((send_image v12 #q4 #y3 v9 v18 v11))
           ((send_image v12 #q4 #y3 v9 v20 v11))
           ((send_image v12 #q4 #y3 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` represents a complex state that requires several conditions to be met, including:
           1. Both rovers (v12 and v14) must be at their initial configurations (v13 and v15, respectively). These are currently satisfied.
           2. Both rovers must have their storage `v16` free. This is currently satisfied.
           3. Images of objectives v17, v18, v19, and v20 must be received by the lander in mode v11.
           4. Rocks of type `v2` (v1, v3, v4) and type `v6` (v5, v7, v8) must have their analyses received.
           
           Let's break down the plan to achieve these conditions:
           
           **Image Collection and Transmission:**
           *   For objectives v17, v18, v19, and v20, we need to:
               *   Calibrate a camera (v10) for each objective.
               *   Take an image of each objective using the calibrated camera.
               *   Send each image to the lander (v9) in mode (v11).
           *   Rover v12 has visibility to all four objectives (v17, v18, v19, v20) at different configurations (#q0, #q11, #q3, #q8) and a communication link at #q4.
           *   Rover v14 also has visibility to all four objectives (v17, v18, v19, v20) at different configurations (#q17, #q16, #q15, #q13) and a communication link at #q1.
           *   We can use one rover for all image tasks or split them. Since v12 is already at v13 and has a path to #q0, #q11, #q3, #q8 and then to #q4 for communication, it seems efficient to use v12 for all image tasks.
           
           **Rock Analysis and Transmission:**
           *   For rocks v1, v3, v4 (type v2) and v5, v7, v8 (type v6), we need to:
               *   Sample each rock.
               *   Send the analysis of each rock to the lander (v9).
           *   Both rovers have sampling capabilities and communication links. Rover v12 can sample v1, v3, v4, v5, v7, v8 at #q12, #o5, #o5, #q14, #o5, #o5 respectively and communicate at #q4. Rover v14 can sample v1, v3, v4, v5, v7, v8 at #q7, #q2, #q9, #q5, #q6, #q10 respectively and communicate at #q1.
           *   We can prioritize sampling with rover v12 since it's already used for images. However, v12 has limited storage (only one `store` `v16` is available per rover), so it can only sample one rock at a time, then send the analysis, and then drop the rock before sampling another one. This would make the plan very long and inefficient.
           *   It's more efficient to use both rovers for sampling and analysis. Rover v12 can sample v3 (type v2) and v5 (type v6) because it's already near those points for image tasks. Rover v14 can sample v1, v4 (type v2) and v7, v8 (type v6).
           
           Let's plan to achieve all image requirements first with v12, then sample rocks with both rovers. Both rovers must finish at their initial configurations, which is implicitly handled by not moving them away from their final communication position.
           
           **Plan for images (using v12):**
           1. Calibrate camera for v17 at #q0.
           2. Take image of v17 at #q0.
           3. Calibrate camera for v18 at #q11.
           4. Take image of v18 at #q11.
           5. Calibrate camera for v19 at #q8.
           6. Take image of v19 at #q8.
           7. Calibrate camera for v20 at #q3.
           8. Take image of v20 at #q3.
           9. Move v12 to #q4 to send images.
           10. Send image of v17, v18, v19, v20.
           
           **Plan for analysis (using v12 and v14):**
           For v12:
           1. Sample v3 at #o5.
           2. Send analysis of v3 from #q4.
           3. Drop v3 from storage.
           4. Sample v5 at #q14.
           5. Send analysis of v5 from #q4.
           6. Drop v5 from storage.
           
           For v14:
           1. Move v14 to #q2 for v3 (no, v3 is for v12). Let's pick different rocks for v14 that are nearby.
           2. Sample v1 at #q7.
           3. Move v14 to #q1 to send analysis.
           4. Send analysis of v1.
           5. Drop v1.
           6. Sample v4 at #q9.
           7. Move v14 to #q1 to send analysis.
           8. Send analysis of v4.
           9. Drop v4.
           10. Sample v7 at #q6.
           11. Move v14 to #q1 to send analysis.
           12. Send analysis of v7.
           13. Drop v7.
           14. Sample v8 at #q10.
           15. Move v14 to #q1 to send analysis.
           16. Send analysis of v8.
           17. Drop v8.
           
           This approach will satisfy all conditions for the new-axiom@0.
           
           --Plan--:
           (calibrate v12 #q0 #y0 v17 v10)
           (take_image v12 #q0 #y0 v17 v10 v11)
           (move v12 #q0 #o2 #q11)
           (calibrate v12 #q11 #y5 v18 v10)
           (take_image v12 #q11 #y5 v18 v10 v11)
           (move v12 #q11 #o2 #q8)
           (calibrate v12 #q8 #y4 v19 v10)
           (take_image v12 #q8 #y4 v19 v10 v11)
           (move v12 #q8 #o2 #q3)
           (calibrate v12 #q3 #y2 v20 v10)
           (take_image v12 #q3 #y2 v20 v10 v11)
           (move v12 #q3 #t2 #q4)
           (send_image v12 #q4 #y3 v9 v17 v11)
           (send_image v12 #q4 #y3 v9 v18 v11)
           (send_image v12 #q4 #y3 v9 v19 v11)
           (send_image v12 #q4 #y3 v9 v20 v11)
           (sample_rock v12 #o5 v3 v16)
           (send_analysis v12 #q4 #y3 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q4 #o2 #q14)
           (sample_rock v12 #q14 v5 v16)
           (move v12 #q14 #t20 #q4)
           (send_analysis v12 #q4 #y3 v9 v5)
           (drop_rock v12 v16)
           (sample_rock v14 #q7 v1 v16)
           (move v14 #q7 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q9)
           (sample_rock v14 #q9 v4 v16)
           (move v14 #q9 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q6)
           (sample_rock v14 #q6 v7 v16)
           (move v14 #q6 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q10)
           (sample_rock v14 #q10 v8 v16)
           (move v14 #q10 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v8)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q0) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `atconf(v12, #q0)` was not satisfied before the `calibrate` action. Rover v12 starts at `v13`. I need to ensure that the rover moves to the correct configuration before attempting to perform actions at that configuration.
           
           Let's re-evaluate the plan, ensuring each `move` action properly sets the `atconf` predicate before subsequent actions.
           
           The goal `new-axiom@0()` requires:
           1.  `atconf(v12, v13)`
           2.  `atconf(v14, v15)`
           3.  `free(v12, v16)`
           4.  `free(v14, v16)`
           5.  `receivedimage(v17, v11)`
           6.  `receivedimage(v18, v11)`
           7.  `receivedimage(v19, v11)`
           8.  `receivedimage(v20, v11)`
           9.  `receivedanalysis(v1)` (type v2)
           10. `receivedanalysis(v3)` (type v2)
           11. `receivedanalysis(v4)` (type v2)
           12. `receivedanalysis(v5)` (type v6)
           13. `receivedanalysis(v7)` (type v6)
           14. `receivedanalysis(v8)` (type v6)
           
           Current State:
           *   `atconf(v12, v13)` and `atconf(v14, v15)` are true.
           *   `free(v12, v16)` and `free(v14, v16)` are true.
           *   Camera `v10` is onboard both `v12` and `v14` and supports mode `v11`.
           
           **Revised Plan Strategy:**
           
           **Rover v12 (Initial: v13):**
           *   Handle all image tasks (v17, v18, v19, v20).
           *   Handle analysis for rocks v3 and v5.
           *   Ensure v12 returns to `v13` at the end (or is at `v13` implicitly if its last action is also its starting point for `atconf(v12,v13)`). The goal simply requires `atconf(v12,v13)` to be true, not for it to be the final location of any path. Any move action will fulfill the atconf requirement as long as it reaches v13, but the axiom requires it to simply be true at the end. Since it starts at v13, and the available moves don't necessarily return it there after some path, we should check which motion options exist. For simplicity, we can just ensure it is at v13 or perform a final move if necessary. For now, we will focus on the necessary moves to accomplish other tasks.
           
           **Rover v14 (Initial: v15):**
           *   Handle analysis for rocks v1, v4, v7, v8.
           *   Ensure v14 returns to `v15` at the end (similar to v12).
           
           **Detailed Plan:**
           
           **Rover v12 Actions:**
           1.  Move to #q0 for v17.
           2.  Calibrate for v17.
           3.  Take image of v17.
           4.  Move to #q11 for v18.
           5.  Calibrate for v18.
           6.  Take image of v18.
           7.  Move to #q8 for v19.
           8.  Calibrate for v19.
           9.  Take image of v19.
           10. Move to #q3 for v20.
           11. Calibrate for v20.
           12. Take image of v20.
           13. Move to #q4 to transmit images and analyses.
           14. Send all images.
           15. Sample rock v3 at #o5 (assuming v12 can move from #q4 to #o5).
           16. Send analysis of v3.
           17. Drop rock v3.
           18. Move to #q14 for rock v5 (assuming v12 can move from #q4 to #q14).
           19. Sample rock v5.
           20. Send analysis of v5.
           21. Drop rock v5.
           22. Move back to v13 (if needed).
           
           **Rover v14 Actions:**
           1.  Move to #q7 for rock v1.
           2.  Sample rock v1.
           3.  Move to #q1 to transmit analyses.
           4.  Send analysis of v1.
           5.  Drop rock v1.
           6.  Move to #q9 for rock v4.
           7.  Sample rock v4.
           8.  Move to #q1 to transmit analyses.
           9.  Send analysis of v4.
           10. Drop rock v4.
           11. Move to #q6 for rock v7.
           12. Sample rock v7.
           13. Move to #q1 to transmit analyses.
           14. Send analysis of v7.
           15. Drop rock v7.
           16. Move to #q10 for rock v8.
           17. Sample rock v8.
           18. Move to #q1 to transmit analyses.
           19. Send analysis of v8.
           20. Drop rock v8.
           21. Move back to v15 (if needed).
           
           Let's check the specific move actions:
           `move v12 v13 #t8 #q0` (from initial v13 to #q0)
           `move v12 #q0 #o2 #q11`
           `move v12 #q11 #o2 #q8`
           `move v12 #q8 #o2 #q3`
           `move v12 #q3 #t2 #q4` (from #q3 to #q4 for comms)
           `move v12 #q4 #o2 #o5` (from #q4 to #o5 for rock v3)
           `move v12 #o5 #o2 #q4` (back to #q4 for comms)
           `move v12 #q4 #o2 #q14` (from #q4 to #q14 for rock v5)
           `move v12 #q14 #t20 #q4` (back to #q4 for comms)
           
           `move v14 v15 #o2 #q7` (from initial v15 to #q7 for rock v1) - Wait, I'm checking existing actions.
           There is `(move v14 v15 #o2 #q7)`.
           `move v14 #q7 #o2 #q1` (from #q7 to #q1 for comms)
           `move v14 #q1 #o2 #q9` (from #q1 to #q9 for rock v4)
           `move v14 #q9 #o2 #q1` (back to #q1 for comms)
           `move v14 #q1 #o2 #q6` (from #q1 to #q6 for rock v7)
           `move v14 #q6 #o2 #q1` (back to #q1 for comms)
           `move v14 #q1 #o2 #q10` (from #q1 to #q10 for rock v8)
           `move v14 #q10 #o2 #q1` (back to #q1 for comms)
           
           This looks good.
           
           --Plan--:
           (move v12 v13 #t8 #q0)
           (calibrate v12 #q0 #y0 v17 v10)
           (take_image v12 #q0 #y0 v17 v10 v11)
           (move v12 #q0 #o2 #q11)
           (calibrate v12 #q11 #y5 v18 v10)
           (take_image v12 #q11 #y5 v18 v10 v11)
           (move v12 #q11 #o2 #q8)
           (calibrate v12 #q8 #y4 v19 v10)
           (take_image v12 #q8 #y4 v19 v10 v11)
           (move v12 #q8 #o2 #q3)
           (calibrate v12 #q3 #y2 v20 v10)
           (take_image v12 #q3 #y2 v20 v10 v11)
           (move v12 #q3 #t2 #q4)
           (send_image v12 #q4 #y3 v9 v17 v11)
           (send_image v12 #q4 #y3 v9 v18 v11)
           (send_image v12 #q4 #y3 v9 v19 v11)
           (send_image v12 #q4 #y3 v9 v20 v11)
           (move v12 #q4 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (move v12 #o5 #o2 #q4)
           (send_analysis v12 #q4 #y3 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q4 #o2 #q14)
           (sample_rock v12 #q14 v5 v16)
           (move v12 #q14 #t20 #q4)
           (send_analysis v12 #q4 #y3 v9 v5)
           (drop_rock v12 v16)
           (move v14 v15 #o2 #q7)
           (sample_rock v14 #q7 v1 v16)
           (move v14 #q7 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q9)
           (sample_rock v14 #q9 v4 v16)
           (move v14 #q9 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q6)
           (sample_rock v14 #q6 v7 v16)
           (move v14 #q6 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q10)
           (sample_rock v14 #q10 v8 v16)
           (move v14 #q10 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v8)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan was rejected because the final goal `new-axiom@0()` was not satisfied. This means that one or more of its conjunctive components (the received images, received analyses, rover positions, or free stores) were not met by the end of the plan.
           
           Let's carefully review all components of `new-axiom@0()` and ensure they are covered:
           
           **Goal breakdown:**
           *   `atconf(v12, v13)`: Rover v12 must be at configuration v13.
           *   `atconf(v14, v15)`: Rover v14 must be at configuration v15.
           *   `free(v12, v16)`: Rover v12's store v16 must be free.
           *   `free(v14, v16)`: Rover v14's store v16 must be free.
           *   `receivedimage(v17, v11)`: Image of objective v17 in mode v11 received.
           *   `receivedimage(v18, v11)`: Image of objective v18 in mode v11 received.
           *   `receivedimage(v19, v11)`: Image of objective v19 in mode v11 received.
           *   `receivedimage(v20, v11)`: Image of objective v20 in mode v11 received.
           *   `receivedanalysis(?stone)` where `type(?stone, v2)`: Analysis for all rocks of type `v2` (v1, v3, v4) received.
           *   `receivedanalysis(?soil)` where `type(?soil, v6)`: Analysis for all rocks of type `v6` (v5, v7, v8) received.
           
           My previous plan successfully collected and sent all images and analyses, and dropped all rocks, so `free(v12, v16)` and `free(v14, v16)` should be true. The issue is likely with the final `atconf` states of the rovers. Neither rover `v12` nor `v14` are guaranteed to end up at their initial configurations `v13` and `v15` respectively after their last communication or drop actions. They ended up at their communication positions, `#q4` for `v12` and `#q1` for `v14`.
           
           To fix this, I need to add explicit `move` actions at the very end of the plan to return each rover to its required final configuration.
           
           **Reviewing final movements:**
           *   For v12: The last move was `(move v12 #q14 #t20 #q4)`. So v12 is at `#q4`. I need to move it to `v13`. Looking at available moves:
               *   `move v12 #q4 #t7 v13` - This will move `v12` from `#q4` to `v13`.
           *   For v14: The last move was `(move v14 #q10 #o2 #q1)`. So v14 is at `#q1`. I need to move it to `v15`. Looking at available moves:
               *   `move v14 #q1 #t6 v15` - This will move `v14` from `#q1` to `v15`.
           
           I will append these two move actions at the end of the plan.
           
           --Plan--:
           (move v12 v13 #t8 #q0)
           (calibrate v12 #q0 #y0 v17 v10)
           (take_image v12 #q0 #y0 v17 v10 v11)
           (move v12 #q0 #o2 #q11)
           (calibrate v12 #q11 #y5 v18 v10)
           (take_image v12 #q11 #y5 v18 v10 v11)
           (move v12 #q11 #o2 #q8)
           (calibrate v12 #q8 #y4 v19 v10)
           (take_image v12 #q8 #y4 v19 v10 v11)
           (move v12 #q8 #o2 #q3)
           (calibrate v12 #q3 #y2 v20 v10)
           (take_image v12 #q3 #y2 v20 v10 v11)
           (move v12 #q3 #t2 #q4)
           (send_image v12 #q4 #y3 v9 v17 v11)
           (send_image v12 #q4 #y3 v9 v18 v11)
           (send_image v12 #q4 #y3 v9 v19 v11)
           (send_image v12 #q4 #y3 v9 v20 v11)
           (move v12 #q4 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (move v12 #o5 #o2 #q4)
           (send_analysis v12 #q4 #y3 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q4 #o2 #q14)
           (sample_rock v12 #q14 v5 v16)
           (move v12 #q14 #t20 #q4)
           (send_analysis v12 #q4 #y3 v9 v5)
           (drop_rock v12 v16)
           (move v14 v15 #o2 #q7)
           (sample_rock v14 #q7 v1 v16)
           (move v14 #q7 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q9)
           (sample_rock v14 #q9 v4 v16)
           (move v14 #q9 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q6)
           (sample_rock v14 #q6 v7 v16)
           (move v14 #q6 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q10)
           (sample_rock v14 #q10 v8 v16)
           (move v14 #q10 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v8)
           (drop_rock v14 v16)
           (move v12 #q4 #t7 v13)
           (move v14 #q1 #t6 v15)

