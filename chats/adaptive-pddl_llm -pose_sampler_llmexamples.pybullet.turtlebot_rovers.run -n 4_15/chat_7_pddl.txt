User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q19: object
           #q2: object
           #q20: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom camera(v10)
           Atom rock(v8)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom objective(v20)
           Atom rock(v7)
           Atom store(v16)
           Atom objective(v18)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom rock(v5)
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom objective(v17)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom type(v7, v6)
           Atom supports(v10, v11)
           Atom objective(v19)
           Atom type(v4, v2)
           Atom lander(v9)
           Atom conf(v12, v13)
           Atom onboard(v10, v12)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom conf(v14, v15)
           Atom type(v1, v2)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q8, #y4, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y4)
           Atom imagevisible(v12, #q3, #y2, v20)
           Atom imagerange(v12, #q3, v20)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom comvisible(v12, #q4, #y3, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q0, #y0, v17)
           Atom imagerange(v12, #q0, v17)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q12, v1)
           Atom conf(v12, #q12)
           Atom above(v12, #q14, v5)
           Atom conf(v12, #q14)
           Atom above(v12, #q19, v4)
           Atom conf(v12, #q19)
           Atom above(v12, #q18, v3)
           Atom conf(v12, #q18)
           Atom above(v14, #q2, v3)
           Atom conf(v14, #q2)
           Atom imagevisible(v14, #q13, #y6, v20)
           Atom imagerange(v14, #q13, v20)
           Atom conf(v14, #q13)
           Atom ray(#y6)
           Atom imagevisible(v14, #q17, #y9, v17)
           Atom imagerange(v14, #q17, v17)
           Atom conf(v14, #q17)
           Atom ray(#y9)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q7, v1)
           Atom conf(v14, #q7)
           Atom above(v14, #q9, v4)
           Atom conf(v14, #q9)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom imagevisible(v14, #q15, #y7, v19)
           Atom imagerange(v14, #q15, v19)
           Atom conf(v14, #q15)
           Atom ray(#y7)
           Atom imagevisible(v14, #q16, #y8, v18)
           Atom imagerange(v14, #q16, v18)
           Atom conf(v14, #q16)
           Atom ray(#y8)
           Atom imagevisible(v12, #q11, #y5, v18)
           Atom imagerange(v12, #q11, v18)
           Atom conf(v12, #q11)
           Atom ray(#y5)
           Atom above(v14, #q10, v8)
           Atom conf(v14, #q10)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #q20, v7)
           Atom conf(v12, #q20)
           Atom above(v14, #q6, v7)
           Atom conf(v14, #q6)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #t10, #q8)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #t31, #q8)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, v13, #t11, #q11)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v14, #q6, #o2, #q16)
           Atom motion(v14, #q10, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q6)
           Atom motion(v14, #q16, #o2, #q10)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v12, #q0, #t34, #q11)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, v13, #t8, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, v13, #t12, #q12)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q16)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, v15, #t36, #q5)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q16, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #t35, #q11)
           Atom motion(v12, #q12, #t19, #q4)
           Atom motion(v12, #q4, #t7, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q0, #t1, #q4)
           Atom motion(v12, #q11, #t39, #q4)
           Atom motion(v12, #q4, #t38, #q0)
           Atom motion(v12, #q8, #t46, #q4)
           Atom motion(v12, #q4, #t14, #q12)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q4, #t21, #q14)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q14, #t20, #q4)
           Atom motion(v12, #q8, #o2, #q18)
           Atom motion(v12, #q12, #o2, #q18)
           Atom motion(v12, #q0, #o2, #q18)
           Atom motion(v12, #q11, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q0)
           Atom motion(v12, #q18, #t24, #q4)
           Atom motion(v12, #q4, #t25, #q18)
           Atom motion(v12, #q18, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q12)
           Atom motion(v12, #q14, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q11)
           Atom motion(v12, #q18, #o2, #q8)
           Atom motion(v12, v13, #o2, #q18)
           Atom motion(v12, #q18, #o2, v13)
           Atom motion(v12, #q18, #o2, #q14)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, v15, #t30, #q7)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q7, #t26, #q1)
           Atom motion(v14, #q1, #t22, #q9)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q10, #t33, #q1)
           Atom motion(v14, #q1, #t6, v15)
           Atom motion(v14, #q6, #t28, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q16, #t17, #q1)
           Atom motion(v14, #q9, #t29, #q1)
           Atom motion(v14, #q5, #t5, #q1)
           Atom motion(v14, #q1, #t23, #q6)
           Atom motion(v14, #q1, #t27, #q10)
           Atom motion(v12, #q19, #o2, #q8)
           Atom motion(v12, #q19, #o2, #q11)
           Atom motion(v12, #q18, #o2, #q19)
           Atom motion(v12, #q19, #o2, v13)
           Atom motion(v12, #q19, #o2, #q14)
           Atom motion(v12, #q19, #o2, #q19)
           Atom motion(v12, #q12, #o2, #q19)
           Atom motion(v12, #q19, #t41, #q4)
           Atom motion(v12, #q19, #o2, #q12)
           Atom motion(v12, #q19, #o2, #q0)
           Atom motion(v12, #q4, #t37, #q19)
           Atom motion(v12, #q11, #o2, #q19)
           Atom motion(v12, v13, #o2, #q19)
           Atom motion(v12, #q8, #o2, #q19)
           Atom motion(v12, #q0, #o2, #q19)
           Atom motion(v12, #q19, #o2, #q18)
           Atom motion(v12, #q14, #o2, #q19)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q6, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q17)
           Atom motion(v14, #q1, #o2, #q17)
           Atom motion(v14, #q10, #o2, #q17)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q6)
           Atom motion(v14, #q17, #o2, #q10)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, #q17, #t18, #q1)
           Atom motion(v14, #q17, #o2, #q5)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q4, #t47, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, v13, #t9, #q3)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q19)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q8, #t32, #q3)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q3, #t45, #q18)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q19, #o2, #q3)
           Atom motion(v12, #q3, #t2, #q4)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q18, #o2, #q3)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q13, #t15, #q1)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q1, #t42, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, v15, #t13, #q13)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q6)
           Atom motion(v14, #q15, #o2, #q5)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q15, #t16, #q1)
           Atom motion(v14, #q6, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q5, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q1, #t40, #q15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v14, #q2, #t4, #q1)
           Atom motion(v14, #q1, #t0, #q2)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q2)
           Atom motion(v14, v15, #t3, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q2, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q16, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q17, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v12, #q20, #o2, #q20)
           Atom motion(v12, #q20, #o2, #q3)
           Atom motion(v12, #q20, #o2, #q12)
           Atom motion(v12, #q14, #o2, #q20)
           Atom motion(v12, #q8, #o2, #q20)
           Atom motion(v12, #q18, #t43, #q20)
           Atom motion(v12, #q19, #o2, #q20)
           Atom motion(v12, #q20, #o2, #q14)
           Atom motion(v12, #q20, #o2, #q18)
           Atom motion(v12, #q20, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q20)
           Atom motion(v12, #q11, #o2, #q20)
           Atom motion(v12, #q3, #o2, #q20)
           Atom motion(v12, #q4, #o2, #q20)
           Atom motion(v12, #q20, #o2, v13)
           Atom motion(v12, #q0, #o2, #q20)
           Atom motion(v12, v13, #o2, #q20)
           Atom motion(v12, #q20, #o2, #q0)
           Atom motion(v12, #q20, #t44, #q4)
           Atom motion(v12, #q20, #o2, #q8)
           Atom motion(v12, #q20, #o2, #q19)
           Atom motion(v12, #q20, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q18, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q19)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #q18)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q19, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q20)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v12 #q14 v5 v16))
           ((sample_rock v12 #q18 v3 v16))
           ((sample_rock v12 #q19 v4 v16))
           ((sample_rock v12 #q20 v7 v16))
           ((sample_rock v14 #q10 v8 v16))
           ((sample_rock v14 #q2 v3 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((sample_rock v14 #q6 v7 v16))
           ((sample_rock v14 #q7 v1 v16))
           ((sample_rock v14 #q9 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q18))
           ((move v12 #o5 #o2 #q19))
           ((move v12 #o5 #o2 #q20))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q18))
           ((move v12 #q0 #o2 #q19))
           ((move v12 #q0 #o2 #q20))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q4))
           ((move v12 #q0 #t34 #q11))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q18))
           ((move v12 #q11 #o2 #q19))
           ((move v12 #q11 #o2 #q20))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t31 #q8))
           ((move v12 #q11 #t39 #q4))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q18))
           ((move v12 #q12 #o2 #q19))
           ((move v12 #q12 #o2 #q20))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t19 #q4))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q18))
           ((move v12 #q14 #o2 #q19))
           ((move v12 #q14 #o2 #q20))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t20 #q4))
           ((move v12 #q18 #o2 #o5))
           ((move v12 #q18 #o2 #q0))
           ((move v12 #q18 #o2 #q11))
           ((move v12 #q18 #o2 #q12))
           ((move v12 #q18 #o2 #q14))
           ((move v12 #q18 #o2 #q18))
           ((move v12 #q18 #o2 #q19))
           ((move v12 #q18 #o2 #q3))
           ((move v12 #q18 #o2 #q8))
           ((move v12 #q18 #o2 v13))
           ((move v12 #q18 #t24 #q4))
           ((move v12 #q18 #t43 #q20))
           ((move v12 #q19 #o2 #o5))
           ((move v12 #q19 #o2 #q0))
           ((move v12 #q19 #o2 #q11))
           ((move v12 #q19 #o2 #q12))
           ((move v12 #q19 #o2 #q14))
           ((move v12 #q19 #o2 #q18))
           ((move v12 #q19 #o2 #q19))
           ((move v12 #q19 #o2 #q20))
           ((move v12 #q19 #o2 #q3))
           ((move v12 #q19 #o2 #q8))
           ((move v12 #q19 #o2 v13))
           ((move v12 #q19 #t41 #q4))
           ((move v12 #q20 #o2 #o5))
           ((move v12 #q20 #o2 #q0))
           ((move v12 #q20 #o2 #q11))
           ((move v12 #q20 #o2 #q12))
           ((move v12 #q20 #o2 #q14))
           ((move v12 #q20 #o2 #q18))
           ((move v12 #q20 #o2 #q19))
           ((move v12 #q20 #o2 #q20))
           ((move v12 #q20 #o2 #q3))
           ((move v12 #q20 #o2 #q8))
           ((move v12 #q20 #o2 v13))
           ((move v12 #q20 #t44 #q4))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q19))
           ((move v12 #q3 #o2 #q20))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t2 #q4))
           ((move v12 #q3 #t45 #q18))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q20))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #t14 #q12))
           ((move v12 #q4 #t21 #q14))
           ((move v12 #q4 #t25 #q18))
           ((move v12 #q4 #t35 #q11))
           ((move v12 #q4 #t37 #q19))
           ((move v12 #q4 #t38 #q0))
           ((move v12 #q4 #t47 #q3))
           ((move v12 #q4 #t7 v13))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q18))
           ((move v12 #q8 #o2 #q19))
           ((move v12 #q8 #o2 #q20))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t32 #q3))
           ((move v12 #q8 #t46 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q18))
           ((move v12 v13 #o2 #q19))
           ((move v12 v13 #o2 #q20))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q8))
           ((move v12 v13 #t11 #q11))
           ((move v12 v13 #t12 #q12))
           ((move v12 v13 #t8 #q0))
           ((move v12 v13 #t9 #q3))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q17))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #t0 #q2))
           ((move v14 #q1 #t22 #q9))
           ((move v14 #q1 #t23 #q6))
           ((move v14 #q1 #t27 #q10))
           ((move v14 #q1 #t40 #q15))
           ((move v14 #q1 #t42 #q13))
           ((move v14 #q1 #t6 v15))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q16))
           ((move v14 #q10 #o2 #q17))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t33 #q1))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t15 #q1))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q5))
           ((move v14 #q15 #o2 #q6))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t16 #q1))
           ((move v14 #q16 #o2 #q10))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q2))
           ((move v14 #q16 #o2 #q5))
           ((move v14 #q16 #o2 #q6))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t17 #q1))
           ((move v14 #q17 #o2 #q10))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q2))
           ((move v14 #q17 #o2 #q5))
           ((move v14 #q17 #o2 #q6))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t18 #q1))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q16))
           ((move v14 #q2 #o2 #q17))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t4 #q1))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q16))
           ((move v14 #q5 #o2 #q17))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t5 #q1))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q15))
           ((move v14 #q6 #o2 #q16))
           ((move v14 #q6 #o2 #q17))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t28 #q1))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t26 #q1))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t29 #q1))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t13 #q13))
           ((move v14 v15 #t3 #q2))
           ((move v14 v15 #t30 #q7))
           ((move v14 v15 #t36 #q5))
           ((calibrate v12 #q0 #y0 v17 v10))
           ((calibrate v12 #q11 #y5 v18 v10))
           ((calibrate v12 #q3 #y2 v20 v10))
           ((calibrate v12 #q8 #y4 v19 v10))
           ((calibrate v14 #q13 #y6 v20 v10))
           ((calibrate v14 #q15 #y7 v19 v10))
           ((calibrate v14 #q16 #y8 v18 v10))
           ((calibrate v14 #q17 #y9 v17 v10))
           ((take_image v12 #q0 #y0 v17 v10 v11))
           ((take_image v12 #q11 #y5 v18 v10 v11))
           ((take_image v12 #q3 #y2 v20 v10 v11))
           ((take_image v12 #q8 #y4 v19 v10 v11))
           ((take_image v14 #q13 #y6 v20 v10 v11))
           ((take_image v14 #q15 #y7 v19 v10 v11))
           ((take_image v14 #q16 #y8 v18 v10 v11))
           ((take_image v14 #q17 #y9 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y3 v9 v8))
           ((send_analysis v12 #q4 #y3 v9 v1))
           ((send_analysis v12 #q4 #y3 v9 v5))
           ((send_analysis v12 #q4 #y3 v9 v3))
           ((send_analysis v12 #q4 #y3 v9 v4))
           ((send_analysis v12 #q4 #y3 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_image v12 #q4 #y3 v9 v17 v11))
           ((send_image v12 #q4 #y3 v9 v18 v11))
           ((send_image v12 #q4 #y3 v9 v20 v11))
           ((send_image v12 #q4 #y3 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` is a complex goal that indicates several sub-goals related to the state of both rovers (v12 and v14). It requires both rovers to be at some configuration, and to have their stores free. It also requires several images of objectives (v17, v18, v19, v20) to have been received (sent to the lander) using mode v11. Additionally, rocks v3 and v5 (type v2 and v6 respectively) must have been analyzed and their analysis received by the lander. Rocks v1, v4, v7, v8 also need to be analyzed but it's not strictly specified that their analysis must be received.
           
           Looking at the initial state:
           - Rover v12 is at conf v13 and has a free store v16. It has camera v10.
           - Rover v14 is at conf v15 and has a free store v16. It also has camera v10. This is an interesting setup where both rovers share the same camera object.
           - Camera v10 supports mode v11.
           - Objectives v17, v18, v19, v20 are present.
           - Rocks v1, v3, v4, v5, v7, v8 are present with their types.
           
           The plan needs to:
           1. Ensure both rovers are at some configurations. (Already true: v12 at v13, v14 at v15).
           2. Ensure both rovers have a free store. (Already true: v12 free v16, v14 free v16).
           3. Take images of objectives v17, v18, v19, v20 with mode v11 using camera v10 and send them to lander v9.
           4. Sample rocks v3 and v5, analyze them, and send the analysis to lander v9.
           5. Also sample and analyze v1, v4, v7, v8.
           
           Let's break down step 3 for the images:
           For rover v12:
           - To take an image of v17: `calibrate v12 #q0 #y0 v17 v10`, then `take_image v12 #q0 #y0 v17 v10 v11`.
           - To take an image of v18: `calibrate v12 #q11 #y5 v18 v10`, then `take_image v12 #q11 #y5 v18 v10 v11`.
           - To take an image of v19: `calibrate v12 #q8 #y4 v19 v10`, then `take_image v12 #q8 #y4 v19 v10 v11`.
           - To take an image of v20: `calibrate v12 #q3 #y2 v20 v10`, then `take_image v12 #q3 #y2 v20 v10 v11`.
           After taking images, send them using `send_image v12 #q4 #y3 v9 <objective> v11`. Note that the `send_image` action requires `comvisible(v12, #q4, #y3, v9)`, which means rover v12 needs to be at config #q4 to send images. This implies movement if v12 is not already there.
           
           For rover v14:
           - To take an image of v17: `calibrate v14 #q17 #y9 v17 v10`, then `take_image v14 #q17 #y9 v17 v10 v11`.
           - To take an image of v18: `calibrate v14 #q16 #y8 v18 v10`, then `take_image v14 #q16 #y8 v18 v10 v11`.
           - To take an image of v19: `calibrate v14 #q15 #y7 v19 v10`, then `take_image v14 #q15 #y7 v19 v10 v11`.
           - To take an image of v20: `calibrate v14 #q13 #y6 v20 v10`, then `take_image v14 #q13 #y6 v20 v10 v11`.
           After taking images, send them using `send_image v14 #q1 #y1 v9 <objective> v11`. This implies movement if v14 is not already at config #q1.
           
           Let's break down step 4 & 5 for sampling and analysis:
           For rover v12:
           - Sample v1: `sample_rock v12 #q12 v1 v16`
           - Sample v3: `sample_rock v12 #q18 v3 v16`
           - Sample v4: `sample_rock v12 #q19 v4 v16`
           - Sample v5: `sample_rock v12 #q14 v5 v16`
           - Sample v7: `sample_rock v12 #q20 v7 v16`
           - Sample v8: `sample_rock v12 #o5 v8 v16`
           After sampling, send analysis using `send_analysis v12 #q4 #y3 v9 <rock>`.
           
           For rover v14:
           - Sample v1: `sample_rock v14 #q7 v1 v16`
           - Sample v3: `sample_rock v14 #q2 v3 v16`
           - Sample v4: `sample_rock v14 #q9 v4 v16`
           - Sample v5: `sample_rock v14 #q5 v5 v16`
           - Sample v7: `sample_rock v14 #q6 v7 v16`
           - Sample v8: `sample_rock v14 #q10 v8 v16`
           After sampling, send analysis using `send_analysis v14 #q1 #y1 v9 <rock>`.
           
           Since both rovers share the same store v16 and it can only be free or full for each rover, they cannot both sample rocks at the same time without one dropping its rock. However, the goal does not require the analysis of all rocks to be *sent*, only for v3 and v5. The axiom `new-axiom@0()` implies that `receivedanalysis(?stone)` for rocks typed as `v2` and `v6`. Rocks `v3` and `v4` are type `v2`. Rocks `v5`, `v7`, `v8` are type `v6`. Rock `v1` is type `v2`. This means we must send analysis for v3, v4, v5, v7, v8, and v1. This needs careful planning to manage the `full` and `free` state of the store for each rover and the shared camera resource.
           
           The `new-axiom@0()` goal specifies "receivedanalysis(?stone)" for any stone of type v2 and v6. So, for `v2` (rocks v1, v3, v4) and `v6` (rocks v5, v7, v8), their analysis must be received.
           
           Let's use rover v12 for imaging and then analyze its rocks, and rover v14 to handle the remaining rocks.
           
           Rover v12:
           1. Calibrate for v17 (imagevisible at #q0)
           2. Take image of v17
           3. Calibrate for v18 (imagevisible at #q11)
           4. Take image of v18
           5. Calibrate for v19 (imagevisible at #q8)
           6. Take image of v19
           7. Calibrate for v20 (imagevisible at #q3)
           8. Take image of v20
           9. Move to #q4 for communication
           10. Send images of v17, v18, v19, v20
           
           Rover v12 rocks:
           1. Move to #q12
           2. Sample rock v1
           3. Move to #q4
           4. Send analysis for v1
           5. Drop rock v1
           6. Move to #q18
           7. Sample rock v3
           8. Move to #q4
           9. Send analysis for v3
           10. Drop rock v3
           11. Move to #q19
           12. Sample rock v4
           13. Move to #q4
           14. Send analysis for v4
           15. Drop rock v4
           16. Move to #q14
           17. Sample rock v5
           18. Move to #q4
           19. Send analysis for v5
           20. Drop rock v5
           21. Move to #q20
           22. Sample rock v7
           23. Move to #q4
           24. Send analysis for v7
           25. Drop rock v7
           26. Move to #o5
           27. Sample rock v8
           28. Move to #q4
           29. Send analysis for v8
           30. Drop rock v8
           
           This plan uses v12 for all image and rock tasks. This strategy avoids contention for the single store, as only one rover is doing sampling. The only shared resource is camera v10, but the calibration action also re-establishes the calibrated state, so it shouldn't be an issue if one rover calibrates, takes an image, and then another calibrates.
           
           Current state:
           Rover v12 at v13, free store v16
           Rover v14 at v15, free store v16
           Camera v10 not calibrated initially.
           
           Let's refine the plan to ensure optimal use of movements and cover all goal conditions.
           
           Goal breakdown:
           - receivedimage(v17, v11)
           - receivedimage(v18, v11)
           - receivedimage(v19, v11)
           - receivedimage(v20, v11)
           - receivedanalysis(v1) (type v2)
           - receivedanalysis(v3) (type v2)
           - receivedanalysis(v4) (type v2)
           - receivedanalysis(v5) (type v6)
           - receivedanalysis(v7) (type v6)
           - receivedanalysis(v8) (type v6)
           
           Let Rover v12 handle all imaging tasks and Rover v14 handle all rock analysis tasks. This simplifies the plan significantly.
           
           **Rover v12 (Imaging):**
           Starts at v13.
           1. Calibrate camera for v17 at #q0.
           2. Take image of v17.
           3. Move to #q11.
           4. Calibrate camera for v18 at #q11.
           5. Take image of v18.
           6. Move to #q8.
           7. Calibrate camera for v19 at #q8.
           8. Take image of v19.
           9. Move to #q3.
           10. Calibrate camera for v20 at #q3.
           11. Take image of v20.
           12. Move to #q4 (communication point for v12).
           13. Send image v17.
           14. Send image v18.
           15. Send image v19.
           16. Send image v20.
           
           **Rover v14 (Rock Analysis):**
           Starts at v15.
           1. Move to #q7 (above v1).
           2. Sample v1.
           3. Move to #q1 (communication point for v14).
           4. Send analysis for v1.
           5. Drop v1.
           6. Move to #q2 (above v3).
           7. Sample v3.
           8. Move to #q1.
           9. Send analysis for v3.
           10. Drop v3.
           11. Move to #q9 (above v4).
           12. Sample v4.
           13. Move to #q1.
           14. Send analysis for v4.
           15. Drop v4.
           16. Move to #q5 (above v5).
           17. Sample v5.
           18. Move to #q1.
           19. Send analysis for v5.
           20. Drop v5.
           21. Move to #q6 (above v7).
           22. Sample v7.
           23. Move to #q1.
           24. Send analysis for v7.
           25. Drop v7.
           26. Move to #q10 (above v8).
           27. Sample v8.
           28. Move to #q1.
           29. Send analysis for v8.
           30. Drop v8.
           
           This plan seems robust. The camera `v10` is on both `v12` and `v14`. This indicates it might be a global resource, or both rovers have an identical camera. Given the `onboard` predicate, it's more likely a global resource. The `calibrated` predicate is tied to the camera and the rover, meaning `calibrated(v10, v12)` is distinct from `calibrated(v10, v14)`. So both rovers can calibrate and use the camera independently.
           
           --Plan--:
           (calibrate v12 #q0 #y0 v17 v10)
           (take_image v12 #q0 #y0 v17 v10 v11)
           (move v12 #q0 #t34 #q11)
           (calibrate v12 #q11 #y5 v18 v10)
           (take_image v12 #q11 #y5 v18 v10 v11)
           (move v12 #q11 #t31 #q8)
           (calibrate v12 #q8 #y4 v19 v10)
           (take_image v12 #q8 #y4 v19 v10 v11)
           (move v12 #q8 #t32 #q3)
           (calibrate v12 #q3 #y2 v20 v10)
           (take_image v12 #q3 #y2 v20 v10 v11)
           (move v12 #q3 #t2 #q4)
           (send_image v12 #q4 #y3 v9 v17 v11)
           (send_image v12 #q4 #y3 v9 v18 v11)
           (send_image v12 #q4 #y3 v9 v19 v11)
           (send_image v12 #q4 #y3 v9 v20 v11)
           (move v14 v15 #t30 #q7)
           (sample_rock v14 #q7 v1 v16)
           (move v14 #q7 #t26 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q1 #t0 #q2)
           (sample_rock v14 #q2 v3 v16)
           (move v14 #q2 #t4 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q1 #t22 #q9)
           (sample_rock v14 #q9 v4 v16)
           (move v14 #q9 #t29 #q1)
           (send_analysis v14 #q1 #y1 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q1 #t40 #q15)
           (move v14 #q15 #o2 #q5)
           (sample_rock v14 #q5 v5 v16)
           (move v14 #q5 #t5 #q1)
           (send_analysis v14 #q1 #y1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q1 #t23 #q6)
           (sample_rock v14 #q6 v7 v16)
           (move v14 #q6 #t28 #q1)
           (send_analysis v14 #q1 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q1 #t27 #q10)
           (sample_rock v14 #q10 v8 v16)
           (move v14 #q10 #t33 #q1)
           (send_analysis v14 #q1 #y1 v9 v8)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan was rejected because the final goal `new-axiom@0()` was not satisfied. Let's re-evaluate the `new-axiom@0()` goal:
           `new-axiom@0()` is true if:
           1. `atconf(v12, v13)`
           2. `atconf(v14, v15)`
           3. `free(v12, v16)`
           4. `free(v14, v16)`
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `type(?stone, v2)` and `receivedanalysis(?stone)` (for all objects of type v2)
           10. `type(?soil, v6)` and `receivedanalysis(?soil)` (for all objects of type v6)
           
           Let's check each point:
           1. `atconf(v12, v13)`: The previous plan leaves `v12` at `#q4`. So this needs to be changed.
           2. `atconf(v14, v15)`: The previous plan leaves `v14` at `#q1`. So this needs to be changed.
           3. `free(v12, v16)`: The previous plan ensures this.
           4. `free(v14, v16)`: The previous plan ensures this.
           5-8. `receivedimage(...)`: The previous plan ensures these.
           9. `receivedanalysis(?stone)` for type `v2`: Rocks `v1`, `v3`, `v4` are type `v2`. The previous plan ensures their analysis is sent.
           10. `receivedanalysis(?soil)` for type `v6`: Rocks `v5`, `v7`, `v8` are type `v6`. The previous plan ensures their analysis is sent.
           
           The main issue from the previous plan is that the rovers are not left at their initial configurations (`atconf(v12, v13)` and `atconf(v14, v15)`). I need to add `move` actions at the end of each rover's task sequence to return them to their initial configurations.
           
           Revised plan strategy:
           **Rover v12 (Imaging):**
           Starts at v13.
           1. Calibrate camera for v17 at #q0.
           2. Take image of v17.
           3. Move to #q11.
           4. Calibrate camera for v18 at #q11.
           5. Take image of v18.
           6. Move to #q8.
           7. Calibrate camera for v19 at #q8.
           8. Take image of v19.
           9. Move to #q3.
           10. Calibrate camera for v20 at #q3.
           11. Take image of v20.
           12. Move to #q4 (communication point for v12).
           13. Send image v17.
           14. Send image v18.
           15. Send image v19.
           16. Send image v20.
           17. **Move v12 from #q4 back to v13.**
           
           **Rover v14 (Rock Analysis):**
           Starts at v15.
           1. Move to #q7 (above v1).
           2. Sample v1.
           3. Move to #q1 (communication point for v14).
           4. Send analysis for v1.
           5. Drop v1.
           6. Move to #q2 (above v3).
           7. Sample v3.
           8. Move to #q1.
           9. Send analysis for v3.
           10. Drop v3.
           11. Move to #q9 (above v4).
           12. Sample v4.
           13. Move to #q1.
           14. Send analysis for v4.
           15. Drop v4.
           16. Move to #q5 (above v5).
           17. Sample v5.
           18. Move to #q1.
           19. Send analysis for v5.
           20. Drop v5.
           21. Move to #q6 (above v7).
           22. Sample v7.
           23. Move to #q1.
           24. Send analysis for v7.
           25. Drop v7.
           26. Move to #q10 (above v8).
           27. Sample v8.
           28. Move to #q1.
           29. Send analysis for v8.
           30. Drop v8.
           31. **Move v14 from #q1 back to v15.**
           
           --Plan--:
           (calibrate v12 #q0 #y0 v17 v10)
           (take_image v12 #q0 #y0 v17 v10 v11)
           (move v12 #q0 #t34 #q11)
           (calibrate v12 #q11 #y5 v18 v10)
           (take_image v12 #q11 #y5 v18 v10 v11)
           (move v12 #q11 #t31 #q8)
           (calibrate v12 #q8 #y4 v19 v10)
           (take_image v12 #q8 #y4 v19 v10 v11)
           (move v12 #q8 #t32 #q3)
           (calibrate v12 #q3 #y2 v20 v10)
           (take_image v12 #q3 #y2 v20 v10 v11)
           (move v12 #q3 #t2 #q4)
           (send_image v12 #q4 #y3 v9 v17 v11)
           (send_image v12 #q4 #y3 v9 v18 v11)
           (send_image v12 #q4 #y3 v9 v19 v11)
           (send_image v12 #q4 #y3 v9 v20 v11)
           (move v12 #q4 #t7 v13)
           (move v14 v15 #t30 #q7)
           (sample_rock v14 #q7 v1 v16)
           (move v14 #q7 #t26 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q1 #t0 #q2)
           (sample_rock v14 #q2 v3 v16)
           (move v14 #q2 #t4 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q1 #t22 #q9)
           (sample_rock v14 #q9 v4 v16)
           (move v14 #q9 #t29 #q1)
           (send_analysis v14 #q1 #y1 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q1 #t40 #q15)
           (move v14 #q15 #o2 #q5)
           (sample_rock v14 #q5 v5 v16)
           (move v14 #q5 #t5 #q1)
           (send_analysis v14 #q1 #y1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q1 #t23 #q6)
           (sample_rock v14 #q6 v7 v16)
           (move v14 #q6 #t28 #q1)
           (send_analysis v14 #q1 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q1 #t27 #q10)
           (sample_rock v14 #q10 v8 v16)
           (move v14 #q10 #t33 #q1)
           (send_analysis v14 #q1 #y1 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q1 #t6 v15)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q0) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the precondition `atconf(v12, #q0)` was not met for the first `calibrate` action. Rover v12 starts at `v13`. Therefore, a `move` action is needed before the first `calibrate` action for rover v12 to get to `#q0`.
           
           Let's adjust the Rover v12 part of the plan:
           **Rover v12 (Imaging):**
           Starts at `v13`.
           1. **Move v12 from v13 to #q0.**
           2. Calibrate camera for v17 at #q0.
           3. Take image of v17.
           4. Move to #q11.
           5. Calibrate camera for v18 at #q11.
           6. Take image of v18.
           7. Move to #q8.
           8. Calibrate camera for v19 at #q8.
           9. Take image of v19.
           10. Move to #q3.
           11. Calibrate camera for v20 at #q3.
           12. Take image of v20.
           13. Move to #q4 (communication point for v12).
           14. Send image v17.
           15. Send image v18.
           16. Send image v19.
           17. Send image v20.
           18. Move v12 from #q4 back to v13.
           
           The rest of the plan for Rover v14 and the overall goal conditions should remain the same.
           
           --Plan--:
           (move v12 v13 #t8 #q0)
           (calibrate v12 #q0 #y0 v17 v10)
           (take_image v12 #q0 #y0 v17 v10 v11)
           (move v12 #q0 #t34 #q11)
           (calibrate v12 #q11 #y5 v18 v10)
           (take_image v12 #q11 #y5 v18 v10 v11)
           (move v12 #q11 #t31 #q8)
           (calibrate v12 #q8 #y4 v19 v10)
           (take_image v12 #q8 #y4 v19 v10 v11)
           (move v12 #q8 #t32 #q3)
           (calibrate v12 #q3 #y2 v20 v10)
           (take_image v12 #q3 #y2 v20 v10 v11)
           (move v12 #q3 #t2 #q4)
           (send_image v12 #q4 #y3 v9 v17 v11)
           (send_image v12 #q4 #y3 v9 v18 v11)
           (send_image v12 #q4 #y3 v9 v19 v11)
           (send_image v12 #q4 #y3 v9 v20 v11)
           (move v12 #q4 #t7 v13)
           (move v14 v15 #t30 #q7)
           (sample_rock v14 #q7 v1 v16)
           (move v14 #q7 #t26 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q1 #t0 #q2)
           (sample_rock v14 #q2 v3 v16)
           (move v14 #q2 #t4 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q1 #t22 #q9)
           (sample_rock v14 #q9 v4 v16)
           (move v14 #q9 #t29 #q1)
           (send_analysis v14 #q1 #y1 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q1 #t40 #q15)
           (move v14 #q15 #o2 #q5)
           (sample_rock v14 #q5 v5 v16)
           (move v14 #q5 #t5 #q1)
           (send_analysis v14 #q1 #y1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q1 #t23 #q6)
           (sample_rock v14 #q6 v7 v16)
           (move v14 #q6 #t28 #q1)
           (send_analysis v14 #q1 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q1 #t27 #q10)
           (sample_rock v14 #q10 v8 v16)
           (move v14 #q10 #t33 #q1)
           (send_analysis v14 #q1 #y1 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q1 #t6 v15)

