User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g45: object
           #g46: object
           #g47: object
           #g48: object
           #g49: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q115: object
           #q116: object
           #q117: object
           #q118: object
           #q119: object
           #q120: object
           #q121: object
           #q122: object
           #q123: object
           #q124: object
           #t417: object
           #t418: object
           #t419: object
           #t420: object
           #t421: object
           #t422: object
           #t423: object
           #t424: object
           #t425: object
           #t426: object
           #t427: object
           #t428: object
           #t429: object
           #t430: object
           #t431: object
           #t432: object
           #t433: object
           #t434: object
           #t435: object
           #t436: object
           @sink: object
           @stove: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p15: object
           p16: object
           p17: object
           p18: object
           p19: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v3: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v44: object
           v45: object
           v46: object
           v47: object
           v48: object
           v5: object
           v6: object
           v64: object
           v65: object
           v66: object
           v67: object
           v68: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v17 is a pose with position (-0.063, -0.408, 0.781) and quaternion (0.0, 0.0, 0.149, 0.989).
           Object p17 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p15 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.097, -0.339), (0.175, -0.261)).
           Object v9 is a pose with position (-0.13, 0.247, 0.781) and quaternion (0.0, 0.0, -0.775, 0.632).
           Object v19 is a pose with position (0.136, -0.3, 0.781) and quaternion (0.0, 0.0, 0.748, 0.663).
           Object p18 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p14 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object p16 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.248, 0.399, 0.781) and quaternion (0.0, 0.0, 0.982, -0.19).
           Object p5 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p6 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v21 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p9 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p10 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (0.15, 0.452, 0.781) and quaternion (0.0, 0.0, 0.981, -0.195).
           Object p19 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom graspable(v16)
           Atom pose(v16, v17)
           Atom atpose(v16, v17)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom graspable(v18)
           Atom pose(v18, v19)
           Atom atpose(v18, v19)
           Atom stackable(v18, v10)
           Atom supported(v18, v19, v11)
           Atom stackable(v8, v20)
           Atom stackable(v12, v20)
           Atom stackable(v14, v20)
           Atom stackable(v16, v20)
           Atom stackable(v18, v20)
           Atom pose(v14, p7)
           Atom supported(v14, p7, v10)
           Atom pose(v18, p9)
           Atom supported(v18, p9, v20)
           Atom pose(v16, p8)
           Atom supported(v16, p8, v20)
           Atom supported(v14, p7, v20)
           Atom pose(v12, p6)
           Atom supported(v12, p6, v20)
           Atom pose(v8, p5)
           Atom supported(v8, p5, v20)
           Atom supported(v12, p6, v10)
           Atom supported(v18, p9, v10)
           Atom supported(v16, p8, v10)
           Atom supported(v8, p5, v10)
           Atom kin(v40, v41, p5, v42, v43, v44)
           Atom kin(v40, v47, p8, v42, v43, v44)
           Atom kin(v40, v45, p6, v42, v43, v44)
           Atom kin(v40, v48, p9, v42, v43, v44)
           Atom kin(v40, v46, p7, v42, v43, v44)
           Atom pose(v8, p10)
           Atom supported(v8, p10, v20)
           Atom pose(v14, p12)
           Atom supported(v14, p12, v20)
           Atom supported(v8, p10, v10)
           Atom supported(v14, p12, v10)
           Atom pose(v12, p11)
           Atom supported(v12, p11, v10)
           Atom pose(v16, p13)
           Atom supported(v16, p13, v10)
           Atom supported(v12, p11, v20)
           Atom pose(v18, p14)
           Atom supported(v18, p14, v10)
           Atom supported(v16, p13, v20)
           Atom supported(v18, p14, v20)
           Atom kin(v40, v41, p10, v42, v43, v44)
           Atom kin(v40, v45, p11, v42, v43, v44)
           Atom kin(v40, v46, p12, v42, v43, v44)
           Atom kin(v40, v47, p13, v42, v43, v44)
           Atom kin(v40, v48, p14, v42, v43, v44)
           Atom pose(v14, p17)
           Atom supported(v14, p17, v10)
           Atom pose(v18, p18)
           Atom supported(v18, p18, v20)
           Atom pose(v16, p15)
           Atom supported(v16, p15, v20)
           Atom supported(v14, p17, v20)
           Atom pose(v12, p16)
           Atom supported(v12, p16, v20)
           Atom pose(v8, p19)
           Atom supported(v8, p19, v20)
           Atom supported(v12, p16, v10)
           Atom supported(v18, p18, v10)
           Atom supported(v16, p15, v10)
           Atom supported(v8, p19, v10)
           Atom kin(v40, v47, p15, v64, v43, v44)
           Atom kin(v40, v45, p16, v65, v43, v44)
           Atom kin(v40, v46, p17, v66, v43, v44)
           Atom kin(v40, v48, p18, v67, v43, v44)
           Atom kin(v40, v41, p19, v68, v43, v44)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #g47)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v20)
           Atom supported(v14, #o2, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom grasp(v14, #g48)
           Atom supported(v12, #o2, v10)
           Atom supported(v18, #o2, v10)
           Atom grasp(v18, #g45)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #g46)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g49)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, p8, #g47, #o3, #o4)
           Atom bconf(#q117)
           Atom atraj(#t419)
           Atom kin(v4, v16, v17, #g47, #q117, #t419)
           Atom bconf(#q121)
           Atom atraj(#t423)
           Atom kin(v4, v16, p15, #g47, #q121, #t423)
           Atom kin(v4, v16, p13, #g47, #o3, #o4)
           Atom kin(v4, v12, p6, #g46, #o3, #o4)
           Atom bconf(#q116)
           Atom atraj(#t418)
           Atom kin(v4, v12, p16, #g46, #q116, #t418)
           Atom kin(v4, v12, p11, #g46, #o3, #o4)
           Atom bconf(#q119)
           Atom atraj(#t421)
           Atom kin(v4, v12, v13, #g46, #q119, #t421)
           Atom kin(v4, v14, p7, #g48, #o3, #o4)
           Atom bconf(#q124)
           Atom atraj(#t426)
           Atom kin(v4, v14, p12, #g48, #q124, #t426)
           Atom bconf(#q118)
           Atom atraj(#t420)
           Atom kin(v4, v14, v15, #g48, #q118, #t420)
           Atom kin(v4, v14, p17, #g48, #o3, #o4)
           Atom bconf(#q123)
           Atom atraj(#t425)
           Atom kin(v4, v18, p18, #g45, #q123, #t425)
           Atom kin(v4, v18, p9, #g45, #o3, #o4)
           Atom bconf(#q115)
           Atom atraj(#t417)
           Atom kin(v4, v18, v19, #g45, #q115, #t417)
           Atom kin(v4, v18, p14, #g45, #o3, #o4)
           Atom kin(v4, v8, p10, #g49, #o3, #o4)
           Atom bconf(#q120)
           Atom atraj(#t422)
           Atom kin(v4, v8, p19, #g49, #q120, #t422)
           Atom bconf(#q122)
           Atom atraj(#t424)
           Atom kin(v4, v8, v9, #g49, #q122, #t424)
           Atom kin(v4, v8, p5, #g49, #o3, #o4)
           Atom basemotion(#q121, #o0, v3)
           Atom basemotion(#q121, #o0, #q121)
           Atom btraj(#t433)
           Atom basemotion(v3, #t433, #q121)
           Atom basemotion(#q122, #o0, v3)
           Atom basemotion(#q122, #o0, #q122)
           Atom btraj(#t434)
           Atom basemotion(v3, #t434, #q122)
           Atom basemotion(#q121, #o0, #q122)
           Atom basemotion(#q122, #o0, #q121)
           Atom basemotion(#q117, #o0, v3)
           Atom basemotion(#q117, #o0, #q122)
           Atom btraj(#t429)
           Atom basemotion(v3, #t429, #q117)
           Atom basemotion(#q122, #o0, #q117)
           Atom basemotion(#q117, #o0, #q117)
           Atom basemotion(#q121, #o0, #q117)
           Atom basemotion(#q117, #o0, #q121)
           Atom basemotion(#q120, #o0, v3)
           Atom basemotion(#q120, #o0, #q120)
           Atom btraj(#t432)
           Atom basemotion(v3, #t432, #q120)
           Atom basemotion(#q122, #o0, #q120)
           Atom basemotion(#q120, #o0, #q122)
           Atom basemotion(#q117, #o0, #q120)
           Atom basemotion(#q120, #o0, #q117)
           Atom basemotion(#q121, #o0, #q120)
           Atom basemotion(#q120, #o0, #q121)
           Atom basemotion(#q115, #o0, #q121)
           Atom basemotion(#q115, #o0, v3)
           Atom basemotion(#q115, #o0, #q120)
           Atom basemotion(#q115, #o0, #q122)
           Atom basemotion(#q115, #o0, #q117)
           Atom basemotion(#q121, #o0, #q115)
           Atom btraj(#t427)
           Atom basemotion(v3, #t427, #q115)
           Atom basemotion(#q115, #o0, #q115)
           Atom basemotion(#q120, #o0, #q115)
           Atom basemotion(#q122, #o0, #q115)
           Atom basemotion(#q117, #o0, #q115)
           Atom basemotion(#q123, #o0, #q121)
           Atom basemotion(#q123, #o0, v3)
           Atom basemotion(#q123, #o0, #q120)
           Atom basemotion(#q123, #o0, #q122)
           Atom basemotion(#q123, #o0, #q117)
           Atom basemotion(#q121, #o0, #q123)
           Atom btraj(#t435)
           Atom basemotion(v3, #t435, #q123)
           Atom basemotion(#q123, #o0, #q123)
           Atom basemotion(#q120, #o0, #q123)
           Atom basemotion(#q122, #o0, #q123)
           Atom basemotion(#q117, #o0, #q123)
           Atom basemotion(#q115, #o0, #q123)
           Atom basemotion(#q123, #o0, #q115)
           Atom basemotion(#q118, #o0, v3)
           Atom basemotion(#q118, #o0, #q120)
           Atom basemotion(#q118, #o0, #q122)
           Atom btraj(#t430)
           Atom basemotion(v3, #t430, #q118)
           Atom basemotion(#q118, #o0, #q118)
           Atom basemotion(#q120, #o0, #q118)
           Atom basemotion(#q122, #o0, #q118)
           Atom basemotion(#q117, #o0, #q118)
           Atom basemotion(#q118, #o0, #q117)
           Atom basemotion(#q121, #o0, #q118)
           Atom basemotion(#q118, #o0, #q121)
           Atom basemotion(#q123, #o0, #q118)
           Atom basemotion(#q118, #o0, #q123)
           Atom basemotion(#q115, #o0, #q118)
           Atom basemotion(#q118, #o0, #q115)
           Atom basemotion(#q116, #o0, #q122)
           Atom basemotion(#q116, #o0, #q120)
           Atom basemotion(#q116, #o0, v3)
           Atom basemotion(#q116, #o0, #q116)
           Atom btraj(#t428)
           Atom basemotion(v3, #t428, #q116)
           Atom basemotion(#q120, #o0, #q116)
           Atom basemotion(#q122, #o0, #q116)
           Atom basemotion(#q118, #o0, #q116)
           Atom basemotion(#q116, #o0, #q118)
           Atom basemotion(#q117, #o0, #q116)
           Atom basemotion(#q116, #o0, #q117)
           Atom basemotion(#q121, #o0, #q116)
           Atom basemotion(#q116, #o0, #q121)
           Atom basemotion(#q123, #o0, #q116)
           Atom basemotion(#q116, #o0, #q123)
           Atom basemotion(#q115, #o0, #q116)
           Atom basemotion(#q116, #o0, #q115)
           Atom basemotion(#q119, #o0, #q116)
           Atom basemotion(#q119, #o0, v3)
           Atom basemotion(#q119, #o0, #q120)
           Atom basemotion(#q119, #o0, #q122)
           Atom basemotion(#q116, #o0, #q119)
           Atom btraj(#t431)
           Atom basemotion(v3, #t431, #q119)
           Atom basemotion(#q119, #o0, #q119)
           Atom basemotion(#q120, #o0, #q119)
           Atom basemotion(#q122, #o0, #q119)
           Atom basemotion(#q118, #o0, #q119)
           Atom basemotion(#q119, #o0, #q118)
           Atom basemotion(#q117, #o0, #q119)
           Atom basemotion(#q119, #o0, #q117)
           Atom basemotion(#q121, #o0, #q119)
           Atom basemotion(#q119, #o0, #q121)
           Atom basemotion(#q123, #o0, #q119)
           Atom basemotion(#q119, #o0, #q123)
           Atom basemotion(#q115, #o0, #q119)
           Atom basemotion(#q119, #o0, #q115)
           Atom basemotion(#q124, #o0, #q116)
           Atom basemotion(#q124, #o0, v3)
           Atom basemotion(#q124, #o0, #q119)
           Atom basemotion(#q124, #o0, #q120)
           Atom basemotion(#q124, #o0, #q122)
           Atom basemotion(#q116, #o0, #q124)
           Atom btraj(#t436)
           Atom basemotion(v3, #t436, #q124)
           Atom basemotion(#q119, #o0, #q124)
           Atom basemotion(#q124, #o0, #q124)
           Atom basemotion(#q120, #o0, #q124)
           Atom basemotion(#q122, #o0, #q124)
           Atom basemotion(#q118, #o0, #q124)
           Atom basemotion(#q124, #o0, #q118)
           Atom basemotion(#q117, #o0, #q124)
           Atom basemotion(#q124, #o0, #q117)
           Atom basemotion(#q121, #o0, #q124)
           Atom basemotion(#q124, #o0, #q121)
           Atom basemotion(#q123, #o0, #q124)
           Atom basemotion(#q124, #o0, #q123)
           Atom basemotion(#q115, #o0, #q124)
           Atom basemotion(#q124, #o0, #q115)
           Atom kin(v4, v14, #o2, #g48, #o3, #o4)
           Atom kin(v4, v8, #o2, #g49, #o3, #o4)
           Atom kin(v4, v12, #o2, #g46, #o3, #o4)
           Atom kin(v4, v16, #o2, #g47, #o3, #o4)
           Atom kin(v4, v18, #o2, #g45, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q120, #o0, #o3)
           Atom basemotion(#o3, #o0, #q120)
           Atom basemotion(#q122, #o0, #o3)
           Atom basemotion(#o3, #o0, #q122)
           Atom basemotion(#q116, #o0, #o3)
           Atom basemotion(#o3, #o0, #q116)
           Atom basemotion(#q119, #o0, #o3)
           Atom basemotion(#o3, #o0, #q119)
           Atom basemotion(#q124, #o0, #o3)
           Atom basemotion(#o3, #o0, #q124)
           Atom basemotion(#q118, #o0, #o3)
           Atom basemotion(#o3, #o0, #q118)
           Atom basemotion(#q117, #o0, #o3)
           Atom basemotion(#o3, #o0, #q117)
           Atom basemotion(#q121, #o0, #o3)
           Atom basemotion(#o3, #o0, #q121)
           Atom basemotion(#q123, #o0, #o3)
           Atom basemotion(#o3, #o0, #q123)
           Atom basemotion(#q115, #o0, #o3)
           Atom basemotion(#o3, #o0, #q115)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q115 #o0))
           ((move_base #o3 #q116 #o0))
           ((move_base #o3 #q117 #o0))
           ((move_base #o3 #q118 #o0))
           ((move_base #o3 #q119 #o0))
           ((move_base #o3 #q120 #o0))
           ((move_base #o3 #q121 #o0))
           ((move_base #o3 #q122 #o0))
           ((move_base #o3 #q123 #o0))
           ((move_base #o3 #q124 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q115 #o3 #o0))
           ((move_base #q115 #q115 #o0))
           ((move_base #q115 #q116 #o0))
           ((move_base #q115 #q117 #o0))
           ((move_base #q115 #q118 #o0))
           ((move_base #q115 #q119 #o0))
           ((move_base #q115 #q120 #o0))
           ((move_base #q115 #q121 #o0))
           ((move_base #q115 #q122 #o0))
           ((move_base #q115 #q123 #o0))
           ((move_base #q115 #q124 #o0))
           ((move_base #q115 v3 #o0))
           ((move_base #q116 #o3 #o0))
           ((move_base #q116 #q115 #o0))
           ((move_base #q116 #q116 #o0))
           ((move_base #q116 #q117 #o0))
           ((move_base #q116 #q118 #o0))
           ((move_base #q116 #q119 #o0))
           ((move_base #q116 #q120 #o0))
           ((move_base #q116 #q121 #o0))
           ((move_base #q116 #q122 #o0))
           ((move_base #q116 #q123 #o0))
           ((move_base #q116 #q124 #o0))
           ((move_base #q116 v3 #o0))
           ((move_base #q117 #o3 #o0))
           ((move_base #q117 #q115 #o0))
           ((move_base #q117 #q116 #o0))
           ((move_base #q117 #q117 #o0))
           ((move_base #q117 #q118 #o0))
           ((move_base #q117 #q119 #o0))
           ((move_base #q117 #q120 #o0))
           ((move_base #q117 #q121 #o0))
           ((move_base #q117 #q122 #o0))
           ((move_base #q117 #q123 #o0))
           ((move_base #q117 #q124 #o0))
           ((move_base #q117 v3 #o0))
           ((move_base #q118 #o3 #o0))
           ((move_base #q118 #q115 #o0))
           ((move_base #q118 #q116 #o0))
           ((move_base #q118 #q117 #o0))
           ((move_base #q118 #q118 #o0))
           ((move_base #q118 #q119 #o0))
           ((move_base #q118 #q120 #o0))
           ((move_base #q118 #q121 #o0))
           ((move_base #q118 #q122 #o0))
           ((move_base #q118 #q123 #o0))
           ((move_base #q118 #q124 #o0))
           ((move_base #q118 v3 #o0))
           ((move_base #q119 #o3 #o0))
           ((move_base #q119 #q115 #o0))
           ((move_base #q119 #q116 #o0))
           ((move_base #q119 #q117 #o0))
           ((move_base #q119 #q118 #o0))
           ((move_base #q119 #q119 #o0))
           ((move_base #q119 #q120 #o0))
           ((move_base #q119 #q121 #o0))
           ((move_base #q119 #q122 #o0))
           ((move_base #q119 #q123 #o0))
           ((move_base #q119 #q124 #o0))
           ((move_base #q119 v3 #o0))
           ((move_base #q120 #o3 #o0))
           ((move_base #q120 #q115 #o0))
           ((move_base #q120 #q116 #o0))
           ((move_base #q120 #q117 #o0))
           ((move_base #q120 #q118 #o0))
           ((move_base #q120 #q119 #o0))
           ((move_base #q120 #q120 #o0))
           ((move_base #q120 #q121 #o0))
           ((move_base #q120 #q122 #o0))
           ((move_base #q120 #q123 #o0))
           ((move_base #q120 #q124 #o0))
           ((move_base #q120 v3 #o0))
           ((move_base #q121 #o3 #o0))
           ((move_base #q121 #q115 #o0))
           ((move_base #q121 #q116 #o0))
           ((move_base #q121 #q117 #o0))
           ((move_base #q121 #q118 #o0))
           ((move_base #q121 #q119 #o0))
           ((move_base #q121 #q120 #o0))
           ((move_base #q121 #q121 #o0))
           ((move_base #q121 #q122 #o0))
           ((move_base #q121 #q123 #o0))
           ((move_base #q121 #q124 #o0))
           ((move_base #q121 v3 #o0))
           ((move_base #q122 #o3 #o0))
           ((move_base #q122 #q115 #o0))
           ((move_base #q122 #q116 #o0))
           ((move_base #q122 #q117 #o0))
           ((move_base #q122 #q118 #o0))
           ((move_base #q122 #q119 #o0))
           ((move_base #q122 #q120 #o0))
           ((move_base #q122 #q121 #o0))
           ((move_base #q122 #q122 #o0))
           ((move_base #q122 #q123 #o0))
           ((move_base #q122 #q124 #o0))
           ((move_base #q122 v3 #o0))
           ((move_base #q123 #o3 #o0))
           ((move_base #q123 #q115 #o0))
           ((move_base #q123 #q116 #o0))
           ((move_base #q123 #q117 #o0))
           ((move_base #q123 #q118 #o0))
           ((move_base #q123 #q119 #o0))
           ((move_base #q123 #q120 #o0))
           ((move_base #q123 #q121 #o0))
           ((move_base #q123 #q122 #o0))
           ((move_base #q123 #q123 #o0))
           ((move_base #q123 #q124 #o0))
           ((move_base #q123 v3 #o0))
           ((move_base #q124 #o3 #o0))
           ((move_base #q124 #q115 #o0))
           ((move_base #q124 #q116 #o0))
           ((move_base #q124 #q117 #o0))
           ((move_base #q124 #q118 #o0))
           ((move_base #q124 #q119 #o0))
           ((move_base #q124 #q120 #o0))
           ((move_base #q124 #q121 #o0))
           ((move_base #q124 #q122 #o0))
           ((move_base #q124 #q123 #o0))
           ((move_base #q124 #q124 #o0))
           ((move_base #q124 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q115 #t427))
           ((move_base v3 #q116 #t428))
           ((move_base v3 #q117 #t429))
           ((move_base v3 #q118 #t430))
           ((move_base v3 #q119 #t431))
           ((move_base v3 #q120 #t432))
           ((move_base v3 #q121 #t433))
           ((move_base v3 #q122 #t434))
           ((move_base v3 #q123 #t435))
           ((move_base v3 #q124 #t436))
           ((pick v4 v12 #o2 #g46 #o3 #o4))
           ((place v4 v12 #o2 #g46 #o3 #o4))
           ((pick v4 v12 p11 #g46 #o3 #o4))
           ((place v4 v12 p11 #g46 #o3 #o4))
           ((pick v4 v12 p16 #g46 #q116 #t418))
           ((place v4 v12 p16 #g46 #q116 #t418))
           ((pick v4 v12 p6 #g46 #o3 #o4))
           ((place v4 v12 p6 #g46 #o3 #o4))
           ((pick v4 v12 v13 #g46 #q119 #t421))
           ((place v4 v12 v13 #g46 #q119 #t421))
           ((pick v4 v14 #o2 #g48 #o3 #o4))
           ((place v4 v14 #o2 #g48 #o3 #o4))
           ((pick v4 v14 p12 #g48 #q124 #t426))
           ((place v4 v14 p12 #g48 #q124 #t426))
           ((pick v4 v14 p17 #g48 #o3 #o4))
           ((place v4 v14 p17 #g48 #o3 #o4))
           ((pick v4 v14 p7 #g48 #o3 #o4))
           ((place v4 v14 p7 #g48 #o3 #o4))
           ((pick v4 v14 v15 #g48 #q118 #t420))
           ((place v4 v14 v15 #g48 #q118 #t420))
           ((pick v4 v16 #o2 #g47 #o3 #o4))
           ((place v4 v16 #o2 #g47 #o3 #o4))
           ((pick v4 v16 p13 #g47 #o3 #o4))
           ((place v4 v16 p13 #g47 #o3 #o4))
           ((pick v4 v16 p15 #g47 #q121 #t423))
           ((place v4 v16 p15 #g47 #q121 #t423))
           ((pick v4 v16 p8 #g47 #o3 #o4))
           ((place v4 v16 p8 #g47 #o3 #o4))
           ((pick v4 v16 v17 #g47 #q117 #t419))
           ((place v4 v16 v17 #g47 #q117 #t419))
           ((pick v4 v18 #o2 #g45 #o3 #o4))
           ((place v4 v18 #o2 #g45 #o3 #o4))
           ((pick v4 v18 p14 #g45 #o3 #o4))
           ((place v4 v18 p14 #g45 #o3 #o4))
           ((pick v4 v18 p18 #g45 #q123 #t425))
           ((place v4 v18 p18 #g45 #q123 #t425))
           ((pick v4 v18 p9 #g45 #o3 #o4))
           ((place v4 v18 p9 #g45 #o3 #o4))
           ((pick v4 v18 v19 #g45 #q115 #t417))
           ((place v4 v18 v19 #g45 #q115 #t417))
           ((pick v4 v8 #o2 #g49 #o3 #o4))
           ((place v4 v8 #o2 #g49 #o3 #o4))
           ((pick v4 v8 p10 #g49 #o3 #o4))
           ((place v4 v8 p10 #g49 #o3 #o4))
           ((pick v4 v8 p19 #g49 #q120 #t422))
           ((place v4 v8 p19 #g49 #q120 #t422))
           ((pick v4 v8 p5 #g49 #o3 #o4))
           ((place v4 v8 p5 #g49 #o3 #o4))
           ((pick v4 v8 v9 #g49 #q122 #t424))
           ((place v4 v8 v9 #g49 #q122 #t424))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q107', '#t382'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g44', '#q107', '#t372'))
           Action(name='move_base', args=('#q107', '#q105', '#t409'))
           Action(name='place', args=('v4', 'v8', 'p19', '#g44', '#q105', '#t370'))
           Action(name='move_base', args=('#q105', '#q104', '#t402'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g41', '#q104', '#t369'))
           Action(name='move_base', args=('#q104', '#q101', '#t407'))
           Action(name='place', args=('v4', 'v12', 'p16', '#g41', '#q101', '#t366'))
           Action(name='move_base', args=('#q101', '#q103', '#t406'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g43', '#q103', '#t368'))
           Action(name='move_base', args=('#q103', '#q109', '#t404'))
           Action(name='place', args=('v4', 'v14', 'p17', '#g43', '#q109', '#t374'))
           Action(name='move_base', args=('#q109', '#q102', '#t401'))
           Action(name='pick', args=('v4', 'v16', 'v17', '#g42', '#q102', '#t367'))
           Action(name='move_base', args=('#q102', '#q106', '#t408'))
           Action(name='place', args=('v4', 'v16', 'p15', '#g42', '#q106', '#t371'))
           Action(name='move_base', args=('#q106', '#q100', '#t403'))
           Action(name='pick', args=('v4', 'v18', 'v19', '#g40', '#q100', '#t365'))
           Action(name='move_base', args=('#q100', '#q108', '#t405'))
           Action(name='place', args=('v4', 'v18', 'p18', '#g40', '#q108', '#t373'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v14', 'p17', 'v8', 'p19')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The goal is to place objects v8, v12, v14, v16, and v18 on surface v20. All these objects are currently supported by v11. The robot needs to pick each object from its current pose and place it on a valid pose on v20. The previous plan failed because placing v14 at p17 collided with v8 at p19. This suggests that the placement of objects on v20 needs to be carefully chosen to avoid collisions. I will try to place the objects on different, non-colliding poses that are supported by v20.
           
           The available poses on v20 are:
           p5 (v8), p6 (v12), p7 (v14), p8 (v16), p9 (v18)
           p10 (v8), p11 (v12), p12 (v14), p13 (v16), p14 (v18)
           p19 (v8), p16 (v12), p17 (v14), p15 (v16), p18 (v18)
           
           I will try to use the poses p19, p16, p17, p15, p18 for placing the objects v8, v12, v14, v16, v18 respectively. These poses are defined relative to the object's origin and may need to be adjusted or a new pose generated if there are collisions. The previous plan used p19 for v8 and p17 for v14, and they collided. I will use the poses that were already explicitly given, but will carefully consider which objects to place at which existing poses to avoid collisions. The original poses are at similar locations.
           
           Looking at the previous collision: `test-cfree-pose-pose:('v14', 'p17', 'v8', 'p19')->()`. This means that `p17` and `p19` are not collision-free when objects `v14` and `v8` are placed on them.
           
           I will try to use different poses for the objects, choosing poses that are less likely to collide. Given that the goal is to place all objects on v20, and all objects are stackable on v20, I will try to space them out.
           
           Let's look at the given poses supported by v20:
           `pose(v8, p5)`, `pose(v12, p6)`, `pose(v14, p7)`, `pose(v16, p8)`, `pose(v18, p9)`
           `pose(v8, p10)`, `pose(v12, p11)`, `pose(v14, p12)`, `pose(v16, p13)`, `pose(v18, p14)`
           `pose(v8, p19)`, `pose(v12, p16)`, `pose(v14, p17)`, `pose(v16, p15)`, `pose(v18, p18)`
           
           The coordinates of the poses p17 and p19 are very similar (all p-poses have z=0.782), varying only in x and y by small amounts. This indicates that placing multiple objects at these similar p-poses will likely result in collisions.
           
           I will use the poses `p19` for `v8`, `p16` for `v12`, `p12` for `v14`, `p8` for `v16`, and `p18` for `v18`. This spreads out the objects more than the previous attempt.
           
           Here's a plan that attempts to avoid the previous collision by placing objects in more spatially separated poses on the target surface v20.
           
           --Plan--:
           (move_base v3 #q122 #t434)
           (pick v4 v8 v9 #g49 #q122 #t424)
           (move_base #q122 #q120 #o0)
           (place v4 v8 p19 #g49 #q120 #t422)
           (move_base #q120 #q119 #o0)
           (pick v4 v12 v13 #g46 #q119 #t421)
           (move_base #q119 #q116 #o0)
           (place v4 v12 p16 #g46 #q116 #t418)
           (move_base #q116 #q118 #o0)
           (pick v4 v14 v15 #g48 #q118 #t420)
           (move_base #q118 #q124 #o0)
           (place v4 v14 p12 #g48 #q124 #t426)
           (move_base #q124 #q117 #o0)
           (pick v4 v16 v17 #g47 #q117 #t419)
           (move_base #q117 #q121 #o0)
           (place v4 v16 p8 #g47 #o3 #o4)
           (move_base #q121 #q115 #o0)
           (pick v4 v18 v19 #g45 #q115 #t417)
           (move_base #q115 #q123 #o0)
           (place v4 v18 p18 #g45 #q123 #t425)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', v43) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `atbconf(v43)` was not satisfied. This means that the base configuration `v43` was expected for some `kin` action, but the robot's base was not in that configuration. Looking at the `kin` facts, `v43` is a base configuration that is used with `v40` (an arm), `v41`, `v42`, `v44` (other generic objects). `v43` is associated with placing objects in a specific set of poses (p5-p19). However, `v43` is never stated as `atbconf(v43)` in the initial state, nor is there any `basemotion` action to move the robot to `v43`.
           
           All the `kin` actions associated with the `p` poses (e.g., `kin(v40, v41, p5, v42, v43, v44)`) use `v43` as the base configuration. The current initial base configuration is `v3`. The `pick` and `place` actions I used in the previous plan (e.g., `pick v4 v8 v9 #g49 #q122 #t424`) all use `v4` as the arm and specific base configurations (`#q122`, `#q120`, etc.) and specific trajectories. These base configurations are distinct from `v43`. The error message is specifically about `v43`.
           
           It appears there are two sets of `kin` facts. One set uses arm `v40`, base `v43`, and generic grasp/trajectory. The other set uses arm `v4`, specific objects, specific base configurations (like `#q122`), and specific trajectories (like `#t424`). My plan used the latter, correct set of `kin` facts. The error message `Precondition fact ('atbconf', v43) is not satisfied!` seems to imply a `kin` action involving `v43` was being considered, possibly by the validator trying to interpret the plan in a different way or due to a misunderstanding of which `kin` instances are actually used by the system for the chosen picks and places. The `kin` facts I used do not involve `v43`.
           
           Let's re-examine the `kin` actions that were used in the previous plan:
           `(pick v4 v8 v9 #g49 #q122 #t424)` - uses `kin(v4, v8, v9, #g49, #q122, #t424)`
           `(place v4 v8 p19 #g49 #q120 #t422)` - uses `kin(v4, v8, p19, #g49, #q120, #t422)`
           etc.
           
           None of these explicitly use `v43`. The `pick` and `place` actions that I specified in the plan are from the provided list of valid action instances, and these instances use specific base configurations like `#q122`, `#q120`, etc., not `v43`. My plan ensured that the robot moves to the specific base configuration (`#q122`, etc.) required by the `kin` for each pick/place operation.
           
           The error message `Precondition fact ('atbconf', v43) is not satisfied!` is confusing given my plan did not directly use `v43`. There must be some implicit `kin` that is being selected, or perhaps the validation environment is inferring a `kin` based on the object and pose without considering the specific grasp, base_conf and traj. Since the current problem is about `atbconf(v43)`, and the `kin` facts using `v43` are for arm `v40` and not `v4`, I will continue to use arm `v4` and the associated `kin` facts with their specific base configurations.
           
           I'll assume the problem is simply that the generated base configurations (`#q115`, `#q116`, etc.) were not in the correct order, or that the system needs to explicitly see `move_base v3 #qXXX #tXXX` before the first pick. The current set of moves are between generated configs. I'll make sure to move from `v3` to the first pick's base conf.
           
           Let's carefully construct the plan, ensuring each `move_base` action sets the robot to the correct base configuration required by the subsequent `pick` or `place` action.
           
           Goal: `on(v8, v20)`, `on(v12, v20)`, `on(v14, v20)`, `on(v16, v20)`, `on(v18, v20)`
           
           Initial state: `atbconf(v3)`, `handempty(v4)`, `ataconf(v4, v5)`
           Objects and their current poses:
           `v8` at `v9`
           `v12` at `v13`
           `v14` at `v15`
           `v16` at `v17`
           `v18` at `v19`
           
           All objects are supported by `v11`. We want them on `v20`.
           
           Picking `v8` from `v9`: needs `kin(v4, v8, v9, #g49, #q122, #t424)`. Robot needs to be at `#q122`.
           Placing `v8` to `p19`: needs `kin(v4, v8, p19, #g49, #q120, #t422)`. Robot needs to be at `#q120`.
           
           Picking `v12` from `v13`: needs `kin(v4, v12, v13, #g46, #q119, #t421)`. Robot needs to be at `#q119`.
           Placing `v12` to `p16`: needs `kin(v4, v12, p16, #g46, #q116, #t418)`. Robot needs to be at `#q116`.
           
           Picking `v14` from `v15`: needs `kin(v4, v14, v15, #g48, #q118, #t420)`. Robot needs to be at `#q118`.
           Placing `v14` to `p12`: needs `kin(v4, v14, p12, #g48, #q124, #t426)`. Robot needs to be at `#q124`.
           
           Picking `v16` from `v17`: needs `kin(v4, v16, v17, #g47, #q117, #t419)`. Robot needs to be at `#q117`.
           Placing `v16` to `p8`: needs `kin(v4, v16, p8, #g47, #o3, #o4)`. Robot needs to be at `#o3`.
           
           Picking `v18` from `v19`: needs `kin(v4, v18, v19, #g45, #q115, #t417)`. Robot needs to be at `#q115`.
           Placing `v18` to `p18`: needs `kin(v4, v18, p18, #g45, #q123, #t425)`. Robot needs to be at `#q123`.
           
           This looks like a robust sequence of movements and actions. The issue of the `v43` base configuration is still unexplained but since I'm explicitly using existing valid action instances that do not involve `v43`, this plan should be valid according to the provided action instances.
           
           --Plan--:
           (move_base v3 #q122 #t434)
           (pick v4 v8 v9 #g49 #q122 #t424)
           (move_base #q122 #q120 #o0)
           (place v4 v8 p19 #g49 #q120 #t422)
           (move_base #q120 #q119 #o0)
           (pick v4 v12 v13 #g46 #q119 #t421)
           (move_base #q119 #q116 #o0)
           (place v4 v12 p16 #g46 #q116 #t418)
           (move_base #q116 #q118 #o0)
           (pick v4 v14 v15 #g48 #q118 #t420)
           (move_base #q118 #q124 #o0)
           (place v4 v14 p12 #g48 #q124 #t426)
           (move_base #q124 #q117 #o0)
           (pick v4 v16 v17 #g47 #q117 #t419)
           (move_base #q117 #o3 #o0)
           (place v4 v16 p8 #g47 #o3 #o4)
           (move_base #o3 #q115 #o0)
           (pick v4 v18 v19 #g45 #q115 #t417)
           (move_base #q115 #q123 #o0)
           (place v4 v18 p18 #g45 #q123 #t425)

