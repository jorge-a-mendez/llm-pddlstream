User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v20)
           Atom camera(v10)
           Atom free(v14, v16)
           Atom onboard(v10, v14)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom objective(v17)
           Atom type(v1, v2)
           Atom rover(v12)
           Atom rock(v8)
           Atom type(v8, v6)
           Atom type(v4, v2)
           Atom conf(v14, v15)
           Atom rock(v1)
           Atom onboard(v10, v12)
           Atom rock(v3)
           Atom rock(v7)
           Atom rock(v4)
           Atom type(v5, v6)
           Atom rover(v14)
           Atom objective(v19)
           Atom type(v7, v6)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom mode(v11)
           Atom store(v16)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom rock(v5)
           Atom atconf(v14, v15)
           Atom atconf(v12, v13)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q9, #y7, v19)
           Atom imagerange(v14, #q9, v19)
           Atom conf(v14, #q9)
           Atom ray(#y7)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v1)
           Atom comvisible(v14, #q7, #y5, v9)
           Atom comrange(v14, #q7, v9)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q12, #y9, v18)
           Atom imagerange(v14, #q12, v18)
           Atom conf(v14, #q12)
           Atom ray(#y9)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q11, #y8, v20)
           Atom imagerange(v14, #q11, v20)
           Atom conf(v14, #q11)
           Atom ray(#y8)
           Atom above(v14, #o5, v8)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q6, v5)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q1, #y1, v19)
           Atom imagerange(v12, #q1, v19)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q2, #y2, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #o5, v7)
           Atom above(v12, #q3, v1)
           Atom conf(v12, #q3)
           Atom imagevisible(v12, #q5, #y4, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom imagevisible(v14, #q8, #y6, v17)
           Atom imagerange(v14, #q8, v17)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q10, v3)
           Atom conf(v12, #q10)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v12, v13, #t15, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, v15, #t10, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q7, #t13, #q8)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q8, #t11, #q7)
           Atom motion(v14, #q7, #t8, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, v13, #t2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q7, #t14, #q9)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #t1, #q1)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q4, #t7, #q3)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q1, #t5, #q3)
           Atom motion(v12, #q2, #t6, #q3)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q0, #t16, #q6)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q3, #t3, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #t4, #q3)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q10, #t12, #q0)
           Atom motion(v12, #q6, #t9, #q0)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q3 v1 v16))
           ((sample_rock v12 #q6 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t16 #q6))
           ((move v12 #q0 #t4 #q3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t5 #q3))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t12 #q0))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t6 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t3 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t7 #q3))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t9 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q1))
           ((move v12 v13 #t15 #q10))
           ((move v12 v13 #t2 #q2))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #t13 #q8))
           ((move v14 #q7 #t14 #q9))
           ((move v14 #q7 #t8 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t11 #q7))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q8))
           ((calibrate v12 #q1 #y1 v19 v10))
           ((calibrate v12 #q2 #y2 v20 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v12 #q5 #y4 v17 v10))
           ((calibrate v14 #q11 #y8 v20 v10))
           ((calibrate v14 #q12 #y9 v18 v10))
           ((calibrate v14 #q8 #y6 v17 v10))
           ((calibrate v14 #q9 #y7 v19 v10))
           ((take_image v12 #q1 #y1 v19 v10 v11))
           ((take_image v12 #q2 #y2 v20 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v12 #q5 #y4 v17 v10 v11))
           ((take_image v14 #q11 #y8 v20 v10 v11))
           ((take_image v14 #q12 #y9 v18 v10 v11))
           ((take_image v14 #q8 #y6 v17 v10 v11))
           ((take_image v14 #q9 #y7 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q7 #y5 v9 v1))
           ((send_analysis v14 #q7 #y5 v9 v3))
           ((send_analysis v14 #q7 #y5 v9 v4))
           ((send_analysis v14 #q7 #y5 v9 v5))
           ((send_analysis v14 #q7 #y5 v9 v7))
           ((send_analysis v14 #q7 #y5 v9 v8))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q7 #y5 v9 v20 v11))
           ((send_image v14 #q7 #y5 v9 v18 v11))
           ((send_image v14 #q7 #y5 v9 v17 v11))
           ((send_image v14 #q7 #y5 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a camera (v10), a lander (v9), a storage unit (v16), and various rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). The camera supports the mode v11. Both rovers are currently at their respective home configurations (v13 for v12, v15 for v14) and have free storage (v16). The goal is to satisfy `new-axiom@0()`, which requires certain images and analyses to be received, specifically: `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`, `receivedanalysis(?stone)`, and `receivedanalysis(?soil)`. The types of rocks are given as `type(v3, v2)`, `type(v1, v2)`, `type(v4, v2)`, `type(v8, v6)`, `type(v7, v6)`, `type(v5, v6)`, which means v1, v3, v4 are of type v2 (stone) and v5, v7, v8 are of type v6 (soil).
           
           To achieve the goal, both rovers need to:
           1. Take images of all four objectives (v17, v18, v19, v20) and send them to the lander (v9).
           2. Sample and analyze at least one rock of type v2 (stone) and at least one rock of type v6 (soil), and send the analysis to the lander (v9).
           
           Let's break down the plan for each rover.
           
           **Rover v12:**
           *   **Objectives:** Can see v19, v20, v18, v17 from various configurations.
           *   **Rocks:** Can sample v4 (stone), v7 (soil), v8 (soil), v3 (stone), v1 (stone), v5 (soil) from configuration #o5, #q6, #q10, #q3.
           
           **Rover v14:**
           *   **Objectives:** Can see v19, v18, v20, v17 from various configurations.
           *   **Rocks:** Can sample v5 (soil), v1 (stone), v4 (stone), v7 (soil), v8 (soil), v3 (stone) from configuration #o5.
           
           We need to make sure to get at least one stone analysis and one soil analysis. Rover v12 can take care of one of each easily, as well as several images. Rover v14 can also contribute.
           
           **Plan for v12 to get images and analyses:**
           1.  **Calibrate and take images:**
               *   Calibrate for v19 at #q1, take image of v19.
               *   Calibrate for v20 at #q2, take image of v20.
               *   Calibrate for v18 at #q4, take image of v18.
               *   Calibrate for v17 at #q5, take image of v17.
           2.  **Move to a communication position and send images.** From #q0, it can communicate.
           3.  **Sample rocks:**
               *   Move to #o5 and sample v4 (stone).
               *   Move to #q6 and sample v5 (soil).
           4.  **Move to a communication position and send analysis.** From #q0, it can communicate.
           
           **Plan for v14 (as a backup/additional for required images and analyses):**
           If v12 completes all images and required analyses, v14 might not need to do anything or could do redundant actions. Let's make sure the essential ones are covered.
           
           Since the goal is an 'and' of receiving all images and at least one analysis of each type, we can combine the actions. Rover v12 is well-positioned for several objectives and rocks.
           
           We'll use rover v12 for all image tasks and the two required analysis tasks.
           
           1.  **Calibrate and take images with v12:**
               *   Calibrate camera v10 for objective v19 at configuration #q1.
               *   Take image of v19 with camera v10 in mode v11.
               *   Calibrate camera v10 for objective v20 at configuration #q2.
               *   Take image of v20 with camera v10 in mode v11.
               *   Calibrate camera v10 for objective v18 at configuration #q4.
               *   Take image of v18 with camera v10 in mode v11.
               *   Calibrate camera v10 for objective v17 at configuration #q5.
               *   Take image of v17 with camera v10 in mode v11.
           
           2.  **Move v12 to a communication configuration and send images:**
               *   Move v12 to #q0.
               *   Send image of v19.
               *   Send image of v20.
               *   Send image of v18.
               *   Send image of v17.
           
           3.  **Sample and analyze rocks with v12:**
               *   Move v12 to #o5 (where it can sample v4, a stone).
               *   Sample rock v4 (type v2, stone) into store v16.
               *   Move v12 to #q6 (where it can sample v5, a soil).
               *   Sample rock v5 (type v6, soil) into store v16 (need to drop previous sample first if store is full). *Correction: The current state states `free(v12, v16)`. After `sample_rock`, it becomes `full(v12, v16)`. To sample another, we need to `drop_rock` first. However, the goal doesn't require storing both, just analyzing and sending. So we can sample one, send its analysis, drop it, then sample the other, and send its analysis.*
           
           4.  **Move v12 to a communication configuration and send analysis:**
               *   Move v12 to #q0.
               *   Send analysis of v4 (stone).
               *   Drop rock v4.
               *   Move v12 to #q6.
               *   Sample rock v5.
               *   Move v12 to #q0.
               *   Send analysis of v5 (soil).
           
           This detailed plan ensures all conditions for new-axiom@0() are met.
           
           --Plan--:
           (calibrate v12 #q1 #y1 v19 v10)
           (take_image v12 #q1 #y1 v19 v10 v11)
           (calibrate v12 #q2 #y2 v20 v10)
           (take_image v12 #q2 #y2 v20 v10 v11)
           (calibrate v12 #q4 #y3 v18 v10)
           (take_image v12 #q4 #y3 v18 v10 v11)
           (calibrate v12 #q5 #y4 v17 v10)
           (take_image v12 #q5 #y4 v17 v10 v11)
           (move v12 v13 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #q6)
           (sample_rock v12 #q6 v5 v16)
           (move v12 #q6 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v5)

User:      The plan you provided contains the following invalid actions: `(move v12 #q0 #o2 #q6), (move v12 #q6 #o2 #q0)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q3 v1 v16))
           ((sample_rock v12 #q6 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t16 #q6))
           ((move v12 #q0 #t4 #q3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t5 #q3))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t12 #q0))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t6 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t3 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t7 #q3))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t9 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q1))
           ((move v12 v13 #t15 #q10))
           ((move v12 v13 #t2 #q2))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #t13 #q8))
           ((move v14 #q7 #t14 #q9))
           ((move v14 #q7 #t8 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t11 #q7))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q8))
           ((calibrate v12 #q1 #y1 v19 v10))
           ((calibrate v12 #q2 #y2 v20 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v12 #q5 #y4 v17 v10))
           ((calibrate v14 #q11 #y8 v20 v10))
           ((calibrate v14 #q12 #y9 v18 v10))
           ((calibrate v14 #q8 #y6 v17 v10))
           ((calibrate v14 #q9 #y7 v19 v10))
           ((take_image v12 #q1 #y1 v19 v10 v11))
           ((take_image v12 #q2 #y2 v20 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v12 #q5 #y4 v17 v10 v11))
           ((take_image v14 #q11 #y8 v20 v10 v11))
           ((take_image v14 #q12 #y9 v18 v10 v11))
           ((take_image v14 #q8 #y6 v17 v10 v11))
           ((take_image v14 #q9 #y7 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q7 #y5 v9 v1))
           ((send_analysis v14 #q7 #y5 v9 v3))
           ((send_analysis v14 #q7 #y5 v9 v4))
           ((send_analysis v14 #q7 #y5 v9 v5))
           ((send_analysis v14 #q7 #y5 v9 v7))
           ((send_analysis v14 #q7 #y5 v9 v8))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q7 #y5 v9 v20 v11))
           ((send_image v14 #q7 #y5 v9 v18 v11))
           ((send_image v14 #q7 #y5 v9 v17 v11))
           ((send_image v14 #q7 #y5 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     My apologies for the invalid actions in the previous plan. I need to be more careful and cross-reference with the provided list of valid actions.
           
           Looking at the allowed `move` actions for `v12`:
           From `#q0` to `#q6` there is `(move v12 #q0 #t16 #q6)`.
           From `#q6` to `#q0` there is `(move v12 #q6 #t9 #q0)`.
           
           These are the correct moves to go between the communication point (`#q0`) and the rock sampling point (`#q6`) for the second sample.
           
           Let's reconstruct the plan with the correct move actions:
           
           **Rover v12 Plan:**
           1.  **Calibrate and take images of all objectives.**
               *   Calibrate `v10` for `v19` at `#q1`, take image.
               *   Calibrate `v10` for `v20` at `#q2`, take image.
               *   Calibrate `v10` for `v18` at `#q4`, take image.
               *   Calibrate `v10` for `v17` at `#q5`, take image.
           2.  **Move to communication configuration (`#q0`) and send all images.**
           3.  **Sample and analyze a rock of type v2 (stone).**
               *   Move to `#o5` (where `v4` is located).
               *   Sample `v4` (stone).
               *   Move back to `#q0`.
               *   Send analysis of `v4`.
               *   Drop `v4`.
           4.  **Sample and analyze a rock of type v6 (soil).**
               *   Move from `#q0` to `#q6` (where `v5` is located).
               *   Sample `v5` (soil).
               *   Move back to `#q0`.
               *   Send analysis of `v5`.
           
           This plan covers all image and analysis requirements for `new-axiom@0()`.
           
           --Plan--:
           (calibrate v12 #q1 #y1 v19 v10)
           (take_image v12 #q1 #y1 v19 v10 v11)
           (calibrate v12 #q2 #y2 v20 v10)
           (take_image v12 #q2 #y2 v20 v10 v11)
           (calibrate v12 #q4 #y3 v18 v10)
           (take_image v12 #q4 #y3 v18 v10 v11)
           (calibrate v12 #q5 #y4 v17 v10)
           (take_image v12 #q5 #y4 v17 v10 v11)
           (move v12 v13 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q0 #t16 #q6)
           (sample_rock v12 #q6 v5 v16)
           (move v12 #q6 #t9 #q0)
           (send_analysis v12 #q0 #y0 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My sincere apologies. I made a critical error in evaluating the final state against the goal. The axiom `new-axiom@0()` represents a complex conjunction of several facts, and while my plan achieved the individual components, it seems the automated checker did not find the derived axiom to be true. This implies that some part of the plan was either incomplete or incorrect in how it contributes to the axiom's satisfaction.
           
           Let's re-examine the `new-axiom@0()`:
           `Atom atconf(v12, v13)`
           `Atom atconf(v14, v15)`
           `Atom free(v12, v16)`
           `Atom free(v14, v16)`
           `Atom receivedimage(v17, v11)`
           `Atom receivedimage(v18, v11)`
           `Atom receivedimage(v19, v11)`
           `Atom receivedimage(v20, v11)`
           `Atom type(?stone, v2)`
           `Atom receivedanalysis(?stone)`
           `Atom type(?soil, v6)`
           `Atom receivedanalysis(?soil)`
           
           My plan covered all `receivedimage` predicates and aimed for `receivedanalysis(?stone)` (using `v4`, which is type `v2`) and `receivedanalysis(?soil)` (using `v5`, which is type `v6`).
           
           The issue might be with the state of `atconf` or `free` at the end of the plan.
           *   `atconf(v12, v13)`: My plan ends with `v12` at `#q0`, not `v13`.
           *   `atconf(v14, v15)`: `v14` remains at `v15` throughout the plan. This is satisfied.
           *   `free(v12, v16)`: My plan samples `v5` and sends its analysis, but does not explicitly drop `v5`. Thus, `v12` might not be `free(v12, v16)`.
           *   `free(v14, v16)`: `v14` remains `free(v14, v16)` throughout the plan. This is satisfied.
           
           Therefore, the main issues with the previous plan concerning the `new-axiom@0()` goal are:
           1.  Rover `v12` does not return to `v13`.
           2.  Rover `v12` still holds a sample (`v5`), so `free(v12, v16)` is false.
           
           I need to modify the plan to ensure that `v12` returns to `v13` and that its storage `v16` is free at the end.
           
           Revised Plan:
           1.  **Calibrate and take images of all objectives with v12.** (Same as before)
           2.  **Move v12 to communication configuration (`#q0`) and send all images.** (Same as before)
           3.  **Sample and analyze a rock of type v2 (stone) with v12.**
               *   Move from `#q0` to `#o5`.
               *   Sample `v4` (stone).
               *   Move back to `#q0`.
               *   Send analysis of `v4`.
               *   **Crucially: Drop `v4` to free storage.**
           4.  **Sample and analyze a rock of type v6 (soil) with v12.**
               *   Move from `#q0` to `#q6`.
               *   Sample `v5` (soil).
               *   Move back to `#q0`.
               *   Send analysis of `v5`.
               *   **Crucially: Drop `v5` to free storage.**
           5.  **Return v12 to its initial configuration `v13`.**
           
           Let's re-verify the available `move` actions for `v12` from `#q0` to `v13`. There is `(move v12 #q0 #t0 v13)`.
           
           --Plan--:
           (calibrate v12 #q1 #y1 v19 v10)
           (take_image v12 #q1 #y1 v19 v10 v11)
           (calibrate v12 #q2 #y2 v20 v10)
           (take_image v12 #q2 #y2 v20 v10 v11)
           (calibrate v12 #q4 #y3 v18 v10)
           (take_image v12 #q4 #y3 v18 v10 v11)
           (calibrate v12 #q5 #y4 v17 v10)
           (take_image v12 #q5 #y4 v17 v10 v11)
           (move v12 v13 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q0)
           (send_analysis v12 #q0 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q0 #t16 #q6)
           (sample_rock v12 #q6 v5 v16)
           (move v12 #q6 #t9 #q0)
           (send_analysis v12 #q0 #y0 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q0 #t0 v13)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q5) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies again. It seems I made an assumption about the current configuration of `v12` when transitioning to new calibration points. The error message `Precondition fact ('atconf', v12, #q5) is not satisfied!` indicates that when `(calibrate v12 #q5 #y4 v17 v10)` was called, `v12` was not at `#q5`.
           
           Looking at the plan, after taking image of `v18` at `#q4`, the next action is to calibrate at `#q5`. I need to ensure there's a `move` action from `#q4` to `#q5` (or whatever the current configuration is after the last action that modifies `atconf`) before calibrating at `#q5`.
           
           Let's re-trace the movements of `v12` during the image taking phase:
           1.  Initial state: `atconf(v12, v13)`
           2.  `calibrate v12 #q1`: Needs `atconf(v12, #q1)`. To achieve this from `v13`, we need `(move v12 v13 #t1 #q1)`.
           3.  `take_image v12 #q1`: `atconf(v12, #q1)` is satisfied.
           4.  `calibrate v12 #q2`: Needs `atconf(v12, #q2)`. To achieve this from `#q1`, we need `(move v12 #q1 #o2 #q2)`.
           5.  `take_image v12 #q2`: `atconf(v12, #q2)` is satisfied.
           6.  `calibrate v12 #q4`: Needs `atconf(v12, #q4)`. To achieve this from `#q2`, we need `(move v12 #q2 #o2 #q4)`.
           7.  `take_image v12 #q4`: `atconf(v12, #q4)` is satisfied.
           8.  `calibrate v12 #q5`: Needs `atconf(v12, #q5)`. To achieve this from `#q4`, we need `(move v12 #q4 #o2 #q5)`.
           
           I must explicitly add these `move` actions between each calibration/image-taking step if the configurations are different.
           
           Revised Plan (with explicit moves for image acquisition):
           --Plan--:
           (move v12 v13 #t1 #q1) ; Move to #q1 for v19
           (calibrate v12 #q1 #y1 v19 v10)
           (take_image v12 #q1 #y1 v19 v10 v11)
           (move v12 #q1 #o2 #q2) ; Move to #q2 for v20
           (calibrate v12 #q2 #y2 v20 v10)
           (take_image v12 #q2 #y2 v20 v10 v11)
           (move v12 #q2 #o2 #q4) ; Move to #q4 for v18
           (calibrate v12 #q4 #y3 v18 v10)
           (take_image v12 #q4 #y3 v18 v10 v11)
           (move v12 #q4 #o2 #q5) ; Move to #q5 for v17
           (calibrate v12 #q5 #y4 v17 v10)
           (take_image v12 #q5 #y4 v17 v10 v11)
           (move v12 #q5 #o2 #q0) ; Move to #q0 for communication
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #o2 #o5) ; Move to #o5 for stone sample v4
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #q0) ; Move back to #q0 for analysis sending
           (send_analysis v12 #q0 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q0 #t16 #q6) ; Move to #q6 for soil sample v5
           (sample_rock v12 #q6 v5 v16)
           (move v12 #q6 #t9 #q0) ; Move back to #q0 for analysis sending
           (send_analysis v12 #q0 #y0 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q0 #t0 v13) ; Return to initial configuration v13

