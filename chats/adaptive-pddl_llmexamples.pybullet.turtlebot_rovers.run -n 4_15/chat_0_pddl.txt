User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v14, v16)
           Atom conf(v12, v13)
           Atom type(v4, v2)
           Atom rock(v4)
           Atom rover(v12)
           Atom type(v3, v2)
           Atom objective(v18)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom lander(v9)
           Atom objective(v17)
           Atom atconf(v14, v15)
           Atom type(v1, v2)
           Atom type(v5, v6)
           Atom free(v12, v16)
           Atom rock(v3)
           Atom supports(v10, v11)
           Atom type(v7, v6)
           Atom objective(v19)
           Atom conf(v14, v15)
           Atom rock(v5)
           Atom rock(v7)
           Atom camera(v10)
           Atom store(v16)
           Atom onboard(v10, v14)
           Atom rock(v1)
           Atom type(v8, v6)
           Atom mode(v11)
           Atom rock(v8)
           Atom objective(v20)
           Atom atconf(v12, v13)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #o5, v4)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v8)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), and a store (v16). There are multiple rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). The camera supports a specific mode (v11). Both rovers are currently at their initial configurations (v13 for v12, v15 for v14) and have a free store (v16). The goal `new-axiom@0()` represents a complex state that requires several subgoals to be met:
           
           1.  `atconf(v12, v13)`: Rover v12 is at configuration v13. (Already true)
           2.  `atconf(v14, v15)`: Rover v14 is at configuration v15. (Already true)
           3.  `free(v12, v16)`: Rover v12 has a free store v16. (Already true)
           4.  `free(v14, v16)`: Rover v14 has a free store v16. (Already true)
           5.  `receivedimage(v17, v11)`: An image of objective v17 in mode v11 has been received.
           6.  `receivedimage(v18, v11)`: An image of objective v18 in mode v11 has been received.
           7.  `receivedimage(v19, v11)`: An image of objective v19 in mode v11 has been received.
           8.  `receivedimage(v20, v11)`: An image of objective v20 in mode v11 has been received.
           9.  `type(?stone, v2)`: Some object of type `stone` exists as v2. (This is a type, not an instance. The problem states `type(v4, v2)` and `rock(v4)`, so v4 is a rock of type v2. The variable `?stone` implies we need to analyze *some* rock of type v2.)
           10. `receivedanalysis(?stone)`: An analysis of a rock of type v2 has been received.
           11. `type(?soil, v6)`: Some object of type `soil` exists as v6. (The problem states `type(v5, v6)` and `rock(v5)`, so v5 is a rock of type v6. The variable `?soil` implies we need to analyze *some* rock of type v6.)
           12. `receivedanalysis(?soil)`: An analysis of a rock of type v6 has been received.
           
           Looking at the available actions:
           *   `move` actions are available for both rovers, but only to move to their current configuration. This means no movement is possible.
           *   `drop_rock` actions are available for both rovers if their stores are full, which they are not.
           
           Since no `take_image`, `calibrate`, `send_image`, `sample_rock`, or `send_analysis` actions are listed as valid, and these actions are necessary to achieve the `receivedimage` and `receivedanalysis` subgoals, the goal is unreachable. The only available actions (`move` to current location and `drop_rock` on an empty store) do not contribute to satisfying any of the missing goal predicates.
           
           --Plan--:

