User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom type(v5, v6)
           Atom free(v12, v16)
           Atom supports(v10, v11)
           Atom atconf(v12, v13)
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom type(v7, v6)
           Atom objective(v17)
           Atom rover(v14)
           Atom store(v16)
           Atom type(v3, v2)
           Atom free(v14, v16)
           Atom rover(v12)
           Atom objective(v19)
           Atom atconf(v14, v15)
           Atom onboard(v10, v12)
           Atom onboard(v10, v14)
           Atom type(v4, v2)
           Atom conf(v12, v13)
           Atom rock(v7)
           Atom mode(v11)
           Atom camera(v10)
           Atom rock(v4)
           Atom rock(v1)
           Atom rock(v5)
           Atom objective(v18)
           Atom lander(v9)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v12, #q2, #y1, v19)
           Atom imagerange(v12, #q2, v19)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q4, #y3, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v5)
           Atom above(v12, #o5, v3)
           Atom above(v14, #q5, v3)
           Atom conf(v14, #q5)
           Atom above(v14, #q1, v8)
           Atom conf(v14, #q1)
           Atom above(v12, #o5, v8)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #t3, v13)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, v13, #t11, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t6, #q3)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, v13, #t10, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #t5, #q3)
           Atom motion(v12, #q4, #t13, #q6)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, v15, #t8, #q5)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #t7, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #t1, #q0)
           Atom motion(v14, #q5, #t14, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q0, #t2, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, v13, #t9, #q2)
           Atom motion(v12, #q2, #t4, #q3)
           Atom motion(v12, #q2, #t12, #q4)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q5, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q5)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q1, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q1 v8 v16))
           ((sample_rock v14 #q5 v3 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t12 #q4))
           ((move v12 #q2 #t4 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #t3 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t13 #q6))
           ((move v12 #q4 #t5 #q3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t6 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q4))
           ((move v12 v13 #t11 #q6))
           ((move v12 v13 #t9 #q2))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q0 #t2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q0))
           ((move v14 #q5 #o2 #o3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t14 #q0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t7 #q1))
           ((move v14 v15 #t8 #q5))
           ((calibrate v12 #q2 #y1 v19 v10))
           ((calibrate v12 #q4 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q2 #y1 v19 v10 v11))
           ((take_image v12 #q4 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene involves two rovers (v12 and v14), a lander (v9), a camera (v10), and various rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19). Both rovers have a storage unit (v16) and are initially at specific configurations (v13 for v12, v15 for v14). The camera (v10) is onboard both rovers and supports mode v11. The goal `new-axiom@0()` can be satisfied by various combinations of conditions, including receiving images for objectives, receiving analysis for rocks, and having free storage or specific rover configurations. Examining the axiom, a simpler way to achieve it is to fulfill the conditions:
           `receivedimage(v17, v11)`
           `receivedimage(v18, v11)`
           `receivedimage(v19, v11)`
           `receivedanalysis(?stone)` (e.g., v3 which is type v2 (stone))
           `receivedanalysis(?soil)` (e.g., v8 which is type v6 (soil))
           and that both rovers (v12 and v14) have free storage (v16) and are at any configuration. The initial state already has `free(v12, v16)` and `free(v14, v16)`, and both rovers are at a configuration.
           
           Therefore, the plan should focus on:
           1. Taking images of objectives v17, v18, and v19 using one or both rovers.
           2. Sending these images to the lander.
           3. Sampling a rock of type v2 (stone, e.g., v3).
           4. Sampling a rock of type v6 (soil, e.g., v8).
           5. Sending the analysis of these sampled rocks to the lander.
           
           Let's use rover v12 for image collection and sending, and rover v14 for rock sampling and analysis sending.
           
           For rover v12:
           - Calibrate the camera for objectives v17, v18, v19.
           - Take images of objectives v17, v18, v19.
           - Send images of objectives v17, v18, v19.
           
           For rover v14:
           - Sample a rock of type stone (v3).
           - Sample a rock of type soil (v8).
           - Send analysis of the sampled rocks.
           
           The initial state already has `atconf(v12, v13)` and `atconf(v14, v15)`.
           
           For v12 to take images:
           - It can move to #q4 for v17, #q6 for v18, #q2 for v19.
           - It is at v13, so it needs to move to these configs.
           - Let's use #q4 for v17, #q6 for v18, and #q2 for v19.
           - Then, it moves to #q3 to send all images.
           
           For v14 to sample rocks:
           - It can move to #q5 for v3, and #q1 for v8.
           - Then, it moves to #q0 to send analysis.
           
           Plan:
           1. Rover v12 moves to #q4.
           2. Rover v12 calibrates camera for v17.
           3. Rover v12 takes image of v17.
           4. Rover v12 moves to #q6.
           5. Rover v12 calibrates camera for v18.
           6. Rover v12 takes image of v18.
           7. Rover v12 moves to #q2.
           8. Rover v12 calibrates camera for v19.
           9. Rover v12 takes image of v19.
           10. Rover v12 moves to #q3.
           11. Rover v12 sends images of v17, v18, v19.
           12. Rover v14 moves to #q5.
           13. Rover v14 samples rock v3 (stone).
           14. Rover v14 moves to #q1.
           15. Rover v14 samples rock v8 (soil).
           16. Rover v14 moves to #q0.
           17. Rover v14 sends analysis of v3 and v8.
           
           --Plan--:
           (move v12 v13 #t10 #q4)
           (calibrate v12 #q4 #y3 v17 v10)
           (take_image v12 #q4 #y3 v17 v10 v11)
           (move v12 #q4 #t13 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #o2 #q2)
           (calibrate v12 #q2 #y1 v19 v10)
           (take_image v12 #q2 #y1 v19 v10 v11)
           (move v12 #q2 #t4 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (move v14 v15 #t8 #q5)
           (sample_rock v14 #q5 v3 v16)
           (move v14 #q5 #o2 #q1)
           (sample_rock v14 #q1 v8 v16)
           (move v14 #q1 #t1 #q0)
           (send_analysis v14 #q0 #y0 v9 v3)
           (send_analysis v14 #q0 #y0 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. The axiom states that several conditions must be met:
           1. `atconf(v12, v13)`
           2. `atconf(v14, v15)`
           3. `free(v12, v16)`
           4. `free(v14, v16)`
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `type(?stone, v2)` and `receivedanalysis(?stone)`
           9. `type(?soil, v6)` and `receivedanalysis(?soil)`
           
           My previous plan correctly focused on achieving points 5, 6, 7, 8, and 9. However, the plan caused the rovers to move, which changes their `atconf` state. To satisfy conditions 1 and 2 of the axiom, the rovers must *end up* at their initial configurations (v13 for v12 and v15 for v14). My previous plan left them at different configurations (#q3 for v12 and #q0 for v14).
           
           Therefore, the plan needs to include movements for both rovers to return to their initial configurations after completing all other tasks.
           
           Let's refine the plan:
           For rover v12:
           - Move to #q4, calibrate and take image of v17.
           - Move to #q6, calibrate and take image of v18.
           - Move to #q2, calibrate and take image of v19.
           - Move to #q3 (lander communication spot).
           - Send images of v17, v18, v19.
           - **Move back to v13 (initial configuration).**
           
           For rover v14:
           - Move to #q5, sample rock v3 (stone).
           - Move to #q1, sample rock v8 (soil).
           - Move to #q0 (lander communication spot).
           - Send analysis of v3 and v8.
           - **Move back to v15 (initial configuration).**
           
           This way, all sub-goals of the axiom can be met.
           
           --Plan--:
           (move v12 v13 #t10 #q4)
           (calibrate v12 #q4 #y3 v17 v10)
           (take_image v12 #q4 #y3 v17 v10 v11)
           (move v12 #q4 #t13 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #o2 #q2)
           (calibrate v12 #q2 #y1 v19 v10)
           (take_image v12 #q2 #y1 v19 v10 v11)
           (move v12 #q2 #t4 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (move v12 #q3 #t3 v13)
           (move v14 v15 #t8 #q5)
           (sample_rock v14 #q5 v3 v16)
           (move v14 #q5 #o2 #q1)
           (sample_rock v14 #q1 v8 v16)
           (move v14 #q1 #t1 #q0)
           (send_analysis v14 #q0 #y0 v9 v3)
           (send_analysis v14 #q0 #y0 v9 v8)
           (move v14 #q0 #t2 v15)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal `new-axiom@0()` requires several conditions to be true simultaneously at the end of the plan. I previously made an error in understanding the axiom, which requires:
           1. `atconf(v12, v13)`: Rover v12 must be at configuration v13.
           2. `atconf(v14, v15)`: Rover v14 must be at configuration v15.
           3. `free(v12, v16)`: Rover v12's storage v16 must be free.
           4. `free(v14, v16)`: Rover v14's storage v16 must be free.
           5. `receivedimage(v17, v11)`: Image of objective v17 in mode v11 must be received.
           6. `receivedimage(v18, v11)`: Image of objective v18 in mode v11 must be received.
           7. `receivedimage(v19, v11)`: Image of objective v19 in mode v11 must be received.
           8. `type(?stone, v2)` and `receivedanalysis(?stone)`: Analysis of a rock of type v2 (stone) must be received.
           9. `type(?soil, v6)` and `receivedanalysis(?soil)`: Analysis of a rock of type v6 (soil) must be received.
           
           My previous attempts correctly identified that the `atconf` states needed to be restored. However, I overlooked the `free(v12, v16)` and `free(v14, v16)` conditions. When a rover `sample_rock` action is performed, the storage (`v16`) becomes `full`. To satisfy the goal, the sampled rocks must be `drop_rock`ed before the end of the plan to make the storage `free` again.
           
           So the updated plan strategy is:
           
           For rover v12 (image tasks):
           - Move to #q4, calibrate, take image of v17.
           - Move to #q6, calibrate, take image of v18.
           - Move to #q2, calibrate, take image of v19.
           - Move to #q3 (comms position).
           - Send images of v17, v18, v19.
           - Move back to v13 (initial configuration for `atconf` goal).
           
           For rover v14 (sampling and analysis tasks):
           - Move to #q5, sample rock v3 (stone). This makes v14's storage `full`.
           - **Drop rock from v14's storage to make it `free` again.**
           - Move to #q1, sample rock v8 (soil). This makes v14's storage `full` again.
           - **Drop rock from v14's storage to make it `free` again.** (Note: `analyzed` remains true even if the rock is dropped. We just need to make the store free for the axiom).
           - Move to #q0 (comms position).
           - Send analysis of v3 and v8.
           - Move back to v15 (initial configuration for `atconf` goal).
           
           Let's carefully construct the plan using the available actions and ensure all preconditions and postconditions align with the goal.
           
           Initial state confirms `rock(v3)` is type v2 (stone) and `rock(v8)` is type v6 (soil).
           `onboard(v10, v12)` and `onboard(v10, v14)` are true, and `supports(v10, v11)` is true.
           
           --Plan--:
           (move v12 v13 #t10 #q4)
           (calibrate v12 #q4 #y3 v17 v10)
           (take_image v12 #q4 #y3 v17 v10 v11)
           (move v12 #q4 #t13 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #o2 #q2)
           (calibrate v12 #q2 #y1 v19 v10)
           (take_image v12 #q2 #y1 v19 v10 v11)
           (move v12 #q2 #t4 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (move v12 #q3 #t3 v13)
           (move v14 v15 #t8 #q5)
           (sample_rock v14 #q5 v3 v16)
           (drop_rock v14 v16)
           (move v14 #q5 #o2 #q1)
           (sample_rock v14 #q1 v8 v16)
           (drop_rock v14 v16)
           (move v14 #q1 #t1 #q0)
           (send_analysis v14 #q0 #y0 v9 v3)
           (send_analysis v14 #q0 #y0 v9 v8)
           (move v14 #q0 #t2 v15)

