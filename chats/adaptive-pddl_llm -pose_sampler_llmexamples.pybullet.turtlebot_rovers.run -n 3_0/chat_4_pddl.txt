User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom type(v5, v6)
           Atom free(v12, v16)
           Atom supports(v10, v11)
           Atom atconf(v12, v13)
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom type(v7, v6)
           Atom objective(v17)
           Atom rover(v14)
           Atom store(v16)
           Atom type(v3, v2)
           Atom free(v14, v16)
           Atom rover(v12)
           Atom objective(v19)
           Atom atconf(v14, v15)
           Atom onboard(v10, v12)
           Atom onboard(v10, v14)
           Atom type(v4, v2)
           Atom conf(v12, v13)
           Atom rock(v7)
           Atom mode(v11)
           Atom camera(v10)
           Atom rock(v4)
           Atom rock(v1)
           Atom rock(v5)
           Atom objective(v18)
           Atom lander(v9)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q2, #y1, v19)
           Atom imagerange(v12, #q2, v19)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v1)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q4, #y3, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v7)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v3)
           Atom above(v14, #q5, v3)
           Atom conf(v14, #q5)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q1, v8)
           Atom conf(v14, #q1)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t9, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #t10, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q2, #t12, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t2, v15)
           Atom motion(v14, #q5, #t14, #q0)
           Atom motion(v14, v15, #t8, #q5)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q2, #t4, #q3)
           Atom motion(v12, #q3, #t3, v13)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q4, #t5, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #t13, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #t15, #q2)
           Atom motion(v12, #q6, #t6, #q3)
           Atom motion(v12, v13, #t11, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, v15, #t7, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q5, #t16, #q1)
           Atom motion(v14, #q1, #t1, #q0)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q5)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #q5, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q1 v8 v16))
           ((sample_rock v14 #q5 v3 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t12 #q4))
           ((move v12 #q2 #t4 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #t3 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t13 #q6))
           ((move v12 #q4 #t5 #q3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t15 #q2))
           ((move v12 #q6 #t6 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q4))
           ((move v12 v13 #t11 #q6))
           ((move v12 v13 #t9 #q2))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q0 #t2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q0))
           ((move v14 #q5 #o2 #o3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t14 #q0))
           ((move v14 #q5 #t16 #q1))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t7 #q1))
           ((move v14 v15 #t8 #q5))
           ((calibrate v12 #q2 #y1 v19 v10))
           ((calibrate v12 #q4 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q2 #y1 v19 v10 v11))
           ((take_image v12 #q4 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), and a storage unit (v16). There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19) to be analyzed and imaged. The camera (v10) supports mode (v11). Both rovers are currently at specific configurations (v13 for v12, v15 for v14) and have free storage (v16). The goal `new-axiom@0()` represents a complex state where images of three objectives (v17, v18, v19) have been received in mode (v11), and analyses of two types of rocks (v2 for stone and v6 for soil) have been received. It also implies that both rovers are at some configurations and have free storage. Since both rovers start with free storage and the goal states this, we don't need to drop any rocks unless we fill the storage.
           
           Let's break down the goal:
           1. `receivedimage(v17, v11)`
           2. `receivedimage(v18, v11)`
           3. `receivedimage(v19, v11)`
           4. `receivedanalysis(?stone)` where `type(?stone, v2)`
           5. `receivedanalysis(?soil)` where `type(?soil, v6)`
           
           We have rocks of type `v2` (v1, v3, v4) and `v6` (v5, v7, v8).
           
           To achieve `receivedimage` goals, we need to:
           1. Calibrate the camera.
           2. Take an image of the objective.
           3. Send the image to the lander.
           
           To achieve `receivedanalysis` goals, we need to:
           1. Sample a rock of the correct type.
           2. Send the analysis of the rock.
           
           Let's use rover v12 to get images and rover v14 to get rock samples, as they seem to have good initial configurations for these tasks.
           
           **For images (using rover v12):**
           
           *   **Objective v19:**
               *   Rover v12 is at v13. To image v19, it needs to be at #q2. There's a motion `(motion v12 v13 #t9 #q2)`.
               *   From #q2, it can calibrate for v19: `(calibrate v12 #q2 #y1 v19 v10)`.
               *   Then take image: `(take_image v12 #q2 #y1 v19 v10 v11)`.
               *   To send the image, it needs to move to #q3: `(move v12 #q2 #t4 #q3)`.
               *   Then send image: `(send_image v12 #q3 #y2 v9 v19 v11)`.
           
           *   **Objective v17:**
               *   From #q3, it needs to move to #q4 for v17: `(move v12 #q3 #o2 #q4)`.
               *   Calibrate for v17: `(calibrate v12 #q4 #y3 v17 v10)`.
               *   Take image: `(take_image v12 #q4 #y3 v17 v10 v11)`.
               *   Move back to #q3 to send: `(move v12 #q4 #t5 #q3)`.
               *   Send image: `(send_image v12 #q3 #y2 v9 v17 v11)`.
           
           *   **Objective v18:**
               *   From #q3, it needs to move to #q6 for v18: `(move v12 #q3 #o2 #q6)`.
               *   Calibrate for v18: `(calibrate v12 #q6 #y4 v18 v10)`.
               *   Take image: `(take_image v12 #q6 #y4 v18 v10 v11)`.
               *   Move back to #q3 to send: `(move v12 #q6 #t6 #q3)`.
               *   Send image: `(send_image v12 #q3 #y2 v9 v18 v11)`.
           
           **For analysis (using rover v14):**
           
           *   **Rock type v2 (stone):** We can use rock v3.
               *   Rover v14 is at v15. To sample v3, it needs to be at #q5. There's a motion `(motion v14 v15 #t8 #q5)`.
               *   Sample rock v3: `(sample_rock v14 #q5 v3 v16)`.
               *   To send analysis, it needs to move to #q0: `(move v14 #q5 #t14 #q0)`.
               *   Send analysis: `(send_analysis v14 #q0 #y0 v9 v3)`.
           
           *   **Rock type v6 (soil):** We can use rock v8.
               *   From #q0, it needs to move to #q1 for v8: `(move v14 #q0 #t0 #q1)`.
               *   Sample rock v8: `(sample_rock v14 #q1 v8 v16)`.
               *   Move back to #q0 to send: `(move v14 #q1 #t1 #q0)`.
               *   Send analysis: `(send_analysis v14 #q0 #y0 v9 v8)`.
           
           This plan seems to cover all aspects of the goal. The critical part is ensuring the camera is calibrated before taking each image, and then sending the image. Similarly, rocks need to be sampled before analysis can be sent. The `free(rover, store)` precondition is met initially, and we only sample two rocks with one store per rover, so `full` and `free` predicates should not conflict.
           
           --Plan--:
           (move v12 v13 #t9 #q2)
           (calibrate v12 #q2 #y1 v19 v10)
           (take_image v12 #q2 #y1 v19 v10 v11)
           (move v12 #q2 #t4 #q3)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (move v12 #q3 #o2 #q4)
           (calibrate v12 #q4 #y3 v17 v10)
           (take_image v12 #q4 #y3 v17 v10 v11)
           (move v12 #q4 #t5 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (move v12 #q3 #o2 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t6 #q3)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (move v14 v15 #t8 #q5)
           (sample_rock v14 #q5 v3 v16)
           (move v14 #q5 #t14 #q0)
           (send_analysis v14 #q0 #y0 v9 v3)
           (move v14 #q0 #t0 #q1)
           (sample_rock v14 #q1 v8 v16)
           (move v14 #q1 #t1 #q0)
           (send_analysis v14 #q0 #y0 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not explicitly achieved in the PDDL output, even though the sub-goals were met. The `new-axiom@0()` is an axiom that becomes true when all the sub-conditions are met. My previous reasoning covered all conditions for this axiom to become true. I need to re-evaluate the plan, making sure each step directly contributes to these conditions and that all intermediate preconditions are met.
           
           Let's re-verify the conditions for `new-axiom@0()`:
           1. `atconf(v12, v13)`: This is initially true for rover v12, but we move v12 around. The goal implies that it's okay for the rover to be *at some configuration*. The specific `v13` might not be strictly necessary if any configuration is fine at the end. The axiom has `atconf(v12, v13)` and `atconf(v14, v15)`. This implies the rovers must end up in *those specific* configurations for the axiom to fire. This is a critical detail I missed. I need to move the rovers back to their initial `atconf` if they moved.
           2. `atconf(v14, v15)`: Same as above for rover v14.
           3. `free(v12, v16)`: Rover v12 starts free. If it samples, it must drop the rock to be free again.
           4. `free(v14, v16)`: Rover v14 starts free. If it samples, it must drop the rock to be free again.
           5. `receivedimage(v17, v11)`: Image of objective v17 received.
           6. `receivedimage(v18, v11)`: Image of objective v18 received.
           7. `receivedimage(v19, v11)`: Image of objective v19 received.
           8. `type(?stone, v2)` and `receivedanalysis(?stone)`: Analysis of a rock of type v2 received.
           9. `type(?soil, v6)` and `receivedanalysis(?soil)`: Analysis of a rock of type v6 received.
           
           Let's re-plan carefully, ensuring that the rovers return to their initial configurations and that `free` storage is maintained, if samples are taken.
           
           **Rover v12 for Imaging & returning to v13 and free(v12,v16):**
           
           *   Goal: `receivedimage(v19, v11)`
               *   `move v12 v13 #t9 #q2` (at #q2)
               *   `calibrate v12 #q2 #y1 v19 v10`
               *   `take_image v12 #q2 #y1 v19 v10 v11`
               *   `move v12 #q2 #t4 #q3` (at #q3 for communication)
               *   `send_image v12 #q3 #y2 v9 v19 v11`
           *   Goal: `receivedimage(v17, v11)`
               *   `move v12 #q3 #o2 #q4` (at #q4)
               *   `calibrate v12 #q4 #y3 v17 v10`
               *   `take_image v12 #q4 #y3 v17 v10 v11`
               *   `move v12 #q4 #t5 #q3` (at #q3 for communication)
               *   `send_image v12 #q3 #y2 v9 v17 v11`
           *   Goal: `receivedimage(v18, v11)`
               *   `move v12 #q3 #o2 #q6` (at #q6)
               *   `calibrate v12 #q6 #y4 v18 v10`
               *   `take_image v12 #q6 #y4 v18 v10 v11`
               *   `move v12 #q6 #t6 #q3` (at #q3 for communication)
               *   `send_image v12 #q3 #y2 v9 v18 v11`
           *   Return v12 to v13:
               *   `move v12 #q3 #t3 v13` (at v13)
           
           **Rover v14 for Analysis & returning to v15 and free(v14,v16):**
           
           *   Goal: `receivedanalysis(?stone)` (`type(?stone, v2)`) - using rock v3
               *   `move v14 v15 #t8 #q5` (at #q5)
               *   `sample_rock v14 #q5 v3 v16` (Now `full(v14, v16)`)
               *   `move v14 #q5 #t14 #q0` (at #q0 for communication)
               *   `send_analysis v14 #q0 #y0 v9 v3`
               *   `drop_rock v14 v16` (Now `free(v14, v16)`)
           *   Goal: `receivedanalysis(?soil)` (`type(?soil, v6)`) - using rock v8
               *   `move v14 #q0 #t0 #q1` (at #q1)
               *   `sample_rock v14 #q1 v8 v16` (Now `full(v14, v16)`)
               *   `move v14 #q1 #t1 #q0` (at #q0 for communication)
               *   `send_analysis v14 #q0 #y0 v9 v8`
               *   `drop_rock v14 v16` (Now `free(v14, v16)`)
           *   Return v14 to v15:
               *   `move v14 #q0 #t2 v15` (at v15)
           
           This revised plan addresses the `atconf` and `free` predicates explicitly at the end of the plan for the `new-axiom@0()` goal.
           
           --Plan--:
           (move v12 v13 #t9 #q2)
           (calibrate v12 #q2 #y1 v19 v10)
           (take_image v12 #q2 #y1 v19 v10 v11)
           (move v12 #q2 #t4 #q3)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (move v12 #q3 #o2 #q4)
           (calibrate v12 #q4 #y3 v17 v10)
           (take_image v12 #q4 #y3 v17 v10 v11)
           (move v12 #q4 #t5 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (move v12 #q3 #o2 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t6 #q3)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (move v12 #q3 #t3 v13)
           (move v14 v15 #t8 #q5)
           (sample_rock v14 #q5 v3 v16)
           (move v14 #q5 #t14 #q0)
           (send_analysis v14 #q0 #y0 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q0 #t0 #q1)
           (sample_rock v14 #q1 v8 v16)
           (move v14 #q1 #t1 #q0)
           (send_analysis v14 #q0 #y0 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q0 #t2 v15)

