User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v4, v5)
           Atom type(v8, v17)
           Atom graspable(v8)
           Atom stackable(v8, v10)
           Atom supported(v12, v13, v14)
           Atom bconf(v3)
           Atom stackable(v8, v18)
           Atom arm(v6)
           Atom atbconf(v3)
           Atom graspable(v12)
           Atom aconf(v6, v7)
           Atom pose(v15, v16)
           Atom pose(v12, v13)
           Atom handempty(v6)
           Atom handempty(v4)
           Atom canmove()
           Atom pose(v8, v9)
           Atom atpose(v12, v13)
           Atom controllable(v4)
           Atom ataconf(v4, v5)
           Atom graspable(v15)
           Atom atpose(v15, v16)
           Atom supported(v15, v16, v11)
           Atom arm(v4)
           Atom stackable(v15, v10)
           Atom atpose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom ataconf(v6, v7)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom stackable(v12, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #g1)
           Atom grasp(v15, #o1)
           Atom grasp(v8, #g0)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v18)
           Atom bconf(#q3)
           Atom atraj(#t5)
           Atom kin(v4, v12, #p1, #g1, #q3, #t5)
           Atom bconf(#q2)
           Atom atraj(#t3)
           Atom kin(v4, v12, v13, #g1, #q2, #t3)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v8, #p0, #g0, #q1, #t2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q2)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom btraj(#t6)
           Atom basemotion(#q2, #t6, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(v3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q1, #o0, #q3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q3 #t6))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((move_base v3 #q2 #t4))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p1 #g1 #q3 #t5))
           ((place v4 v12 #p1 #g1 #q3 #t5))
           ((pick v4 v12 v13 #g1 #q2 #t3))
           ((place v4 v12 v13 #g1 #q2 #t3))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p0 #g0 #q1 #t2))
           ((place v4 v8 #p0 #g0 #q1 #t2))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, including `v8`, `v12`, and `v15`, which are all graspable and stackable. `v8` is currently at pose `v9`, `v12` is at pose `v13`, and `v15` is at pose `v16`. All three are supported by `v11`. The robot has two arms, `v4` and `v6`, both currently handempty. The goal `new-axiom@0()` can be satisfied if `on(green, v18)` and `type(green, v17)`. From the initial state, we know `type(v8, v17)` and `type(v12, v17)`. If we can get either `v8` or `v12` onto `v18`, the goal will be achieved. Let's aim to place `v12` on `v18`.
           
           The object `v12` is currently at `v13` and can be moved to `#p1` which is supported by `v18` (`supported(v12, #p1, v18)`).
           The robot arm `v4` can pick `v12` from `v13` using grasp `#g1` at base configuration `#q2` with trajectory `#t3`.
           Then, it can place `v12` at `#p1` using the same grasp `#g1` at base configuration `#q3` with trajectory `#t5`.
           We will need to move the base between picking and placing.
           
           --Plan--:
           (move_base v3 #q2 #t4)
           (pick v4 v12 v13 #g1 #q2 #t3)
           (move_base #q2 #q3 #t6)
           (place v4 v12 #p1 #g1 #q3 #t5)

