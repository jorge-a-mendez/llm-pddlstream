User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g1: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p1: object
           #q2: object
           #q3: object
           #t4: object
           #t5: object
           #t6: object
           @sink: object
           @stove: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v14)
           Atom graspable(v15)
           Atom pose(v15, v16)
           Atom atpose(v15, v16)
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g1)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v12, v13, #g1, #q2, #t4)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v12, #p1, #g1, #q3, #t6)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p1 #g1 #q3 #t6))
           ((place v4 v12 #p1 #g1 #q3 #t6))
           ((pick v4 v12 v13 #g1 #q2 #t4))
           ((place v4 v12 v13 #g1 #q2 #t4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two stackable objects, `v12` and `v15`, and several continuous parameters representing poses, grasps, base configurations, and trajectories. The robot has two arms, `v4` and `v6`, both of which are currently empty. Object `v12` is at pose `v13` and supported by `v14`. Object `v15` is at pose `v16` and supported by `v11`.
           
           The goal is to achieve `new-axiom@0()`, which is defined as `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, we have `type(v12, v17)` and `stackable(v12, v18)`. This means `?green` must be `v12`. Therefore, the goal simplifies to putting `v12` on `v18`.
           
           Currently, `v12` is at `atpose(v12, v13)` and `supported(v12, v13, v14)`. The target `v18` is a surface where `v12` can be placed, as indicated by `stackable(v12, v18)`. We also have `pose(v12, #p1)` and `supported(v12, #p1, v18)`, which implies that `#p1` is a valid pose for `v12` on `v18`.
           
           The plan will involve the following steps:
           1. Move the robot base to a configuration where it can pick up `v12`.
           2. Pick up `v12` from its current pose `v13` using arm `v4`.
           3. Move the robot base to a configuration where it can place `v12` on `v18`.
           4. Place `v12` onto `v18` at pose `#p1` using arm `v4`.
           
           Let's break down the specific actions:
           
           - **Pick `v12`:** The action instance `(pick v4 v12 v13 #g1 #q2 #t4)` allows arm `v4` to pick up `v12` from `v13` using grasp `#g1` with the base at configuration `#q2` and arm trajectory `#t4`. Before this, the robot must be at `atbconf(#q2)`.
           - **Place `v12`:** The action instance `(place v4 v12 #p1 #g1 #q3 #t6)` allows arm `v4` to place `v12` at `#p1` using grasp `#g1` with the base at configuration `#q3` and arm trajectory `#t6`. Before this, the robot must be at `atbconf(#q3)`.
           
           We start at `atbconf(v3)`.
           To pick `v12` from `v13`, we need to be at `atbconf(#q2)`. So, we need to `move_base` from `v3` to `#q2`. There is an action `(move_base v3 #q2 #t5)`.
           After picking `v12`, the robot is holding `v12`.
           To place `v12` at `#p1`, we need to be at `atbconf(#q3)`. So, we need to `move_base` from `#q2` to `#q3`. There is an action `(move_base #q2 #q3 #o0)`.
           Finally, we can place `v12`.
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v12 v13 #g1 #q2 #t4)
           (move_base #q2 #q3 #o0)
           (place v4 v12 #p1 #g1 #q3 #t6)

