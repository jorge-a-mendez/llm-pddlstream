User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.213, 0.203), (-0.123, 0.293)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.271, -0.315), (-0.176, -0.22)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.065, 0.301), (0.016, 0.383)).
           Object v9 is a pose with position (-0.168, 0.248, 0.781) and quaternion (0.0, 0.0, 0.822, 0.569).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.077, 0.492), (0.015, 0.584)).
           Object v17 is a pose with position (-0.224, -0.268, 0.781) and quaternion (0.0, 0.0, 0.968, -0.251).
           Object v15 is a pose with position (-0.025, 0.342, 0.781) and quaternion (0.0, 0.0, 0.089, 0.996).
           Object v13 is a pose with position (-0.031, 0.538, 0.781) and quaternion (0.0, 0.0, -0.834, 0.552).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v6, v7)
           Atom pose(v12, v13)
           Atom ataconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom stackable(v14, v18)
           Atom stackable(v8, v10)
           Atom bconf(v3)
           Atom arm(v6)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom graspable(v16)
           Atom stackable(v16, v18)
           Atom graspable(v12)
           Atom aconf(v4, v5)
           Atom atpose(v14, v15)
           Atom stackable(v12, v10)
           Atom supported(v14, v15, v11)
           Atom supported(v16, v17, v11)
           Atom supported(v12, v13, v11)
           Atom canmove()
           Atom pose(v8, v9)
           Atom stackable(v14, v10)
           Atom graspable(v8)
           Atom pose(v14, v15)
           Atom atbconf(v3)
           Atom controllable(v4)
           Atom handempty(v6)
           Atom pose(v16, v17)
           Atom stackable(v8, v18)
           Atom graspable(v14)
           Atom handempty(v4)
           Atom stackable(v16, v10)
           Atom supported(v8, v9, v11)
           Atom atpose(v16, v17)
           Atom stackable(v12, v18)
           Atom arm(v4)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v18)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom grasp(v16, #o1)
           Atom supported(v16, #o2, v10)
           Atom grasp(v14, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v8, #o1)
           Atom supported(v14, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v12, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v16 #o2 #o1 #o3 #o4))
           ((place v4 v16 #o2 #o1 #o3 #o4))
           ((pick v4 v16 v17 #o1 #o3 #o4))
           ((place v4 v16 v17 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains four objects (v8, v12, v14, v16) that need to be placed on object v18. Initially, all four objects are on v11. The robot's arm `v4` is `handempty` and its base is at `v3`.
           The task is to pick up each object from `v11` and place it onto `v18`. Since all four objects need to be placed on `v18`, and only one arm is available, the robot will have to pick and place each object individually.
           
           Since the goal is to place objects on `v18`, and all of them are currently on `v11`, the plan will involve picking each object from its current pose on `v11` and placing it at a new pose on `v18`. All pick and place actions use the same continuous parameters for grasp (`#o1`), base configuration (`#o3`), and arm trajectory (`#o4`). The initial base configuration `v3` is identical to the target base configuration `#o3` (as implied by `basemotion(v3, #o0, v3)` and `basemotion(#o3, #o0, #o3)` where the cost of moving between them is 0).
           
           The plan will proceed as follows:
           1. Pick `v8` from `v9` on `v11`.
           2. Place `v8` at `#o2` on `v18`.
           3. Pick `v12` from `v13` on `v11`.
           4. Place `v12` at `#o2` on `v18`.
           5. Pick `v14` from `v15` on `v11`.
           6. Place `v14` at `#o2` on `v18`.
           7. Pick `v16` from `v17` on `v11`.
           8. Place `v16` at `#o2` on `v18`.
           
           Note that a specific pose for `#o2` on `v18` needs to be provided for each object, as they will occupy different physical locations.
           
           --Plan--:
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v16 v17 #o1 #o3 #o4)
           (place v4 v16 #o2 #o1 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v18): (0.0 0.0 0.781 0.0)
           (#o2 v12 v18): (0.1 0.0 0.781 0.0)
           (#o2 v14 v18): (-0.1 0.0 0.781 0.0)
           (#o2 v16 v18): (0.0 0.1 0.781 0.0)

User:      Pose #o2 = (0.1 0.0 0.781 0.0) for object v12 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(0.06500000149011612, -0.035), upper=(0.13500000149011612, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (-0.1 0.0 0.781 0.0) for object v14 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(-0.13500000149011612, -0.035), upper=(-0.06500000149011612, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.0 0.1 0.781 0.0) for object v16 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, 0.06500000149011612), upper=(0.035, 0.13500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The previous plan failed due to unstable placements. The AABB of `v18` is `((-0.135, -0.135), (0.135, 0.135))`. I need to ensure that the bounding boxes of the objects placed on `v18` are fully contained within this range. The objects are `v8`, `v12`, `v14`, and `v16`. Let's re-evaluate their AABBs and choose more appropriate positions.
           
           - `v8`: `((-0.213, 0.203), (-0.123, 0.293))` - This object is larger than `v18` in the y-direction. If placed at (0,0,z,theta), the max-y is 0.293, which is outside the 0.135 limit of `v18`. Therefore, `v8` cannot be stably placed on `v18`.
           - `v12`: `((-0.077, 0.492), (0.015, 0.584))` - This object is also larger than `v18` in the y-direction. It cannot be stably placed on `v18`.
           - `v14`: `((-0.065, 0.301), (0.016, 0.383))` - This object is also larger than `v18` in the y-direction. It cannot be stably placed on `v18`.
           - `v16`: `((-0.271, -0.315), (-0.176, -0.22))` - This object is also larger than `v18` in both x and y directions. It cannot be stably placed on `v18`.
           
           It appears that none of the target objects (`v8`, `v12`, `v14`, `v16`) can be stably placed on `v18` because their bounding boxes are too large compared to `v18`. Therefore, the goal is unachievable with the given objects and surface.

