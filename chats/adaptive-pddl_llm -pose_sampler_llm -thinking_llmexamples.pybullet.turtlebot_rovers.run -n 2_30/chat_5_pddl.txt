User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v14, v15)
           Atom rock(v4)
           Atom rock(v7)
           Atom type(v8, v6)
           Atom conf(v12, v13)
           Atom rock(v5)
           Atom atconf(v12, v13)
           Atom type(v7, v6)
           Atom free(v14, v16)
           Atom store(v16)
           Atom rock(v1)
           Atom onboard(v10, v14)
           Atom objective(v18)
           Atom rover(v12)
           Atom type(v4, v2)
           Atom conf(v14, v15)
           Atom lander(v9)
           Atom type(v3, v2)
           Atom rock(v8)
           Atom objective(v17)
           Atom rover(v14)
           Atom rock(v3)
           Atom type(v5, v6)
           Atom supports(v10, v11)
           Atom onboard(v10, v12)
           Atom type(v1, v2)
           Atom camera(v10)
           Atom free(v12, v16)
           Atom mode(v11)
           Atom above(v12, #q10, v5)
           Atom conf(v12, #q10)
           Atom above(v12, #q9, v4)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q8, #y5, v18)
           Atom imagerange(v14, #q8, v18)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom above(v14, #q4, v4)
           Atom conf(v14, #q4)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q1, #y1, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v7)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q2, #y2, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #t14, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v14, v15, #t13, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q8, #t11, #q2)
           Atom motion(v14, #q2, #t2, v15)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, v15, #t6, #q3)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q3, #t3, #q2)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q2, #t0, #q3)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q0, #t15, #q9)
           Atom motion(v12, #q0, #t19, #q10)
           Atom motion(v12, #q0, #t17, #q5)
           Atom motion(v12, #q5, #t18, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q10, #t20, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q0, #t5, v13)
           Atom motion(v12, #q9, #t16, #q0)
           Atom motion(v12, #q7, #t9, #q0)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #t8, #q1)
           Atom motion(v12, #q1, #t1, #q0)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, v15, #t12, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #t10, #q2)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, v15, #t7, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #t4, #q2)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, v13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q10 v5 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q9 v4 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((sample_rock v14 #q4 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #t15 #q9))
           ((move v12 #q0 #t17 #q5))
           ((move v12 #q0 #t19 #q10))
           ((move v12 #q0 #t5 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q0))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t20 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t18 #q0))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t9 #q0))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t16 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t14 #q7))
           ((move v12 v13 #t8 #q1))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #t0 #q3))
           ((move v14 #q2 #t2 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q2))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t4 #q2))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t10 #q2))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t11 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q6))
           ((move v14 v15 #t13 #q8))
           ((move v14 v15 #t6 #q3))
           ((move v14 v15 #t7 #q4))
           ((calibrate v12 #q1 #y1 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((calibrate v14 #q8 #y5 v18 v10))
           ((take_image v12 #q1 #y1 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((take_image v14 #q8 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y2 v9 v1))
           ((send_analysis v14 #q2 #y2 v9 v3))
           ((send_analysis v14 #q2 #y2 v9 v7))
           ((send_analysis v14 #q2 #y2 v9 v8))
           ((send_analysis v14 #q2 #y2 v9 v5))
           ((send_analysis v14 #q2 #y2 v9 v4))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q2 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Refined Plan for `new-axiom@0()` Achievement**
           
           Alright, let's break this down. My objective is to achieve `new-axiom@0()` in the `rovers` domain. This boils down to ensuring several conditions hold true simultaneously: the rovers are in their initial configurations, the rock storage units are empty, and we've successfully received images and analyses of specific rock types.
           
           To kick things off, I've identified the sub-goals that require attention. We need to receive images of objectives `v17` and `v18` in mode `v11`, and we need to receive analyses of a type `v2` rock (one of `v1`, `v3`, or `v4`) and a type `v6` rock (one of `v5`, `v7`, or `v8`). The initial state provides the rovers' starting locations, and they are empty.
           
           The key to achieving the images is using the `take_image` action. This requires the rovers to be in the correct configuration, their onboard cameras calibrated and functional, and for image reception. Similarly, the `send_analysis` action will require moving the rover to a base station, and that the analysis is first available to send.
           
           Now, for the plan itself. I'm assigning rover `v14` to handle the image of `v17` and analysis of a type `v6` rock (`v5`), and rover `v12` will take care of the image of `v18` and analysis of a type `v2` rock (`v4`).
           
           **Rover v14's Actions:**
           
           1.  **Move** to `#q6` to capture image `v17`.
           2.  **Calibrate** camera `v10` for image capture.
           3.  **Take image** of `v17` with camera `v10`.
           4.  **Move** to base station `#q2` for communication.
           5.  **Send** image `v17` to the lander `v9`.
           6.  **Move** to `#q3` to sample rock `v5`.
           7.  **Sample** rock `v5`, and store the sample.
           8.  **Move** to base station `#q2` for communication.
           9.  **Send** the analysis of `v5` to lander `v9`.
           10. **Drop** rock sample, emptying the store unit.
           11. **Move** back to its initial config `v15`.
           
           **Rover v12's Actions:**
           
           1.  **Move** to `#q5` to capture image `v18`.
           2.  **Calibrate** camera `v10` for image capture.
           3.  **Take image** of `v18` with camera `v10`.
           4.  **Move** to base station `#q0` for communication.
           5.  **Send** image `v18` to the lander `v9`.
           6.  **Move** to `#q9` to sample rock `v4`.
           7.  **Sample** rock `v4`, and store the sample.
           8.  **Move** to base station `#q0` for communication.
           9.  **Send** the analysis of `v4` to lander `v9`.
           10. **Drop** rock sample, emptying the store unit.
           11. **Move** back to its initial config `v13`.
           
           Upon executing these steps in sequence, the plan should ensure that all the conditions for `new-axiom@0()` are successfully met, providing a robust solution to achieve our desired goal.
           
)

Model:     **Refined Plan for `new-axiom@0()` Achievement**
           
           Alright, let's break this down. My objective is to achieve `new-axiom@0()` in the `rovers` domain. This boils down to ensuring several conditions hold true simultaneously: the rovers are in their initial configurations, the rock storage units are empty, and we've successfully received images and analyses of specific rock types.
           
           To kick things off, I've identified the sub-goals that require attention. We need to receive images of objectives `v17` and `v18` in mode `v11`, and we need to receive analyses of a type `v2` rock (one of `v1`, `v3`, or `v4`) and a type `v6` rock (one of `v5`, `v7`, or `v8`). The initial state provides the rovers' starting locations, and they are empty.
           
           The key to achieving the images is using the `take_image` action. This requires the rovers to be in the correct configuration, their onboard cameras calibrated and functional, and for image reception. Similarly, the `send_analysis` action will require moving the rover to a base station, and that the analysis is first available to send.
           
           Now, for the plan itself. I'm assigning rover `v14` to handle the image of `v17` and analysis of a type `v6` rock (`v5`), and rover `v12` will take care of the image of `v18` and analysis of a type `v2` rock (`v4`).
           
           **Rover v14's Actions:**
           
           1.  **Move** to `#q6` to capture image `v17`.
           2.  **Calibrate** camera `v10` for image capture.
           3.  **Take image** of `v17` with camera `v10`.
           4.  **Move** to base station `#q2` for communication.
           5.  **Send** image `v17` to the lander `v9`.
           6.  **Move** to `#q3` to sample rock `v5`.
           7.  **Sample** rock `v5`, and store the sample.
           8.  **Move** to base station `#q2` for communication.
           9.  **Send** the analysis of `v5` to lander `v9`.
           10. **Drop** rock sample, emptying the store unit.
           11. **Move** back to its initial config `v15`.
           
           **Rover v12's Actions:**
           
           1.  **Move** to `#q5` to capture image `v18`.
           2.  **Calibrate** camera `v10` for image capture.
           3.  **Take image** of `v18` with camera `v10`.
           4.  **Move** to base station `#q0` for communication.
           5.  **Send** image `v18` to the lander `v9`.
           6.  **Move** to `#q9` to sample rock `v4`.
           7.  **Sample** rock `v4`, and store the sample.
           8.  **Move** to base station `#q0` for communication.
           9.  **Send** the analysis of `v4` to lander `v9`.
           10. **Drop** rock sample, emptying the store unit.
           11. **Move** back to its initial config `v13`.
           
           Upon executing these steps in sequence, the plan should ensure that all the conditions for `new-axiom@0()` are successfully met, providing a robust solution to achieve our desired goal.
           

