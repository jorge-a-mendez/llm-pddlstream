User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom atconf(v14, v15)
           Atom rock(v7)
           Atom type(v1, v2)
           Atom mode(v11)
           Atom type(v7, v6)
           Atom onboard(v10, v12)
           Atom objective(v18)
           Atom objective(v19)
           Atom type(v8, v6)
           Atom rover(v14)
           Atom store(v16)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom free(v12, v16)
           Atom onboard(v10, v14)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom rock(v3)
           Atom free(v14, v16)
           Atom camera(v10)
           Atom rock(v8)
           Atom type(v5, v6)
           Atom conf(v14, v15)
           Atom rover(v12)
           Atom lander(v9)
           Atom type(v4, v2)
           Atom objective(v17)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v12, #q1, #y0, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom comvisible(v14, #q6, #y4, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q8, #y5, v17)
           Atom imagerange(v14, #q8, v17)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #q11, v1)
           Atom conf(v14, #q11)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v3)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q9, #y6, v19)
           Atom imagerange(v14, #q9, v19)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom imagevisible(v12, #q4, #y3, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v14, #q12, v5)
           Atom conf(v14, #q12)
           Atom above(v12, #q13, v5)
           Atom conf(v12, #q13)
           Atom above(v14, #q7, v7)
           Atom conf(v14, #q7)
           Atom above(v12, #q5, v7)
           Atom conf(v12, #q5)
           Atom imagevisible(v14, #q10, #y7, v18)
           Atom imagerange(v14, #q10, v18)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom imagevisible(v12, #q3, #y2, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #t7, v15)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v12, #q2, #t1, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, v13, #t2, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, v13, #t16, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q2, #t4, #q0)
           Atom motion(v12, #q0, #t5, #q2)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q2, #t15, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t6, #q2)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v14, v15, #t8, #q7)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q7, #t10, #q6)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q6, #t24, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q11, #t17, #q6)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, v15, #t18, #q11)
           Atom motion(v14, #q6, #t21, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q2, #t20, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #t11, #q2)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q1, #t27, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #t23, #q2)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q4, #t28, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q2, #t19, #q3)
           Atom motion(v12, #q1, #t12, #q3)
           Atom motion(v12, v13, #t3, #q3)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #t9, #q4)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q6, #t22, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q13, #t25, #q2)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q2, #t26, #q13)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #t14, #q6)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, v15, #t13, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q13 v5 v16))
           ((sample_rock v12 #q5 v7 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q11 v1 v16))
           ((sample_rock v14 #q12 v5 v16))
           ((sample_rock v14 #q7 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t5 #q2))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q1 #t12 #q3))
           ((move v12 #q1 #t27 #q4))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t25 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #t1 v13))
           ((move v12 #q2 #t15 #q5))
           ((move v12 #q2 #t19 #q3))
           ((move v12 #q2 #t20 #q4))
           ((move v12 #q2 #t26 #q13))
           ((move v12 #q2 #t4 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t23 #q2))
           ((move v12 #q3 #t9 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t11 #q2))
           ((move v12 #q4 #t28 #q3))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t6 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t16 #q0))
           ((move v12 v13 #t2 #q1))
           ((move v12 v13 #t3 #q3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t17 #q6))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #t21 #q11))
           ((move v14 #q6 #t22 #q12))
           ((move v14 #q6 #t24 #q7))
           ((move v14 #q6 #t7 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t10 #q6))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t14 #q6))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t13 #q8))
           ((move v14 v15 #t18 #q11))
           ((move v14 v15 #t8 #q7))
           ((calibrate v12 #q1 #y0 v17 v10))
           ((calibrate v12 #q3 #y2 v18 v10))
           ((calibrate v12 #q4 #y3 v19 v10))
           ((calibrate v14 #q10 #y7 v18 v10))
           ((calibrate v14 #q8 #y5 v17 v10))
           ((calibrate v14 #q9 #y6 v19 v10))
           ((take_image v12 #q1 #y0 v17 v10 v11))
           ((take_image v12 #q3 #y2 v18 v10 v11))
           ((take_image v12 #q4 #y3 v19 v10 v11))
           ((take_image v14 #q10 #y7 v18 v10 v11))
           ((take_image v14 #q8 #y5 v17 v10 v11))
           ((take_image v14 #q9 #y6 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y4 v9 v3))
           ((send_analysis v14 #q6 #y4 v9 v4))
           ((send_analysis v14 #q6 #y4 v9 v8))
           ((send_analysis v14 #q6 #y4 v9 v1))
           ((send_analysis v14 #q6 #y4 v9 v5))
           ((send_analysis v14 #q6 #y4 v9 v7))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v14 #q6 #y4 v9 v18 v11))
           ((send_image v14 #q6 #y4 v9 v17 v11))
           ((send_image v14 #q6 #y4 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Comprehensive Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal here is to satisfy the `new-axiom@0()` condition, which has several sub-goals related to rover configurations, received images, and analyzed rocks. We're starting with a specific initial state and a set of available actions (like `move`, `calibrate`, `take_image`, `send_image`, and `sample_rock`). Given my expertise, I will devise a plan to achieve this efficiently.
           
           First, I observe that the initial conditions related to rover configurations (`atconf`, `free`) are already satisfied. This simplifies things. The remaining challenges lie in acquiring the necessary images and rock analyses.
           
           **Key Actions and Objectives:**
           
           1.  **Image Acquisition:** We need to achieve `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, and `receivedimage(v19, v11)`.  To do this, we'll use a combination of `calibrate`, `take_image`, and `send_image` actions, leveraging the `comvisible` and `imagevisible` predicates. Both rovers have the capability, but for simplicity, I'll use rover `v12` for all imaging tasks and rover `v14` for all analysis.
           2.  **Rock Analysis:** We need to obtain the analysis of a stone and soil type. The initial state provides multiple samples of each type. We need to analyze one `v2` (stone) and one `v6` (soil) rock and send the analysis. This will involve the `sample_rock` and `send_analysis` actions.
           
           **Proposed Strategy:**
           
           The plan involves two distinct phases: imaging and analysis, which can be done sequentially or in parallel.
           Rover `v12` will handle all imaging tasks.  Rover `v14` will then take care of rock analysis.
           
           **Rover v12: Imaging (Sequential)**
           
           1.  Move `v12` to `#q1`, calibrate for and image `v17`, move to `#q2`, send image.
           2.  Move `v12` to `#q3`, calibrate for and image `v18`, move to `#q2`, send image.
           3.  Move `v12` to `#q4`, calibrate for and image `v19`, move to `#q2`, send image.
           4.  Move `v12` back to its initial location `v13`.
           
           **Rover v14: Rock Analysis**
           
           1.  Move `v14` to location for rock sample `v1` (of type `v2`).
           2.  Sample Rock `v1`.  Send analysis.
           3.  Drop Rock sample `v1`.
           4.  Move `v14` to location for rock sample `v5` (of type `v6`).
           5.  Sample Rock `v5`. Send analysis.
           6.  Move `v14` back to its initial location `v15`.
           
           **Observations and Assumptions:**
           
           *   I am assuming that the available actions and preconditions are sound and complete to solve the goal, based on the provided predicate definitions.
           *   It's worth noting the "onboard" situation with the camera `v10`. Since it's marked as being onboard both rovers, I'm working with the assumption, that it can be used by both Rovers independently.
           
           **Final Plan and State Satisfaction:**
           This approach leverages the parallel capabilities of two rovers to achieve the goal efficiently.  The proposed actions, while simple in essence, fulfill all the necessary preconditions (movement, visibility, and communication availability) to achieve the final `new-axiom@0()` goal, while making sure the rovers return to their base positions at the end to satisfy the `atconf` constraints.
           
)

Model:     **Comprehensive Plan to Achieve new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal here is to satisfy the `new-axiom@0()` condition, which has several sub-goals related to rover configurations, received images, and analyzed rocks. We're starting with a specific initial state and a set of available actions (like `move`, `calibrate`, `take_image`, `send_image`, and `sample_rock`). Given my expertise, I will devise a plan to achieve this efficiently.
           
           First, I observe that the initial conditions related to rover configurations (`atconf`, `free`) are already satisfied. This simplifies things. The remaining challenges lie in acquiring the necessary images and rock analyses.
           
           **Key Actions and Objectives:**
           
           1.  **Image Acquisition:** We need to achieve `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, and `receivedimage(v19, v11)`.  To do this, we'll use a combination of `calibrate`, `take_image`, and `send_image` actions, leveraging the `comvisible` and `imagevisible` predicates. Both rovers have the capability, but for simplicity, I'll use rover `v12` for all imaging tasks and rover `v14` for all analysis.
           2.  **Rock Analysis:** We need to obtain the analysis of a stone and soil type. The initial state provides multiple samples of each type. We need to analyze one `v2` (stone) and one `v6` (soil) rock and send the analysis. This will involve the `sample_rock` and `send_analysis` actions.
           
           **Proposed Strategy:**
           
           The plan involves two distinct phases: imaging and analysis, which can be done sequentially or in parallel.
           Rover `v12` will handle all imaging tasks.  Rover `v14` will then take care of rock analysis.
           
           **Rover v12: Imaging (Sequential)**
           
           1.  Move `v12` to `#q1`, calibrate for and image `v17`, move to `#q2`, send image.
           2.  Move `v12` to `#q3`, calibrate for and image `v18`, move to `#q2`, send image.
           3.  Move `v12` to `#q4`, calibrate for and image `v19`, move to `#q2`, send image.
           4.  Move `v12` back to its initial location `v13`.
           
           **Rover v14: Rock Analysis**
           
           1.  Move `v14` to location for rock sample `v1` (of type `v2`).
           2.  Sample Rock `v1`.  Send analysis.
           3.  Drop Rock sample `v1`.
           4.  Move `v14` to location for rock sample `v5` (of type `v6`).
           5.  Sample Rock `v5`. Send analysis.
           6.  Move `v14` back to its initial location `v15`.
           
           **Observations and Assumptions:**
           
           *   I am assuming that the available actions and preconditions are sound and complete to solve the goal, based on the provided predicate definitions.
           *   It's worth noting the "onboard" situation with the camera `v10`. Since it's marked as being onboard both rovers, I'm working with the assumption, that it can be used by both Rovers independently.
           
           **Final Plan and State Satisfaction:**
           This approach leverages the parallel capabilities of two rovers to achieve the goal efficiently.  The proposed actions, while simple in essence, fulfill all the necessary preconditions (movement, visibility, and communication availability) to achieve the final `new-axiom@0()` goal, while making sure the rovers return to their base positions at the end to satisfy the `atconf` constraints.
           

