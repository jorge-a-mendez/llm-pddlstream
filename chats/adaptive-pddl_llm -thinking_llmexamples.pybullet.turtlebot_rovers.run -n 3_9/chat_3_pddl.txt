User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom atconf(v14, v15)
           Atom rock(v7)
           Atom type(v1, v2)
           Atom mode(v11)
           Atom type(v7, v6)
           Atom onboard(v10, v12)
           Atom objective(v18)
           Atom objective(v19)
           Atom type(v8, v6)
           Atom rover(v14)
           Atom store(v16)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom free(v12, v16)
           Atom onboard(v10, v14)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom rock(v3)
           Atom free(v14, v16)
           Atom camera(v10)
           Atom rock(v8)
           Atom type(v5, v6)
           Atom conf(v14, v15)
           Atom rover(v12)
           Atom lander(v9)
           Atom type(v4, v2)
           Atom objective(v17)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v12, #q1, #y0, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom comvisible(v14, #q6, #y4, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #q4, #y3, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v12, #o5, v5)
           Atom above(v14, #o5, v5)
           Atom above(v12, #q5, v7)
           Atom conf(v12, #q5)
           Atom above(v14, #q7, v7)
           Atom conf(v14, #q7)
           Atom imagevisible(v12, #q3, #y2, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #t7, v15)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t1, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, v13, #t2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q2, #t4, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q0, #t5, #q2)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, v13, #t3, #q3)
           Atom motion(v12, #q1, #t12, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #t10, #q6)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #t8, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #t6, #q2)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q4, #t11, #q2)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q3, #t9, #q4)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q5 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q7 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t5 #q2))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q1 #t12 #q3))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #t1 v13))
           ((move v12 #q2 #t4 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t9 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t11 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t6 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t2 #q1))
           ((move v12 v13 #t3 #q3))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #t7 v15))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t10 #q6))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t8 #q7))
           ((calibrate v12 #q1 #y0 v17 v10))
           ((calibrate v12 #q3 #y2 v18 v10))
           ((calibrate v12 #q4 #y3 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q1 #y0 v17 v10 v11))
           ((take_image v12 #q3 #y2 v18 v10 v11))
           ((take_image v12 #q4 #y3 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y4 v9 v1))
           ((send_analysis v14 #q6 #y4 v9 v3))
           ((send_analysis v14 #q6 #y4 v9 v4))
           ((send_analysis v14 #q6 #y4 v9 v5))
           ((send_analysis v14 #q6 #y4 v9 v8))
           ((send_analysis v14 #q6 #y4 v9 v7))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v14 #q6 #y4 v9 v17 v11))
           ((send_image v14 #q6 #y4 v9 v18 v11))
           ((send_image v14 #q6 #y4 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Strategic Plan for `new-axiom@0()` in the `rovers` Domain**
           
           My analysis of the goal `new-axiom@0()` reveals that it boils down to achieving three key objectives: taking and transmitting images of three specific objects (`v17`, `v18`, `v19`) with mode `v11`, and obtaining analyses of two distinct objects, one classified as a 'stone' (`v1` of type `v2`) and the other as 'soil' (`v7` of type `v6`). The initial state provides the necessary configuration and spatial relationships to make this work. Given the problem and available actions, I've designed a two-rover strategy, leveraging the strengths of each rover.
           
           Rover `v14` will focus on image acquisition and transmission. Starting at location `v15`, it will move to `#o3`, where all required images are visible, calibrate its onboard camera `v10` for each objective, and capture each image in turn. After the images are taken, `v14` will move to `#q6` to communicate with the lander `v9`. `v14` can then transmit each image with mode `v11` and then return to its initial location at `v15`.
           
           Meanwhile, rover `v12` will handle the sample collection and analysis. Currently at `v13`, it will first move to location `#q0` where a `stone` (`v1`) is above it, take the sample, and move to location `#q2` where it can communicate with `v9` and send the analysis. After dropping the sample to free the storage, `v12` then needs to move to location `#q5`, where `v7` soil exists above it, sample it, move back to `#q2`, send the soil analysis and drop the sample, and then move back to its starting location `v13`.
           
           In terms of specific actions, `v14` will move to location `#o3`, calibrate and capture the images, move to location `#q6`, send the images, and then move back to its initial location `v15`. `v12` will travel to collect and send the first sample, drop the sample, travel to the second location, collect the second sample, send it and drop that sample and move back to its starting location `v13`. This plan leverages the available resources effectively to satisfy the goal.
           
)

Model:     **Strategic Plan for `new-axiom@0()` in the `rovers` Domain**
           
           My analysis of the goal `new-axiom@0()` reveals that it boils down to achieving three key objectives: taking and transmitting images of three specific objects (`v17`, `v18`, `v19`) with mode `v11`, and obtaining analyses of two distinct objects, one classified as a 'stone' (`v1` of type `v2`) and the other as 'soil' (`v7` of type `v6`). The initial state provides the necessary configuration and spatial relationships to make this work. Given the problem and available actions, I've designed a two-rover strategy, leveraging the strengths of each rover.
           
           Rover `v14` will focus on image acquisition and transmission. Starting at location `v15`, it will move to `#o3`, where all required images are visible, calibrate its onboard camera `v10` for each objective, and capture each image in turn. After the images are taken, `v14` will move to `#q6` to communicate with the lander `v9`. `v14` can then transmit each image with mode `v11` and then return to its initial location at `v15`.
           
           Meanwhile, rover `v12` will handle the sample collection and analysis. Currently at `v13`, it will first move to location `#q0` where a `stone` (`v1`) is above it, take the sample, and move to location `#q2` where it can communicate with `v9` and send the analysis. After dropping the sample to free the storage, `v12` then needs to move to location `#q5`, where `v7` soil exists above it, sample it, move back to `#q2`, send the soil analysis and drop the sample, and then move back to its starting location `v13`.
           
           In terms of specific actions, `v14` will move to location `#o3`, calibrate and capture the images, move to location `#q6`, send the images, and then move back to its initial location `v15`. `v12` will travel to collect and send the first sample, drop the sample, travel to the second location, collect the second sample, send it and drop that sample and move back to its starting location `v13`. This plan leverages the available resources effectively to satisfy the goal.
           

