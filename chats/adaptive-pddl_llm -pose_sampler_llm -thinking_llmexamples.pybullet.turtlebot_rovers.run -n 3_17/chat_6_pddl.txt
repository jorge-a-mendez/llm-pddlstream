User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supports(v10, v11)
           Atom objective(v17)
           Atom atconf(v12, v13)
           Atom rock(v8)
           Atom rock(v7)
           Atom type(v3, v2)
           Atom rock(v4)
           Atom type(v4, v2)
           Atom type(v8, v6)
           Atom camera(v10)
           Atom atconf(v14, v15)
           Atom mode(v11)
           Atom conf(v12, v13)
           Atom free(v14, v16)
           Atom free(v12, v16)
           Atom objective(v19)
           Atom lander(v9)
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom type(v1, v2)
           Atom rover(v12)
           Atom rock(v1)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom rock(v3)
           Atom type(v7, v6)
           Atom type(v5, v6)
           Atom onboard(v10, v12)
           Atom rock(v5)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q10, #y6, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y6)
           Atom above(v14, #q13, v1)
           Atom conf(v14, #q13)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v12, #q8, v3)
           Atom conf(v12, #q8)
           Atom above(v12, #q7, v5)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v7)
           Atom above(v12, #q15, v7)
           Atom conf(v12, #q15)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q11, #y7, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q9, #y5, v19)
           Atom imagerange(v14, #q9, v19)
           Atom conf(v14, #q9)
           Atom ray(#y5)
           Atom imagevisible(v12, #q2, #y2, v19)
           Atom imagerange(v12, #q2, v19)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, v13, #t5, #q2)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, v13, #t33, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, v15, #t17, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #t11, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v14, v15, #t16, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, v15, #t1, #q3)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q0, #t25, #q3)
           Atom motion(v14, #q13, #t30, #q0)
           Atom motion(v14, #q0, #t3, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q3, #t9, #q0)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q10, #t19, #q0)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q9, #t18, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #t28, #q13)
           Atom motion(v12, #q1, #t31, #q14)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q2, #t7, #q1)
           Atom motion(v12, #q5, #t4, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t2, #q5)
           Atom motion(v12, #q1, #t0, v13)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q1, #t23, #q2)
           Atom motion(v12, #q14, #t24, #q1)
           Atom motion(v12, #q6, #t22, #q1)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q6, #t13, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q4, #t8, #q1)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q4, #t14, #q2)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v14, #q12, #t29, #q0)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q0, #t27, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q10, #t34, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q11, #t35, #q9)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, #q11, #t26, #q0)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, v15, #t21, #q11)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q1, #t12, #q7)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q7, #t10, #q1)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q8, #t20, #q1)
           Atom motion(v12, v13, #t15, #q8)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q1, #t32, #q8)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, v15, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q15 v7 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q13 v1 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #t0 v13))
           ((move v12 #q1 #t12 #q7))
           ((move v12 #q1 #t2 #q5))
           ((move v12 #q1 #t23 #q2))
           ((move v12 #q1 #t31 #q14))
           ((move v12 #q1 #t32 #q8))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t24 #q1))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t7 #q1))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t14 #q2))
           ((move v12 #q4 #t8 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t4 #q1))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t13 #q4))
           ((move v12 #q6 #t22 #q1))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t10 #q1))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t20 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t11 #q6))
           ((move v12 v13 #t15 #q8))
           ((move v12 v13 #t33 #q5))
           ((move v12 v13 #t5 #q2))
           ((move v12 v13 #t6 #q4))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #t25 #q3))
           ((move v14 #q0 #t27 #q12))
           ((move v14 #q0 #t28 #q13))
           ((move v14 #q0 #t3 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t19 #q0))
           ((move v14 #q10 #t34 #q11))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t26 #q0))
           ((move v14 #q11 #t35 #q9))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t29 #q0))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t30 #q0))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t9 #q0))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t18 #q0))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q3))
           ((move v14 v15 #t16 #q9))
           ((move v14 v15 #t17 #q10))
           ((move v14 v15 #t21 #q11))
           ((calibrate v12 #q2 #y2 v19 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v14 #q10 #y6 v17 v10))
           ((calibrate v14 #q11 #y7 v18 v10))
           ((calibrate v14 #q9 #y5 v19 v10))
           ((take_image v12 #q2 #y2 v19 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v14 #q10 #y6 v17 v10 v11))
           ((take_image v14 #q11 #y7 v18 v10 v11))
           ((take_image v14 #q9 #y5 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Planning for Axiom Achievement in the Rovers Domain**
           
           Okay, so I've been tasked with generating a plan to satisfy the `new-axiom@0()` goal in the `rovers` domain.  I can see that this goal requires a few things: achieving three `receivedimage` predicates, and two `receivedanalysis` predicates, *plus* ensuring the rovers are free at their original configurations and other preconditions.
           
           First, I need to make sure I grasp the goal conditions. The  `new-axiom@0()` demands that three images (`v17`, `v18`, `v19`) are received in mode `v11`. These images need to be taken and sent.  Then, analysis of two objects, one of type `v2` (which is `v3` and `v4` at the start) and one of type `v6` (which is `v8`, `v7`, and `v5` at the start), must be received. Importantly,  the rovers need to start and end at their original configurations: `atconf(v12, v13)` and `atconf(v14, v15)`.  Both store locations, *and the rovers* need to be free at the initial position and the final position.
           
           To address the image capture, I determined I'd need to use a combination of actions: `calibrate`, `take_image`, and `send_image`. The `take_image` action is reliant on a preceding `calibrate` action.  `receivedimage` predicates are achieved by these.  Since each image capture requires a calibration, and calibration is *lost* after each image, the `take_image` and `send_image` should be grouped together.
           
           For analysis, I'll need `sample_rock` and `send_analysis`.  The problem here is that a rover can only hold one sample at a time. The store must also be empty and available for sampling before the plan starts.
           
           The initial state provides some key starting points. I can see the initial `atconf`, `free`,  `objective` and `mode` predicates are true. Furthermore, I have the visibility data.  This is critical as I can identify that both rovers v12 and v14, are free and have images or communication available to be used.  I see that `v12` has both `imagevisible` and `comvisible` to lander `v9`.
           
           Given that, I'm thinking of focusing most of the image-related tasks on rover `v12`. I'll also pick rock `v3` of type `v2` and rock `v8` of type `v6` for the analysis.  The plan will be to get the images with rover `v12` since that is more direct with the visibility facts, and move from there.  I'll want to move to send the image via communication.
           
           My plan structure is now taking shape:
           
           1.  **Image Acquisition (v12):**
               *   Navigate rover `v12` to `#q6` and capture image `v17`.
               *   Navigate rover `v12` to `#q1`, and send the image.
               *   Navigate rover `v12` to `#q4` and capture image `v18`.
               *   Navigate rover `v12` to `#q1`, and send the image.
               *   Navigate rover `v12` to `#q2` and capture image `v19`.
               *   Navigate rover `v12` to `#q1`, and send the image.
           2.  **Analysis (v12):**
               *   Navigate rover `v12` to `#q8` (the stone's position) to sample `v3`.
               *   Navigate rover `v12` to `#q1` and send analysis.
               *   Navigate rover `v12` to `#o5` (the soil's position) to sample `v8`.
               *   Navigate rover `v12` to `#q1` and send analysis.
           3.  **Return to Initial Configuration:**
               *   Navigate rover `v12` back to its original location, `v13`.
           
           Because actions need to happen in sequence and each action sets up a state which is critical for the next action to occur, it is a linear plan. This ensures all the `receivedimage` and `receivedanalysis` predicates are achieved. This ensures that the rovers are free at the end, and the analysis can occur at the communication point.
           
)

Model:     **Planning for Axiom Achievement in the Rovers Domain**
           
           Okay, so I've been tasked with generating a plan to satisfy the `new-axiom@0()` goal in the `rovers` domain.  I can see that this goal requires a few things: achieving three `receivedimage` predicates, and two `receivedanalysis` predicates, *plus* ensuring the rovers are free at their original configurations and other preconditions.
           
           First, I need to make sure I grasp the goal conditions. The  `new-axiom@0()` demands that three images (`v17`, `v18`, `v19`) are received in mode `v11`. These images need to be taken and sent.  Then, analysis of two objects, one of type `v2` (which is `v3` and `v4` at the start) and one of type `v6` (which is `v8`, `v7`, and `v5` at the start), must be received. Importantly,  the rovers need to start and end at their original configurations: `atconf(v12, v13)` and `atconf(v14, v15)`.  Both store locations, *and the rovers* need to be free at the initial position and the final position.
           
           To address the image capture, I determined I'd need to use a combination of actions: `calibrate`, `take_image`, and `send_image`. The `take_image` action is reliant on a preceding `calibrate` action.  `receivedimage` predicates are achieved by these.  Since each image capture requires a calibration, and calibration is *lost* after each image, the `take_image` and `send_image` should be grouped together.
           
           For analysis, I'll need `sample_rock` and `send_analysis`.  The problem here is that a rover can only hold one sample at a time. The store must also be empty and available for sampling before the plan starts.
           
           The initial state provides some key starting points. I can see the initial `atconf`, `free`,  `objective` and `mode` predicates are true. Furthermore, I have the visibility data.  This is critical as I can identify that both rovers v12 and v14, are free and have images or communication available to be used.  I see that `v12` has both `imagevisible` and `comvisible` to lander `v9`.
           
           Given that, I'm thinking of focusing most of the image-related tasks on rover `v12`. I'll also pick rock `v3` of type `v2` and rock `v8` of type `v6` for the analysis.  The plan will be to get the images with rover `v12` since that is more direct with the visibility facts, and move from there.  I'll want to move to send the image via communication.
           
           My plan structure is now taking shape:
           
           1.  **Image Acquisition (v12):**
               *   Navigate rover `v12` to `#q6` and capture image `v17`.
               *   Navigate rover `v12` to `#q1`, and send the image.
               *   Navigate rover `v12` to `#q4` and capture image `v18`.
               *   Navigate rover `v12` to `#q1`, and send the image.
               *   Navigate rover `v12` to `#q2` and capture image `v19`.
               *   Navigate rover `v12` to `#q1`, and send the image.
           2.  **Analysis (v12):**
               *   Navigate rover `v12` to `#q8` (the stone's position) to sample `v3`.
               *   Navigate rover `v12` to `#q1` and send analysis.
               *   Navigate rover `v12` to `#o5` (the soil's position) to sample `v8`.
               *   Navigate rover `v12` to `#q1` and send analysis.
           3.  **Return to Initial Configuration:**
               *   Navigate rover `v12` back to its original location, `v13`.
           
           Because actions need to happen in sequence and each action sets up a state which is critical for the next action to occur, it is a linear plan. This ensures all the `receivedimage` and `receivedanalysis` predicates are achieved. This ensures that the rovers are free at the end, and the analysis can occur at the communication point.
           

