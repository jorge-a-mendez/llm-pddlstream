User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v14, v16)
           Atom atconf(v12, v13)
           Atom onboard(v10, v14)
           Atom rover(v12)
           Atom type(v7, v6)
           Atom rock(v8)
           Atom type(v5, v6)
           Atom objective(v18)
           Atom store(v16)
           Atom rover(v14)
           Atom rock(v3)
           Atom conf(v14, v15)
           Atom camera(v10)
           Atom rock(v1)
           Atom rock(v5)
           Atom objective(v17)
           Atom conf(v12, v13)
           Atom lander(v9)
           Atom type(v1, v2)
           Atom mode(v11)
           Atom rock(v4)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom atconf(v14, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q4, v1)
           Atom conf(v14, #q4)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v7)
           Atom above(v14, #q2, v5)
           Atom conf(v14, #q2)
           Atom imagevisible(v14, #q0, #y0, v17)
           Atom imagerange(v14, #q0, v17)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q3, #y2, v18)
           Atom imagerange(v14, #q3, v18)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q7, #y4, v18)
           Atom imagerange(v12, #q7, v18)
           Atom conf(v12, #q7)
           Atom ray(#y4)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #q5, v5)
           Atom conf(v12, #q5)
           Atom comvisible(v12, #q6, #y3, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y3)
           Atom above(v12, #o5, v3)
           Atom motion(v12, v13, #t13, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #t15, #q6)
           Atom motion(v12, #q6, #t12, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t2, v15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, v15, #t0, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q1, #t6, #q0)
           Atom motion(v14, #q0, #t4, #q1)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q2, #t1, #q1)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q1, #t3, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q6, #t14, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t11, #q6)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q4, #t8, #q1)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q1, #t7, #q4)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q1, #t10, #q3)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #t5, #q1)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q0, #t9, #q3)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o3, #o2, #q7)
           Atom motion(v12, #q5, #o2, #o3)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #q6, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q5)
           Atom motion(v12, #o3, #o2, #q6)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q5 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q2 v5 v16))
           ((sample_rock v14 #q4 v1 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q5))
           ((move v12 #o3 #o2 #q6))
           ((move v12 #o3 #o2 #q7))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q5 #o2 #o3))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t11 #q6))
           ((move v12 #q6 #o2 #o3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #t12 v13))
           ((move v12 #q6 #t14 #q5))
           ((move v12 #q7 #o2 #o3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t15 #q6))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t13 #q7))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t4 #q1))
           ((move v14 #q0 #t9 #q3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #t10 #q3))
           ((move v14 #q1 #t2 v15))
           ((move v14 #q1 #t3 #q2))
           ((move v14 #q1 #t6 #q0))
           ((move v14 #q1 #t7 #q4))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t1 #q1))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t5 #q1))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t8 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #q7 #y4 v18 v10))
           ((calibrate v14 #q0 #y0 v17 v10))
           ((calibrate v14 #q3 #y2 v18 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #q7 #y4 v18 v10 v11))
           ((take_image v14 #q0 #y0 v17 v10 v11))
           ((take_image v14 #q3 #y2 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y3 v9 v1))
           ((send_analysis v12 #q6 #y3 v9 v3))
           ((send_analysis v12 #q6 #y3 v9 v4))
           ((send_analysis v12 #q6 #y3 v9 v7))
           ((send_analysis v12 #q6 #y3 v9 v8))
           ((send_analysis v12 #q6 #y3 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_image v12 #q6 #y3 v9 v17 v11))
           ((send_image v12 #q6 #y3 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Okay, here's my plan to achieve `new-axiom@0()`, breaking down the problem into smaller, solvable pieces.**
           
           First, I identified the main subgoals: sending images of objectives (`v17`, `v18`) and analyzing and sending the analyses of rocks (types `v2` - rock `v1`, and `v6` - rock `v5`). I decided to use the rover `v14` for all actions, and made sure that it was able to communicate with the lander `v9` as well.
           
           The plan involves the following sequence:
           
           1.  **Image Acquisition:** I need to take pictures of both `v17` and `v18`, with the camera `v10` on the rover, and then send the pictures to `v9`
               *   Rover `v14` needs to move to image-visible positions for `v17` and `v18` (`#q0` and `#q3` respectively).
               *   The camera needs to be calibrated at each location.
               *   Then, I will take the image with the rover at the correct location, with the correct camera.
               *   Finally, I need to send the images from the rover, back to the lander.
           
           2.  **Rock Analysis and Transmission:** I've selected `v1` (type `v2`) and `v5` (type `v6`) for analysis. I will sample these rocks and then transmit their analysis to `v9`
               *   The rover has to move to locations where it can sample `v1` and `v5` (`#q4`, `#q2`, respectively).
               *   Then, the rover needs to sample the rock.
               *   After that, I have to ensure that `v14` will drop any rocks that it is holding, if it already sampled another rock before this part of the sequence. This is important to ensure that I can satisfy all preconditions of the actions that I plan.
               *   Then, the analyses need to be sent from the rover to the lander.
           
           3.  **Final State Configuration:** Finally, the rover must be reconfigured to its starting location and storage unit to free up the units for future samples.
           
           To meet the complete goal requirements, `v14` must be at `v15`, and `v14` must be free of the sampled rocks at the end of the plan. I've incorporated actions to ensure this, including `drop_rock` and `move` actions at key points in the plan, to reset these variables. This makes sure that `atconf(v14, v15)` and `free(v14, v16)` are true at the end.
           
           The final plan is as follows:
           
           1.  `move v14 v15 #t0 #q0` (move to image `v17`)
           2.  `calibrate v14 #q0 #y0 v17 v10` (calibrate)
           3.  `take_image v14 #q0 #y0 v17 v10 v11`
           4.  `move v14 #q0 #t4 #q1` (move to lander)
           5.  `send_image v14 #q1 #y1 v9 v17 v11` (send image `v17`)
           6.  `move v14 #q1 #t10 #q3` (move to image `v18`)
           7.  `calibrate v14 #q3 #y2 v18 v10` (calibrate)
           8.  `take_image v14 #q3 #y2 v18 v10 v11`
           9.  `move v14 #q3 #t5 #q1` (move to lander)
           10. `send_image v14 #q1 #y1 v9 v18 v11` (send image `v18`)
           11. `move v14 #q1 #t7 #q4` (move to sample `v1`)
           12. `sample_rock v14 #q4 v1 v16`
           13. `move v14 #q4 #t8 #q1` (move to lander)
           14. `send_analysis v14 #q1 #y1 v9 v1` (send analysis)
           15. `drop_rock v14 v16` (to sample next rock)
           16. `move v14 #q1 #t3 #q2` (move to sample
)

Model:     **Okay, here's my plan to achieve `new-axiom@0()`, breaking down the problem into smaller, solvable pieces.**
           
           First, I identified the main subgoals: sending images of objectives (`v17`, `v18`) and analyzing and sending the analyses of rocks (types `v2` - rock `v1`, and `v6` - rock `v5`). I decided to use the rover `v14` for all actions, and made sure that it was able to communicate with the lander `v9` as well.
           
           The plan involves the following sequence:
           
           1.  **Image Acquisition:** I need to take pictures of both `v17` and `v18`, with the camera `v10` on the rover, and then send the pictures to `v9`
               *   Rover `v14` needs to move to image-visible positions for `v17` and `v18` (`#q0` and `#q3` respectively).
               *   The camera needs to be calibrated at each location.
               *   Then, I will take the image with the rover at the correct location, with the correct camera.
               *   Finally, I need to send the images from the rover, back to the lander.
           
           2.  **Rock Analysis and Transmission:** I've selected `v1` (type `v2`) and `v5` (type `v6`) for analysis. I will sample these rocks and then transmit their analysis to `v9`
               *   The rover has to move to locations where it can sample `v1` and `v5` (`#q4`, `#q2`, respectively).
               *   Then, the rover needs to sample the rock.
               *   After that, I have to ensure that `v14` will drop any rocks that it is holding, if it already sampled another rock before this part of the sequence. This is important to ensure that I can satisfy all preconditions of the actions that I plan.
               *   Then, the analyses need to be sent from the rover to the lander.
           
           3.  **Final State Configuration:** Finally, the rover must be reconfigured to its starting location and storage unit to free up the units for future samples.
           
           To meet the complete goal requirements, `v14` must be at `v15`, and `v14` must be free of the sampled rocks at the end of the plan. I've incorporated actions to ensure this, including `drop_rock` and `move` actions at key points in the plan, to reset these variables. This makes sure that `atconf(v14, v15)` and `free(v14, v16)` are true at the end.
           
           The final plan is as follows:
           
           1.  `move v14 v15 #t0 #q0` (move to image `v17`)
           2.  `calibrate v14 #q0 #y0 v17 v10` (calibrate)
           3.  `take_image v14 #q0 #y0 v17 v10 v11`
           4.  `move v14 #q0 #t4 #q1` (move to lander)
           5.  `send_image v14 #q1 #y1 v9 v17 v11` (send image `v17`)
           6.  `move v14 #q1 #t10 #q3` (move to image `v18`)
           7.  `calibrate v14 #q3 #y2 v18 v10` (calibrate)
           8.  `take_image v14 #q3 #y2 v18 v10 v11`
           9.  `move v14 #q3 #t5 #q1` (move to lander)
           10. `send_image v14 #q1 #y1 v9 v18 v11` (send image `v18`)
           11. `move v14 #q1 #t7 #q4` (move to sample `v1`)
           12. `sample_rock v14 #q4 v1 v16`
           13. `move v14 #q4 #t8 #q1` (move to lander)
           14. `send_analysis v14 #q1 #y1 v9 v1` (send analysis)
           15. `drop_rock v14 v16` (to sample next rock)
           16. `move v14 #q1 #t3 #q2` (move to sample

