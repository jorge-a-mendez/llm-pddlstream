User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v12, v13)
           Atom atpose(v8, v9)
           Atom ataconf(v6, v7)
           Atom controllable(v4)
           Atom supported(v12, v13, v11)
           Atom atbconf(v3)
           Atom graspable(v14)
           Atom aconf(v4, v5)
           Atom pose(v14, v15)
           Atom arm(v6)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom supported(v8, v9, v11)
           Atom atpose(v14, v15)
           Atom bconf(v3)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom handempty(v4)
           Atom aconf(v6, v7)
           Atom pose(v8, v9)
           Atom canmove()
           Atom stackable(v14, v16)
           Atom ataconf(v4, v5)
           Atom stackable(v14, v10)
           Atom stackable(v12, v16)
           Atom handempty(v6)
           Atom graspable(v8)
           Atom stackable(v8, v10)
           Atom stackable(v12, v10)
           Atom arm(v4)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #o1)
           Atom supported(v8, #o2, v16)
           Atom supported(v12, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v14, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three graspable objects: `v12`, `v14`, and `v8`. Currently, `v12` is at `v13` and supported by `v11`, `v14` is at `v15` and supported by `v11`, and `v8` is at `v9` and supported by `v11`. The robot has two arms, `v4` and `v6`, both are handempty. The goal is to place all three objects (`v8`, `v12`, and `v14`) on `v16`. Since `v16` is a surface where objects can be stacked, the `on` predicate can be satisfied.
           
           The plan involves picking up each object from its initial pose and placing it onto `v16` at a new pose (`#o2`). This involves using the `pick` action to grasp the object, followed by the `place` action to put it down. The robot's arm `v4` and base configuration `#o3` (which is reachable from `v3`) will be used for these actions. There are also base motions available to move from `v3` to `#o3` and back. However, since the `kin` predicates explicitly include `#o3` as the base configuration for pick/place actions and the initial `atbconf` is `v3`, the robot must first move its base to `#o3`. All objects can be placed at the same pose `#o2` on `v16`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)

