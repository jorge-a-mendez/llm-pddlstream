User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom handempty(v4)
           Atom atpose(v14, v15)
           Atom pose(v14, v15)
           Atom ataconf(v4, v5)
           Atom arm(v4)
           Atom supported(v12, v13, v11)
           Atom supported(v8, v9, v11)
           Atom atbconf(v3)
           Atom supported(v14, v15, v11)
           Atom aconf(v6, v7)
           Atom stackable(v12, v10)
           Atom graspable(v12)
           Atom handempty(v6)
           Atom pose(v12, v13)
           Atom ataconf(v6, v7)
           Atom pose(v8, v9)
           Atom bconf(v3)
           Atom aconf(v4, v5)
           Atom canmove()
           Atom graspable(v8)
           Atom atpose(v12, v13)
           Atom stackable(v8, v16)
           Atom atpose(v8, v9)
           Atom graspable(v14)
           Atom stackable(v14, v10)
           Atom stackable(v14, v16)
           Atom controllable(v4)
           Atom stackable(v8, v10)
           Atom stackable(v12, v16)
           Atom arm(v6)
           Atom grasp(v12, #g1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #p2)
           Atom supported(v12, #p2, v16)
           Atom pose(v14, #p1)
           Atom supported(v14, #p1, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #g2)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v16)
           Atom grasp(v8, #g0)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v14, #p1, #g2, #q5, #t8)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v14, v15, #g2, #q4, #t7)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v12, #p2, #g1, #q3, #t6)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, v13, #g1, #q2, #t2)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, #p0, #g0, #q1, #t1)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g2, #o3, #o4)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q5, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p2 #g1 #q3 #t6))
           ((place v4 v12 #p2 #g1 #q3 #t6))
           ((pick v4 v12 v13 #g1 #q2 #t2))
           ((place v4 v12 v13 #g1 #q2 #t2))
           ((pick v4 v14 #o2 #g2 #o3 #o4))
           ((place v4 v14 #o2 #g2 #o3 #o4))
           ((pick v4 v14 #p1 #g2 #q5 #t8))
           ((place v4 v14 #p1 #g2 #q5 #t8))
           ((pick v4 v14 v15 #g2 #q4 #t7))
           ((place v4 v14 v15 #g2 #q4 #t7))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p0 #g0 #q1 #t1))
           ((place v4 v8 #p0 #g0 #q1 #t1))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms, v4 and v6. Both are initially empty. There are three objects: v8, v12, and v14.
           Object v8 is currently at pose v9, supported by v11. It can be stacked on v10 or v16.
           Object v12 is currently at pose v13, supported by v11. It can be stacked on v10 or v16.
           Object v14 is currently at pose v15, supported by v11. It can be stacked on v10 or v16.
           The robot's base is at configuration v3.
           
           The goal is to have all three objects, v8, v12, and v14, on v16. This implies that they need to be picked up from their current locations (on v11) and placed onto v16.
           
           Let's break down the goal for each object:
           1. `on(v8, v16)`: v8 is currently on v11 (atpose v8 v9 and supported v8 v9 v11). We need to pick it up and place it on v16. The specific pose on v16 is #p0 (supported v8 #p0 v16).
           2. `on(v12, v16)`: v12 is currently on v11 (atpose v12 v13 and supported v12 v13 v11). We need to pick it up and place it on v16. The specific pose on v16 is #p2 (supported v12 #p2 v16).
           3. `on(v14, v16)`: v14 is currently on v11 (atpose v14 v15 and supported v14 v15 v11). We need to pick it up and place it on v16. The specific pose on v16 is #p1 (supported v14 #p1 v16).
           
           We need to pick each object from its current pose and place it on its desired pose on v16. The arm v4 is currently ataconf v5 and handempty. The base is atbconf v3.
           
           For v8:
           - Pick v8 from v9 using grasp #g0. This requires the base at #q0 and a trajectory #t0.
           - Place v8 to #p0 using grasp #g0. This requires the base at #q1 and a trajectory #t1.
           
           For v12:
           - Pick v12 from v13 using grasp #g1. This requires the base at #q2 and a trajectory #t2.
           - Place v12 to #p2 using grasp #g1. This requires the base at #q3 and a trajectory #t6.
           
           For v14:
           - Pick v14 from v15 using grasp #g2. This requires the base at #q4 and a trajectory #t7.
           - Place v14 to #p1 using grasp #g2. This requires the base at #q5 and a trajectory #t8.
           
           We will proceed in an arbitrary order, for example, v8, then v12, then v14.
           
           1. Pick v8:
              - Current base config: v3. Required for picking v8 from v9: #q0. So, `move_base v3 #q0 #t3`.
              - Then, `pick v4 v8 v9 #g0 #q0 #t0`.
              - After picking, arm v4 is holding v8.
           
           2. Place v8:
              - Current base config: #q0. Required for placing v8 to #p0: #q1. So, `move_base #q0 #q1 #o0`.
              - Then, `place v4 v8 #p0 #g0 #q1 #t1`.
              - After placing, arm v4 is handempty.
           
           3. Pick v12:
              - Current base config: #q1. Required for picking v12 from v13: #q2. So, `move_base #q1 #q2 #o0`.
              - Then, `pick v4 v12 v13 #g1 #q2 #t2`.
              - After picking, arm v4 is holding v12.
           
           4. Place v12:
              - Current base config: #q2. Required for placing v12 to #p2: #q3. So, `move_base #q2 #q3 #o0`.
              - Then, `place v4 v12 #p2 #g1 #q3 #t6`.
              - After placing, arm v4 is handempty.
           
           5. Pick v14:
              - Current base config: #q3. Required for picking v14 from v15: #q4. So, `move_base #q3 #q4 #o0`.
              - Then, `pick v4 v14 v15 #g2 #q4 #t7`.
              - After picking, arm v4 is holding v14.
           
           6. Place v14:
              - Current base config: #q4. Required for placing v14 to #p1: #q5. So, `move_base #q4 #q5 #o0`.
              - Then, `place v4 v14 #p1 #g2 #q5 #t8`.
              - After placing, arm v4 is handempty.
           
           All preconditions are met by this sequence of actions.
           
           --Plan--:
           (move_base v3 #q0 #t3)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q1 #o0)
           (place v4 v8 #p0 #g0 #q1 #t1)
           (move_base #q1 #q2 #o0)
           (pick v4 v12 v13 #g1 #q2 #t2)
           (move_base #q2 #q3 #o0)
           (place v4 v12 #p2 #g1 #q3 #t6)
           (move_base #q3 #q4 #o0)
           (pick v4 v14 v15 #g2 #q4 #t7)
           (move_base #q4 #q5 #o0)
           (place v4 v14 #p1 #g2 #q5 #t8)

