User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v14, v15)
           Atom bconf(v3)
           Atom aconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom graspable(v14)
           Atom ataconf(v6, v7)
           Atom graspable(v12)
           Atom arm(v4)
           Atom atpose(v8, v9)
           Atom canmove()
           Atom stackable(v12, v10)
           Atom supported(v8, v9, v11)
           Atom stackable(v8, v16)
           Atom atpose(v12, v13)
           Atom aconf(v4, v5)
           Atom supported(v12, v13, v11)
           Atom handempty(v4)
           Atom controllable(v4)
           Atom supported(v14, v15, v11)
           Atom atpose(v14, v15)
           Atom pose(v12, v13)
           Atom stackable(v14, v16)
           Atom ataconf(v4, v5)
           Atom arm(v6)
           Atom atbconf(v3)
           Atom stackable(v14, v10)
           Atom handempty(v6)
           Atom stackable(v8, v10)
           Atom stackable(v12, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v14, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom grasp(v8, #o1)
           Atom grasp(v12, #o1)
           Atom supported(v8, #o2, v16)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (v8, v12, v14) that are graspable and stackable. These objects are currently at specific poses (v8 at v9, v12 at v13, v14 at v15) and supported by object v11. The robot has two arms (v4, v6) and is currently at base configuration v3 and arm configurations v5 (for v4) and v7 (for v6). Both arms are handempty and canmove(). The goal is to place all three objects (v8, v12, v14) onto object v16. To achieve this, the robot will need to pick each object from its current location and then place it onto v16. The available actions include `move_base`, `pick`, and `place`. We will use arm v4 for picking and placing, as it is the only arm with associated `kin` facts in the action instances.
           
           The plan will involve the following steps for each object:
           1. Move the base if needed (although in this case, the `kin` facts indicate that the base configuration #o3 is sufficient for all pick and place operations, and the current base configuration v3 can transition to #o3 and back). We will assume #o3 can be reached or is already effectively reached via v3 and #o0.
           2. Pick the object from its initial pose.
           3. Place the object onto a pose supported by v16.
           
           Since the goal requires placing multiple objects, the robot will have to perform a sequence of pick and place operations. It appears there are `kin` facts that allow picking from the initial poses (v9, v13, v15) and placing to a new pose #o2 which is supported by v16 for all three objects.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (move_base #o3 v3 #o0)

