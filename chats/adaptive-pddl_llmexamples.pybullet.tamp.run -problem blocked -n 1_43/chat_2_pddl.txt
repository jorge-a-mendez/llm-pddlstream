User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom controllable(v4)
           Atom graspable(v12)
           Atom stackable(v15, v10)
           Atom supported(v12, v13, v14)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom type(v8, v17)
           Atom stackable(v12, v18)
           Atom bconf(v3)
           Atom aconf(v6, v7)
           Atom supported(v8, v9, v11)
           Atom aconf(v4, v5)
           Atom arm(v6)
           Atom handempty(v4)
           Atom pose(v12, v13)
           Atom graspable(v8)
           Atom canmove()
           Atom arm(v4)
           Atom graspable(v15)
           Atom pose(v15, v16)
           Atom pose(v8, v9)
           Atom atpose(v15, v16)
           Atom atbconf(v3)
           Atom stackable(v8, v18)
           Atom stackable(v8, v10)
           Atom ataconf(v4, v5)
           Atom supported(v15, v16, v11)
           Atom ataconf(v6, v7)
           Atom handempty(v6)
           Atom type(v12, v17)
           Atom grasp(v12, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom supported(v8, #o2, v10)
           Atom grasp(v15, #o1)
           Atom grasp(v8, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to satisfy `new-axiom@0()`, which is an axiom stating that `on(?green, v18)` and `type(?green, v17)` are true for some object `?green`.
           
           From the initial state, we know:
           - `atpose(v12, v13)` and `supported(v12, v13, v14)` imply `on(v12, v14)`.
           - `type(v12, v17)` is true.
           - `stackable(v12, v18)` is true.
           - `pose(v12, #o2)` is a possible pose for `v12`.
           - `supported(v12, #o2, v18)` is a possible support relationship.
           
           To achieve `on(?green, v18)` and `type(?green, v17)`, we can set `?green` to `v12`. The `type(v12, v17)` part is already satisfied. We need to achieve `on(v12, v18)`.
           
           Currently, `v12` is at `v13` and supported by `v14`. We need to move `v12` to `v18`.
           A possible pose for `v12` on `v18` is `#o2` (`supported(v12, #o2, v18)`).
           
           So the plan would be:
           1. Pick `v12` from its current pose `v13` using arm `v4`.
           2. Place `v12` at pose `#o2` on `v18` using arm `v4`.
           
           Let's check the preconditions for these actions:
           
           **Pick `v4 v12 v13 #o1 #o3 #o4`:**
           - `kin(v4, v12, v13, #o1, #o3, #o4)`: True (given).
           - `atpose(v12, v13)`: True (given).
           - `handempty(v4)`: True (given).
           - `atbconf(#o3)`: The current `atbconf` is `v3`. We need to move to `#o3` or ensure `#o3` is `v3`. The `basemotion(v3, #o0, #o3)` and `basemotion(#o3, #o0, v3)` indicates movement between `v3` and `#o3` is possible. Since the action instance is `pick v4 v12 v13 #o1 #o3 #o4`, it implies that the base configuration for this pick is `#o3`.
           - `NegatedAtom unsafeapproach(v12, v13, #o1)`: Not explicitly false in initial state. Assuming it's safe.
           - `NegatedAtom unsafeatraj(#o4)`: Not explicitly false in initial state. Assuming it's safe.
           
           **Place `v4 v12 #o2 #o1 #o3 #o4`:**
           - `kin(v4, v12, #o2, #o1, #o3, #o4)`: True (given).
           - `atgrasp(v4, v12, #o1)`: This will be true after the pick action.
           - `atbconf(#o3)`: This will be the base configuration after the pick action (assuming the pick action resulted in being at `#o3`).
           - `NegatedAtom unsafepose(v12, #o2)`: Not explicitly false in initial state. Assuming it's safe.
           - `NegatedAtom unsafeapproach(v12, #o2, #o1)`: Not explicitly false in initial state. Assuming it's safe.
           - `NegatedAtom unsafeatraj(#o4)`: Not explicitly false in initial state. Assuming it's safe.
           
           The plan involves moving the base to `bconf #o3` before the pick, then performing the pick, and then performing the place. There are move_base actions available to change base configuration.
           
           Let's refine the plan:
           1. Move the base from `v3` to `#o3`.
           2. Pick `v12` from `v13`.
           3. Place `v12` at `#o2`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)

