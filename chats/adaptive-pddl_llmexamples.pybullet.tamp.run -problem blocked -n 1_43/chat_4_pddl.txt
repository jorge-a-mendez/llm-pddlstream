User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom controllable(v4)
           Atom graspable(v12)
           Atom stackable(v15, v10)
           Atom supported(v12, v13, v14)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom type(v8, v17)
           Atom stackable(v12, v18)
           Atom bconf(v3)
           Atom aconf(v6, v7)
           Atom supported(v8, v9, v11)
           Atom aconf(v4, v5)
           Atom arm(v6)
           Atom handempty(v4)
           Atom pose(v12, v13)
           Atom graspable(v8)
           Atom canmove()
           Atom arm(v4)
           Atom graspable(v15)
           Atom pose(v15, v16)
           Atom pose(v8, v9)
           Atom atpose(v15, v16)
           Atom atbconf(v3)
           Atom stackable(v8, v18)
           Atom stackable(v8, v10)
           Atom ataconf(v4, v5)
           Atom supported(v15, v16, v11)
           Atom ataconf(v6, v7)
           Atom handempty(v6)
           Atom type(v12, v17)
           Atom grasp(v12, #g0)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom supported(v8, #o2, v10)
           Atom grasp(v15, #o1)
           Atom grasp(v8, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v12, #p0, #g0, #q1, #t2)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t3)
           Atom basemotion(#q0, #t3, #q1)
           Atom basemotion(v3, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q1 #t3))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q1 #t2))
           ((place v4 v12 #p0 #g0 #q1 #t2))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms, `v4` and `v6`. Arm `v4` is currently at configuration `v5` and `v6` at `v7`. The robot's base is at configuration `v3`. There are three graspable objects: `v12`, `v8`, and `v15`.
           
           Object `v12` is at pose `v13` and is supported by `v14`. It is stackable on `v10` and `v18`. It is of type `v17`. There are other potential poses for `v12`: `#p0` (supported by `v18`), and `#o2` (supported by `v10` and `v18`). `v12` can be grasped with `#g0`.
           
           Object `v8` is at pose `v9` and is supported by `v11`. It is stackable on `v18` and `v10`. It is of type `v17`. There is another potential pose for `v8`: `#o2` (supported by `v18` and `v10`). `v8` can be grasped with `#o1`.
           
           Object `v15` is at pose `v16` and is supported by `v11`. It is stackable on `v10`. There is another potential pose for `v15`: `#o2` (supported by `v10`). `v15` can be grasped with `#o1`.
           
           The goal is `new-axiom@0()`, which is an axiom indicating `on(?green, v18)` and `type(?green, v17)`. From the initial state, we have `type(v12, v17)` and `type(v8, v17)`. So, `?green` can be either `v12` or `v8`. To satisfy `on(?green, v18)`, we need to place either `v12` or `v8` onto `v18`.
           
           Let's choose `v12` as `?green`. Currently, `v12` is at `v13` (supported by `v14`). We need to place it on `v18`. We have a possible pose `#p0` for `v12` that is supported by `v18`.
           So the plan is:
           1. Pick `v12` from its current pose `v13` using arm `v4`. The `kin` predicate for this is `kin(v4, v12, v13, #g0, #q0, #t0)`. This requires the robot base to be at `bconf #q0`.
           2. Move the base from `v3` to `#q0` if it's not already there.
           3. Place `v12` to `#p0` using arm `v4`. The `kin` predicate for this is `kin(v4, v12, #p0, #g0, #q1, #t2)`. This requires the robot base to be at `bconf #q1`.
           4. Move the base from `#q0` to `#q1` if it's not already there.
           
           Let's check the available actions:
           - `pick v4 v12 v13 #g0 #q0 #t0` (preconditions: `kin(v4, v12, v13, #g0, #q0, #t0)`, `atpose(v12, v13)`, `handempty(v4)`, `atbconf(#q0)`).
               - `atpose(v12, v13)` is true.
               - `handempty(v4)` is true.
               - `atbconf(v3)` is true, so we need to move to `#q0`.
           - `move_base v3 #q0 #t1` (preconditions: `basemotion(v3, #t1, #q0)`, `atbconf(v3)`, `canmove()`). All true. This will set `atbconf(#q0)`.
           - `place v4 v12 #p0 #g0 #q1 #t2` (preconditions: `kin(v4, v12, #p0, #g0, #q1, #t2)`, `atgrasp(v4, v12, #g0)`, `atbconf(#q1)`).
               - `atgrasp(v4, v12, #g0)` will be true after the pick.
               - `atbconf(#q0)` is true after the move_base, so we need to move to `#q1`.
           - `move_base #q0 #q1 #t3` (preconditions: `basemotion(#q0, #t3, #q1)`, `atbconf(#q0)`, `canmove()`). All true. This will set `atbconf(#q1)`.
           
           This plan looks solid.
           
           --Plan--:
           (move_base v3 #q0 #t1)
           (pick v4 v12 v13 #g0 #q0 #t0)
           (move_base #q0 #q1 #t3)
           (place v4 v12 #p0 #g0 #q1 #t2)

