User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom type(v8, v6)
           Atom camera(v10)
           Atom free(v12, v16)
           Atom objective(v17)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom rock(v8)
           Atom rover(v14)
           Atom objective(v18)
           Atom onboard(v10, v12)
           Atom mode(v11)
           Atom atconf(v12, v13)
           Atom rock(v7)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom conf(v14, v15)
           Atom type(v3, v2)
           Atom free(v14, v16)
           Atom atconf(v14, v15)
           Atom type(v4, v2)
           Atom rock(v4)
           Atom rock(v5)
           Atom rover(v12)
           Atom rock(v3)
           Atom type(v5, v6)
           Atom store(v16)
           Atom type(v7, v6)
           Atom lander(v9)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q5, #y3, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #o5, v3)
           Atom above(v12, #q6, v5)
           Atom conf(v12, #q6)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q0, #y0, v17)
           Atom imagerange(v12, #q0, v17)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom comvisible(v14, #q4, #y2, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v5)
           Atom above(v12, #q7, v8)
           Atom conf(v12, #q7)
           Atom above(v14, #q1, v8)
           Atom conf(v14, #q1)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q3, v1)
           Atom conf(v12, #q3)
           Atom above(v14, #q8, v1)
           Atom conf(v14, #q8)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #t10, #q6)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #t2, #q3)
           Atom motion(v12, v13, #t6, #q2)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q5, #t14, #q6)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #t13, #q3)
           Atom motion(v12, #q6, #t11, #q5)
           Atom motion(v12, #q2, #t12, #q5)
           Atom motion(v12, #q5, #t4, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t17, #q2)
           Atom motion(v12, #q3, #t8, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q0, #t1, #q3)
           Atom motion(v12, #q0, #t9, #q2)
           Atom motion(v12, #q0, #t16, #q5)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, v13, #t5, #q0)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, v15, #t19, #q8)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q5, #t15, #q7)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q7, #t18, #q5)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q4, #t3, v15)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #t0, #q1)
           Atom motion(v14, #q8, #t20, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t7, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, v15, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q3 v1 v16))
           ((sample_rock v12 #q6 v5 v16))
           ((sample_rock v12 #q7 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q1 v8 v16))
           ((sample_rock v14 #q8 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q3))
           ((move v12 #q0 #t16 #q5))
           ((move v12 #q0 #t9 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t12 #q5))
           ((move v12 #q2 #t2 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t10 #q6))
           ((move v12 #q3 #t8 #q5))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t13 #q3))
           ((move v12 #q5 #t14 #q6))
           ((move v12 #q5 #t15 #q7))
           ((move v12 #q5 #t17 #q2))
           ((move v12 #q5 #t4 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t11 #q5))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t18 #q5))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q0))
           ((move v12 v13 #t6 #q2))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t7 #q4))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #t3 v15))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t20 #q1))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q1))
           ((move v14 v15 #t19 #q8))
           ((calibrate v12 #q0 #y0 v17 v10))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((take_image v12 #q0 #y0 v17 v10 v11))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y3 v9 v3))
           ((send_analysis v12 #q5 #y3 v9 v4))
           ((send_analysis v12 #q5 #y3 v9 v7))
           ((send_analysis v12 #q5 #y3 v9 v1))
           ((send_analysis v12 #q5 #y3 v9 v5))
           ((send_analysis v12 #q5 #y3 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y2 v9 v3))
           ((send_analysis v14 #q4 #y2 v9 v4))
           ((send_analysis v14 #q4 #y2 v9 v5))
           ((send_analysis v14 #q4 #y2 v9 v7))
           ((send_analysis v14 #q4 #y2 v9 v8))
           ((send_analysis v14 #q4 #y2 v9 v1))
           ((send_image v12 #q5 #y3 v9 v17 v11))
           ((send_image v12 #q5 #y3 v9 v18 v11))
           ((send_image v14 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q4 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Plan to Satisfy the Axiom**
           
           Okay, so I need to make `new-axiom@0()` true.  Let's break this down. It's a conjunction of several facts, all of which must be true. I've already confirmed that the first four conditions are initially true.  Now, the plan:
           
           First, I'll deal with those images. I'll use rover `v12` to take and transmit them.  I'll start by moving `v12` to `#q0` to get a good view of `v17`, calibrate the camera `v10` it has onboard, take an image using mode `v11`, then move to `#q2` and repeat the process for `v18`. After that, I'll relocate `v12` to a communication configuration `#q5` and send those images to `v9`.  That covers `receivedimage(v17, v11)` and `receivedimage(v18, v11)`.
           
           Next, I need to get those rock samples analyzed.  Rover `v14` seems best for this. I'll first move `v14` to location `#q8` to sample rock `v1` (a stone of type v2). I'll need to drop it to free up the store, move `v14` to location `#q1` to sample rock `v8` (a soil of type v6), drop that rock, then move to communication configuration `#q4` and send the analyses.  Finally, I need to make sure the store is free, so I must drop the last rock sampled by rover `v14`.
           
           Once the images are sent and analyses transmitted, I will move rover `v12` back to its initial location `v13` and also move rover `v14` back to its initial configuration `v15`, to maintain the necessary final `atconf` state. This satisfies all the conditions of the axiom. The images must be sent, analyses must be received.
           
           Therefore, my plan looks like this:
           
           1.  `move(v12, v13, #t5, #q0)`
           2.  `calibrate(v12, #q0, #y0, v17, v10)`
           3.  `take_image(v12, #q0, #y0, v17, v10, v11)`
           4.  `move(v12, #q0, #t9, #q2)`
           5.  `calibrate(v12, #q2, #y1, v18, v10)`
           6.  `take_image(v12, #q2, #y1, v18, v10, v11)`
           7.  `move(v12, #q2, #t12, #q5)`
           8.  `send_image(v12, #q5, #y3, v9, v17, v11)`
           9.  `send_image(v12, #q5, #y3, v9, v18, v11)`
           10. `move(v12, #q5, #t4, v13)`
           11. `move(v14, v15, #t19, #q8)`
           12. `sample_rock(v14, #q8, v1, v16)`
           13. `drop_rock(v14, v16)`
           14. `move(v14, #q8, #t20, #q1)`
           15. `sample_rock(v14, #q1, v8, v16)`
           16. `move(v14, #q1, #t7, #q4)`
           17. `send_analysis(v14, #q4, #y2, v9, v1)`
           18. `send_analysis(v14, #q4, #y2, v9, v8)`
           19. `drop_rock(v14, v16)`
           20. `move(v14, #q4, #t3, v15)`
           
           I'm confident this will make `new-axiom@0()` true.
           
)

Model:     **A Plan to Satisfy the Axiom**
           
           Okay, so I need to make `new-axiom@0()` true.  Let's break this down. It's a conjunction of several facts, all of which must be true. I've already confirmed that the first four conditions are initially true.  Now, the plan:
           
           First, I'll deal with those images. I'll use rover `v12` to take and transmit them.  I'll start by moving `v12` to `#q0` to get a good view of `v17`, calibrate the camera `v10` it has onboard, take an image using mode `v11`, then move to `#q2` and repeat the process for `v18`. After that, I'll relocate `v12` to a communication configuration `#q5` and send those images to `v9`.  That covers `receivedimage(v17, v11)` and `receivedimage(v18, v11)`.
           
           Next, I need to get those rock samples analyzed.  Rover `v14` seems best for this. I'll first move `v14` to location `#q8` to sample rock `v1` (a stone of type v2). I'll need to drop it to free up the store, move `v14` to location `#q1` to sample rock `v8` (a soil of type v6), drop that rock, then move to communication configuration `#q4` and send the analyses.  Finally, I need to make sure the store is free, so I must drop the last rock sampled by rover `v14`.
           
           Once the images are sent and analyses transmitted, I will move rover `v12` back to its initial location `v13` and also move rover `v14` back to its initial configuration `v15`, to maintain the necessary final `atconf` state. This satisfies all the conditions of the axiom. The images must be sent, analyses must be received.
           
           Therefore, my plan looks like this:
           
           1.  `move(v12, v13, #t5, #q0)`
           2.  `calibrate(v12, #q0, #y0, v17, v10)`
           3.  `take_image(v12, #q0, #y0, v17, v10, v11)`
           4.  `move(v12, #q0, #t9, #q2)`
           5.  `calibrate(v12, #q2, #y1, v18, v10)`
           6.  `take_image(v12, #q2, #y1, v18, v10, v11)`
           7.  `move(v12, #q2, #t12, #q5)`
           8.  `send_image(v12, #q5, #y3, v9, v17, v11)`
           9.  `send_image(v12, #q5, #y3, v9, v18, v11)`
           10. `move(v12, #q5, #t4, v13)`
           11. `move(v14, v15, #t19, #q8)`
           12. `sample_rock(v14, #q8, v1, v16)`
           13. `drop_rock(v14, v16)`
           14. `move(v14, #q8, #t20, #q1)`
           15. `sample_rock(v14, #q1, v8, v16)`
           16. `move(v14, #q1, #t7, #q4)`
           17. `send_analysis(v14, #q4, #y2, v9, v1)`
           18. `send_analysis(v14, #q4, #y2, v9, v8)`
           19. `drop_rock(v14, v16)`
           20. `move(v14, #q4, #t3, v15)`
           
           I'm confident this will make `new-axiom@0()` true.
           

