User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v7 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((2.015, 0.041), (2.154, 0.179)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.187, -1.929), (-0.821, -1.571)).
           Object v4 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.086, 0.073), (-1.98, 0.179)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.821, -1.929), (1.187, -1.571)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.509, -1.396), (1.645, -1.261)).
           Object v5 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.928, 1.446), (1.06, 1.578)).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.346, 1.976), (0.419, 2.049)).
           Object v9 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.405, -2.346), (-1.395, -1.654)).
           Object v3 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.465, 0.156), (-0.379, 0.242)).
           Object v15 is a base configuration with (x, y, theta) = (-1.0, -1.75, 0.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.102, 2.036), (-2.006, 2.132)).
           Object v1 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.503, -2.147), (1.591, -2.06)).
           Object v13 is a base configuration with (x, y, theta) = (1.0, -1.75, 3.142).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v12)
           Atom rock(v4)
           Atom objective(v17)
           Atom atconf(v12, v13)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom lander(v9)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom type(v4, v2)
           Atom rock(v1)
           Atom rock(v7)
           Atom type(v7, v6)
           Atom type(v1, v2)
           Atom type(v3, v2)
           Atom rock(v3)
           Atom free(v14, v16)
           Atom camera(v10)
           Atom free(v12, v16)
           Atom rover(v12)
           Atom rock(v5)
           Atom onboard(v10, v14)
           Atom conf(v12, v13)
           Atom mode(v11)
           Atom rover(v14)
           Atom rock(v8)
           Atom store(v16)
           Atom type(v5, v6)
           Atom atconf(v14, v15)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v5)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v1)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v1)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be satisfied by a number of conditions, including `receivedimage(v17, v11)` and `receivedimage(v18, v11)`. Both of these predicates mean that images of objectives v17 and v18, taken in mode v11, have been successfully transmitted to the lander v9.
           The initial state shows that rover v12 is at configuration v13 and rover v14 is at configuration v15. Both rovers have camera v10 onboard, which supports mode v11. The store v16 is free for both rovers. Objectives v17 and v18 are present. Lander v9 is present.
           There are several `imagevisible` and `comvisible` predicates, suggesting potential for taking and sending images. Rover v12 at configuration #o3 has image visibility to both v17 and v18 with ray #o4. Similarly, rover v14 at configuration #o3 also has image visibility to v17 and v18 with ray #o4. Both rovers at configuration #o0 have communication visibility to lander v9 with ray #o1.
           
           However, the provided list of allowed action instances is extremely restrictive:
           - `(move v12 v13 #o2 v13)`: This is a no-op, moving rover v12 from v13 to v13.
           - `(move v14 v15 #o2 v15)`: This is also a no-op, moving rover v14 from v15 to v15.
           - `(drop_rock v12 v16)`: This requires `full(v12, v16)`, which is not in the initial state.
           - `(drop_rock v14 v16)`: This requires `full(v14, v16)`, which is not in the initial state.
           
           None of the provided action instances allow for taking images, calibrating cameras, sending images, sampling rocks, or sending analysis. Without the ability to `take_image` and `send_image`, the predicates `receivedimage(v17, v11)` and `receivedimage(v18, v11)` cannot be achieved. Thus, `new-axiom@0()` cannot be satisfied.
           
           The goal is unreachable because there are no available actions to take and send images, which are necessary to satisfy the `receivedimage` predicates required by the `new-axiom@0()` goal.

