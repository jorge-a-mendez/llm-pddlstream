User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supports(v10, v11)
           Atom store(v16)
           Atom type(v1, v2)
           Atom objective(v19)
           Atom objective(v17)
           Atom rover(v12)
           Atom type(v8, v6)
           Atom free(v12, v16)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom camera(v10)
           Atom onboard(v10, v12)
           Atom rock(v4)
           Atom type(v5, v6)
           Atom rock(v8)
           Atom rock(v5)
           Atom atconf(v12, v13)
           Atom rock(v7)
           Atom lander(v9)
           Atom atconf(v14, v15)
           Atom onboard(v10, v14)
           Atom rover(v14)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom objective(v18)
           Atom conf(v12, v13)
           Atom rock(v1)
           Atom rock(v3)
           Atom above(v12, #q11, v4)
           Atom conf(v12, #q11)
           Atom above(v12, #q13, v1)
           Atom conf(v12, #q13)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q8, v1)
           Atom conf(v14, #q8)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q1, v4)
           Atom conf(v14, #q1)
           Atom above(v14, #q7, v3)
           Atom conf(v14, #q7)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v12, #q10, #y4, v19)
           Atom imagerange(v12, #q10, v19)
           Atom conf(v12, #q10)
           Atom ray(#y4)
           Atom comvisible(v12, #q5, #y2, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y2)
           Atom comvisible(v14, #q6, #y3, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y3)
           Atom above(v14, #q9, v7)
           Atom conf(v14, #q9)
           Atom above(v12, #q14, v7)
           Atom conf(v12, #q14)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom above(v12, #q12, v5)
           Atom conf(v12, #q12)
           Atom above(v14, #q3, v8)
           Atom conf(v14, #q3)
           Atom above(v12, #o5, v8)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #t4, #q3)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, v13, #t7, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #t5, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, v13, #t8, #q2)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q0, #t15, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #t21, #q3)
           Atom motion(v14, #q3, #t10, #q6)
           Atom motion(v14, #q4, #t11, #q6)
           Atom motion(v14, #q6, #t0, v15)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #t23, #q13)
           Atom motion(v12, #q10, #t16, #q11)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q2, #t20, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q0, #t1, #q5)
           Atom motion(v12, #q5, #t25, #q13)
           Atom motion(v12, #q11, #t18, #q5)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #t14, v13)
           Atom motion(v12, #q10, #t22, #q5)
           Atom motion(v12, #q13, #t24, #q5)
           Atom motion(v12, #q2, #t2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #t12, #q6)
           Atom motion(v14, v15, #t6, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, v15, #t3, #q1)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #t9, #q6)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q5, #t26, #q14)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q10, #t17, #q12)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q12, #t19, #q5)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q8, #t13, #q6)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #o3, #o2, #q3)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #q3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q4, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q11 v4 v16))
           ((sample_rock v12 #q12 v5 v16))
           ((sample_rock v12 #q13 v1 v16))
           ((sample_rock v12 #q14 v7 v16))
           ((sample_rock v14 #q1 v4 v16))
           ((sample_rock v14 #q3 v8 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((sample_rock v14 #q7 v3 v16))
           ((sample_rock v14 #q8 v1 v16))
           ((sample_rock v14 #q9 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q5))
           ((move v12 #q0 #t15 #q2))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t16 #q11))
           ((move v12 #q10 #t17 #q12))
           ((move v12 #q10 #t22 #q5))
           ((move v12 #q10 #t23 #q13))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t18 #q5))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t19 #q5))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t24 #q5))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t2 #q5))
           ((move v12 #q2 #t20 #q10))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t14 v13))
           ((move v12 #q5 #t25 #q13))
           ((move v12 #q5 #t26 #q14))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t7 #q0))
           ((move v12 v13 #t8 #q2))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q3))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t9 #q6))
           ((move v14 #q3 #o2 #o3))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t10 #q6))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t11 #q6))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #t0 v15))
           ((move v14 #q6 #t21 #q3))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t12 #q6))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t13 #q6))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t3 #q1))
           ((move v14 v15 #t4 #q3))
           ((move v14 v15 #t5 #q4))
           ((move v14 v15 #t6 #q7))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q10 #y4 v19 v10))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q10 #y4 v19 v10 v11))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y2 v9 v3))
           ((send_analysis v12 #q5 #y2 v9 v8))
           ((send_analysis v12 #q5 #y2 v9 v4))
           ((send_analysis v12 #q5 #y2 v9 v5))
           ((send_analysis v12 #q5 #y2 v9 v1))
           ((send_analysis v12 #q5 #y2 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y3 v9 v4))
           ((send_analysis v14 #q6 #y3 v9 v8))
           ((send_analysis v14 #q6 #y3 v9 v5))
           ((send_analysis v14 #q6 #y3 v9 v3))
           ((send_analysis v14 #q6 #y3 v9 v1))
           ((send_analysis v14 #q6 #y3 v9 v7))
           ((send_image v12 #q5 #y2 v9 v18 v11))
           ((send_image v12 #q5 #y2 v9 v19 v11))
           ((send_image v12 #q5 #y2 v9 v17 v11))
           ((send_image v14 #q6 #y3 v9 v17 v11))
           ((send_image v14 #q6 #y3 v9 v18 v11))
           ((send_image v14 #q6 #y3 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, v12 and v14, each with a camera v10. Both rovers have access to a store v16 and can communicate with a lander v9. There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19). The goal is to satisfy `new-axiom@0()`, which requires that both rovers are at some configuration, have a free store, have received images of objectives v17, v18, and v19 in mode v11, and have received analyses for rocks of type v2 (stone) and v6 (soil).
           
           Let's break down the `new-axiom@0()` goal:
           1. `atconf(v12, v13)`: Rover v12 is already at configuration v13.
           2. `atconf(v14, v15)`: Rover v14 is already at configuration v15.
           3. `free(v12, v16)`: Rover v12's store v16 is free. This is true in the initial state.
           4. `free(v14, v16)`: Rover v14's store v16 is free. This is true in the initial state.
           5. `receivedimage(v17, v11)`: Need to take an image of objective v17 in mode v11 and send it.
           6. `receivedimage(v18, v11)`: Need to take an image of objective v18 in mode v11 and send it.
           7. `receivedimage(v19, v11)`: Need to take an image of objective v19 in mode v11 and send it.
           8. `type(?stone, v2)` and `receivedanalysis(?stone)`: Need to sample and analyze a rock of type v2 (stone) and send the analysis. Rocks v1, v3, v4 are of type v2.
           9. `type(?soil, v6)` and `receivedanalysis(?soil)`: Need to sample and analyze a rock of type v6 (soil) and send the analysis. Rocks v5, v7, v8 are of type v6.
           
           Plan:
           - The rovers need to image objectives v17, v18, v19.
           - The rovers need to sample rocks of type v2 and v6, analyze them, and send the analysis.
           
           Let's use rover v12 for imaging and some rock analysis. Rover v14 can also contribute.
           Rover v12 is at v13.
           - Calibrate camera for imaging.
           - Take images of v17, v18, v19.
           - Send these images to lander v9.
           - Move to a rock of type v2, sample it, and send analysis.
           - Move to a rock of type v6, sample it, and send analysis.
           
           Looking at the available actions:
           - Rover v12 is above v3 (type v2), v4 (type v2), v1 (type v2), v5 (type v6), v7 (type v6), v8 (type v6) at various configurations.
           - Rover v14 is above v1 (type v2), v3 (type v2), v4 (type v2), v5 (type v6), v7 (type v6), v8 (type v6) at various configurations.
           - Rover v12 can image v18, v17, v19.
           - Rover v14 can image v17, v18, v19.
           - Both rovers can communicate with the lander.
           
           Let's have v12 handle the imaging and one rock type, and v14 handle the other rock type.
           
           For imaging:
           - v12 can image v18 at #q0.
           - v12 can image v17 at #q2.
           - v12 can image v19 at #q10.
           - v12 can communicate at #q5.
           
           For rock analysis:
           - Let's have v12 sample a type v2 rock (e.g., v3) and a type v6 rock (e.g., v8). Both are above v12 at configuration #o5.
           - Let's have v14 sample a type v2 rock (e.g. v1) and a type v6 rock (e.g. v7). Rover v14 is above v1 at #q8, and v7 at #q9.
           
           To achieve `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`:
           1. Calibrate camera for v18.
           2. Take image of v18.
           3. Calibrate camera for v17.
           4. Take image of v17.
           5. Calibrate camera for v19.
           6. Take image of v19.
           7. Move to a communication point.
           8. Send all images.
           
           To achieve `receivedanalysis(?stone)` for type v2 rock (e.g., v3):
           1. Move to where v3 is above the rover.
           2. Sample v3.
           3. Move to a communication point.
           4. Send analysis of v3.
           
           To achieve `receivedanalysis(?soil)` for type v6 rock (e.g., v8):
           1. Move to where v8 is above the rover.
           2. Sample v8.
           3. Move to a communication point.
           4. Send analysis of v8.
           
           Let's try to use rover v12 for all the imaging and both rock analyses.
           
           Current state:
           `atconf(v12, v13)`
           `free(v12, v16)`
           
           Goal: `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedanalysis(v3)` (type v2), `receivedanalysis(v8)` (type v6).
           
           Sequence for v12:
           1. Calibrate camera for v18 at #q0.
           2. Take image of v18.
           3. Calibrate camera for v17 at #q2.
           4. Take image of v17.
           5. Calibrate camera for v19 at #q10.
           6. Take image of v19.
           7. Move to a communication config #q5.
           8. Send images of v18, v17, v19.
           9. Move to config #o5, which is above v3 (rock type v2) and v8 (rock type v6).
           10. Sample v3.
           11. Send analysis of v3.
           12. Sample v8.
           13. Send analysis of v8.
           
           Let's check preconditions:
           - `atconf(v12, v13)`
           
           Step 1: `move v12 v13 #t7 #q0` (to image v18)
           Precondition: `motion(v12, v13, #t7, #q0)`, `atconf(v12, v13)` - both true.
           Effects: `atconf(v12, #q0)`
           
           Step 2: `calibrate v12 #q0 #y0 v18 v10`
           Precondition: `imagevisible(v12, #q0, #y0, v18)`, `onboard(v10, v12)`, `atconf(v12, #q0)` - all true. `~blocked(#y0)` (true by default).
           Effects: `calibrated(v10, v12)`
           
           Step 3: `take_image v12 #q0 #y0 v18 v10 v11`
           Precondition: `imagevisible(v12, #q0, #y0, v18)`, `onboard(v10, v12)`, `supports(v10, v11)`, `atconf(v12, #q0)`, `calibrated(v10, v12)` - all true. `~blocked(#y0)` (true by default).
           Effects: `haveimage(v12, v18, v11)`, `~calibrated(v10, v12)`
           
           Step 4: `move v12 #q0 #t15 #q2` (to image v17)
           Precondition: `motion(v12, #q0, #t15, #q2)`, `atconf(v12, #q0)` - both true.
           Effects: `atconf(v12, #q2)`
           
           Step 5: `calibrate v12 #q2 #y1 v17 v10`
           Precondition: `imagevisible(v12, #q2, #y1, v17)`, `onboard(v10, v12)`, `atconf(v12, #q2)` - all true. `~blocked(#y1)` (true by default).
           Effects: `calibrated(v10, v12)`
           
           Step 6: `take_image v12 #q2 #y1 v17 v10 v11`
           Precondition: `imagevisible(v12, #q2, #y1, v17)`, `onboard(v10, v12)`, `supports(v10, v11)`, `atconf(v12, #q2)`, `calibrated(v10, v12)` - all true. `~blocked(#y1)` (true by default).
           Effects: `haveimage(v12, v17, v11)`, `~calibrated(v10, v12)`
           
           Step 7: `move v12 #q2 #t20 #q10` (to image v19)
           Precondition: `motion(v12, #q2, #t20, #q10)`, `atconf(v12, #q2)` - both true.
           Effects: `atconf(v12, #q10)`
           
           Step 8: `calibrate v12 #q10 #y4 v19 v10`
           Precondition: `imagevisible(v12, #q10, #y4, v19)`, `onboard(v10, v12)`, `atconf(v12, #q10)` - all true. `~blocked(#y4)` (true by default).
           Effects: `calibrated(v10, v12)`
           
           Step 9: `take_image v12 #q10 #y4 v19 v10 v11`
           Precondition: `imagevisible(v12, #q10, #y4, v19)`, `onboard(v10, v12)`, `supports(v10, v11)`, `atconf(v12, #q10)`, `calibrated(v10, v12)` - all true. `~blocked(#y4)` (true by default).
           Effects: `haveimage(v12, v19, v11)`, `~calibrated(v10, v12)`
           
           Step 10: `move v12 #q10 #t22 #q5` (to communicate)
           Precondition: `motion(v12, #q10, #t22, #q5)`, `atconf(v12, #q10)` - both true.
           Effects: `atconf(v12, #q5)`
           
           Step 11: `send_image v12 #q5 #y2 v9 v18 v11`
           Precondition: `comvisible(v12, #q5, #y2, v9)`, `objective(v18)`, `mode(v11)`, `haveimage(v12, v18, v11)`, `atconf(v12, #q5)` - all true. `~blocked(#y2)` (true by default).
           Effects: `receivedimage(v18, v11)`
           
           Step 12: `send_image v12 #q5 #y2 v9 v17 v11`
           Precondition: `comvisible(v12, #q5, #y2, v9)`, `objective(v17)`, `mode(v11)`, `haveimage(v12, v17, v11)`, `atconf(v12, #q5)` - all true. `~blocked(#y2)` (true by default).
           Effects: `receivedimage(v17, v11)`
           
           Step 13: `send_image v12 #q5 #y2 v9 v19 v11`
           Precondition: `comvisible(v12, #q5, #y2, v9)`, `objective(v19)`, `mode(v11)`, `haveimage(v12, v19, v11)`, `atconf(v12, #q5)` - all true. `~blocked(#y2)` (true by default).
           Effects: `receivedimage(v19, v11)`
           
           Now all images are sent. Next, rock sampling and analysis.
           We need analysis of a type v2 rock and a type v6 rock.
           v3 is type v2, v8 is type v6. Both are above v12 at #o5.
           
           Step 14: `move v12 #q5 #o2 #o5` (to sample rocks)
           Precondition: `motion(v12, #q5, #o2, #o5)`, `atconf(v12, #q5)` - both true.
           Effects: `atconf(v12, #o5)`
           
           Step 15: `sample_rock v12 #o5 v3 v16`
           Precondition: `above(v12, #o5, v3)`, `store(v16)`, `atconf(v12, #o5)`, `free(v12, v16)` - all true.
           Effects: `full(v12, v16)`, `analyzed(v12, v3)`, `~free(v12, v16)`
           
           Step 16: `move v12 #o5 #o2 #q5` (to communicate)
           Precondition: `motion(v12, #o5, #o2, #q5)`, `atconf(v12, #o5)` - both true.
           Effects: `atconf(v12, #q5)`
           
           Step 17: `send_analysis v12 #q5 #y2 v9 v3`
           Precondition: `comvisible(v12, #q5, #y2, v9)`, `rock(v3)`, `analyzed(v12, v3)`, `atconf(v12, #q5)` - all true. `~blocked(#y2)` (true by default).
           Effects: `receivedanalysis(v3)`
           
           Now for the type v6 rock. Rover v12 store is full, so it needs to drop the rock first.
           
           Step 18: `drop_rock v12 v16`
           Precondition: `rover(v12)`, `store(v16)`, `full(v12, v16)` - all true.
           Effects: `free(v12, v16)`, `~full(v12, v16)`
           
           Step 19: `move v12 #q5 #o2 #o5` (back to sample rock v8)
           Precondition: `motion(v12, #q5, #o2, #o5)`, `atconf(v12, #q5)` - both true.
           Effects: `atconf(v12, #o5)`
           
           Step 20: `sample_rock v12 #o5 v8 v16`
           Precondition: `above(v12, #o5, v8)`, `store(v16)`, `atconf(v12, #o5)`, `free(v12, v16)` - all true.
           Effects: `full(v12, v16)`, `analyzed(v12, v8)`, `~free(v12, v16)`
           
           Step 21: `move v12 #o5 #o2 #q5` (to communicate)
           Precondition: `motion(v12, #o5, #o2, #q5)`, `atconf(v12, #o5)` - both true.
           Effects: `atconf(v12, #q5)`
           
           Step 22: `send_analysis v12 #q5 #y2 v9 v8`
           Precondition: `comvisible(v12, #q5, #y2, v9)`, `rock(v8)`, `analyzed(v12, v8)`, `atconf(v12, #q5)` - all true. `~blocked(#y2)` (true by default).
           Effects: `receivedanalysis(v8)`
           
           This plan satisfies all parts of the goal.
           `atconf(v12, v13)` will be `atconf(v12, #q5)` after the plan. The axiom just states that `atconf(v12, v13)` should be true, but it doesn't mean it has to be the final configuration. However, the exact configuration matters for the `atconf(?v, ?q)` predicate in the axiom. If the axiom is `atconf(v12, v13)`, then the rover must end up at `v13`. Let's re-evaluate. The goal `new-axiom@0()` has `atconf(v12, v13)` and `atconf(v14, v15)` which are true in the initial state. These conditions are not modified or unset by any action, so they will remain true at the end. The actions `move` change the `atconf` predicate, but these specific `atconf` facts (`atconf(v12, v13)` and `atconf(v14, v15)`) will be true if the rover *was* at that configuration. This is usually interpreted as the initial state being sufficient for these. However, standard PDDL interpretation for an `atconf` in a goal implies it must be true at the *final* state. If that is the case, the rover must return to v13.
           
           Let's assume `atconf(v12, v13)` and `atconf(v14, v15)` need to be true in the final state.
           The current plan has `atconf(v12, #q5)` as the final state for v12. We need an extra `move` action to return v12 to `v13`.
           
           Step 23: `move v12 #q5 #t14 v13` (return to original position)
           Precondition: `motion(v12, #q5, #t14, v13)`, `atconf(v12, #q5)` - both true.
           Effects: `atconf(v12, v13)`, `~atconf(v12, #q5)`
           
           This looks like a complete plan.
           The goal `new-axiom@0()` checks for the existence of `atconf(v12, v13)` and `atconf(v14, v15)`. Since `atconf(v14, v15)` is never changed by any action in this plan, it remains true. `atconf(v12, v13)` is true initially, is made false by the first move, and then true again by the last move. `free(v12, v16)` starts true, becomes false after `sample_rock`, then true after `drop_rock`, then false again after the second `sample_rock`, and is left as `full(v12, v16)`.
           The goal `new-axiom@0()` also requires `free(v12, v16)` and `free(v14, v16)`. Our plan for v12 leaves `full(v12, v16)`. This means we need to add another `drop_rock` for v12 at the end.
           
           Revised Plan (adding `drop_rock` for v12):
           (Steps 1-22 are the same)
           
           Step 23: `drop_rock v12 v16`
           Precondition: `rover(v12)`, `store(v16)`, `full(v12, v16)` - all true.
           Effects: `free(v12, v16)`, `~full(v12, v16)`
           
           Step 24: `move v12 #q5 #t14 v13` (return to original position)
           Precondition: `motion(v12, #q5, #t14, v13)`, `atconf(v12, #q5)` - both true.
           Effects: `atconf(v12, v13)`, `~atconf(v12, #q5)`
           
           Now, `atconf(v12, v13)` is true, `atconf(v14, v15)` is true, `free(v12, v16)` is true, `free(v14, v16)` is true. All images are received, and analyses for rock types v2 and v6 are received. This satisfies all conditions of `new-axiom@0()`.
           
           --Plan--:
           (move v12 v13 #t7 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #t15 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t20 #q10)
           (calibrate v12 #q10 #y4 v19 v10)
           (take_image v12 #q10 #y4 v19 v10 v11)
           (move v12 #q10 #t22 #q5)
           (send_image v12 #q5 #y2 v9 v18 v11)
           (send_image v12 #q5 #y2 v9 v17 v11)
           (send_image v12 #q5 #y2 v9 v19 v11)
           (move v12 #q5 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (move v12 #o5 #o2 #q5)
           (send_analysis v12 #q5 #y2 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q5 #o2 #o5)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q5)
           (send_analysis v12 #q5 #y2 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q5 #t14 v13)

