User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supports(v10, v11)
           Atom store(v16)
           Atom type(v1, v2)
           Atom objective(v19)
           Atom objective(v17)
           Atom rover(v12)
           Atom type(v8, v6)
           Atom free(v12, v16)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom camera(v10)
           Atom onboard(v10, v12)
           Atom rock(v4)
           Atom type(v5, v6)
           Atom rock(v8)
           Atom rock(v5)
           Atom atconf(v12, v13)
           Atom rock(v7)
           Atom lander(v9)
           Atom atconf(v14, v15)
           Atom onboard(v10, v14)
           Atom rover(v14)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom objective(v18)
           Atom conf(v12, v13)
           Atom rock(v1)
           Atom rock(v3)
           Atom above(v12, #q11, v4)
           Atom conf(v12, #q11)
           Atom above(v12, #q13, v1)
           Atom conf(v12, #q13)
           Atom above(v12, #q16, v3)
           Atom conf(v12, #q16)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q8, v1)
           Atom conf(v14, #q8)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q1, v4)
           Atom conf(v14, #q1)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #q7, v3)
           Atom conf(v14, #q7)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v12, #q10, #y4, v19)
           Atom imagerange(v12, #q10, v19)
           Atom conf(v12, #q10)
           Atom ray(#y4)
           Atom comvisible(v14, #q6, #y3, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y3)
           Atom comvisible(v12, #q5, #y2, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y2)
           Atom above(v12, #q14, v7)
           Atom conf(v12, #q14)
           Atom above(v14, #q9, v7)
           Atom conf(v14, #q9)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom above(v12, #q12, v5)
           Atom conf(v12, #q12)
           Atom above(v14, #q3, v8)
           Atom conf(v14, #q3)
           Atom above(v12, #q15, v8)
           Atom conf(v12, #q15)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q11, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q15, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q16)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #t4, #q3)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #t7, #q0)
           Atom motion(v12, #q0, #o2, #q16)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q0)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v14, v15, #t5, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v12, #q2, #o2, #q16)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q0, #t15, #q2)
           Atom motion(v12, v13, #t8, #q2)
           Atom motion(v12, #q16, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t2, #q5)
           Atom motion(v12, #q5, #t31, #q11)
           Atom motion(v12, #q11, #t18, #q5)
           Atom motion(v12, #q5, #t34, #q2)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q16, #t28, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t29, #q15)
           Atom motion(v12, #q5, #t14, v13)
           Atom motion(v12, #q5, #t25, #q13)
           Atom motion(v12, #q0, #t1, #q5)
           Atom motion(v12, #q5, #t30, #q16)
           Atom motion(v12, #q15, #t27, #q5)
           Atom motion(v12, #q13, #t24, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, v15, #t6, #q7)
           Atom motion(v12, #q5, #t32, #q10)
           Atom motion(v12, #q10, #o2, #q15)
           Atom motion(v12, #q10, #t16, #q11)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q2, #t20, #q10)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q15, #o2, #q10)
           Atom motion(v12, #q16, #o2, #q10)
           Atom motion(v12, #q10, #t23, #q13)
           Atom motion(v12, #q10, #o2, #q16)
           Atom motion(v12, #q10, #t22, #q5)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v14, #q4, #t11, #q6)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #t12, #q6)
           Atom motion(v14, #q6, #t0, v15)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #t21, #q3)
           Atom motion(v14, #q3, #t10, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #t9, #q6)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #t3, #q1)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q16)
           Atom motion(v12, #q5, #t33, #q12)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q10, #t17, #q12)
           Atom motion(v12, #q12, #t19, #q5)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #t13, #q6)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q5, #t26, #q14)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q3)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #q3, #o2, #o3)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q11 v4 v16))
           ((sample_rock v12 #q12 v5 v16))
           ((sample_rock v12 #q13 v1 v16))
           ((sample_rock v12 #q14 v7 v16))
           ((sample_rock v12 #q15 v8 v16))
           ((sample_rock v12 #q16 v3 v16))
           ((sample_rock v14 #q1 v4 v16))
           ((sample_rock v14 #q3 v8 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((sample_rock v14 #q7 v3 v16))
           ((sample_rock v14 #q8 v1 v16))
           ((sample_rock v14 #q9 v7 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q16))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q5))
           ((move v12 #q0 #t15 #q2))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q15))
           ((move v12 #q10 #o2 #q16))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t16 #q11))
           ((move v12 #q10 #t17 #q12))
           ((move v12 #q10 #t22 #q5))
           ((move v12 #q10 #t23 #q13))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q16))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t18 #q5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q16))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t19 #q5))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q16))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t24 #q5))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q10))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q16))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t27 #q5))
           ((move v12 #q16 #o2 #q0))
           ((move v12 #q16 #o2 #q10))
           ((move v12 #q16 #o2 #q11))
           ((move v12 #q16 #o2 #q12))
           ((move v12 #q16 #o2 #q13))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q2))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t28 #q5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q16))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t2 #q5))
           ((move v12 #q2 #t20 #q10))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t14 v13))
           ((move v12 #q5 #t25 #q13))
           ((move v12 #q5 #t26 #q14))
           ((move v12 #q5 #t29 #q15))
           ((move v12 #q5 #t30 #q16))
           ((move v12 #q5 #t31 #q11))
           ((move v12 #q5 #t32 #q10))
           ((move v12 #q5 #t33 #q12))
           ((move v12 #q5 #t34 #q2))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t7 #q0))
           ((move v12 v13 #t8 #q2))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q3))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t9 #q6))
           ((move v14 #q3 #o2 #o3))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t10 #q6))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t11 #q6))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #t0 v15))
           ((move v14 #q6 #t21 #q3))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t12 #q6))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t13 #q6))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t3 #q1))
           ((move v14 v15 #t4 #q3))
           ((move v14 v15 #t5 #q4))
           ((move v14 v15 #t6 #q7))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q10 #y4 v19 v10))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q10 #y4 v19 v10 v11))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y2 v9 v4))
           ((send_analysis v12 #q5 #y2 v9 v5))
           ((send_analysis v12 #q5 #y2 v9 v1))
           ((send_analysis v12 #q5 #y2 v9 v7))
           ((send_analysis v12 #q5 #y2 v9 v8))
           ((send_analysis v12 #q5 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y3 v9 v4))
           ((send_analysis v14 #q6 #y3 v9 v8))
           ((send_analysis v14 #q6 #y3 v9 v5))
           ((send_analysis v14 #q6 #y3 v9 v3))
           ((send_analysis v14 #q6 #y3 v9 v1))
           ((send_analysis v14 #q6 #y3 v9 v7))
           ((send_image v12 #q5 #y2 v9 v18 v11))
           ((send_image v12 #q5 #y2 v9 v19 v11))
           ((send_image v12 #q5 #y2 v9 v17 v11))
           ((send_image v14 #q6 #y3 v9 v17 v11))
           ((send_image v14 #q6 #y3 v9 v18 v11))
           ((send_image v14 #q6 #y3 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, `v12` and `v14`, each with a camera `v10` and a store `v16`. There are several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) of different types (`v2`, `v6`) and objectives (`v17`, `v18`, `v19`). A lander `v9` is available for communication. The goal is `new-axiom@0()`, which implies that we need to achieve various states, including `receivedimage` for objectives `v17`, `v18`, `v19` with mode `v11`, and `receivedanalysis` for rocks that are `type(?stone, v2)` and `type(?soil, v6)`. In this specific problem, the types are `v2` (stone) and `v6` (soil). So, we need to analyze and send analysis for rocks of type `v2` (v1, v3, v4) and `v6` (v5, v7, v8). Also, both rovers must be at some configuration, `free` (meaning their stores are empty) and `receivedimage` for the three objectives `v17`, `v18`, `v19` with mode `v11`.
           
           The initial state shows that both rovers `v12` and `v14` are at a starting configuration (`v13` and `v15` respectively) and have free stores `v16`. Camera `v10` supports mode `v11`. There are also many motion and visibility predicates for both rovers.
           
           To satisfy the goal, we need to:
           1. Take images of all three objectives (`v17`, `v18`, `v19`) using one or both rovers.
           2. Send these images to the lander.
           3. Sample rocks of both types `v2` and `v6` (i.e., `v1`, `v3`, `v4` and `v5`, `v7`, `v8`).
           4. Send the analysis of these sampled rocks to the lander.
           5. Ensure both rovers' stores are free at the end.
           
           Let's break down the plan for `v12` first.
           For rover `v12`:
           - Calibrate the camera, take images of objectives `v17`, `v18`, `v19`, and send them.
           - Sample rocks of types `v2` and `v6`, and send their analysis.
           
           **Rover v12 plan:**
           1.  **Image for v18:**
               *   `calibrate v12 #q0 #y0 v18 v10` (Precondition: `imagevisible`, `onboard`, `atconf`, `not blocked`)
               *   `take_image v12 #q0 #y0 v18 v10 v11` (Precondition: `haveimage`, `onboard`, `supports`, `atconf`, `calibrated`, `not blocked`)
               *   Move to a communication position: `move v12 #q0 #t1 #q5` (From `q0` to `q5` which is comvisible)
               *   `send_image v12 #q5 #y2 v9 v18 v11` (Precondition: `comvisible`, `objective`, `mode`, `haveimage`, `atconf`, `not blocked`)
           2.  **Image for v17:**
               *   Move to #q2 for v17: `move v12 #q5 #t34 #q2`
               *   `calibrate v12 #q2 #y1 v17 v10`
               *   `take_image v12 #q2 #y1 v17 v10 v11`
               *   Move to a communication position: `move v12 #q2 #t2 #q5`
               *   `send_image v12 #q5 #y2 v9 v17 v11`
           3.  **Image for v19:**
               *   Move to #q10 for v19: `move v12 #q5 #t32 #q10`
               *   `calibrate v12 #q10 #y4 v19 v10`
               *   `take_image v12 #q10 #y4 v19 v10 v11`
               *   Move to a communication position: `move v12 #q10 #t22 #q5`
               *   `send_image v12 #q5 #y2 v9 v19 v11`
           
           Now for rock sampling and analysis with `v12`. We need at least one rock of type `v2` and one of type `v6`.
           - Type `v2`: `v1`, `v3`, `v4`.
           - Type `v6`: `v5`, `v7`, `v8`.
           
           Let's sample `v4` (type `v2`) and `v5` (type `v6`) using `v12`.
           4.  **Sample and analyze rock v4 (type v2):**
               *   Move to `above` `v4` at `#q11`: `move v12 #q5 #t31 #q11`
               *   `sample_rock v12 #q11 v4 v16` (Precondition: `above`, `store`, `atconf`, `free`)
               *   Move to a communication position: `move v12 #q11 #t18 #q5`
               *   `send_analysis v12 #q5 #y2 v9 v4` (Precondition: `comvisible`, `rock`, `analyzed`, `atconf`, `not blocked`)
               *   `drop_rock v12 v16` (To free the store for the next sample)
           5.  **Sample and analyze rock v5 (type v6):**
               *   Move to `above` `v5` at `#q12`: `move v12 #q5 #t33 #q12`
               *   `sample_rock v12 #q12 v5 v16`
               *   Move to a communication position: `move v12 #q12 #t19 #q5`
               *   `send_analysis v12 #q5 #y2 v9 v5`
               *   `drop_rock v12 v16`
           
           With these actions, `v12` covers all image objectives and at least one rock of each required type. The goal states `receivedanalysis` for *a* rock of each type, not all of them. Since `v12` ends with a free store and `v14` starts with a free store, the `free(v12, v16)` and `free(v14, v16)` predicates will be true at the end.
           
           This plan achieves all goals:
           - `receivedimage(v17, v11)`: Achieved by `v12`
           - `receivedimage(v18, v11)`: Achieved by `v12`
           - `receivedimage(v19, v11)`: Achieved by `v12`
           - `type(?stone, v2)` and `receivedanalysis(?stone)`: Achieved by `v12` sampling `v4`
           - `type(?soil, v6)` and `receivedanalysis(?soil)`: Achieved by `v12` sampling `v5`
           - `atconf(v12, v13)`: `v12` is initially at `v13`, but will move. The goal just needs *some* `atconf` for both rovers, and `free` store. The actual `atconf` does not matter, as long as it's a valid one, and the final state has `free(v12,v16)` and `free(v14,v16)`. `v12` will end up at `#q5` and `v14` stays at `v15` by default, as no actions are planned for `v14`. Both rovers also need a free store, which is ensured by `drop_rock` for `v12` and `v14` starting with a free store and not performing any `sample_rock`.
           
           --Plan--:
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #t1 #q5)
           (send_image v12 #q5 #y2 v9 v18 v11)
           (move v12 #q5 #t34 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t2 #q5)
           (send_image v12 #q5 #y2 v9 v17 v11)
           (move v12 #q5 #t32 #q10)
           (calibrate v12 #q10 #y4 v19 v10)
           (take_image v12 #q10 #y4 v19 v10 v11)
           (move v12 #q10 #t22 #q5)
           (send_image v12 #q5 #y2 v9 v19 v11)
           (move v12 #q5 #t31 #q11)
           (sample_rock v12 #q11 v4 v16)
           (move v12 #q11 #t18 #q5)
           (send_analysis v12 #q5 #y2 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q5 #t33 #q12)
           (sample_rock v12 #q12 v5 v16)
           (move v12 #q12 #t19 #q5)
           (send_analysis v12 #q5 #y2 v9 v5)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q0) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `v12` was not at `#q0` when `calibrate v12 #q0 #y0 v18 v10` was called. `v12` starts at `v13`. I need to ensure the rover is at the correct configuration before attempting to calibrate or take images. I need to move `v12` to `#q0` first. Then after taking an image from `#q0`, I need to move it to `#q5` (the communication location) to send the image.
           
           Let's refine the plan for `v12` keeping track of its current configuration.
           
           **Initial state for v12:** `atconf(v12, v13)`
           
           **Rover v12 plan (revised):**
           
           1.  **Image for v18:**
               *   Move `v12` to `#q0` (image location for `v18`): `move v12 v13 #t7 #q0` (Current: `atconf(v12, #q0)`)
               *   `calibrate v12 #q0 #y0 v18 v10`
               *   `take_image v12 #q0 #y0 v18 v10 v11`
               *   Move `v12` to `#q5` (communication location): `move v12 #q0 #t1 #q5` (Current: `atconf(v12, #q5)`)
               *   `send_image v12 #q5 #y2 v9 v18 v11`
           
           2.  **Image for v17:**
               *   Move `v12` to `#q2` (image location for `v17`): `move v12 #q5 #t34 #q2` (Current: `atconf(v12, #q2)`)
               *   `calibrate v12 #q2 #y1 v17 v10`
               *   `take_image v12 #q2 #y1 v17 v10 v11`
               *   Move `v12` to `#q5` (communication location): `move v12 #q2 #t2 #q5` (Current: `atconf(v12, #q5)`)
               *   `send_image v12 #q5 #y2 v9 v17 v11`
           
           3.  **Image for v19:**
               *   Move `v12` to `#q10` (image location for `v19`): `move v12 #q5 #t32 #q10` (Current: `atconf(v12, #q10)`)
               *   `calibrate v12 #q10 #y4 v19 v10`
               *   `take_image v12 #q10 #y4 v19 v10 v11`
               *   Move `v12` to `#q5` (communication location): `move v12 #q10 #t22 #q5` (Current: `atconf(v12, #q5)`)
               *   `send_image v12 #q5 #y2 v9 v19 v11`
           
           4.  **Sample and analyze rock v4 (type v2):**
               *   Move `v12` to `#q11` (above `v4`): `move v12 #q5 #t31 #q11` (Current: `atconf(v12, #q11)`)
               *   `sample_rock v12 #q11 v4 v16`
               *   Move `v12` to `#q5` (communication location): `move v12 #q11 #t18 #q5` (Current: `atconf(v12, #q5)`)
               *   `send_analysis v12 #q5 #y2 v9 v4`
               *   `drop_rock v12 v16`
           
           5.  **Sample and analyze rock v5 (type v6):**
               *   Move `v12` to `#q12` (above `v5`): `move v12 #q5 #t33 #q12` (Current: `atconf(v12, #q12)`)
               *   `sample_rock v12 #q12 v5 v16`
               *   Move `v12` to `#q5` (communication location): `move v12 #q12 #t19 #q5` (Current: `atconf(v12, #q5)`)
               *   `send_analysis v12 #q5 #y2 v9 v5`
               *   `drop_rock v12 v16`
           
           This revised plan ensures `atconf` preconditions are met before each action.
           
           --Plan--:
           (move v12 v13 #t7 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #t1 #q5)
           (send_image v12 #q5 #y2 v9 v18 v11)
           (move v12 #q5 #t34 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t2 #q5)
           (send_image v12 #q5 #y2 v9 v17 v11)
           (move v12 #q5 #t32 #q10)
           (calibrate v12 #q10 #y4 v19 v10)
           (take_image v12 #q10 #y4 v19 v10 v11)
           (move v12 #q10 #t22 #q5)
           (send_image v12 #q5 #y2 v9 v19 v11)
           (move v12 #q5 #t31 #q11)
           (sample_rock v12 #q11 v4 v16)
           (move v12 #q11 #t18 #q5)
           (send_analysis v12 #q5 #y2 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q5 #t33 #q12)
           (sample_rock v12 #q12 v5 v16)
           (move v12 #q12 #t19 #q5)
           (send_analysis v12 #q5 #y2 v9 v5)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal `new-axiom@0()` is a conjunction of several conditions:
           1.  `atconf(v12, v13)`: This means rover `v12` must be at configuration `v13`. My previous plan leaves `v12` at `#q5`.
           2.  `atconf(v14, v15)`: This means rover `v14` must be at configuration `v15`. `v14` starts at `v15` and I haven't moved it.
           3.  `free(v12, v16)`: Rover `v12`'s store `v16` must be free. My plan includes `drop_rock` after each sample.
           4.  `free(v14, v16)`: Rover `v14`'s store `v16` must be free. `v14` starts free and I haven't sampled with it.
           5.  `receivedimage(v17, v11)`: Image of objective `v17` in mode `v11` must be received.
           6.  `receivedimage(v18, v11)`: Image of objective `v18` in mode `v11` must be received.
           7.  `receivedimage(v19, v11)`: Image of objective `v19` in mode `v11` must be received.
           8.  `type(?stone, v2)` and `receivedanalysis(?stone)`: Analysis of at least one rock of type `v2` must be received.
           9.  `type(?soil, v6)` and `receivedanalysis(?soil)`: Analysis of at least one rock of type `v6` must be received.
           
           My previous plan satisfied conditions 3, 4, 5, 6, 7, 8, and 9. The only remaining issue is `atconf(v12, v13)`. I need to add a final move action to bring `v12` back to `v13`.
           
           Let's add the final move for `v12`.
           
           **Rover v12 plan (revised again):**
           
           1.  **Image for v18:**
               *   `move v12 v13 #t7 #q0` (Current: `atconf(v12, #q0)`)
               *   `calibrate v12 #q0 #y0 v18 v10`
               *   `take_image v12 #q0 #y0 v18 v10 v11`
               *   `move v12 #q0 #t1 #q5` (Current: `atconf(v12, #q5)`)
               *   `send_image v12 #q5 #y2 v9 v18 v11`
           
           2.  **Image for v17:**
               *   `move v12 #q5 #t34 #q2` (Current: `atconf(v12, #q2)`)
               *   `calibrate v12 #q2 #y1 v17 v10`
               *   `take_image v12 #q2 #y1 v17 v10 v11`
               *   `move v12 #q2 #t2 #q5` (Current: `atconf(v12, #q5)`)
               *   `send_image v12 #q5 #y2 v9 v17 v11`
           
           3.  **Image for v19:**
               *   `move v12 #q5 #t32 #q10` (Current: `atconf(v12, #q10)`)
               *   `calibrate v12 #q10 #y4 v19 v10`
               *   `take_image v12 #q10 #y4 v19 v10 v11`
               *   `move v12 #q10 #t22 #q5` (Current: `atconf(v12, #q5)`)
               *   `send_image v12 #q5 #y2 v9 v19 v11`
           
           4.  **Sample and analyze rock v4 (type v2):**
               *   `move v12 #q5 #t31 #q11` (Current: `atconf(v12, #q11)`)
               *   `sample_rock v12 #q11 v4 v16`
               *   `move v12 #q11 #t18 #q5` (Current: `atconf(v12, #q5)`)
               *   `send_analysis v12 #q5 #y2 v9 v4`
               *   `drop_rock v12 v16`
           
           5.  **Sample and analyze rock v5 (type v6):**
               *   `move v12 #q5 #t33 #q12` (Current: `atconf(v12, #q12)`)
               *   `sample_rock v12 #q12 v5 v16`
               *   `move v12 #q12 #t19 #q5` (Current: `atconf(v12, #q5)`)
               *   `send_analysis v12 #q5 #y2 v9 v5`
               *   `drop_rock v12 v16`
           
           6.  **Return `v12` to `v13`:**
               *   `move v12 #q5 #t14 v13` (Current: `atconf(v12, v13)`)
           
           Now all goal conditions should be met.
           
           --Plan--:
           (move v12 v13 #t7 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #t1 #q5)
           (send_image v12 #q5 #y2 v9 v18 v11)
           (move v12 #q5 #t34 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t2 #q5)
           (send_image v12 #q5 #y2 v9 v17 v11)
           (move v12 #q5 #t32 #q10)
           (calibrate v12 #q10 #y4 v19 v10)
           (take_image v12 #q10 #y4 v19 v10 v11)
           (move v12 #q10 #t22 #q5)
           (send_image v12 #q5 #y2 v9 v19 v11)
           (move v12 #q5 #t31 #q11)
           (sample_rock v12 #q11 v4 v16)
           (move v12 #q11 #t18 #q5)
           (send_analysis v12 #q5 #y2 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q5 #t33 #q12)
           (sample_rock v12 #q12 v5 v16)
           (move v12 #q12 #t19 #q5)
           (send_analysis v12 #q5 #y2 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q5 #t14 v13)

