User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v3 is a base configuration with (x, y, theta) = (2.5, 0.0, 0.0).
           Object v13 is a pose with position (-4.523, -0.109, 0.801) and quaternion (0.0, 0.0, 0.378, 0.926).
           Object v16 is a pose with position (4.35, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.0)).
           Object v5 is an arm configuration with joint values (0.393, 0.333, 0.0, -1.522, 2.722, -1.219, -2.989).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.465, 0.265), (4.535, 0.335)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.8, -0.6), (-4.2, 0.6)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.572, -0.159), (-4.473, -0.06)).
           Object v9 is a pose with position (4.5, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.315, 0.265), (4.385, 0.335)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom atbconf(v3)
           Atom handempty(v4)
           Atom type(v12, v17)
           Atom supported(v12, v13, v14)
           Atom pose(v8, v9)
           Atom atpose(v15, v16)
           Atom bconf(v3)
           Atom controllable(v4)
           Atom arm(v4)
           Atom supported(v8, v9, v11)
           Atom handempty(v6)
           Atom stackable(v15, v10)
           Atom stackable(v8, v10)
           Atom ataconf(v6, v7)
           Atom graspable(v12)
           Atom canmove()
           Atom atpose(v12, v13)
           Atom stackable(v12, v18)
           Atom stackable(v8, v18)
           Atom ataconf(v4, v5)
           Atom pose(v12, v13)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom atpose(v8, v9)
           Atom supported(v15, v16, v11)
           Atom graspable(v8)
           Atom graspable(v15)
           Atom aconf(v4, v5)
           Atom stackable(v12, v10)
           Atom pose(v15, v16)
           Atom type(v8, v17)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v15, #o1)
           Atom grasp(v8, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom supported(v12, #o2, v18)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be achieved if `on(green, v18)` and `type(green, v17)` are true.
           From the initial state, we know `type(v12, v17)` and `type(v8, v17)`. So, `green` could be either `v12` or `v8`.
           Let's consider `v12` as `green`. We need to achieve `on(v12, v18)`.
           From the initial state, `atpose(v12, v13)` and `supported(v12, v13, v14)`. This means `v12` is currently on `v14`.
           To achieve `on(v12, v18)`, we need `atpose(v12, ?p_v12_on_v18)` and `supported(v12, ?p_v12_on_v18, v18)`.
           The initial state provides `pose(v12, #o2)` and `supported(v12, #o2, v10)` and `supported(v12, #o2, v18)`. So, `#o2` is a potential pose for `v12` on `v18`.
           
           The current initial state only provides one possible action instance: `(move_base v3 v3 #o0)`. This action doesn't change the state of `on(v12, v18)`. It only moves the base from `v3` to `v3`, which means the robot doesn't move.
           
           Since `new-axiom@0` is an axiom that only evaluates to true if `on(?green, v18)` is true and `type(?green, v17)` is true, and `v12` and `v8` are the only objects of `type v17`, we need to place either `v12` or `v8` onto `v18`. Neither `v12` nor `v8` are currently on `v18`. There are no pick or place actions available in the provided action instances to move `v12` or `v8` to `v18`. Therefore, the goal is unreachable with the given action instances.

