User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v12)
           Atom aconf(v6, v7)
           Atom arm(v4)
           Atom supported(v8, v9, v11)
           Atom bconf(v3)
           Atom stackable(v14, v16)
           Atom handempty(v6)
           Atom stackable(v12, v16)
           Atom stackable(v8, v10)
           Atom graspable(v14)
           Atom pose(v8, v9)
           Atom ataconf(v4, v5)
           Atom atbconf(v3)
           Atom supported(v12, v13, v11)
           Atom aconf(v4, v5)
           Atom supported(v14, v15, v11)
           Atom atpose(v12, v13)
           Atom graspable(v8)
           Atom canmove()
           Atom stackable(v14, v10)
           Atom controllable(v4)
           Atom arm(v6)
           Atom ataconf(v6, v7)
           Atom atpose(v8, v9)
           Atom pose(v12, v13)
           Atom atpose(v14, v15)
           Atom stackable(v12, v10)
           Atom stackable(v8, v16)
           Atom pose(v14, v15)
           Atom handempty(v4)
           Atom pose(v14, #p0)
           Atom supported(v14, #p0, v16)
           Atom pose(v8, #p2)
           Atom supported(v8, #p2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #g1)
           Atom grasp(v14, #g0)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g2)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v16)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v12, v13, #g1, #q4, #t7)
           Atom bconf(#q5)
           Atom atraj(#t13)
           Atom kin(v4, v8, #p2, #g2, #q5, #t13)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v8, v9, #g2, #q2, #t2)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v14, v15, #g0, #q3, #t6)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, #p0, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, #p1, #g1, #q1, #t1)
           Atom btraj(#t16)
           Atom basemotion(v3, #t16, #q4)
           Atom btraj(#t12)
           Atom basemotion(#q4, #t12, v3)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom btraj(#t11)
           Atom basemotion(#q3, #t11, v3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t10)
           Atom basemotion(#q2, #t10, v3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom btraj(#t17)
           Atom basemotion(#q2, #t17, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t14)
           Atom basemotion(#q4, #t14, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom btraj(#t18)
           Atom basemotion(#q1, #t18, #q3)
           Atom basemotion(#q1, #o0, #q5)
           Atom btraj(#t9)
           Atom basemotion(#q1, #t9, v3)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t19)
           Atom basemotion(#q3, #t19, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t8)
           Atom basemotion(#q0, #t8, v3)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom btraj(#t15)
           Atom basemotion(#q0, #t15, #q2)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q0)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q2 #t15))
           ((move_base #q0 v3 #t8))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q3 #t18))
           ((move_base #q1 v3 #t9))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 v3 #t10))
           ((move_base #q2 #q5 #t17))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #t11))
           ((move_base #q3 #q0 #t19))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #t12))
           ((move_base #q4 #q1 #t14))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t16))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p1 #g1 #q1 #t1))
           ((place v4 v12 #p1 #g1 #q1 #t1))
           ((pick v4 v12 v13 #g1 #q4 #t7))
           ((place v4 v12 v13 #g1 #q4 #t7))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 #p0 #g0 #q0 #t0))
           ((place v4 v14 #p0 #g0 #q0 #t0))
           ((pick v4 v14 v15 #g0 #q3 #t6))
           ((place v4 v14 v15 #g0 #q3 #t6))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p2 #g2 #q5 #t13))
           ((place v4 v8 #p2 #g2 #q5 #t13))
           ((pick v4 v8 v9 #g2 #q2 #t2))
           ((place v4 v8 v9 #g2 #q2 #t2))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms (`v4` and `v6`), currently at base configuration `v3`. Both arms are empty. There are three graspable and stackable objects: `v8`, `v12`, and `v14`.
           
           Initially, `v8` is at `v9` and supported by `v11`. `v12` is at `v13` and supported by `v11`. `v14` is at `v15` and supported by `v11`.
           
           The goal is to place all three objects (`v8`, `v12`, and `v14`) on `v16`. Since the initial state says they are supported by `v11`, and the goal states they need to be on `v16`, the robot needs to pick up each object and place it on `v16`.
           
           Let's break down the goal for each object:
           1. `on(v8, v16)`: This means `atpose(v8, #p2)` (since `#p2` is supported by `v16` and is the only known pose for `v8` on `v16`).
           2. `on(v12, v16)`: This means `atpose(v12, #p1)` (since `#p1` is supported by `v16` and is the only known pose for `v12` on `v16`).
           3. `on(v14, v16)`: This means `atpose(v14, #p0)` (since `#p0` is supported by `v16` and is the only known pose for `v14` on `v16`).
           
           The robot needs to perform a sequence of `pick` and `place` actions for each object. For each `pick` and `place` action, the robot must be at the correct base configuration (`atbconf`) and the arm must be empty for `pick` or holding the object for `place`.
           
           For `v8`:
           - Current state: `atpose(v8, v9)` and `atbconf(v3)`.
           - Pick action: `(pick v4 v8 v9 #g2 #q2 #t2)`. This requires the robot to be at `bconf #q2`.
           - Place action: `(place v4 v8 #p2 #g2 #q5 #t13)`. This requires the robot to be at `bconf #q5`.
           
           For `v12`:
           - Current state: `atpose(v12, v13)` and `atbconf(v3)`.
           - Pick action: `(pick v4 v12 v13 #g1 #q4 #t7)`. This requires the robot to be at `bconf #q4`.
           - Place action: `(place v4 v12 #p1 #g1 #q1 #t1)`. This requires the robot to be at `bconf #q1`.
           
           For `v14`:
           - Current state: `atpose(v14, v15)` and `atbconf(v3)`.
           - Pick action: `(pick v4 v14 v15 #g0 #q3 #t6)`. This requires the robot to be at `bconf #q3`.
           - Place action: `(place v4 v14 #p0 #g0 #q0 #t0)`. This requires the robot to be at `bconf #q0`.
           
           The plan will involve a series of `move_base`, `pick`, and `place` actions, ensuring the robot is at the correct base configuration before each manipulation.
           
           Let's plan the sequence:
           1. Move to `q3` to pick `v14`.
           2. Pick `v14`.
           3. Move to `q0` to place `v14`.
           4. Place `v14`.
           5. Move to `q4` to pick `v12`.
           6. Pick `v12`.
           7. Move to `q1` to place `v12`.
           8. Place `v12`.
           9. Move to `q2` to pick `v8`.
           10. Pick `v8`.
           11. Move to `q5` to place `v8`.
           12. Place `v8`.
           
           --Plan--:
           (move_base v3 #q3 #o0)
           (pick v4 v14 v15 #g0 #q3 #t6)
           (move_base #q3 #q0 #t19)
           (place v4 v14 #p0 #g0 #q0 #t0)
           (move_base #q0 #q4 #o0)
           (pick v4 v12 v13 #g1 #q4 #t7)
           (move_base #q4 #q1 #t14)
           (place v4 v12 #p1 #g1 #q1 #t1)
           (move_base #q1 #q2 #o0)
           (pick v4 v8 v9 #g2 #q2 #t2)
           (move_base #q2 #q5 #t17)
           (place v4 v8 #p2 #g2 #q5 #t13)

