User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v9 is a pose with position (4.5, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.314, -0.247), (-4.215, -0.148)).
           Object v15 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.315, 0.265), (4.385, 0.335)).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v13 is a pose with position (-4.264, -0.197, 0.801) and quaternion (0.0, 0.0, 0.4, 0.917).
           Object v16 is a pose with position (4.35, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.0)).
           Object v5 is an arm configuration with joint values (0.393, 0.333, 0.0, -1.522, 2.722, -1.219, -2.989).
           Object v3 is a base configuration with (x, y, theta) = (2.5, 0.0, 0.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.465, 0.265), (4.535, 0.335)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.8, -0.6), (-4.2, 0.6)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom graspable(v15)
           Atom arm(v6)
           Atom ataconf(v6, v7)
           Atom type(v12, v17)
           Atom stackable(v8, v18)
           Atom handempty(v6)
           Atom canmove()
           Atom pose(v12, v13)
           Atom atpose(v8, v9)
           Atom atpose(v15, v16)
           Atom graspable(v12)
           Atom graspable(v8)
           Atom atbconf(v3)
           Atom ataconf(v4, v5)
           Atom aconf(v6, v7)
           Atom pose(v15, v16)
           Atom controllable(v4)
           Atom stackable(v8, v10)
           Atom bconf(v3)
           Atom supported(v8, v9, v11)
           Atom arm(v4)
           Atom atpose(v12, v13)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom type(v8, v17)
           Atom stackable(v12, v18)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v14)
           Atom pose(v8, v9)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v12, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v15, #o1)
           Atom supported(v8, #o2, v18)
           Atom grasp(v8, #o1)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, including `v8`, `v12`, and `v15` which are graspable. There are also several surfaces like `v10`, `v11`, `v14`, and `v18`. The robot has two arms, `v4` and `v6`. The goal is to satisfy `new-axiom@0()`, which, according to the axioms, is true if `on(green, v18)` and `type(green, v17)` are true. The object `v8` is of type `v17`. Therefore, to achieve the goal, `v8` must be placed on `v18`.
           
           Currently, `v8` is at `v9` and supported by `v11`. The robot is at base configuration `v3`. The only available action is a `move_base` action that keeps the robot at `v3`. This implies that the robot must be able to perform all necessary actions from its current base configuration.
           
           To achieve the goal, we need to:
           1. Pick up `v8` from its current pose `v9`.
           2. Place `v8` onto `v18` at a new pose. Since `v18` is a table, we will use a new pose starting with `#`.
           
           However, the provided list of available action instances only contains `((move_base v3 v3 #o0))`. There are no pick or place actions available. Without pick and place actions, the robot cannot manipulate `v8` to move it to `v18`. Therefore, the goal is unreachable with the given set of allowed actions.

