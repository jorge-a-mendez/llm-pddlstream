User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supports(v10, v11)
           Atom type(v8, v6)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom rock(v5)
           Atom atconf(v12, v13)
           Atom atconf(v14, v15)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom objective(v17)
           Atom rock(v7)
           Atom free(v12, v16)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom rock(v1)
           Atom rock(v3)
           Atom camera(v10)
           Atom type(v1, v2)
           Atom type(v4, v2)
           Atom rock(v8)
           Atom onboard(v10, v14)
           Atom mode(v11)
           Atom type(v7, v6)
           Atom rover(v14)
           Atom lander(v9)
           Atom rock(v4)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #q1, #y0, v17)
           Atom imagerange(v14, #q1, v17)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom imagevisible(v14, #q4, #y2, v18)
           Atom imagerange(v14, #q4, v18)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v3)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q3, v1)
           Atom conf(v14, #q3)
           Atom comvisible(v12, #q6, #y4, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v1)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v4)
           Atom above(v12, #q7, v5)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #q8, #y5, v18)
           Atom imagerange(v12, #q8, v18)
           Atom conf(v12, #q8)
           Atom ray(#y5)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #t6, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #t19, #q6)
           Atom motion(v12, #q6, #t12, v13)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q6, #t15, #q7)
           Atom motion(v12, #q7, #t11, #q6)
           Atom motion(v12, v13, #t17, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q2, #t3, #q0)
           Atom motion(v14, #q0, #t1, #q2)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q2, #t20, #q1)
           Atom motion(v14, #q1, #t0, #q2)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #t5, #q1)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #t8, #q2)
           Atom motion(v14, #q1, #t16, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q2, #t7, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q5, #t9, #q6)
           Atom motion(v12, #q5, #t18, #q8)
           Atom motion(v12, v13, #t13, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q6, #t14, #q5)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, v15, #t10, #q3)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q2, #t4, #q3)
           Atom motion(v14, #q3, #t2, #q2)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((sample_rock v14 #q3 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t18 #q8))
           ((move v12 #q5 #t9 #q6))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #t12 v13))
           ((move v12 #q6 #t14 #q5))
           ((move v12 #q6 #t15 #q7))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t11 #q6))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q6))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t13 #q5))
           ((move v12 v13 #t17 #q7))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t1 #q2))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t0 #q2))
           ((move v14 #q1 #t16 #q4))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #t20 #q1))
           ((move v14 #q2 #t3 #q0))
           ((move v14 #q2 #t4 #q3))
           ((move v14 #q2 #t6 v15))
           ((move v14 #q2 #t7 #q4))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t2 #q2))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t8 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q3))
           ((move v14 v15 #t5 #q1))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q8 #y5 v18 v10))
           ((calibrate v14 #q1 #y0 v17 v10))
           ((calibrate v14 #q4 #y2 v18 v10))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q8 #y5 v18 v10 v11))
           ((take_image v14 #q1 #y0 v17 v10 v11))
           ((take_image v14 #q4 #y2 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y4 v9 v1))
           ((send_analysis v12 #q6 #y4 v9 v3))
           ((send_analysis v12 #q6 #y4 v9 v4))
           ((send_analysis v12 #q6 #y4 v9 v7))
           ((send_analysis v12 #q6 #y4 v9 v8))
           ((send_analysis v12 #q6 #y4 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_image v12 #q6 #y4 v9 v17 v11))
           ((send_image v12 #q6 #y4 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. Both rovers have a camera `v10` that supports the imaging mode `v11`. There are several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and two objectives (`v17`, `v18`). There's also a store `v16` for samples, and both rovers `v12` and `v14` have free space in `v16`. The goal is to satisfy `new-axiom@0()`, which has several conjuncts. The relevant conjuncts for planning are `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedanalysis(?stone)`, and `receivedanalysis(?soil)`. This means we need to take images of both objectives and send them to the lander, and analyze at least one rock of type `v2` (stone) and one rock of type `v6` (soil) and send the analysis.
           
           Let's break down the goal `new-axiom@0()` into subgoals and how to achieve them:
           1.  **`receivedimage(v17, v11)`**: This requires taking an image of `v17` in mode `v11` and sending it.
               *   Rover `v14` can see `v17` at `q1` via `y0`.
               *   Rover `v12` can see `v17` at `q5` via `y3`.
               *   Both rovers have camera `v10` that supports `v11`.
           2.  **`receivedimage(v18, v11)`**: This requires taking an image of `v18` in mode `v11` and sending it.
               *   Rover `v14` can see `v18` at `q4` via `y2`.
               *   Rover `v12` can see `v18` at `q8` via `y5`.
               *   Both rovers have camera `v10` that supports `v11`.
           3.  **`receivedanalysis(?stone)`**: This requires analyzing a rock of type `v2` and sending the analysis. Rocks `v1`, `v3`, `v4` are of type `v2` (stone).
           4.  **`receivedanalysis(?soil)`**: This requires analyzing a rock of type `v6` and sending the analysis. Rocks `v5`, `v7`, `v8` are of type `v6` (soil).
           
           Both rovers can take images and analyze rocks. Rover `v14` is initially at `v15` and `v12` is at `v13`. Both have a free store `v16`.
           
           Let's use rover `v14` to handle `v17` and a rock analysis, and rover `v12` for `v18` and another rock analysis.
           
           **Rover v14 tasks:**
           *   Take image of `v17`: `v14` needs to be at `q1`, calibrate `v10`, take image, then move to a configuration where it can communicate (e.g., `q2`) and send the image.
           *   Analyze a rock of type `v2` (stone): Let's pick `v1`. `v14` is above `v1` at `q3`. It needs to move to `q3`, sample `v1`, then move to a communication configuration (e.g., `q2`) and send the analysis.
           *   Communicate image/analysis: `v14` can communicate from `q2` with `v9` via `y1`.
           
           **Rover v12 tasks:**
           *   Take image of `v18`: `v12` needs to be at `q8`, calibrate `v10`, take image, then move to a configuration where it can communicate (e.g., `q6`) and send the image.
           *   Analyze a rock of type `v6` (soil): Let's pick `v5`. `v12` is above `v5` at `q7`. It needs to move to `q7`, sample `v5`, then move to a communication configuration (e.g., `q6`) and send the analysis.
           *   Communicate image/analysis: `v12` can communicate from `q6` with `v9` via `y4`.
           
           It's important to note that a camera `v10` needs to be calibrated before taking an image, and calibration is undone after taking an image. So for each image, we will need to calibrate. We can calibrate for one image, take it, then calibrate for the next image and take it.
           
           Let's plan the actions:
           
           **Rover v14 Plan:**
           1.  Move to `q1` to image `v17`. (From `v15` to `q1`).
           2.  Calibrate camera `v10` for `v17` at `q1`.
           3.  Take image of `v17`.
           4.  Move to `q3` to sample `v1`. (From `q1` to `q3`).
           5.  Sample rock `v1`.
           6.  Move to `q2` to communicate. (From `q3` to `q2`).
           7.  Send image of `v17`.
           8.  Send analysis of `v1`.
           
           **Rover v12 Plan:**
           1.  Move to `q8` to image `v18`. (From `v13` to `q8`).
           2.  Calibrate camera `v10` for `v18` at `q8`.
           3.  Take image of `v18`.
           4.  Move to `q7` to sample `v5`. (From `q8` to `q7`).
           5.  Sample rock `v5`.
           6.  Move to `q6` to communicate. (From `q7` to `q6`).
           7.  Send image of `v18`.
           8.  Send analysis of `v5`.
           
           We can interleave these plans or execute them in parallel. Since the rovers are independent, we can list all `v14` actions, then all `v12` actions for simplicity.
           
           --Plan--:
           (move v14 v15 #t5 #q1)
           (calibrate v14 #q1 #y0 v17 v10)
           (take_image v14 #q1 #y0 v17 v10 v11)
           (move v14 #q1 #o2 #q3)
           (sample_rock v14 #q3 v1 v16)
           (move v14 #q3 #t2 #q2)
           (send_image v14 #q2 #y1 v9 v17 v11)
           (send_analysis v14 #q2 #y1 v9 v1)
           (move v12 v13 #o2 #q8)
           (calibrate v12 #q8 #y5 v18 v10)
           (take_image v12 #q8 #y5 v18 v10 v11)
           (move v12 #q8 #o2 #q7)
           (sample_rock v12 #q7 v5 v16)
           (move v12 #q7 #t11 #q6)
           (send_image v12 #q6 #y4 v9 v18 v11)
           (send_analysis v12 #q6 #y4 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. `new-axiom@0()` is an axiom that is only true if a certain set of conditions are met. I mistakenly assumed the plan would satisfy it by just performing the relevant actions. Let's look at the axiom again.
           
           `Axiom new-axiom@0()`
             `Conjunction`
               `Atom atconf(v12, v13)`
               `Atom atconf(v14, v15)`
               `Atom free(v12, v16)`
               `Atom free(v14, v16)`
               `Atom receivedimage(v17, v11)`
               `Atom receivedimage(v18, v11)`
               `Atom type(?stone, v2)`
               `Atom receivedanalysis(?stone)`
               `Atom type(?soil, v6)`
               `Atom receivedanalysis(?soil)`
           
           The goal `new-axiom@0()` is a complex goal. The key components that need to be achieved by the plan are:
           1.  `receivedimage(v17, v11)`: Image of objective `v17` taken by `v11` mode, and sent.
           2.  `receivedimage(v18, v11)`: Image of objective `v18` taken by `v11` mode, and sent.
           3.  `receivedanalysis(?stone)`: Analysis of a rock of type `v2` (stone) sent.
           4.  `receivedanalysis(?soil)`: Analysis of a rock of type `v6` (soil) sent.
           
           The previous plan did achieve these four items. The additional conjuncts in the axiom, `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)`, `type(?stone, v2)`, and `type(?soil, v6)`, also need to be true at the end of the plan.
           
           From the initial state:
           *   `atconf(v12, v13)` is true initially.
           *   `atconf(v14, v15)` is true initially.
           *   `free(v12, v16)` is true initially.
           *   `free(v14, v16)` is true initially.
           *   `type(v1, v2)`, `type(v3, v2)`, `type(v4, v2)` indicate rocks of type stone.
           *   `type(v5, v6)`, `type(v7, v6)`, `type(v8, v6)` indicate rocks of type soil.
           
           My previous plan satisfied `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedanalysis(v1)` (stone), and `receivedanalysis(v5)` (soil).
           
           The issue must be with the `atconf` or `free` conditions. My plan has the rovers moving to different locations. If they don't end up at their initial configurations, the `atconf` parts of the axiom will not be met. Also, `sample_rock` action makes the store `full`, so if we don't `drop_rock` it will not be `free`.
           
           Therefore, after taking samples and sending analyses, the rovers need to return to their initial configurations (`v12` to `v13`, `v14` to `v15`) and drop their samples to make their stores `free`.
           
           Let's refine the plan to ensure these conditions are met at the end.
           
           **Rover v14 Plan:**
           1.  Move to `q1` to image `v17`. (From `v15` to `q1`).
           2.  Calibrate camera `v10` for `v17` at `q1`.
           3.  Take image of `v17`.
           4.  Move to `q3` to sample `v1` (stone). (From `q1` to `q3`).
           5.  Sample rock `v1`. Store `v16` on `v14` is now `full`.
           6.  Move to `q2` to communicate. (From `q3` to `q2`).
           7.  Send image of `v17`.
           8.  Send analysis of `v1`.
           9.  Drop rock `v1` to free the store `v16`.
           10. Move back to initial configuration `v15`. (From `q2` to `v15`).
           
           **Rover v12 Plan:**
           1.  Move to `q8` to image `v18`. (From `v13` to `q8`).
           2.  Calibrate camera `v10` for `v18` at `q8`.
           3.  Take image of `v18`.
           4.  Move to `q7` to sample `v5` (soil). (From `q8` to `q7`).
           5.  Sample rock `v5`. Store `v16` on `v12` is now `full`.
           6.  Move to `q6` to communicate. (From `q7` to `q6`).
           7.  Send image of `v18`.
           8.  Send analysis of `v5`.
           9.  Drop rock `v5` to free the store `v16`.
           10. Move back to initial configuration `v13`. (From `q6` to `v13`).
           
           --Plan--:
           (move v14 v15 #t5 #q1)
           (calibrate v14 #q1 #y0 v17 v10)
           (take_image v14 #q1 #y0 v17 v10 v11)
           (move v14 #q1 #o2 #q3)
           (sample_rock v14 #q3 v1 v16)
           (move v14 #q3 #t2 #q2)
           (send_image v14 #q2 #y1 v9 v17 v11)
           (send_analysis v14 #q2 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q2 #t6 v15)
           (move v12 v13 #o2 #q8)
           (calibrate v12 #q8 #y5 v18 v10)
           (take_image v12 #q8 #y5 v18 v10 v11)
           (move v12 #q8 #o2 #q7)
           (sample_rock v12 #q7 v5 v16)
           (move v12 #q7 #t11 #q6)
           (send_image v12 #q6 #y4 v9 v18 v11)
           (send_analysis v12 #q6 #y4 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q6 #t12 v13)

