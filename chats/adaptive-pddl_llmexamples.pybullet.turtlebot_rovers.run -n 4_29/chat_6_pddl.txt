User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom store(v16)
           Atom type(v1, v2)
           Atom atconf(v12, v13)
           Atom type(v8, v6)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom type(v4, v2)
           Atom lander(v9)
           Atom objective(v20)
           Atom rock(v7)
           Atom type(v3, v2)
           Atom supports(v10, v11)
           Atom camera(v10)
           Atom mode(v11)
           Atom rock(v8)
           Atom onboard(v10, v12)
           Atom rock(v3)
           Atom objective(v17)
           Atom rock(v5)
           Atom rover(v12)
           Atom rock(v4)
           Atom conf(v12, v13)
           Atom free(v12, v16)
           Atom objective(v18)
           Atom type(v5, v6)
           Atom onboard(v10, v14)
           Atom rover(v14)
           Atom objective(v19)
           Atom atconf(v14, v15)
           Atom free(v14, v16)
           Atom rock(v1)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q12, #y8, v19)
           Atom imagerange(v14, #q12, v19)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom imagevisible(v14, #q9, #y6, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom above(v14, #o5, v7)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q10, #y7, v20)
           Atom imagerange(v14, #q10, v20)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom imagevisible(v12, #q5, #y4, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom above(v12, #q16, v7)
           Atom conf(v12, #q16)
           Atom imagevisible(v12, #q2, #y1, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q6, v5)
           Atom conf(v12, #q6)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom comvisible(v14, #q8, #y5, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom imagevisible(v12, #q3, #y2, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #q15, #y9, v17)
           Atom imagerange(v14, #q15, v17)
           Atom conf(v14, #q15)
           Atom ray(#y9)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q13, v8)
           Atom conf(v12, #q13)
           Atom motion(v14, v15, #t34, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, v13, #t28, #q13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, v15, #t35, #q15)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, v13, #t9, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, v15, #t19, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q8, #t11, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, #q8, #t13, #q10)
           Atom motion(v14, #q10, #t15, #q8)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v12, #q1, #t6, v13)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q1, #t17, #q5)
           Atom motion(v12, #q3, #t3, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #t21, #q3)
           Atom motion(v12, #q5, #t5, #q1)
           Atom motion(v12, #q13, #t38, #q1)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #t32, #q10)
           Atom motion(v14, #q12, #t27, #q9)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #t18, #q9)
           Atom motion(v14, #q8, #t12, #q9)
           Atom motion(v14, #q9, #t14, #q8)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, v13, #t20, #q11)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q6, #t26, #q1)
           Atom motion(v12, #q1, #t8, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t36, #q13)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q11, #t22, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q16)
           Atom motion(v12, #q16, #t39, #q6)
           Atom motion(v12, #q6, #o2, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q16, #o2, #q13)
           Atom motion(v12, #q16, #o2, #q5)
           Atom motion(v12, #q16, #o2, #q1)
           Atom motion(v12, #q16, #o2, #q3)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q13, #o2, #q16)
           Atom motion(v12, #q5, #o2, #q16)
           Atom motion(v12, #q11, #o2, #q16)
           Atom motion(v12, #q1, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q11)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, v13, #t1, #q2)
           Atom motion(v12, #q16, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q2, #t37, #q3)
           Atom motion(v12, #q5, #t23, #q2)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q16)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #t2, #q1)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q7, #t10, #q8)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q8, #t16, #q7)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q16)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q1, #t7, #q0)
           Atom motion(v12, #q16, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q13, #t30, #q0)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q0, #t33, #q11)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #t4, #q1)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q3, #t24, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q16)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q4, #t25, #q5)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q4)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q14, #t40, #q16)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #t31, #q0)
           Atom motion(v12, #q11, #t41, #q14)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, v13, #t29, #q14)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #o5, #o2, #q12)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q13 v8 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q16 v7 v16))
           ((sample_rock v12 #q6 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q16))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t33 #q11))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q16))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #t17 #q5))
           ((move v12 #q1 #t21 #q3))
           ((move v12 #q1 #t6 v13))
           ((move v12 #q1 #t7 #q0))
           ((move v12 #q1 #t8 #q6))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q16))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t22 #q6))
           ((move v12 #q11 #t41 #q14))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q16))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t30 #q0))
           ((move v12 #q13 #t38 #q1))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t31 #q0))
           ((move v12 #q14 #t40 #q16))
           ((move v12 #q16 #o2 #q0))
           ((move v12 #q16 #o2 #q1))
           ((move v12 #q16 #o2 #q11))
           ((move v12 #q16 #o2 #q13))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q2))
           ((move v12 #q16 #o2 #q3))
           ((move v12 #q16 #o2 #q4))
           ((move v12 #q16 #o2 #q5))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t39 #q6))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q16))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t2 #q1))
           ((move v12 #q2 #t37 #q3))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q16))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t24 #q4))
           ((move v12 #q3 #t3 #q1))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q16))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t25 #q5))
           ((move v12 #q4 #t4 #q1))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q16))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t23 #q2))
           ((move v12 #q5 #t5 #q1))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q16))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t26 #q1))
           ((move v12 #q6 #t36 #q13))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q2))
           ((move v12 v13 #t20 #q11))
           ((move v12 v13 #t28 #q13))
           ((move v12 v13 #t29 #q14))
           ((move v12 v13 #t9 #q3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t15 #q8))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t27 #q9))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t10 #q8))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #t11 v15))
           ((move v14 #q8 #t12 #q9))
           ((move v14 #q8 #t13 #q10))
           ((move v14 #q8 #t16 #q7))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t14 #q8))
           ((move v14 #q9 #t32 #q10))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t18 #q9))
           ((move v14 v15 #t19 #q10))
           ((move v14 v15 #t34 #q12))
           ((move v14 v15 #t35 #q15))
           ((calibrate v12 #q2 #y1 v20 v10))
           ((calibrate v12 #q3 #y2 v17 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v12 #q5 #y4 v19 v10))
           ((calibrate v14 #q10 #y7 v20 v10))
           ((calibrate v14 #q12 #y8 v19 v10))
           ((calibrate v14 #q15 #y9 v17 v10))
           ((calibrate v14 #q9 #y6 v18 v10))
           ((take_image v12 #q2 #y1 v20 v10 v11))
           ((take_image v12 #q3 #y2 v17 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v12 #q5 #y4 v19 v10 v11))
           ((take_image v14 #q10 #y7 v20 v10 v11))
           ((take_image v14 #q12 #y8 v19 v10 v11))
           ((take_image v14 #q15 #y9 v17 v10 v11))
           ((take_image v14 #q9 #y6 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y5 v9 v1))
           ((send_analysis v14 #q8 #y5 v9 v3))
           ((send_analysis v14 #q8 #y5 v9 v4))
           ((send_analysis v14 #q8 #y5 v9 v7))
           ((send_analysis v14 #q8 #y5 v9 v8))
           ((send_analysis v14 #q8 #y5 v9 v5))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v20 v11))
           ((send_image v14 #q8 #y5 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10) which supports a specific mode (v11), and a store (v16) for samples. There are several objectives (v17, v18, v19, v20) and rocks (v1, v3, v4, v5, v7, v8) of different types (v2 for v1, v3, v4; v6 for v5, v7, v8). Both rovers are initially at their respective configurations (v13 for v12, v15 for v14) and have a free store (v16). The camera is onboard both rovers.
           
           The goal is `new-axiom@0()`, which is an axiom indicating that several conditions are met:
           - `atconf(v12, v13)` and `atconf(v14, v15)` are true (which they are initially).
           - `free(v12, v16)` and `free(v14, v16)` are true (which they are initially).
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)` must be true. This means all four objectives need to be imaged by a rover and the images sent to the lander.
           - `type(?stone, v2)` and `receivedanalysis(?stone)` must be true. This means at least one rock of type `v2` (v1, v3, or v4) needs to be sampled and its analysis sent.
           - `type(?soil, v6)` and `receivedanalysis(?soil)` must be true. This means at least one rock of type `v6` (v5, v7, or v8) needs to be sampled and its analysis sent.
           
           Here's a breakdown of the steps to achieve the goal:
           
           1.  **Calibrate and take images for all objectives (v17, v18, v19, v20) and send them:**
               *   Rover v12 can take images of v17, v18, v19, v20.
               *   Rover v14 can also take images of v17, v18, v19, v20.
               *   We need to ensure the camera is calibrated before taking an image. After an image is taken, the camera is no longer calibrated, so it needs to be recalibrated for each new image (or before taking a new image if the previous one made it uncalibrated).
               *   All images need to be sent to the lander.
           
           2.  **Sample and send analysis for one rock of type v2:**
               *   Rocks v1, v3, v4 are of type v2.
               *   Rover v12 is above v1 at #q0, v3 at #q11, v4 at #q14.
               *   Rover v14 is above v1, v3, v4 at #o5.
               *   We can choose any of these. Let's use v12 to sample v1.
           
           3.  **Sample and send analysis for one rock of type v6:**
               *   Rocks v5, v7, v8 are of type v6.
               *   Rover v12 is above v5 at #q6, v7 at #q16, v8 at #q13.
               *   Rover v14 is above v5 at #q7, v7 at #o5, v8 at #o5.
               *   We can choose any of these. Let's use v12 to sample v5.
           
           We will use rover v12 to fulfill the imaging requirements and to sample rocks. It can reach all objectives and rocks. Rover v14 can also be used, but for simplicity, we'll focus on v12 first and then verify if we missed anything or if v14 is needed.
           
           **Detailed plan using v12 for imaging and sampling:**
           
           *   **Imaging Objective v17:**
               *   Move v12 to #q3 (where v17 is visible).
               *   Calibrate camera v10 for v17.
               *   Take image of v17.
               *   Move v12 to #q1 (where lander v9 is visible).
               *   Send image of v17 to lander.
           *   **Imaging Objective v18:**
               *   Move v12 to #q4 (where v18 is visible).
               *   Calibrate camera v10 for v18.
               *   Take image of v18.
               *   Move v12 to #q1.
               *   Send image of v18 to lander.
           *   **Imaging Objective v19:**
               *   Move v12 to #q5 (where v19 is visible).
               *   Calibrate camera v10 for v19.
               *   Take image of v19.
               *   Move v12 to #q1.
               *   Send image of v19 to lander.
           *   **Imaging Objective v20:**
               *   Move v12 to #q2 (where v20 is visible).
               *   Calibrate camera v10 for v20.
               *   Take image of v20.
               *   Move v12 to #q1.
               *   Send image of v20 to lander.
           *   **Sample rock v1 (type v2):**
               *   Move v12 to #q0 (above v1).
               *   Sample rock v1.
               *   Move v12 to #q1.
               *   Send analysis of v1 to lander.
           *   **Sample rock v5 (type v6):**
               *   Move v12 to #q6 (above v5).
               *   Sample rock v5.
               *   Move v12 to #q1.
               *   Send analysis of v5 to lander.
           
           This plan addresses all parts of the axiom. The initial positions `atconf(v12, v13)` and `atconf(v14, v15)` are part of the goal, and `free(v12, v16)` and `free(v14, v16)` are also initially true. Sampling will make `full` but since the axiom only requires `free` at the end state, and not for the specific rover that performs the sampling, we don't need to drop the rock. If the sampling was done by both rovers, and both needed to be free, then `drop_rock` would be needed. However, only `free(v12,v16)` and `free(v14,v16)` are needed, which are initially true and remain true for v14, and v12's store will be `full` after sampling, so it will need to drop its rock. The problem formulation of the goal is `Atom new-axiom@0()`, which checks `free(v12, v16)` and `free(v14, v16)`. Since v12 samples, it will become full, so we must drop the rock.
           
           Let's refine the plan to ensure all conditions are met, especially `free(v12, v16)`:
           1.  **Imaging Objective v17:**
               *   `move v12 v13 #t9 #q3` (move to v17 location)
               *   `calibrate v12 #q3 #y2 v17 v10`
               *   `take_image v12 #q3 #y2 v17 v10 v11`
               *   `move v12 #q3 #t3 #q1` (move to lander communication location)
               *   `send_image v12 #q1 #y0 v9 v17 v11`
           2.  **Imaging Objective v18:**
               *   `move v12 #q1 #o2 #q4` (move to v18 location)
               *   `calibrate v12 #q4 #y3 v18 v10`
               *   `take_image v12 #q4 #y3 v18 v10 v11`
               *   `move v12 #q4 #t4 #q1` (move to lander communication location)
               *   `send_image v12 #q1 #y0 v9 v18 v11`
           3.  **Imaging Objective v19:**
               *   `move v12 #q1 #t17 #q5` (move to v19 location)
               *   `calibrate v12 #q5 #y4 v19 v10`
               *   `take_image v12 #q5 #y4 v19 v10 v11`
               *   `move v12 #q5 #t5 #q1` (move to lander communication location)
               *   `send_image v12 #q1 #y0 v9 v19 v11`
           4.  **Imaging Objective v20:**
               *   `move v12 #q1 #o2 #q2` (move to v20 location)
               *   `calibrate v12 #q2 #y1 v20 v10`
               *   `take_image v12 #q2 #y1 v20 v10 v11`
               *   `move v12 #q2 #t2 #q1` (move to lander communication location)
               *   `send_image v12 #q1 #y0 v9 v20 v11`
           5.  **Sample rock v1 (type v2):**
               *   `move v12 #q1 #t7 #q0` (move to v1 location)
               *   `sample_rock v12 #q0 v1 v16`
               *   `drop_rock v12 v16` (to satisfy `free(v12, v16)` at goal state)
               *   `move v12 #q0 #t0 #q1` (move to lander communication location)
               *   `send_analysis v12 #q1 #y0 v9 v1`
           6.  **Sample rock v5 (type v6):**
               *   `move v12 #q1 #t8 #q6` (move to v5 location)
               *   `sample_rock v12 #q6 v5 v16`
               *   `drop_rock v12 v16` (to satisfy `free(v12, v16)` at goal state)
               *   `move v12 #q6 #t26 #q1` (move to lander communication location)
               *   `send_analysis v12 #q1 #y0 v9 v5`
           
           The final configuration requirements `atconf(v12, v13)` and `atconf(v14, v15)` are not actively being changed by moving the rover to a specific communication point `q1` or `q8` as the goal checks the `atconf` predicate with initial position configuration parameters. Also, `motion(v12, #q1, #t6, v13)` indicates that it can move from `q1` to `v13`. So it can end up at `v13`. But the axiom means any configuration is ok for the free and analyzed, only initial ones for atconf. Let's make sure that at the end of the plan `atconf(v12, v13)` and `atconf(v14, v15)` hold true. The problem specifies that the rover starts at `v13` and `v15` for v12 and v14 respectively, and the axiom requires them to be at these configurations. So, after all operations, rover v12 must return to `v13`.
           
           Revised plan for v12:
           After each sending action, move v12 to `v13`. However, the axiom implies that the conditions must be true *simultaneously* at the end state, not necessarily that the rover must *end* at v13 after its last action. The goal states `atconf(v12, v13)` and `atconf(v14, v15)`. This implies the rover must be at `v13` at the final state.
           
           So after the last `send_analysis` for v12, we need to move v12 back to `v13`.
           
           Final check of the goal:
           - `atconf(v12, v13)`: Yes, we will move v12 back to v13 at the end.
           - `atconf(v14, v15)`: v14 remains at v15 throughout the plan.
           - `free(v12, v16)`: v12 samples, so it becomes `full`. We need to `drop_rock` after each sample.
           - `free(v14, v16)`: v14 remains `free`.
           - `receivedimage(v17, v11)`: Achieved.
           - `receivedimage(v18, v11)`: Achieved.
           - `receivedimage(v19, v11)`: Achieved.
           - `receivedimage(v20, v11)`: Achieved.
           - `receivedanalysis(v1)` (type v2): Achieved.
           - `receivedanalysis(v5)` (type v6): Achieved.
           
           The path between `v13` and the various `q` locations for imaging/sampling/communication needs to be valid. The motion predicates provide options. For example, `(move v12 v13 #t9 #q3)` is valid. Also, a motion like `(move v12 #q1 #t6 v13)` allows returning to `v13`.
           
           The sequence of actions below should fulfill all conditions.
           
           ```
           calibrate v12 #q3 #y2 v17 v10
           take_image v12 #q3 #y2 v17 v10 v11
           move v12 #q3 #t3 #q1
           send_image v12 #q1 #y0 v9 v17 v11
           move v12 #q1 #o2 #q4
           calibrate v12 #q4 #y3 v18 v10
           take_image v12 #q4 #y3 v18 v10 v11
           move v12 #q4 #t4 #q1
           send_image v12 #q1 #y0 v9 v18 v11
           move v12 #q1 #t17 #q5
           calibrate v12 #q5 #y4 v19 v10
           take_image v12 #q5 #y4 v19 v10 v11
           move v12 #q5 #t5 #q1
           send_image v12 #q1 #y0 v9 v19 v11
           move v12 #q1 #o2 #q2
           calibrate v12 #q2 #y1 v20 v10
           take_image v12 #q2 #y1 v20 v10 v11
           move v12 #q2 #t2 #q1
           send_image v12 #q1 #y0 v9 v20 v11
           move v12 #q1 #t7 #q0
           sample_rock v12 #q0 v1 v16
           drop_rock v12 v16
           move v12 #q0 #t0 #q1
           send_analysis v12 #q1 #y0 v9 v1
           move v12 #q1 #t8 #q6
           sample_rock v12 #q6 v5 v16
           drop_rock v12 v16
           move v12 #q6 #t26 #q1
           send_analysis v12 #q1 #y0 v9 v5
           move v12 #q1 #t6 v13
           ```
           --Plan--:
           (move v12 v13 #t9 #q3)
           (calibrate v12 #q3 #y2 v17 v10)
           (take_image v12 #q3 #y2 v17 v10 v11)
           (move v12 #q3 #t3 #q1)
           (send_image v12 #q1 #y0 v9 v17 v11)
           (move v12 #q1 #o2 #q4)
           (calibrate v12 #q4 #y3 v18 v10)
           (take_image v12 #q4 #y3 v18 v10 v11)
           (move v12 #q4 #t4 #q1)
           (send_image v12 #q1 #y0 v9 v18 v11)
           (move v12 #q1 #t17 #q5)
           (calibrate v12 #q5 #y4 v19 v10)
           (take_image v12 #q5 #y4 v19 v10 v11)
           (move v12 #q5 #t5 #q1)
           (send_image v12 #q1 #y0 v9 v19 v11)
           (move v12 #q1 #o2 #q2)
           (calibrate v12 #q2 #y1 v20 v10)
           (take_image v12 #q2 #y1 v20 v10 v11)
           (move v12 #q2 #t2 #q1)
           (send_image v12 #q1 #y0 v9 v20 v11)
           (move v12 #q1 #t7 #q0)
           (sample_rock v12 #q0 v1 v16)
           (drop_rock v12 v16)
           (move v12 #q0 #t0 #q1)
           (send_analysis v12 #q1 #y0 v9 v1)
           (move v12 #q1 #t8 #q6)
           (sample_rock v12 #q6 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q6 #t26 #q1)
           (send_analysis v12 #q1 #y0 v9 v5)
           (move v12 #q1 #t6 v13)

