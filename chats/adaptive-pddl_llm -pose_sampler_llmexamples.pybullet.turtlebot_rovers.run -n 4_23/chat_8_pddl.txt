User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rover(v12)
           Atom objective(v18)
           Atom onboard(v10, v12)
           Atom objective(v17)
           Atom rock(v8)
           Atom type(v7, v6)
           Atom rock(v3)
           Atom rock(v1)
           Atom conf(v14, v15)
           Atom mode(v11)
           Atom objective(v19)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom type(v1, v2)
           Atom onboard(v10, v14)
           Atom camera(v10)
           Atom free(v14, v16)
           Atom store(v16)
           Atom atconf(v14, v15)
           Atom rover(v14)
           Atom rock(v7)
           Atom lander(v9)
           Atom type(v3, v2)
           Atom atconf(v12, v13)
           Atom rock(v5)
           Atom type(v4, v2)
           Atom objective(v20)
           Atom conf(v12, v13)
           Atom type(v5, v6)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q5, #y4, v18)
           Atom imagerange(v14, #q5, v18)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom above(v14, #q14, v7)
           Atom conf(v14, #q14)
           Atom imagevisible(v14, #q7, #y5, v20)
           Atom imagerange(v14, #q7, v20)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q0, #y0, v19)
           Atom imagerange(v14, #q0, v19)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v12, #q15, v7)
           Atom conf(v12, #q15)
           Atom above(v12, #q6, v5)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q12, #y8, v19)
           Atom imagerange(v12, #q12, v19)
           Atom conf(v12, #q12)
           Atom ray(#y8)
           Atom imagevisible(v12, #q13, #y9, v18)
           Atom imagerange(v12, #q13, v18)
           Atom conf(v12, #q13)
           Atom ray(#y9)
           Atom imagevisible(v12, #q8, #y6, v20)
           Atom imagerange(v12, #q8, v20)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom comvisible(v12, #q4, #y3, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q11, #y7, v17)
           Atom imagerange(v12, #q11, v17)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom imagevisible(v14, #q2, #y2, v17)
           Atom imagerange(v14, #q2, v17)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q3, v1)
           Atom conf(v12, #q3)
           Atom above(v14, #q10, v1)
           Atom conf(v14, #q10)
           Atom above(v12, #q16, v3)
           Atom conf(v12, #q16)
           Atom above(v14, #q17, v3)
           Atom conf(v14, #q17)
           Atom above(v12, #o5, v4)
           Atom above(v14, #o5, v4)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v14, v15, #t8, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v12, #q3, #o2, #q16)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t1, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q16, #o2, #q3)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, v15, #t20, #q9)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q16)
           Atom motion(v12, v13, #t25, #q11)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q11)
           Atom motion(v14, #q1, #t32, #q14)
           Atom motion(v14, #q1, #t0, v15)
           Atom motion(v14, #q2, #t12, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q14, #t34, #q1)
           Atom motion(v14, #q9, #t18, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q1, #t17, #q9)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #t14, #q1)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q1, #t27, #q7)
           Atom motion(v14, v15, #t10, #q7)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v12, #q16, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q11, #t40, #q4)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #t5, #q3)
           Atom motion(v12, #q4, #o2, #q16)
           Atom motion(v12, #q3, #t3, #q4)
           Atom motion(v12, #q4, #t2, v13)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q16, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #t24, #q3)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, v13, #t16, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q16)
           Atom motion(v12, #q4, #t44, #q8)
           Atom motion(v12, #q8, #t15, #q4)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, v15, #t46, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, #q17, #t42, #q1)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q17, #o2, #q5)
           Atom motion(v14, #q1, #t30, #q5)
           Atom motion(v14, #q5, #o2, #q17)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, v15, #t9, #q5)
           Atom motion(v14, #q5, #o2, #q14)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q5, #t13, #q1)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q14, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q16)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q11, #t22, #q13)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q13)
           Atom motion(v12, #q13, #t36, #q8)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q4, #t45, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #t43, #q4)
           Atom motion(v12, #q12, #t33, #q13)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #t41, #q4)
           Atom motion(v12, #q11, #t35, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #t26, #q8)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q16, #o2, #q12)
           Atom motion(v12, #q13, #t23, #q12)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q4, #t39, #q12)
           Atom motion(v12, #q12, #o2, #q16)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, v13, #t28, #q6)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q16, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q4, #t6, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q16)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #t4, #q4)
           Atom motion(v12, #q4, #t37, #q15)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q15, #t38, #q4)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q15, #o2, #q16)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #t19, #q1)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q17)
           Atom motion(v14, v15, #t21, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, #q1, #t29, #q10)
           Atom motion(v14, #q17, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q1, #t31, #q0)
           Atom motion(v14, #q0, #t11, #q1)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q17, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q17)
           Atom motion(v14, #q0, #o2, #q14)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v14, v15, #t7, #q0)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q16)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q16, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q17)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #q17, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q15 v7 v16))
           ((sample_rock v12 #q16 v3 v16))
           ((sample_rock v12 #q3 v1 v16))
           ((sample_rock v12 #q6 v5 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q10 v1 v16))
           ((sample_rock v14 #q14 v7 v16))
           ((sample_rock v14 #q17 v3 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q16))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q16))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t22 #q13))
           ((move v12 #q11 #t35 #q12))
           ((move v12 #q11 #t40 #q4))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q16))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t26 #q8))
           ((move v12 #q12 #t33 #q13))
           ((move v12 #q12 #t41 #q4))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q16))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t23 #q12))
           ((move v12 #q13 #t36 #q8))
           ((move v12 #q13 #t43 #q4))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q16))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t38 #q4))
           ((move v12 #q16 #o2 #o5))
           ((move v12 #q16 #o2 #q11))
           ((move v12 #q16 #o2 #q12))
           ((move v12 #q16 #o2 #q13))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q3))
           ((move v12 #q16 #o2 #q4))
           ((move v12 #q16 #o2 #q6))
           ((move v12 #q16 #o2 #q8))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q16))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t3 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q16))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #t2 v13))
           ((move v12 #q4 #t37 #q15))
           ((move v12 #q4 #t39 #q12))
           ((move v12 #q4 #t44 #q8))
           ((move v12 #q4 #t45 #q13))
           ((move v12 #q4 #t5 #q3))
           ((move v12 #q4 #t6 #q6))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q16))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t4 #q4))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q16))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t15 #q4))
           ((move v12 #q8 #t24 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q3))
           ((move v12 v13 #t16 #q8))
           ((move v12 v13 #t25 #q11))
           ((move v12 v13 #t28 #q6))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q17))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #o2 #q17))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t11 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q17))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #t0 v15))
           ((move v14 #q1 #t17 #q9))
           ((move v14 #q1 #t27 #q7))
           ((move v14 #q1 #t29 #q10))
           ((move v14 #q1 #t30 #q5))
           ((move v14 #q1 #t31 #q0))
           ((move v14 #q1 #t32 #q14))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q17))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t19 #q1))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q5))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t34 #q1))
           ((move v14 #q17 #o2 #o5))
           ((move v14 #q17 #o2 #q0))
           ((move v14 #q17 #o2 #q10))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q2))
           ((move v14 #q17 #o2 #q5))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t42 #q1))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q17))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t12 #q1))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q17))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t13 #q1))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t14 #q1))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t18 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q7))
           ((move v14 v15 #t20 #q9))
           ((move v14 v15 #t21 #q10))
           ((move v14 v15 #t46 #q17))
           ((move v14 v15 #t7 #q0))
           ((move v14 v15 #t8 #q2))
           ((move v14 v15 #t9 #q5))
           ((calibrate v12 #q11 #y7 v17 v10))
           ((calibrate v12 #q12 #y8 v19 v10))
           ((calibrate v12 #q13 #y9 v18 v10))
           ((calibrate v12 #q8 #y6 v20 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q2 #y2 v17 v10))
           ((calibrate v14 #q5 #y4 v18 v10))
           ((calibrate v14 #q7 #y5 v20 v10))
           ((take_image v12 #q11 #y7 v17 v10 v11))
           ((take_image v12 #q12 #y8 v19 v10 v11))
           ((take_image v12 #q13 #y9 v18 v10 v11))
           ((take_image v12 #q8 #y6 v20 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q2 #y2 v17 v10 v11))
           ((take_image v14 #q5 #y4 v18 v10 v11))
           ((take_image v14 #q7 #y5 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y3 v9 v4))
           ((send_analysis v12 #q4 #y3 v9 v8))
           ((send_analysis v12 #q4 #y3 v9 v7))
           ((send_analysis v12 #q4 #y3 v9 v3))
           ((send_analysis v12 #q4 #y3 v9 v1))
           ((send_analysis v12 #q4 #y3 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_image v12 #q4 #y3 v9 v17 v11))
           ((send_image v12 #q4 #y3 v9 v19 v11))
           ((send_image v12 #q4 #y3 v9 v18 v11))
           ((send_image v12 #q4 #y3 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     This scene involves two rovers, `v12` and `v14`, equipped with a camera `v10` and a store `v16`. There are several objectives (`v17`, `v18`, `v19`, `v20`) to image and several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) to analyze. The rovers can move between configurations, take images, calibrate their camera, send images and analyses to the lander `v9`, sample rocks, and drop rocks.
           
           The goal `new-axiom@0()` requires that:
           1. Both rovers `v12` and `v14` are at a configuration (satisfied initially).
           2. Both rovers `v12` and `v14` have their stores `v16` free (satisfied initially).
           3. Images of objectives `v17`, `v18`, `v19`, `v20` in mode `v11` have been received by the lander.
           4. Rocks `v2` (stone) and `v6` (soil) have been analyzed. In this specific problem, `v2` and `v6` are types, and the goal is that *some* rock of type `v2` and *some* rock of type `v6` have been analyzed.
              - Rocks of type `v2` are `v1`, `v3`, `v4`.
              - Rocks of type `v6` are `v5`, `v7`, `v8`.
           
           To achieve the goal, the plan needs to:
           1. Take images of all four objectives (`v17`, `v18`, `v19`, `v20`) using either rover and send them to the lander.
           2. Sample and analyze at least one rock of type `v2` (e.g., `v1`) and at least one rock of type `v6` (e.g., `v5`) and send their analyses to the lander.
           
           I will use `v14` to image the objectives and analyze rocks since it seems to have better visibility to multiple objectives and rocks from its current location and can communicate with the lander from `q1`.
           Rover `v14` is initially at `v15`.
           
           **Imaging Objectives:**
           - `v18`: `imagevisible(v14, #q5, #y4, v18)`
           - `v20`: `imagevisible(v14, #q7, #y5, v20)`
           - `v19`: `imagevisible(v14, #q0, #y0, v19)`
           - `v17`: `imagevisible(v14, #q2, #y2, v17)`
           
           Rover `v14` needs to calibrate its camera `v10` for each objective. After calibration, it can take an image, and then send the image to `v9` from a communication-visible location. Since `comvisible(v14, #q1, #y1, v9)` is true, rover `v14` will move to `#q1` to send all images.
           
           **Analyzing Rocks:**
           - Type `v2`: Rocks `v1`, `v3`, `v4`. `above(v14, #q10, v1)`, `above(v14, #q17, v3)`, `above(v14, #o5, v4)`.
           - Type `v6`: Rocks `v5`, `v7`, `v8`. `above(v14, #q9, v5)`, `above(v14, #q14, v7)`, `above(v14, #o5, v8)`.
           
           I will sample rock `v1` (type `v2`) and `v5` (type `v6`). `v14` can sample `v1` from `#q10` and `v5` from `#q9`. Then it will move to `#q1` to send analyses.
           
           **Plan Strategy:**
           1. Calibrate camera for `v17` at `#q2` and take image.
           2. Calibrate camera for `v18` at `#q5` and take image.
           3. Calibrate camera for `v19` at `#q0` and take image.
           4. Calibrate camera for `v20` at `#q7` and take image.
           5. Move `v14` to `#q1` (comms location).
           6. Send all four images.
           7. Move `v14` to `#q10`.
           8. Sample rock `v1`.
           9. Move `v14` to `#q9`.
           10. Sample rock `v5`.
           11. Move `v14` to `#q1` (comms location).
           12. Send analysis for `v1`.
           13. Send analysis for `v5`.
           
           Initial state for v14 is `atconf(v14, v15)`.
           
           Let's refine the movement:
           - To image `v17` at `#q2`: move `v14` from `v15` to `#q2`.
           - To image `v18` at `#q5`: move `v14` from `#q2` to `#q5`.
           - To image `v19` at `#q0`: move `v14` from `#q5` to `#q0`.
           - To image `v20` at `#q7`: move `v14` from `#q0` to `#q7`.
           - To communicate at `#q1`: move `v14` from `#q7` to `#q1`.
           - To sample `v1` at `#q10`: move `v14` from `#q1` to `#q10`.
           - To sample `v5` at `#q9`: move `v14` from `#q10` to `#q9`.
           - To communicate at `#q1`: move `v14` from `#q9` to `#q1`.
           
           Check motion paths:
           `motion(v14, v15, #t8, #q2)`: Exists.
           `motion(v14, #q2, #o2, #q5)`: Exists.
           `motion(v14, #q5, #o2, #q0)`: Exists.
           `motion(v14, #q0, #o2, #q7)`: Exists.
           `motion(v14, #q7, #t14, #q1)`: Exists.
           `motion(v14, #q1, #t29, #q10)`: Exists.
           `motion(v14, #q10, #o2, #q9)`: Exists.
           `motion(v14, #q9, #t18, #q1)`: Exists.
           
           This plan seems viable.
           
           --Plan--:
           (move v14 v15 #t8 #q2)
           (calibrate v14 #q2 #y2 v17 v10)
           (take_image v14 #q2 #y2 v17 v10 v11)
           (move v14 #q2 #o2 #q5)
           (calibrate v14 #q5 #y4 v18 v10)
           (take_image v14 #q5 #y4 v18 v10 v11)
           (move v14 #q5 #o2 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #o2 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t14 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (move v14 #q1 #t29 #q10)
           (sample_rock v14 #q10 v1 v16)
           (move v14 #q10 #o2 #q9)
           (sample_rock v14 #q9 v5 v16)
           (move v14 #q9 #t18 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (send_analysis v14 #q1 #y1 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the `new-axiom@0()` goal was not satisfied. Let's re-evaluate the `new-axiom@0()` goal conditions.
           
           The goal `new-axiom@0()` (which is derived from an axiom) requires the following set of conditions to be true:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `type(?stone, v2)` and `receivedanalysis(?stone)` for some stone rock.
           - `type(?soil, v6)` and `receivedanalysis(?soil)` for some soil rock.
           
           From the initial state:
           - `atconf(v12, v13)` is true.
           - `atconf(v14, v15)` is true.
           - `free(v12, v16)` is true.
           - `free(v14, v16)` is true.
           
           The previous plan correctly focused on achieving the `receivedimage` predicates and the `receivedanalysis` predicates. The issue was not with the steps to achieve these, but possibly with the overall state not matching the specific configuration described in the axiom at the *end* of the plan.
           
           A key observation from the goal: `atconf(v14, v15)` and `atconf(v12, v13)` must be true at the *end* of the plan. My previous plan moved rover `v14` to `#q1` at the end. This contradicts the goal `atconf(v14, v15)`. Therefore, `v14` must return to `v15` after completing its tasks.
           
           Let's adjust the plan to ensure `v14` returns to `v15` at the end. Rover `v12` does not move, so `atconf(v12, v13)` remains true.
           
           **Revised Plan Strategy:**
           1. Calibrate camera for `v17` at `#q2` and take image.
           2. Calibrate camera for `v18` at `#q5` and take image.
           3. Calibrate camera for `v19` at `#q0` and take image.
           4. Calibrate camera for `v20` at `#q7` and take image.
           5. Move `v14` to `#q1` (comms location) to send all images.
           6. Send all four images.
           7. Move `v14` from `#q1` to `#q10`.
           8. Sample rock `v1` (type `v2`).
           9. Move `v14` from `#q10` to `#q9`.
           10. Sample rock `v5` (type `v6`).
           11. Move `v14` from `#q9` to `#q1` (comms location) to send analyses.
           12. Send analysis for `v1`.
           13. Send analysis for `v5`.
           14. **Crucially: Move `v14` from `#q1` back to `v15`.**
           
           Let's re-verify motion paths including the final return:
           - `motion(v14, v15, #t8, #q2)`
           - `motion(v14, #q2, #o2, #q5)`
           - `motion(v14, #q5, #o2, #q0)`
           - `motion(v14, #q0, #o2, #q7)`
           - `motion(v14, #q7, #t14, #q1)`
           - `motion(v14, #q1, #t29, #q10)`
           - `motion(v14, #q10, #o2, #q9)`
           - `motion(v14, #q9, #t18, #q1)`
           - `motion(v14, #q1, #t0, v15)`: This motion exists, it allows `v14` to return to `v15` from `#q1`.
           
           This revised plan addresses the final position of `v14` to meet the `atconf(v14, v15)` requirement of the axiom.
           
           --Plan--:
           (move v14 v15 #t8 #q2)
           (calibrate v14 #q2 #y2 v17 v10)
           (take_image v14 #q2 #y2 v17 v10 v11)
           (move v14 #q2 #o2 #q5)
           (calibrate v14 #q5 #y4 v18 v10)
           (take_image v14 #q5 #y4 v18 v10 v11)
           (move v14 #q5 #o2 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #o2 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t14 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (move v14 #q1 #t29 #q10)
           (sample_rock v14 #q10 v1 v16)
           (move v14 #q10 #o2 #q9)
           (sample_rock v14 #q9 v5 v16)
           (move v14 #q9 #t18 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (send_analysis v14 #q1 #y1 v9 v5)
           (move v14 #q1 #t0 v15)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan keeps failing on `new-axiom@0()`. Let's break down the `new-axiom@0()` axiom fully and ensure all parts are met.
           
           The axiom `new-axiom@0()` represents a goal state that requires the following:
           
           ```
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           Let's check each component based on the previous plan's outcome:
           1.  `atconf(v12, v13)`: `v12` is never moved, so this remains true. (OK)
           2.  `atconf(v14, v15)`: The previous plan included `(move v14 #q1 #t0 v15)` as the last step. This should ensure `v14` is at `v15`. (OK)
           3.  `free(v12, v16)`: `v12` never samples, so `v12`'s store remains free. (OK)
           4.  `free(v14, v16)`: `v14` samples two rocks (`v1` and `v5`). Sampling fills the store. `sample_rock` has the effect `full(?v, ?s)` and `NegatedAtom free(?v, ?s)`. To make `free(v14, v16)` true again, `v14` must `drop_rock`. This was missed. (MISSING ACTION)
           5.  `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: The plan includes `calibrate`, `take_image`, and `send_image` for all four objectives. This sequence should achieve these. (OK)
           6.  `type(?stone, v2)` and `receivedanalysis(?stone)`: The plan samples `v1` which is `type(v1, v2)`. It then sends the analysis. This should achieve this part. (OK)
           7.  `type(?soil, v6)` and `receivedanalysis(?soil)`: The plan samples `v5` which is `type(v5, v6)`. It then sends the analysis. This should achieve this part. (OK)
           
           The critical missing step is to `drop_rock` for `v14` to make `free(v14, v16)` true again after sampling. The `drop_rock` action has the precondition `full(?v, ?s)` and effect `free(?v, ?s)`. Since `v14` samples two rocks, its store `v16` will be full. It only has one store, so it needs to drop the first rock before sampling the second, or drop both at the end (but it only carries one at a time if "full" implies fully utilized). The action `sample_rock` states `free(?v, ?s)` as a precondition, and makes it `full(?v, ?s)`. This means `v14` can only sample *one* rock at a time before it needs to drop it.
           
           So, the sampling process needs to be:
           - Sample `v1`.
           - Drop `v1`. (This makes the store free for another sample)
           - Sample `v5`.
           - Drop `v5`.
           
           Then, send the analysis. However, the `analyzed` predicate is achieved when `sample_rock` is performed. The `drop_rock` action does *not* negate `analyzed`. So, `v14` can sample `v1`, then `drop_rock` (making store free), then sample `v5`. Both `v1` and `v5` would be `analyzed` and then `v14` can send their analysis.
           
           Let's refine the sampling and dropping part of the plan:
           
           **Revised Plan Strategy (incorporating `drop_rock`):**
           1. Calibrate camera for `v17` at `#q2` and take image.
           2. Calibrate camera for `v18` at `#q5` and take image.
           3. Calibrate camera for `v19` at `#q0` and take image.
           4. Calibrate camera for `v20` at `#q7` and take image.
           5. Move `v14` to `#q1` (comms location) to send all images.
           6. Send all four images.
           7. Move `v14` from `#q1` to `#q10`.
           8. Sample rock `v1` (type `v2`). Store `v16` becomes full.
           9. **Drop rock `v1` (`drop_rock v14 v16`). Store `v16` becomes free.**
           10. Move `v14` from `#q10` to `#q9`.
           11. Sample rock `v5` (type `v6`). Store `v16` becomes full.
           12. **Drop rock `v5` (`drop_rock v14 v16`). Store `v16` becomes free.**
           13. Move `v14` from `#q9` to `#q1` (comms location) to send analyses.
           14. Send analysis for `v1`.
           15. Send analysis for `v5`.
           16. Move `v14` from `#q1` back to `v15`.
           
           This ensures `free(v14, v16)` is true at the end.
           
           --Plan--:
           (move v14 v15 #t8 #q2)
           (calibrate v14 #q2 #y2 v17 v10)
           (take_image v14 #q2 #y2 v17 v10 v11)
           (move v14 #q2 #o2 #q5)
           (calibrate v14 #q5 #y4 v18 v10)
           (take_image v14 #q5 #y4 v18 v10 v11)
           (move v14 #q5 #o2 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #o2 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t14 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (move v14 #q1 #t29 #q10)
           (sample_rock v14 #q10 v1 v16)
           (drop_rock v14 v16)
           (move v14 #q10 #o2 #q9)
           (sample_rock v14 #q9 v5 v16)
           (drop_rock v14 v16)
           (move v14 #q9 #t18 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (send_analysis v14 #q1 #y1 v9 v5)
           (move v14 #q1 #t0 v15)

