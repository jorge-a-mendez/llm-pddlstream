User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v12, v13)
           Atom controllable(v4)
           Atom stackable(v8, v10)
           Atom ataconf(v4, v5)
           Atom type(v8, v17)
           Atom stackable(v15, v10)
           Atom supported(v8, v9, v11)
           Atom arm(v6)
           Atom atbconf(v3)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom supported(v15, v16, v11)
           Atom ataconf(v6, v7)
           Atom atpose(v15, v16)
           Atom graspable(v15)
           Atom supported(v12, v13, v14)
           Atom aconf(v4, v5)
           Atom atpose(v8, v9)
           Atom aconf(v6, v7)
           Atom graspable(v8)
           Atom type(v12, v17)
           Atom atpose(v12, v13)
           Atom bconf(v3)
           Atom pose(v15, v16)
           Atom arm(v4)
           Atom stackable(v12, v18)
           Atom graspable(v12)
           Atom stackable(v8, v18)
           Atom canmove()
           Atom handempty(v6)
           Atom stackable(v12, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #o1)
           Atom supported(v12, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects: `v12`, `v15`, and `v8` are graspable objects. `v10`, `v11`, `v14`, and `v18` are surfaces where objects can be supported. `v4` and `v6` are robot arms. The robot starts at base configuration `v3` and arm `v4` is at arm configuration `v5` and is handempty.
           
           The goal `new-axiom@0()` can be achieved if `on(?green, v18)` and `type(?green, v17)` are true.
           From the initial state, we know `type(v8, v17)`, `type(v12, v17)`. So either `v8` or `v12` can be the `?green` object. The axiom requires `on(?green, v18)`.
           Currently, `v8` is `atpose(v8, v9)` and `supported(v8, v9, v11)`. It is also `supported(v8, #o2, v18)` and `supported(v8, #o2, v10)`.
           Similarly, `v12` is `atpose(v12, v13)` and `supported(v12, v13, v14)`. It is also `supported(v12, #o2, v10)` and `supported(v12, #o2, v18)`.
           
           To achieve the goal `on(?green, v18)`, we need to place either `v8` or `v12` at a pose that is supported by `v18`.
           Let's choose `v8`. Currently `v8` is at `v9` which is supported by `v11`. We need to place it at `#o2` which is supported by `v18`.
           The available actions include picking `v8` from `v9` and placing `v8` at `#o2`.
           
           1. **Pick `v8`:** The action `(pick v4 v8 v9 #o1 #o3 #o4)` has the following preconditions:
               * `kin(v4, v8, v9, #o1, #o3, #o4)`: Provided in the initial state.
               * `atpose(v8, v9)`: Provided in the initial state.
               * `handempty(v4)`: Provided in the initial state.
               * `atbconf(#o3)`: Not provided, but `atbconf(v3)` is. We need to move the base from `v3` to `#o3`.
               * `NegatedAtom unsafeapproach(v8, v9, #o1)`: Not provided as true, so it's implicitly false.
               * `NegatedAtom unsafeatraj(#o4)`: Not provided as true, so it's implicitly false.
               So, first we need to move the base from `v3` to `#o3`.
           
           2. **Move base:** `(move_base v3 #o3 #o0)` has the following preconditions:
               * `basemotion(v3, #o0, #o3)`: Provided in the initial state.
               * `atbconf(v3)`: Provided in the initial state.
               * `canmove()`: Provided in the initial state.
               This action is valid. After this, `atbconf(#o3)` will be true and `canmove()` will be false.
           
           3. After moving the base, we can `pick v8`. After picking, `atpose(v8, v9)` becomes false, `atgrasp(v4, v8, #o1)` becomes true, and `handempty(v4)` becomes false, and `canmove()` becomes true.
           
           4. **Place `v8`:** The action `(place v4 v8 #o2 #o1 #o3 #o4)` has the following preconditions:
               * `kin(v4, v8, #o2, #o1, #o3, #o4)`: Provided in the initial state.
               * `atgrasp(v4, v8, #o1)`: Achieved by the pick action.
               * `atbconf(#o3)`: Achieved by the move_base action.
               * `NegatedAtom unsafepose(v8, #o2)`: Not provided as true, so implicitly false.
               * `NegatedAtom unsafeapproach(v8, #o2, #o1)`: Not provided as true, so implicitly false.
               * `NegatedAtom unsafeatraj(#o4)`: Not provided as true, so implicitly false.
               This action is valid. After this, `atpose(v8, #o2)` will be true, `handempty(v4)` will be true, and `atgrasp(v4, v8, #o1)` will be false, and `canmove()` will be true.
               Since `supported(v8, #o2, v18)` is in the initial state, after `atpose(v8, #o2)` is true, the axiom `on(v8, v18)` becomes true. With `type(v8, v17)` also true, the goal `new-axiom@0()` will be satisfied.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)

