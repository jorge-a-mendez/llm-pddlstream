User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v12, v13)
           Atom controllable(v4)
           Atom stackable(v8, v10)
           Atom ataconf(v4, v5)
           Atom type(v8, v17)
           Atom stackable(v15, v10)
           Atom supported(v8, v9, v11)
           Atom arm(v6)
           Atom atbconf(v3)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom supported(v15, v16, v11)
           Atom ataconf(v6, v7)
           Atom atpose(v15, v16)
           Atom graspable(v15)
           Atom supported(v12, v13, v14)
           Atom aconf(v4, v5)
           Atom atpose(v8, v9)
           Atom aconf(v6, v7)
           Atom graspable(v8)
           Atom type(v12, v17)
           Atom atpose(v12, v13)
           Atom bconf(v3)
           Atom pose(v15, v16)
           Atom arm(v4)
           Atom stackable(v12, v18)
           Atom graspable(v12)
           Atom stackable(v8, v18)
           Atom canmove()
           Atom handempty(v6)
           Atom stackable(v12, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #o1)
           Atom supported(v12, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (`v12`, `v8`, `v15`) with their initial poses and whether they are graspable and stackable. The robot has two arms, `v4` and `v6`, both of which are empty. The robot is at base configuration `v3`.
           
           The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true.
           From the initial state, we know `type(v8, v17)` and `type(v12, v17)`. So, `?green` can be either `v8` or `v12`.
           We also need `on(?green, v18)`.
           If `?green` is `v8`, then `on(v8, v18)` needs to be true. This means `supported(v8, ?p, v18)` and `atpose(v8, ?p)`. We have `supported(v8, #o2, v18)` and `pose(v8, #o2)`, but `atpose(v8, #o2)` is not given. However, `atpose(v8, v9)` and `supported(v8, v9, v11)` are given.
           If `?green` is `v12`, then `on(v12, v18)` needs to be true. This means `supported(v12, ?p, v18)` and `atpose(v12, ?p)`. We have `supported(v12, #o2, v18)` and `pose(v12, #o2)`, but `atpose(v12, #o2)` is not given. However, `atpose(v12, v13)` and `supported(v12, v13, v14)` are given.
           
           It seems the goal `new-axiom@0()` is met if an object of type `v17` is on `v18`.
           From the initial state, `on(v8, v11)` is true because `atpose(v8, v9)` and `supported(v8, v9, v11)`.
           Also, `on(v12, v14)` is true because `atpose(v12, v13)` and `supported(v12, v13, v14)`.
           And `on(v15, v11)` is true because `atpose(v15, v16)` and `supported(v15, v16, v11)`.
           
           The available action is `((move_base v3 v3 #o0))`. This action does not change the state of objects on surfaces. It only moves the robot base from `v3` to `v3`. It doesn't help in achieving the goal of placing `v8` or `v12` on `v18`.
           
           There are no pick or place actions available in the `valid action instances` list. Thus, the robot cannot manipulate any objects. Therefore, the goal is not achievable.

