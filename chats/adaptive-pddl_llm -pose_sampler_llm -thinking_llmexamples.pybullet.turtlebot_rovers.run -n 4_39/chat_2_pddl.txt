User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom type(v3, v2)
           Atom store(v16)
           Atom free(v14, v16)
           Atom conf(v12, v13)
           Atom type(v5, v6)
           Atom objective(v19)
           Atom rock(v3)
           Atom mode(v11)
           Atom rock(v8)
           Atom type(v4, v2)
           Atom objective(v18)
           Atom rock(v5)
           Atom objective(v17)
           Atom onboard(v10, v14)
           Atom type(v7, v6)
           Atom rock(v4)
           Atom rover(v14)
           Atom onboard(v10, v12)
           Atom camera(v10)
           Atom atconf(v12, v13)
           Atom rock(v7)
           Atom atconf(v14, v15)
           Atom lander(v9)
           Atom conf(v14, v15)
           Atom free(v12, v16)
           Atom type(v1, v2)
           Atom rover(v12)
           Atom objective(v20)
           Atom rock(v1)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v12, #q5, #y3, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q1, v8)
           Atom conf(v12, #q1)
           Atom above(v12, #o5, v7)
           Atom above(v12, #q0, v3)
           Atom conf(v12, #q0)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q3, #y1, v20)
           Atom imagerange(v14, #q3, v20)
           Atom conf(v14, #q3)
           Atom ray(#y1)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v14, #q7, #y5, v18)
           Atom imagerange(v14, #q7, v18)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #o5, v7)
           Atom comvisible(v14, #q4, #y2, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v14, #q2, #y0, v19)
           Atom imagerange(v14, #q2, v19)
           Atom conf(v14, #q2)
           Atom ray(#y0)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #t1, #q1)
           Atom motion(v14, v15, #t2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v12, #q5, #t8, v13)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q1, #t7, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q4, #t9, v15)
           Atom motion(v14, #q2, #t4, #q4)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v12, #q0, #t6, #q5)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q3, #t5, #q4)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, v15, #t3, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #q5)
           Atom motion(v12, #o3, #o2, #q1)
           Atom motion(v12, #q0, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #q1, #o2, #o3)
           Atom motion(v12, #q5, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q0)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o3, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q0 v3 v16))
           ((sample_rock v12 #q1 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q0))
           ((move v12 #o3 #o2 #q1))
           ((move v12 #o3 #o2 #q5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o3))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t6 #q5))
           ((move v12 #q1 #o2 #o3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t7 #q5))
           ((move v12 #q5 #o2 #o3))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t8 v13))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t1 #q1))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t4 #q4))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t5 #q4))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #t9 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t2 #q2))
           ((move v14 v15 #t3 #q3))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q2 #y0 v19 v10))
           ((calibrate v14 #q3 #y1 v20 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((calibrate v14 #q7 #y5 v18 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q2 #y0 v19 v10 v11))
           ((take_image v14 #q3 #y1 v20 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((take_image v14 #q7 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y3 v9 v1))
           ((send_analysis v12 #q5 #y3 v9 v4))
           ((send_analysis v12 #q5 #y3 v9 v5))
           ((send_analysis v12 #q5 #y3 v9 v7))
           ((send_analysis v12 #q5 #y3 v9 v3))
           ((send_analysis v12 #q5 #y3 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y2 v9 v1))
           ((send_analysis v14 #q4 #y2 v9 v3))
           ((send_analysis v14 #q4 #y2 v9 v4))
           ((send_analysis v14 #q4 #y2 v9 v5))
           ((send_analysis v14 #q4 #y2 v9 v7))
           ((send_analysis v14 #q4 #y2 v9 v8))
           ((send_image v12 #q5 #y3 v9 v17 v11))
           ((send_image v12 #q5 #y3 v9 v18 v11))
           ((send_image v12 #q5 #y3 v9 v19 v11))
           ((send_image v12 #q5 #y3 v9 v20 v11))
           ((send_image v14 #q4 #y2 v9 v19 v11))
           ((send_image v14 #q4 #y2 v9 v20 v11))
           ((send_image v14 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q4 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Cohesive Strategy for Achieving a Complex Goal**
           
           My primary objective is to instantiate the action `new-axiom@0()`, which necessitates satisfying a conjunction of several atomic facts. This breakdown revealed that I must first procure and transmit four images: one each of objects `v17`, `v18`, `v19`, and `v20`, along with the analysis data pertaining to a rock of type `v2` and soil of type `v6`.
           
           Initially, I reviewed the pre-existing conditions and determined that the positions (`atconf`) of the two rovers, `v12` and `v14`, were already set. In addition, `v12` and `v14` both have a store and the stores are free. To achieve the imaging subgoals, the plan hinges on using rover `v12` as the image acquisition and communication hub. The relevant facts and actions regarding these rovers were carefully examined.
           
           To acquire and transmit images, the process begins with using a communication capable rover at the communication configuration. The communication configuration is `q5`. Each image transmission requires the appropriate configuration (via the `move` action) and a `send_image` action. The `send_image` function in turn requires a `haveimage` fact. The `haveimage` facts are achieved via `take_image` which requires image and sensor calibration.
           
           Thus, to meet the imaging criteria, I devised a plan involving rover `v12`:
           
           1.  **Move** `v12` to the camera config `#o3`.
           2.  **Calibrate** the camera and the sensors to take images for each object.
           3.  **Take images** of each of the four requested objects.
           4.  **Move** `v12` to the comms config `#q5`.
           5.  **Send** each of the four images.
           
           To fulfill the analytical requirements, I identified a stone and soil suitable for analysis (a stone of type `v2`, represented by object `v3`, and a soil of type `v6`, represented by object `v8`). The approach for obtaining and transmitting analysis involved rover `v12` sampling the two materials using the available store and free functions, with additional communication actions.
           
           Thus, for satisfying the `receivedanalysis` predicates:
           
           1.  **Move** `v12` to `q0` location of sample stone `v3`.
           2.  **Sample** the stone `v3`.
           3.  **Drop** the stone to free the store.
           4.  **Move** `v12` to `q1` location of sample soil `v8`.
           5.  **Sample** the soil `v8`.
           6.  **Move** `v12` to comms configuration `#q5`.
           7.  **Send** the analyses of `v3` and `v8`.
           
           Upon completing each of these steps, I can verify that each pre-condition has been satisfied.
           
)

Model:     **A Cohesive Strategy for Achieving a Complex Goal**
           
           My primary objective is to instantiate the action `new-axiom@0()`, which necessitates satisfying a conjunction of several atomic facts. This breakdown revealed that I must first procure and transmit four images: one each of objects `v17`, `v18`, `v19`, and `v20`, along with the analysis data pertaining to a rock of type `v2` and soil of type `v6`.
           
           Initially, I reviewed the pre-existing conditions and determined that the positions (`atconf`) of the two rovers, `v12` and `v14`, were already set. In addition, `v12` and `v14` both have a store and the stores are free. To achieve the imaging subgoals, the plan hinges on using rover `v12` as the image acquisition and communication hub. The relevant facts and actions regarding these rovers were carefully examined.
           
           To acquire and transmit images, the process begins with using a communication capable rover at the communication configuration. The communication configuration is `q5`. Each image transmission requires the appropriate configuration (via the `move` action) and a `send_image` action. The `send_image` function in turn requires a `haveimage` fact. The `haveimage` facts are achieved via `take_image` which requires image and sensor calibration.
           
           Thus, to meet the imaging criteria, I devised a plan involving rover `v12`:
           
           1.  **Move** `v12` to the camera config `#o3`.
           2.  **Calibrate** the camera and the sensors to take images for each object.
           3.  **Take images** of each of the four requested objects.
           4.  **Move** `v12` to the comms config `#q5`.
           5.  **Send** each of the four images.
           
           To fulfill the analytical requirements, I identified a stone and soil suitable for analysis (a stone of type `v2`, represented by object `v3`, and a soil of type `v6`, represented by object `v8`). The approach for obtaining and transmitting analysis involved rover `v12` sampling the two materials using the available store and free functions, with additional communication actions.
           
           Thus, for satisfying the `receivedanalysis` predicates:
           
           1.  **Move** `v12` to `q0` location of sample stone `v3`.
           2.  **Sample** the stone `v3`.
           3.  **Drop** the stone to free the store.
           4.  **Move** `v12` to `q1` location of sample soil `v8`.
           5.  **Sample** the soil `v8`.
           6.  **Move** `v12` to comms configuration `#q5`.
           7.  **Send** the analyses of `v3` and `v8`.
           
           Upon completing each of these steps, I can verify that each pre-condition has been satisfied.
           

