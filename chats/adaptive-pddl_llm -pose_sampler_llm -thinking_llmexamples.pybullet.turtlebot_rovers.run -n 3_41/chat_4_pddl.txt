User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v14)
           Atom type(v4, v2)
           Atom rock(v1)
           Atom objective(v17)
           Atom supports(v10, v11)
           Atom type(v7, v6)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom rock(v4)
           Atom rock(v3)
           Atom objective(v19)
           Atom mode(v11)
           Atom lander(v9)
           Atom rover(v14)
           Atom type(v8, v6)
           Atom free(v14, v16)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom rock(v7)
           Atom type(v1, v2)
           Atom onboard(v10, v12)
           Atom rock(v5)
           Atom camera(v10)
           Atom store(v16)
           Atom objective(v18)
           Atom atconf(v12, v13)
           Atom free(v12, v16)
           Atom rock(v8)
           Atom conf(v14, v15)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q7, v8)
           Atom conf(v14, #q7)
           Atom above(v14, #q8, v5)
           Atom conf(v14, #q8)
           Atom above(v14, #q9, v7)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #q2, #y2, v19)
           Atom imagerange(v14, #q2, v19)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom above(v14, #q12, v3)
           Atom conf(v14, #q12)
           Atom imagevisible(v14, #q5, #y4, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom above(v14, #q11, v4)
           Atom conf(v14, #q11)
           Atom above(v14, #q10, v1)
           Atom conf(v14, #q10)
           Atom imagevisible(v12, #q14, #y6, v19)
           Atom imagerange(v12, #q14, v19)
           Atom conf(v12, #q14)
           Atom ray(#y6)
           Atom imagevisible(v12, #q16, #y7, v17)
           Atom imagerange(v12, #q16, v17)
           Atom conf(v12, #q16)
           Atom ray(#y7)
           Atom comvisible(v12, #q3, #y3, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y3)
           Atom above(v12, #q15, v5)
           Atom conf(v12, #q15)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #q6, v7)
           Atom conf(v12, #q6)
           Atom above(v12, #q17, v3)
           Atom conf(v12, #q17)
           Atom imagevisible(v12, #q13, #y5, v18)
           Atom imagerange(v12, #q13, v18)
           Atom conf(v12, #q13)
           Atom ray(#y5)
           Atom above(v12, #q4, v4)
           Atom conf(v12, #q4)
           Atom above(v12, #o5, v1)
           Atom motion(v14, #q1, #t3, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q5, #t11, #q1)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q1, #t18, #q5)
           Atom motion(v14, v15, #t6, #q5)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t1, #q4)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, v15, #t16, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q2, #t10, #q1)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q1, #t17, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, v15, #t5, #q2)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, v13, #t24, #q13)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, v15, #t15, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q13)
           Atom motion(v12, #q17, #o2, #q4)
           Atom motion(v12, v13, #o2, #q17)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, #q4, #o2, #q17)
           Atom motion(v12, #q13, #o2, #q17)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q17, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q17)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q7, #t12, #q1)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, v15, #t14, #q7)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q17, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q17)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, #q17, #o2, #q3)
           Atom motion(v12, #q3, #t8, #q6)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #t0, v13)
           Atom motion(v12, #q15, #t20, #q3)
           Atom motion(v12, #q3, #t7, #q4)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q13, #t21, #q3)
           Atom motion(v12, #q3, #o2, #q17)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q4, #t2, #q3)
           Atom motion(v12, #q3, #t19, #q15)
           Atom motion(v14, #q0, #t9, #q1)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t4, #q0)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q1, #t13, #q0)
           Atom motion(v14, #q12, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v12, #q16, #o2, #q17)
           Atom motion(v12, #q3, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q13, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q4)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q16, #t23, #q3)
           Atom motion(v12, #q15, #o2, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q6, #o2, #q16)
           Atom motion(v12, #q17, #o2, #q16)
           Atom motion(v12, v13, #t26, #q16)
           Atom motion(v12, #q16, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v14, #q11, #o2, #q5)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v12, #q14, #t22, #q3)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, v13, #t25, #q14)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q17, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q17)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #o5, #o2, #q16)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #o5, #o2, #q17)
           Atom motion(v12, #q16, #o2, #o5)
           Atom motion(v12, #q17, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q15 v5 v16))
           ((sample_rock v12 #q17 v3 v16))
           ((sample_rock v12 #q4 v4 v16))
           ((sample_rock v12 #q6 v7 v16))
           ((sample_rock v14 #q10 v1 v16))
           ((sample_rock v14 #q11 v4 v16))
           ((sample_rock v14 #q12 v3 v16))
           ((sample_rock v14 #q7 v8 v16))
           ((sample_rock v14 #q8 v5 v16))
           ((sample_rock v14 #q9 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q16))
           ((move v12 #o5 #o2 #q17))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q16))
           ((move v12 #q13 #o2 #q17))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t21 #q3))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 #q17))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t22 #q3))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q16))
           ((move v12 #q15 #o2 #q17))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t20 #q3))
           ((move v12 #q16 #o2 #o5))
           ((move v12 #q16 #o2 #q13))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q17))
           ((move v12 #q16 #o2 #q4))
           ((move v12 #q16 #o2 #q6))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t23 #q3))
           ((move v12 #q17 #o2 #o5))
           ((move v12 #q17 #o2 #q13))
           ((move v12 #q17 #o2 #q14))
           ((move v12 #q17 #o2 #q15))
           ((move v12 #q17 #o2 #q16))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q3))
           ((move v12 #q17 #o2 #q4))
           ((move v12 #q17 #o2 #q6))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q16))
           ((move v12 #q3 #o2 #q17))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #t0 v13))
           ((move v12 #q3 #t19 #q15))
           ((move v12 #q3 #t7 #q4))
           ((move v12 #q3 #t8 #q6))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q16))
           ((move v12 #q4 #o2 #q17))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t2 #q3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q16))
           ((move v12 #q6 #o2 #q17))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q4))
           ((move v12 v13 #t24 #q13))
           ((move v12 v13 #t25 #q14))
           ((move v12 v13 #t26 #q16))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t9 #q1))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t13 #q0))
           ((move v14 #q1 #t17 #q2))
           ((move v14 #q1 #t18 #q5))
           ((move v14 #q1 #t3 v15))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q5))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t10 #q1))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t11 #q1))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t12 #q1))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q7))
           ((move v14 v15 #t15 #q8))
           ((move v14 v15 #t16 #q9))
           ((move v14 v15 #t4 #q0))
           ((move v14 v15 #t5 #q2))
           ((move v14 v15 #t6 #q5))
           ((calibrate v12 #q13 #y5 v18 v10))
           ((calibrate v12 #q14 #y6 v19 v10))
           ((calibrate v12 #q16 #y7 v17 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q2 #y2 v19 v10))
           ((calibrate v14 #q5 #y4 v17 v10))
           ((take_image v12 #q13 #y5 v18 v10 v11))
           ((take_image v12 #q14 #y6 v19 v10 v11))
           ((take_image v12 #q16 #y7 v17 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q2 #y2 v19 v10 v11))
           ((take_image v14 #q5 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y3 v9 v1))
           ((send_analysis v12 #q3 #y3 v9 v8))
           ((send_analysis v12 #q3 #y3 v9 v5))
           ((send_analysis v12 #q3 #y3 v9 v3))
           ((send_analysis v12 #q3 #y3 v9 v4))
           ((send_analysis v12 #q3 #y3 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_image v12 #q3 #y3 v9 v18 v11))
           ((send_image v12 #q3 #y3 v9 v19 v11))
           ((send_image v12 #q3 #y3 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, here's my plan to nail that `new-axiom@0()` goal, breaking down the problem and ensuring every requirement is met. First, I have to ensure those initial conditions are preserved while working on subgoals. The goal demands that specific configurations and store states remain valid *concurrently* with image and analysis delivery.
           
           Essentially, I need to execute the following subgoals: receive images for objectives `v17`, `v18`, and `v19`, get and send analysis for a rock of type `v2` and another of type `v6`.
           
           I've decided to leverage both rovers, `v12` and `v14`, for an efficient parallel execution, distributing the workload effectively.
           
           **Rover `v14` will:**
           
           1.  *Acquire and Send Image `v17`*:
               *   Move to appropriate location (`v15` to `#q5`).
               *   Calibrate the camera (`v10`) for the target.
               *   Capture image `v17`.
               *   Move to the communication config (`#q1`).
               *   Transmit the image.
           2.  *Acquire and Send Image `v18`*:
               *   Move to appropriate location (`#q1` to `#q0`).
               *   Calibrate the camera for the target.
               *   Capture image `v18`.
               *   Move to the communication config (`#q1`).
               *   Transmit the image.
           3.  *Obtain and Transmit Analysis of Soil (type `v6`)*:
               *   Move to rock `v8` (`#q1` to `#q7`).
               *   Sample rock `v8` and analyze it.
               *   Move to the communication config.
               *   Transmit the analysis.
               *   Drop the rock sample to free the storage, then move back to its original configuration (`v15`).
           
           **Rover `v12` will:**
           
           1.  *Acquire and Send Image `v19`*:
               *   Move to the image's location (`v13` to `#q14`).
               *   Calibrate the camera.
               *   Capture image `v19`.
               *   Move to communication config (`#q3`).
               *   Send the image.
           2.  *Obtain and Transmit Analysis of Stone (type `v2`)*:
               *   Move to rock `v1` (`#q3` to `#o5`).
               *   Sample the rock and analyze it.
               *   Move to the communication config.
               *   Send the analysis.
               *   Drop the sample to free the storage, then move back to its original configuration (`v13`).
           
           **Ensuring the Initial Conditions Persist**
           
           Crucially, I've incorporated the `drop_rock` action in both plans to ensure the `free` condition for storage `v16` is restored after analysis, which is essential to make the axiom valid at the end. I added extra move actions to ensure each rover returns to the start configuration (`v13` and `v15`) at the end. This is absolutely critical to guarantee all initial conditions are re-established at the *same* time the goal states have been achieved.
           
           I've made sure to respect the sequencing of each rover's internal actions for calibration and image taking. Both rovers' actions *may* be executed in parallel but must follow the specific internal order I've outlined for that rover to be valid.
           
           I am confident this plan fully satisfies the requirements of the `new-axiom@0()` goal. All preconditions will be met, and the key states will be re-established after the plan execution is complete.
           
)

Model:     **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, here's my plan to nail that `new-axiom@0()` goal, breaking down the problem and ensuring every requirement is met. First, I have to ensure those initial conditions are preserved while working on subgoals. The goal demands that specific configurations and store states remain valid *concurrently* with image and analysis delivery.
           
           Essentially, I need to execute the following subgoals: receive images for objectives `v17`, `v18`, and `v19`, get and send analysis for a rock of type `v2` and another of type `v6`.
           
           I've decided to leverage both rovers, `v12` and `v14`, for an efficient parallel execution, distributing the workload effectively.
           
           **Rover `v14` will:**
           
           1.  *Acquire and Send Image `v17`*:
               *   Move to appropriate location (`v15` to `#q5`).
               *   Calibrate the camera (`v10`) for the target.
               *   Capture image `v17`.
               *   Move to the communication config (`#q1`).
               *   Transmit the image.
           2.  *Acquire and Send Image `v18`*:
               *   Move to appropriate location (`#q1` to `#q0`).
               *   Calibrate the camera for the target.
               *   Capture image `v18`.
               *   Move to the communication config (`#q1`).
               *   Transmit the image.
           3.  *Obtain and Transmit Analysis of Soil (type `v6`)*:
               *   Move to rock `v8` (`#q1` to `#q7`).
               *   Sample rock `v8` and analyze it.
               *   Move to the communication config.
               *   Transmit the analysis.
               *   Drop the rock sample to free the storage, then move back to its original configuration (`v15`).
           
           **Rover `v12` will:**
           
           1.  *Acquire and Send Image `v19`*:
               *   Move to the image's location (`v13` to `#q14`).
               *   Calibrate the camera.
               *   Capture image `v19`.
               *   Move to communication config (`#q3`).
               *   Send the image.
           2.  *Obtain and Transmit Analysis of Stone (type `v2`)*:
               *   Move to rock `v1` (`#q3` to `#o5`).
               *   Sample the rock and analyze it.
               *   Move to the communication config.
               *   Send the analysis.
               *   Drop the sample to free the storage, then move back to its original configuration (`v13`).
           
           **Ensuring the Initial Conditions Persist**
           
           Crucially, I've incorporated the `drop_rock` action in both plans to ensure the `free` condition for storage `v16` is restored after analysis, which is essential to make the axiom valid at the end. I added extra move actions to ensure each rover returns to the start configuration (`v13` and `v15`) at the end. This is absolutely critical to guarantee all initial conditions are re-established at the *same* time the goal states have been achieved.
           
           I've made sure to respect the sequencing of each rover's internal actions for calibration and image taking. Both rovers' actions *may* be executed in parallel but must follow the specific internal order I've outlined for that rover to be valid.
           
           I am confident this plan fully satisfies the requirements of the `new-axiom@0()` goal. All preconditions will be met, and the key states will be re-established after the plan execution is complete.
           

