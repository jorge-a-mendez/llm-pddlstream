User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v7, v6)
           Atom type(v3, v2)
           Atom rock(v3)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom atconf(v14, v15)
           Atom rock(v8)
           Atom lander(v9)
           Atom type(v4, v2)
           Atom objective(v20)
           Atom rock(v7)
           Atom free(v14, v16)
           Atom store(v16)
           Atom rock(v5)
           Atom onboard(v10, v12)
           Atom free(v12, v16)
           Atom supports(v10, v11)
           Atom rover(v14)
           Atom objective(v17)
           Atom type(v5, v6)
           Atom camera(v10)
           Atom onboard(v10, v14)
           Atom rock(v1)
           Atom rover(v12)
           Atom objective(v19)
           Atom rock(v4)
           Atom mode(v11)
           Atom objective(v18)
           Atom conf(v12, v13)
           Atom conf(v14, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q7, #y5, v19)
           Atom imagerange(v12, #q7, v19)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v1)
           Atom above(v12, #q9, v7)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q5, #y4, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #q0, #y0, v17)
           Atom imagerange(v12, #q0, v17)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v14, #q2, v1)
           Atom conf(v14, #q2)
           Atom above(v14, #q11, v7)
           Atom conf(v14, #q11)
           Atom imagevisible(v14, #q14, #y8, v20)
           Atom imagerange(v14, #q14, v20)
           Atom conf(v14, #q14)
           Atom ray(#y8)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q12, #y6, v18)
           Atom imagerange(v14, #q12, v18)
           Atom conf(v14, #q12)
           Atom ray(#y6)
           Atom imagevisible(v14, #q13, #y7, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y7)
           Atom imagevisible(v14, #q15, #y9, v19)
           Atom imagerange(v14, #q15, v19)
           Atom conf(v14, #q15)
           Atom ray(#y9)
           Atom above(v14, #q10, v3)
           Atom conf(v14, #q10)
           Atom above(v12, #q8, v3)
           Atom conf(v12, #q8)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v5)
           Atom above(v14, #q6, v5)
           Atom conf(v14, #q6)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #t28, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t29, #q9)
           Atom motion(v12, #q1, #t2, v13)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, v15, #t36, #q6)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q7, #t16, #q1)
           Atom motion(v12, #q1, #t20, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, v15, #t31, #q13)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q1, #t23, #q4)
           Atom motion(v12, #q4, #t22, #q1)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, v15, #t30, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, v15, #t17, #q10)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q3, #t38, #q15)
           Atom motion(v14, #q3, #t3, v15)
           Atom motion(v14, #q3, #t9, #q6)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q6, #t24, #q3)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q12, #t32, #q3)
           Atom motion(v14, #q13, #t33, #q3)
           Atom motion(v14, #q15, #t35, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q10, #t19, #q3)
           Atom motion(v12, #q5, #t21, #q1)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #t15, #q7)
           Atom motion(v12, #q1, #t18, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q4, #t13, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, v13, #t7, #q5)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v14, #q3, #t39, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #t34, #q3)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q6)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q6, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q3, #t25, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q11, #t26, #q3)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, v15, #t1, #q2)
           Atom motion(v14, #q3, #t8, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q2, #t4, #q3)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q7, #t12, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q1, #t11, #q8)
           Atom motion(v12, v13, #t27, #q8)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q8, #t14, #q1)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q1, #t37, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #t10, #q4)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, v13, #t5, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q15, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q10 v3 v16))
           ((sample_rock v14 #q11 v7 v16))
           ((sample_rock v14 #q2 v1 v16))
           ((sample_rock v14 #q6 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t10 #q4))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #t11 #q8))
           ((move v12 #q1 #t18 #q5))
           ((move v12 #q1 #t2 v13))
           ((move v12 #q1 #t20 #q7))
           ((move v12 #q1 #t23 #q4))
           ((move v12 #q1 #t29 #q9))
           ((move v12 #q1 #t37 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t13 #q5))
           ((move v12 #q4 #t22 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t15 #q7))
           ((move v12 #q5 #t21 #q1))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t12 #q8))
           ((move v12 #q7 #t16 #q1))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t14 #q1))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t28 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t27 #q8))
           ((move v12 v13 #t5 #q0))
           ((move v12 v13 #t6 #q4))
           ((move v12 v13 #t7 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t19 #q3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t26 #q3))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t32 #q3))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t33 #q3))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q6))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t34 #q3))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q6))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t35 #q3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t4 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #t25 #q11))
           ((move v14 #q3 #t3 v15))
           ((move v14 #q3 #t38 #q15))
           ((move v14 #q3 #t39 #q14))
           ((move v14 #q3 #t8 #q2))
           ((move v14 #q3 #t9 #q6))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q14))
           ((move v14 #q6 #o2 #q15))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t24 #q3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q2))
           ((move v14 v15 #t17 #q10))
           ((move v14 v15 #t30 #q12))
           ((move v14 v15 #t31 #q13))
           ((move v14 v15 #t36 #q6))
           ((calibrate v12 #q0 #y0 v17 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v12 #q5 #y4 v20 v10))
           ((calibrate v12 #q7 #y5 v19 v10))
           ((calibrate v14 #q12 #y6 v18 v10))
           ((calibrate v14 #q13 #y7 v17 v10))
           ((calibrate v14 #q14 #y8 v20 v10))
           ((calibrate v14 #q15 #y9 v19 v10))
           ((take_image v12 #q0 #y0 v17 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v12 #q5 #y4 v20 v10 v11))
           ((take_image v12 #q7 #y5 v19 v10 v11))
           ((take_image v14 #q12 #y6 v18 v10 v11))
           ((take_image v14 #q13 #y7 v17 v10 v11))
           ((take_image v14 #q14 #y8 v20 v10 v11))
           ((take_image v14 #q15 #y9 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v20 v11))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v20 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers (v12 and v14), a lander (v9), a camera (v10), a mode (v11), and a store (v16). There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). The goal is to satisfy the `new-axiom@0()`. This axiom requires rover v12 and v14 to be at some configurations, their stores (v16) to be free, images for objectives v17, v18, v19, v20 to be received with mode v11, and rocks v2 (stone) and v6 (soil) to be analyzed.
           
           From the initial state, we know:
           - Rover v12 is at conf v13, and rover v14 is at conf v15.
           - Both rovers' stores (v16) are free.
           - The `type` predicates show `v2` is `stone` and `v6` is `soil`. Specifically, rocks v1, v3, v4 are of type v2 (stone), and rocks v5, v7, v8 are of type v6 (soil).
           - The goal implicitly requires the analysis of rocks of type `v2` and `v6`, which translates to analyzing at least one rock of type `v2` (e.g., v1, v3, or v4) and at least one rock of type `v6` (e.g., v5, v7, or v8).
           - The goal also requires all four objectives (v17, v18, v19, v20) to have their images received. This means we need to take images of these objectives and then send them to the lander.
           
           Therefore, a plan should involve:
           1. Analyzing at least one rock of type v2 (stone) and at least one rock of type v6 (soil). This involves:
               - Moving a rover to a configuration where it is above a target rock.
               - Sampling the rock.
               - Moving to a communication configuration.
               - Sending the analysis.
           2. Taking and sending images for all four objectives (v17, v18, v19, v20). This involves:
               - Moving a rover to an image visible configuration for an objective.
               - Calibrating the camera.
               - Taking the image.
               - Moving to a communication configuration.
               - Sending the image.
           
           Given that rover v12 has above predicates for v1, v3, v4, v5, v7, v8, and image/com visible predicates for all objectives and the lander, it's efficient to use v12 for both sampling and imaging tasks.
           
           Let's break it down for rover v12:
           - Sample a rock of type v2 (e.g., v3) and type v6 (e.g., v7).
           - Take images of v17, v18, v19, v20.
           - Send all analyses and images.
           
           We also need to consider the `full` and `free` store predicates. After sampling a rock, the store becomes full. To sample another rock, the store needs to be free again, which means dropping the rock. However, the goal only requires *receiving analysis*, not having all analyzed rocks kept in store, so we can sample, send analysis, then drop to free the store.
           
           For `receivedanalysis(?stone)` (type v2) and `receivedanalysis(?soil)` (type v6):
           - `sample_rock v12 #q8 v3 v16` (samples a type v2 rock, store becomes full)
           - Then we need to move to a comvisible location and send analysis for v3. `move v12 #q8 #t14 #q1` and then `send_analysis v12 #q1 #y1 v9 v3`.
           - After sending analysis, we can `drop_rock v12 v16` to free the store to sample another rock.
           - `sample_rock v12 #q9 v7 v16` (samples a type v6 rock, store becomes full)
           - Then we need to move to a comvisible location and send analysis for v7. `move v12 #q9 #t28 #q1` and then `send_analysis v12 #q1 #y1 v9 v7`.
           - After sending analysis, we can `drop_rock v12 v16` to free the store for later if needed (although not strictly necessary for this specific goal if all rocks are analyzed).
           
           For `receivedimage` for v17, v18, v19, v20:
           - Calibrate and take images for each objective, then move to a common communication configuration to send them.
           - `calibrate v12 #q0 #y0 v17 v10` (for v17)
           - `take_image v12 #q0 #y0 v17 v10 v11`
           - `calibrate v12 #q4 #y3 v18 v10` (for v18)
           - `take_image v12 #q4 #y3 v18 v10 v11`
           - `calibrate v12 #q7 #y5 v19 v10` (for v19)
           - `take_image v12 #q7 #y5 v19 v10 v11`
           - `calibrate v12 #q5 #y4 v20 v10` (for v20)
           - `take_image v12 #q5 #y4 v20 v10 v11`
           - Send images from a comvisible position:
               - `move v12 #q0 #t0 #q1` (assuming the rover is at #q0 after taking image of v17)
               - `send_image v12 #q1 #y1 v9 v17 v11`
               - To send other images, we need to ensure the rover is at #q1 or moves there. For efficiency, let's group imaging and then sending from one common communication configuration.
           
           Let's refine the plan to be efficient and ensure preconditions. We can take all images first, then move to a communication position to send them, and separately handle rock sampling and analysis.
           
           Rover v12 has a camera `v10` that supports mode `v11`. Rover v12 has `free(v12, v16)`.
           The goal requires `receivedimage` for v17, v18, v19, v20 and `receivedanalysis` for rocks of type v2 (stone) and v6 (soil).
           Let's choose v3 (type v2) and v7 (type v6) for analysis.
           
           Initial state: `atconf(v12, v13)`.
           
           Plan:
           1. Move to a position `above` rock `v3` to `sample_rock`.
           2. `sample_rock v12 #q8 v3 v16`
           3. Move to a communication position `#q1` to `send_analysis` for `v3`.
           4. `send_analysis v12 #q1 #y1 v9 v3`
           5. `drop_rock v12 v16` to free the store for the next sample.
           6. Move to a position `above` rock `v7` to `sample_rock`.
           7. `sample_rock v12 #q9 v7 v16`
           8. Move to a communication position `#q1` to `send_analysis` for `v7`.
           9. `send_analysis v12 #q1 #y1 v9 v7`
           10. `drop_rock v12 v16` to free the store. (Not strictly needed for the goal, but good practice).
           11. Now, handle images. Calibrate and take images for v17, v18, v19, v20, then send them. It's efficient to do all imaging first, then send.
           12. Move to `q0` for `v17`. `calibrate v12 #q0 #y0 v17 v10`, then `take_image v12 #q0 #y0 v17 v10 v11`. The camera becomes uncalibrated.
           13. Move to `q4` for `v18`. `calibrate v12 #q4 #y3 v18 v10`, then `take_image v12 #q4 #y3 v18 v10 v11`.
           14. Move to `q7` for `v19`. `calibrate v12 #q7 #y5 v19 v10`, then `take_image v12 #q7 #y5 v19 v10 v11`.
           15. Move to `q5` for `v20`. `calibrate v12 #q5 #y4 v20 v10`, then `take_image v12 #q5 #y4 v20 v10 v11`.
           16. Move to communication position `q1`.
           17. Send all four images from `q1`.
           
           Let's optimize the path for v12. Start from v13.
           
           --Plan--:
           (move v12 v13 #t27 #q8)
           (sample_rock v12 #q8 v3 v16)
           (move v12 #q8 #t14 #q1)
           (send_analysis v12 #q1 #y1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q1 #t29 #q9)
           (sample_rock v12 #q9 v7 v16)
           (move v12 #q9 #t28 #q1)
           (send_analysis v12 #q1 #y1 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q1 #t37 #q0)
           (calibrate v12 #q0 #y0 v17 v10)
           (take_image v12 #q0 #y0 v17 v10 v11)
           (move v12 #q0 #t10 #q4)
           (calibrate v12 #q4 #y3 v18 v10)
           (take_image v12 #q4 #y3 v18 v10 v11)
           (move v12 #q4 #t13 #q5)
           (calibrate v12 #q5 #y4 v20 v10)
           (take_image v12 #q5 #y4 v20 v10 v11)
           (move v12 #q5 #t15 #q7)
           (calibrate v12 #q7 #y5 v19 v10)
           (take_image v12 #q7 #y5 v19 v10 v11)
           (move v12 #q7 #t16 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (send_image v12 #q1 #y1 v9 v20 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. Let's re-evaluate the `new-axiom@0()` definition and the predicates required for it.
           
           The axiom `new-axiom@0()` is a large conjunction of many atoms. However, in PDDL, if an axiom is defined, then achieving the axiom means making the conjunction true. In this case, the `new-axiom@0()` is defined as:
           
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           Looking at the initial state:
           - `atconf(v12, v13)` is true.
           - `atconf(v14, v15)` is true.
           - `free(v12, v16)` is true.
           - `free(v14, v16)` is true.
           - `type(v3, v2)` and `type(v1, v2)` and `type(v4, v2)` mean that `?stone` can be `v1`, `v3`, or `v4`.
           - `type(v7, v6)` and `type(v8, v6)` and `type(v5, v6)` mean that `?soil` can be `v5`, `v7`, or `v8`.
           
           The parts of the goal that *need to be achieved* are:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `receivedanalysis(?stone)` (meaning `receivedanalysis(v1)` OR `receivedanalysis(v3)` OR `receivedanalysis(v4)`)
           - `receivedanalysis(?soil)` (meaning `receivedanalysis(v5)` OR `receivedanalysis(v7)` OR `receivedanalysis(v8)`)
           
           My previous plan did successfully include actions to achieve all these. The issue might be in the exact final state of `atconf` and `free` predicates. The `atconf` predicates for `v12` and `v14` in the axiom are `v13` and `v15` respectively. The `free` predicates for `v12, v16` and `v14, v16` are `free`.
           
           Let's ensure these `atconf` and `free` predicates are true at the end of the plan.
           
           If `v12` is used for all tasks, its final `atconf` will be `#q1` and its `free` status will be `free(v12, v16)`.
           The goal explicitly requires `atconf(v12, v13)` and `atconf(v14, v15)` and `free(v12, v16)` and `free(v14, v16)`.
           My plan left `v12` at `#q1` at the end and `v14` untouched at `v15`. `free(v12, v16)` would be true. `free(v14, v16)` would also be true.
           
           So, the only potential issue for `new-axiom@0()` itself in my previous plan is the final configuration of `v12`. It needs to be at `v13`.
           
           Let's modify the plan to move `v12` back to `v13` at the very end.
           
           --Plan--:
           (move v12 v13 #t27 #q8)
           (sample_rock v12 #q8 v3 v16)
           (move v12 #q8 #t14 #q1)
           (send_analysis v12 #q1 #y1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q1 #t29 #q9)
           (sample_rock v12 #q9 v7 v16)
           (move v12 #q9 #t28 #q1)
           (send_analysis v12 #q1 #y1 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q1 #t37 #q0)
           (calibrate v12 #q0 #y0 v17 v10)
           (take_image v12 #q0 #y0 v17 v10 v11)
           (move v12 #q0 #t10 #q4)
           (calibrate v12 #q4 #y3 v18 v10)
           (take_image v12 #q4 #y3 v18 v10 v11)
           (move v12 #q4 #t13 #q5)
           (calibrate v12 #q5 #y4 v20 v10)
           (take_image v12 #q5 #y4 v20 v10 v11)
           (move v12 #q5 #t15 #q7)
           (calibrate v12 #q7 #y5 v19 v10)
           (take_image v12 #q7 #y5 v19 v10 v11)
           (move v12 #q7 #t16 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (send_image v12 #q1 #y1 v9 v20 v11)
           (move v12 #q1 #t2 v13)

