User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v13 is a pose with position (-0.191, 0.402, 0.781) and quaternion (0.0, 0.0, -0.391, 0.92).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.062, 0.276), (0.033, 0.37)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.273, -0.317), (-0.185, -0.229)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.022, -0.468), (0.098, -0.392)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.007, -0.297), (0.105, -0.199)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.241, 0.353), (-0.142, 0.452)).
           Object v9 is a pose with position (-0.015, 0.323, 0.781) and quaternion (0.0, 0.0, 0.858, 0.513).
           Object v19 is a pose with position (-0.229, -0.273, 0.781) and quaternion (0.0, 0.0, -0.154, 0.988).
           Object v17 is a pose with position (0.06, -0.43, 0.781) and quaternion (0.0, 0.0, 0.999, -0.047).
           Object v15 is a pose with position (0.056, -0.248, 0.781) and quaternion (0.0, 0.0, 0.945, -0.328).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v18, v19, v11)
           Atom graspable(v12)
           Atom stackable(v12, v10)
           Atom bconf(v3)
           Atom ataconf(v4, v5)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom atpose(v14, v15)
           Atom stackable(v18, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v14, v10)
           Atom pose(v16, v17)
           Atom supported(v16, v17, v11)
           Atom supported(v12, v13, v11)
           Atom graspable(v16)
           Atom stackable(v12, v20)
           Atom stackable(v8, v20)
           Atom atpose(v12, v13)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom atpose(v18, v19)
           Atom atbconf(v3)
           Atom stackable(v18, v20)
           Atom atpose(v8, v9)
           Atom pose(v14, v15)
           Atom aconf(v4, v5)
           Atom arm(v4)
           Atom stackable(v8, v10)
           Atom atpose(v16, v17)
           Atom stackable(v14, v20)
           Atom canmove()
           Atom supported(v8, v9, v11)
           Atom graspable(v18)
           Atom graspable(v8)
           Atom pose(v12, v13)
           Atom pose(v18, v19)
           Atom graspable(v14)
           Atom controllable(v4)
           Atom pose(v8, v9)
           Atom stackable(v16, v20)
           Atom handempty(v4)
           Atom stackable(v16, v10)
           Atom grasp(v12, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom supported(v16, #o2, v20)
           Atom grasp(v14, #o1)
           Atom grasp(v8, #o1)
           Atom grasp(v18, #o1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v20)
           Atom supported(v14, #o2, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v18, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v8, #o2, v20)
           Atom supported(v12, #o2, v20)
           Atom grasp(v16, #o1)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (v8, v12, v14, v16, v18) initially supported on a surface (v11) at various poses. The goal is to move all these objects from surface v11 to surface v20. The robot has two arms (v4 and v6), both starting handempty. The only allowed continuous values are for #o2 (a pose) and #o1 (a grasp). The only available action instance is `(move_base v3 v3 #o0)`, which implies that the robot base cannot move from its initial position v3. This is a problem since the robot will be unable to reach many of the objects. Also, no pick or place actions are given, making it impossible to move any of the objects. Since no pick or place actions are provided in the available action instances, the robot cannot move any of the objects to surface v20. Therefore, the goal is unreachable.

