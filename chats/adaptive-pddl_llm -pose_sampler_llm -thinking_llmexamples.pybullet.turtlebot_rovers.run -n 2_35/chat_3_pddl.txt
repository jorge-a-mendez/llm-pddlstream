User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom onboard(v10, v14)
           Atom rock(v4)
           Atom type(v4, v2)
           Atom rover(v14)
           Atom rock(v3)
           Atom type(v5, v6)
           Atom type(v1, v2)
           Atom conf(v14, v15)
           Atom atconf(v12, v13)
           Atom atconf(v14, v15)
           Atom rock(v7)
           Atom rover(v12)
           Atom free(v14, v16)
           Atom camera(v10)
           Atom rock(v5)
           Atom store(v16)
           Atom onboard(v10, v12)
           Atom objective(v17)
           Atom lander(v9)
           Atom rock(v8)
           Atom free(v12, v16)
           Atom objective(v18)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom mode(v11)
           Atom type(v8, v6)
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom imagevisible(v12, #q4, #y2, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom imagevisible(v12, #q3, #y1, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom comvisible(v12, #q2, #y0, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y0)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v3)
           Atom above(v12, #q1, v5)
           Atom conf(v12, #q1)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, v13, #t8, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q2, #t2, v13)
           Atom motion(v12, #q0, #t0, #q2)
           Atom motion(v12, #q1, #t1, #q2)
           Atom motion(v12, #q2, #t9, #q4)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t4, #q1)
           Atom motion(v12, #q2, #t3, #q0)
           Atom motion(v12, #q4, #t6, #q2)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #t5, #q2)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #t7, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #o0)
           Atom motion(v14, v15, #o2, #o0)
           Atom motion(v14, #o0, #o2, v15)
           Atom motion(v14, #o0, #o2, #o5)
           Atom motion(v14, #o0, #o2, #o0)
           Atom motion(v14, #o3, #o2, #o0)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o0, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q1 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q2))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #t2 v13))
           ((move v12 #q2 #t3 #q0))
           ((move v12 #q2 #t4 #q1))
           ((move v12 #q2 #t9 #q4))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t5 #q2))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t6 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t7 #q3))
           ((move v12 v13 #t8 #q4))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #q3 #y1 v17 v10))
           ((calibrate v12 #q4 #y2 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((take_image v12 #q3 #y1 v17 v10 v11))
           ((take_image v12 #q4 #y2 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y0 v9 v3))
           ((send_analysis v12 #q2 #y0 v9 v4))
           ((send_analysis v12 #q2 #y0 v9 v7))
           ((send_analysis v12 #q2 #y0 v9 v8))
           ((send_analysis v12 #q2 #y0 v9 v1))
           ((send_analysis v12 #q2 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #q2 #y0 v9 v17 v11))
           ((send_image v12 #q2 #y0 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Path to `new-axiom@0()`: A Detailed Plan**
           
           Alright, let's break this down. My objective is to achieve `new-axiom@0()`, a conjunctive goal involving image acquisition, sample analysis, and staying put in certain configurations.
           
           Here's the situation: I've got a rover, `v12`, with a camera, `v10`, that can image in mode `v11`. I also have another rover, `v14`, that's currently stationary. My task is to satisfy a set of specific conditions: acquiring two images (`v17`, `v18`), analyzing two rock samples (one of type `v2` and one of type `v6`), and ensuring that rovers `v12` and `v14` are in particular initial configurations (`v13` and `v15` respectively) and that rovers `v12` and `v14`have a free sample area (`v16`).
           
           I know the initial configuration of `v12` and `v14`, which is `atconf(v12, v13)` and `atconf(v14, v15)`, as well as `free(v12, v16)` and `free(v14, v16)` are true. The images and analyses, however, are *not* currently satisfied.
           
           Here's the strategic approach:
           
           1.  **Image Acquisition:** I'll focus on `v12` to grab the images. To capture the images, I'll need to move `v12` to specific locations, `#q3` and `#q4`, where the objectives are visible.
               *   Move rover to position `#q3`, calibrate the camera, take image of `v17`.
               *   Move rover to position `#q4`, calibrate the camera, take image of `v18`.
               *   Move rover to position `#q2` for communication.
           
           2.  **Analysis and Data Submission:** Using `v12`, I'll sample and analyze two specific rock samples; a `v2` sample named `v1` and a `v6` sample named `v5`.
               *   Rover will move to `#q0` to sample rock `v1`. Then, the rock will be sent for analysis. Rover then moves to `#q2` for analysis to take place.
               *   `v12` will *drop* the existing sample rock, and move to `#q1`, and sample and send a sample rock `v5` (type v6) to be analyzed, again with the same sending action. Rover will move back to `#q2` for sending.
           
           3.  **Final Configurations:** After the images and analyses are successfully transmitted, `v12` should *move* to its starting position, `v13`.
           
           **Plan Breakdown:**
           
           The plan unfolds in a sequence of specific actions:
           
           1.  Move to `#q3`: `move v12 v13 #t7 #q3`
           2.  Calibrate Camera: `calibrate v12 #q3 #y1 v17 v10`
           3.  Take Image 1: `take_image v12 #q3 #y1 v17 v10 v11`
           4.  Move to `#q4`: `move v12 #q3 #o2 #q4`
           5.  Calibrate Camera: `calibrate v12 #q4 #y2 v18 v10`
           6.  Take Image 2: `take_image v12 #q4 #y2 v18 v10 v11`
           7.  Move to `#q2`: `move v12 #q4 #t6 #q2`
           8.  Send Image `v17`: `send_image v12 #q2 #y0 v9 v17 v11`
           9.  Send Image `v18`: `send_image v12 #q2 #y0 v9 v18 v11`
           10. Move to `#q0`: `move v12 #q2 #t3 #q0`
           11. Sample Rock `v1`: `sample_rock v12 #q0 v1 v16`
           12. Move to `#q2`: `move v12 #q0 #t0 #q2`
           13. Send Analysis `v1`: `send_analysis v12 #q2 #y0 v9 v1`
           14. Drop Rock: `drop_rock v12 v16`
           15.
)

Model:     **The Path to `new-axiom@0()`: A Detailed Plan**
           
           Alright, let's break this down. My objective is to achieve `new-axiom@0()`, a conjunctive goal involving image acquisition, sample analysis, and staying put in certain configurations.
           
           Here's the situation: I've got a rover, `v12`, with a camera, `v10`, that can image in mode `v11`. I also have another rover, `v14`, that's currently stationary. My task is to satisfy a set of specific conditions: acquiring two images (`v17`, `v18`), analyzing two rock samples (one of type `v2` and one of type `v6`), and ensuring that rovers `v12` and `v14` are in particular initial configurations (`v13` and `v15` respectively) and that rovers `v12` and `v14`have a free sample area (`v16`).
           
           I know the initial configuration of `v12` and `v14`, which is `atconf(v12, v13)` and `atconf(v14, v15)`, as well as `free(v12, v16)` and `free(v14, v16)` are true. The images and analyses, however, are *not* currently satisfied.
           
           Here's the strategic approach:
           
           1.  **Image Acquisition:** I'll focus on `v12` to grab the images. To capture the images, I'll need to move `v12` to specific locations, `#q3` and `#q4`, where the objectives are visible.
               *   Move rover to position `#q3`, calibrate the camera, take image of `v17`.
               *   Move rover to position `#q4`, calibrate the camera, take image of `v18`.
               *   Move rover to position `#q2` for communication.
           
           2.  **Analysis and Data Submission:** Using `v12`, I'll sample and analyze two specific rock samples; a `v2` sample named `v1` and a `v6` sample named `v5`.
               *   Rover will move to `#q0` to sample rock `v1`. Then, the rock will be sent for analysis. Rover then moves to `#q2` for analysis to take place.
               *   `v12` will *drop* the existing sample rock, and move to `#q1`, and sample and send a sample rock `v5` (type v6) to be analyzed, again with the same sending action. Rover will move back to `#q2` for sending.
           
           3.  **Final Configurations:** After the images and analyses are successfully transmitted, `v12` should *move* to its starting position, `v13`.
           
           **Plan Breakdown:**
           
           The plan unfolds in a sequence of specific actions:
           
           1.  Move to `#q3`: `move v12 v13 #t7 #q3`
           2.  Calibrate Camera: `calibrate v12 #q3 #y1 v17 v10`
           3.  Take Image 1: `take_image v12 #q3 #y1 v17 v10 v11`
           4.  Move to `#q4`: `move v12 #q3 #o2 #q4`
           5.  Calibrate Camera: `calibrate v12 #q4 #y2 v18 v10`
           6.  Take Image 2: `take_image v12 #q4 #y2 v18 v10 v11`
           7.  Move to `#q2`: `move v12 #q4 #t6 #q2`
           8.  Send Image `v17`: `send_image v12 #q2 #y0 v9 v17 v11`
           9.  Send Image `v18`: `send_image v12 #q2 #y0 v9 v18 v11`
           10. Move to `#q0`: `move v12 #q2 #t3 #q0`
           11. Sample Rock `v1`: `sample_rock v12 #q0 v1 v16`
           12. Move to `#q2`: `move v12 #q0 #t0 #q2`
           13. Send Analysis `v1`: `send_analysis v12 #q2 #y0 v9 v1`
           14. Drop Rock: `drop_rock v12 v16`
           15.

