User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v3, v2)
           Atom supports(v10, v11)
           Atom onboard(v10, v12)
           Atom rock(v3)
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom camera(v10)
           Atom type(v7, v6)
           Atom type(v1, v2)
           Atom mode(v11)
           Atom store(v16)
           Atom rock(v4)
           Atom rock(v5)
           Atom onboard(v10, v14)
           Atom atconf(v12, v13)
           Atom rover(v12)
           Atom type(v4, v2)
           Atom atconf(v14, v15)
           Atom lander(v9)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom rover(v14)
           Atom rock(v8)
           Atom type(v5, v6)
           Atom rock(v7)
           Atom objective(v17)
           Atom free(v12, v16)
           Atom above(v14, #q5, v7)
           Atom conf(v14, #q5)
           Atom above(v14, #q8, v8)
           Atom conf(v14, #q8)
           Atom imagevisible(v14, #q3, #y2, v17)
           Atom imagerange(v14, #q3, v17)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q4, v1)
           Atom conf(v14, #q4)
           Atom above(v14, #q2, v5)
           Atom conf(v14, #q2)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q7, v4)
           Atom conf(v14, #q7)
           Atom above(v14, #q6, v3)
           Atom conf(v14, #q6)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #o5, v3)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t3, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q1, #t0, v15)
           Atom motion(v14, #q1, #t9, #q5)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q1, #t11, #q4)
           Atom motion(v14, #q4, #t6, #q1)
           Atom motion(v14, #q1, #t7, #q3)
           Atom motion(v14, #q1, #t10, #q6)
           Atom motion(v14, #q5, #t8, #q1)
           Atom motion(v14, #q0, #t2, #q1)
           Atom motion(v14, #q3, #t5, #q1)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q2, #t1, #q1)
           Atom motion(v14, #q1, #t4, #q2)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o0)
           Atom motion(v12, #o0, #o2, #o5)
           Atom motion(v12, #o0, #o2, #o0)
           Atom motion(v12, #o0, #o2, v13)
           Atom motion(v12, v13, #o2, #o0)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o0, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o0)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #q2 v5 v16))
           ((sample_rock v14 #q4 v1 v16))
           ((sample_rock v14 #q5 v7 v16))
           ((sample_rock v14 #q6 v3 v16))
           ((sample_rock v14 #q7 v4 v16))
           ((sample_rock v14 #q8 v8 v16))
           ((move v12 #o0 #o2 #o0))
           ((move v12 #o0 #o2 #o3))
           ((move v12 #o0 #o2 #o5))
           ((move v12 #o0 #o2 v13))
           ((move v12 #o3 #o2 #o0))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o0))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 v13))
           ((move v12 v13 #o2 #o0))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 v13))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t2 #q1))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #t0 v15))
           ((move v14 #q1 #t10 #q6))
           ((move v14 #q1 #t11 #q4))
           ((move v14 #q1 #t4 #q2))
           ((move v14 #q1 #t7 #q3))
           ((move v14 #q1 #t9 #q5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t1 #q1))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t5 #q1))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t6 #q1))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t8 #q1))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t3 #q0))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q3 #y2 v17 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q3 #y2 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #o0 #o1 v9 v1))
           ((send_analysis v12 #o0 #o1 v9 v3))
           ((send_analysis v12 #o0 #o1 v9 v4))
           ((send_analysis v12 #o0 #o1 v9 v5))
           ((send_analysis v12 #o0 #o1 v9 v7))
           ((send_analysis v12 #o0 #o1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_image v12 #o0 #o1 v9 v17 v11))
           ((send_image v12 #o0 #o1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. Both rovers have access to a camera `v10` which supports the `v11` mode. There are several rocks: `v1`, `v3`, `v4`, `v5`, `v7`, and `v8`, and two objectives `v17` and `v18`. Rover `v12` is at configuration `v13` and rover `v14` is at `v15`. Both rovers have an empty store `v16`. The goal is `new-axiom@0()`, which means that two rovers have to be at some configuration, have free stores, two images have to be received, and two rocks of specific types must be analyzed and the analysis received.
           
           Specifically, the goal `new-axiom@0()` implies:
           1. `atconf(v12, v13)`: Rover `v12` is at configuration `v13`. This is already true.
           2. `atconf(v14, v15)`: Rover `v14` is at configuration `v15`. This is already true.
           3. `free(v12, v16)`: Rover `v12` has a free store `v16`. This is already true.
           4. `free(v14, v16)`: Rover `v14` has a free store `v16`. This is already true.
           5. `receivedimage(v17, v11)`: An image of objective `v17` in mode `v11` has been received.
           6. `receivedimage(v18, v11)`: An image of objective `v18` in mode `v11` has been received.
           7. `type(?stone, v2)`: There exists a rock of type `v2` that has been analyzed.
           8. `receivedanalysis(?stone)`: The analysis of the rock of type `v2` has been received.
           9. `type(?soil, v6)`: There exists a rock of type `v6` that has been analyzed.
           10. `receivedanalysis(?soil)`: The analysis of the rock of type `v6` has been received.
           
           To achieve goals 5 and 6, we need to:
           - Calibrate a camera.
           - Take images of `v17` and `v18`.
           - Send these images to the lander `v9`.
           
           To achieve goals 7, 8, 9, and 10, we need to:
           - Identify rocks of type `v2` (e.g., `v1`, `v3`, `v4`) and type `v6` (e.g., `v5`, `v7`, `v8`).
           - Sample one rock of type `v2` and one rock of type `v6`.
           - Send the analysis of these sampled rocks.
           
           Let's plan the actions:
           For `receivedimage(v17, v11)` and `receivedimage(v18, v11)`:
           Rover `v14` can image `v17` at `q3` and `v18` at `q0`. It also has `comvisible` at `q1`.
           1. Calibrate camera `v10` for `v17` using `v14` at `q3`.
           2. Take image of `v17` in mode `v11` using `v14` at `q3`.
           3. Move `v14` to `q1` to send image.
           4. Send image of `v17` in mode `v11` using `v14` at `q1`.
           5. Move `v14` to `q0` to image `v18`.
           6. Calibrate camera `v10` for `v18` using `v14` at `q0`.
           7. Take image of `v18` in mode `v11` using `v14` at `q0`.
           8. Move `v14` to `q1` to send image.
           9. Send image of `v18` in mode `v11` using `v14` at `q1`.
           
           For `receivedanalysis(?stone)` and `receivedanalysis(?soil)`:
           Let's choose rock `v1` (type `v2`) and rock `v5` (type `v6`).
           Rover `v14` is above `v1` at `q4` and above `v5` at `q2`.
           1. Move `v14` to `q4` to sample `v1`.
           2. Sample `v1` using `v14` at `q4`.
           3. Move `v14` to `q1` to send analysis.
           4. Send analysis of `v1` using `v14` at `q1`.
           5. Move `v14` to `q2` to sample `v5`.
           6. Sample `v5` using `v14` at `q2`.
           7. Move `v14` to `q1` to send analysis.
           8. Send analysis of `v5` using `v14` at `q1`.
           
           Let's combine and optimize the sequence for `v14`. We can perform all image-related tasks and then all sampling-related tasks, or interleave them. Interleaving might be better to reduce unnecessary movement if possible.
           Rover `v14` is initially at `v15`.
           
           --Plan--:
           (move v14 v15 #o2 #q3)
           (calibrate v14 #q3 #y2 v17 v10)
           (take_image v14 #q3 #y2 v17 v10 v11)
           (move v14 #q3 #o2 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t2 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (move v14 #q1 #t11 #q4)
           (sample_rock v14 #q4 v1 v16)
           (move v14 #q4 #t6 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (move v14 #q1 #t4 #q2)
           (sample_rock v14 #q2 v5 v16)
           (move v14 #q2 #t1 #q1)
           (send_analysis v14 #q1 #y1 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not explicitly checked for all its conjuncts. Let's re-evaluate the goal `new-axiom@0()` and ensure all conditions are met by the plan.
           
           The goal `new-axiom@0()` requires:
           1. `atconf(v12, v13)`: Rover `v12` is at `v13`. (Initial state)
           2. `atconf(v14, v15)`: Rover `v14` is at `v15`. This means `v14` must return to `v15` or not move from there if it isn't required to move. In the previous plan, `v14` was left at `q1`. We need to move it back to `v15`.
           3. `free(v12, v16)`: Rover `v12` has a free store `v16`. (Initial state, and we didn't use `v12`'s store).
           4. `free(v14, v16)`: Rover `v14` has a free store `v16`. In the previous plan, `v14` sampled two rocks, making its store `full`. It needs to drop the rocks to become `free` again.
           5. `receivedimage(v17, v11)`: Image of `v17` in mode `v11` received. (Achieved in previous plan).
           6. `receivedimage(v18, v11)`: Image of `v18` in mode `v11` received. (Achieved in previous plan).
           7. `type(?stone, v2)` and `receivedanalysis(?stone)`: Analysis of a rock of type `v2` received. We used `v1` (type `v2`). (Achieved in previous plan).
           8. `type(?soil, v6)` and `receivedanalysis(?soil)`: Analysis of a rock of type `v6` received. We used `v5` (type `v6`). (Achieved in previous plan).
           
           The missing parts from the previous plan are:
           - `v14` must return to `v15`.
           - `v14` must drop the sampled rocks to free its store `v16`.
           
           Let's adjust the plan by adding `drop_rock` actions and `move` actions to return `v14` to its initial configuration.
           
           --Plan--:
           (move v14 v15 #o2 #q3)
           (calibrate v14 #q3 #y2 v17 v10)
           (take_image v14 #q3 #y2 v17 v10 v11)
           (move v14 #q3 #o2 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t2 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (move v14 #q1 #t11 #q4)
           (sample_rock v14 #q4 v1 v16)
           (move v14 #q4 #t6 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (move v14 #q1 #t4 #q2)
           (sample_rock v14 #q2 v5 v16)
           (move v14 #q2 #t1 #q1)
           (send_analysis v14 #q1 #y1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q1 #t0 v15)

