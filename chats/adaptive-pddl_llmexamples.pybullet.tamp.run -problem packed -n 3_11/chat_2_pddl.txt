User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom ataconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom aconf(v6, v7)
           Atom pose(v8, v9)
           Atom aconf(v4, v5)
           Atom handempty(v6)
           Atom handempty(v4)
           Atom stackable(v12, v10)
           Atom stackable(v8, v10)
           Atom atpose(v8, v9)
           Atom supported(v14, v15, v11)
           Atom atbconf(v3)
           Atom stackable(v12, v16)
           Atom bconf(v3)
           Atom pose(v14, v15)
           Atom controllable(v4)
           Atom arm(v6)
           Atom stackable(v14, v10)
           Atom atpose(v14, v15)
           Atom atpose(v12, v13)
           Atom graspable(v8)
           Atom graspable(v12)
           Atom canmove()
           Atom graspable(v14)
           Atom ataconf(v6, v7)
           Atom stackable(v8, v16)
           Atom pose(v12, v13)
           Atom arm(v4)
           Atom supported(v12, v13, v11)
           Atom stackable(v14, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom grasp(v14, #o1)
           Atom grasp(v12, #o1)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #o1)
           Atom supported(v12, #o2, v10)
           Atom supported(v14, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The robot needs to place three objects (v8, v12, and v14) onto the surface v16. Currently, all three objects are on v11. The robot arm v4 is handempty and at aconf v5, and the base is at bconf v3.
           
           To achieve the goal, the robot will perform the following steps for each object:
           1. Pick up the object from its current pose on v11.
           2. Place the object onto the target surface v16 at a new pose.
           
           The available actions allow picking from the current poses (v9 for v8, v13 for v12, v15 for v14) and placing to a new pose (#o2) on v16 for all three objects. The `kin` relations indicate that the robot arm v4 can reach these pick and place poses with grasp #o1 and base configuration #o3, using trajectory #o4. Therefore, before picking or placing, the robot might need to move its base to #o3.
           
           Let's break down the plan:
           - Move base from v3 to #o3 (if not already there).
           - Pick v8 from v9.
           - Place v8 onto #o2 on v16.
           - Pick v12 from v13.
           - Place v12 onto #o2 on v16.
           - Pick v14 from v15.
           - Place v14 onto #o2 on v16.
           
           Note that `supported` and `pose` relations indicate that `v8`, `v12`, and `v14` are currently on `v11` at poses `v9`, `v13`, and `v15` respectively. The goal requires them to be `on(?, v16)`. The available `place` actions specify `pose(?o, #o2)` and `supported(?o, #o2, v16)`. Also, a `move_base` action from `v3` to `#o3` is available and required for pick/place actions with `bconf #o3`. Since the `kin` actions use `#o3` for the base configuration, the base must be moved to `#o3` first.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)

