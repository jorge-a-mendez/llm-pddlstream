User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v18)
           Atom onboard(v10, v12)
           Atom type(v1, v2)
           Atom rock(v7)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom camera(v10)
           Atom rock(v8)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom lander(v9)
           Atom rock(v4)
           Atom rock(v3)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom rock(v5)
           Atom rover(v12)
           Atom type(v4, v2)
           Atom objective(v17)
           Atom type(v3, v2)
           Atom type(v5, v6)
           Atom mode(v11)
           Atom free(v12, v16)
           Atom type(v7, v6)
           Atom atconf(v12, v13)
           Atom type(v8, v6)
           Atom conf(v12, v13)
           Atom free(v14, v16)
           Atom supports(v10, v11)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q4, v1)
           Atom conf(v14, #q4)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #o5, v1)
           Atom above(v12, #o5, v3)
           Atom comvisible(v14, #q1, #y0, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y0)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v7)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v5)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #t11, #q4)
           Atom motion(v14, #q1, #t2, v15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q4, #t9, #q1)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q1, #t3, #q0)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, v15, #t6, #q0)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #t10, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, v13, #t4, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t1, #q3)
           Atom motion(v12, #q3, #t5, v13)
           Atom motion(v12, #q5, #t7, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #t8, #q2)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((sample_rock v14 #q4 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t1 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #t5 v13))
           ((move v12 #q3 #t8 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t7 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q5))
           ((move v12 v13 #t4 #q2))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #t2 v15))
           ((move v14 #q1 #t3 #q0))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t9 #q1))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t11 #q4))
           ((move v14 v15 #t6 #q0))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y0 v9 v3))
           ((send_analysis v14 #q1 #y0 v9 v4))
           ((send_analysis v14 #q1 #y0 v9 v7))
           ((send_analysis v14 #q1 #y0 v9 v8))
           ((send_analysis v14 #q1 #y0 v9 v5))
           ((send_analysis v14 #q1 #y0 v9 v1))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q1 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Alright, let's break down this plan to achieve the goal `new-axiom@0()` in the `rovers` domain. It's a bit of a multi-part process, but I've got a handle on it.**
           
           Essentially, the goal requires us to get two images and two rock analyses to the lander. We've got two rovers, v12 and v14, and each has a specific role.
           
           **For Rover v14:**
           
           1.  First, we need to get to the right spot (`#o3`) to take an image of object `v17` in mode `v11`.  
           2.  Then, we calibrate the camera (`v10`) on v14 for image `v17`.
           3.  We *take* that picture.
           4.  Next, it's a move to the comms location `#q1` to send that image.
           5.  After that, Rover v14 will also need to grab a stone sample (rock `v1`).
           6.  Move to sample site `#q4` and analyze it.
           7.  Get the analysis *back* to the comms location (`#q1`).
           8.  Drop the rock so the storage is empty again.
           9.  Finally, return to our original location `v15`, to satisfy the goal.
           
           **For Rover v12:**
           
           1.  Similarly, v12 will go to `#q2` to take an image of `v18` in mode `v11`.
           2.  Calibrate and take that image.
           3.  Next move, to communication spot `#q3` to send it.
           4.  Then, to the soil rock sample, which will be rock `v7`.
           5.  Once the sample is analyzed, we need to return to comms location `#q3`.
           6.  Send the soil analysis.
           7.  Drop the rock from the store.
           8.  Return v12 back to location `v13`
           
           The important thing is we need to send the correct images and the rock analyses, and make sure those locations are visited. The goal state conditions are fully satisfied. The order of v12 and v14 operation doesn't matter much - we will simply list the actions of v14, then the actions of v12.
           
)

Model:     **Alright, let's break down this plan to achieve the goal `new-axiom@0()` in the `rovers` domain. It's a bit of a multi-part process, but I've got a handle on it.**
           
           Essentially, the goal requires us to get two images and two rock analyses to the lander. We've got two rovers, v12 and v14, and each has a specific role.
           
           **For Rover v14:**
           
           1.  First, we need to get to the right spot (`#o3`) to take an image of object `v17` in mode `v11`.  
           2.  Then, we calibrate the camera (`v10`) on v14 for image `v17`.
           3.  We *take* that picture.
           4.  Next, it's a move to the comms location `#q1` to send that image.
           5.  After that, Rover v14 will also need to grab a stone sample (rock `v1`).
           6.  Move to sample site `#q4` and analyze it.
           7.  Get the analysis *back* to the comms location (`#q1`).
           8.  Drop the rock so the storage is empty again.
           9.  Finally, return to our original location `v15`, to satisfy the goal.
           
           **For Rover v12:**
           
           1.  Similarly, v12 will go to `#q2` to take an image of `v18` in mode `v11`.
           2.  Calibrate and take that image.
           3.  Next move, to communication spot `#q3` to send it.
           4.  Then, to the soil rock sample, which will be rock `v7`.
           5.  Once the sample is analyzed, we need to return to comms location `#q3`.
           6.  Send the soil analysis.
           7.  Drop the rock from the store.
           8.  Return v12 back to location `v13`
           
           The important thing is we need to send the correct images and the rock analyses, and make sure those locations are visited. The goal state conditions are fully satisfied. The order of v12 and v14 operation doesn't matter much - we will simply list the actions of v14, then the actions of v12.
           

