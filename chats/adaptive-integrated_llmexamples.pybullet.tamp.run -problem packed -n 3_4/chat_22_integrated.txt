User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q19: object
           #q2: object
           #q20: object
           #q21: object
           #q22: object
           #q23: object
           #q24: object
           #q25: object
           #q26: object
           #q27: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t100: object
           #t101: object
           #t102: object
           #t103: object
           #t104: object
           #t105: object
           #t106: object
           #t107: object
           #t108: object
           #t109: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t5: object
           #t50: object
           #t51: object
           #t52: object
           #t53: object
           #t54: object
           #t55: object
           #t56: object
           #t57: object
           #t58: object
           #t59: object
           #t6: object
           #t60: object
           #t61: object
           #t62: object
           #t63: object
           #t64: object
           #t65: object
           #t66: object
           #t67: object
           #t68: object
           #t69: object
           #t7: object
           #t70: object
           #t71: object
           #t72: object
           #t73: object
           #t74: object
           #t75: object
           #t76: object
           #t77: object
           #t78: object
           #t79: object
           #t8: object
           #t80: object
           #t81: object
           #t82: object
           #t83: object
           #t84: object
           #t85: object
           #t86: object
           #t87: object
           #t88: object
           #t89: object
           #t9: object
           #t90: object
           #t91: object
           #t92: object
           #t93: object
           #t94: object
           #t95: object
           #t96: object
           #t97: object
           #t98: object
           #t99: object
           p10: object
           p11: object
           p15: object
           p16: object
           p17: object
           p18: object
           p19: object
           p20: object
           p21: object
           p22: object
           p23: object
           p24: object
           p25: object
           p26: object
           p27: object
           p28: object
           p29: object
           p3: object
           p30: object
           p31: object
           p32: object
           p33: object
           p34: object
           p38: object
           p39: object
           p4: object
           p40: object
           p41: object
           p42: object
           p43: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v43: object
           v44: object
           v45: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p7 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p30 is a pose with position (-0.08, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p17 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p15 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p34 is a pose with position (0.08, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.085), (0.035, -0.015)).
           Object v13 is a pose with position (0.23, 0.223, 0.781) and quaternion (0.0, 0.0, 0.869, 0.494).
           Object p41 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p26 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p42 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p43 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p27 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p28 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object p18 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p22 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v15 is a pose with position (0.1, 0.386, 0.781) and quaternion (0.0, 0.0, -0.791, 0.612).
           Object p19 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p20 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p16 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p23 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p24 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p38 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p21 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p3 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p25 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p29 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p40 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p32 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p39 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p31 is a pose with position (0.08, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p33 is a pose with position (-0.08, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (-0.13, 0.431, 0.781) and quaternion (0.0, 0.0, 0.583, 0.812).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom kin(v27, v33, p11, v45, v30, v31)
           Atom supported(v8, p17, v16)
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom supported(v12, p25, v16)
           Atom supported(v12, p30, v16)
           Atom pose(v12, p4)
           Atom kin(v27, v28, p3, v29, v30, v31)
           Atom kin(v27, v28, p21, v44, v30, v31)
           Atom kin(v27, v33, p29, v45, v30, v31)
           Atom pose(v8, p17)
           Atom kin(v27, v28, p26, v44, v30, v31)
           Atom pose(v14, v15)
           Atom graspable(v8)
           Atom handempty(v4)
           Atom kin(v27, v28, p16, v44, v30, v31)
           Atom kin(v27, v28, p34, v44, v30, v31)
           Atom kin(v27, v32, p15, v43, v30, v31)
           Atom supported(v8, p11, v16)
           Atom pose(v14, p6)
           Atom supported(v8, p24, v16)
           Atom ~test-cfree-pose-pose-negative(v14, p3, v8, p8)
           Atom supported(v12, p28, v16)
           Atom kin(v27, v32, p9, v43, v30, v31)
           Atom kin(v27, v33, p17, v45, v30, v31)
           Atom pose(v14, p26)
           Atom supported(v8, p38, v16)
           Atom pose(v14, p40)
           Atom atpose(v14, v15)
           Atom supported(v12, p18, v16)
           Atom pose(v14, p3)
           Atom atpose(v8, v9)
           Atom pose(v14, p19)
           Atom pose(v8, p20)
           Atom pose(v14, p23)
           Atom supported(v8, p22, v16)
           Atom pose(v12, p30)
           Atom pose(v8, p24)
           Atom atbconf(v3)
           Atom ataconf(v4, v5)
           Atom kin(v27, v33, p5, v29, v30, v31)
           Atom supported(v8, p29, v16)
           Atom atpose(v12, v13)
           Atom pose(v14, p16)
           Atom pose(v12, p42)
           Atom graspable(v14)
           Atom aconf(v6, v7)
           Atom kin(v27, v32, p28, v43, v30, v31)
           Atom supported(v14, p6, v16)
           Atom supported(v12, p7, v16)
           Atom arm(v6)
           Atom pose(v12, p25)
           Atom pose(v8, p8)
           Atom pose(v8, p5)
           Atom kin(v27, v32, p33, v43, v30, v31)
           Atom kin(v27, v32, p4, v29, v30, v31)
           Atom supported(v8, p5, v16)
           Atom aconf(v4, v5)
           Atom stackable(v8, v16)
           Atom kin(v27, v32, p18, v43, v30, v31)
           Atom pose(v14, p34)
           Atom supported(v8, v9, v11)
           Atom kin(v27, v28, p40, v44, v30, v31)
           Atom supported(v12, p42, v16)
           Atom controllable(v4)
           Atom supported(v8, p32, v16)
           Atom bconf(v3)
           Atom kin(v27, v33, p41, v45, v30, v31)
           Atom supported(v8, p27, v16)
           Atom supported(v14, v15, v11)
           Atom supported(v14, p31, v16)
           Atom ~test-cfree-pose-pose-negative(v14, p10, v12, p7)
           Atom pose(v14, p31)
           Atom pose(v8, p27)
           Atom stackable(v14, v10)
           Atom supported(v8, p20, v16)
           Atom supported(v14, p3, v16)
           Atom supported(v14, p26, v16)
           Atom stackable(v14, v16)
           Atom kin(v27, v33, p20, v45, v30, v31)
           Atom kin(v27, v28, p19, v44, v30, v31)
           Atom kin(v27, v32, p25, v43, v30, v31)
           Atom pose(v8, p41)
           Atom kin(v27, v33, p27, v45, v30, v31)
           Atom supported(v14, p21, v16)
           Atom handempty(v6)
           Atom stackable(v12, v16)
           Atom pose(v8, p32)
           Atom pose(v12, p28)
           Atom canmove()
           Atom supported(v12, v13, v11)
           Atom pose(v14, p21)
           Atom pose(v12, v13)
           Atom supported(v14, p34, v16)
           Atom ataconf(v6, v7)
           Atom arm(v4)
           Atom kin(v27, v28, p10, v44, v30, v31)
           Atom kin(v27, v32, p30, v43, v30, v31)
           Atom supported(v12, p33, v16)
           Atom supported(v12, p15, v16)
           Atom pose(v12, p39)
           Atom supported(v14, p43, v16)
           Atom pose(v12, p18)
           Atom graspable(v12)
           Atom kin(v27, v33, p24, v45, v30, v31)
           Atom stackable(v12, v10)
           Atom kin(v27, v33, p22, v45, v30, v31)
           Atom supported(v14, p16, v16)
           Atom pose(v14, p43)
           Atom pose(v8, p22)
           Atom pose(v12, p9)
           Atom pose(v8, p29)
           Atom supported(v8, p8, v16)
           Atom ~test-cfree-pose-pose-negative(v14, p34, v8, p17)
           Atom kin(v27, v32, p42, v43, v30, v31)
           Atom pose(v12, p33)
           Atom ~test-cfree-pose-pose-negative(v14, p6, v8, p8)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom pose(v8, p38)
           Atom kin(v27, v28, p23, v44, v30, v31)
           Atom kin(v27, v33, p32, v45, v30, v31)
           Atom supported(v14, p10, v16)
           Atom kin(v27, v32, p39, v43, v30, v31)
           Atom kin(v27, v28, p31, v44, v30, v31)
           Atom kin(v27, v28, p43, v44, v30, v31)
           Atom pose(v14, p10)
           Atom supported(v8, p41, v16)
           Atom stackable(v8, v10)
           Atom supported(v14, p40, v16)
           Atom pose(v8, p11)
           Atom supported(v14, p19, v16)
           Atom pose(v12, p15)
           Atom pose(v8, v9)
           Atom supported(v14, p23, v16)
           Atom pose(v12, p7)
           Atom supported(v12, p39, v16)
           Atom supported(v12, p9, v16)
           Atom kin(v27, v33, p38, v45, v30, v31)
           Atom supported(v12, p4, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g1)
           Atom supported(v12, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom supported(v14, #o2, v10)
           Atom grasp(v8, #g0)
           Atom supported(v8, #o2, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v14, #g2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, p4, #g1, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, p7, #g1, #q2, #t2)
           Atom bconf(#q15)
           Atom atraj(#t52)
           Atom kin(v4, v12, p15, #g1, #q15, #t52)
           Atom bconf(#q26)
           Atom atraj(#t98)
           Atom kin(v4, v12, p42, #g1, #q26, #t98)
           Atom kin(v4, v12, p30, #g1, #o3, #o4)
           Atom bconf(#q6)
           Atom atraj(#t10)
           Atom kin(v4, v12, p9, #g1, #q6, #t10)
           Atom bconf(#q10)
           Atom atraj(#t28)
           Atom kin(v4, v12, p18, #g1, #q10, #t28)
           Atom bconf(#q21)
           Atom atraj(#t79)
           Atom kin(v4, v12, p25, #g1, #q21, #t79)
           Atom bconf(#q23)
           Atom atraj(#t85)
           Atom kin(v4, v12, p33, #g1, #q23, #t85)
           Atom kin(v4, v12, p39, #g1, #o3, #o4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g1, #q1, #t1)
           Atom bconf(#q19)
           Atom atraj(#t63)
           Atom kin(v4, v12, p28, #g1, #q19, #t63)
           Atom bconf(#q27)
           Atom atraj(#t109)
           Atom kin(v4, v8, p41, #g0, #q27, #t109)
           Atom kin(v4, v8, p24, #g0, #o3, #o4)
           Atom bconf(#q12)
           Atom atraj(#t42)
           Atom kin(v4, v8, p5, #g0, #q12, #t42)
           Atom kin(v4, v8, p29, #g0, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v8, p8, #g0, #q3, #t3)
           Atom bconf(#q14)
           Atom atraj(#t49)
           Atom kin(v4, v8, p22, #g0, #q14, #t49)
           Atom kin(v4, v8, p38, #g0, #o3, #o4)
           Atom bconf(#q16)
           Atom atraj(#t58)
           Atom kin(v4, v8, p17, #g0, #q16, #t58)
           Atom bconf(#q7)
           Atom atraj(#t12)
           Atom kin(v4, v8, p11, #g0, #q7, #t12)
           Atom bconf(#q20)
           Atom atraj(#t67)
           Atom kin(v4, v8, p27, #g0, #q20, #t67)
           Atom bconf(#q11)
           Atom atraj(#t35)
           Atom kin(v4, v8, p20, #g0, #q11, #t35)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q24)
           Atom atraj(#t96)
           Atom kin(v4, v8, p32, #g0, #q24, #t96)
           Atom bconf(#q17)
           Atom atraj(#t59)
           Atom kin(v4, v14, p3, #g2, #q17, #t59)
           Atom kin(v4, v14, p31, #g2, #o3, #o4)
           Atom bconf(#q8)
           Atom atraj(#t21)
           Atom kin(v4, v14, p10, #g2, #q8, #t21)
           Atom bconf(#q13)
           Atom atraj(#t46)
           Atom kin(v4, v14, p21, #g2, #q13, #t46)
           Atom kin(v4, v14, p40, #g2, #o3, #o4)
           Atom kin(v4, v14, p23, #g2, #o3, #o4)
           Atom bconf(#q9)
           Atom atraj(#t27)
           Atom kin(v4, v14, p19, #g2, #q9, #t27)
           Atom kin(v4, v14, p16, #g2, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t9)
           Atom kin(v4, v14, v15, #g2, #q5, #t9)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v14, p6, #g2, #q4, #t8)
           Atom bconf(#q25)
           Atom atraj(#t97)
           Atom kin(v4, v14, p43, #g2, #q25, #t97)
           Atom bconf(#q22)
           Atom atraj(#t84)
           Atom kin(v4, v14, p34, #g2, #q22, #t84)
           Atom bconf(#q18)
           Atom atraj(#t61)
           Atom kin(v4, v14, p26, #g2, #q18, #t61)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(v3, #o0, #q10)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q10)
           Atom basemotion(#q10, #o0, #q7)
           Atom basemotion(#q16, #o0, #q7)
           Atom basemotion(#q10, #o0, #q16)
           Atom basemotion(#q16, #o0, #q10)
           Atom basemotion(#q7, #o0, #q16)
           Atom basemotion(v3, #o0, #q16)
           Atom basemotion(#q16, #o0, #q16)
           Atom basemotion(#q16, #o0, v3)
           Atom basemotion(v3, #o0, #q14)
           Atom basemotion(#q14, #o0, #q7)
           Atom basemotion(#q16, #o0, #q14)
           Atom basemotion(#q14, #o0, #q10)
           Atom basemotion(#q14, #o0, v3)
           Atom basemotion(#q7, #o0, #q14)
           Atom basemotion(#q10, #o0, #q14)
           Atom basemotion(#q14, #o0, #q16)
           Atom basemotion(#q14, #o0, #q14)
           Atom basemotion(#q6, #o0, #q10)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q6, #o0, #q14)
           Atom basemotion(#q14, #o0, #q6)
           Atom basemotion(#q10, #o0, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q16, #o0, #q6)
           Atom basemotion(#q6, #o0, #q16)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q3)
           Atom basemotion(#q3, #o0, #q10)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q14)
           Atom basemotion(#q14, #o0, #q3)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q3, #o0, #q16)
           Atom basemotion(#q16, #o0, #q3)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q10, #o0, #q3)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q18, #o0, #q16)
           Atom basemotion(#q18, #o0, #q14)
           Atom basemotion(#q18, #o0, v3)
           Atom basemotion(#q18, #o0, #q6)
           Atom basemotion(#q18, #o0, #q3)
           Atom basemotion(#q18, #o0, #q7)
           Atom basemotion(#q18, #o0, #q10)
           Atom basemotion(#q16, #o0, #q18)
           Atom basemotion(#q14, #o0, #q18)
           Atom basemotion(#q18, #o0, #q18)
           Atom basemotion(#q6, #o0, #q18)
           Atom basemotion(v3, #o0, #q18)
           Atom basemotion(#q3, #o0, #q18)
           Atom basemotion(#q7, #o0, #q18)
           Atom basemotion(#q10, #o0, #q18)
           Atom basemotion(#q18, #o0, #q22)
           Atom basemotion(#q22, #o0, #q16)
           Atom basemotion(#q22, #o0, #q18)
           Atom basemotion(#q22, #o0, #q22)
           Atom basemotion(#q22, #o0, #q7)
           Atom basemotion(#q10, #o0, #q22)
           Atom basemotion(#q22, #o0, v3)
           Atom basemotion(#q3, #o0, #q22)
           Atom basemotion(#q7, #o0, #q22)
           Atom basemotion(#q22, #o0, #q6)
           Atom basemotion(#q22, #o0, #q3)
           Atom basemotion(#q22, #o0, #q10)
           Atom basemotion(v3, #o0, #q22)
           Atom basemotion(#q6, #o0, #q22)
           Atom basemotion(#q14, #o0, #q22)
           Atom basemotion(#q16, #o0, #q22)
           Atom basemotion(#q22, #o0, #q14)
           Atom basemotion(#q18, #o0, #q12)
           Atom basemotion(#q12, #o0, #q18)
           Atom basemotion(#q12, #o0, v3)
           Atom basemotion(#q12, #o0, #q14)
           Atom basemotion(#q12, #o0, #q7)
           Atom basemotion(#q14, #o0, #q12)
           Atom basemotion(#q12, #o0, #q16)
           Atom basemotion(#q7, #o0, #q12)
           Atom basemotion(#q12, #o0, #q10)
           Atom basemotion(#q6, #o0, #q12)
           Atom basemotion(#q10, #o0, #q12)
           Atom basemotion(#q12, #o0, #q12)
           Atom basemotion(#q22, #o0, #q12)
           Atom basemotion(#q12, #o0, #q6)
           Atom basemotion(#q12, #o0, #q22)
           Atom basemotion(v3, #o0, #q12)
           Atom basemotion(#q3, #o0, #q12)
           Atom basemotion(#q16, #o0, #q12)
           Atom basemotion(#q12, #o0, #q3)
           Atom basemotion(#q25, #o0, #q18)
           Atom basemotion(#q18, #o0, #q25)
           Atom basemotion(#q22, #o0, #q25)
           Atom basemotion(#q25, #o0, #q25)
           Atom basemotion(#q25, #o0, #q16)
           Atom basemotion(#q25, #o0, #q12)
           Atom basemotion(#q25, #o0, #q14)
           Atom basemotion(#q25, #o0, #q6)
           Atom basemotion(#q25, #o0, #q3)
           Atom basemotion(#q25, #o0, v3)
           Atom basemotion(#q25, #o0, #q7)
           Atom basemotion(#q25, #o0, #q10)
           Atom basemotion(#q14, #o0, #q25)
           Atom basemotion(#q16, #o0, #q25)
           Atom basemotion(#q6, #o0, #q25)
           Atom basemotion(v3, #o0, #q25)
           Atom basemotion(#q12, #o0, #q25)
           Atom basemotion(#q3, #o0, #q25)
           Atom basemotion(#q7, #o0, #q25)
           Atom basemotion(#q10, #o0, #q25)
           Atom basemotion(#q25, #o0, #q22)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q18, #o0, #q4)
           Atom basemotion(#q4, #o0, #q22)
           Atom basemotion(#q4, #o0, #q12)
           Atom basemotion(#q4, #o0, #q14)
           Atom basemotion(#q4, #o0, #q25)
           Atom basemotion(#q22, #o0, #q4)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q4, #o0, #q16)
           Atom basemotion(#q4, #o0, #q18)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q14, #o0, #q4)
           Atom basemotion(#q16, #o0, #q4)
           Atom basemotion(#q4, #o0, #q10)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q10, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q12, #o0, #q4)
           Atom basemotion(#q25, #o0, #q4)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q18, #o0, #q2)
           Atom basemotion(#q2, #o0, #q18)
           Atom basemotion(#q25, #o0, #q2)
           Atom basemotion(#q2, #o0, #q25)
           Atom basemotion(#q10, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, #q22)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q22, #o0, #q2)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q10)
           Atom basemotion(#q16, #o0, #q2)
           Atom basemotion(#q14, #o0, #q2)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q2, #o0, #q12)
           Atom basemotion(#q2, #o0, #q14)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q12, #o0, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q16)
           Atom basemotion(#q18, #o0, #q15)
           Atom basemotion(#q15, #o0, #q18)
           Atom basemotion(#q16, #o0, #q15)
           Atom basemotion(#q14, #o0, #q15)
           Atom basemotion(#q15, #o0, #q14)
           Atom basemotion(#q12, #o0, #q15)
           Atom basemotion(#q15, #o0, #q15)
           Atom basemotion(#q6, #o0, #q15)
           Atom basemotion(#q15, #o0, #q10)
           Atom basemotion(#q25, #o0, #q15)
           Atom basemotion(#q15, #o0, #q25)
           Atom basemotion(#q3, #o0, #q15)
           Atom basemotion(#q15, #o0, #q16)
           Atom basemotion(#q7, #o0, #q15)
           Atom basemotion(#q10, #o0, #q15)
           Atom basemotion(v3, #o0, #q15)
           Atom basemotion(#q15, #o0, #q2)
           Atom basemotion(#q15, #o0, #q12)
           Atom basemotion(#q15, #o0, #q3)
           Atom basemotion(#q15, #o0, #q7)
           Atom basemotion(#q15, #o0, v3)
           Atom basemotion(#q22, #o0, #q15)
           Atom basemotion(#q2, #o0, #q15)
           Atom basemotion(#q15, #o0, #q6)
           Atom basemotion(#q15, #o0, #q22)
           Atom basemotion(#q4, #o0, #q15)
           Atom basemotion(#q15, #o0, #q4)
           Atom basemotion(#q18, #o0, #q26)
           Atom basemotion(#q26, #o0, #q18)
           Atom basemotion(#q25, #o0, #q26)
           Atom basemotion(#q26, #o0, #q25)
           Atom basemotion(#q26, #o0, #q2)
           Atom basemotion(#q26, #o0, #q16)
           Atom basemotion(v3, #o0, #q26)
           Atom basemotion(#q26, #o0, #q10)
           Atom basemotion(#q15, #o0, #q26)
           Atom basemotion(#q10, #o0, #q26)
           Atom basemotion(#q26, #o0, #q22)
           Atom basemotion(#q14, #o0, #q26)
           Atom basemotion(#q26, #o0, #q3)
           Atom basemotion(#q26, #o0, #q15)
           Atom basemotion(#q22, #o0, #q26)
           Atom basemotion(#q26, #o0, v3)
           Atom basemotion(#q26, #o0, #q26)
           Atom basemotion(#q26, #o0, #q7)
           Atom basemotion(#q2, #o0, #q26)
           Atom basemotion(#q26, #o0, #q4)
           Atom basemotion(#q6, #o0, #q26)
           Atom basemotion(#q3, #o0, #q26)
           Atom basemotion(#q26, #o0, #q12)
           Atom basemotion(#q16, #o0, #q26)
           Atom basemotion(#q26, #o0, #q14)
           Atom basemotion(#q4, #o0, #q26)
           Atom basemotion(#q26, #o0, #q6)
           Atom basemotion(#q12, #o0, #q26)
           Atom basemotion(#q7, #o0, #q26)
           Atom basemotion(#q12, #o0, #q5)
           Atom btraj(#t15)
           Atom basemotion(#q5, #t15, #q6)
           Atom btraj(#t102)
           Atom basemotion(#q26, #t102, #q5)
           Atom basemotion(#q5, #o0, #q2)
           Atom btraj(#t55)
           Atom basemotion(#q5, #t55, #q15)
           Atom btraj(#t64)
           Atom basemotion(v3, #t64, #q5)
           Atom btraj(#t14)
           Atom basemotion(#q7, #t14, #q5)
           Atom basemotion(#q5, #o0, #q3)
           Atom btraj(#t54)
           Atom basemotion(#q15, #t54, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom btraj(#t32)
           Atom basemotion(#q10, #t32, #q5)
           Atom btraj(#t16)
           Atom basemotion(#q5, #t16, #q7)
           Atom basemotion(#q14, #o0, #q5)
           Atom btraj(#t34)
           Atom basemotion(#q5, #t34, #q10)
           Atom btraj(#t13)
           Atom basemotion(#q6, #t13, #q5)
           Atom basemotion(#q5, #o0, #q12)
           Atom btraj(#t100)
           Atom basemotion(#q5, #t100, #q26)
           Atom basemotion(#q16, #o0, #q5)
           Atom basemotion(#q18, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom btraj(#t22)
           Atom basemotion(#q2, #t22, #q5)
           Atom btraj(#t62)
           Atom basemotion(#q5, #t62, #q18)
           Atom basemotion(#q5, #o0, #q16)
           Atom basemotion(#q5, #o0, #q14)
           Atom btraj(#t99)
           Atom basemotion(#q5, #t99, #q25)
           Atom btraj(#t101)
           Atom basemotion(#q25, #t101, #q5)
           Atom btraj(#t86)
           Atom basemotion(#q5, #t86, #q22)
           Atom btraj(#t90)
           Atom basemotion(#q22, #t90, #q5)
           Atom btraj(#t43)
           Atom basemotion(#q5, #t43, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, #q27)
           Atom basemotion(#q18, #o0, #q27)
           Atom basemotion(#q27, #o0, #q5)
           Atom basemotion(#q27, #o0, #q15)
           Atom basemotion(#q27, #o0, #q14)
           Atom basemotion(#q27, #o0, #q18)
           Atom basemotion(#q27, #o0, v3)
           Atom basemotion(#q10, #o0, #q27)
           Atom basemotion(#q25, #o0, #q27)
           Atom basemotion(#q27, #o0, #q10)
           Atom basemotion(#q7, #o0, #q27)
           Atom basemotion(#q27, #o0, #q7)
           Atom basemotion(#q27, #o0, #q3)
           Atom basemotion(#q14, #o0, #q27)
           Atom basemotion(#q27, #o0, #q12)
           Atom basemotion(#q27, #o0, #q25)
           Atom basemotion(#q27, #o0, #q2)
           Atom basemotion(#q26, #o0, #q27)
           Atom basemotion(#q22, #o0, #q27)
           Atom basemotion(#q6, #o0, #q27)
           Atom basemotion(v3, #o0, #q27)
           Atom basemotion(#q27, #o0, #q6)
           Atom basemotion(#q16, #o0, #q27)
           Atom basemotion(#q27, #o0, #q22)
           Atom basemotion(#q27, #o0, #q26)
           Atom basemotion(#q3, #o0, #q27)
           Atom basemotion(#q15, #o0, #q27)
           Atom basemotion(#q27, #o0, #q16)
           Atom basemotion(#q2, #o0, #q27)
           Atom basemotion(#q12, #o0, #q27)
           Atom basemotion(#q27, #o0, #q27)
           Atom basemotion(#q4, #o0, #q27)
           Atom basemotion(#q27, #o0, #q4)
           Atom basemotion(#q9, #o0, #q25)
           Atom basemotion(#q15, #o0, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q26, #o0, #q9)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q9, #o0, #q22)
           Atom basemotion(#q27, #o0, #q9)
           Atom btraj(#t33)
           Atom basemotion(#q5, #t33, #q9)
           Atom basemotion(#q22, #o0, #q9)
           Atom basemotion(#q9, #o0, #q27)
           Atom basemotion(#q18, #o0, #q9)
           Atom basemotion(#q25, #o0, #q9)
           Atom basemotion(#q9, #o0, #q14)
           Atom basemotion(#q9, #o0, #q16)
           Atom basemotion(#q14, #o0, #q9)
           Atom basemotion(#q9, #o0, #q12)
           Atom basemotion(#q16, #o0, #q9)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q26)
           Atom basemotion(#q9, #o0, #q15)
           Atom basemotion(#q12, #o0, #q9)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q6, #o0, #q9)
           Atom btraj(#t31)
           Atom basemotion(#q9, #t31, #q5)
           Atom basemotion(#q9, #o0, #q10)
           Atom basemotion(#q9, #o0, #q18)
           Atom basemotion(#q4, #o0, #q9)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q19, #o0, #q5)
           Atom basemotion(#q18, #o0, #q19)
           Atom basemotion(#q9, #o0, #q19)
           Atom basemotion(#q19, #o0, #q9)
           Atom basemotion(#q19, #o0, #q18)
           Atom basemotion(#q5, #o0, #q19)
           Atom basemotion(#q7, #o0, #q19)
           Atom basemotion(v3, #o0, #q19)
           Atom basemotion(#q12, #o0, #q19)
           Atom basemotion(#q19, #o0, #q14)
           Atom basemotion(#q19, #o0, #q15)
           Atom basemotion(#q19, #o0, #q27)
           Atom basemotion(#q19, #o0, #q16)
           Atom basemotion(#q16, #o0, #q19)
           Atom basemotion(#q4, #o0, #q19)
           Atom basemotion(#q25, #o0, #q19)
           Atom basemotion(#q10, #o0, #q19)
           Atom basemotion(#q6, #o0, #q19)
           Atom basemotion(#q19, #o0, #q10)
           Atom basemotion(#q19, #o0, #q25)
           Atom basemotion(#q19, #o0, v3)
           Atom basemotion(#q19, #o0, #q19)
           Atom basemotion(#q19, #o0, #q7)
           Atom basemotion(#q19, #o0, #q12)
           Atom basemotion(#q3, #o0, #q19)
           Atom basemotion(#q14, #o0, #q19)
           Atom basemotion(#q19, #o0, #q3)
           Atom basemotion(#q27, #o0, #q19)
           Atom basemotion(#q22, #o0, #q19)
           Atom basemotion(#q19, #o0, #q6)
           Atom basemotion(#q19, #o0, #q4)
           Atom basemotion(#q19, #o0, #q22)
           Atom basemotion(#q26, #o0, #q19)
           Atom basemotion(#q19, #o0, #q26)
           Atom basemotion(#q19, #o0, #q2)
           Atom basemotion(#q2, #o0, #q19)
           Atom basemotion(#q15, #o0, #q19)
           Atom basemotion(#q13, #o0, #q10)
           Atom basemotion(#q13, #o0, #q16)
           Atom basemotion(#q13, #o0, #q9)
           Atom basemotion(#q6, #o0, #q13)
           Atom basemotion(#q13, #o0, #q7)
           Atom basemotion(#q13, #o0, #q12)
           Atom basemotion(#q25, #o0, #q13)
           Atom basemotion(#q19, #o0, #q13)
           Atom basemotion(#q13, #o0, #q3)
           Atom basemotion(#q9, #o0, #q13)
           Atom basemotion(#q13, #o0, #q25)
           Atom basemotion(#q13, #o0, #q5)
           Atom basemotion(#q13, #o0, #q27)
           Atom basemotion(#q13, #o0, #q19)
           Atom basemotion(#q16, #o0, #q13)
           Atom basemotion(#q13, #o0, #q18)
           Atom basemotion(#q14, #o0, #q13)
           Atom basemotion(#q13, #o0, v3)
           Atom basemotion(#q13, #o0, #q2)
           Atom basemotion(#q12, #o0, #q13)
           Atom basemotion(#q13, #o0, #q26)
           Atom basemotion(#q13, #o0, #q14)
           Atom basemotion(#q18, #o0, #q13)
           Atom basemotion(#q13, #o0, #q6)
           Atom basemotion(#q13, #o0, #q15)
           Atom basemotion(#q13, #o0, #q13)
           Atom basemotion(v3, #o0, #q13)
           Atom basemotion(#q2, #o0, #q13)
           Atom btraj(#t47)
           Atom basemotion(#q5, #t47, #q13)
           Atom basemotion(#q3, #o0, #q13)
           Atom basemotion(#q13, #o0, #q22)
           Atom basemotion(#q10, #o0, #q13)
           Atom basemotion(#q15, #o0, #q13)
           Atom basemotion(#q27, #o0, #q13)
           Atom basemotion(#q13, #o0, #q4)
           Atom basemotion(#q26, #o0, #q13)
           Atom basemotion(#q4, #o0, #q13)
           Atom basemotion(#q7, #o0, #q13)
           Atom basemotion(#q22, #o0, #q13)
           Atom basemotion(#q13, #o0, #q1)
           Atom btraj(#t29)
           Atom basemotion(#q1, #t29, #q9)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q9, #o0, #q1)
           Atom btraj(#t68)
           Atom basemotion(#q18, #t68, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q13)
           Atom btraj(#t103)
           Atom basemotion(#q25, #t103, #q1)
           Atom btraj(#t24)
           Atom basemotion(#q3, #t24, #q1)
           Atom basemotion(#q10, #o0, #q1)
           Atom btraj(#t45)
           Atom basemotion(#q12, #t45, #q1)
           Atom basemotion(#q1, #o0, #q14)
           Atom basemotion(#q7, #o0, #q1)
           Atom btraj(#t69)
           Atom basemotion(#q19, #t69, #q1)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q1)
           Atom btraj(#t71)
           Atom basemotion(#q1, #t71, #q18)
           Atom btraj(#t53)
           Atom basemotion(#q1, #t53, #q15)
           Atom basemotion(#q27, #o0, #q1)
           Atom basemotion(#q6, #o0, #q1)
           Atom btraj(#t78)
           Atom basemotion(#q16, #t78, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q14, #o0, #q1)
           Atom btraj(#t105)
           Atom basemotion(#q1, #t105, #q25)
           Atom btraj(#t30)
           Atom basemotion(#q1, #t30, #q10)
           Atom basemotion(#q1, #o0, #q12)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t92)
           Atom basemotion(#q22, #t92, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q15, #o0, #q1)
           Atom btraj(#t72)
           Atom basemotion(#q1, #t72, #q19)
           Atom basemotion(#q1, #o0, #q7)
           Atom btraj(#t88)
           Atom basemotion(#q1, #t88, #q22)
           Atom btraj(#t26)
           Atom basemotion(#q1, #t26, #q2)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q16)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q3)
           Atom btraj(#t104)
           Atom basemotion(#q26, #t104, #q1)
           Atom btraj(#t106)
           Atom basemotion(#q1, #t106, #q26)
           Atom btraj(#t11)
           Atom basemotion(#q1, #t11, #q6)
           Atom basemotion(#q1, #o0, #q27)
           Atom basemotion(#q8, #o0, #q15)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q8, #o0, #q26)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q10)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q16, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q27)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q25, #o0, #q8)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q14, #o0, #q8)
           Atom basemotion(#q19, #o0, #q8)
           Atom basemotion(#q12, #o0, #q8)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q3, #o0, #q8)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q9, #o0, #q8)
           Atom btraj(#t25)
           Atom basemotion(#q5, #t25, #q8)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q18, #o0, #q8)
           Atom basemotion(#q15, #o0, #q8)
           Atom basemotion(#q10, #o0, #q8)
           Atom basemotion(#q26, #o0, #q8)
           Atom basemotion(#q27, #o0, #q8)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q8, #o0, #q18)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q8, #o0, #q14)
           Atom basemotion(#q13, #o0, #q8)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q8, #o0, #q25)
           Atom basemotion(#q22, #o0, #q8)
           Atom basemotion(#q8, #o0, #q13)
           Atom basemotion(#q8, #o0, #q22)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q8, #o0, #q16)
           Atom basemotion(#q8, #o0, #q19)
           Atom basemotion(#q8, #o0, #q12)
           Atom basemotion(#q3, #o0, #q17)
           Atom basemotion(#q15, #o0, #q17)
           Atom basemotion(#q12, #o0, #q17)
           Atom basemotion(#q17, #o0, #q25)
           Atom basemotion(#q26, #o0, #q17)
           Atom basemotion(#q9, #o0, #q17)
           Atom basemotion(#q10, #o0, #q17)
           Atom basemotion(#q2, #o0, #q17)
           Atom basemotion(#q1, #o0, #q17)
           Atom basemotion(#q17, #o0, #q8)
           Atom btraj(#t60)
           Atom basemotion(#q5, #t60, #q17)
           Atom basemotion(#q27, #o0, #q17)
           Atom basemotion(#q6, #o0, #q17)
           Atom basemotion(#q8, #o0, #q17)
           Atom basemotion(#q7, #o0, #q17)
           Atom basemotion(v3, #o0, #q17)
           Atom basemotion(#q13, #o0, #q17)
           Atom basemotion(#q22, #o0, #q17)
           Atom basemotion(#q17, #o0, #q13)
           Atom basemotion(#q17, #o0, #q14)
           Atom basemotion(#q17, #o0, #q19)
           Atom basemotion(#q17, #o0, #q12)
           Atom basemotion(#q18, #o0, #q17)
           Atom basemotion(#q17, #o0, #q6)
           Atom basemotion(#q17, #o0, #q16)
           Atom basemotion(#q17, #o0, v3)
           Atom basemotion(#q17, #o0, #q7)
           Atom basemotion(#q17, #o0, #q3)
           Atom basemotion(#q17, #o0, #q15)
           Atom basemotion(#q17, #o0, #q22)
           Atom basemotion(#q17, #o0, #q26)
           Atom basemotion(#q17, #o0, #q10)
           Atom basemotion(#q17, #o0, #q2)
           Atom basemotion(#q17, #o0, #q9)
           Atom basemotion(#q17, #o0, #q5)
           Atom basemotion(#q17, #o0, #q18)
           Atom basemotion(#q17, #o0, #q27)
           Atom btraj(#t83)
           Atom basemotion(#q17, #t83, #q1)
           Atom basemotion(#q16, #o0, #q17)
           Atom basemotion(#q14, #o0, #q17)
           Atom basemotion(#q25, #o0, #q17)
           Atom basemotion(#q17, #o0, #q17)
           Atom basemotion(#q19, #o0, #q17)
           Atom basemotion(#q4, #o0, #q17)
           Atom basemotion(#q17, #o0, #q4)
           Atom basemotion(#q13, #o0, #q23)
           Atom btraj(#t91)
           Atom basemotion(#q23, #t91, #q5)
           Atom basemotion(#q23, #o0, #q8)
           Atom basemotion(#q23, #o0, #q9)
           Atom basemotion(#q8, #o0, #q23)
           Atom basemotion(#q17, #o0, #q23)
           Atom basemotion(#q18, #o0, #q23)
           Atom basemotion(#q23, #o0, #q17)
           Atom btraj(#t87)
           Atom basemotion(#q5, #t87, #q23)
           Atom basemotion(#q9, #o0, #q23)
           Atom basemotion(#q23, #o0, #q18)
           Atom basemotion(#q7, #o0, #q23)
           Atom basemotion(#q23, #o0, #q3)
           Atom basemotion(#q19, #o0, #q23)
           Atom basemotion(#q23, #o0, #q7)
           Atom basemotion(v3, #o0, #q23)
           Atom basemotion(#q25, #o0, #q23)
           Atom basemotion(#q23, #o0, #q16)
           Atom basemotion(#q10, #o0, #q23)
           Atom basemotion(#q23, #o0, #q14)
           Atom basemotion(#q3, #o0, #q23)
           Atom basemotion(#q23, #o0, #q10)
           Atom basemotion(#q16, #o0, #q23)
           Atom basemotion(#q23, #o0, #q15)
           Atom basemotion(#q14, #o0, #q23)
           Atom btraj(#t93)
           Atom basemotion(#q23, #t93, #q1)
           Atom basemotion(#q12, #o0, #q23)
           Atom basemotion(#q23, #o0, v3)
           Atom basemotion(#q23, #o0, #q23)
           Atom basemotion(#q27, #o0, #q23)
           Atom basemotion(#q23, #o0, #q27)
           Atom basemotion(#q23, #o0, #q12)
           Atom basemotion(#q23, #o0, #q19)
           Atom basemotion(#q23, #o0, #q13)
           Atom basemotion(#q23, #o0, #q25)
           Atom basemotion(#q23, #o0, #q26)
           Atom basemotion(#q2, #o0, #q23)
           Atom basemotion(#q23, #o0, #q4)
           Atom basemotion(#q22, #o0, #q23)
           Atom basemotion(#q6, #o0, #q23)
           Atom basemotion(#q23, #o0, #q22)
           Atom basemotion(#q23, #o0, #q2)
           Atom basemotion(#q4, #o0, #q23)
           Atom basemotion(#q23, #o0, #q6)
           Atom basemotion(#q26, #o0, #q23)
           Atom basemotion(#q15, #o0, #q23)
           Atom btraj(#t89)
           Atom basemotion(#q1, #t89, #q23)
           Atom basemotion(#q8, #o0, #q24)
           Atom basemotion(#q13, #o0, #q24)
           Atom basemotion(#q24, #o0, #q8)
           Atom basemotion(#q24, #o0, #q5)
           Atom basemotion(#q24, #o0, #q9)
           Atom basemotion(#q17, #o0, #q24)
           Atom basemotion(#q18, #o0, #q24)
           Atom basemotion(#q5, #o0, #q24)
           Atom basemotion(#q9, #o0, #q24)
           Atom basemotion(#q24, #o0, #q18)
           Atom basemotion(#q24, #o0, #q17)
           Atom basemotion(#q19, #o0, #q24)
           Atom basemotion(#q24, #o0, #q24)
           Atom basemotion(#q23, #o0, #q24)
           Atom basemotion(#q7, #o0, #q24)
           Atom basemotion(#q24, #o0, #q14)
           Atom basemotion(#q24, #o0, #q1)
           Atom basemotion(#q24, #o0, #q23)
           Atom basemotion(#q24, #o0, #q13)
           Atom basemotion(#q24, #o0, #q19)
           Atom basemotion(#q3, #o0, #q24)
           Atom basemotion(#q24, #o0, #q10)
           Atom basemotion(#q14, #o0, #q24)
           Atom basemotion(#q27, #o0, #q24)
           Atom basemotion(#q25, #o0, #q24)
           Atom basemotion(#q24, #o0, v3)
           Atom basemotion(#q24, #o0, #q25)
           Atom basemotion(#q24, #o0, #q3)
           Atom basemotion(#q10, #o0, #q24)
           Atom basemotion(#q24, #o0, #q7)
           Atom basemotion(v3, #o0, #q24)
           Atom basemotion(#q24, #o0, #q16)
           Atom basemotion(#q24, #o0, #q15)
           Atom basemotion(#q16, #o0, #q24)
           Atom basemotion(#q12, #o0, #q24)
           Atom basemotion(#q24, #o0, #q12)
           Atom basemotion(#q22, #o0, #q24)
           Atom basemotion(#q24, #o0, #q6)
           Atom basemotion(#q15, #o0, #q24)
           Atom basemotion(#q24, #o0, #q27)
           Atom basemotion(#q26, #o0, #q24)
           Atom basemotion(#q24, #o0, #q26)
           Atom basemotion(#q24, #o0, #q22)
           Atom basemotion(#q2, #o0, #q24)
           Atom basemotion(#q24, #o0, #q4)
           Atom basemotion(#q6, #o0, #q24)
           Atom basemotion(#q4, #o0, #q24)
           Atom basemotion(#q24, #o0, #q2)
           Atom basemotion(#q1, #o0, #q24)
           Atom basemotion(#q4, #o0, #q0)
           Atom btraj(#t48)
           Atom basemotion(#q13, #t48, #q0)
           Atom basemotion(#q3, #o0, #q0)
           Atom btraj(#t74)
           Atom basemotion(#q0, #t74, #q18)
           Atom basemotion(#q0, #o0, #q17)
           Atom btraj(#t65)
           Atom basemotion(#q18, #t65, #q0)
           Atom btraj(#t39)
           Atom basemotion(#q9, #t39, #q0)
           Atom basemotion(#q17, #o0, #q0)
           Atom btraj(#t36)
           Atom basemotion(#q0, #t36, #q9)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t50)
           Atom basemotion(#q0, #t50, #q13)
           Atom btraj(#t108)
           Atom basemotion(#q0, #t108, #q26)
           Atom btraj(#t107)
           Atom basemotion(#q0, #t107, #q25)
           Atom btraj(#t56)
           Atom basemotion(#q0, #t56, #q15)
           Atom btraj(#t75)
           Atom basemotion(#q0, #t75, #q19)
           Atom basemotion(#q5, #o0, #q0)
           Atom btraj(#t18)
           Atom basemotion(#q0, #t18, #q7)
           Atom btraj(#t94)
           Atom basemotion(#q0, #t94, #q22)
           Atom basemotion(#q0, #o0, #q24)
           Atom btraj(#t51)
           Atom basemotion(#q0, #t51, #q14)
           Atom basemotion(#q25, #o0, #q0)
           Atom btraj(#t40)
           Atom basemotion(#q10, #t40, #q0)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q0)
           Atom btraj(#t95)
           Atom basemotion(#q0, #t95, #q23)
           Atom basemotion(#q27, #o0, #q0)
           Atom basemotion(#q16, #o0, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t37)
           Atom basemotion(#q0, #t37, #q10)
           Atom basemotion(#q26, #o0, #q0)
           Atom basemotion(#q14, #o0, #q0)
           Atom btraj(#t77)
           Atom basemotion(#q0, #t77, #q16)
           Atom btraj(#t23)
           Atom basemotion(#q0, #t23, #q3)
           Atom basemotion(#q23, #o0, #q0)
           Atom btraj(#t20)
           Atom basemotion(#q7, #t20, #q0)
           Atom btraj(#t66)
           Atom basemotion(#q19, #t66, #q0)
           Atom basemotion(#q24, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q22, #o0, #q0)
           Atom btraj(#t57)
           Atom basemotion(#q15, #t57, #q0)
           Atom basemotion(#q0, #o0, #q27)
           Atom basemotion(#q12, #o0, #q0)
           Atom btraj(#t44)
           Atom basemotion(#q0, #t44, #q12)
           Atom btraj(#t82)
           Atom basemotion(#q2, #t82, #q0)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t17)
           Atom basemotion(#q0, #t17, #q6)
           Atom btraj(#t19)
           Atom basemotion(#q6, #t19, #q0)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q11, #o0, #q15)
           Atom basemotion(#q8, #o0, #q11)
           Atom basemotion(#q5, #o0, #q11)
           Atom basemotion(#q11, #o0, #q17)
           Atom basemotion(#q13, #o0, #q11)
           Atom basemotion(#q11, #o0, #q8)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q9, #o0, #q11)
           Atom btraj(#t41)
           Atom basemotion(#q11, #t41, #q0)
           Atom basemotion(#q18, #o0, #q11)
           Atom basemotion(#q17, #o0, #q11)
           Atom basemotion(#q11, #o0, #q5)
           Atom basemotion(#q3, #o0, #q11)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q16, #o0, #q11)
           Atom basemotion(#q11, #o0, #q18)
           Atom basemotion(#q11, #o0, #q16)
           Atom basemotion(#q11, #o0, #q23)
           Atom basemotion(#q11, #o0, #q14)
           Atom basemotion(#q14, #o0, #q11)
           Atom basemotion(#q23, #o0, #q11)
           Atom basemotion(#q25, #o0, #q11)
           Atom basemotion(#q11, #o0, #q13)
           Atom basemotion(#q11, #o0, #q7)
           Atom basemotion(#q12, #o0, #q11)
           Atom basemotion(#q24, #o0, #q11)
           Atom basemotion(#q27, #o0, #q11)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q7, #o0, #q11)
           Atom basemotion(#q11, #o0, #q1)
           Atom btraj(#t38)
           Atom basemotion(#q0, #t38, #q11)
           Atom basemotion(#q11, #o0, #q3)
           Atom basemotion(#q11, #o0, #q25)
           Atom basemotion(#q11, #o0, #q19)
           Atom basemotion(#q19, #o0, #q11)
           Atom basemotion(#q11, #o0, #q24)
           Atom basemotion(#q11, #o0, #q2)
           Atom basemotion(#q6, #o0, #q11)
           Atom basemotion(#q11, #o0, #q27)
           Atom basemotion(#q22, #o0, #q11)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q1, #o0, #q11)
           Atom basemotion(#q15, #o0, #q11)
           Atom basemotion(#q26, #o0, #q11)
           Atom basemotion(#q11, #o0, #q22)
           Atom basemotion(#q11, #o0, #q26)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q11, #o0, #q6)
           Atom basemotion(#q11, #o0, #q12)
           Atom basemotion(#q11, #o0, #q4)
           Atom basemotion(#q2, #o0, #q11)
           Atom basemotion(#q4, #o0, #q11)
           Atom basemotion(#q17, #o0, #q21)
           Atom basemotion(#q21, #o0, #q8)
           Atom basemotion(#q18, #o0, #q21)
           Atom basemotion(#q21, #o0, #q17)
           Atom basemotion(#q21, #o0, #q13)
           Atom basemotion(#q9, #o0, #q21)
           Atom basemotion(#q21, #o0, #q18)
           Atom basemotion(#q13, #o0, #q21)
           Atom basemotion(#q21, #o0, #q9)
           Atom basemotion(#q22, #o0, #q21)
           Atom basemotion(#q27, #o0, #q21)
           Atom basemotion(#q21, #o0, #q1)
           Atom basemotion(#q21, #o0, #q25)
           Atom basemotion(#q21, #o0, #q0)
           Atom basemotion(#q6, #o0, #q21)
           Atom basemotion(#q5, #o0, #q21)
           Atom basemotion(#q11, #o0, #q21)
           Atom basemotion(#q23, #o0, #q21)
           Atom basemotion(#q21, #o0, #q23)
           Atom basemotion(#q21, #o0, #q16)
           Atom basemotion(#q12, #o0, #q21)
           Atom basemotion(#q21, #o0, #q6)
           Atom basemotion(v3, #o0, #q21)
           Atom basemotion(#q4, #o0, #q21)
           Atom basemotion(#q21, #o0, #q11)
           Atom basemotion(#q21, #o0, #q7)
           Atom basemotion(#q10, #o0, #q21)
           Atom basemotion(#q21, #o0, #q15)
           Atom basemotion(#q21, #o0, #q12)
           Atom basemotion(#q16, #o0, #q21)
           Atom basemotion(#q14, #o0, #q21)
           Atom basemotion(#q21, #o0, #q24)
           Atom basemotion(#q21, #o0, #q21)
           Atom basemotion(#q21, #o0, v3)
           Atom btraj(#t80)
           Atom basemotion(#q1, #t80, #q21)
           Atom basemotion(#q3, #o0, #q21)
           Atom btraj(#t81)
           Atom basemotion(#q21, #t81, #q5)
           Atom basemotion(#q21, #o0, #q27)
           Atom basemotion(#q24, #o0, #q21)
           Atom basemotion(#q0, #o0, #q21)
           Atom basemotion(#q7, #o0, #q21)
           Atom basemotion(#q19, #o0, #q21)
           Atom basemotion(#q21, #o0, #q19)
           Atom basemotion(#q21, #o0, #q10)
           Atom basemotion(#q21, #o0, #q14)
           Atom basemotion(#q21, #o0, #q3)
           Atom basemotion(#q25, #o0, #q21)
           Atom basemotion(#q26, #o0, #q21)
           Atom basemotion(#q21, #o0, #q26)
           Atom basemotion(#q15, #o0, #q21)
           Atom basemotion(#q21, #o0, #q2)
           Atom basemotion(#q2, #o0, #q21)
           Atom basemotion(#q21, #o0, #q22)
           Atom basemotion(#q8, #o0, #q21)
           Atom basemotion(#q21, #o0, #q4)
           Atom basemotion(#q13, #o0, #q20)
           Atom basemotion(#q17, #o0, #q20)
           Atom basemotion(#q18, #o0, #q20)
           Atom basemotion(#q20, #o0, #q9)
           Atom basemotion(#q20, #o0, #q13)
           Atom basemotion(#q20, #o0, #q17)
           Atom basemotion(#q20, #o0, #q18)
           Atom basemotion(#q9, #o0, #q20)
           Atom basemotion(#q20, #o0, #q8)
           Atom basemotion(#q20, #o0, #q4)
           Atom basemotion(#q22, #o0, #q20)
           Atom basemotion(#q20, #o0, #q21)
           Atom basemotion(#q10, #o0, #q20)
           Atom basemotion(#q20, #o0, #q25)
           Atom basemotion(#q7, #o0, #q20)
           Atom basemotion(#q20, #o0, #q15)
           Atom basemotion(#q20, #o0, #q12)
           Atom basemotion(#q11, #o0, #q20)
           Atom basemotion(#q20, #o0, #q16)
           Atom basemotion(#q20, #o0, #q10)
           Atom basemotion(#q20, #o0, #q3)
           Atom basemotion(#q26, #o0, #q20)
           Atom basemotion(#q20, #o0, #q0)
           Atom basemotion(#q20, #o0, #q14)
           Atom basemotion(#q3, #o0, #q20)
           Atom btraj(#t70)
           Atom basemotion(#q20, #t70, #q1)
           Atom btraj(#t76)
           Atom basemotion(#q0, #t76, #q20)
           Atom basemotion(#q20, #o0, #q23)
           Atom basemotion(#q20, #o0, #q24)
           Atom basemotion(#q20, #o0, #q11)
           Atom basemotion(v3, #o0, #q20)
           Atom basemotion(#q20, #o0, #q7)
           Atom basemotion(#q20, #o0, #q22)
           Atom basemotion(#q20, #o0, #q20)
           Atom basemotion(#q20, #o0, #q27)
           Atom basemotion(#q16, #o0, #q20)
           Atom basemotion(#q20, #o0, #q26)
           Atom basemotion(#q20, #o0, #q5)
           Atom basemotion(#q14, #o0, #q20)
           Atom basemotion(#q12, #o0, #q20)
           Atom basemotion(#q23, #o0, #q20)
           Atom basemotion(#q19, #o0, #q20)
           Atom basemotion(#q4, #o0, #q20)
           Atom basemotion(#q27, #o0, #q20)
           Atom basemotion(#q5, #o0, #q20)
           Atom basemotion(#q24, #o0, #q20)
           Atom basemotion(#q21, #o0, #q20)
           Atom basemotion(#q20, #o0, #q19)
           Atom basemotion(#q20, #o0, v3)
           Atom basemotion(#q25, #o0, #q20)
           Atom btraj(#t73)
           Atom basemotion(#q1, #t73, #q20)
           Atom basemotion(#q20, #o0, #q2)
           Atom basemotion(#q15, #o0, #q20)
           Atom basemotion(#q8, #o0, #q20)
           Atom basemotion(#q2, #o0, #q20)
           Atom basemotion(#q20, #o0, #q6)
           Atom basemotion(#q6, #o0, #q20)
           Atom kin(v4, v14, #o2, #g2, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom basemotion(#q13, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q18, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q17)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q19)
           Atom basemotion(#q17, #o0, #o3)
           Atom basemotion(#o3, #o0, #q18)
           Atom basemotion(#o3, #o0, #q13)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#q26, #o0, #o3)
           Atom basemotion(#q27, #o0, #o3)
           Atom basemotion(#q19, #o0, #o3)
           Atom basemotion(#q15, #o0, #o3)
           Atom basemotion(#q12, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q23)
           Atom basemotion(#q23, #o0, #o3)
           Atom basemotion(#o3, #o0, #q21)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q24, #o0, #o3)
           Atom basemotion(#q14, #o0, #o3)
           Atom basemotion(#o3, #o0, #q22)
           Atom basemotion(#o3, #o0, #q15)
           Atom basemotion(#o3, #o0, #q20)
           Atom basemotion(#o3, #o0, #q26)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q16)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q24)
           Atom basemotion(#o3, #o0, #q25)
           Atom basemotion(#o3, #o0, #q14)
           Atom basemotion(#q20, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q21, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q27)
           Atom basemotion(#q22, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q25, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q16, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, #q12)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q14 #o0))
           ((move_base #o3 #q15 #o0))
           ((move_base #o3 #q16 #o0))
           ((move_base #o3 #q17 #o0))
           ((move_base #o3 #q18 #o0))
           ((move_base #o3 #q19 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q20 #o0))
           ((move_base #o3 #q21 #o0))
           ((move_base #o3 #q22 #o0))
           ((move_base #o3 #q23 #o0))
           ((move_base #o3 #q24 #o0))
           ((move_base #o3 #q25 #o0))
           ((move_base #o3 #q26 #o0))
           ((move_base #o3 #q27 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q17 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q21 #o0))
           ((move_base #q0 #q24 #o0))
           ((move_base #q0 #q27 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q25 #t107))
           ((move_base #q0 #q26 #t108))
           ((move_base #q0 #q6 #t17))
           ((move_base #q0 #q7 #t18))
           ((move_base #q0 #q3 #t23))
           ((move_base #q0 #q9 #t36))
           ((move_base #q0 #q10 #t37))
           ((move_base #q0 #q11 #t38))
           ((move_base #q0 #q12 #t44))
           ((move_base #q0 #q13 #t50))
           ((move_base #q0 #q14 #t51))
           ((move_base #q0 #q15 #t56))
           ((move_base #q0 #q18 #t74))
           ((move_base #q0 #q19 #t75))
           ((move_base #q0 #q20 #t76))
           ((move_base #q0 #q16 #t77))
           ((move_base #q0 #q22 #t94))
           ((move_base #q0 #q23 #t95))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q11 #o0))
           ((move_base #q1 #q12 #o0))
           ((move_base #q1 #q13 #o0))
           ((move_base #q1 #q14 #o0))
           ((move_base #q1 #q16 #o0))
           ((move_base #q1 #q17 #o0))
           ((move_base #q1 #q24 #o0))
           ((move_base #q1 #q27 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q25 #t105))
           ((move_base #q1 #q26 #t106))
           ((move_base #q1 #q6 #t11))
           ((move_base #q1 #q2 #t26))
           ((move_base #q1 #q9 #t29))
           ((move_base #q1 #q10 #t30))
           ((move_base #q1 #q15 #t53))
           ((move_base #q1 #q18 #t71))
           ((move_base #q1 #q19 #t72))
           ((move_base #q1 #q20 #t73))
           ((move_base #q1 #q21 #t80))
           ((move_base #q1 #q22 #t88))
           ((move_base #q1 #q23 #t89))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q1 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q14 #o0))
           ((move_base #q10 #q15 #o0))
           ((move_base #q10 #q16 #o0))
           ((move_base #q10 #q17 #o0))
           ((move_base #q10 #q18 #o0))
           ((move_base #q10 #q19 #o0))
           ((move_base #q10 #q2 #o0))
           ((move_base #q10 #q20 #o0))
           ((move_base #q10 #q21 #o0))
           ((move_base #q10 #q22 #o0))
           ((move_base #q10 #q23 #o0))
           ((move_base #q10 #q24 #o0))
           ((move_base #q10 #q25 #o0))
           ((move_base #q10 #q26 #o0))
           ((move_base #q10 #q27 #o0))
           ((move_base #q10 #q3 #o0))
           ((move_base #q10 #q4 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q5 #t32))
           ((move_base #q10 #q0 #t40))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q14 #o0))
           ((move_base #q11 #q15 #o0))
           ((move_base #q11 #q16 #o0))
           ((move_base #q11 #q17 #o0))
           ((move_base #q11 #q18 #o0))
           ((move_base #q11 #q19 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q20 #o0))
           ((move_base #q11 #q21 #o0))
           ((move_base #q11 #q22 #o0))
           ((move_base #q11 #q23 #o0))
           ((move_base #q11 #q24 #o0))
           ((move_base #q11 #q25 #o0))
           ((move_base #q11 #q26 #o0))
           ((move_base #q11 #q27 #o0))
           ((move_base #q11 #q3 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q0 #t41))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q0 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q13 #o0))
           ((move_base #q12 #q14 #o0))
           ((move_base #q12 #q15 #o0))
           ((move_base #q12 #q16 #o0))
           ((move_base #q12 #q17 #o0))
           ((move_base #q12 #q18 #o0))
           ((move_base #q12 #q19 #o0))
           ((move_base #q12 #q2 #o0))
           ((move_base #q12 #q20 #o0))
           ((move_base #q12 #q21 #o0))
           ((move_base #q12 #q22 #o0))
           ((move_base #q12 #q23 #o0))
           ((move_base #q12 #q24 #o0))
           ((move_base #q12 #q25 #o0))
           ((move_base #q12 #q26 #o0))
           ((move_base #q12 #q27 #o0))
           ((move_base #q12 #q3 #o0))
           ((move_base #q12 #q4 #o0))
           ((move_base #q12 #q5 #o0))
           ((move_base #q12 #q6 #o0))
           ((move_base #q12 #q7 #o0))
           ((move_base #q12 #q8 #o0))
           ((move_base #q12 #q9 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q12 #q1 #t45))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q1 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q11 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q14 #o0))
           ((move_base #q13 #q15 #o0))
           ((move_base #q13 #q16 #o0))
           ((move_base #q13 #q17 #o0))
           ((move_base #q13 #q18 #o0))
           ((move_base #q13 #q19 #o0))
           ((move_base #q13 #q2 #o0))
           ((move_base #q13 #q20 #o0))
           ((move_base #q13 #q21 #o0))
           ((move_base #q13 #q22 #o0))
           ((move_base #q13 #q23 #o0))
           ((move_base #q13 #q24 #o0))
           ((move_base #q13 #q25 #o0))
           ((move_base #q13 #q26 #o0))
           ((move_base #q13 #q27 #o0))
           ((move_base #q13 #q3 #o0))
           ((move_base #q13 #q4 #o0))
           ((move_base #q13 #q5 #o0))
           ((move_base #q13 #q6 #o0))
           ((move_base #q13 #q7 #o0))
           ((move_base #q13 #q8 #o0))
           ((move_base #q13 #q9 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q13 #q0 #t48))
           ((move_base #q14 #o3 #o0))
           ((move_base #q14 #q0 #o0))
           ((move_base #q14 #q1 #o0))
           ((move_base #q14 #q10 #o0))
           ((move_base #q14 #q11 #o0))
           ((move_base #q14 #q12 #o0))
           ((move_base #q14 #q13 #o0))
           ((move_base #q14 #q14 #o0))
           ((move_base #q14 #q15 #o0))
           ((move_base #q14 #q16 #o0))
           ((move_base #q14 #q17 #o0))
           ((move_base #q14 #q18 #o0))
           ((move_base #q14 #q19 #o0))
           ((move_base #q14 #q2 #o0))
           ((move_base #q14 #q20 #o0))
           ((move_base #q14 #q21 #o0))
           ((move_base #q14 #q22 #o0))
           ((move_base #q14 #q23 #o0))
           ((move_base #q14 #q24 #o0))
           ((move_base #q14 #q25 #o0))
           ((move_base #q14 #q26 #o0))
           ((move_base #q14 #q27 #o0))
           ((move_base #q14 #q3 #o0))
           ((move_base #q14 #q4 #o0))
           ((move_base #q14 #q5 #o0))
           ((move_base #q14 #q6 #o0))
           ((move_base #q14 #q7 #o0))
           ((move_base #q14 #q8 #o0))
           ((move_base #q14 #q9 #o0))
           ((move_base #q14 v3 #o0))
           ((move_base #q15 #o3 #o0))
           ((move_base #q15 #q1 #o0))
           ((move_base #q15 #q10 #o0))
           ((move_base #q15 #q11 #o0))
           ((move_base #q15 #q12 #o0))
           ((move_base #q15 #q13 #o0))
           ((move_base #q15 #q14 #o0))
           ((move_base #q15 #q15 #o0))
           ((move_base #q15 #q16 #o0))
           ((move_base #q15 #q17 #o0))
           ((move_base #q15 #q18 #o0))
           ((move_base #q15 #q19 #o0))
           ((move_base #q15 #q2 #o0))
           ((move_base #q15 #q20 #o0))
           ((move_base #q15 #q21 #o0))
           ((move_base #q15 #q22 #o0))
           ((move_base #q15 #q23 #o0))
           ((move_base #q15 #q24 #o0))
           ((move_base #q15 #q25 #o0))
           ((move_base #q15 #q26 #o0))
           ((move_base #q15 #q27 #o0))
           ((move_base #q15 #q3 #o0))
           ((move_base #q15 #q4 #o0))
           ((move_base #q15 #q6 #o0))
           ((move_base #q15 #q7 #o0))
           ((move_base #q15 #q8 #o0))
           ((move_base #q15 #q9 #o0))
           ((move_base #q15 v3 #o0))
           ((move_base #q15 #q5 #t54))
           ((move_base #q15 #q0 #t57))
           ((move_base #q16 #o3 #o0))
           ((move_base #q16 #q0 #o0))
           ((move_base #q16 #q10 #o0))
           ((move_base #q16 #q11 #o0))
           ((move_base #q16 #q12 #o0))
           ((move_base #q16 #q13 #o0))
           ((move_base #q16 #q14 #o0))
           ((move_base #q16 #q15 #o0))
           ((move_base #q16 #q16 #o0))
           ((move_base #q16 #q17 #o0))
           ((move_base #q16 #q18 #o0))
           ((move_base #q16 #q19 #o0))
           ((move_base #q16 #q2 #o0))
           ((move_base #q16 #q20 #o0))
           ((move_base #q16 #q21 #o0))
           ((move_base #q16 #q22 #o0))
           ((move_base #q16 #q23 #o0))
           ((move_base #q16 #q24 #o0))
           ((move_base #q16 #q25 #o0))
           ((move_base #q16 #q26 #o0))
           ((move_base #q16 #q27 #o0))
           ((move_base #q16 #q3 #o0))
           ((move_base #q16 #q4 #o0))
           ((move_base #q16 #q5 #o0))
           ((move_base #q16 #q6 #o0))
           ((move_base #q16 #q7 #o0))
           ((move_base #q16 #q8 #o0))
           ((move_base #q16 #q9 #o0))
           ((move_base #q16 v3 #o0))
           ((move_base #q16 #q1 #t78))
           ((move_base #q17 #o3 #o0))
           ((move_base #q17 #q0 #o0))
           ((move_base #q17 #q10 #o0))
           ((move_base #q17 #q11 #o0))
           ((move_base #q17 #q12 #o0))
           ((move_base #q17 #q13 #o0))
           ((move_base #q17 #q14 #o0))
           ((move_base #q17 #q15 #o0))
           ((move_base #q17 #q16 #o0))
           ((move_base #q17 #q17 #o0))
           ((move_base #q17 #q18 #o0))
           ((move_base #q17 #q19 #o0))
           ((move_base #q17 #q2 #o0))
           ((move_base #q17 #q20 #o0))
           ((move_base #q17 #q21 #o0))
           ((move_base #q17 #q22 #o0))
           ((move_base #q17 #q23 #o0))
           ((move_base #q17 #q24 #o0))
           ((move_base #q17 #q25 #o0))
           ((move_base #q17 #q26 #o0))
           ((move_base #q17 #q27 #o0))
           ((move_base #q17 #q3 #o0))
           ((move_base #q17 #q4 #o0))
           ((move_base #q17 #q5 #o0))
           ((move_base #q17 #q6 #o0))
           ((move_base #q17 #q7 #o0))
           ((move_base #q17 #q8 #o0))
           ((move_base #q17 #q9 #o0))
           ((move_base #q17 v3 #o0))
           ((move_base #q17 #q1 #t83))
           ((move_base #q18 #o3 #o0))
           ((move_base #q18 #q10 #o0))
           ((move_base #q18 #q11 #o0))
           ((move_base #q18 #q12 #o0))
           ((move_base #q18 #q13 #o0))
           ((move_base #q18 #q14 #o0))
           ((move_base #q18 #q15 #o0))
           ((move_base #q18 #q16 #o0))
           ((move_base #q18 #q17 #o0))
           ((move_base #q18 #q18 #o0))
           ((move_base #q18 #q19 #o0))
           ((move_base #q18 #q2 #o0))
           ((move_base #q18 #q20 #o0))
           ((move_base #q18 #q21 #o0))
           ((move_base #q18 #q22 #o0))
           ((move_base #q18 #q23 #o0))
           ((move_base #q18 #q24 #o0))
           ((move_base #q18 #q25 #o0))
           ((move_base #q18 #q26 #o0))
           ((move_base #q18 #q27 #o0))
           ((move_base #q18 #q3 #o0))
           ((move_base #q18 #q4 #o0))
           ((move_base #q18 #q5 #o0))
           ((move_base #q18 #q6 #o0))
           ((move_base #q18 #q7 #o0))
           ((move_base #q18 #q8 #o0))
           ((move_base #q18 #q9 #o0))
           ((move_base #q18 v3 #o0))
           ((move_base #q18 #q0 #t65))
           ((move_base #q18 #q1 #t68))
           ((move_base #q19 #o3 #o0))
           ((move_base #q19 #q10 #o0))
           ((move_base #q19 #q11 #o0))
           ((move_base #q19 #q12 #o0))
           ((move_base #q19 #q13 #o0))
           ((move_base #q19 #q14 #o0))
           ((move_base #q19 #q15 #o0))
           ((move_base #q19 #q16 #o0))
           ((move_base #q19 #q17 #o0))
           ((move_base #q19 #q18 #o0))
           ((move_base #q19 #q19 #o0))
           ((move_base #q19 #q2 #o0))
           ((move_base #q19 #q20 #o0))
           ((move_base #q19 #q21 #o0))
           ((move_base #q19 #q22 #o0))
           ((move_base #q19 #q23 #o0))
           ((move_base #q19 #q24 #o0))
           ((move_base #q19 #q25 #o0))
           ((move_base #q19 #q26 #o0))
           ((move_base #q19 #q27 #o0))
           ((move_base #q19 #q3 #o0))
           ((move_base #q19 #q4 #o0))
           ((move_base #q19 #q5 #o0))
           ((move_base #q19 #q6 #o0))
           ((move_base #q19 #q7 #o0))
           ((move_base #q19 #q8 #o0))
           ((move_base #q19 #q9 #o0))
           ((move_base #q19 v3 #o0))
           ((move_base #q19 #q0 #t66))
           ((move_base #q19 #q1 #t69))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q12 #o0))
           ((move_base #q2 #q13 #o0))
           ((move_base #q2 #q14 #o0))
           ((move_base #q2 #q15 #o0))
           ((move_base #q2 #q16 #o0))
           ((move_base #q2 #q17 #o0))
           ((move_base #q2 #q18 #o0))
           ((move_base #q2 #q19 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q20 #o0))
           ((move_base #q2 #q21 #o0))
           ((move_base #q2 #q22 #o0))
           ((move_base #q2 #q23 #o0))
           ((move_base #q2 #q24 #o0))
           ((move_base #q2 #q25 #o0))
           ((move_base #q2 #q26 #o0))
           ((move_base #q2 #q27 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t22))
           ((move_base #q2 #q0 #t82))
           ((move_base #q20 #o3 #o0))
           ((move_base #q20 #q0 #o0))
           ((move_base #q20 #q10 #o0))
           ((move_base #q20 #q11 #o0))
           ((move_base #q20 #q12 #o0))
           ((move_base #q20 #q13 #o0))
           ((move_base #q20 #q14 #o0))
           ((move_base #q20 #q15 #o0))
           ((move_base #q20 #q16 #o0))
           ((move_base #q20 #q17 #o0))
           ((move_base #q20 #q18 #o0))
           ((move_base #q20 #q19 #o0))
           ((move_base #q20 #q2 #o0))
           ((move_base #q20 #q20 #o0))
           ((move_base #q20 #q21 #o0))
           ((move_base #q20 #q22 #o0))
           ((move_base #q20 #q23 #o0))
           ((move_base #q20 #q24 #o0))
           ((move_base #q20 #q25 #o0))
           ((move_base #q20 #q26 #o0))
           ((move_base #q20 #q27 #o0))
           ((move_base #q20 #q3 #o0))
           ((move_base #q20 #q4 #o0))
           ((move_base #q20 #q5 #o0))
           ((move_base #q20 #q6 #o0))
           ((move_base #q20 #q7 #o0))
           ((move_base #q20 #q8 #o0))
           ((move_base #q20 #q9 #o0))
           ((move_base #q20 v3 #o0))
           ((move_base #q20 #q1 #t70))
           ((move_base #q21 #o3 #o0))
           ((move_base #q21 #q0 #o0))
           ((move_base #q21 #q1 #o0))
           ((move_base #q21 #q10 #o0))
           ((move_base #q21 #q11 #o0))
           ((move_base #q21 #q12 #o0))
           ((move_base #q21 #q13 #o0))
           ((move_base #q21 #q14 #o0))
           ((move_base #q21 #q15 #o0))
           ((move_base #q21 #q16 #o0))
           ((move_base #q21 #q17 #o0))
           ((move_base #q21 #q18 #o0))
           ((move_base #q21 #q19 #o0))
           ((move_base #q21 #q2 #o0))
           ((move_base #q21 #q20 #o0))
           ((move_base #q21 #q21 #o0))
           ((move_base #q21 #q22 #o0))
           ((move_base #q21 #q23 #o0))
           ((move_base #q21 #q24 #o0))
           ((move_base #q21 #q25 #o0))
           ((move_base #q21 #q26 #o0))
           ((move_base #q21 #q27 #o0))
           ((move_base #q21 #q3 #o0))
           ((move_base #q21 #q4 #o0))
           ((move_base #q21 #q6 #o0))
           ((move_base #q21 #q7 #o0))
           ((move_base #q21 #q8 #o0))
           ((move_base #q21 #q9 #o0))
           ((move_base #q21 v3 #o0))
           ((move_base #q21 #q5 #t81))
           ((move_base #q22 #o3 #o0))
           ((move_base #q22 #q0 #o0))
           ((move_base #q22 #q10 #o0))
           ((move_base #q22 #q11 #o0))
           ((move_base #q22 #q12 #o0))
           ((move_base #q22 #q13 #o0))
           ((move_base #q22 #q14 #o0))
           ((move_base #q22 #q15 #o0))
           ((move_base #q22 #q16 #o0))
           ((move_base #q22 #q17 #o0))
           ((move_base #q22 #q18 #o0))
           ((move_base #q22 #q19 #o0))
           ((move_base #q22 #q2 #o0))
           ((move_base #q22 #q20 #o0))
           ((move_base #q22 #q21 #o0))
           ((move_base #q22 #q22 #o0))
           ((move_base #q22 #q23 #o0))
           ((move_base #q22 #q24 #o0))
           ((move_base #q22 #q25 #o0))
           ((move_base #q22 #q26 #o0))
           ((move_base #q22 #q27 #o0))
           ((move_base #q22 #q3 #o0))
           ((move_base #q22 #q4 #o0))
           ((move_base #q22 #q6 #o0))
           ((move_base #q22 #q7 #o0))
           ((move_base #q22 #q8 #o0))
           ((move_base #q22 #q9 #o0))
           ((move_base #q22 v3 #o0))
           ((move_base #q22 #q5 #t90))
           ((move_base #q22 #q1 #t92))
           ((move_base #q23 #o3 #o0))
           ((move_base #q23 #q0 #o0))
           ((move_base #q23 #q10 #o0))
           ((move_base #q23 #q11 #o0))
           ((move_base #q23 #q12 #o0))
           ((move_base #q23 #q13 #o0))
           ((move_base #q23 #q14 #o0))
           ((move_base #q23 #q15 #o0))
           ((move_base #q23 #q16 #o0))
           ((move_base #q23 #q17 #o0))
           ((move_base #q23 #q18 #o0))
           ((move_base #q23 #q19 #o0))
           ((move_base #q23 #q2 #o0))
           ((move_base #q23 #q20 #o0))
           ((move_base #q23 #q21 #o0))
           ((move_base #q23 #q22 #o0))
           ((move_base #q23 #q23 #o0))
           ((move_base #q23 #q24 #o0))
           ((move_base #q23 #q25 #o0))
           ((move_base #q23 #q26 #o0))
           ((move_base #q23 #q27 #o0))
           ((move_base #q23 #q3 #o0))
           ((move_base #q23 #q4 #o0))
           ((move_base #q23 #q6 #o0))
           ((move_base #q23 #q7 #o0))
           ((move_base #q23 #q8 #o0))
           ((move_base #q23 #q9 #o0))
           ((move_base #q23 v3 #o0))
           ((move_base #q23 #q5 #t91))
           ((move_base #q23 #q1 #t93))
           ((move_base #q24 #o3 #o0))
           ((move_base #q24 #q0 #o0))
           ((move_base #q24 #q1 #o0))
           ((move_base #q24 #q10 #o0))
           ((move_base #q24 #q11 #o0))
           ((move_base #q24 #q12 #o0))
           ((move_base #q24 #q13 #o0))
           ((move_base #q24 #q14 #o0))
           ((move_base #q24 #q15 #o0))
           ((move_base #q24 #q16 #o0))
           ((move_base #q24 #q17 #o0))
           ((move_base #q24 #q18 #o0))
           ((move_base #q24 #q19 #o0))
           ((move_base #q24 #q2 #o0))
           ((move_base #q24 #q20 #o0))
           ((move_base #q24 #q21 #o0))
           ((move_base #q24 #q22 #o0))
           ((move_base #q24 #q23 #o0))
           ((move_base #q24 #q24 #o0))
           ((move_base #q24 #q25 #o0))
           ((move_base #q24 #q26 #o0))
           ((move_base #q24 #q27 #o0))
           ((move_base #q24 #q3 #o0))
           ((move_base #q24 #q4 #o0))
           ((move_base #q24 #q5 #o0))
           ((move_base #q24 #q6 #o0))
           ((move_base #q24 #q7 #o0))
           ((move_base #q24 #q8 #o0))
           ((move_base #q24 #q9 #o0))
           ((move_base #q24 v3 #o0))
           ((move_base #q25 #o3 #o0))
           ((move_base #q25 #q0 #o0))
           ((move_base #q25 #q10 #o0))
           ((move_base #q25 #q11 #o0))
           ((move_base #q25 #q12 #o0))
           ((move_base #q25 #q13 #o0))
           ((move_base #q25 #q14 #o0))
           ((move_base #q25 #q15 #o0))
           ((move_base #q25 #q16 #o0))
           ((move_base #q25 #q17 #o0))
           ((move_base #q25 #q18 #o0))
           ((move_base #q25 #q19 #o0))
           ((move_base #q25 #q2 #o0))
           ((move_base #q25 #q20 #o0))
           ((move_base #q25 #q21 #o0))
           ((move_base #q25 #q22 #o0))
           ((move_base #q25 #q23 #o0))
           ((move_base #q25 #q24 #o0))
           ((move_base #q25 #q25 #o0))
           ((move_base #q25 #q26 #o0))
           ((move_base #q25 #q27 #o0))
           ((move_base #q25 #q3 #o0))
           ((move_base #q25 #q4 #o0))
           ((move_base #q25 #q6 #o0))
           ((move_base #q25 #q7 #o0))
           ((move_base #q25 #q8 #o0))
           ((move_base #q25 #q9 #o0))
           ((move_base #q25 v3 #o0))
           ((move_base #q25 #q5 #t101))
           ((move_base #q25 #q1 #t103))
           ((move_base #q26 #o3 #o0))
           ((move_base #q26 #q0 #o0))
           ((move_base #q26 #q10 #o0))
           ((move_base #q26 #q11 #o0))
           ((move_base #q26 #q12 #o0))
           ((move_base #q26 #q13 #o0))
           ((move_base #q26 #q14 #o0))
           ((move_base #q26 #q15 #o0))
           ((move_base #q26 #q16 #o0))
           ((move_base #q26 #q17 #o0))
           ((move_base #q26 #q18 #o0))
           ((move_base #q26 #q19 #o0))
           ((move_base #q26 #q2 #o0))
           ((move_base #q26 #q20 #o0))
           ((move_base #q26 #q21 #o0))
           ((move_base #q26 #q22 #o0))
           ((move_base #q26 #q23 #o0))
           ((move_base #q26 #q24 #o0))
           ((move_base #q26 #q25 #o0))
           ((move_base #q26 #q26 #o0))
           ((move_base #q26 #q27 #o0))
           ((move_base #q26 #q3 #o0))
           ((move_base #q26 #q4 #o0))
           ((move_base #q26 #q6 #o0))
           ((move_base #q26 #q7 #o0))
           ((move_base #q26 #q8 #o0))
           ((move_base #q26 #q9 #o0))
           ((move_base #q26 v3 #o0))
           ((move_base #q26 #q5 #t102))
           ((move_base #q26 #q1 #t104))
           ((move_base #q27 #o3 #o0))
           ((move_base #q27 #q0 #o0))
           ((move_base #q27 #q1 #o0))
           ((move_base #q27 #q10 #o0))
           ((move_base #q27 #q11 #o0))
           ((move_base #q27 #q12 #o0))
           ((move_base #q27 #q13 #o0))
           ((move_base #q27 #q14 #o0))
           ((move_base #q27 #q15 #o0))
           ((move_base #q27 #q16 #o0))
           ((move_base #q27 #q17 #o0))
           ((move_base #q27 #q18 #o0))
           ((move_base #q27 #q19 #o0))
           ((move_base #q27 #q2 #o0))
           ((move_base #q27 #q20 #o0))
           ((move_base #q27 #q21 #o0))
           ((move_base #q27 #q22 #o0))
           ((move_base #q27 #q23 #o0))
           ((move_base #q27 #q24 #o0))
           ((move_base #q27 #q25 #o0))
           ((move_base #q27 #q26 #o0))
           ((move_base #q27 #q27 #o0))
           ((move_base #q27 #q3 #o0))
           ((move_base #q27 #q4 #o0))
           ((move_base #q27 #q5 #o0))
           ((move_base #q27 #q6 #o0))
           ((move_base #q27 #q7 #o0))
           ((move_base #q27 #q8 #o0))
           ((move_base #q27 #q9 #o0))
           ((move_base #q27 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q10 #o0))
           ((move_base #q3 #q11 #o0))
           ((move_base #q3 #q12 #o0))
           ((move_base #q3 #q13 #o0))
           ((move_base #q3 #q14 #o0))
           ((move_base #q3 #q15 #o0))
           ((move_base #q3 #q16 #o0))
           ((move_base #q3 #q17 #o0))
           ((move_base #q3 #q18 #o0))
           ((move_base #q3 #q19 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q20 #o0))
           ((move_base #q3 #q21 #o0))
           ((move_base #q3 #q22 #o0))
           ((move_base #q3 #q23 #o0))
           ((move_base #q3 #q24 #o0))
           ((move_base #q3 #q25 #o0))
           ((move_base #q3 #q26 #o0))
           ((move_base #q3 #q27 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q1 #t24))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q10 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q12 #o0))
           ((move_base #q4 #q13 #o0))
           ((move_base #q4 #q14 #o0))
           ((move_base #q4 #q15 #o0))
           ((move_base #q4 #q16 #o0))
           ((move_base #q4 #q17 #o0))
           ((move_base #q4 #q18 #o0))
           ((move_base #q4 #q19 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q20 #o0))
           ((move_base #q4 #q21 #o0))
           ((move_base #q4 #q22 #o0))
           ((move_base #q4 #q23 #o0))
           ((move_base #q4 #q24 #o0))
           ((move_base #q4 #q25 #o0))
           ((move_base #q4 #q26 #o0))
           ((move_base #q4 #q27 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q12 #o0))
           ((move_base #q5 #q14 #o0))
           ((move_base #q5 #q16 #o0))
           ((move_base #q5 #q19 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q20 #o0))
           ((move_base #q5 #q21 #o0))
           ((move_base #q5 #q24 #o0))
           ((move_base #q5 #q27 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q26 #t100))
           ((move_base #q5 #q6 #t15))
           ((move_base #q5 #q7 #t16))
           ((move_base #q5 #q8 #t25))
           ((move_base #q5 #q9 #t33))
           ((move_base #q5 #q10 #t34))
           ((move_base #q5 #q4 #t43))
           ((move_base #q5 #q13 #t47))
           ((move_base #q5 #q15 #t55))
           ((move_base #q5 #q17 #t60))
           ((move_base #q5 #q18 #t62))
           ((move_base #q5 #q22 #t86))
           ((move_base #q5 #q23 #t87))
           ((move_base #q5 #q25 #t99))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q10 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q12 #o0))
           ((move_base #q6 #q13 #o0))
           ((move_base #q6 #q14 #o0))
           ((move_base #q6 #q15 #o0))
           ((move_base #q6 #q16 #o0))
           ((move_base #q6 #q17 #o0))
           ((move_base #q6 #q18 #o0))
           ((move_base #q6 #q19 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q20 #o0))
           ((move_base #q6 #q21 #o0))
           ((move_base #q6 #q22 #o0))
           ((move_base #q6 #q23 #o0))
           ((move_base #q6 #q24 #o0))
           ((move_base #q6 #q25 #o0))
           ((move_base #q6 #q26 #o0))
           ((move_base #q6 #q27 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q5 #t13))
           ((move_base #q6 #q0 #t19))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q12 #o0))
           ((move_base #q7 #q13 #o0))
           ((move_base #q7 #q14 #o0))
           ((move_base #q7 #q15 #o0))
           ((move_base #q7 #q16 #o0))
           ((move_base #q7 #q17 #o0))
           ((move_base #q7 #q18 #o0))
           ((move_base #q7 #q19 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q20 #o0))
           ((move_base #q7 #q21 #o0))
           ((move_base #q7 #q22 #o0))
           ((move_base #q7 #q23 #o0))
           ((move_base #q7 #q24 #o0))
           ((move_base #q7 #q25 #o0))
           ((move_base #q7 #q26 #o0))
           ((move_base #q7 #q27 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q5 #t14))
           ((move_base #q7 #q0 #t20))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q12 #o0))
           ((move_base #q8 #q13 #o0))
           ((move_base #q8 #q14 #o0))
           ((move_base #q8 #q15 #o0))
           ((move_base #q8 #q16 #o0))
           ((move_base #q8 #q17 #o0))
           ((move_base #q8 #q18 #o0))
           ((move_base #q8 #q19 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q20 #o0))
           ((move_base #q8 #q21 #o0))
           ((move_base #q8 #q22 #o0))
           ((move_base #q8 #q23 #o0))
           ((move_base #q8 #q24 #o0))
           ((move_base #q8 #q25 #o0))
           ((move_base #q8 #q26 #o0))
           ((move_base #q8 #q27 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q12 #o0))
           ((move_base #q9 #q13 #o0))
           ((move_base #q9 #q14 #o0))
           ((move_base #q9 #q15 #o0))
           ((move_base #q9 #q16 #o0))
           ((move_base #q9 #q17 #o0))
           ((move_base #q9 #q18 #o0))
           ((move_base #q9 #q19 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q20 #o0))
           ((move_base #q9 #q21 #o0))
           ((move_base #q9 #q22 #o0))
           ((move_base #q9 #q23 #o0))
           ((move_base #q9 #q24 #o0))
           ((move_base #q9 #q25 #o0))
           ((move_base #q9 #q26 #o0))
           ((move_base #q9 #q27 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q5 #t31))
           ((move_base #q9 #q0 #t39))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q12 #o0))
           ((move_base v3 #q13 #o0))
           ((move_base v3 #q14 #o0))
           ((move_base v3 #q15 #o0))
           ((move_base v3 #q16 #o0))
           ((move_base v3 #q17 #o0))
           ((move_base v3 #q18 #o0))
           ((move_base v3 #q19 #o0))
           ((move_base v3 #q20 #o0))
           ((move_base v3 #q21 #o0))
           ((move_base v3 #q22 #o0))
           ((move_base v3 #q23 #o0))
           ((move_base v3 #q24 #o0))
           ((move_base v3 #q25 #o0))
           ((move_base v3 #q26 #o0))
           ((move_base v3 #q27 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t4))
           ((move_base v3 #q1 #t5))
           ((move_base v3 #q2 #t6))
           ((move_base v3 #q5 #t64))
           ((move_base v3 #q3 #t7))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p15 #g1 #q15 #t52))
           ((place v4 v12 p15 #g1 #q15 #t52))
           ((pick v4 v12 p18 #g1 #q10 #t28))
           ((place v4 v12 p18 #g1 #q10 #t28))
           ((pick v4 v12 p25 #g1 #q21 #t79))
           ((place v4 v12 p25 #g1 #q21 #t79))
           ((pick v4 v12 p28 #g1 #q19 #t63))
           ((place v4 v12 p28 #g1 #q19 #t63))
           ((pick v4 v12 p30 #g1 #o3 #o4))
           ((place v4 v12 p30 #g1 #o3 #o4))
           ((pick v4 v12 p33 #g1 #q23 #t85))
           ((place v4 v12 p33 #g1 #q23 #t85))
           ((pick v4 v12 p39 #g1 #o3 #o4))
           ((place v4 v12 p39 #g1 #o3 #o4))
           ((pick v4 v12 p4 #g1 #o3 #o4))
           ((place v4 v12 p4 #g1 #o3 #o4))
           ((pick v4 v12 p42 #g1 #q26 #t98))
           ((place v4 v12 p42 #g1 #q26 #t98))
           ((pick v4 v12 p7 #g1 #q2 #t2))
           ((place v4 v12 p7 #g1 #q2 #t2))
           ((pick v4 v12 p9 #g1 #q6 #t10))
           ((place v4 v12 p9 #g1 #q6 #t10))
           ((pick v4 v12 v13 #g1 #q1 #t1))
           ((place v4 v12 v13 #g1 #q1 #t1))
           ((pick v4 v14 #o2 #g2 #o3 #o4))
           ((place v4 v14 #o2 #g2 #o3 #o4))
           ((pick v4 v14 p10 #g2 #q8 #t21))
           ((place v4 v14 p10 #g2 #q8 #t21))
           ((pick v4 v14 p16 #g2 #o3 #o4))
           ((place v4 v14 p16 #g2 #o3 #o4))
           ((pick v4 v14 p19 #g2 #q9 #t27))
           ((place v4 v14 p19 #g2 #q9 #t27))
           ((pick v4 v14 p21 #g2 #q13 #t46))
           ((place v4 v14 p21 #g2 #q13 #t46))
           ((pick v4 v14 p23 #g2 #o3 #o4))
           ((place v4 v14 p23 #g2 #o3 #o4))
           ((pick v4 v14 p26 #g2 #q18 #t61))
           ((place v4 v14 p26 #g2 #q18 #t61))
           ((pick v4 v14 p3 #g2 #q17 #t59))
           ((place v4 v14 p3 #g2 #q17 #t59))
           ((pick v4 v14 p31 #g2 #o3 #o4))
           ((place v4 v14 p31 #g2 #o3 #o4))
           ((pick v4 v14 p34 #g2 #q22 #t84))
           ((place v4 v14 p34 #g2 #q22 #t84))
           ((pick v4 v14 p40 #g2 #o3 #o4))
           ((place v4 v14 p40 #g2 #o3 #o4))
           ((pick v4 v14 p43 #g2 #q25 #t97))
           ((place v4 v14 p43 #g2 #q25 #t97))
           ((pick v4 v14 p6 #g2 #q4 #t8))
           ((place v4 v14 p6 #g2 #q4 #t8))
           ((pick v4 v14 v15 #g2 #q5 #t9))
           ((place v4 v14 v15 #g2 #q5 #t9))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p11 #g0 #q7 #t12))
           ((place v4 v8 p11 #g0 #q7 #t12))
           ((pick v4 v8 p17 #g0 #q16 #t58))
           ((place v4 v8 p17 #g0 #q16 #t58))
           ((pick v4 v8 p20 #g0 #q11 #t35))
           ((place v4 v8 p20 #g0 #q11 #t35))
           ((pick v4 v8 p22 #g0 #q14 #t49))
           ((place v4 v8 p22 #g0 #q14 #t49))
           ((pick v4 v8 p24 #g0 #o3 #o4))
           ((place v4 v8 p24 #g0 #o3 #o4))
           ((pick v4 v8 p27 #g0 #q20 #t67))
           ((place v4 v8 p27 #g0 #q20 #t67))
           ((pick v4 v8 p29 #g0 #o3 #o4))
           ((place v4 v8 p29 #g0 #o3 #o4))
           ((pick v4 v8 p32 #g0 #q24 #t96))
           ((place v4 v8 p32 #g0 #q24 #t96))
           ((pick v4 v8 p38 #g0 #o3 #o4))
           ((place v4 v8 p38 #g0 #o3 #o4))
           ((pick v4 v8 p41 #g0 #q27 #t109))
           ((place v4 v8 p41 #g0 #q27 #t109))
           ((pick v4 v8 p5 #g0 #q12 #t42))
           ((place v4 v8 p5 #g0 #q12 #t42))
           ((pick v4 v8 p8 #g0 #q3 #t3))
           ((place v4 v8 p8 #g0 #q3 #t3))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The robot starts with object `v14` at `v15` and `v8` at `v9` and `v12` at `v13`. The goal is to place all three objects on the surface `v16`. Since `v16` has no continuous value, it means any placement on a surface whose continuous value is given will suffice for the purpose of planning. In this case, `v11` is the other surface that is provided with continuous value. The `v16` object is a dummy surface; therefore, we will select another surface that has a continuous value, `v11`.
           
           First, the robot should pick `v14` from `v15` and place it at an available position on `v16` (dummy, so choosing `v11`). Then it should pick `v8` from `v9` and place it at an available position on `v16` (dummy, so choosing `v11`). Finally, it picks `v12` from `v13` and places it at an available position on `v16` (dummy, so choosing `v11`). It is important to find collision-free poses for the objects. The bounding box of `v11` is ((-0.3, -0.6), (0.3, 0.6)). The bounding box of `v8` is ((-0.035, -0.035), (0.035, 0.035)). The bounding box of `v12` is ((-0.035, -0.085), (0.035, -0.015)). The bounding box of `v14` is ((0.015, -0.035), (0.085, 0.035)).
           
           We need to make sure the poses are collision free.
           The object `v14` is currently at `v15` (0.1, 0.386, 0.781).
           The object `v8` is currently at `v9` (-0.13, 0.431, 0.781).
           The object `v12` is currently at `v13` (0.23, 0.223, 0.781).
           
           I will assign the following target poses on `v11` (which represents `v16`)
           - `v14` to #o2 with (x, y, z, theta) = (0.0, 0.0, 0.781, 0.0) on `v11`.
           - `v8` to #o2 with (x, y, z, theta) = (0.1, 0.1, 0.781, 0.0) on `v11`.
           - `v12` to #o2 with (x, y, z, theta) = (-0.1, -0.1, 0.781, 0.0) on `v11`.
           Note: The problem description states "if the plan requires multiple different objects to be placed simultaneously at the same pose starting with '#', then you must provide a different continuous value for *each* object at that pose (not one that works for all), specifying the pose name, object name, and surface name."
           However, there's only one continuous pose #o2 in the initial state. The given actions indicate that multiple objects could use the same #o2 pose definition and use distinct continuous values.
           So I will define #o2 three times for three objects with different coordinates.
           
           --Plan--:
           (pick v4 v14 v15 #g2 #q5 #t9)
           (place v4 v14 #o2 #g2 #o3 #o4)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (place v4 v8 #o2 #g0 #o3 #o4)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (place v4 v12 #o2 #g1 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v11): (0.0 0.0 0.781 0.0)
           (#o2 v8 v11): (0.1 0.1 0.781 0.0)
           (#o2 v12 v11): (-0.1 -0.1 0.781 0.0)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q5) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the base configuration `q5` was not met for the first pick action. The robot needs to move its base to the appropriate configuration before executing a pick or place action. I will adjust the plan to include `move_base` actions to set the correct base configuration (`atbconf`).
           
           The initial base configuration is `v3`.
           For picking `v14` at `v15` with grasp `g2`, the kin value specifies `q5` and `t9`. So, the robot must first move to `q5`.
           For picking `v8` at `v9` with grasp `g0`, the kin value specifies `q0` and `t0`. So, the robot must first move to `q0`.
           For picking `v12` at `v13` with grasp `g1`, the kin value specifies `q1` and `t1`. So, the robot must first move to `q1`.
           
           I will use the same object poses for placement as before:
           - `v14` to #o2 with (x, y, z, theta) = (0.0, 0.0, 0.781, 0.0) on `v11`.
           - `v8` to #o2 with (x, y, z, theta) = (0.1, 0.1, 0.781, 0.0) on `v11`.
           - `v12` to #o2 with (x, y, z, theta) = (-0.1, -0.1, 0.781, 0.0) on `v11`.
           
           --Plan--:
           (move_base v3 #q5 #t64)
           (pick v4 v14 v15 #g2 #q5 #t9)
           (place v4 v14 #o2 #g2 #o3 #o4)
           (move_base #q5 #q0 #o0)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (place v4 v8 #o2 #g0 #o3 #o4)
           (move_base #q0 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (place v4 v12 #o2 #g1 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v11): (0.0 0.0 0.781 0.0)
           (#o2 v8 v11): (0.1 0.1 0.781 0.0)
           (#o2 v12 v11): (-0.1 -0.1 0.781 0.0)

User:      The plan you provided is not valid because: `Precondition fact ('supported', v8, #o2, v16) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan previously failed because the `supported` precondition for placing `v8` at `#o2` on `v16` was not satisfied. The `supported` predicate for `#o2` implies that a specific surface is provided for `#o2` in the initial state. In the initial state, we have `supported(v8, #o2, v10)` and `supported(v8, #o2, v16)`. Since `v16` is a dummy surface and we are mapping to `v11` for placements, we must also ensure that there is a `supported` fact for `#o2` with `v11` as the surface. The current initial state provides `supported(v8, #o2, v16)` and `supported(v12, #o2, v16)` and `supported(v14, #o2, v16)`. The goal is to place these objects on `v16`. As `v16` is a dummy surface, the system expects a collision-free pose on `v11`. To satisfy the precondition `supported(v8, #o2, v16)`, the `place` action should be `place v4 v8 #o2 #g0 #o3 #o4`, but the continuous value for `#o2` for `v8` will be specified on `v11`. The `supported` predicate is checked against the provided pose, and it implicitly expects that the chosen pose is on the *target surface*. The target surface in the goal is `v16`, which is a dummy surface. I must use `#o2` for `v16` and ensure `supported` for that combination exists. Looking at the `kin` predicates for placing objects to `#o2`, they use `o3` as the base configuration and `o4` as the arm trajectory.
           
           My previous reasoning about setting up custom continuous values for `#o2` (three different ones) for objects on the dummy surface `v16` was correct. The issue is with the `supported` predicate not being explicitly stated for `#o2` on `v16` for *all* objects that need to be placed there, when `v16` is the target surface. The initial state *does* provide `supported(v8, #o2, v16)`, `supported(v12, #o2, v16)`, and `supported(v14, #o2, v16)`. So this condition *is* met.
           
           The problem lies with the `kin` and `basemotion` continuous parameters provided in the original input. For placement, `o3` for `basemotion` and `o4` for `atraj` are used. It's likely that `o3` might not be the correct base configuration for placing `v8`, `v12`, or `v14` at the respective `#o2` locations.
           
           Let's re-examine the `kin` predicates for placing objects to `#o2`:
           - `kin(v4, v12, #o2, #g1, #o3, #o4)`
           - `kin(v4, v14, #o2, #g2, #o3, #o4)`
           - `kin(v4, v8, #o2, #g0, #o3, #o4)`
           
           These all use `o3` for the base configuration and `o4` for the arm trajectory. The problem statement says "Any object that starts with a '#' represents a continuous parameter (e.g., a trajectory, or a pose) that has not yet been computed. If your plan uses some object #<name> (starting with '#') such that `pose(obj, #<name>)` is in the initial state for some `obj`, then you must provide a continuous value for the pose". The input implies that `#o2` is a pre-defined pose for *any* of the objects, not specific to one. I will continue using `#o2` as a generic placeholder for the new placements on `v11` (representing `v16`).
           
           The issue must be with the base configurations to use for placement. The `place` action requires `atbconf(?q)`. The `kin` relations for `#o2` all use `#o3`. However, `#o3` is just a placeholder `bconf(#o3)` in the initial state. The `move_base` action requires a concrete base configuration.
           
           Given the existing kin relations for placing objects to `#o2` all specify `#o3` as the base configuration, and `#o3` is a base configuration that is not initially `atbconf`, the plan needs to reach `o3`.
           
           Let's retry, using the base configuration `#o3` for placement, and ensure the robot moves to it.
           
           --Plan--:
           (move_base v3 #q5 #t64)
           (pick v4 v14 v15 #g2 #q5 #t9)
           (move_base #q5 #o3 #o0)
           (place v4 v14 #o2 #g2 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 #o2 #g0 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v12 #o2 #g1 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v11): (0.0 0.0 0.781 0.0)
           (#o2 v8 v11): (0.1 0.1 0.781 0.0)
           (#o2 v12 v11): (-0.1 -0.1 0.781 0.0)

User:      The plan you provided is not valid because: `Precondition fact ('supported', v8, #o2, v16) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The persistent error `Precondition fact ('supported', v8, #o2, v16) is not satisfied!` despite `supported(v8, #o2, v16)` being in the initial state, suggests a misunderstanding of how the system interprets the dummy surface `v16` and the pose `#o2`.
           
           The prompt states: "If your plan uses some object #<name> (starting with '#') such that `pose(obj, #<name>)` is in the initial state for some `obj`, then you must provide a continuous value for the pose, specifying the pose name, object name, and surface name. ... Tricky detail: if the continuous value for a surface is not provided, then it is a dummy surface. When placing objects supported at dummy surfaces, choose any other surface whose continuous value is provided and provide a placement on that surface."
           
           Here, `v16` is a dummy surface (no continuous value provided for it), and `v11` has a continuous value (its AABB). The goal is `on(v8, v16)`, `on(v12, v16)`, `on(v14, v16)`. The `on` axiom states `on(?o, ?r)` is derived from `supported(?o, ?p, ?r)` and `atpose(?o, ?p)`.
           
           My current interpretation is that the `supported` facts in the initial state, like `supported(v8, #o2, v16)`, are sufficient, and my provided poses for `#o2` on `v11` are correctly handling the dummy surface aspect. However, the error continues. This implies that even though the `supported` facts exist for `#o2` on `v16` in the initial state, the system might be expecting a *different* `#o2` for placement, one that is linked directly to a non-dummy surface in the `supported` predicate for the `place` action's precondition to be satisfied.
           
           Let's look at the problem description again: "If the plan you select uses a pose that does not begin with '#', then you need not provide a value for it, as one already exists." And "If your plan uses some object #<name> (starting with '#') such that `pose(obj, #<name>)` is in the initial state for some `obj`, then you must provide a continuous value for the pose, specifying the pose name, object name, and surface name."
           
           The key here might be that `pose(v8, #o2)` is not in the initial state, only `supported(v8, #o2, v16)`. If `#o2` is a placeholder for a new pose, not necessarily one already defined as `pose(obj, #o2)`, then `supported(v8, #o2, v16)` just means "there exists *some* pose `#o2` that would support `v8` on `v16`". For the `place` action, the object must be placed at a specific pose `p` that is also supported by the target region `r`. So, `supported(v8, #o2, v16)` for the place action's precondition needs to be explicitly satisfied.
           
           Instead of defining `#o2` as a new continuous value, I should define *new* poses for each object to be placed on `v11` (representing `v16`), and those new poses would then be supported by `v11`.
           
           Let's try creating three new poses: `#p_v14_on_v11`, `#p_v8_on_v11`, and `#p_v12_on_v11`. Then I will modify the plan to place objects at these specific new poses. This way, the system will explicitly understand that these poses are `supported` on `v11`, which acts as the stand-in for `v16`.
           
           The `kin` relations are all for `#o2`. This is a problem. The provided `kin` actions are only defined for `#o2`. If I create new poses, there are no `kin` actions for them, making the goal unreachable with the provided action instances.
           
           This means I **must** use `#o2` for placement. The continuous value for `#o2` should be a valid pose on `v11` (which substitutes for `v16`). The error implies that the system does not recognize `#o2` as a `supported` pose on `v16` for the given objects, even though the initial state has `supported(v8, #o2, v16)`, etc.
           
           Perhaps the issue is that the `kin` relations themselves require a pre-defined base config and trajectory (`#o3`, `#o4`). These are placeholders, so if they are meant to be concrete values like `q0`, `t0`, etc., they should have been specified as such in the `kin` relations.
           
           Let me review the `kin` relations for picking and placing related to `#o2`.
           `kin(v4, v12, #o2, #g1, #o3, #o4)`
           `kin(v4, v14, #o2, #g2, #o3, #o4)`
           `kin(v4, v8, #o2, #g0, #o3, #o4)`
           
           And `bconf(#o3)` and `atraj(#o4)` are in the initial state. This means `#o3` and `#o4` are generic continuous objects, not specific configurations/trajectories. The system is supposed to compute these.
           
           The only way for the `supported` precondition `supported(v8, #o2, v16)` to be satisfied is for `#o2` to be a pose where `v8` *is* supported on `v16`. Since `v16` is a dummy surface and we are providing poses on `v11`, the system internally maps this. The error `Precondition fact ('supported', v8, #o2, v16) is not satisfied!` is puzzling. This implies that the provided `kin` relation using `#o2` is somehow invalid when used with `v16` (the dummy surface).
           
           Maybe I should explicitly choose one of the non-dummy surfaces that has a given continuous value in the initial state for *all* target objects, and map the `v16` goal to that surface. The surface `v11` is provided with an AABB. All objects `v8`, `v12`, `v14` are `stackable` on `v16` and also on `v10` (which is not defined as having a continuous value). So `v11` is the best choice to act as `v16`.
           
           Let's assume the continuous pose for `#o2` is being rejected by the system in combination with `v16`. The problem states: "If the plan you select uses a pose that does not begin with '#', then you need not provide a value for it, as one already exists." And "Any fact that is not explicitly stated in the initial state is *false*."
           
           The facts `supported(v8, #o2, v16)`, `supported(v12, #o2, v16)`, `supported(v14, #o2, v16)` are explicitly stated. So, the system *should* consider them true.
           
           Could the issue be that `basemotion` for `#o3` or `atraj` for `#o4` are implicitly required to be a valid path to `#o2` on `v11`?
           The `kin` predicates define the base configuration `q` and arm trajectory `t` for a given `object`, `pose`, and `grasp`. So, `#o3` and `#o4` are continuous parameters that need to be derived for the specific `#o2` that is defined. The problem says, "Any object that starts with a '#' represents a continuous parameter (e.g., a trajectory, or a pose) that has not yet been computed."
           
           If `o3` and `o4` are uncomputed continuous parameters (which they are, as they start with '#'), then the system is supposed to compute them. However, for `move_base`, `basemotion(start, traj, end)` is required. We have `basemotion(#q5, #o0, #o3)` and other combinations. The `place` actions specify `o3` as the target base configuration.
           
           Perhaps the issue is with using `#o3` and `#o4` directly in the plan without a concrete base configuration value.
           The available `kin` actions that use `#o3` and `#o4` (for placing at `#o2`) do not specify *which* pre-computed concrete base configurations (`q0`-`q27` or `v3`) are associated with `#o3`. This means `#o3` is also a new base configuration to be computed. Since I cannot explicitly compute it, I need to make sure `move_base` actions that specify `#o3` exist. They do. For instance, `(move_base #q5 #o3 #o0)`. This means `#o3` is being treated as a specific new configuration to move to.
           
           So, the plan should correctly set the robot to `o3` to place the objects at the new, user-defined `#o2` poses (on `v11`, representing `v16`).
           
           Let's consider the initial state `supported(v8, #o2, v16)`. The goal is `on(v8, v16)`. If I place `v8` at `#o2`, then `atpose(v8, #o2)` will be true. Together with `supported(v8, #o2, v16)`, `on(v8, v16)` would be true. So the problem is likely in how `#o2` is being interpreted by the system regarding the `supported` precondition.
           
           I will stick to the same poses for #o2, but I will make sure the `kin` relations are aligned with actual base configurations defined in the provided actions for `pick` and `place`. All `pick` and `place` actions for `#o2` that are available *only* use `#o3` and `#o4` for base config and arm trajectory. So, I am forced to use those.
           
           Given the error, the most likely remaining issue is related to how the "dummy surface" handling interacts with the explicit `supported` facts for `#o2` on `v16`. Since `v16` is a dummy surface, the system will use `v11` for collision checking. My provided poses for `#o2` on `v11` are meant to address this. If this continues to fail, it means the structure of the provided `kin` facts related to `#o2` and the dummy surface `v16` might be inherently problematic, or I am still misinterpreting the "dummy surface" requirement.
           
           Let's assume the error is not about the continuous pose values I am providing, but something with the `supported` predicate itself. If `supported(v8, #o2, v16)` is true, it should pass. The error implies it is *false*. How can it be false if it's explicitly in the initial state? This could mean that for a "dummy surface", the `supported` predicate for the target pose (`#o2`) must *also* be explicitly stated for the *replacement* surface (`v11`). The problem states: "When placing objects supported at dummy surfaces, choose any other surface whose continuous value is provided and provide a placement on that surface." It doesn't say that `supported(obj, pose, real_surface)` has to be explicitly in the initial state, just that the placement is on the `real_surface`.
           
           This is a critical point. If the system expects `supported(v8, #o2, v11)` to be true, but it's not in the initial state, that could be the problem. But I cannot add facts to the initial state. The problem implies that by providing a pose on `v11`, the `supported` predicate is implicitly satisfied because the object is stably placed on the surface.
           
           This is a tricky error given the explicit `supported` facts. I will re-examine the `kin` parameters in case I'm missing something there. No, the `kin` relations for `#o2` are consistently `#o3` and `#o4`.
           
           I will try again, but if this fails, the problem definition might be at odds with the action execution logic for dummy surfaces and placeholder `kin` parameters.
           
           --Plan--:
           (move_base v3 #q5 #t64)
           (pick v4 v14 v15 #g2 #q5 #t9)
           (move_base #q5 #o3 #o0)
           (place v4 v14 #o2 #g2 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 #o2 #g0 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v12 #o2 #g1 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v11): (0.0 0.0 0.781 0.0)
           (#o2 v8 v11): (0.1 0.1 0.781 0.0)
           (#o2 v12 v11): (-0.1 -0.1 0.781 0.0)

User:      The plan you provided is not valid because: `Precondition fact ('supported', v8, #o2, v16) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The persistent failure on `supported(v8, #o2, v16)` despite it being an explicit initial state fact for `v16` and my handling of `v16` as a dummy surface suggests a deeper problem in interpretation. The error `supported(v8, #o2, v16) is not satisfied!` literally means that this specific fact is evaluated as false *at the moment of the `place` action*. This implies either:
           1. The problem is not accepting the implicit `supported` for a dummy surface with a user-defined pose.
           2. The initial state `supported(v8, #o2, v16)` is somehow being invalidated before the `place` action. This seems unlikely as there are no actions that would remove `supported` facts.
           3. The continuous parameter `#o2` for `v8` (and `v12`, `v14`) is conflicting with something internally, preventing the `supported` predicate from being true.
           4. There is a more specific `supported` predicate that the system is looking for in conjunction with the placement, beyond the explicit initial fact.
           
           Let's re-read the crucial part: "If your plan uses some object #<name> (starting with '#') such that `pose(obj, #<name>)` is in the initial state for some `obj`, then you must provide a continuous value for the pose... Tricky detail: if the continuous value for a surface is not provided, then it is a dummy surface. When placing objects supported at dummy surfaces, choose any other surface whose continuous value is provided and provide a placement on that surface."
           
           The current formulation of the problem gives `supported(v8, #o2, v16)` in the initial state. `v16` is a dummy surface. My interpretation for `#o2` has been to provide specific coordinates for it on `v11` (a non-dummy surface). This *should* satisfy the "placement on that surface" part.
           
           What if the system *requires* the pose parameter in the `place` action to be a `pose(obj, p)` fact in the initial state, even for placeholder `#` poses? The initial state only has `pose(v12, p4)`, `pose(v8, p17)`, `pose(v14, v15)`, etc., but *not* `pose(v8, #o2)`. This might be the crux of the issue. The `place` action needs `kin(?a, ?o, ?p, ?g, ?q, ?t)` and `supported(?o, ?p, ?r)`. If `?p` is `#o2`, then `supported(v8, #o2, v16)` is true from the initial state. But perhaps `#o2` is only a *conceptual* pose, not a concrete one that can be used directly for placement if no object is already *at* `pose(obj, #o2)` in the initial state.
           
           If `#o2` isn't a pre-existing pose, then the `kin` facts `kin(v4, v8, #o2, #g0, #o3, #o4)` imply that `#o2` *will be* the pose for `v8` at the time of placement. The system generates a valid numerical value for `#o2` *based on my specification in the Poses section*.
           
           Let's consider the scenario that the system implies `supported(obj, pose, surf)` should hold for `surf` being `v11`, not `v16`. But the goal requires `on(obj, v16)`.
           The only way to achieve `on(obj, v16)` is to make `atpose(obj, p)` true and have `supported(obj, p, v16)` be true. The `supported(obj, #o2, v16)` facts *are* in the initial state.
           
           Could it be that the `kin` parameters (`#o3`, `#o4`) are the problem? They are uncomputed and are used directly in `place` actions. The `move_base` actions must use concrete base configurations. If the system is trying to validate `supported` before it can even calculate `#o3` and `#o4` (which might depend on `#o2`), this could cause an issue.
           
           However, the provided `place` action instances *explicitly* use `#o3` and `#o4`. For example, `(place v4 v14 #o2 #g2 #o3 #o4)`. This implies that `#o3` and `#o4` are acceptable placeholders for continuous parameters that the system is expected to compute.
           
           I have exhausted my interpretations of the "supported" predicate and dummy surfaces. The only remaining possibility is a very literal reading: if `supported(v8, #o2, v16)` is checked, it needs to be *true* and if for some reason it's not (even if declared), then there's no fix using just my provided actions and given facts.
           
           One last attempt at the dummy surface: the problem states "When placing objects supported at dummy surfaces, choose any other surface whose continuous value is provided and provide a placement on that surface." This means `v11` is indeed the target for the pose. But the `supported` predicate for the `place` action precondition explicitly refers to `v16`.
           
           What if the target pose *must* be an existing, non-placeholder pose that is already `supported` on the dummy surface `v16`? No such poses exist in the initial state.
           
           Let's rethink from scratch, adhering strictly to the provided initial state and action instances.
           Initial State:
           - `atpose(v14, v15)`
           - `atpose(v8, v9)`
           - `atpose(v12, v13)`
           - `handempty(v4)`
           - `atbconf(v3)`
           - `supported(v8, #o2, v16)`
           - `supported(v12, #o2, v16)`
           - `supported(v14, #o2, v16)`
           - `kin` relations for `pick` and `place` for `#o2` all using `#o3` and `#o4`.
           
           Goal: `on(v8, v16)` AND `on(v12, v16)` AND `on(v14, v16)`.
           `on(o, r)` is defined as `supported(o, p, r)` AND `atpose(o, p)`.
           
           So, to achieve the goal, I need to make `atpose(v8, #o2)`, `atpose(v12, #o2)`, and `atpose(v14, #o2)` true. This implies picking objects from their current poses and placing them at `#o2`. The problem is when I perform the `place` action.
           
           The preconditions for `place` are:
           - `kin(?a, ?o, ?p, ?g, ?q, ?t)`: Satisfied by `kin(v4, v8, #o2, #g0, #o3, #o4)` and similar for other objects.
           - `atgrasp(?a, ?o, ?g)`: Satisfied by previous `pick`.
           - `atbconf(?q)`: Satisfied by a `move_base` to `#o3`.
           - `~unsafepose(?o, ?p)`: Needs `#o2` to be collision-free. Handled by providing collision-free poses.
           - `~unsafeapproach(?o, ?p, ?g)`: Needs approach to `#o2` to be collision-free. Handled by the system if the pose is good.
           - `~unsafeatraj(?t)`: Trajectory should be collision-free. Handled by the system if `o4` is computable.
           
           The specific error is `Precondition fact ('supported', v8, #o2, v16) is not satisfied!`. This is the most confusing part. If it's literally in the initial state, it *must* be true.
           
           Unless, when a dummy surface is involved, `supported(obj, #o2, dummy_surface)` is *only* meant to be true if `#o2` is a predefined, non-'#' pose. And for '#' poses on dummy surfaces, the `supported` predicate is derived from a collision check against the *actual* surface that I provide. If this is the case, then just having `supported(v8, #o2, v16)` is not enough. The system is trying to confirm `supported(v8, #o2, v16)` but `v16` is a dummy, so it tries `supported(v8, #o2, v11)`. Since `supported(v8, #o2, v11)` is NOT in the initial state, and it's not being implicitly derived from the provided pose values, it fails.
           
           If this very specific interpretation is true, I can only solve it if there's a different approach. The problem implies I *cannot* add `supported` facts.
           
           Perhaps there are other `supported` facts in the initial state for objects `v8`, `v12`, `v14` on `v11` at existing concrete poses (not `#o2`). Let me check.
           `supported(v8, p17, v16)`, `supported(v8, p11, v16)`, `supported(v8, p24, v16)`, etc. These are all on `v16`.
           `supported(v12, p25, v16)`, etc.
           `supported(v14, p6, v16)`, etc.
           These are all on `v16`. None are on `v11`.
           
           There are two `supported` facts directly on `v11`:
           `supported(v8, v9, v11)`
           `supported(v14, v15, v11)`
           These are current locations. `v12` is on `v13` on `v11`: `supported(v12, v13, v11)`.
           
           This is a breakthrough. The objects *are already* supported on `v11` at their *current* poses.
           `v8` at `v9` on `v11`
           `v14` at `v15` on `v11`
           `v12` at `v13` on `v11`
           
           The goal is to put them on `v16`. Since `v16` is a dummy surface and `v11` is the actual surface, the goal *is already satisfied* if `v9`, `v15`, `v13` can be considered poses on `v16`.
           
           The definition of `on` is `supported(?o, ?p, ?r)` and `atpose(?o, ?p)`.
           Since `supported(v8, v9, v11)` and `atpose(v8, v9)`, this means `on(v8, v11)` is true.
           If `v11` is substituting for `v16`, then `on(v8, v16)` would be true too.
           However, the initial state explicitly has `supported(v8, v9, v11)`, NOT `supported(v8, v9, v16)`.
           The goal explicitly asks for `on(v8, v16)`, `on(v12, v16)`, `on(v14, v16)`.
           The system is checking for `supported(v8, #o2, v16)`.
           
           This implies the system does not simply substitute `v11` for `v16` for the `supported` predicate check. It expects `supported(v8, p, v16)` to be true, regardless of `v16` being a dummy. The problem is explicitly giving `supported(v8, #o2, v16)` as an initial fact. If it's there, it *must* be true.
           
           There are no other poses `p` where `supported(v8, p, v16)` holds and `p` is not a `#` pose. This means I HAVE to use `#o2`.
           
           This is highly ambiguous. I will make a final attempt, assuming that the continuous value for `#o2` needs to be distinct *and* I need to pick and place using `#o2` as a generic pose for all objects. If this fails again, I believe the problem is not solvable with the current interpretation and given information.
           
           One possibility is that `basemotion(#q5, #o0, #o3)` does not exist for the actual place action.
           Let's check `move_base` actions that end in `#o3`:
           `basemotion(#q13, #o0, #o3)`
           `basemotion(#q4, #o0, #o3)`
           `basemotion(#q18, #o0, #o3)`
           `basemotion(#q9, #o0, #o3)`
           `basemotion(#q11, #o0, #o3)`
           `basemotion(#q26, #o0, #o3)`
           `basemotion(#q27, #o0, #o3)`
           `basemotion(#q19, #o0, #o3)`
           `basemotion(#q15, #o0, #o3)`
           `basemotion(#q12, #o0, #o3)`
           `basemotion(#q23, #o0, #o3)`
           `basemotion(#q5, #o0, #o3)` - This one exists. My last plan used `(move_base #q5 #o3 #o0)`, which is `basemotion(start, traj, end)`. Here, `traj` is `#o0`. This is valid.
           
           I am forced to conclude that the `supported(v8, #o2, v16)` failing is a bug in the problem statement or evaluation, given the facts explicitly stated as true in the initial state and the rule about dummy surfaces. I have tried to satisfy all preconditions. I will resubmit the last plan.
           
           --Plan--:
           (move_base v3 #q5 #t64)
           (pick v4 v14 v15 #g2 #q5 #t9)
           (move_base #q5 #o3 #o0)
           (place v4 v14 #o2 #g2 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 #o2 #g0 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v12 #o2 #g1 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v11): (0.0 0.0 0.781 0.0)
           (#o2 v8 v11): (0.1 0.1 0.781 0.0)
           (#o2 v12 v11): (-0.1 -0.1 0.781 0.0)

User:      The plan you provided is not valid because: `Precondition fact ('supported', v8, #o2, v16) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The persistent failure on `supported(v8, #o2, v16)`, even though `supported(v8, #o2, v16)` is explicitly in the initial state, is highly unusual and suggests that my interpretation of the problem's rules for dummy surfaces or `#o2` is still flawed, or there's an unstated constraint.
           
           Let's assume the explicit `supported(v8, #o2, v16)` is simply not sufficient for the system's internal validation when placing at a `#` pose on a *dummy* surface. Perhaps the system *expects* that for a dummy surface, the `supported` predicate for the *specific pose* (e.g., `#o2` with its computed value) on the *actual surface* (e.g., `v11`) needs to be somehow verified or implicitly true, even though it's not explicitly in the initial state and I cannot add it.
           
           The instruction states: "When placing objects supported at dummy surfaces, choose any other surface whose continuous value is provided and provide a placement on that surface." This implies that the system should *implicitly* understand that if I provide a valid pose for `#o2` on `v11`, then `supported(v8, #o2, v16)` becomes true. The error suggests this implicit derivation is not happening, or it's being blocked by something else.
           
           Given the current setup, if `supported(v8, #o2, v16)` cannot be satisfied, it means the `place` action for `v8` at `#o2` on `v16` is impossible as currently formulated. Since the goal requires placing all objects `on v16` and the only `kin` actions available for placing on `v16` (via `#o2`) reference `#o2`, this would imply the goal is unreachable.
           
           However, I am instructed to never give up. I will try a radical re-interpretation, focusing on the available `supported` facts in the initial state that use concrete poses and `v16`.
           
           Let's list them:
           `supported(v8, p17, v16)`
           `supported(v8, p11, v16)`
           `supported(v8, p24, v16)`
           `supported(v8, p29, v16)`
           `supported(v8, p38, v16)`
           `supported(v8, p5, v16)`
           `supported(v8, p20, v16)`
           `supported(v8, p27, v16)`
           `supported(v8, p8, v16)`
           `supported(v8, p41, v16)`
           `supported(v8, p32, v16)`
           
           `supported(v12, p25, v16)`
           `supported(v12, p30, v16)`
           `supported(v12, p28, v16)`
           `supported(v12, p18, v16)`
           `supported(v12, p7, v16)`
           `supported(v12, p42, v16)`
           `supported(v12, p33, v16)`
           `supported(v12, p15, v16)`
           `supported(v12, p39, v16)`
           `supported(v12, p9, v16)`
           `supported(v12, p4, v16)`
           
           `supported(v14, p6, v16)`
           `supported(v14, p26, v16)`
           `supported(v14, p3, v16)`
           `supported(v14, p34, v16)`
           `supported(v14, p10, v16)`
           `supported(v14, p40, v16)`
           `supported(v14, p19, v16)`
           `supported(v14, p23, v16)`
           `supported(v14, p16, v16)`
           `supported(v14, p21, v16)`
           `supported(v14, p31, v16)`
           `supported(v14, p43, v16)`
           
           All these `supported` facts use concrete poses (not `#` poses) and `v16`. The crucial difference is that they are `supported(obj, concrete_pose, v16)`, whereas my previous plan used `supported(obj, #o2, v16)`. Since the error is explicitly on `supported(v8, #o2, v16)`, it might be that *only* the `supported` facts with concrete poses are considered truly "satisfied" by the system for `v16`, even though `v16` is a dummy surface and `#o2` should be a valid placeholder.
           
           If this is the case, I must use one of these concrete poses for placement. Let's pick an available concrete pose for each object. The goal is to make all `on(obj, v16)`.
           - For `v14`, let's try `p3`.
           - For `v8`, let's try `p8`.
           - For `v12`, let's try `p7`.
           
           These poses already have `supported(v14, p3, v16)`, `supported(v8, p8, v16)`, `supported(v12, p7, v16)` in the initial state. This seems like a more robust approach to satisfy the `supported` precondition.
           
           Now I need to find the corresponding `kin` relations:
           - `pick v4 v14 v15 #g2 #q5 #t9` (Current `atpose(v14, v15)`)
           - `place v4 v14 p3 #g2 #q17 #t59` (Requires `kin(v4, v14, p3, #g2, #q17, #t59)`)
           - `pick v4 v8 v9 #g0 #q0 #t0` (Current `atpose(v8, v9)`)
           - `place v4 v8 p8 #g0 #q3 #t3` (Requires `kin(v4, v8, p8, #g0, #q3, #t3)`)
           - `pick v4 v12 v13 #g1 #q1 #t1` (Current `atpose(v12, v13)`)
           - `place v4 v12 p7 #g1 #q2 #t2` (Requires `kin(v4, v12, p7, #g1, #q2, #t2)`)
           
           All these `kin` actions exist in the provided list. The base configurations (`q17`, `q3`, `q2`) and arm trajectories (`t59`, `t3`, `t2`) are also pre-defined. This means I don't need to use `#o3` and `#o4`, which might have been part of the problem.
           
           Let's verify collision checks for these existing poses.
           `~test-cfree-pose-pose-negative(v14, p3, v8, p8)` is true. This means `v14` at `p3` and `v8` at `p8` are collision-free.
           `~test-cfree-pose-pose-negative(v14, p10, v12, p7)` is true. Not directly relevant but shows existing collision checks.
           `~test-cfree-pose-pose-negative(v14, p34, v8, p17)` is true.
           
           I need to make sure the chosen poses `p3`, `p8`, `p7` are not currently occupied by other objects and are not unsafe.
           - `atpose(v14, v15)` so `p3` is free.
           - `atpose(v8, v9)` so `p8` is free.
           - `atpose(v12, v13)` so `p7` is free.
           
           The poses `p3`, `p8`, `p7` are defined with positions and quaternions, so they are concrete. Since these are not `#` poses, I do not need to provide continuous values for them in the `--Poses--:` section.
           
           This plan uses only concrete poses and concrete base configurations/trajectories provided in the initial state and action instances. This addresses all previous failure points.
           
           --Plan--:
           (move_base v3 #q5 #t64)
           (pick v4 v14 v15 #g2 #q5 #t9)
           (move_base #q5 #q17 #o0)
           (place v4 v14 p3 #g2 #q17 #t59)
           (move_base #q17 #q0 #o0)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q3 #o0)
           (place v4 v8 p8 #g0 #q3 #t3)
           (move_base #q3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #q2 #o0)
           (place v4 v12 p7 #g1 #q2 #t2)

User:      The plan you provided contains the following invalid actions: `(move_base #q5 #q17 #o0) , (move_base #q0 #q3 #o0) , (move_base #q3 #q1 #o0) , (move_base #q1 #q2 #o0)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q14 #o0))
           ((move_base #o3 #q15 #o0))
           ((move_base #o3 #q16 #o0))
           ((move_base #o3 #q17 #o0))
           ((move_base #o3 #q18 #o0))
           ((move_base #o3 #q19 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q20 #o0))
           ((move_base #o3 #q21 #o0))
           ((move_base #o3 #q22 #o0))
           ((move_base #o3 #q23 #o0))
           ((move_base #o3 #q24 #o0))
           ((move_base #o3 #q25 #o0))
           ((move_base #o3 #q26 #o0))
           ((move_base #o3 #q27 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q17 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q21 #o0))
           ((move_base #q0 #q24 #o0))
           ((move_base #q0 #q27 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q25 #t107))
           ((move_base #q0 #q26 #t108))
           ((move_base #q0 #q6 #t17))
           ((move_base #q0 #q7 #t18))
           ((move_base #q0 #q3 #t23))
           ((move_base #q0 #q9 #t36))
           ((move_base #q0 #q10 #t37))
           ((move_base #q0 #q11 #t38))
           ((move_base #q0 #q12 #t44))
           ((move_base #q0 #q13 #t50))
           ((move_base #q0 #q14 #t51))
           ((move_base #q0 #q15 #t56))
           ((move_base #q0 #q18 #t74))
           ((move_base #q0 #q19 #t75))
           ((move_base #q0 #q20 #t76))
           ((move_base #q0 #q16 #t77))
           ((move_base #q0 #q22 #t94))
           ((move_base #q0 #q23 #t95))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q11 #o0))
           ((move_base #q1 #q12 #o0))
           ((move_base #q1 #q13 #o0))
           ((move_base #q1 #q14 #o0))
           ((move_base #q1 #q16 #o0))
           ((move_base #q1 #q17 #o0))
           ((move_base #q1 #q24 #o0))
           ((move_base #q1 #q27 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q25 #t105))
           ((move_base #q1 #q26 #t106))
           ((move_base #q1 #q6 #t11))
           ((move_base #q1 #q2 #t26))
           ((move_base #q1 #q9 #t29))
           ((move_base #q1 #q10 #t30))
           ((move_base #q1 #q15 #t53))
           ((move_base #q1 #q18 #t71))
           ((move_base #q1 #q19 #t72))
           ((move_base #q1 #q20 #t73))
           ((move_base #q1 #q21 #t80))
           ((move_base #q1 #q22 #t88))
           ((move_base #q1 #q23 #t89))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q1 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q14 #o0))
           ((move_base #q10 #q15 #o0))
           ((move_base #q10 #q16 #o0))
           ((move_base #q10 #q17 #o0))
           ((move_base #q10 #q18 #o0))
           ((move_base #q10 #q19 #o0))
           ((move_base #q10 #q2 #o0))
           ((move_base #q10 #q20 #o0))
           ((move_base #q10 #q21 #o0))
           ((move_base #q10 #q22 #o0))
           ((move_base #q10 #q23 #o0))
           ((move_base #q10 #q24 #o0))
           ((move_base #q10 #q25 #o0))
           ((move_base #q10 #q26 #o0))
           ((move_base #q10 #q27 #o0))
           ((move_base #q10 #q3 #o0))
           ((move_base #q10 #q4 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q5 #t32))
           ((move_base #q10 #q0 #t40))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q14 #o0))
           ((move_base #q11 #q15 #o0))
           ((move_base #q11 #q16 #o0))
           ((move_base #q11 #q17 #o0))
           ((move_base #q11 #q18 #o0))
           ((move_base #q11 #q19 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q20 #o0))
           ((move_base #q11 #q21 #o0))
           ((move_base #q11 #q22 #o0))
           ((move_base #q11 #q23 #o0))
           ((move_base #q11 #q24 #o0))
           ((move_base #q11 #q25 #o0))
           ((move_base #q11 #q26 #o0))
           ((move_base #q11 #q27 #o0))
           ((move_base #q11 #q3 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q0 #t41))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q0 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q13 #o0))
           ((move_base #q12 #q14 #o0))
           ((move_base #q12 #q15 #o0))
           ((move_base #q12 #q16 #o0))
           ((move_base #q12 #q17 #o0))
           ((move_base #q12 #q18 #o0))
           ((move_base #q12 #q19 #o0))
           ((move_base #q12 #q2 #o0))
           ((move_base #q12 #q20 #o0))
           ((move_base #q12 #q21 #o0))
           ((move_base #q12 #q22 #o0))
           ((move_base #q12 #q23 #o0))
           ((move_base #q12 #q24 #o0))
           ((move_base #q12 #q25 #o0))
           ((move_base #q12 #q26 #o0))
           ((move_base #q12 #q27 #o0))
           ((move_base #q12 #q3 #o0))
           ((move_base #q12 #q4 #o0))
           ((move_base #q12 #q5 #o0))
           ((move_base #q12 #q6 #o0))
           ((move_base #q12 #q7 #o0))
           ((move_base #q12 #q8 #o0))
           ((move_base #q12 #q9 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q12 #q1 #t45))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q1 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q11 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q14 #o0))
           ((move_base #q13 #q15 #o0))
           ((move_base #q13 #q16 #o0))
           ((move_base #q13 #q17 #o0))
           ((move_base #q13 #q18 #o0))
           ((move_base #q13 #q19 #o0))
           ((move_base #q13 #q2 #o0))
           ((move_base #q13 #q20 #o0))
           ((move_base #q13 #q21 #o0))
           ((move_base #q13 #q22 #o0))
           ((move_base #q13 #q23 #o0))
           ((move_base #q13 #q24 #o0))
           ((move_base #q13 #q25 #o0))
           ((move_base #q13 #q26 #o0))
           ((move_base #q13 #q27 #o0))
           ((move_base #q13 #q3 #o0))
           ((move_base #q13 #q4 #o0))
           ((move_base #q13 #q5 #o0))
           ((move_base #q13 #q6 #o0))
           ((move_base #q13 #q7 #o0))
           ((move_base #q13 #q8 #o0))
           ((move_base #q13 #q9 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q13 #q0 #t48))
           ((move_base #q14 #o3 #o0))
           ((move_base #q14 #q0 #o0))
           ((move_base #q14 #q1 #o0))
           ((move_base #q14 #q10 #o0))
           ((move_base #q14 #q11 #o0))
           ((move_base #q14 #q12 #o0))
           ((move_base #q14 #q13 #o0))
           ((move_base #q14 #q14 #o0))
           ((move_base #q14 #q15 #o0))
           ((move_base #q14 #q16 #o0))
           ((move_base #q14 #q17 #o0))
           ((move_base #q14 #q18 #o0))
           ((move_base #q14 #q19 #o0))
           ((move_base #q14 #q2 #o0))
           ((move_base #q14 #q20 #o0))
           ((move_base #q14 #q21 #o0))
           ((move_base #q14 #q22 #o0))
           ((move_base #q14 #q23 #o0))
           ((move_base #q14 #q24 #o0))
           ((move_base #q14 #q25 #o0))
           ((move_base #q14 #q26 #o0))
           ((move_base #q14 #q27 #o0))
           ((move_base #q14 #q3 #o0))
           ((move_base #q14 #q4 #o0))
           ((move_base #q14 #q5 #o0))
           ((move_base #q14 #q6 #o0))
           ((move_base #q14 #q7 #o0))
           ((move_base #q14 #q8 #o0))
           ((move_base #q14 #q9 #o0))
           ((move_base #q14 v3 #o0))
           ((move_base #q15 #o3 #o0))
           ((move_base #q15 #q1 #o0))
           ((move_base #q15 #q10 #o0))
           ((move_base #q15 #q11 #o0))
           ((move_base #q15 #q12 #o0))
           ((move_base #q15 #q13 #o0))
           ((move_base #q15 #q14 #o0))
           ((move_base #q15 #q15 #o0))
           ((move_base #q15 #q16 #o0))
           ((move_base #q15 #q17 #o0))
           ((move_base #q15 #q18 #o0))
           ((move_base #q15 #q19 #o0))
           ((move_base #q15 #q2 #o0))
           ((move_base #q15 #q20 #o0))
           ((move_base #q15 #q21 #o0))
           ((move_base #q15 #q22 #o0))
           ((move_base #q15 #q23 #o0))
           ((move_base #q15 #q24 #o0))
           ((move_base #q15 #q25 #o0))
           ((move_base #q15 #q26 #o0))
           ((move_base #q15 #q27 #o0))
           ((move_base #q15 #q3 #o0))
           ((move_base #q15 #q4 #o0))
           ((move_base #q15 #q6 #o0))
           ((move_base #q15 #q7 #o0))
           ((move_base #q15 #q8 #o0))
           ((move_base #q15 #q9 #o0))
           ((move_base #q15 v3 #o0))
           ((move_base #q15 #q5 #t54))
           ((move_base #q15 #q0 #t57))
           ((move_base #q16 #o3 #o0))
           ((move_base #q16 #q0 #o0))
           ((move_base #q16 #q10 #o0))
           ((move_base #q16 #q11 #o0))
           ((move_base #q16 #q12 #o0))
           ((move_base #q16 #q13 #o0))
           ((move_base #q16 #q14 #o0))
           ((move_base #q16 #q15 #o0))
           ((move_base #q16 #q16 #o0))
           ((move_base #q16 #q17 #o0))
           ((move_base #q16 #q18 #o0))
           ((move_base #q16 #q19 #o0))
           ((move_base #q16 #q2 #o0))
           ((move_base #q16 #q20 #o0))
           ((move_base #q16 #q21 #o0))
           ((move_base #q16 #q22 #o0))
           ((move_base #q16 #q23 #o0))
           ((move_base #q16 #q24 #o0))
           ((move_base #q16 #q25 #o0))
           ((move_base #q16 #q26 #o0))
           ((move_base #q16 #q27 #o0))
           ((move_base #q16 #q3 #o0))
           ((move_base #q16 #q4 #o0))
           ((move_base #q16 #q5 #o0))
           ((move_base #q16 #q6 #o0))
           ((move_base #q16 #q7 #o0))
           ((move_base #q16 #q8 #o0))
           ((move_base #q16 #q9 #o0))
           ((move_base #q16 v3 #o0))
           ((move_base #q16 #q1 #t78))
           ((move_base #q17 #o3 #o0))
           ((move_base #q17 #q0 #o0))
           ((move_base #q17 #q10 #o0))
           ((move_base #q17 #q11 #o0))
           ((move_base #q17 #q12 #o0))
           ((move_base #q17 #q13 #o0))
           ((move_base #q17 #q14 #o0))
           ((move_base #q17 #q15 #o0))
           ((move_base #q17 #q16 #o0))
           ((move_base #q17 #q17 #o0))
           ((move_base #q17 #q18 #o0))
           ((move_base #q17 #q19 #o0))
           ((move_base #q17 #q2 #o0))
           ((move_base #q17 #q20 #o0))
           ((move_base #q17 #q21 #o0))
           ((move_base #q17 #q22 #o0))
           ((move_base #q17 #q23 #o0))
           ((move_base #q17 #q24 #o0))
           ((move_base #q17 #q25 #o0))
           ((move_base #q17 #q26 #o0))
           ((move_base #q17 #q27 #o0))
           ((move_base #q17 #q3 #o0))
           ((move_base #q17 #q4 #o0))
           ((move_base #q17 #q5 #o0))
           ((move_base #q17 #q6 #o0))
           ((move_base #q17 #q7 #o0))
           ((move_base #q17 #q8 #o0))
           ((move_base #q17 #q9 #o0))
           ((move_base #q17 v3 #o0))
           ((move_base #q17 #q1 #t83))
           ((move_base #q18 #o3 #o0))
           ((move_base #q18 #q10 #o0))
           ((move_base #q18 #q11 #o0))
           ((move_base #q18 #q12 #o0))
           ((move_base #q18 #q13 #o0))
           ((move_base #q18 #q14 #o0))
           ((move_base #q18 #q15 #o0))
           ((move_base #q18 #q16 #o0))
           ((move_base #q18 #q17 #o0))
           ((move_base #q18 #q18 #o0))
           ((move_base #q18 #q19 #o0))
           ((move_base #q18 #q2 #o0))
           ((move_base #q18 #q20 #o0))
           ((move_base #q18 #q21 #o0))
           ((move_base #q18 #q22 #o0))
           ((move_base #q18 #q23 #o0))
           ((move_base #q18 #q24 #o0))
           ((move_base #q18 #q25 #o0))
           ((move_base #q18 #q26 #o0))
           ((move_base #q18 #q27 #o0))
           ((move_base #q18 #q3 #o0))
           ((move_base #q18 #q4 #o0))
           ((move_base #q18 #q5 #o0))
           ((move_base #q18 #q6 #o0))
           ((move_base #q18 #q7 #o0))
           ((move_base #q18 #q8 #o0))
           ((move_base #q18 #q9 #o0))
           ((move_base #q18 v3 #o0))
           ((move_base #q18 #q0 #t65))
           ((move_base #q18 #q1 #t68))
           ((move_base #q19 #o3 #o0))
           ((move_base #q19 #q10 #o0))
           ((move_base #q19 #q11 #o0))
           ((move_base #q19 #q12 #o0))
           ((move_base #q19 #q13 #o0))
           ((move_base #q19 #q14 #o0))
           ((move_base #q19 #q15 #o0))
           ((move_base #q19 #q16 #o0))
           ((move_base #q19 #q17 #o0))
           ((move_base #q19 #q18 #o0))
           ((move_base #q19 #q19 #o0))
           ((move_base #q19 #q2 #o0))
           ((move_base #q19 #q20 #o0))
           ((move_base #q19 #q21 #o0))
           ((move_base #q19 #q22 #o0))
           ((move_base #q19 #q23 #o0))
           ((move_base #q19 #q24 #o0))
           ((move_base #q19 #q25 #o0))
           ((move_base #q19 #q26 #o0))
           ((move_base #q19 #q27 #o0))
           ((move_base #q19 #q3 #o0))
           ((move_base #q19 #q4 #o0))
           ((move_base #q19 #q5 #o0))
           ((move_base #q19 #q6 #o0))
           ((move_base #q19 #q7 #o0))
           ((move_base #q19 #q8 #o0))
           ((move_base #q19 #q9 #o0))
           ((move_base #q19 v3 #o0))
           ((move_base #q19 #q0 #t66))
           ((move_base #q19 #q1 #t69))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q12 #o0))
           ((move_base #q2 #q13 #o0))
           ((move_base #q2 #q14 #o0))
           ((move_base #q2 #q15 #o0))
           ((move_base #q2 #q16 #o0))
           ((move_base #q2 #q17 #o0))
           ((move_base #q2 #q18 #o0))
           ((move_base #q2 #q19 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q20 #o0))
           ((move_base #q2 #q21 #o0))
           ((move_base #q2 #q22 #o0))
           ((move_base #q2 #q23 #o0))
           ((move_base #q2 #q24 #o0))
           ((move_base #q2 #q25 #o0))
           ((move_base #q2 #q26 #o0))
           ((move_base #q2 #q27 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t22))
           ((move_base #q2 #q0 #t82))
           ((move_base #q20 #o3 #o0))
           ((move_base #q20 #q0 #o0))
           ((move_base #q20 #q10 #o0))
           ((move_base #q20 #q11 #o0))
           ((move_base #q20 #q12 #o0))
           ((move_base #q20 #q13 #o0))
           ((move_base #q20 #q14 #o0))
           ((move_base #q20 #q15 #o0))
           ((move_base #q20 #q16 #o0))
           ((move_base #q20 #q17 #o0))
           ((move_base #q20 #q18 #o0))
           ((move_base #q20 #q19 #o0))
           ((move_base #q20 #q2 #o0))
           ((move_base #q20 #q20 #o0))
           ((move_base #q20 #q21 #o0))
           ((move_base #q20 #q22 #o0))
           ((move_base #q20 #q23 #o0))
           ((move_base #q20 #q24 #o0))
           ((move_base #q20 #q25 #o0))
           ((move_base #q20 #q26 #o0))
           ((move_base #q20 #q27 #o0))
           ((move_base #q20 #q3 #o0))
           ((move_base #q20 #q4 #o0))
           ((move_base #q20 #q5 #o0))
           ((move_base #q20 #q6 #o0))
           ((move_base #q20 #q7 #o0))
           ((move_base #q20 #q8 #o0))
           ((move_base #q20 #q9 #o0))
           ((move_base #q20 v3 #o0))
           ((move_base #q20 #q1 #t70))
           ((move_base #q21 #o3 #o0))
           ((move_base #q21 #q0 #o0))
           ((move_base #q21 #q1 #o0))
           ((move_base #q21 #q10 #o0))
           ((move_base #q21 #q11 #o0))
           ((move_base #q21 #q12 #o0))
           ((move_base #q21 #q13 #o0))
           ((move_base #q21 #q14 #o0))
           ((move_base #q21 #q15 #o0))
           ((move_base #q21 #q16 #o0))
           ((move_base #q21 #q17 #o0))
           ((move_base #q21 #q18 #o0))
           ((move_base #q21 #q19 #o0))
           ((move_base #q21 #q2 #o0))
           ((move_base #q21 #q20 #o0))
           ((move_base #q21 #q21 #o0))
           ((move_base #q21 #q22 #o0))
           ((move_base #q21 #q23 #o0))
           ((move_base #q21 #q24 #o0))
           ((move_base #q21 #q25 #o0))
           ((move_base #q21 #q26 #o0))
           ((move_base #q21 #q27 #o0))
           ((move_base #q21 #q3 #o0))
           ((move_base #q21 #q4 #o0))
           ((move_base #q21 #q6 #o0))
           ((move_base #q21 #q7 #o0))
           ((move_base #q21 #q8 #o0))
           ((move_base #q21 #q9 #o0))
           ((move_base #q21 v3 #o0))
           ((move_base #q21 #q5 #t81))
           ((move_base #q22 #o3 #o0))
           ((move_base #q22 #q0 #o0))
           ((move_base #q22 #q10 #o0))
           ((move_base #q22 #q11 #o0))
           ((move_base #q22 #q12 #o0))
           ((move_base #q22 #q13 #o0))
           ((move_base #q22 #q14 #o0))
           ((move_base #q22 #q15 #o0))
           ((move_base #q22 #q16 #o0))
           ((move_base #q22 #q17 #o0))
           ((move_base #q22 #q18 #o0))
           ((move_base #q22 #q19 #o0))
           ((move_base #q22 #q2 #o0))
           ((move_base #q22 #q20 #o0))
           ((move_base #q22 #q21 #o0))
           ((move_base #q22 #q22 #o0))
           ((move_base #q22 #q23 #o0))
           ((move_base #q22 #q24 #o0))
           ((move_base #q22 #q25 #o0))
           ((move_base #q22 #q26 #o0))
           ((move_base #q22 #q27 #o0))
           ((move_base #q22 #q3 #o0))
           ((move_base #q22 #q4 #o0))
           ((move_base #q22 #q6 #o0))
           ((move_base #q22 #q7 #o0))
           ((move_base #q22 #q8 #o0))
           ((move_base #q22 #q9 #o0))
           ((move_base #q22 v3 #o0))
           ((move_base #q22 #q5 #t90))
           ((move_base #q22 #q1 #t92))
           ((move_base #q23 #o3 #o0))
           ((move_base #q23 #q0 #o0))
           ((move_base #q23 #q10 #o0))
           ((move_base #q23 #q11 #o0))
           ((move_base #q23 #q12 #o0))
           ((move_base #q23 #q13 #o0))
           ((move_base #q23 #q14 #o0))
           ((move_base #q23 #q15 #o0))
           ((move_base #q23 #q16 #o0))
           ((move_base #q23 #q17 #o0))
           ((move_base #q23 #q18 #o0))
           ((move_base #q23 #q19 #o0))
           ((move_base #q23 #q2 #o0))
           ((move_base #q23 #q20 #o0))
           ((move_base #q23 #q21 #o0))
           ((move_base #q23 #q22 #o0))
           ((move_base #q23 #q23 #o0))
           ((move_base #q23 #q24 #o0))
           ((move_base #q23 #q25 #o0))
           ((move_base #q23 #q26 #o0))
           ((move_base #q23 #q27 #o0))
           ((move_base #q23 #q3 #o0))
           ((move_base #q23 #q4 #o0))
           ((move_base #q23 #q6 #o0))
           ((move_base #q23 #q7 #o0))
           ((move_base #q23 #q8 #o0))
           ((move_base #q23 #q9 #o0))
           ((move_base #q23 v3 #o0))
           ((move_base #q23 #q5 #t91))
           ((move_base #q23 #q1 #t93))
           ((move_base #q24 #o3 #o0))
           ((move_base #q24 #q0 #o0))
           ((move_base #q24 #q1 #o0))
           ((move_base #q24 #q10 #o0))
           ((move_base #q24 #q11 #o0))
           ((move_base #q24 #q12 #o0))
           ((move_base #q24 #q13 #o0))
           ((move_base #q24 #q14 #o0))
           ((move_base #q24 #q15 #o0))
           ((move_base #q24 #q16 #o0))
           ((move_base #q24 #q17 #o0))
           ((move_base #q24 #q18 #o0))
           ((move_base #q24 #q19 #o0))
           ((move_base #q24 #q2 #o0))
           ((move_base #q24 #q20 #o0))
           ((move_base #q24 #q21 #o0))
           ((move_base #q24 #q22 #o0))
           ((move_base #q24 #q23 #o0))
           ((move_base #q24 #q24 #o0))
           ((move_base #q24 #q25 #o0))
           ((move_base #q24 #q26 #o0))
           ((move_base #q24 #q27 #o0))
           ((move_base #q24 #q3 #o0))
           ((move_base #q24 #q4 #o0))
           ((move_base #q24 #q5 #o0))
           ((move_base #q24 #q6 #o0))
           ((move_base #q24 #q7 #o0))
           ((move_base #q24 #q8 #o0))
           ((move_base #q24 #q9 #o0))
           ((move_base #q24 v3 #o0))
           ((move_base #q25 #o3 #o0))
           ((move_base #q25 #q0 #o0))
           ((move_base #q25 #q10 #o0))
           ((move_base #q25 #q11 #o0))
           ((move_base #q25 #q12 #o0))
           ((move_base #q25 #q13 #o0))
           ((move_base #q25 #q14 #o0))
           ((move_base #q25 #q15 #o0))
           ((move_base #q25 #q16 #o0))
           ((move_base #q25 #q17 #o0))
           ((move_base #q25 #q18 #o0))
           ((move_base #q25 #q19 #o0))
           ((move_base #q25 #q2 #o0))
           ((move_base #q25 #q20 #o0))
           ((move_base #q25 #q21 #o0))
           ((move_base #q25 #q22 #o0))
           ((move_base #q25 #q23 #o0))
           ((move_base #q25 #q24 #o0))
           ((move_base #q25 #q25 #o0))
           ((move_base #q25 #q26 #o0))
           ((move_base #q25 #q27 #o0))
           ((move_base #q25 #q3 #o0))
           ((move_base #q25 #q4 #o0))
           ((move_base #q25 #q6 #o0))
           ((move_base #q25 #q7 #o0))
           ((move_base #q25 #q8 #o0))
           ((move_base #q25 #q9 #o0))
           ((move_base #q25 v3 #o0))
           ((move_base #q25 #q5 #t101))
           ((move_base #q25 #q1 #t103))
           ((move_base #q26 #o3 #o0))
           ((move_base #q26 #q0 #o0))
           ((move_base #q26 #q10 #o0))
           ((move_base #q26 #q11 #o0))
           ((move_base #q26 #q12 #o0))
           ((move_base #q26 #q13 #o0))
           ((move_base #q26 #q14 #o0))
           ((move_base #q26 #q15 #o0))
           ((move_base #q26 #q16 #o0))
           ((move_base #q26 #q17 #o0))
           ((move_base #q26 #q18 #o0))
           ((move_base #q26 #q19 #o0))
           ((move_base #q26 #q2 #o0))
           ((move_base #q26 #q20 #o0))
           ((move_base #q26 #q21 #o0))
           ((move_base #q26 #q22 #o0))
           ((move_base #q26 #q23 #o0))
           ((move_base #q26 #q24 #o0))
           ((move_base #q26 #q25 #o0))
           ((move_base #q26 #q26 #o0))
           ((move_base #q26 #q27 #o0))
           ((move_base #q26 #q3 #o0))
           ((move_base #q26 #q4 #o0))
           ((move_base #q26 #q6 #o0))
           ((move_base #q26 #q7 #o0))
           ((move_base #q26 #q8 #o0))
           ((move_base #q26 #q9 #o0))
           ((move_base #q26 v3 #o0))
           ((move_base #q26 #q5 #t102))
           ((move_base #q26 #q1 #t104))
           ((move_base #q27 #o3 #o0))
           ((move_base #q27 #q0 #o0))
           ((move_base #q27 #q1 #o0))
           ((move_base #q27 #q10 #o0))
           ((move_base #q27 #q11 #o0))
           ((move_base #q27 #q12 #o0))
           ((move_base #q27 #q13 #o0))
           ((move_base #q27 #q14 #o0))
           ((move_base #q27 #q15 #o0))
           ((move_base #q27 #q16 #o0))
           ((move_base #q27 #q17 #o0))
           ((move_base #q27 #q18 #o0))
           ((move_base #q27 #q19 #o0))
           ((move_base #q27 #q2 #o0))
           ((move_base #q27 #q20 #o0))
           ((move_base #q27 #q21 #o0))
           ((move_base #q27 #q22 #o0))
           ((move_base #q27 #q23 #o0))
           ((move_base #q27 #q24 #o0))
           ((move_base #q27 #q25 #o0))
           ((move_base #q27 #q26 #o0))
           ((move_base #q27 #q27 #o0))
           ((move_base #q27 #q3 #o0))
           ((move_base #q27 #q4 #o0))
           ((move_base #q27 #q5 #o0))
           ((move_base #q27 #q6 #o0))
           ((move_base #q27 #q7 #o0))
           ((move_base #q27 #q8 #o0))
           ((move_base #q27 #q9 #o0))
           ((move_base #q27 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q10 #o0))
           ((move_base #q3 #q11 #o0))
           ((move_base #q3 #q12 #o0))
           ((move_base #q3 #q13 #o0))
           ((move_base #q3 #q14 #o0))
           ((move_base #q3 #q15 #o0))
           ((move_base #q3 #q16 #o0))
           ((move_base #q3 #q17 #o0))
           ((move_base #q3 #q18 #o0))
           ((move_base #q3 #q19 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q20 #o0))
           ((move_base #q3 #q21 #o0))
           ((move_base #q3 #q22 #o0))
           ((move_base #q3 #q23 #o0))
           ((move_base #q3 #q24 #o0))
           ((move_base #q3 #q25 #o0))
           ((move_base #q3 #q26 #o0))
           ((move_base #q3 #q27 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q1 #t24))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q10 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q12 #o0))
           ((move_base #q4 #q13 #o0))
           ((move_base #q4 #q14 #o0))
           ((move_base #q4 #q15 #o0))
           ((move_base #q4 #q16 #o0))
           ((move_base #q4 #q17 #o0))
           ((move_base #q4 #q18 #o0))
           ((move_base #q4 #q19 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q20 #o0))
           ((move_base #q4 #q21 #o0))
           ((move_base #q4 #q22 #o0))
           ((move_base #q4 #q23 #o0))
           ((move_base #q4 #q24 #o0))
           ((move_base #q4 #q25 #o0))
           ((move_base #q4 #q26 #o0))
           ((move_base #q4 #q27 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q12 #o0))
           ((move_base #q5 #q14 #o0))
           ((move_base #q5 #q16 #o0))
           ((move_base #q5 #q19 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q20 #o0))
           ((move_base #q5 #q21 #o0))
           ((move_base #q5 #q24 #o0))
           ((move_base #q5 #q27 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q26 #t100))
           ((move_base #q5 #q6 #t15))
           ((move_base #q5 #q7 #t16))
           ((move_base #q5 #q8 #t25))
           ((move_base #q5 #q9 #t33))
           ((move_base #q5 #q10 #t34))
           ((move_base #q5 #q4 #t43))
           ((move_base #q5 #q13 #t47))
           ((move_base #q5 #q15 #t55))
           ((move_base #q5 #q17 #t60))
           ((move_base #q5 #q18 #t62))
           ((move_base #q5 #q22 #t86))
           ((move_base #q5 #q23 #t87))
           ((move_base #q5 #q25 #t99))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q10 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q12 #o0))
           ((move_base #q6 #q13 #o0))
           ((move_base #q6 #q14 #o0))
           ((move_base #q6 #q15 #o0))
           ((move_base #q6 #q16 #o0))
           ((move_base #q6 #q17 #o0))
           ((move_base #q6 #q18 #o0))
           ((move_base #q6 #q19 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q20 #o0))
           ((move_base #q6 #q21 #o0))
           ((move_base #q6 #q22 #o0))
           ((move_base #q6 #q23 #o0))
           ((move_base #q6 #q24 #o0))
           ((move_base #q6 #q25 #o0))
           ((move_base #q6 #q26 #o0))
           ((move_base #q6 #q27 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q5 #t13))
           ((move_base #q6 #q0 #t19))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q12 #o0))
           ((move_base #q7 #q13 #o0))
           ((move_base #q7 #q14 #o0))
           ((move_base #q7 #q15 #o0))
           ((move_base #q7 #q16 #o0))
           ((move_base #q7 #q17 #o0))
           ((move_base #q7 #q18 #o0))
           ((move_base #q7 #q19 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q20 #o0))
           ((move_base #q7 #q21 #o0))
           ((move_base #q7 #q22 #o0))
           ((move_base #q7 #q23 #o0))
           ((move_base #q7 #q24 #o0))
           ((move_base #q7 #q25 #o0))
           ((move_base #q7 #q26 #o0))
           ((move_base #q7 #q27 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q5 #t14))
           ((move_base #q7 #q0 #t20))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q12 #o0))
           ((move_base #q8 #q13 #o0))
           ((move_base #q8 #q14 #o0))
           ((move_base #q8 #q15 #o0))
           ((move_base #q8 #q16 #o0))
           ((move_base #q8 #q17 #o0))
           ((move_base #q8 #q18 #o0))
           ((move_base #q8 #q19 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q20 #o0))
           ((move_base #q8 #q21 #o0))
           ((move_base #q8 #q22 #o0))
           ((move_base #q8 #q23 #o0))
           ((move_base #q8 #q24 #o0))
           ((move_base #q8 #q25 #o0))
           ((move_base #q8 #q26 #o0))
           ((move_base #q8 #q27 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q12 #o0))
           ((move_base #q9 #q13 #o0))
           ((move_base #q9 #q14 #o0))
           ((move_base #q9 #q15 #o0))
           ((move_base #q9 #q16 #o0))
           ((move_base #q9 #q17 #o0))
           ((move_base #q9 #q18 #o0))
           ((move_base #q9 #q19 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q20 #o0))
           ((move_base #q9 #q21 #o0))
           ((move_base #q9 #q22 #o0))
           ((move_base #q9 #q23 #o0))
           ((move_base #q9 #q24 #o0))
           ((move_base #q9 #q25 #o0))
           ((move_base #q9 #q26 #o0))
           ((move_base #q9 #q27 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q5 #t31))
           ((move_base #q9 #q0 #t39))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q12 #o0))
           ((move_base v3 #q13 #o0))
           ((move_base v3 #q14 #o0))
           ((move_base v3 #q15 #o0))
           ((move_base v3 #q16 #o0))
           ((move_base v3 #q17 #o0))
           ((move_base v3 #q18 #o0))
           ((move_base v3 #q19 #o0))
           ((move_base v3 #q20 #o0))
           ((move_base v3 #q21 #o0))
           ((move_base v3 #q22 #o0))
           ((move_base v3 #q23 #o0))
           ((move_base v3 #q24 #o0))
           ((move_base v3 #q25 #o0))
           ((move_base v3 #q26 #o0))
           ((move_base v3 #q27 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t4))
           ((move_base v3 #q1 #t5))
           ((move_base v3 #q2 #t6))
           ((move_base v3 #q5 #t64))
           ((move_base v3 #q3 #t7))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p15 #g1 #q15 #t52))
           ((place v4 v12 p15 #g1 #q15 #t52))
           ((pick v4 v12 p18 #g1 #q10 #t28))
           ((place v4 v12 p18 #g1 #q10 #t28))
           ((pick v4 v12 p25 #g1 #q21 #t79))
           ((place v4 v12 p25 #g1 #q21 #t79))
           ((pick v4 v12 p28 #g1 #q19 #t63))
           ((place v4 v12 p28 #g1 #q19 #t63))
           ((pick v4 v12 p30 #g1 #o3 #o4))
           ((place v4 v12 p30 #g1 #o3 #o4))
           ((pick v4 v12 p33 #g1 #q23 #t85))
           ((place v4 v12 p33 #g1 #q23 #t85))
           ((pick v4 v12 p39 #g1 #o3 #o4))
           ((place v4 v12 p39 #g1 #o3 #o4))
           ((pick v4 v12 p4 #g1 #o3 #o4))
           ((place v4 v12 p4 #g1 #o3 #o4))
           ((pick v4 v12 p42 #g1 #q26 #t98))
           ((place v4 v12 p42 #g1 #q26 #t98))
           ((pick v4 v12 p46 #g1 #o3 #o4))
           ((place v4 v12 p46 #g1 #o3 #o4))
           ((pick v4 v12 p49 #g1 #o3 #o4))
           ((place v4 v12 p49 #g1 #o3 #o4))
           ((pick v4 v12 p52 #g1 #o3 #o4))
           ((place v4 v12 p52 #g1 #o3 #o4))
           ((pick v4 v12 p55 #g1 #o3 #o4))
           ((place v4 v12 p55 #g1 #o3 #o4))
           ((pick v4 v12 p58 #g1 #o3 #o4))
           ((place v4 v12 p58 #g1 #o3 #o4))
           ((pick v4 v12 p7 #g1 #q2 #t2))
           ((place v4 v12 p7 #g1 #q2 #t2))
           ((pick v4 v12 p9 #g1 #q6 #t10))
           ((place v4 v12 p9 #g1 #q6 #t10))
           ((pick v4 v12 v13 #g1 #q1 #t1))
           ((place v4 v12 v13 #g1 #q1 #t1))
           ((pick v4 v14 #o2 #g2 #o3 #o4))
           ((place v4 v14 #o2 #g2 #o3 #o4))
           ((pick v4 v14 p10 #g2 #q8 #t21))
           ((place v4 v14 p10 #g2 #q8 #t21))
           ((pick v4 v14 p16 #g2 #o3 #o4))
           ((place v4 v14 p16 #g2 #o3 #o4))
           ((pick v4 v14 p19 #g2 #q9 #t27))
           ((place v4 v14 p19 #g2 #q9 #t27))
           ((pick v4 v14 p21 #g2 #q13 #t46))
           ((place v4 v14 p21 #g2 #q13 #t46))
           ((pick v4 v14 p23 #g2 #o3 #o4))
           ((place v4 v14 p23 #g2 #o3 #o4))
           ((pick v4 v14 p26 #g2 #q18 #t61))
           ((place v4 v14 p26 #g2 #q18 #t61))
           ((pick v4 v14 p3 #g2 #q17 #t59))
           ((place v4 v14 p3 #g2 #q17 #t59))
           ((pick v4 v14 p31 #g2 #o3 #o4))
           ((place v4 v14 p31 #g2 #o3 #o4))
           ((pick v4 v14 p34 #g2 #q22 #t84))
           ((place v4 v14 p34 #g2 #q22 #t84))
           ((pick v4 v14 p40 #g2 #o3 #o4))
           ((place v4 v14 p40 #g2 #o3 #o4))
           ((pick v4 v14 p43 #g2 #q25 #t97))
           ((place v4 v14 p43 #g2 #q25 #t97))
           ((pick v4 v14 p44 #g2 #o3 #o4))
           ((place v4 v14 p44 #g2 #o3 #o4))
           ((pick v4 v14 p47 #g2 #o3 #o4))
           ((place v4 v14 p47 #g2 #o3 #o4))
           ((pick v4 v14 p50 #g2 #o3 #o4))
           ((place v4 v14 p50 #g2 #o3 #o4))
           ((pick v4 v14 p53 #g2 #o3 #o4))
           ((place v4 v14 p53 #g2 #o3 #o4))
           ((pick v4 v14 p56 #g2 #o3 #o4))
           ((place v4 v14 p56 #g2 #o3 #o4))
           ((pick v4 v14 p6 #g2 #q4 #t8))
           ((place v4 v14 p6 #g2 #q4 #t8))
           ((pick v4 v14 v15 #g2 #q5 #t9))
           ((place v4 v14 v15 #g2 #q5 #t9))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p11 #g0 #q7 #t12))
           ((place v4 v8 p11 #g0 #q7 #t12))
           ((pick v4 v8 p17 #g0 #q16 #t58))
           ((place v4 v8 p17 #g0 #q16 #t58))
           ((pick v4 v8 p20 #g0 #q11 #t35))
           ((place v4 v8 p20 #g0 #q11 #t35))
           ((pick v4 v8 p22 #g0 #q14 #t49))
           ((place v4 v8 p22 #g0 #q14 #t49))
           ((pick v4 v8 p24 #g0 #o3 #o4))
           ((place v4 v8 p24 #g0 #o3 #o4))
           ((pick v4 v8 p27 #g0 #q20 #t67))
           ((place v4 v8 p27 #g0 #q20 #t67))
           ((pick v4 v8 p29 #g0 #o3 #o4))
           ((place v4 v8 p29 #g0 #o3 #o4))
           ((pick v4 v8 p32 #g0 #q24 #t96))
           ((place v4 v8 p32 #g0 #q24 #t96))
           ((pick v4 v8 p38 #g0 #o3 #o4))
           ((place v4 v8 p38 #g0 #o3 #o4))
           ((pick v4 v8 p41 #g0 #q27 #t109))
           ((place v4 v8 p41 #g0 #q27 #t109))
           ((pick v4 v8 p45 #g0 #o3 #o4))
           ((place v4 v8 p45 #g0 #o3 #o4))
           ((pick v4 v8 p48 #g0 #o3 #o4))
           ((place v4 v8 p48 #g0 #o3 #o4))
           ((pick v4 v8 p5 #g0 #q12 #t42))
           ((place v4 v8 p5 #g0 #q12 #t42))
           ((pick v4 v8 p51 #g0 #o3 #o4))
           ((place v4 v8 p51 #g0 #o3 #o4))
           ((pick v4 v8 p54 #g0 #o3 #o4))
           ((place v4 v8 p54 #g0 #o3 #o4))
           ((pick v4 v8 p57 #g0 #o3 #o4))
           ((place v4 v8 p57 #g0 #o3 #o4))
           ((pick v4 v8 p8 #g0 #q3 #t3))
           ((place v4 v8 p8 #g0 #q3 #t3))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     My sincere apologies. I overlooked the exact `basemotion` actions available in the list. My previous plan included `move_base` actions like `(move_base #q5 #q17 #o0)` which are invalid because the middle argument (trajectory) must be `#o0` (which implies a computed trajectory for that specific move) *or* a named trajectory like `#t64`, but cannot be a base configuration. The valid format is `(move_base ?q1: object, ?q2: object, ?t: object)`, where `?t` is the trajectory. My previous plan mistakenly used `#o0` as the trajectory placeholder, but then specified a base configuration like `#q17` in that trajectory slot.
           
           I need to use the specific `btraj` objects (like `#t64`, `#t0`) for the trajectory argument in `move_base` actions that are explicitly listed as valid.
           
           Let's re-examine the available `move_base` actions, specifically for connecting base configurations.
           - Current location: `v3`
           - To pick `v14` from `v15` using `q5`: `(move_base v3 #q5 #t64)` is available.
           - To place `v14` to `p3` using `q17`: I need to move from `q5` to `q17`.
               - Looking through the `move_base` list, `(move_base #q5 #q17 #t60)` does not exist.
               - However, `(move_base #q5 #q17 #o0)` is NOT in the list.
               - `(move_base #q17 #o0, ...)` exists, and `(move_base ..., #q17, #o0)` doesn't exist.
               - Instead, I need to look for `basemotion(?q1, ?t, ?q2)`.
               - I need to find a valid `basemotion` from `q5` to `q17`. Looking at the `basemotion` facts:
                   - `basemotion(#q5, #t60, #q17)` is available. This is the correct form!
           
           - After placing `v14` at `p3`, I'm at `q17`.
           - To pick `v8` from `v9` using `q0`: I need to move from `q17` to `q0`.
               - Looking at `basemotion` facts for (`#q17`, `t`, `#q0`):
                   - `basemotion(#q17, #o0, #q0)` exists implicitly in the provided `move_base` actions as `(move_base #q17 #q0 #o0)`. This is present in the list of valid actions (e.g., `(move_base #q17 #q0 #o0)`). Let me check the full list.
                   - Indeed, `(move_base #q17 #q0 #o0)` IS in the full list provided. My apologies for misreading the prior feedback that seemed to imply it was invalid. It means the `basemotion(#q17, #o0, #q0)` is true.
           
           - After picking `v8` from `v9`, I'm at `q0`.
           - To place `v8` at `p8` using `q3`: I need to move from `q0` to `q3`.
               - Looking for `basemotion(#q0, t, #q3)`: `(move_base #q0 #q3 #t23)` is available.
           
           - After placing `v8` at `p8`, I'm at `q3`.
           - To pick `v12` from `v13` using `q1`: I need to move from `q3` to `q1`.
               - Looking for `basemotion(#q3, t, #q1)`: `(move_base #q3 #q1 #t24)` is available.
           
           - After picking `v12` from `v13`, I'm at `q1`.
           - To place `v12` at `p7` using `q2`: I need to move from `q1` to `q2`.
               - Looking for `basemotion(#q1, t, #q2)`: `(move_base #q1 #q2 #t26)` is available.
           
           The issue was my internal mental lookup of the `move_base` valid forms, not the `supported` predicate this time. The previous approach of using concrete poses `p3`, `p8`, `p7` for placement on `v16` (dummy) and specific `kin` relations is valid, as long as the `move_base` trajectories are correct.
           
           Let's reconstruct the plan with the correct trajectories:
           
           --Plan--:
           (move_base v3 #q5 #t64)
           (pick v4 v14 v15 #g2 #q5 #t9)
           (move_base #q5 #q17 #t60)
           (place v4 v14 p3 #g2 #q17 #t59)
           (move_base #q17 #q0 #o0)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q3 #t23)
           (place v4 v8 p8 #g0 #q3 #t3)
           (move_base #q3 #q1 #t24)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #q2 #t26)
           (place v4 v12 p7 #g1 #q2 #t2)

