User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom camera(v10)
           Atom lander(v9)
           Atom type(v8, v6)
           Atom objective(v20)
           Atom onboard(v10, v12)
           Atom rover(v12)
           Atom type(v7, v6)
           Atom objective(v17)
           Atom type(v5, v6)
           Atom rover(v14)
           Atom type(v3, v2)
           Atom supports(v10, v11)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom objective(v19)
           Atom rock(v1)
           Atom objective(v18)
           Atom free(v12, v16)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom store(v16)
           Atom atconf(v12, v13)
           Atom rock(v7)
           Atom atconf(v14, v15)
           Atom rock(v5)
           Atom conf(v12, v13)
           Atom rock(v4)
           Atom rock(v3)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #q13, v4)
           Atom conf(v12, #q13)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q7, v3)
           Atom conf(v12, #q7)
           Atom above(v12, #q0, v5)
           Atom conf(v12, #q0)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #q2, #y1, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v7)
           Atom comvisible(v14, #q8, #y5, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q9, #y6, v20)
           Atom imagerange(v14, #q9, v20)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #q10, #y7, v18)
           Atom imagerange(v14, #q10, v18)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom above(v12, #q6, v1)
           Atom conf(v12, #q6)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #q11, #y8, v17)
           Atom imagerange(v14, #q11, v17)
           Atom conf(v14, #q11)
           Atom ray(#y8)
           Atom imagevisible(v12, #q5, #y4, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom imagevisible(v14, #q12, #y9, v19)
           Atom imagerange(v14, #q12, v19)
           Atom conf(v14, #q12)
           Atom ray(#y9)
           Atom imagevisible(v12, #q3, #y2, v19)
           Atom imagerange(v12, #q3, v19)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #t5, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, v13, #t4, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q2, #t1, #q1)
           Atom motion(v12, #q1, #t20, #q3)
           Atom motion(v12, #q1, #t25, #q2)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t2, v13)
           Atom motion(v12, #q3, #t21, #q1)
           Atom motion(v12, #q5, #t29, #q3)
           Atom motion(v12, v13, #t7, #q5)
           Atom motion(v12, #q5, #t18, #q1)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q1, #t17, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q1, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t3, #q1)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q7, #t15, #q1)
           Atom motion(v12, v13, #t14, #q7)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q1, #t22, #q13)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q13, #t16, #q1)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, v15, #t10, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q4, #t23, #q1)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q1, #t19, #q4)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q4, #t26, #q5)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q2, #t28, #q4)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v14, v15, #t9, #q9)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q10, #t12, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q9, #t11, #q8)
           Atom motion(v14, #q8, #t8, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q11, #t13, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, v13, #t24, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #t27, #q0)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, v13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v5 v16))
           ((sample_rock v12 #q13 v4 v16))
           ((sample_rock v12 #q6 v1 v16))
           ((sample_rock v12 #q7 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t3 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #t0 #q0))
           ((move v12 #q1 #t17 #q5))
           ((move v12 #q1 #t19 #q4))
           ((move v12 #q1 #t2 v13))
           ((move v12 #q1 #t20 #q3))
           ((move v12 #q1 #t22 #q13))
           ((move v12 #q1 #t25 #q2))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t16 #q1))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t1 #q1))
           ((move v12 #q2 #t28 #q4))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t21 #q1))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t23 #q1))
           ((move v12 #q4 #t26 #q5))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t18 #q1))
           ((move v12 #q5 #t29 #q3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t27 #q0))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t15 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t14 #q7))
           ((move v12 v13 #t24 #q6))
           ((move v12 v13 #t4 #q2))
           ((move v12 v13 #t5 #q3))
           ((move v12 v13 #t6 #q4))
           ((move v12 v13 #t7 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t12 #q8))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t13 #q8))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #t8 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t11 #q8))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q10))
           ((move v14 v15 #t9 #q9))
           ((calibrate v12 #q2 #y1 v20 v10))
           ((calibrate v12 #q3 #y2 v19 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v12 #q5 #y4 v17 v10))
           ((calibrate v14 #q10 #y7 v18 v10))
           ((calibrate v14 #q11 #y8 v17 v10))
           ((calibrate v14 #q12 #y9 v19 v10))
           ((calibrate v14 #q9 #y6 v20 v10))
           ((take_image v12 #q2 #y1 v20 v10 v11))
           ((take_image v12 #q3 #y2 v19 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v12 #q5 #y4 v17 v10 v11))
           ((take_image v14 #q10 #y7 v18 v10 v11))
           ((take_image v14 #q11 #y8 v17 v10 v11))
           ((take_image v14 #q12 #y9 v19 v10 v11))
           ((take_image v14 #q9 #y6 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y5 v9 v1))
           ((send_analysis v14 #q8 #y5 v9 v3))
           ((send_analysis v14 #q8 #y5 v9 v4))
           ((send_analysis v14 #q8 #y5 v9 v5))
           ((send_analysis v14 #q8 #y5 v9 v7))
           ((send_analysis v14 #q8 #y5 v9 v8))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Initial Assessment and Breakdown of the Goal**
           
           Okay, so I'm presented with a goal: `new-axiom@0()`. This axiom requires several conditions to be met simultaneously: I need to have images of four specific "objectives" received (v17, v18, v19, v20, all using mode v11), as well as analyses of a stone and soil type. My initial thought is to tackle this systematically. It seems like a classic multi-agent planning problem, with two rovers at my disposal (v12 and v14), and a lander (v9) that acts as a communication hub.
           
           **Breaking Down the Subgoals**
           
           *   **Image Reception:**  The main obstacle here is getting images back to base, or `receivedimage(O, M)`. To do *that*, I need the `send_image` action. To `send_image`, I need several conditions: `comvisible`, the `objective` to have an image, and the rover must `haveimage(V, O, M)`.
               *   To get `haveimage(V, O, M)`, the rovers need to **take an image** via `take_image`.
               *   To `take_image`, the rovers need to be `calibrated`, `imagevisible` to the target, `onboard` the camera, and `atconf`.
           *   **Analysis Reception:**  I also need `receivedanalysis` facts for stone and soil.  To achieve this, I need `send_analysis` after `sample_rock`.
               *   `send_analysis` has similar communication requirements to `send_image`.
               *   `sample_rock` requires me to be `above` the rock, have `free` storage space, and be at the correct `conf`.
               *   `drop_rock` can create free space.
           *   **Camera Calibration:**
               *   To do `take_image`, or do a `calibrate`, I need the correct configuration as well as vision capabilities.
           
           **Initial State Review and Key Assumptions**
           
           I start by checking the initial state. The conditions `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` are already met. This is promising. No initial blockages exist for communication.  I assume this will stay this way.
           
           **Planning for Image Acquisition**
           
           *   I'll assign `v12` to grab v17 & v18's images and `v14` for v19 & v20.  Each rover will need to move to the appropriate `atconf` location, calibrate its camera, take the picture, move to the communication hub, and then send the image.
           *   Each `take_image` action will uncalibrate the camera, meaning I need to *recalibrate* it before each picture. I cannot send and then calibrate.
           
           **Planning for Analysis**
           
           *   Since `v12` starts with free storage, I'll have it do the analysis.
           *   It will need to move to a location above a stone sample, then a soil sample. Afterward, I can send their results.
           
           **Detailed Step-by-Step Plans**
           
           Here's the detailed breakdown:
           
           **Rover v12:**
           
           1.  **Objective v17 (Image):**
               *   Move to `#q5`.
               *   Calibrate camera.
               *   Take the image.
           2.  **Objective v18 (Image):**
               *   Move to `#q4`.
               *   Calibrate camera.
               *   Take the image.
           3.  **Communication:**
               *   Move to `#q1` (communication).
               *   Send both images.
           4.  **Stone Analysis:**
               *   Move to `#q6` (rock).
               *   Sample the stone.
               *   Move back to `#q1`.
               *   Send stone analysis.
           5.  **Store Management:**
               *   Drop the stone.
           6.  **Soil Analysis:**
               *   Move to `#q0` (soil).
               *   Sample the soil.
               *   Move back to `#q1`.
               *   Send soil analysis.
           7.  **Store Management:**
               *   Drop the sample.
           8. **Ending Configuration**
               *   Move to `v13` (original position).
           
           **Rover v14:**
           
           1.  **Objective v19 (Image):**
               *   Move to `#q12`.
               
)

Model:     **Initial Assessment and Breakdown of the Goal**
           
           Okay, so I'm presented with a goal: `new-axiom@0()`. This axiom requires several conditions to be met simultaneously: I need to have images of four specific "objectives" received (v17, v18, v19, v20, all using mode v11), as well as analyses of a stone and soil type. My initial thought is to tackle this systematically. It seems like a classic multi-agent planning problem, with two rovers at my disposal (v12 and v14), and a lander (v9) that acts as a communication hub.
           
           **Breaking Down the Subgoals**
           
           *   **Image Reception:**  The main obstacle here is getting images back to base, or `receivedimage(O, M)`. To do *that*, I need the `send_image` action. To `send_image`, I need several conditions: `comvisible`, the `objective` to have an image, and the rover must `haveimage(V, O, M)`.
               *   To get `haveimage(V, O, M)`, the rovers need to **take an image** via `take_image`.
               *   To `take_image`, the rovers need to be `calibrated`, `imagevisible` to the target, `onboard` the camera, and `atconf`.
           *   **Analysis Reception:**  I also need `receivedanalysis` facts for stone and soil.  To achieve this, I need `send_analysis` after `sample_rock`.
               *   `send_analysis` has similar communication requirements to `send_image`.
               *   `sample_rock` requires me to be `above` the rock, have `free` storage space, and be at the correct `conf`.
               *   `drop_rock` can create free space.
           *   **Camera Calibration:**
               *   To do `take_image`, or do a `calibrate`, I need the correct configuration as well as vision capabilities.
           
           **Initial State Review and Key Assumptions**
           
           I start by checking the initial state. The conditions `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` are already met. This is promising. No initial blockages exist for communication.  I assume this will stay this way.
           
           **Planning for Image Acquisition**
           
           *   I'll assign `v12` to grab v17 & v18's images and `v14` for v19 & v20.  Each rover will need to move to the appropriate `atconf` location, calibrate its camera, take the picture, move to the communication hub, and then send the image.
           *   Each `take_image` action will uncalibrate the camera, meaning I need to *recalibrate* it before each picture. I cannot send and then calibrate.
           
           **Planning for Analysis**
           
           *   Since `v12` starts with free storage, I'll have it do the analysis.
           *   It will need to move to a location above a stone sample, then a soil sample. Afterward, I can send their results.
           
           **Detailed Step-by-Step Plans**
           
           Here's the detailed breakdown:
           
           **Rover v12:**
           
           1.  **Objective v17 (Image):**
               *   Move to `#q5`.
               *   Calibrate camera.
               *   Take the image.
           2.  **Objective v18 (Image):**
               *   Move to `#q4`.
               *   Calibrate camera.
               *   Take the image.
           3.  **Communication:**
               *   Move to `#q1` (communication).
               *   Send both images.
           4.  **Stone Analysis:**
               *   Move to `#q6` (rock).
               *   Sample the stone.
               *   Move back to `#q1`.
               *   Send stone analysis.
           5.  **Store Management:**
               *   Drop the stone.
           6.  **Soil Analysis:**
               *   Move to `#q0` (soil).
               *   Sample the soil.
               *   Move back to `#q1`.
               *   Send soil analysis.
           7.  **Store Management:**
               *   Drop the sample.
           8. **Ending Configuration**
               *   Move to `v13` (original position).
           
           **Rover v14:**
           
           1.  **Objective v19 (Image):**
               *   Move to `#q12`.
               

