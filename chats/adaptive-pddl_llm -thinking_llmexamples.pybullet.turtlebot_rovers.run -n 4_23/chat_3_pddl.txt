User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom camera(v10)
           Atom lander(v9)
           Atom type(v8, v6)
           Atom objective(v20)
           Atom onboard(v10, v12)
           Atom rover(v12)
           Atom type(v7, v6)
           Atom objective(v17)
           Atom type(v5, v6)
           Atom rover(v14)
           Atom type(v3, v2)
           Atom supports(v10, v11)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom objective(v19)
           Atom rock(v1)
           Atom objective(v18)
           Atom free(v12, v16)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom store(v16)
           Atom atconf(v12, v13)
           Atom rock(v7)
           Atom atconf(v14, v15)
           Atom rock(v5)
           Atom conf(v12, v13)
           Atom rock(v4)
           Atom rock(v3)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q7, v3)
           Atom conf(v12, #q7)
           Atom above(v12, #q0, v5)
           Atom conf(v12, #q0)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #q2, #y1, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q9, #y6, v20)
           Atom imagerange(v14, #q9, v20)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom comvisible(v14, #q8, #y5, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #q10, #y7, v18)
           Atom imagerange(v14, #q10, v18)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom above(v14, #o5, v1)
           Atom above(v12, #q6, v1)
           Atom conf(v12, #q6)
           Atom imagevisible(v14, #q11, #y8, v17)
           Atom imagerange(v14, #q11, v17)
           Atom conf(v14, #q11)
           Atom ray(#y8)
           Atom imagevisible(v12, #q5, #y4, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom imagevisible(v14, #q12, #y9, v19)
           Atom imagerange(v14, #q12, v19)
           Atom conf(v14, #q12)
           Atom ray(#y9)
           Atom imagevisible(v12, #q3, #y2, v19)
           Atom imagerange(v12, #q3, v19)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #t7, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q1, #t2, v13)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #t1, #q1)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, v13, #t4, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #t3, #q1)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q1, #t0, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, v13, #t14, #q7)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q7, #t15, #q1)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, v15, #t10, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #t12, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q11, #t13, #q8)
           Atom motion(v14, #q8, #t8, v15)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, v13, #t5, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v14, #q9, #t11, #q8)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #t9, #q9)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, v15, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v5 v16))
           ((sample_rock v12 #q6 v1 v16))
           ((sample_rock v12 #q7 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t3 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #t0 #q0))
           ((move v12 #q1 #t2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t1 #q1))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t15 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t14 #q7))
           ((move v12 v13 #t4 #q2))
           ((move v12 v13 #t5 #q3))
           ((move v12 v13 #t6 #q4))
           ((move v12 v13 #t7 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t12 #q8))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t13 #q8))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #t8 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t11 #q8))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q10))
           ((move v14 v15 #t9 #q9))
           ((calibrate v12 #q2 #y1 v20 v10))
           ((calibrate v12 #q3 #y2 v19 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v12 #q5 #y4 v17 v10))
           ((calibrate v14 #q10 #y7 v18 v10))
           ((calibrate v14 #q11 #y8 v17 v10))
           ((calibrate v14 #q12 #y9 v19 v10))
           ((calibrate v14 #q9 #y6 v20 v10))
           ((take_image v12 #q2 #y1 v20 v10 v11))
           ((take_image v12 #q3 #y2 v19 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v12 #q5 #y4 v17 v10 v11))
           ((take_image v14 #q10 #y7 v18 v10 v11))
           ((take_image v14 #q11 #y8 v17 v10 v11))
           ((take_image v14 #q12 #y9 v19 v10 v11))
           ((take_image v14 #q9 #y6 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y5 v9 v1))
           ((send_analysis v14 #q8 #y5 v9 v3))
           ((send_analysis v14 #q8 #y5 v9 v4))
           ((send_analysis v14 #q8 #y5 v9 v5))
           ((send_analysis v14 #q8 #y5 v9 v7))
           ((send_analysis v14 #q8 #y5 v9 v8))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Detailed Plan to Achieve `new-axiom@0()`**
           
           Okay, here's the game plan. My primary objective is to make sure all the necessary conditions for the `new-axiom@0()` are met. Since I'm starting off in a state where I have a rover `v12` at location `v13` and another rover `v14` at `v15`, and I know I have some images and analyses to deal with, I'm going to focus my efforts on accomplishing three main goals.
           
           Firstly, the most urgent matter is to send back images. I've been given four objectives: `v17`, `v18`, `v19`, and `v20`, all needing to be taken with `mode v11`. I'll use rover `v12` which is at location `v13` to handle this, as it's the one I'm working with and it already has the appropriate tools. To capture those images, I'll need to move my rover to specific configuration points (`#q2`, `#q4`, `#q5`, `#q3`, `#o5` and `#q0`) to photograph each objective. I will use the camera `v10` on `v12` for all image captures. The plan is to:
           
           1.  Move to the visibility point for `v20`, calibrate `v10`, take the image, move to a communication point (`#q1`), and send it.
           2.  Repeat step 1 for objectives `v18`, `v17`, and `v19`.
           
           Second, I need to send analysis results. I need to analyze and transmit data for one rock of type `v2` (that is, `v1`, `v3`, or `v4`) and one of type `v6` (that is, `v5`, `v7`, or `v8`). I'm going to opt to use the rover `v12`, which means I will have to move around more, but is more reliable. My plan is to:
           
           1.  Use `v12` to move to location `#o5`, the point to take a sample from the specific rock of type `v2` that I will sample, `v4`.
           2.  Send the analysis back to base.
           3.  Drop `v4`, freeing the storage and allowing for me to collect `v5`.
           4.  Move `v12` to config `#q0` to be above `v5`.
           5.  Sample `v5`.
           6.  Move `v12` to config `#q1`.
           7.  Send the analysis for `v5` to base.
           8.  Drop the `v5` sample.
           
           Finally, at the end of all the work to achieve the state, I need to make sure rover `v12` is back at location `v13`.
           
           Here is the exact sequence of actions:
           1.  **Image v20:**
               *   `move v12 v13 #t4 #q2`
               *   `calibrate v12 #q2 #y1 v20 v10`
               *   `take_image v12 #q2 #y1 v20 v10 v11`
               *   `move v12 #q2 #t1 #q1`
               *   `send_image v12 #q1 #y0 v9 v20 v11`
           2.  **Image v18:**
               *   `move v12 #q1 #o2 #q4`
               *   `calibrate v12 #q4 #y3 v18 v10`
               *   `take_image v12 #q4 #y3 v18 v10 v11`
               *   `move v12 #q4 #o2 #q1`
               *   `send_image v12 #q1 #y0 v9 v18 v11`
           3.  **Image v17:**
               *   `move v12 #q1 #o2 #q5`
               *   `calibrate v12 #q5 #y4 v17 v10`
               *   `take_image v12 #q5 #y4 v17 v10 v11`
               *   `move v12 #q5 #o2 #q1`
               *   `send_image v12 #q1 #y0 v9 v17 v11`
           4.  **Image v1
)

Model:     **A Detailed Plan to Achieve `new-axiom@0()`**
           
           Okay, here's the game plan. My primary objective is to make sure all the necessary conditions for the `new-axiom@0()` are met. Since I'm starting off in a state where I have a rover `v12` at location `v13` and another rover `v14` at `v15`, and I know I have some images and analyses to deal with, I'm going to focus my efforts on accomplishing three main goals.
           
           Firstly, the most urgent matter is to send back images. I've been given four objectives: `v17`, `v18`, `v19`, and `v20`, all needing to be taken with `mode v11`. I'll use rover `v12` which is at location `v13` to handle this, as it's the one I'm working with and it already has the appropriate tools. To capture those images, I'll need to move my rover to specific configuration points (`#q2`, `#q4`, `#q5`, `#q3`, `#o5` and `#q0`) to photograph each objective. I will use the camera `v10` on `v12` for all image captures. The plan is to:
           
           1.  Move to the visibility point for `v20`, calibrate `v10`, take the image, move to a communication point (`#q1`), and send it.
           2.  Repeat step 1 for objectives `v18`, `v17`, and `v19`.
           
           Second, I need to send analysis results. I need to analyze and transmit data for one rock of type `v2` (that is, `v1`, `v3`, or `v4`) and one of type `v6` (that is, `v5`, `v7`, or `v8`). I'm going to opt to use the rover `v12`, which means I will have to move around more, but is more reliable. My plan is to:
           
           1.  Use `v12` to move to location `#o5`, the point to take a sample from the specific rock of type `v2` that I will sample, `v4`.
           2.  Send the analysis back to base.
           3.  Drop `v4`, freeing the storage and allowing for me to collect `v5`.
           4.  Move `v12` to config `#q0` to be above `v5`.
           5.  Sample `v5`.
           6.  Move `v12` to config `#q1`.
           7.  Send the analysis for `v5` to base.
           8.  Drop the `v5` sample.
           
           Finally, at the end of all the work to achieve the state, I need to make sure rover `v12` is back at location `v13`.
           
           Here is the exact sequence of actions:
           1.  **Image v20:**
               *   `move v12 v13 #t4 #q2`
               *   `calibrate v12 #q2 #y1 v20 v10`
               *   `take_image v12 #q2 #y1 v20 v10 v11`
               *   `move v12 #q2 #t1 #q1`
               *   `send_image v12 #q1 #y0 v9 v20 v11`
           2.  **Image v18:**
               *   `move v12 #q1 #o2 #q4`
               *   `calibrate v12 #q4 #y3 v18 v10`
               *   `take_image v12 #q4 #y3 v18 v10 v11`
               *   `move v12 #q4 #o2 #q1`
               *   `send_image v12 #q1 #y0 v9 v18 v11`
           3.  **Image v17:**
               *   `move v12 #q1 #o2 #q5`
               *   `calibrate v12 #q5 #y4 v17 v10`
               *   `take_image v12 #q5 #y4 v17 v10 v11`
               *   `move v12 #q5 #o2 #q1`
               *   `send_image v12 #q1 #y0 v9 v17 v11`
           4.  **Image v1

