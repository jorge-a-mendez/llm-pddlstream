User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v8, v9)
           Atom arm(v6)
           Atom stackable(v8, v10)
           Atom stackable(v15, v10)
           Atom controllable(v4)
           Atom stackable(v12, v18)
           Atom bconf(v3)
           Atom atpose(v12, v13)
           Atom graspable(v12)
           Atom stackable(v12, v10)
           Atom handempty(v6)
           Atom pose(v12, v13)
           Atom supported(v15, v16, v11)
           Atom arm(v4)
           Atom supported(v8, v9, v11)
           Atom atbconf(v3)
           Atom ataconf(v4, v5)
           Atom stackable(v8, v18)
           Atom handempty(v4)
           Atom graspable(v15)
           Atom type(v12, v17)
           Atom pose(v15, v16)
           Atom canmove()
           Atom aconf(v6, v7)
           Atom ataconf(v6, v7)
           Atom atpose(v15, v16)
           Atom atpose(v8, v9)
           Atom aconf(v4, v5)
           Atom supported(v12, v13, v14)
           Atom type(v8, v17)
           Atom graspable(v8)
           Atom grasp(v8, #o1)
           Atom grasp(v15, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v12, #o2, v18)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects: `v3`, `v4`, `v5`, `v6`, `v7`, `v8`, `v9`, `v10`, `v11`, `v12`, `v13`, `v14`, `v15`, `v16`, `v17`, `v18`. There are also some continuous parameters `#o0`, `#o1`, `#o2`.
           
           The robot has two arms: `v4` and `v6`. Both are initially empty. The robot's base is at configuration `v3`.
           
           There are three graspable objects: `v8`, `v12`, and `v15`.
           `v8` is at `v9` and supported by `v11`. It is also type `v17`. It can be grasped with `#o1`. It can be stacked on `v10` and `v18`.
           `v12` is at `v13` and supported by `v14`. It is also type `v17`. It can be grasped with `#o1`. It can be stacked on `v10` and `v18`.
           `v15` is at `v16` and supported by `v11`. It can be grasped with `#o1`. It can be stacked on `v10`.
           
           The goal is `new-axiom@0()`, which by the axiom definition means `on(?green, v18)` and `type(?green, v17)`. In this specific problem, there is no object named `green`, so we need to infer which object acts as `green`. Looking at the initial state, `v8` and `v12` are of type `v17`. The goal is to have an object of type `v17` on `v18`. `v8` is stackable on `v18`, and `v12` is stackable on `v18`.
           
           The only available action is `(move_base v3 v3 #o0)`. This action does not change the state of objects in terms of their pose or support, nor does it affect what objects are held by the arms. It only changes the base configuration from `v3` to `v3` and makes `canmove()` false. This action does not help achieve the goal of placing an object of type `v17` on `v18`.
           
           Since no `pick` or `place` actions are available, the robot cannot manipulate any objects. Therefore, the goal is unreachable.
           
           The initial state shows that `atpose(v8, v9)` and `supported(v8, v9, v11)`, which means `on(v8, v11)`. Similarly, `on(v15, v11)` and `on(v12, v14)`. None of these satisfy `on(?green, v18)`.
           
           Since there are no `pick` or `place` actions available, the robot cannot move any object onto `v18`.
           
           The goal is unreachable because there are no actions provided that would allow the robot to pick up and place an object.

