User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom camera(v10)
           Atom objective(v18)
           Atom type(v5, v6)
           Atom rock(v7)
           Atom type(v8, v6)
           Atom onboard(v10, v14)
           Atom objective(v20)
           Atom rock(v1)
           Atom type(v3, v2)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom conf(v12, v13)
           Atom supports(v10, v11)
           Atom rover(v14)
           Atom free(v14, v16)
           Atom objective(v19)
           Atom objective(v17)
           Atom rock(v4)
           Atom store(v16)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom rover(v12)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom rock(v3)
           Atom lander(v9)
           Atom atconf(v12, v13)
           Atom atconf(v14, v15)
           Atom free(v12, v16)
           Atom mode(v11)
           Atom imagevisible(v14, #q6, #y5, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y5)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v8)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v12, #q13, #y9, v18)
           Atom imagerange(v12, #q13, v18)
           Atom conf(v12, #q13)
           Atom ray(#y9)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q5, #y4, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom above(v12, #q8, v7)
           Atom conf(v12, #q8)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom above(v12, #q2, v5)
           Atom conf(v12, #q2)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v1)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v14, #q4, #y3, v17)
           Atom imagerange(v14, #q4, v17)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q10, #y6, v17)
           Atom imagerange(v12, #q10, v17)
           Atom conf(v12, #q10)
           Atom ray(#y6)
           Atom imagevisible(v14, #q0, #y0, v20)
           Atom imagerange(v14, #q0, v20)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q11, #y7, v20)
           Atom imagerange(v12, #q11, v20)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom imagevisible(v14, #q3, #y2, v19)
           Atom imagerange(v14, #q3, v19)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom imagevisible(v12, #q12, #y8, v19)
           Atom imagerange(v12, #q12, v19)
           Atom conf(v12, #q12)
           Atom ray(#y8)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, v13, #t19, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, v13, #t18, #q11)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #t6, v15)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t1, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, v13, #t17, #q10)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, v13, #t4, #q2)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q2, #t2, #q5)
           Atom motion(v12, #q5, #t16, #q11)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q5, #t7, #q2)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #t14, #q9)
           Atom motion(v12, #q11, #t12, #q5)
           Atom motion(v12, #q5, #t13, #q8)
           Atom motion(v12, #q8, #t10, #q5)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #t15, #q10)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q10, #t11, #q5)
           Atom motion(v12, #q5, #t9, v13)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q5, #t8, #q7)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, v13, #t5, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #t3, #q5)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, v15)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v5 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q8 v7 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t11 #q5))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t12 #q5))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t2 #q5))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t13 #q8))
           ((move v12 #q5 #t14 #q9))
           ((move v12 #q5 #t15 #q10))
           ((move v12 #q5 #t16 #q11))
           ((move v12 #q5 #t7 #q2))
           ((move v12 #q5 #t8 #q7))
           ((move v12 #q5 #t9 v13))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t3 #q5))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t10 #q5))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q10))
           ((move v12 v13 #t18 #q11))
           ((move v12 v13 #t19 #q12))
           ((move v12 v13 #t4 #q2))
           ((move v12 v13 #t5 #q7))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #t6 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((calibrate v12 #q10 #y6 v17 v10))
           ((calibrate v12 #q11 #y7 v20 v10))
           ((calibrate v12 #q12 #y8 v19 v10))
           ((calibrate v12 #q13 #y9 v18 v10))
           ((calibrate v14 #q0 #y0 v20 v10))
           ((calibrate v14 #q3 #y2 v19 v10))
           ((calibrate v14 #q4 #y3 v17 v10))
           ((calibrate v14 #q6 #y5 v18 v10))
           ((take_image v12 #q10 #y6 v17 v10 v11))
           ((take_image v12 #q11 #y7 v20 v10 v11))
           ((take_image v12 #q12 #y8 v19 v10 v11))
           ((take_image v12 #q13 #y9 v18 v10 v11))
           ((take_image v14 #q0 #y0 v20 v10 v11))
           ((take_image v14 #q3 #y2 v19 v10 v11))
           ((take_image v14 #q4 #y3 v17 v10 v11))
           ((take_image v14 #q6 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y4 v9 v4))
           ((send_analysis v12 #q5 #y4 v9 v8))
           ((send_analysis v12 #q5 #y4 v9 v5))
           ((send_analysis v12 #q5 #y4 v9 v1))
           ((send_analysis v12 #q5 #y4 v9 v7))
           ((send_analysis v12 #q5 #y4 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_image v12 #q5 #y4 v9 v17 v11))
           ((send_image v12 #q5 #y4 v9 v20 v11))
           ((send_image v12 #q5 #y4 v9 v19 v11))
           ((send_image v12 #q5 #y4 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, each equipped with a camera `v10` that supports mode `v11`. There are various rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`, `v19`, `v20`). A lander `v9` is present for communication. Both rovers have a free storage unit `v16`.
           
           The goal `new-axiom@0()` is a complex axiom that requires several conditions to be met, as per the provided axiom definitions. Specifically, it requires:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers are already at these configurations in the initial state.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers have free storage, which is also true in the initial state.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: Images of all four objectives (`v17`, `v18`, `v19`, `v20`) in mode `v11` must be received. This requires taking images and sending them to the lander.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: An analysis of a rock of type `v2` must be received. Rocks `v1`, `v3`, `v4` are of type `v2`.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: An analysis of a rock of type `v6` must be received. Rocks `v5`, `v7`, `v8` are of type `v6`.
           
           Therefore, the plan should involve:
           - Taking images of `v17`, `v18`, `v19`, `v20` with either rover `v12` or `v14`, using camera `v10` in mode `v11`.
           - Sending these images to the lander `v9`.
           - Sampling and analyzing at least one rock of type `v2` (e.g., `v1`, `v3`, or `v4`).
           - Sampling and analyzing at least one rock of type `v6` (e.g., `v5`, `v7`, or `v8`).
           - Sending the analysis of these sampled rocks to the lander `v9`.
           
           I will use `v14` for imaging all objectives and `v12` for sampling rocks and sending analyses.
           
           **Image Collection and Transmission (Rover v14):**
           - Calibrate `v10` for each objective.
           - Take an image of each objective.
           - Move `v14` to a configuration where it can communicate with `v9`.
           - Send all taken images to `v9`.
           
           **Rock Analysis and Transmission (Rover v12):**
           - Move `v12` to a configuration where it can sample a rock of type `v2`.
           - Sample a rock of type `v2` (e.g., `v3`).
           - Move `v12` to a configuration where it can sample a rock of type `v6`.
           - Sample a rock of type `v6` (e.g., `v7`).
           - Move `v12` to a configuration where it can communicate with `v9`.
           - Send analyses of the sampled rocks to `v9`.
           
           Let's refine the plan based on available actions and optimal path:
           
           **Rover v14 (Imaging):**
           1. Calibrate camera `v10` for `v17` at `#q4`.
           2. Take image of `v17`.
           3. Calibrate camera `v10` for `v18` at `#q6`.
           4. Take image of `v18`.
           5. Calibrate camera `v10` for `v19` at `#q3`.
           6. Take image of `v19`.
           7. Calibrate camera `v10` for `v20` at `#q0`.
           8. Take image of `v20`.
           9. Move `v14` to `#q1` for communication.
           10. Send all images.
           
           **Rover v12 (Sampling and Analysis):**
           1. Sample rock `v3` (type `v2`) at `#q9`.
           2. Sample rock `v7` (type `v6`) at `#q8`.
           3. Move `v12` to `#q5` for communication.
           4. Send analyses.
           
           This approach minimizes movement and distributes tasks between the rovers.
           
           --Plan--:
           (calibrate v14 #q4 #y3 v17 v10)
           (take_image v14 #q4 #y3 v17 v10 v11)
           (calibrate v14 #q6 #y5 v18 v10)
           (take_image v14 #q6 #y5 v18 v10 v11)
           (calibrate v14 #q3 #y2 v19 v10)
           (take_image v14 #q3 #y2 v19 v10 v11)
           (calibrate v14 #q0 #y0 v20 v10)
           (take_image v14 #q0 #y0 v20 v10 v11)
           (move v14 v15 #o2 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (sample_rock v12 #q9 v3 v16)
           (sample_rock v12 #q8 v7 v16)
           (move v12 v13 #o2 #q5)
           (send_analysis v12 #q5 #y4 v9 v3)
           (send_analysis v12 #q5 #y4 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies, the previous plan did not correctly achieve the `new-axiom@0()` goal, which is an axiom and requires all its conjuncts to be true. I understand that the plan must satisfy all the conditions of this axiom.
           
           Let's re-evaluate the goal `new-axiom@0()` and the corresponding conditions:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: These are true in the initial state.
           2. `free(v12, v16)` and `free(v14, v16)`: These are true in the initial state.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: All four objectives must have their images received.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: At least one rock of type `v2` must have its analysis received. (Rocks `v1`, `v3`, `v4` are type `v2`).
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: At least one rock of type `v6` must have its analysis received. (Rocks `v5`, `v7`, `v8` are type `v6`).
           
           My previous plan missed that after `sample_rock` action, the `free` predicate for that rover and store becomes `full`, and I need `free` for both rovers and stores to remain true for the axiom. This means if I sample, I must also `drop_rock` to ensure `free` is true.
           
           Let's refine the plan to address this:
           
           **Rover v14 (Imaging):**
           This part of the plan seems fine as it only involves imaging and sending, which doesn't affect the `free` predicate.
           - Calibrate camera `v10` for each objective.
           - Take an image of each objective.
           - Move `v14` to a configuration where it can communicate with `v9`.
           - Send all taken images to `v9`.
           
           **Rover v12 (Sampling, Analysis, and Drop):**
           This is where the issue was. To satisfy the `free(v12, v16)` condition, `v12` must `drop_rock` after sampling.
           - Move `v12` to a configuration where it can sample a rock of type `v2` (e.g., `v3`).
           - Sample `v3`.
           - Send analysis of `v3`.
           - Drop the sampled rock to free the store.
           - Move `v12` to a configuration where it can sample a rock of type `v6` (e.g., `v7`).
           - Sample `v7`.
           - Send analysis of `v7`.
           - Drop the sampled rock to free the store.
           - Move `v12` to a configuration where it can communicate with `v9`. (This step is technically not needed if `send_analysis` is done at the sampling location and that location is also `comvisible`. However, for consistency and to ensure `comvisible` is always met, I'll include it.)
           
           Let's choose specific locations and objects for actions:
           - `v14` for imaging:
               - `v17` at `#q4`
               - `v18` at `#q6`
               - `v19` at `#q3`
               - `v20` at `#q0`
               - Communicate at `#q1`
           - `v12` for sampling:
               - `v3` (type `v2`) at `#q9`
               - `v7` (type `v6`) at `#q8`
               - Communicate at `#q5`
           
           New plan structure:
           
           --Plan--:
           (calibrate v14 #q4 #y3 v17 v10)
           (take_image v14 #q4 #y3 v17 v10 v11)
           (calibrate v14 #q6 #y5 v18 v10)
           (take_image v14 #q6 #y5 v18 v10 v11)
           (calibrate v14 #q3 #y2 v19 v10)
           (take_image v14 #q3 #y2 v19 v10 v11)
           (calibrate v14 #q0 #y0 v20 v10)
           (take_image v14 #q0 #y0 v20 v10 v11)
           (move v14 v15 #o2 #q1) ; Move v14 to a communication point
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (move v12 v13 #o2 #q9) ; Move v12 to sample rock v3
           (sample_rock v12 #q9 v3 v16)
           (move v12 #q9 #o2 #q5) ; Move v12 to communication point for analysis
           (send_analysis v12 #q5 #y4 v9 v3)
           (drop_rock v12 v16) ; Free the store for v12
           (move v12 #q5 #o2 #q8) ; Move v12 to sample rock v7
           (sample_rock v12 #q8 v7 v16)
           (move v12 #q8 #o2 #q5) ; Move v12 to communication point for analysis
           (send_analysis v12 #q5 #y4 v9 v7)
           (drop_rock v12 v16) ; Free the store for v12

User:      The plan you provided contains the following invalid actions: `(move v12 #q5 #o2 #q8), (move v12 #q8 #o2 #q5)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v5 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q8 v7 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t11 #q5))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t12 #q5))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t2 #q5))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t13 #q8))
           ((move v12 #q5 #t14 #q9))
           ((move v12 #q5 #t15 #q10))
           ((move v12 #q5 #t16 #q11))
           ((move v12 #q5 #t7 #q2))
           ((move v12 #q5 #t8 #q7))
           ((move v12 #q5 #t9 v13))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t3 #q5))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t10 #q5))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q10))
           ((move v12 v13 #t18 #q11))
           ((move v12 v13 #t19 #q12))
           ((move v12 v13 #t4 #q2))
           ((move v12 v13 #t5 #q7))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #t6 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((calibrate v12 #q10 #y6 v17 v10))
           ((calibrate v12 #q11 #y7 v20 v10))
           ((calibrate v12 #q12 #y8 v19 v10))
           ((calibrate v12 #q13 #y9 v18 v10))
           ((calibrate v14 #q0 #y0 v20 v10))
           ((calibrate v14 #q3 #y2 v19 v10))
           ((calibrate v14 #q4 #y3 v17 v10))
           ((calibrate v14 #q6 #y5 v18 v10))
           ((take_image v12 #q10 #y6 v17 v10 v11))
           ((take_image v12 #q11 #y7 v20 v10 v11))
           ((take_image v12 #q12 #y8 v19 v10 v11))
           ((take_image v12 #q13 #y9 v18 v10 v11))
           ((take_image v14 #q0 #y0 v20 v10 v11))
           ((take_image v14 #q3 #y2 v19 v10 v11))
           ((take_image v14 #q4 #y3 v17 v10 v11))
           ((take_image v14 #q6 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y4 v9 v4))
           ((send_analysis v12 #q5 #y4 v9 v8))
           ((send_analysis v12 #q5 #y4 v9 v5))
           ((send_analysis v12 #q5 #y4 v9 v1))
           ((send_analysis v12 #q5 #y4 v9 v7))
           ((send_analysis v12 #q5 #y4 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_image v12 #q5 #y4 v9 v17 v11))
           ((send_image v12 #q5 #y4 v9 v20 v11))
           ((send_image v12 #q5 #y4 v9 v19 v11))
           ((send_image v12 #q5 #y4 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     My apologies again. I made an error in selecting the movement actions for rover `v12`. I should have carefully checked the provided list of valid action instances.
           
           Let's re-examine the available moves for `v12` to connect configurations:
           - From `v13` (current `atconf` for `v12`): `(move v12 v13 #o2 #q9)` is valid.
           - From `#q9` (after sampling `v3`): Need to move to `#q5` for communication. I see `(move v12 #q9 #o2 #q5)` is a valid move.
           - From `#q5` (after sending analysis for `v3` and dropping it): Need to move to `#q8` for sampling `v7`. I see `(move v12 #q5 #t13 #q8)` is a valid move.
           - From `#q8` (after sampling `v7`): Need to move back to `#q5` for communication. I see `(move v12 #q8 #t10 #q5)` is a valid move.
           
           Okay, with these corrections for `v12`'s movements, the plan should now be valid with respect to the allowed actions.
           
           --Plan--:
           (calibrate v14 #q4 #y3 v17 v10)
           (take_image v14 #q4 #y3 v17 v10 v11)
           (calibrate v14 #q6 #y5 v18 v10)
           (take_image v14 #q6 #y5 v18 v10 v11)
           (calibrate v14 #q3 #y2 v19 v10)
           (take_image v14 #q3 #y2 v19 v10 v11)
           (calibrate v14 #q0 #y0 v20 v10)
           (take_image v14 #q0 #y0 v20 v10 v11)
           (move v14 v15 #o2 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (move v12 v13 #o2 #q9)
           (sample_rock v12 #q9 v3 v16)
           (move v12 #q9 #o2 #q5)
           (send_analysis v12 #q5 #y4 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q5 #t13 #q8)
           (sample_rock v12 #q8 v7 v16)
           (move v12 #q8 #t10 #q5)
           (send_analysis v12 #q5 #y4 v9 v7)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies once again. It seems I am consistently missing a detail regarding the `new-axiom@0()` goal. The axiom states:
           
           `Axiom new-axiom@0()`
             `Conjunction`
               `Atom atconf(v12, v13)`
               `Atom atconf(v14, v15)`
               `Atom free(v12, v16)`
               `Atom free(v14, v16)`
               `Atom receivedimage(v17, v11)`
               `Atom receivedimage(v18, v11)`
               `Atom receivedimage(v19, v11)`
               `Atom receivedimage(v20, v11)`
               `Atom type(?stone, v2)`
               `Atom receivedanalysis(?stone)`
               `Atom type(?soil, v6)`
               `Atom receivedanalysis(?soil)`
           
           My previous plans ensured `receivedimage` and `receivedanalysis` and then `drop_rock` to try and maintain `free`. The issue must be that the `atconf` predicates are *not* maintained as `(v12, v13)` and `(v14, v15)` throughout the entire process. The rovers move to different configurations to perform actions.
           
           The goal `new-axiom@0()` requires that at the final state, both `atconf(v12, v13)` and `atconf(v14, v15)` must be true. This means after completing all tasks (imaging, sending images, sampling, sending analysis, dropping rocks), both rovers must return to their initial configurations (`v13` for `v12` and `v15` for `v14`).
           
           Let's adjust the plan to include returning both rovers to their initial configurations.
           
           **Revised Plan Strategy:**
           
           **Rover v14 (Imaging and Return):**
           1. Calibrate camera `v10` for `v17` at `#q4`.
           2. Take image of `v17`.
           3. Calibrate camera `v10` for `v18` at `#q6`.
           4. Take image of `v18`.
           5. Calibrate camera `v10` for `v19` at `#q3`.
           6. Take image of `v19`.
           7. Calibrate camera `v10` for `v20` at `#q0`.
           8. Take image of `v20`.
           9. Move `v14` to `#q1` for communication.
           10. Send all images.
           11. **Return `v14` to `v15`.**
           
           **Rover v12 (Sampling, Analysis, Drop, and Return):**
           1. Move `v12` to `#q9` to sample rock `v3`.
           2. Sample `v3`.
           3. Move `v12` to `#q5` for communication.
           4. Send analysis of `v3`.
           5. Drop `v3`.
           6. Move `v12` from `#q5` to `#q8` to sample rock `v7`.
           7. Sample `v7`.
           8. Move `v12` from `#q8` to `#q5` for communication.
           9. Send analysis of `v7`.
           10. Drop `v7`.
           11. **Return `v12` to `v13`.**
           
           Let's confirm the return paths are available from the valid actions.
           
           For `v14`: After sending images at `#q1`, `(move v14 #q1 #t6 v15)` is a valid action to return to `v15`.
           
           For `v12`: After dropping the last rock at `#q5`, `(move v12 #q5 #t9 v13)` is a valid action to return to `v13`.
           
           --Plan--:
           (calibrate v14 #q4 #y3 v17 v10)
           (take_image v14 #q4 #y3 v17 v10 v11)
           (calibrate v14 #q6 #y5 v18 v10)
           (take_image v14 #q6 #y5 v18 v10 v11)
           (calibrate v14 #q3 #y2 v19 v10)
           (take_image v14 #q3 #y2 v19 v10 v11)
           (calibrate v14 #q0 #y0 v20 v10)
           (take_image v14 #q0 #y0 v20 v10 v11)
           (move v14 v15 #o2 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (move v14 #q1 #t6 v15) ; Return v14 to its initial config
           (move v12 v13 #o2 #q9)
           (sample_rock v12 #q9 v3 v16)
           (move v12 #q9 #o2 #q5)
           (send_analysis v12 #q5 #y4 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q5 #t13 #q8)
           (sample_rock v12 #q8 v7 v16)
           (move v12 #q8 #t10 #q5)
           (send_analysis v12 #q5 #y4 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q5 #t9 v13) ; Return v12 to its initial config

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v14, #q4) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My deepest apologies. It appears I made a critical error by assuming the rovers could start their tasks from their initial configurations without moving to the specific image/sample/com configurations *first*.
           
           The initial state shows:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           
           For `v14` to perform `(calibrate v14 #q4 #y3 v17 v10)`, the precondition `atconf(v14, #q4)` must be met. Since `v14` starts at `v15`, it needs to move to `#q4` first.
           
           Let's correct this by adding initial movement actions for both rovers to their first task location.
           
           **Revised Plan Strategy:**
           
           **Rover v14 (Imaging, Send, and Return):**
           1. **Move `v14` from `v15` to `#q4`.**
           2. Calibrate camera `v10` for `v17` at `#q4`.
           3. Take image of `v17`.
           4. **Move `v14` from `#q4` to `#q6`.**
           5. Calibrate camera `v10` for `v18` at `#q6`.
           6. Take image of `v18`.
           7. **Move `v14` from `#q6` to `#q3`.**
           8. Calibrate camera `v10` for `v19` at `#q3`.
           9. Take image of `v19`.
           10. **Move `v14` from `#q3` to `#q0`.**
           11. Calibrate camera `v10` for `v20` at `#q0`.
           12. Take image of `v20`.
           13. **Move `v14` from `#q0` to `#q1` for communication.**
           14. Send all images.
           15. **Return `v14` from `#q1` to `v15`.**
           
           **Rover v12 (Sampling, Analysis, Drop, and Return):**
           1. **Move `v12` from `v13` to `#q9`.**
           2. Sample `v3`.
           3. **Move `v12` from `#q9` to `#q5` for communication.**
           4. Send analysis of `v3`.
           5. Drop `v3`.
           6. **Move `v12` from `#q5` to `#q8` to sample rock `v7`.**
           7. Sample `v7`.
           8. **Move `v12` from `#q8` to `#q5` for communication.**
           9. Send analysis of `v7`.
           10. Drop `v7`.
           11. **Return `v12` from `#q5` to `v13`.**
           
           Let's check available moves again:
           - `v14` initial moves:
               - `(move v14 v15 #o2 #q4)` is valid.
               - `(move v14 #q4 #o2 #q6)` is valid.
               - `(move v14 #q6 #o2 #q3)` is valid.
               - `(move v14 #q3 #o2 #q0)` is valid.
               - `(move v14 #q0 #t0 #q1)` is valid.
               - `(move v14 #q1 #t6 v15)` is valid for return.
           - `v12` initial moves:
               - `(move v12 v13 #o2 #q9)` is valid.
               - `(move v12 #q9 #o2 #q5)` is valid.
               - `(move v12 #q5 #t13 #q8)` is valid.
               - `(move v12 #q8 #t10 #q5)` is valid.
               - `(move v12 #q5 #t9 v13)` is valid for return.
           
           This looks like a solid plan.
           
           --Plan--:
           (move v14 v15 #o2 #q4)
           (calibrate v14 #q4 #y3 v17 v10)
           (take_image v14 #q4 #y3 v17 v10 v11)
           (move v14 #q4 #o2 #q6)
           (calibrate v14 #q6 #y5 v18 v10)
           (take_image v14 #q6 #y5 v18 v10 v11)
           (move v14 #q6 #o2 #q3)
           (calibrate v14 #q3 #y2 v19 v10)
           (take_image v14 #q3 #y2 v19 v10 v11)
           (move v14 #q3 #o2 #q0)
           (calibrate v14 #q0 #y0 v20 v10)
           (take_image v14 #q0 #y0 v20 v10 v11)
           (move v14 #q0 #t0 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (move v14 #q1 #t6 v15)
           (move v12 v13 #o2 #q9)
           (sample_rock v12 #q9 v3 v16)
           (move v12 #q9 #o2 #q5)
           (send_analysis v12 #q5 #y4 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q5 #t13 #q8)
           (sample_rock v12 #q8 v7 v16)
           (move v12 #q8 #t10 #q5)
           (send_analysis v12 #q5 #y4 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q5 #t9 v13)

