User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom camera(v10)
           Atom objective(v18)
           Atom type(v5, v6)
           Atom rock(v7)
           Atom type(v8, v6)
           Atom onboard(v10, v14)
           Atom objective(v20)
           Atom rock(v1)
           Atom type(v3, v2)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom conf(v12, v13)
           Atom supports(v10, v11)
           Atom rover(v14)
           Atom free(v14, v16)
           Atom objective(v19)
           Atom objective(v17)
           Atom rock(v4)
           Atom store(v16)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom rover(v12)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom rock(v3)
           Atom lander(v9)
           Atom atconf(v12, v13)
           Atom atconf(v14, v15)
           Atom free(v12, v16)
           Atom mode(v11)
           Atom imagevisible(v14, #q6, #y5, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y5)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v8)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #q8, v7)
           Atom conf(v12, #q8)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom comvisible(v12, #q5, #y4, v9)
           Atom comrange(v12, #q5, v9)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom imagevisible(v12, #q13, #y9, v18)
           Atom imagerange(v12, #q13, v18)
           Atom conf(v12, #q13)
           Atom ray(#y9)
           Atom above(v14, #o5, v5)
           Atom above(v12, #q2, v5)
           Atom conf(v12, #q2)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom above(v14, #o5, v1)
           Atom above(v12, #o5, v4)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v12, #q10, #y6, v17)
           Atom imagerange(v12, #q10, v17)
           Atom conf(v12, #q10)
           Atom ray(#y6)
           Atom imagevisible(v14, #q4, #y3, v17)
           Atom imagerange(v14, #q4, v17)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #q0, #y0, v20)
           Atom imagerange(v14, #q0, v20)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q11, #y7, v20)
           Atom imagerange(v12, #q11, v20)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom imagevisible(v12, #q12, #y8, v19)
           Atom imagerange(v12, #q12, v19)
           Atom conf(v12, #q12)
           Atom ray(#y8)
           Atom imagevisible(v14, #q3, #y2, v19)
           Atom imagerange(v14, #q3, v19)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v12, v13, #t24, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q6, #t21, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, v13, #t19, #q12)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, v13, #t18, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q1, #t6, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q6, #t26, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, v15, #t1, #q0)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q0, #t28, #q3)
           Atom motion(v14, #q3, #t22, #q0)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q4, #t23, #q6)
           Atom motion(v14, v15, #t25, #q4)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q3, #t27, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, v13, #t17, #q10)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, v13, #t5, #q7)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, v13, #t4, #q2)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q9, #t20, #q5)
           Atom motion(v12, #q11, #t12, #q5)
           Atom motion(v12, #q7, #t3, #q5)
           Atom motion(v12, #q5, #t8, #q7)
           Atom motion(v12, #q5, #t9, v13)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q5, #t14, #q9)
           Atom motion(v12, #q5, #t15, #q10)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q5, #t13, #q8)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q2, #t2, #q5)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q8, #t10, #q5)
           Atom motion(v12, #q5, #t16, #q11)
           Atom motion(v12, #q5, #t7, #q2)
           Atom motion(v12, #q10, #t11, #q5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v5 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q8 v7 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t11 #q5))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t12 #q5))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t2 #q5))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #t13 #q8))
           ((move v12 #q5 #t14 #q9))
           ((move v12 #q5 #t15 #q10))
           ((move v12 #q5 #t16 #q11))
           ((move v12 #q5 #t7 #q2))
           ((move v12 #q5 #t8 #q7))
           ((move v12 #q5 #t9 v13))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t3 #q5))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t10 #q5))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t20 #q5))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q10))
           ((move v12 v13 #t18 #q11))
           ((move v12 v13 #t19 #q12))
           ((move v12 v13 #t24 #q9))
           ((move v12 v13 #t4 #q2))
           ((move v12 v13 #t5 #q7))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q0 #t28 #q3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #t6 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t22 #q0))
           ((move v14 #q3 #t27 #q4))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t23 #q6))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t21 #q3))
           ((move v14 #q6 #t26 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q0))
           ((move v14 v15 #t25 #q4))
           ((calibrate v12 #q10 #y6 v17 v10))
           ((calibrate v12 #q11 #y7 v20 v10))
           ((calibrate v12 #q12 #y8 v19 v10))
           ((calibrate v12 #q13 #y9 v18 v10))
           ((calibrate v14 #q0 #y0 v20 v10))
           ((calibrate v14 #q3 #y2 v19 v10))
           ((calibrate v14 #q4 #y3 v17 v10))
           ((calibrate v14 #q6 #y5 v18 v10))
           ((take_image v12 #q10 #y6 v17 v10 v11))
           ((take_image v12 #q11 #y7 v20 v10 v11))
           ((take_image v12 #q12 #y8 v19 v10 v11))
           ((take_image v12 #q13 #y9 v18 v10 v11))
           ((take_image v14 #q0 #y0 v20 v10 v11))
           ((take_image v14 #q3 #y2 v19 v10 v11))
           ((take_image v14 #q4 #y3 v17 v10 v11))
           ((take_image v14 #q6 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q5 #y4 v9 v4))
           ((send_analysis v12 #q5 #y4 v9 v8))
           ((send_analysis v12 #q5 #y4 v9 v5))
           ((send_analysis v12 #q5 #y4 v9 v1))
           ((send_analysis v12 #q5 #y4 v9 v7))
           ((send_analysis v12 #q5 #y4 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_image v12 #q5 #y4 v9 v17 v11))
           ((send_image v12 #q5 #y4 v9 v20 v11))
           ((send_image v12 #q5 #y4 v9 v19 v11))
           ((send_image v12 #q5 #y4 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a lander (v9), a camera (v10) which supports a specific mode (v11), and a store (v16). There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). The rocks are of two types, v2 and v6.
           
           The goal `new-axiom@0()` can be achieved if several conditions are met, including:
           - Rover v12 and v14 are at their respective initial configurations (v13 and v15). This is already true.
           - Rover v12 and v14 have free stores (v16). This is already true.
           - Images of all objectives (v17, v18, v19, v20) have been received in mode v11.
           - Analysis for all rocks (v1, v3, v4, v5, v7, v8) of type v2 and v6 have been received.
           
           To achieve the goal, the plan needs to:
           1. Calibrate the camera on at least one rover for each objective.
           2. Take images of all objectives.
           3. Send the images to the lander.
           4. Sample each rock.
           5. Send the analysis of each rock to the lander.
           
           Let's break down how to achieve each part:
           
           **Images:**
           - Objectives: v17, v18, v19, v20.
           - Rovers have visibility to all objectives from various configurations.
           - Rover v12 can see v17 from #q10, v20 from #q11, v19 from #q12, v18 from #q13.
           - Rover v14 can see v20 from #q0, v19 from #q3, v17 from #q4, v18 from #q6.
           
           **Rock Analysis:**
           - Rocks: v1, v3, v4, v5, v7, v8.
           - Rover v12 can sample v4, v8, v5, v1, v7, v3 from #o5, #q2, #q7, #q8, #q9.
           - Rover v14 can sample v1, v3, v4, v5, v7, v8 from #o5.
           - Both rovers have free stores (v16).
           - Both rovers can send analysis from #q5 (v12) and #q1 (v14) to v9.
           
           The strategy will be to:
           1. Move rover v12 to a position where it can send data to the lander (e.g., #q5).
           2. Sample the rocks that v12 can access from various positions, moving to those positions as needed.
           3. Send the analysis for the rocks sampled by v12.
           4. Move rover v12 to various positions to calibrate and take images of all objectives.
           5. Send the images of the objectives taken by v12.
           6. If any objectives or rocks are not covered by v12, use v14 to cover them.
           7. Send the images/analyses from v14 to the lander.
           
           Considering the available actions:
           - Rover v12 starts at v13 and can reach #q5 to send data.
           - Rover v14 starts at v15 and can reach #q1 to send data.
           - It looks like we need to analyze v1, v3, v4, v5, v7, v8.
           - It looks like we need to image v17, v18, v19, v20.
           
           Let's make sure each rock and objective is covered.
           Rocks:
           - v1: can be sampled by v12 from #q7 or v14 from #o5.
           - v3: can be sampled by v12 from #q9 or v14 from #o5.
           - v4: can be sampled by v12 from #o5 or v14 from #o5.
           - v5: can be sampled by v12 from #q2 or v14 from #o5.
           - v7: can be sampled by v12 from #q8 or v14 from #o5.
           - v8: can be sampled by v12 from #o5 or v14 from #o5.
           
           Objectives:
           - v17: can be imaged by v12 from #q10 or v14 from #q4.
           - v18: can be imaged by v12 from #q13 or v14 from #q6.
           - v19: can be imaged by v12 from #q12 or v14 from #q3.
           - v20: can be imaged by v12 from #q11 or v14 from #q0.
           
           All rocks and objectives can be handled by either rover. We'll use rover v12 primarily for both sampling and imaging due to the many movement options to different sampling/imaging points.
           
           Plan:
           1. **Sample all rocks with v12 and send analysis:**
               - Move v12 to #o5, sample v4 and v8.
               - Move v12 to #q2, sample v5.
               - Move v12 to #q7, sample v1.
               - Move v12 to #q8, sample v7.
               - Move v12 to #q9, sample v3.
               - Move v12 to #q5 (comvisible for sending analysis).
               - Send analysis for v1, v3, v4, v5, v7, v8.
           2. **Take images of all objectives with v12 and send them:**
               - Calibrate the camera at each image location.
               - Move v12 to #q10, calibrate, take image of v17.
               - Move v12 to #q11, calibrate, take image of v20.
               - Move v12 to #q12, calibrate, take image of v19.
               - Move v12 to #q13, calibrate, take image of v18.
               - Move v12 back to #q5 (comvisible for sending images).
               - Send images of v17, v18, v19, v20.
           
           All rocks and objectives will be covered by this plan.
           
           --Plan--:
           (move v12 v13 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (sample_rock v12 #o5 v8 v16)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q2)
           (sample_rock v12 #q2 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #q7)
           (sample_rock v12 #q7 v1 v16)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #q8)
           (sample_rock v12 #q8 v7 v16)
           (drop_rock v12 v16)
           (move v12 #q8 #o2 #q9)
           (sample_rock v12 #q9 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q9 #t20 #q5)
           (send_analysis v12 #q5 #y4 v9 v4)
           (send_analysis v12 #q5 #y4 v9 v8)
           (send_analysis v12 #q5 #y4 v9 v5)
           (send_analysis v12 #q5 #y4 v9 v1)
           (send_analysis v12 #q5 #y4 v9 v7)
           (send_analysis v12 #q5 #y4 v9 v3)
           (move v12 #q5 #t15 #q10)
           (calibrate v12 #q10 #y6 v17 v10)
           (take_image v12 #q10 #y6 v17 v10 v11)
           (move v12 #q10 #o2 #q11)
           (calibrate v12 #q11 #y7 v20 v10)
           (take_image v12 #q11 #y7 v20 v10 v11)
           (move v12 #q11 #o2 #q12)
           (calibrate v12 #q12 #y8 v19 v10)
           (take_image v12 #q12 #y8 v19 v10 v11)
           (move v12 #q12 #o2 #q13)
           (calibrate v12 #q13 #y9 v18 v10)
           (take_image v12 #q13 #y9 v18 v10 v11)
           (move v12 #q13 #o2 #q5)
           (send_image v12 #q5 #y4 v9 v17 v11)
           (send_image v12 #q5 #y4 v9 v20 v11)
           (send_image v12 #q5 #y4 v9 v19 v11)
           (send_image v12 #q5 #y4 v9 v18 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the axiom `new-axiom@0()` was not satisfied. Let's re-examine the `new-axiom@0()` to ensure all parts are addressed.
           
           The axiom `new-axiom@0()` requires:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers must be at their initial configurations. My previous plan had v12 moving to various locations and ending at #q5, and v14 was not used, so `atconf(v14,v15)` would still be true. However, `atconf(v12, v13)` was not re-established.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers must have a free store. My previous plan correctly dropped rocks, ensuring `free(v12, v16)`. `free(v14, v16)` was always true as v14 was not used for sampling.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: All objectives must have their images received. My previous plan covered this.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: All rocks of type v2 must have their analysis received.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: All rocks of type v6 must have their analysis received.
           
           The critical issue was `atconf(v12, v13)`. The goal state implicitly requires that all the conditions are met *simultaneously* at the end of the plan. This means if I move `v12` away from `v13`, I must move it back to `v13` to satisfy the `atconf(v12, v13)` part of the axiom. However, the available `motion` actions show: `motion(v12, v13, #o2, v13)` meaning `v12` can move from `v13` to `v13` (stay put), `motion(v12, #q5, #t9, v13)` means `v12` can move from `q5` to `v13`. So, after sending images/analysis from #q5, I can move `v12` back to `v13`.
           
           Let's revise the plan with this in mind, ensuring `v12` returns to `v13` at the end.
           
           Revised Plan Strategy:
           1. **Rover v12 for all tasks:**
               - Perform all sampling, analysis sending, imaging, and image sending.
               - At the end, move `v12` back to `v13`.
               - `v14` remains at `v15` with `v16` free.
           
           Detailed Steps:
           1. **Sample all rocks with v12 and send analysis:**
               - Move v12 to #o5 (sample v4, v8), drop.
               - Move v12 to #q2 (sample v5), drop.
               - Move v12 to #q7 (sample v1), drop.
               - Move v12 to #q8 (sample v7), drop.
               - Move v12 to #q9 (sample v3), drop.
               - Move v12 to #q5 (comvisible for sending analysis).
               - Send analysis for v1, v3, v4, v5, v7, v8.
           2. **Take images of all objectives with v12 and send them:**
               - Calibrate and take images from #q10 (v17), #q11 (v20), #q12 (v19), #q13 (v18).
               - Move v12 to #q5 (comvisible for sending images).
               - Send images of v17, v18, v19, v20.
           3. **Return v12 to its initial configuration:**
               - Move v12 from #q5 back to v13.
           
           This approach ensures `atconf(v12, v13)` and `atconf(v14, v15)` at the end, along with all other conditions.
           
           --Plan--:
           (move v12 v13 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (sample_rock v12 #o5 v8 v16)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q2)
           (sample_rock v12 #q2 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #q7)
           (sample_rock v12 #q7 v1 v16)
           (drop_rock v12 v16)
           (move v12 #q7 #o2 #q8)
           (sample_rock v12 #q8 v7 v16)
           (drop_rock v12 v16)
           (move v12 #q8 #o2 #q9)
           (sample_rock v12 #q9 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q9 #t20 #q5)
           (send_analysis v12 #q5 #y4 v9 v4)
           (send_analysis v12 #q5 #y4 v9 v8)
           (send_analysis v12 #q5 #y4 v9 v5)
           (send_analysis v12 #q5 #y4 v9 v1)
           (send_analysis v12 #q5 #y4 v9 v7)
           (send_analysis v12 #q5 #y4 v9 v3)
           (move v12 #q5 #t15 #q10)
           (calibrate v12 #q10 #y6 v17 v10)
           (take_image v12 #q10 #y6 v17 v10 v11)
           (move v12 #q10 #o2 #q11)
           (calibrate v12 #q11 #y7 v20 v10)
           (take_image v12 #q11 #y7 v20 v10 v11)
           (move v12 #q11 #o2 #q12)
           (calibrate v12 #q12 #y8 v19 v10)
           (take_image v12 #q12 #y8 v19 v10 v11)
           (move v12 #q12 #o2 #q13)
           (calibrate v12 #q13 #y9 v18 v10)
           (take_image v12 #q13 #y9 v18 v10 v11)
           (move v12 #q13 #o2 #q5)
           (send_image v12 #q5 #y4 v9 v17 v11)
           (send_image v12 #q5 #y4 v9 v20 v11)
           (send_image v12 #q5 #y4 v9 v19 v11)
           (send_image v12 #q5 #y4 v9 v18 v11)
           (move v12 #q5 #t9 v13)

