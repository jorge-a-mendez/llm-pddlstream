User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p15: object
           p16: object
           p17: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v43: object
           v44: object
           v45: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p13 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object p14 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (0.088, 0.547, 0.781) and quaternion (0.0, 0.0, 0.996, 0.093).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v15 is a pose with position (0.077, -0.383, 0.781) and quaternion (0.0, 0.0, 0.91, -0.414).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p15 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p16 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p17 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p3 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v9 is a pose with position (-0.224, -0.495, 0.781) and quaternion (0.0, 0.0, -0.601, 0.799).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v8, p12)
           Atom stackable(v14, v16)
           Atom pose(v8, p9)
           Atom pose(v12, p16)
           Atom atpose(v12, v13)
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom supported(v12, p10, v16)
           Atom supported(v14, p15, v16)
           Atom graspable(v12)
           Atom kin(v27, v32, p13, v44, v30, v31)
           Atom kin(v27, v32, p10, v44, v30, v31)
           Atom stackable(v12, v10)
           Atom pose(v12, p4)
           Atom arm(v6)
           Atom aconf(v4, v5)
           Atom supported(v8, p17, v16)
           Atom atpose(v14, v15)
           Atom pose(v14, p11)
           Atom supported(v12, v13, v11)
           Atom stackable(v14, v10)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom kin(v27, v33, p15, v45, v30, v31)
           Atom supported(v14, p11, v16)
           Atom canmove()
           Atom kin(v27, v28, p3, v29, v30, v31)
           Atom supported(v8, p6, v16)
           Atom pose(v14, p15)
           Atom pose(v12, v13)
           Atom supported(v12, p13, v16)
           Atom handempty(v4)
           Atom atpose(v8, v9)
           Atom supported(v12, p4, v16)
           Atom kin(v27, v28, p17, v43, v30, v31)
           Atom supported(v14, p14, v16)
           Atom supported(v12, p7, v16)
           Atom kin(v27, v28, p12, v43, v30, v31)
           Atom stackable(v12, v16)
           Atom supported(v8, p9, v16)
           Atom stackable(v8, v10)
           Atom pose(v12, p10)
           Atom kin(v27, v32, p16, v44, v30, v31)
           Atom supported(v8, p3, v16)
           Atom atbconf(v3)
           Atom bconf(v3)
           Atom supported(v14, p8, v16)
           Atom pose(v8, p6)
           Atom pose(v8, v9)
           Atom pose(v12, p7)
           Atom pose(v14, p5)
           Atom pose(v14, p14)
           Atom supported(v14, p5, v16)
           Atom pose(v14, v15)
           Atom handempty(v6)
           Atom kin(v27, v33, p14, v45, v30, v31)
           Atom kin(v27, v33, p5, v29, v30, v31)
           Atom controllable(v4)
           Atom pose(v12, p13)
           Atom supported(v12, p16, v16)
           Atom graspable(v14)
           Atom kin(v27, v33, p11, v45, v30, v31)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom graspable(v8)
           Atom arm(v4)
           Atom supported(v8, v9, v11)
           Atom kin(v27, v32, p4, v29, v30, v31)
           Atom pose(v8, p3)
           Atom pose(v8, p17)
           Atom pose(v14, p8)
           Atom aconf(v6, v7)
           Atom ataconf(v6, v7)
           Atom kin(v27, v28, p9, v43, v30, v31)
           Atom ataconf(v4, v5)
           Atom supported(v8, p12, v16)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom grasp(v14, #g1)
           Atom grasp(v8, #g2)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v16)
           Atom supported(v14, #o2, v10)
           Atom grasp(v12, #g0)
           Atom bconf(#q9)
           Atom atraj(#t24)
           Atom kin(v4, v14, p15, #g1, #q9, #t24)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p5, #g1, #o3, #o4)
           Atom bconf(#q8)
           Atom atraj(#t17)
           Atom kin(v4, v14, p14, #g1, #q8, #t17)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, p8, #g1, #q1, #t1)
           Atom kin(v4, v14, p11, #g1, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v14, v15, #g1, #q3, #t3)
           Atom kin(v4, v8, p9, #g2, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v8, v9, #g2, #q2, #t2)
           Atom bconf(#q6)
           Atom atraj(#t12)
           Atom kin(v4, v8, p12, #g2, #q6, #t12)
           Atom bconf(#q11)
           Atom atraj(#t30)
           Atom kin(v4, v8, p17, #g2, #q11, #t30)
           Atom kin(v4, v8, p3, #g2, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v8, p6, #g2, #q5, #t5)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v12, v13, #g0, #q4, #t4)
           Atom kin(v4, v12, p4, #g0, #o3, #o4)
           Atom bconf(#q7)
           Atom atraj(#t16)
           Atom kin(v4, v12, p13, #g0, #q7, #t16)
           Atom kin(v4, v12, p10, #g0, #o3, #o4)
           Atom bconf(#q10)
           Atom atraj(#t29)
           Atom kin(v4, v12, p16, #g0, #q10, #t29)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, p7, #g0, #q0, #t0)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q9, #o0, v3)
           Atom btraj(#t28)
           Atom basemotion(#q9, #t28, #q2)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q2)
           Atom btraj(#t26)
           Atom basemotion(#q2, #t26, #q9)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t31)
           Atom basemotion(#q3, #t31, #q9)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q0)
           Atom basemotion(#q10, #o0, #q0)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q0, #o0, #q10)
           Atom basemotion(#q10, #o0, #q2)
           Atom basemotion(v3, #o0, #q10)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q2, #o0, #q10)
           Atom basemotion(#q9, #o0, #q10)
           Atom basemotion(#q10, #o0, #q3)
           Atom btraj(#t32)
           Atom basemotion(#q3, #t32, #q10)
           Atom basemotion(#q8, #o0, #q2)
           Atom btraj(#t23)
           Atom basemotion(#q8, #t23, #q3)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q2, #o0, #q8)
           Atom btraj(#t20)
           Atom basemotion(#q3, #t20, #q8)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q10, #o0, #q8)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q8, #o0, #q10)
           Atom basemotion(#q1, #o0, #q10)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q9, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q1)
           Atom basemotion(#q10, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q7, #o0, #q10)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q10, #o0, #q7)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q7, #o0, #q1)
           Atom btraj(#t19)
           Atom basemotion(#q3, #t19, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q2)
           Atom btraj(#t22)
           Atom basemotion(#q7, #t22, #q3)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t27)
           Atom basemotion(#q4, #t27, #q9)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q1, #o0, #q4)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q7, #o0, #q4)
           Atom btraj(#t25)
           Atom basemotion(#q9, #t25, #q4)
           Atom basemotion(#q10, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q10)
           Atom basemotion(#q5, #o0, #q10)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q10, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(#q5, #o0, #q0)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q5)
           Atom basemotion(#q11, #o0, #q2)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q11, #o0, #q0)
           Atom basemotion(#q1, #o0, #q11)
           Atom basemotion(#q11, #o0, #q1)
           Atom basemotion(#q11, #o0, #q5)
           Atom basemotion(#q2, #o0, #q11)
           Atom basemotion(#q11, #o0, #q3)
           Atom basemotion(#q7, #o0, #q11)
           Atom basemotion(#q0, #o0, #q11)
           Atom basemotion(#q11, #o0, #q7)
           Atom basemotion(#q11, #o0, #q10)
           Atom btraj(#t33)
           Atom basemotion(#q3, #t33, #q11)
           Atom basemotion(#q11, #o0, #q4)
           Atom basemotion(#q5, #o0, #q11)
           Atom basemotion(#q11, #o0, #q8)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q4, #o0, #q11)
           Atom basemotion(#q8, #o0, #q11)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q6, #o0, #q6)
           Atom btraj(#t15)
           Atom basemotion(#q4, #t15, #q6)
           Atom btraj(#t21)
           Atom basemotion(#q6, #t21, #q3)
           Atom basemotion(#q11, #o0, #q6)
           Atom basemotion(#q1, #o0, #q6)
           Atom btraj(#t13)
           Atom basemotion(#q6, #t13, #q4)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q6, #o0, #q10)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q6, #o0, #q5)
           Atom btraj(#t14)
           Atom basemotion(#q2, #t14, #q6)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q6, #o0, #q7)
           Atom btraj(#t18)
           Atom basemotion(#q3, #t18, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q6, #o0, #q11)
           Atom basemotion(#q10, #o0, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q2)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#o3, #o0, #q0)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q10 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q10 #o0))
           ((move_base #q1 #q11 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q0 #o0))
           ((move_base #q10 #q1 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q2 #o0))
           ((move_base #q10 #q3 #o0))
           ((move_base #q10 #q4 #o0))
           ((move_base #q10 #q5 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q0 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q3 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q6 #t14))
           ((move_base #q2 #q9 #t26))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q6 #t18))
           ((move_base #q3 #q7 #t19))
           ((move_base #q3 #q8 #t20))
           ((move_base #q3 #q9 #t31))
           ((move_base #q3 #q10 #t32))
           ((move_base #q3 #q11 #t33))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q10 #o0))
           ((move_base #q4 #q11 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q6 #t15))
           ((move_base #q4 #q9 #t27))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q10 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q10 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q4 #t13))
           ((move_base #q6 #q3 #t21))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q3 #t22))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q3 #t23))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q4 #t25))
           ((move_base #q9 #q2 #t28))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t10))
           ((move_base v3 #q5 #t11))
           ((move_base v3 #q0 #t6))
           ((move_base v3 #q1 #t7))
           ((move_base v3 #q2 #t8))
           ((move_base v3 #q3 #t9))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 p10 #g0 #o3 #o4))
           ((place v4 v12 p10 #g0 #o3 #o4))
           ((pick v4 v12 p13 #g0 #q7 #t16))
           ((place v4 v12 p13 #g0 #q7 #t16))
           ((pick v4 v12 p16 #g0 #q10 #t29))
           ((place v4 v12 p16 #g0 #q10 #t29))
           ((pick v4 v12 p4 #g0 #o3 #o4))
           ((place v4 v12 p4 #g0 #o3 #o4))
           ((pick v4 v12 p7 #g0 #q0 #t0))
           ((place v4 v12 p7 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q4 #t4))
           ((place v4 v12 v13 #g0 #q4 #t4))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p11 #g1 #o3 #o4))
           ((place v4 v14 p11 #g1 #o3 #o4))
           ((pick v4 v14 p14 #g1 #q8 #t17))
           ((place v4 v14 p14 #g1 #q8 #t17))
           ((pick v4 v14 p15 #g1 #q9 #t24))
           ((place v4 v14 p15 #g1 #q9 #t24))
           ((pick v4 v14 p5 #g1 #o3 #o4))
           ((place v4 v14 p5 #g1 #o3 #o4))
           ((pick v4 v14 p8 #g1 #q1 #t1))
           ((place v4 v14 p8 #g1 #q1 #t1))
           ((pick v4 v14 v15 #g1 #q3 #t3))
           ((place v4 v14 v15 #g1 #q3 #t3))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 p12 #g2 #q6 #t12))
           ((place v4 v8 p12 #g2 #q6 #t12))
           ((pick v4 v8 p17 #g2 #q11 #t30))
           ((place v4 v8 p17 #g2 #q11 #t30))
           ((pick v4 v8 p3 #g2 #o3 #o4))
           ((place v4 v8 p3 #g2 #o3 #o4))
           ((pick v4 v8 p6 #g2 #q5 #t5))
           ((place v4 v8 p6 #g2 #q5 #t5))
           ((pick v4 v8 p9 #g2 #o3 #o4))
           ((place v4 v8 p9 #g2 #o3 #o4))
           ((pick v4 v8 v9 #g2 #q2 #t2))
           ((place v4 v8 v9 #g2 #q2 #t2))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The task is to place objects v8, v12, and v14 on the surface v16. Currently, v12 is at v13 on v11, v14 is at v15 on v11, and v8 is at v9 on v11. All objects need to be moved to v16. There are pre-defined poses on v16 for each object. We need to pick each object, move the base if necessary, and place the object on v16 at a collision-free pose.
           
           First, let's move v12 to v16. It is currently at v13, so we can pick it up from there using the arm v4, and then place it at a suitable pose on v16.
           Next, we'll move v14 to v16. It is currently at v15, so we can pick it up from there using the arm v4, and then place it at a suitable pose on v16.
           Finally, we'll move v8 to v16. It is currently at v9, so we can pick it up from there using the arm v4, and then place it at a suitable pose on v16.
           Since all the objects are on the same surface v11, and the target surface v16 is also the same, we can pick up each object and place it. The `kin` facts suggest that `o3` and `o4` are often used as base configurations and trajectories. We'll use these to ensure collisions are avoided. The `atbconf(v3)` means the robot base starts at `v3`.
           
           The initial state shows:
           - `v12` is at `v13` (supported by `v11`).
           - `v14` is at `v15` (supported by `v11`).
           - `v8` is at `v9` (supported by `v11`).
           
           We need to place them on `v16`. The `supported` facts indicate possible poses on `v16`:
           - `v12` can be at `p10`, `p13`, `p16`, `p4`, `p7`, or `#o2` on `v16`.
           - `v14` can be at `p11`, `p15`, `p14`, `p5`, `p8`, or `#o2` on `v16`.
           - `v8` can be at `p17`, `p3`, `p6`, `p9`, `p12`, or `#o2` on `v16`.
           
           We need to choose specific, distinct poses on `v16` for each object, and we will try to use the `p` poses that are already defined, and then use `#o2` if needed.
           
           Let's plan the movements:
           1. Pick `v12` from `v13`.
           2. Place `v12` at `p13` on `v16`. (since `p13` is an available pose on `v16` for `v12`)
           3. Pick `v14` from `v15`.
           4. Place `v14` at `p15` on `v16`. (since `p15` is an available pose on `v16` for `v14`)
           5. Pick `v8` from `v9`.
           6. Place `v8` at `p9` on `v16`. (since `p9` is an available pose on `v16` for `v8`)
           
           This plan uses pre-defined poses for all objects on the target surface, reducing the need to calculate new poses. The `kin` facts ensure that the robot's arm can reach these positions. The `basemotion` facts indicate that movements between the base configurations associated with these kinematically viable poses are available.
           
           --Plan--:
           (pick v4 v12 v13 #g0 #q4 #t4)
           (place v4 v12 p13 #g0 #q7 #t16)
           (pick v4 v14 v15 #g1 #q3 #t3)
           (place v4 v14 p15 #g1 #q9 #t24)
           (pick v4 v8 v9 #g2 #q2 #t2)
           (place v4 v8 p9 #g2 #o3 #o4)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q2) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the base configuration `q2` was not satisfied before the `pick` action for `v8`. We need to ensure that the robot's base is in the correct configuration (`atbconf`) before attempting a `pick` or `place` action if that action requires a specific base configuration.
           
           Let's re-examine the `kin` facts and available `basemotion` actions.
           The initial base configuration is `atbconf(v3)`.
           
           For `(pick v4 v12 v13 #g0 #q4 #t4)`, the `kin` fact is `kin(v4, v12, v13, #g0, #q4, #t4)`. This requires `atbconf(#q4)`.
           For `(place v4 v12 p13 #g0 #q7 #t16)`, the `kin` fact is `kin(v4, v12, p13, #g0, #q7, #t16)`. This requires `atbconf(#q7)`.
           For `(pick v4 v14 v15 #g1 #q3 #t3)`, the `kin` fact is `kin(v4, v14, v15, #g1, #q3, #t3)`. This requires `atbconf(#q3)`.
           For `(place v4 v14 p15 #g1 #q9 #t24)`, the `kin` fact is `kin(v4, v14, p15, #g1, #q9, #t24)`. This requires `atbconf(#q9)`.
           For `(pick v4 v8 v9 #g2 #q2 #t2)`, the `kin` fact is `kin(v4, v8, v9, #g2, #q2, #t2)`. This requires `atbconf(#q2)`.
           For `(place v4 v8 p9 #g2 #o3 #o4)`, the `kin` fact is `kin(v4, v8, p9, #g2, #o3, #o4)`. This requires `atbconf(#o3)`.
           
           So, we need to insert `move_base` actions before each `pick` and `place` action to ensure the robot is in the correct base configuration.
           
           Let's refine the plan:
           
           1. **Move v12**:
               - Current base config: `v3`. Target for pick: `#q4`. Need `move_base(v3, #q4, #t10)`.
               - `pick v4 v12 v13 #g0 #q4 #t4`.
               - Current base config: `#q4`. Target for place: `#q7`. Need `move_base(#q4, #q7, #o0)`. (There are several `basemotion(#q4, #o0, #q7)` entries, but we need one with a valid btraj, or use the dummy `o0` if no `btraj` is provided for `#q4` to `#q7` directly. From the provided list, `basemotion(#q4, #o0, #q7)` exists. `btraj(#o0)` is given).
               - `place v4 v12 p13 #g0 #q7 #t16`.
           
           2. **Move v14**:
               - Current base config: `#q7`. Target for pick: `#q3`. Need `move_base(#q7, #q3, #t22)`.
               - `pick v4 v14 v15 #g1 #q3 #t3`.
               - Current base config: `#q3`. Target for place: `#q9`. Need `move_base(#q3, #q9, #t31)`.
               - `place v4 v14 p15 #g1 #q9 #t24`.
           
           3. **Move v8**:
               - Current base config: `#q9`. Target for pick: `#q2`. Need `move_base(#q9, #q2, #t28)`.
               - `pick v4 v8 v9 #g2 #q2 #t2`.
               - Current base config: `#q2`. Target for place: `#o3`. Need `move_base(#q2, #o3, #o0)`.
               - `place v4 v8 p9 #g2 #o3 #o4`.
           
           All the necessary `basemotion` actions exist in the provided list.
           
           --Plan--:
           (move_base v3 #q4 #t10)
           (pick v4 v12 v13 #g0 #q4 #t4)
           (move_base #q4 #q7 #o0)
           (place v4 v12 p13 #g0 #q7 #t16)
           (move_base #q7 #q3 #t22)
           (pick v4 v14 v15 #g1 #q3 #t3)
           (move_base #q3 #q9 #t31)
           (place v4 v14 p15 #g1 #q9 #t24)
           (move_base #q9 #q2 #t28)
           (pick v4 v8 v9 #g2 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v8 p9 #g2 #o3 #o4)

