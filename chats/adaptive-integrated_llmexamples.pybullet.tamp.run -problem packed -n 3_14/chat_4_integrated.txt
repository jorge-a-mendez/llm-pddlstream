User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v43: object
           v44: object
           v45: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p13 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           Object p3 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (-0.224, -0.495, 0.781) and quaternion (0.0, 0.0, -0.601, 0.799).
           Object p14 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object p4 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (0.077, -0.383, 0.781) and quaternion (0.0, 0.0, 0.91, -0.414).
           Object v13 is a pose with position (0.088, 0.547, 0.781) and quaternion (0.0, 0.0, 0.996, 0.093).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom kin(v27, v33, p14, v45, v30, v31)
           Atom supported(v14, p8, v16)
           Atom kin(v27, v33, p5, v29, v30, v31)
           Atom controllable(v4)
           Atom pose(v8, p12)
           Atom pose(v8, p6)
           Atom atpose(v14, v15)
           Atom pose(v14, p11)
           Atom pose(v12, p13)
           Atom supported(v12, v13, v11)
           Atom stackable(v14, v16)
           Atom stackable(v14, v10)
           Atom pose(v8, p9)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom supported(v14, p11, v16)
           Atom graspable(v14)
           Atom supported(v8, p3, v16)
           Atom kin(v27, v33, p11, v45, v30, v31)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom atpose(v12, v13)
           Atom canmove()
           Atom kin(v27, v28, p3, v29, v30, v31)
           Atom graspable(v8)
           Atom supported(v8, p6, v16)
           Atom arm(v4)
           Atom pose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom pose(v12, v13)
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom supported(v12, p10, v16)
           Atom graspable(v12)
           Atom handempty(v4)
           Atom kin(v27, v32, p4, v29, v30, v31)
           Atom atpose(v8, v9)
           Atom pose(v8, p3)
           Atom pose(v12, p7)
           Atom supported(v12, p13, v16)
           Atom kin(v27, v32, p13, v44, v30, v31)
           Atom kin(v27, v32, p10, v44, v30, v31)
           Atom supported(v12, p4, v16)
           Atom pose(v14, p8)
           Atom stackable(v12, v10)
           Atom aconf(v6, v7)
           Atom ataconf(v6, v7)
           Atom pose(v12, p4)
           Atom pose(v14, p5)
           Atom kin(v27, v28, p9, v43, v30, v31)
           Atom supported(v14, p14, v16)
           Atom supported(v12, p7, v16)
           Atom kin(v27, v28, p12, v43, v30, v31)
           Atom stackable(v12, v16)
           Atom supported(v8, p9, v16)
           Atom ataconf(v4, v5)
           Atom pose(v14, p14)
           Atom stackable(v8, v10)
           Atom pose(v12, p10)
           Atom arm(v6)
           Atom supported(v8, p12, v16)
           Atom supported(v14, v15, v11)
           Atom aconf(v4, v5)
           Atom pose(v14, v15)
           Atom atbconf(v3)
           Atom supported(v14, p5, v16)
           Atom handempty(v6)
           Atom stackable(v8, v16)
           Atom bconf(v3)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v8, #g2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g0)
           Atom grasp(v14, #g1)
           Atom bconf(#q6)
           Atom atraj(#t12)
           Atom kin(v4, v8, p12, #g2, #q6, #t12)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v8, v9, #g2, #q2, #t2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, p9, #g2, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v8, p6, #g2, #q5, #t5)
           Atom kin(v4, v8, p3, #g2, #o3, #o4)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, p7, #g0, #q0, #t0)
           Atom bconf(#q7)
           Atom atraj(#t16)
           Atom kin(v4, v12, p13, #g0, #q7, #t16)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v12, v13, #g0, #q4, #t4)
           Atom kin(v4, v12, p10, #g0, #o3, #o4)
           Atom kin(v4, v12, p4, #g0, #o3, #o4)
           Atom kin(v4, v14, p5, #g1, #o3, #o4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, p8, #g1, #q1, #t1)
           Atom bconf(#q8)
           Atom atraj(#t17)
           Atom kin(v4, v14, p14, #g1, #q8, #t17)
           Atom kin(v4, v14, p11, #g1, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v14, v15, #g1, #q3, #t3)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q0)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q0)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q5)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q6, #o0, #q8)
           Atom btraj(#t22)
           Atom basemotion(#q7, #t22, #q3)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q3)
           Atom btraj(#t21)
           Atom basemotion(#q6, #t21, #q3)
           Atom btraj(#t19)
           Atom basemotion(#q3, #t19, #q7)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q0, #o0, #q3)
           Atom btraj(#t18)
           Atom basemotion(#q3, #t18, #q6)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t20)
           Atom basemotion(#q3, #t20, #q8)
           Atom btraj(#t23)
           Atom basemotion(#q8, #t23, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q5, #o0, #q1)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q6, #o0, #q1)
           Atom btraj(#t14)
           Atom basemotion(#q2, #t14, #q6)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q0, #o0, #q2)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom btraj(#t13)
           Atom basemotion(#q6, #t13, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom btraj(#t15)
           Atom basemotion(#q4, #t15, #q6)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q7)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q5)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q6 #t14))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q6 #t18))
           ((move_base #q3 #q7 #t19))
           ((move_base #q3 #q8 #t20))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q6 #t15))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q4 #t13))
           ((move_base #q6 #q3 #t21))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q3 #t22))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q3 #t23))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t10))
           ((move_base v3 #q5 #t11))
           ((move_base v3 #q0 #t6))
           ((move_base v3 #q1 #t7))
           ((move_base v3 #q2 #t8))
           ((move_base v3 #q3 #t9))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 p10 #g0 #o3 #o4))
           ((place v4 v12 p10 #g0 #o3 #o4))
           ((pick v4 v12 p13 #g0 #q7 #t16))
           ((place v4 v12 p13 #g0 #q7 #t16))
           ((pick v4 v12 p4 #g0 #o3 #o4))
           ((place v4 v12 p4 #g0 #o3 #o4))
           ((pick v4 v12 p7 #g0 #q0 #t0))
           ((place v4 v12 p7 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q4 #t4))
           ((place v4 v12 v13 #g0 #q4 #t4))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p11 #g1 #o3 #o4))
           ((place v4 v14 p11 #g1 #o3 #o4))
           ((pick v4 v14 p14 #g1 #q8 #t17))
           ((place v4 v14 p14 #g1 #q8 #t17))
           ((pick v4 v14 p5 #g1 #o3 #o4))
           ((place v4 v14 p5 #g1 #o3 #o4))
           ((pick v4 v14 p8 #g1 #q1 #t1))
           ((place v4 v14 p8 #g1 #q1 #t1))
           ((pick v4 v14 v15 #g1 #q3 #t3))
           ((place v4 v14 v15 #g1 #q3 #t3))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 p12 #g2 #q6 #t12))
           ((place v4 v8 p12 #g2 #q6 #t12))
           ((pick v4 v8 p3 #g2 #o3 #o4))
           ((place v4 v8 p3 #g2 #o3 #o4))
           ((pick v4 v8 p6 #g2 #q5 #t5))
           ((place v4 v8 p6 #g2 #q5 #t5))
           ((pick v4 v8 p9 #g2 #o3 #o4))
           ((place v4 v8 p9 #g2 #o3 #o4))
           ((pick v4 v8 v9 #g2 #q2 #t2))
           ((place v4 v8 v9 #g2 #q2 #t2))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The task is to place objects `v8`, `v12`, and `v14` on surface `v16`. Currently, `v14` is at `v15` supported by `v11`, `v12` is at `v13` supported by `v11`, and `v8` is at `v9` supported by `v11`. All objects need to be moved from their current locations to `v16`. Since `v16` is an object with bounding box ((-0.135, -0.135), (0.135, 0.135)), and all objects are small, they can be placed there. I will choose #o2 as the pose for all objects, and compute specific collision-free placements on `v16` for each of them.
           
           First, I will pick up `v14` from `v15`, then move the base, and place it at a new pose on `v16`. Then, I will pick up `v12` from `v13`, move the base, and place it at another pose on `v16`. Finally, I will pick up `v8` from `v9`, move the base, and place it at yet another pose on `v16`.
           
           The given `kin` facts suggest that `v4` is the arm to be used.
           The `atbconf(v3)` suggests that the robot starts at base configuration `v3`.
           The `ataconf(v4, v5)` indicates the arm is at `v5`.
           The object `v11` seems to be a larger surface based on its AABB ((-0.3, -0.6), (0.3, 0.6)).
           The object `v16` is a smaller surface with AABB ((-0.135, -0.135), (0.135, 0.135)).
           
           The pick and place actions require specific `kin` facts, which include a base configuration, arm trajectory, object pose, and grasp. I will select the given `kin` facts that allow picking from the current locations and placing at a new location on `v16`. Since the goal is to have objects `on(object, v16)`, I'll need to use the supported predicate `supported(object, #o2, v16)` for the placement.
           
           To minimize cost, I will choose base movements that are direct and to the appropriate `bconf` to perform the pick/place. The cost for pick and place is 1, and the cost for move_base is based on distance.
           
           I will iterate through the objects to be placed on `v16`.
           
           1. **Pick v14:** Current pose is `v15`, supported by `v11`. Use `kin(v4, v14, v15, #g1, #q3, #t3)`.
              Move base to `#q3`. Pick `v14`.
           2. **Place v14:** Target pose `#o2`, supported by `v16`. Use `kin(v4, v14, #o2, #g1, #o3, #o4)`.
              Move base from `#q3` to `#o3`. Place `v14`.
           3. **Pick v12:** Current pose is `v13`, supported by `v11`. Use `kin(v4, v12, v13, #g0, #q4, #t4)`.
              Move base from `#o3` to `#q4`. Pick `v12`.
           4. **Place v12:** Target pose `#o2`, supported by `v16`. Use `kin(v4, v12, #o2, #g0, #o3, #o4)`.
              Move base from `#q4` to `#o3`. Place `v12`.
           5. **Pick v8:** Current pose is `v9`, supported by `v11`. Use `kin(v4, v8, v9, #g2, #q2, #t2)`.
              Move base from `#o3` to `#q2`. Pick `v8`.
           6. **Place v8:** Target pose `#o2`, supported by `v16`. Use `kin(v4, v8, #o2, #g2, #o3, #o4)`.
              Move base from `#q2` to `#o3`. Place `v8`.
           
           For collision-free placements on `v16` (AABB: ((-0.135, -0.135), (0.135, 0.135))):
           - `v14` (AABB: ((-0.085, -0.035), (-0.015, 0.035)))
           - `v12` (AABB: ((0.015, -0.035), (0.085, 0.035)))
           - `v8` (AABB: ((-0.035, -0.035), (0.035, 0.035)))
           
           I'll place `v14` at (0.0, 0.0, 0.782), `v12` at (0.05, 0.0, 0.782), and `v8` at (-0.05, 0.0, 0.782) on `v16`. These poses seem consistent with the already defined `p12`, `p7`, `p8` poses on `v16`. Since `v14` is a bit long and thin, placing it straight on the x-axis, `v12` at x=0.05 and `v8` at x=-0.05 will ensure they are separate and stable. I will use the `p12`, `p7`, `p8` as computed poses for `#o2` for each object.
           
           --Plan--:
           (move_base v3 #q3 #t9)
           (pick v4 v14 v15 #g1 #q3 #t3)
           (move_base #q3 #o3 #o0)
           (place v4 v14 #o2 #g1 #o3 #o4)
           (move_base #o3 #q4 #o0)
           (pick v4 v12 v13 #g0 #q4 #t4)
           (move_base #q4 #o3 #o0)
           (place v4 v12 #o2 #g0 #o3 #o4)
           (move_base #o3 #q2 #o0)
           (pick v4 v8 v9 #g2 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v8 #o2 #g2 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v16): (0.0 0.0 0.782 0.0)
           (#o2 v12 v16): (0.05 0.0 0.782 0.0)
           (#o2 v8 v16): (-0.05 0.0 0.782 0.0)

