User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v4, v2)
           Atom type(v1, v2)
           Atom free(v12, v16)
           Atom onboard(v10, v14)
           Atom lander(v9)
           Atom mode(v11)
           Atom rock(v4)
           Atom camera(v10)
           Atom type(v7, v6)
           Atom objective(v19)
           Atom rock(v5)
           Atom rover(v14)
           Atom rock(v7)
           Atom objective(v18)
           Atom type(v5, v6)
           Atom objective(v17)
           Atom rock(v8)
           Atom type(v3, v2)
           Atom supports(v10, v11)
           Atom atconf(v12, v13)
           Atom store(v16)
           Atom onboard(v10, v12)
           Atom conf(v14, v15)
           Atom conf(v12, v13)
           Atom type(v8, v6)
           Atom rover(v12)
           Atom free(v14, v16)
           Atom objective(v20)
           Atom rock(v3)
           Atom atconf(v14, v15)
           Atom rock(v1)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #q2, v1)
           Atom conf(v12, #q2)
           Atom imagevisible(v12, #q0, #y0, v20)
           Atom imagerange(v12, #q0, v20)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q7, v7)
           Atom conf(v12, #q7)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q10, #y6, v9)
           Atom comrange(v14, #q10, v9)
           Atom conf(v14, #q10)
           Atom ray(#y6)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q12, #y7, v18)
           Atom imagerange(v14, #q12, v18)
           Atom conf(v14, #q12)
           Atom ray(#y7)
           Atom imagevisible(v14, #q9, #y5, v20)
           Atom imagerange(v14, #q9, v20)
           Atom conf(v14, #q9)
           Atom ray(#y5)
           Atom above(v14, #o5, v5)
           Atom above(v12, #q6, v5)
           Atom conf(v12, #q6)
           Atom imagevisible(v14, #q13, #y8, v19)
           Atom imagerange(v14, #q13, v19)
           Atom conf(v14, #q13)
           Atom ray(#y8)
           Atom imagevisible(v12, #q5, #y4, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q8, v4)
           Atom conf(v12, #q8)
           Atom imagevisible(v14, #q14, #y9, v17)
           Atom imagerange(v14, #q14, v17)
           Atom conf(v14, #q14)
           Atom ray(#y9)
           Atom imagevisible(v12, #q1, #y1, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t17, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, v13, #t3, #q1)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #t23, #q1)
           Atom motion(v12, v13, #t2, #q0)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, v15, #t31, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #t19, #q0)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q1, #t22, #q4)
           Atom motion(v12, v13, #t4, #q4)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, v15, #t28, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, v13, #t26, #q11)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q6, #t21, #q4)
           Atom motion(v12, #q2, #t18, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q0, #t16, #q5)
           Atom motion(v12, #q4, #t24, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #t25, #q2)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q5, #t20, #q1)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, v15, #t29, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q10, #t27, v15)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q9, #t33, #q10)
           Atom motion(v14, #q14, #t36, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #t34, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q7, #t13, #q3)
           Atom motion(v12, #q3, #t1, v13)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q11, #t32, #q3)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #t9, #q2)
           Atom motion(v12, #q0, #t5, #q3)
           Atom motion(v12, #q3, #t10, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #t14, #q4)
           Atom motion(v12, #q5, #t8, #q3)
           Atom motion(v12, #q3, #t11, #q5)
           Atom motion(v12, #q3, #t12, #q1)
           Atom motion(v12, #q3, #t15, #q7)
           Atom motion(v12, #q2, #t0, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q1, #t6, #q3)
           Atom motion(v12, #q4, #t7, #q3)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, v15, #t30, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q13, #t35, #q10)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q2 v1 v16))
           ((sample_rock v12 #q6 v5 v16))
           ((sample_rock v12 #q7 v7 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t16 #q5))
           ((move v12 #q0 #t23 #q1))
           ((move v12 #q0 #t5 #q3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t22 #q4))
           ((move v12 #q1 #t6 #q3))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t32 #q3))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t0 #q3))
           ((move v12 #q2 #t18 #q6))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #t1 v13))
           ((move v12 #q3 #t10 #q6))
           ((move v12 #q3 #t11 #q5))
           ((move v12 #q3 #t12 #q1))
           ((move v12 #q3 #t14 #q4))
           ((move v12 #q3 #t15 #q7))
           ((move v12 #q3 #t9 #q2))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t19 #q0))
           ((move v12 #q4 #t24 #q5))
           ((move v12 #q4 #t7 #q3))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t20 #q1))
           ((move v12 #q5 #t25 #q2))
           ((move v12 #q5 #t8 #q3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t21 #q4))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q3))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q2))
           ((move v12 v13 #t2 #q0))
           ((move v12 v13 #t26 #q11))
           ((move v12 v13 #t3 #q1))
           ((move v12 v13 #t4 #q4))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #t27 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t34 #q10))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t35 #q10))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t36 #q10))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t33 #q10))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t28 #q9))
           ((move v14 v15 #t29 #q12))
           ((move v14 v15 #t30 #q13))
           ((move v14 v15 #t31 #q14))
           ((calibrate v12 #q0 #y0 v20 v10))
           ((calibrate v12 #q1 #y1 v17 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v12 #q5 #y4 v19 v10))
           ((calibrate v14 #q12 #y7 v18 v10))
           ((calibrate v14 #q13 #y8 v19 v10))
           ((calibrate v14 #q14 #y9 v17 v10))
           ((calibrate v14 #q9 #y5 v20 v10))
           ((take_image v12 #q0 #y0 v20 v10 v11))
           ((take_image v12 #q1 #y1 v17 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v12 #q5 #y4 v19 v10 v11))
           ((take_image v14 #q12 #y7 v18 v10 v11))
           ((take_image v14 #q13 #y8 v19 v10 v11))
           ((take_image v14 #q14 #y9 v17 v10 v11))
           ((take_image v14 #q9 #y5 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q10 #y6 v9 v1))
           ((send_analysis v14 #q10 #y6 v9 v3))
           ((send_analysis v14 #q10 #y6 v9 v4))
           ((send_analysis v14 #q10 #y6 v9 v5))
           ((send_analysis v14 #q10 #y6 v9 v7))
           ((send_analysis v14 #q10 #y6 v9 v8))
           ((send_image v12 #q3 #y2 v9 v20 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q10 #y6 v9 v18 v11))
           ((send_image v14 #q10 #y6 v9 v19 v11))
           ((send_image v14 #q10 #y6 v9 v17 v11))
           ((send_image v14 #q10 #y6 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Finalized Plan for Achieving new-axiom@0() in the Rovers Domain**
           
           Okay, here's my detailed plan to conquer this objective. The core idea is to efficiently use a single rover, specifically `v12`, to accomplish all image and analysis tasks while minimizing movement.
           
           First, I need to ensure a few initial conditions: `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)`. Since these are already true in the initial state, I'll build on that. The objective has four main parts: capture images for `v17, v18, v19, v20` at mode `v11`, analyze one stone (type `v2`) and one soil (type `v6`), and meet the preconditions for all relevant actions.
           
           **Phase 1: Taking Images (for each objective):**  `v12` must execute the following steps:
           
           1.  **Move & Calibrate:** Move `v12` to the configuration where the image is visible for the objective and calibrate the camera `v10` (`(move v12 x #y)`, `(calibrate v12 x y z v10)`).
           2.  **Take Image:** Capture the image (`(take_image v12 #x1 y1 image_type mode)`).
           
           These actions must be executed in the following order:
           
           *   For `v18`: `v13 -> #q4` -> `(calibrate v12 #q4 #y3 v18 v10)` -> `(take_image v12 #q4 #y3 v18 v10 v11)`.
           *   For `v20`: `v4 -> #q0` -> `(calibrate v12 #q0 #y0 v20 v10)` -> `(take_image v12 #q0 #y0 v20 v10 v11)`.
           *   For `v19`: `q0 -> #q5` -> `(calibrate v12 #q5 #y4 v19 v10)` -> `(take_image v12 #q5 #y4 v19 v10 v11)`.
           *   For `v17`: `q5 -> #q1` -> `(calibrate v12 #q1 #y1 v17 v10)` -> `(take_image v12 #q1 #y1 v17 v10 v11)`.
           
           After this, I need to move from the final image configuration, `#q1`, to `#q3` (communication).
           
           **Phase 2: Analyzing Rocks:** After completing image capturing, the plan will transition to rock analysis. This has to be done after the first steps and before sending the images, because the objective also wants `receivedanalysis(?r)`. The process is as follows:
           
           1.  **Move to Rock Location**: Move `v12` to a location above a stone rock (`v3` of type `v2`) at location `#q11` (to be safe after finishing with the images).
           2.  **Sample and Drop**: Analyze the rock by sampling and dropping to free up store space (`(sample_rock v12 #q11 v3 v16)`, `(drop_rock v12 v16)`).
           3.  **Repeat for Soil Rock**: Move to a location above a soil rock (`v7` of type `v6`) at location `#q7`, analyze it, and then drop it (`(sample_rock v12 #q7 v7 v16)` , `(drop_rock v12 v16)`).
           
           **Phase 3: Sending Images and Analysis, Returning:**
           
           1.  **Move to Communicate:** From the location after rock analysis, move `v12` from `#q7` to `#q3` to enable image/analysis transmission.
           2.  **Send:** At the communication point, send the images and rock analysis reports (`(send_image v12 #q3 #y2 v9 obj mode)`, `(send_analysis v12 #q3 #y2 v9 rock)`).
           3.  **Return to Starting Point:** After transmission, ensure the plan ends in the right goal state by moving `v12` back to `v13` (where `v12` started).
           
           This structured approach guarantees the fulfillment of the goal `new-axiom@0()`, as it efficiently organizes the actions of `v12` and ensures that all requirements are met:
)

Model:     **Finalized Plan for Achieving new-axiom@0() in the Rovers Domain**
           
           Okay, here's my detailed plan to conquer this objective. The core idea is to efficiently use a single rover, specifically `v12`, to accomplish all image and analysis tasks while minimizing movement.
           
           First, I need to ensure a few initial conditions: `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)`. Since these are already true in the initial state, I'll build on that. The objective has four main parts: capture images for `v17, v18, v19, v20` at mode `v11`, analyze one stone (type `v2`) and one soil (type `v6`), and meet the preconditions for all relevant actions.
           
           **Phase 1: Taking Images (for each objective):**  `v12` must execute the following steps:
           
           1.  **Move & Calibrate:** Move `v12` to the configuration where the image is visible for the objective and calibrate the camera `v10` (`(move v12 x #y)`, `(calibrate v12 x y z v10)`).
           2.  **Take Image:** Capture the image (`(take_image v12 #x1 y1 image_type mode)`).
           
           These actions must be executed in the following order:
           
           *   For `v18`: `v13 -> #q4` -> `(calibrate v12 #q4 #y3 v18 v10)` -> `(take_image v12 #q4 #y3 v18 v10 v11)`.
           *   For `v20`: `v4 -> #q0` -> `(calibrate v12 #q0 #y0 v20 v10)` -> `(take_image v12 #q0 #y0 v20 v10 v11)`.
           *   For `v19`: `q0 -> #q5` -> `(calibrate v12 #q5 #y4 v19 v10)` -> `(take_image v12 #q5 #y4 v19 v10 v11)`.
           *   For `v17`: `q5 -> #q1` -> `(calibrate v12 #q1 #y1 v17 v10)` -> `(take_image v12 #q1 #y1 v17 v10 v11)`.
           
           After this, I need to move from the final image configuration, `#q1`, to `#q3` (communication).
           
           **Phase 2: Analyzing Rocks:** After completing image capturing, the plan will transition to rock analysis. This has to be done after the first steps and before sending the images, because the objective also wants `receivedanalysis(?r)`. The process is as follows:
           
           1.  **Move to Rock Location**: Move `v12` to a location above a stone rock (`v3` of type `v2`) at location `#q11` (to be safe after finishing with the images).
           2.  **Sample and Drop**: Analyze the rock by sampling and dropping to free up store space (`(sample_rock v12 #q11 v3 v16)`, `(drop_rock v12 v16)`).
           3.  **Repeat for Soil Rock**: Move to a location above a soil rock (`v7` of type `v6`) at location `#q7`, analyze it, and then drop it (`(sample_rock v12 #q7 v7 v16)` , `(drop_rock v12 v16)`).
           
           **Phase 3: Sending Images and Analysis, Returning:**
           
           1.  **Move to Communicate:** From the location after rock analysis, move `v12` from `#q7` to `#q3` to enable image/analysis transmission.
           2.  **Send:** At the communication point, send the images and rock analysis reports (`(send_image v12 #q3 #y2 v9 obj mode)`, `(send_analysis v12 #q3 #y2 v9 rock)`).
           3.  **Return to Starting Point:** After transmission, ensure the plan ends in the right goal state by moving `v12` back to `v13` (where `v12` started).
           
           This structured approach guarantees the fulfillment of the goal `new-axiom@0()`, as it efficiently organizes the actions of `v12` and ensures that all requirements are met:

