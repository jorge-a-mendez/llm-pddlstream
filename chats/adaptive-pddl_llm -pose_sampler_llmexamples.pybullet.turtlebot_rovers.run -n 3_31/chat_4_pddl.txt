User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom mode(v11)
           Atom free(v12, v16)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom rover(v14)
           Atom conf(v12, v13)
           Atom atconf(v12, v13)
           Atom free(v14, v16)
           Atom atconf(v14, v15)
           Atom rock(v1)
           Atom type(v7, v6)
           Atom lander(v9)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom type(v3, v2)
           Atom objective(v17)
           Atom rock(v8)
           Atom conf(v14, v15)
           Atom camera(v10)
           Atom type(v1, v2)
           Atom rock(v7)
           Atom rock(v4)
           Atom onboard(v10, v14)
           Atom objective(v19)
           Atom store(v16)
           Atom rock(v3)
           Atom type(v4, v2)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v12, #q1, v3)
           Atom conf(v12, #q1)
           Atom imagevisible(v14, #q3, #y2, v19)
           Atom imagerange(v14, #q3, v19)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom imagevisible(v12, #q10, #y7, v19)
           Atom imagerange(v12, #q10, v19)
           Atom conf(v12, #q10)
           Atom ray(#y7)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v14, #q13, v4)
           Atom conf(v14, #q13)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q5, #y3, v9)
           Atom comrange(v14, #q5, v9)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q2, #y1, v18)
           Atom imagerange(v14, #q2, v18)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom imagevisible(v12, #q9, #y6, v18)
           Atom imagerange(v12, #q9, v18)
           Atom conf(v12, #q9)
           Atom ray(#y6)
           Atom above(v12, #o5, v1)
           Atom above(v14, #q12, v1)
           Atom conf(v14, #q12)
           Atom above(v12, #o5, v7)
           Atom above(v14, #q11, v7)
           Atom conf(v14, #q11)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom above(v14, #o5, v5)
           Atom above(v14, #q7, v8)
           Atom conf(v14, #q7)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q8, #y5, v17)
           Atom imagerange(v12, #q8, v17)
           Atom conf(v12, #q8)
           Atom ray(#y5)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v12, v13, #t3, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #t2, #q3)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, v15, #t25, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, v15, #t24, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, v15, #t22, #q7)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q2, #t13, #q6)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, v15, #t1, #q2)
           Atom motion(v14, #q3, #t12, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, v15, #t23, #q11)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q5, #t15, #q7)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q2, #t5, #q5)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, #q7, #t21, #q5)
           Atom motion(v14, #q5, #t11, v15)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q3, #t6, #q5)
           Atom motion(v14, #q11, #o2, #q5)
           Atom motion(v14, #q6, #t7, #q5)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v12, #q0, #t10, v13)
           Atom motion(v12, #q0, #t18, #q9)
           Atom motion(v12, #q9, #t20, #q0)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q8, #t19, #q0)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q1, #t8, #q0)
           Atom motion(v12, #q0, #t17, #q8)
           Atom motion(v12, v13, #t4, #q4)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q1, #t14, #q4)
           Atom motion(v12, #q0, #t16, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #t9, #q0)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q1)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v3 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #q11 v7 v16))
           ((sample_rock v14 #q12 v1 v16))
           ((sample_rock v14 #q13 v4 v16))
           ((sample_rock v14 #q7 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t10 v13))
           ((move v12 #q0 #t16 #q4))
           ((move v12 #q0 #t17 #q8))
           ((move v12 #q0 #t18 #q9))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t14 #q4))
           ((move v12 #q1 #t8 #q0))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t9 #q0))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q0))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t20 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t3 #q1))
           ((move v12 v13 #t4 #q4))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 #q5))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t13 #q6))
           ((move v14 #q2 #t5 #q5))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t12 #q2))
           ((move v14 #q3 #t6 #q5))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #t11 v15))
           ((move v14 #q5 #t15 #q7))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t7 #q5))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t21 #q5))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q2))
           ((move v14 v15 #t2 #q3))
           ((move v14 v15 #t22 #q7))
           ((move v14 v15 #t23 #q11))
           ((move v14 v15 #t24 #q12))
           ((move v14 v15 #t25 #q13))
           ((calibrate v12 #q10 #y7 v19 v10))
           ((calibrate v12 #q8 #y5 v17 v10))
           ((calibrate v12 #q9 #y6 v18 v10))
           ((calibrate v14 #q2 #y1 v18 v10))
           ((calibrate v14 #q3 #y2 v19 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #q10 #y7 v19 v10 v11))
           ((take_image v12 #q8 #y5 v17 v10 v11))
           ((take_image v12 #q9 #y6 v18 v10 v11))
           ((take_image v14 #q2 #y1 v18 v10 v11))
           ((take_image v14 #q3 #y2 v19 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q5 #y3 v9 v3))
           ((send_analysis v14 #q5 #y3 v9 v5))
           ((send_analysis v14 #q5 #y3 v9 v7))
           ((send_analysis v14 #q5 #y3 v9 v1))
           ((send_analysis v14 #q5 #y3 v9 v4))
           ((send_analysis v14 #q5 #y3 v9 v8))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q5 #y3 v9 v18 v11))
           ((send_image v14 #q5 #y3 v9 v19 v11))
           ((send_image v14 #q5 #y3 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each with a camera (v10) and a store (v16). There are multiple rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19). The rovers can move between different configurations, take images, send images and analyses to a lander (v9), and sample/drop rocks. The goal is to satisfy the axiom `new-axiom@0()`. This axiom requires several conditions to be met simultaneously:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `type(?stone, v2)` (implicitly, an analyzed rock of type stone) and `receivedanalysis(?stone)`
           - `type(?soil, v6)` (implicitly, an analyzed rock of type soil) and `receivedanalysis(?soil)`
           
           Let's break down the goal into individual subgoals:
           
           1.  **Rover Positions:** `atconf(v12, v13)` and `atconf(v14, v15)`. Both rovers are already in these configurations in the initial state.
           2.  **Rover Stores:** `free(v12, v16)` and `free(v14, v16)`. Both stores are free in the initial state.
           3.  **Image Reception:** `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`. This means we need to take images of objectives v17, v18, and v19 using camera v10 with mode v11, and then send these images to lander v9.
           4.  **Analysis Reception:** `receivedanalysis(?stone)` and `receivedanalysis(?soil)`. This means we need to sample and analyze at least one rock of type `v2` (stone) and one rock of type `v6` (soil), and then send the analysis to lander v9.
           
           From the initial state:
           - `type(v3, v2)`, `type(v1, v2)`, `type(v4, v2)` are of type `v2` (stone).
           - `type(v7, v6)`, `type(v8, v6)`, `type(v5, v6)` are of type `v6` (soil).
           
           We need to:
           *   Get images of v17, v18, v19.
           *   Analyze one stone rock (e.g., v1) and one soil rock (e.g., v5).
           
           Let's plan for rover v12:
           *   Can image v19 at #q10, v17 at #q8, v18 at #q9.
           *   Can sample v3 at #q1, v5 at #q4.
           *   Can communicate from #q0.
           
           Let's plan for rover v14:
           *   Can image v19 at #q3, v18 at #q2, v17 at #q6.
           *   Can sample v3 at #o5, v5 at #o5, v1 at #q12, v4 at #q13, v7 at #q11, v8 at #q7.
           *   Can communicate from #q5.
           
           We have two rovers and multiple rocks/objectives. We can distribute the tasks.
           
           **Image Collection:**
           *   Rover v12 is at v13. To image v19, it needs to move to #q10. To image v17, it needs to move to #q8. To image v18, it needs to move to #q9.
           *   Rover v14 is at v15. To image v19, it needs to move to #q3. To image v18, it needs to move to #q2. To image v17, it needs to move to #q6.
           
           Let's have v12 handle v17 and v18, and v14 handle v19.
           
           **Analysis Collection:**
           *   Rover v12 can sample v3 (stone) at #q1 and v5 (soil) at #q4.
           *   Rover v14 can sample v3 (stone) at #o5 and v5 (soil) at #o5.
           
           Let's have v12 sample v3 (stone) and v14 sample v5 (soil).
           
           **Plan Outline:**
           
           1.  **Rover v12:**
               *   Move to #q8 to image v17.
               *   Calibrate camera.
               *   Take image of v17.
               *   Move to #q9 to image v18.
               *   Calibrate camera.
               *   Take image of v18.
               *   Move to #q1 to sample v3 (stone).
               *   Sample v3.
               *   Move to #q4 to sample v5 (soil).
               *   Sample v5.
               *   Move to #q0 to send images and analysis.
               *   Send image of v17.
               *   Send image of v18.
               *   Send analysis of v3.
               *   Send analysis of v5.
           
           2.  **Rover v14:**
               *   Move to #q3 to image v19.
               *   Calibrate camera.
               *   Take image of v19.
               *   Move to #q5 to send image.
               *   Send image of v19.
           
           Wait, the goal only requires `receivedanalysis(?r)` for two distinct types (`v2` and `v6`). We only need to sample one rock of type `v2` and one rock of type `v6`. We don't need both rovers to sample. Let's simplify and have v12 do all the sampling.
           
           Let's refine the plan:
           
           **Rover v12 tasks:**
           1.  Sample rock v3 (type v2, stone) at #q1.
           2.  Sample rock v5 (type v6, soil) at #q4.
           3.  Take image of objective v17 from #q8.
           4.  Take image of objective v18 from #q9.
           5.  Send image of v17, v18 and analysis of v3, v5 to lander from #q0.
           
           **Rover v14 tasks:**
           1.  Take image of objective v19 from #q3.
           2.  Send image of v19 to lander from #q5.
           
           The initial states for v12 and v14 are v13 and v15 respectively.
           
           Detailed steps for v12:
           1.  `move v12 v13 #t3 #q1` (to sample v3)
           2.  `sample_rock v12 #q1 v3 v16`
           3.  `move v12 #q1 #t14 #q4` (to sample v5)
           4.  `sample_rock v12 #q4 v5 v16` (now v12 has sampled both types, and its store is full. It cannot drop rock since dropping only makes the store free, not for another analysis. But since the goal is `receivedanalysis`, it means the analysis is in rover and can be sent. The `sample_rock` action already sets `analyzed(?v, ?r)` and `full(?v, ?s)`. It seems it doesn't matter if the store is full, as long as the analysis is done and can be sent.)
           5.  `move v12 #q4 #o2 #q8` (to take image of v17)
           6.  `calibrate v12 #q8 #y5 v17 v10`
           7.  `take_image v12 #q8 #y5 v17 v10 v11`
           8.  `move v12 #q8 #o2 #q9` (to take image of v18)
           9.  `calibrate v12 #q9 #y6 v18 v10` (need to re-calibrate after taking image)
           10. `take_image v12 #q9 #y6 v18 v10 v11`
           11. `move v12 #q9 #t20 #q0` (to send everything)
           12. `send_image v12 #q0 #y0 v9 v17 v11`
           13. `send_image v12 #q0 #y0 v9 v18 v11`
           14. `send_analysis v12 #q0 #y0 v9 v3`
           15. `send_analysis v12 #q0 #y0 v9 v5`
           
           Detailed steps for v14:
           1.  `move v14 v15 #t2 #q3` (to take image of v19)
           2.  `calibrate v14 #q3 #y2 v19 v10`
           3.  `take_image v14 #q3 #y2 v19 v10 v11`
           4.  `move v14 #q3 #t6 #q5` (to send image)
           5.  `send_image v14 #q5 #y3 v9 v19 v11`
           
           This looks like a complete plan. All `receivedimage` and `receivedanalysis` will be satisfied, and initial conditions for rovers and stores will remain (`atconf(v12, v13)` and `atconf(v14, v15)` at the end are not required, only that they are at *some* conf, but the axiom requires these specific ones. However, the last move for v12 is to #q0 and for v14 is to #q5. The axiom `new-axiom@0()` explicitly states `atconf(v12, v13)` and `atconf(v14, v15)`. This is a problem, as my plan moves them away. Let me check the full axiom:
           
           `Axiom new-axiom@0() Conjunction Atom atconf(v12, v13) Atom atconf(v14, v15) Atom free(v12, v16) Atom free(v14, v16) Atom receivedimage(v17, v11) Atom receivedimage(v18, v11) Atom receivedimage(v19, v11) Atom type(?stone, v2) Atom receivedanalysis(?stone) Atom type(?soil, v6) Atom receivedanalysis(?soil)`
           
           This means both rovers must end up in their initial configurations for the goal to be true. This adds a constraint: after sending all data, the rovers must return to their initial configurations.
           
           Revised Plan Outline considering final configurations:
           
           **Rover v12 tasks:**
           1.  Move to #q1, sample v3 (stone).
           2.  Move to #q4, sample v5 (soil).
           3.  Move to #q8, calibrate, take image of v17.
           4.  Move to #q9, calibrate, take image of v18.
           5.  Move to #q0, send images and analyses.
           6.  Move back to v13.
           
           **Rover v14 tasks:**
           1.  Move to #q3, calibrate, take image of v19.
           2.  Move to #q5, send image.
           3.  Move back to v15.
           
           Let's re-verify available moves to get back to initial configurations.
           - `move v12 #q0 #t10 v13` (for v12 to return to v13 from #q0)
           - `move v14 #q5 #t11 v15` (for v14 to return to v15 from #q5)
           
           This revised plan seems to satisfy all conditions.
           
           ```
           (move v12 v13 #t3 #q1)
           (sample_rock v12 #q1 v3 v16)
           (move v12 #q1 #t14 #q4)
           (sample_rock v12 #q4 v5 v16)
           (move v12 #q4 #o2 #q8)
           (calibrate v12 #q8 #y5 v17 v10)
           (take_image v12 #q8 #y5 v17 v10 v11)
           (move v12 #q8 #o2 #q9)
           (calibrate v12 #q9 #y6 v18 v10)
           (take_image v12 #q9 #y6 v18 v10 v11)
           (move v12 #q9 #t20 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_analysis v12 #q0 #y0 v9 v3)
           (send_analysis v12 #q0 #y0 v9 v5)
           (move v12 #q0 #t10 v13)
           (move v14 v15 #t2 #q3)
           (calibrate v14 #q3 #y2 v19 v10)
           (take_image v14 #q3 #y2 v19 v10 v11)
           (move v14 #q3 #t6 #q5)
           (send_image v14 #q5 #y3 v9 v19 v11)
           (move v14 #q5 #t11 v15)
           ```

