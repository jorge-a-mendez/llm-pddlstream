User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v18)
           Atom objective(v17)
           Atom rover(v14)
           Atom free(v12, v16)
           Atom rock(v5)
           Atom rock(v3)
           Atom objective(v19)
           Atom rock(v7)
           Atom mode(v11)
           Atom store(v16)
           Atom type(v4, v2)
           Atom rover(v12)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom type(v3, v2)
           Atom atconf(v12, v13)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom type(v8, v6)
           Atom objective(v20)
           Atom camera(v10)
           Atom type(v5, v6)
           Atom rock(v4)
           Atom type(v7, v6)
           Atom rock(v8)
           Atom lander(v9)
           Atom onboard(v10, v12)
           Atom atconf(v14, v15)
           Atom conf(v12, v13)
           Atom rock(v1)
           Atom type(v1, v2)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v3)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v3)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom motion(v14, #o0, #o2, #o0)
           Atom motion(v14, #o0, #o2, v15)
           Atom motion(v14, v15, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o0)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v14, #o0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o0)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o0)
           Atom motion(v12, #o3, #o2, #o0)
           Atom motion(v12, v13, #o2, #o0)
           Atom motion(v12, #o0, #o2, #o0)
           Atom motion(v12, #o0, #o2, v13)
           Atom motion(v12, #o0, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o0 #o2 #o0))
           ((move v12 #o0 #o2 #o3))
           ((move v12 #o0 #o2 #o5))
           ((move v12 #o0 #o2 v13))
           ((move v12 #o3 #o2 #o0))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o0))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 v13))
           ((move v12 v13 #o2 #o0))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 v13))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #o0 #o1 v9 v1))
           ((send_analysis v12 #o0 #o1 v9 v3))
           ((send_analysis v12 #o0 #o1 v9 v4))
           ((send_analysis v12 #o0 #o1 v9 v5))
           ((send_analysis v12 #o0 #o1 v9 v7))
           ((send_analysis v12 #o0 #o1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #o0 #o1 v9 v17 v11))
           ((send_image v12 #o0 #o1 v9 v18 v11))
           ((send_image v12 #o0 #o1 v9 v19 v11))
           ((send_image v12 #o0 #o1 v9 v20 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` represents a complex state that requires several sub-goals to be met. Specifically, it implies that:
           1. Both rovers (v12 and v14) must be at their initial configurations (v13 and v15 respectively).
           2. Both rovers must have a free storage (v16).
           3. Images of all four objectives (v17, v18, v19, v20) must be received in mode v11.
           4. All rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8) must have their analysis received.
           
           Let's break down the current state:
           - Rovers v12 and v14 are at their initial configurations v13 and v15 respectively.
           - Both rovers have free storage v16.
           - The camera v10 is onboard both rovers and supports mode v11.
           - There are multiple rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20).
           - Rover v12 can observe rocks v1, v3, v4, v5, v7, v8 from configuration #o5, and objectives v17, v18, v19, v20 from configuration #o3. It can also communicate from #o0.
           - Rover v14 can observe rocks v1, v3, v4, v5, v7, v8 from configuration #o5, and objectives v17, v18, v19, v20 from configuration #o3. It can also communicate from #o0.
           - There are no `blocked` rays, meaning all image and communication operations are possible when at the correct configuration.
           
           To achieve the goal, we need to:
           1. Take images of all objectives (v17, v18, v19, v20) and send them to the lander (v9).
           2. Sample all rocks (v1, v3, v4, v5, v7, v8) and send their analysis to the lander (v9).
           
           We can distribute these tasks between the two rovers. Since both rovers start at their home positions (v13 and v15) and have free stores, and the goal requires them to remain free, we need to consider how sampling will affect the `free` predicate. If a rover samples a rock, its store becomes full, and then we need to drop the rock to make the store free again. The analysis of the rock is kept even after dropping it.
           
           Let's utilize rover v12 to handle the imaging tasks and part of the rock analysis, and rover v14 for the remaining rock analysis and imaging.
           
           For imaging with rover v12:
           - Move v12 to #o3 (image configuration).
           - Calibrate the camera v10 for each objective (v17, v18, v19, v20).
           - Take images of v17, v18, v19, v20.
           - Move v12 to #o0 (communication configuration).
           - Send images of v17, v18, v19, v20.
           
           For rock analysis with rover v12:
           - Move v12 to #o5 (above rock configuration).
           - Sample rocks v1, v3, v4.
           - Move v12 to #o0 (communication configuration).
           - Send analysis for v1, v3, v4.
           - Drop the sampled rocks.
           
           For imaging with rover v14: (already covered by v12 if v12 does all 4)
           For rock analysis with rover v14:
           - Move v14 to #o5 (above rock configuration).
           - Sample rocks v5, v7, v8.
           - Move v14 to #o0 (communication configuration).
           - Send analysis for v5, v7, v8.
           - Drop the sampled rocks.
           
           It is more efficient if one rover handles all imaging and the other handles all sampling for analysis.
           Let rover v12 handle all imaging and rover v14 handle all sampling and analysis.
           
           Rover v12 plan:
           1. Move to #o3 (imaging configuration).
           2. Calibrate camera v10 for v17.
           3. Take image of v17.
           4. Calibrate camera v10 for v18. (Need to recalibrate after taking an image)
           5. Take image of v18.
           6. Calibrate camera v10 for v19.
           7. Take image of v19.
           8. Calibrate camera v10 for v20.
           9. Take image of v20.
           10. Move to #o0 (communication configuration).
           11. Send all four images (v17, v18, v19, v20).
           12. Move back to v13 (initial configuration).
           
           Rover v14 plan:
           1. Move to #o5 (sampling configuration).
           2. Sample rock v1. (free(v14, v16) -> full(v14, v16))
           3. Move to #o0 (communication configuration).
           4. Send analysis for v1.
           5. Drop rock v1. (full(v14, v16) -> free(v14, v16))
           6. Move to #o5.
           7. Sample rock v3.
           8. Move to #o0.
           9. Send analysis for v3.
           10. Drop rock v3.
           11. Move to #o5.
           12. Sample rock v4.
           13. Move to #o0.
           14. Send analysis for v4.
           15. Drop rock v4.
           16. Move to #o5.
           17. Sample rock v5.
           18. Move to #o0.
           19. Send analysis for v5.
           20. Drop rock v5.
           21. Move to #o5.
           22. Sample rock v7.
           23. Move to #o0.
           24. Send analysis for v7.
           25. Drop rock v7.
           26. Move to #o5.
           27. Sample rock v8.
           28. Move to #o0.
           29. Send analysis for v8.
           30. Drop rock v8.
           31. Move back to v15 (initial configuration).
           
           This plan ensures all sub-goals of the `new-axiom@0()` are met.
           
           --Plan--:
           (move v12 v13 #o2 #o3)
           (calibrate v12 #o3 #o4 v17 v10)
           (take_image v12 #o3 #o4 v17 v10 v11)
           (calibrate v12 #o3 #o4 v18 v10)
           (take_image v12 #o3 #o4 v18 v10 v11)
           (calibrate v12 #o3 #o4 v19 v10)
           (take_image v12 #o3 #o4 v19 v10 v11)
           (calibrate v12 #o3 #o4 v20 v10)
           (take_image v12 #o3 #o4 v20 v10 v11)
           (move v12 #o3 #o2 #o0)
           (send_image v12 #o0 #o1 v9 v17 v11)
           (send_image v12 #o0 #o1 v9 v18 v11)
           (send_image v12 #o0 #o1 v9 v19 v11)
           (send_image v12 #o0 #o1 v9 v20 v11)
           (move v12 #o0 #o2 v13)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (move v14 #o5 #o2 #o0)
           (send_analysis v14 #o0 #o1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #o0 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #o0)
           (send_analysis v14 #o0 #o1 v9 v3)
           (drop_rock v14 v16)
           (move v14 #o0 #o2 #o5)
           (sample_rock v14 #o5 v4 v16)
           (move v14 #o5 #o2 #o0)
           (send_analysis v14 #o0 #o1 v9 v4)
           (drop_rock v14 v16)
           (move v14 #o0 #o2 #o5)
           (sample_rock v14 #o5 v5 v16)
           (move v14 #o5 #o2 #o0)
           (send_analysis v14 #o0 #o1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #o0 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #o0)
           (send_analysis v14 #o0 #o1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #o0 #o2 #o5)
           (sample_rock v14 #o5 v8 v16)
           (move v14 #o5 #o2 #o0)
           (send_analysis v14 #o0 #o1 v9 v8)
           (drop_rock v14 v16)
           (move v14 #o0 #o2 v15)

