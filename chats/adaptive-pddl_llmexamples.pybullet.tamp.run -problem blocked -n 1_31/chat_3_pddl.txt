User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v8, v9)
           Atom ataconf(v4, v5)
           Atom bconf(v3)
           Atom stackable(v8, v18)
           Atom pose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom handempty(v6)
           Atom type(v8, v17)
           Atom stackable(v15, v10)
           Atom aconf(v4, v5)
           Atom graspable(v12)
           Atom supported(v12, v13, v14)
           Atom canmove()
           Atom stackable(v12, v18)
           Atom aconf(v6, v7)
           Atom handempty(v4)
           Atom arm(v6)
           Atom atpose(v12, v13)
           Atom type(v12, v17)
           Atom pose(v12, v13)
           Atom arm(v4)
           Atom stackable(v12, v10)
           Atom controllable(v4)
           Atom graspable(v15)
           Atom atbconf(v3)
           Atom atpose(v15, v16)
           Atom ataconf(v6, v7)
           Atom pose(v15, v16)
           Atom supported(v15, v16, v11)
           Atom graspable(v8)
           Atom grasp(v12, #o1)
           Atom grasp(v8, #g0)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v12, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, v9, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, #p0, #g0, #q0, #t0)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q1, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p0 #g0 #q0 #t0))
           ((place v4 v8 #p0 #g0 #q0 #t0))
           ((pick v4 v8 v9 #g0 #q1 #t1))
           ((place v4 v8 v9 #g0 #q1 #t1))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, `v8`, `v12`, and `v15` which are graspable and stackable. `v8` is currently at pose `v9`, supported by `v11`. `v12` is at pose `v13`, supported by `v14`. `v15` is at pose `v16`, supported by `v11`. There are two arms, `v4` and `v6`, both are handempty. The robot's base is at configuration `v3`.
           
           The goal `new-axiom@0()` is a derived axiom, which is true if `on(green, v18)` and `type(green, v17)`. In this problem, 'green' corresponds to `v8` and `v12`, as they are of `type v17`. `v18` is a surface. So, the goal is to have `v8` or `v12` on `v18`. Since `v8` is currently on `v11`, and `v12` is on `v14`, we need to move either `v8` or `v12` to `v18`.
           
           Looking at the available actions:
           `v8` can be picked from `v9` by arm `v4` with grasp `#g0` at bconf `q1` using trajectory `t1`.
           `v8` can be placed at `#p0` (which is supported by `v18`) by arm `v4` with grasp `#g0` at bconf `q0` using trajectory `t0`.
           `v12` can be placed at `#o2` (which is supported by `v18`) by arm `v4` with grasp `#o1` at bconf `#o3` using trajectory `#o4`.
           
           A possible plan is to pick `v8` from `v9` and place it on `v18` (which implies placing it at `#p0` since it's supported by `v18`). However, the pick action requires `atbconf(q1)` but we are at `atbconf(v3)`. We also need to move the base to the right configuration before picking.
           
           The plan will be:
           1. Move the base from `v3` to `q1` using trajectory `t3`.
           2. Pick `v8` with arm `v4` from `v9` with grasp `#g0` at bconf `q1` using trajectory `t1`.
           3. Move the base from `q1` to `q0` using trajectory `#o0`.
           4. Place `v8` with arm `v4` at pose `#p0` (on `v18`) with grasp `#g0` at bconf `q0` using trajectory `t0`.
           
           This will result in `on(v8, v18)` becoming true, which satisfies the `new-axiom@0()` goal since `type(v8, v17)` is true.
           
           --Plan--:
           (move_base v3 #q1 #t3)
           (pick v4 v8 v9 #g0 #q1 #t1)
           (move_base #q1 #q0 #o0)
           (place v4 v8 #p0 #g0 #q0 #t0)

