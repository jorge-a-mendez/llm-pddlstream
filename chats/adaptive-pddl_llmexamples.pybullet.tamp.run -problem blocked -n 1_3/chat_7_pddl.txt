User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v15)
           Atom stackable(v12, v18)
           Atom type(v12, v17)
           Atom pose(v15, v16)
           Atom ataconf(v6, v7)
           Atom stackable(v12, v10)
           Atom graspable(v8)
           Atom aconf(v4, v5)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom supported(v8, v9, v11)
           Atom supported(v15, v16, v11)
           Atom controllable(v4)
           Atom supported(v12, v13, v14)
           Atom bconf(v3)
           Atom atpose(v8, v9)
           Atom stackable(v15, v10)
           Atom atpose(v12, v13)
           Atom atpose(v15, v16)
           Atom graspable(v12)
           Atom aconf(v6, v7)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v21, v15, v16)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom handempty(v6)
           Atom canmove()
           Atom arm(v6)
           Atom stackable(v8, v10)
           Atom type(v8, v17)
           Atom pose(v12, v13)
           Atom stackable(v8, v18)
           Atom ataconf(v4, v5)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v8, v31)
           Atom supported(v8, v31, v18)
           Atom pose(v8, v28)
           Atom supported(v8, v28, v18)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom grasp(v12, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v15, #o1)
           Atom grasp(v8, v23)
           Atom grasp(v8, v22)
           Atom grasp(v8, v21)
           Atom grasp(v8, v20)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v23, v26, v27)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v28, v21, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v8, v9, v21, #q2, #t5)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v8, v19, v21, #q3, #t6)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v20, v24, v25)
           Atom bconf(v29)
           Atom atraj(v30)
           Atom kin(v4, v8, v28, v20, v29, v30)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v3, #o0, v26)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v3, #o0, v24)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom basemotion(v26, #o0, #q3)
           Atom basemotion(#q3, #o0, v24)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(v24, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, v26)
           Atom basemotion(#q2, #o0, v26)
           Atom basemotion(v24, #o0, #q2)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q2)
           Atom basemotion(#q2, #o0, v24)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(v26, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t9)
           Atom basemotion(#q2, #t9, #q3)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, v24)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q3 #t9))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v24 #o0))
           ((move_base #q3 v26 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q3 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q3 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t7))
           ((move_base v3 #q3 #t8))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 v24 v25))
           ((place v4 v8 v19 v20 v24 v25))
           ((pick v4 v8 v19 v21 #q3 #t6))
           ((place v4 v8 v19 v21 #q3 #t6))
           ((pick v4 v8 v19 v23 v26 v27))
           ((place v4 v8 v19 v23 v26 v27))
           ((pick v4 v8 v28 v21 #o3 #o4))
           ((place v4 v8 v28 v21 #o3 #o4))
           ((pick v4 v8 v9 v21 #q2 #t5))
           ((place v4 v8 v9 v21 #q2 #t5))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to satisfy `new-axiom@0()`, which is `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, we have `type(v8, v17)` and `stackable(v8, v18)`. This means if we can put `v8` on `v18`, the goal will be achieved. Currently, `v8` is `atpose(v8, v9)` and `supported(v8, v9, v11)`. We need to pick up `v8` and then place it on `v18`. There are several valid pick and place actions for `v8`. The goal requires `on(?green, v18)` which means an object of type `v17` (which is `v8`) needs to be placed on `v18`. There are no `clean` or `cook` actions as part of the plan as the goal is simply to have `v8` on `v18`.
           
           --Plan--:
           (pick v4 v8 v9 v21 #q2 #t5)
           (move_base #q2 #q3 #t9)
           (place v4 v8 v19 v21 #q3 #t6)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q2) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal is to satisfy `new-axiom@0()`, which translates to having an object of `type v17` on `v18`. From the initial state, `v8` is of `type v17` and is `stackable` on `v18`. Therefore, the task is to place `v8` on `v18`.
           
           Currently, `v8` is at `atpose(v8, v9)` and `atbconf(v3)`. The `pick` action `(pick v4 v8 v9 v21 #q2 #t5)` requires `atbconf(#q2)`. Thus, we need to `move_base` from `v3` to `#q2` before picking up `v8`. After picking, we need to place `v8` on `v18`. The available place actions for `v8` on `v18` include `(place v4 v8 v19 v21 #q3 #t6)` which requires `atbconf(#q3)`. So, after picking, we will need to move the base to `#q3` before placing.
           
           --Plan--:
           (move_base v3 #q2 #t7)
           (pick v4 v8 v9 v21 #q2 #t5)
           (move_base #q2 #q3 #t9)
           (place v4 v8 v19 v21 #q3 #t6)

