User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom graspable(v8)
           Atom pose(v12, v13)
           Atom handempty(v4)
           Atom type(v12, v17)
           Atom aconf(v6, v7)
           Atom graspable(v12)
           Atom ataconf(v6, v7)
           Atom atpose(v12, v13)
           Atom supported(v12, v13, v14)
           Atom arm(v6)
           Atom handempty(v6)
           Atom stackable(v15, v10)
           Atom stackable(v8, v10)
           Atom aconf(v4, v5)
           Atom type(v8, v17)
           Atom canmove()
           Atom controllable(v4)
           Atom ataconf(v4, v5)
           Atom atpose(v8, v9)
           Atom supported(v15, v16, v11)
           Atom pose(v15, v16)
           Atom arm(v4)
           Atom pose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v18)
           Atom stackable(v8, v18)
           Atom graspable(v15)
           Atom stackable(v12, v10)
           Atom atpose(v15, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom grasp(v15, #o1)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #o1)
           Atom grasp(v12, #o1)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects: `v8`, `v12`, and `v15` are graspable objects. `v14` and `v11` are surfaces, `v10` and `v18` are also surfaces which are implied to be stackable with `v8`, `v12`, and `v15`. The robot has two arms, `v4` and `v6`, both are handempty. The robot is at base configuration `v3`.
           
           The initial state indicates:
           - `v8` is at `v9` supported by `v11`. It is also stated that `v8` is at `#o2` supported by `v18` and `v10`.
           - `v12` is at `v13` supported by `v14`. It is also stated that `v12` is at `#o2` supported by `v10` and `v18`.
           - `v15` is at `v16` supported by `v11`. It is also stated that `v15` is at `#o2` supported by `v10`.
           - There are multiple poses and supports for the objects, which seems to imply different possible locations.
           - `v8`, `v12`, and `v15` are graspable.
           - `v8`, `v12`, and `v15` are stackable with `v10` and `v18`.
           - `v8` and `v12` are of type `v17`.
           - The robot can move.
           
           The goal `new-axiom@0()` can be achieved if `on(?green, v18)` and `type(?green, v17)` are true. In the provided state, there is no object named `green`. However, if `?green` is a variable, then we need to find an object that is on `v18` and is of type `v17`.
           
           From the initial state, we have:
           - `type(v8, v17)`
           - `type(v12, v17)`
           
           We also have:
           - `supported(v8, #o2, v18)`
           - `supported(v12, #o2, v18)`
           
           For an object to be `on` a surface, both `supported(?o, ?p, ?r)` and `atpose(?o, ?p)` must be true.
           We have `atpose(v8, v9)` and `atpose(v12, v13)`. These poses are supported by `v11` and `v14` respectively, not `v18`.
           
           However, the initial state also includes `pose(v8, #o2)`, `supported(v8, #o2, v18)`, `pose(v12, #o2)`, and `supported(v12, #o2, v18)`. If `#o2` represents the pose where `v8` (or `v12`) is on `v18`, and `atpose(v8, #o2)` (or `atpose(v12, #o2)`) were true, then `on(v8, v18)` (or `on(v12, v18)`) would be true.
           
           Since `atpose(v8, v9)` and `atpose(v12, v13)` are true, and `v9` and `v13` are not supported by `v18`, neither `v8` nor `v12` are initially on `v18`.
           There are no pick or place actions available in the `available action instances` list. The only available action is `move_base v3 v3 #o0`, which doesn't change the object positions or states relevant to the goal.
           
           Therefore, the goal is not achievable with the given set of actions. The goal requires an object of type `v17` to be on `v18`. Currently, `v8` and `v12` are of type `v17` but are not on `v18` at their current `atpose` locations. There is no action to move them to `v18`.

