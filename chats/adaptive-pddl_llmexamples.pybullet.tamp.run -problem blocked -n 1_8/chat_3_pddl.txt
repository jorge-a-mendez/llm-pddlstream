User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom graspable(v8)
           Atom pose(v12, v13)
           Atom handempty(v4)
           Atom type(v12, v17)
           Atom aconf(v6, v7)
           Atom graspable(v12)
           Atom ataconf(v6, v7)
           Atom atpose(v12, v13)
           Atom supported(v12, v13, v14)
           Atom arm(v6)
           Atom handempty(v6)
           Atom stackable(v15, v10)
           Atom stackable(v8, v10)
           Atom aconf(v4, v5)
           Atom type(v8, v17)
           Atom canmove()
           Atom controllable(v4)
           Atom ataconf(v4, v5)
           Atom atpose(v8, v9)
           Atom supported(v15, v16, v11)
           Atom pose(v15, v16)
           Atom arm(v4)
           Atom pose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v18)
           Atom stackable(v8, v18)
           Atom graspable(v15)
           Atom stackable(v12, v10)
           Atom atpose(v15, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom grasp(v15, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #o1)
           Atom grasp(v12, #g0)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, #p0, #g0, #q1, #t1)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q1 #t1))
           ((place v4 v12 #p0 #g0 #q1 #t1))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `(new-axiom@0)`. This axiom is defined as `(on ?green v18)` and `(type ?green v17)`. In the initial state, we have `(type v12 v17)` and `(type v8 v17)`. So `?green` can be either `v12` or `v8`. The initial state also has `(atpose v12 v13)` and `(supported v12 v13 v14)`, meaning `(on v12 v14)`. It also has `(atpose v8 v9)` and `(supported v8 v9 v11)`, meaning `(on v8 v11)`. For the goal to be true, either `(on v12 v18)` or `(on v8 v18)` must be achieved. Currently, `v12` is on `v14` and `v8` is on `v11`.
           
           The objects `v12` and `v8` are both `graspable` and of `type v17`. The object `v18` is a receptacle that `v12` and `v8` can be `stackable` on. The initial state shows `(supported v12 #p0 v18)` and `(supported v8 #o2 v18)`, indicating that `v12` can be placed at pose `#p0` on `v18`, and `v8` can be placed at pose `#o2` on `v18`.
           
           The robot arm `v4` is `handempty` and currently at `aconf v5`. The robot base is at `bconf v3`.
           
           To achieve `(on v12 v18)`, we need to place `v12` at pose `#p0`. Currently, `v12` is at `v13`.
           To achieve `(on v8 v18)`, we need to place `v8` at pose `#o2`. Currently, `v8` is at `v9`.
           
           Let's try to place `v12` on `v18`. This involves picking `v12` from `v13` and placing it at `#p0`.
           
           1. **Pick v12:** The action `(pick v4 v12 v13 #g0 #q0 #t0)` is available. This action requires `atbconf #q0`. Currently, the robot is at `v3`. So, we need to move the base from `v3` to `#q0`.
           2. **Move base to #q0:** The action `(move_base v3 #q0 #t2)` is available.
           3. **Place v12:** After picking, we need to place `v12` at `#p0`. The action `(place v4 v12 #p0 #g0 #q1 #t1)` is available. This action requires `atbconf #q1`. So we need to move the base from `#q0` to `#q1`.
           4. **Move base to #q1:** The action `(move_base #q0 #q1 #o0)` is available.
           
           --Plan--:
           (move_base v3 #q0 #t2)
           (pick v4 v12 v13 #g0 #q0 #t0)
           (move_base #q0 #q1 #o0)
           (place v4 v12 #p0 #g0 #q1 #t1)

