User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v8)
           Atom rock(v1)
           Atom camera(v10)
           Atom atconf(v12, v13)
           Atom rover(v12)
           Atom rock(v5)
           Atom lander(v9)
           Atom type(v5, v6)
           Atom rock(v4)
           Atom rover(v14)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom free(v12, v16)
           Atom objective(v18)
           Atom free(v14, v16)
           Atom supports(v10, v11)
           Atom conf(v14, v15)
           Atom conf(v12, v13)
           Atom rock(v3)
           Atom objective(v17)
           Atom store(v16)
           Atom onboard(v10, v14)
           Atom rock(v7)
           Atom type(v1, v2)
           Atom type(v7, v6)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q1, v5)
           Atom conf(v12, #q1)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q4, #y2, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q3, v1)
           Atom conf(v12, #q3)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q6, v8)
           Atom conf(v12, #q6)
           Atom imagevisible(v14, #q5, #y3, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v8)
           Atom above(v14, #q11, v1)
           Atom conf(v14, #q11)
           Atom imagevisible(v14, #q8, #y5, v18)
           Atom imagerange(v14, #q8, v18)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q10, v4)
           Atom conf(v12, #q10)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q7, #y4, v9)
           Atom comrange(v14, #q7, v9)
           Atom conf(v14, #q7)
           Atom ray(#y4)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #t8, v15)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #t11, #q7)
           Atom motion(v14, v15, #t13, #q5)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t4, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q2, #t2, #q1)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q2, #t3, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q1, #t5, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #t7, #q3)
           Atom motion(v12, #q3, #t6, #q0)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q0, #t9, #q6)
           Atom motion(v12, #q2, #t12, #q0)
           Atom motion(v12, #q6, #t10, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t1, v13)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q10, #t16, #q0)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #t18, #q10)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t15, #q4)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, v15, #t17, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #t19, #q7)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q8, #t14, #q9)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q5)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q11, #t21, #q7)
           Atom motion(v14, #q7, #t20, #q11)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q1 v5 v16))
           ((sample_rock v12 #q10 v4 v16))
           ((sample_rock v12 #q3 v1 v16))
           ((sample_rock v12 #q6 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q11 v1 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t1 v13))
           ((move v12 #q0 #t7 #q3))
           ((move v12 #q0 #t9 #q6))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t5 #q0))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t16 #q0))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t12 #q0))
           ((move v12 #q2 #t2 #q1))
           ((move v12 #q2 #t3 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t6 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t18 #q10))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t10 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q4))
           ((move v12 v13 #t4 #q2))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q5))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t21 #q7))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t11 #q7))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #t20 #q11))
           ((move v14 #q7 #t8 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t14 #q9))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t19 #q7))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t13 #q5))
           ((move v14 v15 #t17 #q8))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v12 #q4 #y2 v17 v10))
           ((calibrate v14 #q5 #y3 v17 v10))
           ((calibrate v14 #q8 #y5 v18 v10))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v12 #q4 #y2 v17 v10 v11))
           ((take_image v14 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q8 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q7 #y4 v9 v3))
           ((send_analysis v14 #q7 #y4 v9 v4))
           ((send_analysis v14 #q7 #y4 v9 v7))
           ((send_analysis v14 #q7 #y4 v9 v8))
           ((send_analysis v14 #q7 #y4 v9 v1))
           ((send_analysis v14 #q7 #y4 v9 v5))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q7 #y4 v9 v17 v11))
           ((send_image v14 #q7 #y4 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Strategic Plan to Achieve new-axiom@0()**
           
           Alright, here's the game plan to nail this `new-axiom@0()` goal in the `rovers` domain. It's all about making sure we satisfy those initial conditions and then skillfully navigating the rover, taking photos, analyzing rocks, and getting all the data to the lander.
           
           **The Lay of the Land:**
           
           We start with these basic facts: Rovers are in their initial configurations (`atconf`), their storage space is free (`free`), and a clear picture of the initial state. The goal is clear:
           
           *   Get images (`receivedimage`) of two specific targets (v17 and v18).
           *   Analyze (`receivedanalysis`) a rock of type v2 and another of type v6.
           
           **Putting It All Together:**
           
           My strategy will involve using rover *v12* to do all the work, since both cameras are supported by that rover.
           
           *   To get images of *v17* and *v18*, rover v12 should:
               *   Move from its starting location to those image locations
               *   Calibrate the camera for high quality images
               *   Take the image
               *   Return to the lander location, and
               *   Send the images
           
           *   To analyze the rock samples:
               *   Move the rover to locations above the rock samples (of type v2 and v6).
               *   Collect one of each sample in the rover's storage unit.
               *   Move back to the lander location.
               *   Send the analysis.
               *   Drop the rock in the storage unit (to make it available for the next sample).
           
           **Action Plan:**
           
           Here's the detailed breakdown, making sure each step is feasible based on the available information:
           
           1.  **Image v17:**
               *   Move rover *v12* from its initial location v13 to #q4 to take image v17.
               *   Calibrate Camera to take image v17.
               *   Take the image of v17.
               *   Navigate back from #q4 to #q0.
               *   Send the image to the lander.
           
           2.  **Image v18:**
               *   From the lander, move the rover to #q2.
               *   Recalibrate.
               *   Take image v18.
               *   Navigate back to the lander and,
               *   Send the image to the lander.
           
           3.  **Analyze Rock v1 (type v2):**
               *   Move the rover from the lander to above rock v1 at #q3.
               *   Sample rock v1 and store it.
               *   Return to the lander.
               *   Send the rock analysis to the lander.
               *   Drop the rock.
           
           4.  **Analyze Rock v8 (type v6):**
               *   Move the rover to above rock v8 at #q6.
               *   Sample rock v8 and store it.
               *   Return to the lander.
               *   Send the analysis.
               *   Drop the rock.
           
           5. **Return:**
               *   The rover is at #q0, the goal requires it to be at `v13`, so I will move it there.
           
           *Check: at the end of the plan: all `atconf` initial state conditions will hold, the free conditions will be met, the rover has acquired the requested samples, and all the required image and analysis communication has been sent.*
           
)

Model:     **Strategic Plan to Achieve new-axiom@0()**
           
           Alright, here's the game plan to nail this `new-axiom@0()` goal in the `rovers` domain. It's all about making sure we satisfy those initial conditions and then skillfully navigating the rover, taking photos, analyzing rocks, and getting all the data to the lander.
           
           **The Lay of the Land:**
           
           We start with these basic facts: Rovers are in their initial configurations (`atconf`), their storage space is free (`free`), and a clear picture of the initial state. The goal is clear:
           
           *   Get images (`receivedimage`) of two specific targets (v17 and v18).
           *   Analyze (`receivedanalysis`) a rock of type v2 and another of type v6.
           
           **Putting It All Together:**
           
           My strategy will involve using rover *v12* to do all the work, since both cameras are supported by that rover.
           
           *   To get images of *v17* and *v18*, rover v12 should:
               *   Move from its starting location to those image locations
               *   Calibrate the camera for high quality images
               *   Take the image
               *   Return to the lander location, and
               *   Send the images
           
           *   To analyze the rock samples:
               *   Move the rover to locations above the rock samples (of type v2 and v6).
               *   Collect one of each sample in the rover's storage unit.
               *   Move back to the lander location.
               *   Send the analysis.
               *   Drop the rock in the storage unit (to make it available for the next sample).
           
           **Action Plan:**
           
           Here's the detailed breakdown, making sure each step is feasible based on the available information:
           
           1.  **Image v17:**
               *   Move rover *v12* from its initial location v13 to #q4 to take image v17.
               *   Calibrate Camera to take image v17.
               *   Take the image of v17.
               *   Navigate back from #q4 to #q0.
               *   Send the image to the lander.
           
           2.  **Image v18:**
               *   From the lander, move the rover to #q2.
               *   Recalibrate.
               *   Take image v18.
               *   Navigate back to the lander and,
               *   Send the image to the lander.
           
           3.  **Analyze Rock v1 (type v2):**
               *   Move the rover from the lander to above rock v1 at #q3.
               *   Sample rock v1 and store it.
               *   Return to the lander.
               *   Send the rock analysis to the lander.
               *   Drop the rock.
           
           4.  **Analyze Rock v8 (type v6):**
               *   Move the rover to above rock v8 at #q6.
               *   Sample rock v8 and store it.
               *   Return to the lander.
               *   Send the analysis.
               *   Drop the rock.
           
           5. **Return:**
               *   The rover is at #q0, the goal requires it to be at `v13`, so I will move it there.
           
           *Check: at the end of the plan: all `atconf` initial state conditions will hold, the free conditions will be met, the rover has acquired the requested samples, and all the required image and analysis communication has been sent.*
           

