User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v127: object
           v128: object
           v129: object
           v13: object
           v130: object
           v131: object
           v132: object
           v133: object
           v134: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v3: object
           v4: object
           v5: object
           v57: object
           v58: object
           v59: object
           v6: object
           v7: object
           v77: object
           v8: object
           v81: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v14, v10)
           Atom ~test-cfree-pose-pose-negative(v16, v59, v14, v23)
           Atom graspable(v16)
           Atom stackable(v8, v18)
           Atom stackable(v16, v10)
           Atom ~test-cfree-pose-pose-negative(v14, v20, v12, v21)
           Atom handempty(v4)
           Atom stackable(v12, v10)
           Atom atpose(v16, v17)
           Atom supported(v12, v13, v11)
           Atom arm(v4)
           Atom supported(v8, v9, v11)
           Atom ~test-cfree-pose-pose-negative(v14, v25, v12, v21)
           Atom ~test-cfree-pose-pose-negative(v16, v59, v14, v25)
           Atom ~test-cfree-pose-pose-negative(v14, v23, v12, v22)
           Atom ~test-cfree-pose-pose-negative(v12, v24, v8, v77)
           Atom ~test-cfree-pose-pose-negative(v16, v57, v14, v25)
           Atom aconf(v6, v7)
           Atom supported(v14, v15, v11)
           Atom ~test-cfree-pose-pose-negative(v16, v58, v14, v25)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom ~test-cfree-pose-pose-negative(v14, v23, v8, v77)
           Atom ~test-cfree-pose-pose-negative(v12, v24, v8, v19)
           Atom stackable(v8, v10)
           Atom stackable(v14, v18)
           Atom ~test-cfree-pose-pose-negative(v16, v58, v8, v81)
           Atom controllable(v4)
           Atom pose(v8, v9)
           Atom ~test-cfree-pose-pose-negative(v14, v20, v12, v24)
           Atom ~test-cfree-pose-pose-negative(v16, v59, v8, v81)
           Atom ~test-cfree-pose-pose-negative(v12, v22, v8, v81)
           Atom handempty(v6)
           Atom atpose(v8, v9)
           Atom atpose(v14, v15)
           Atom ~test-cfree-pose-pose-negative(v14, v25, v12, v24)
           Atom stackable(v16, v18)
           Atom ~test-cfree-pose-pose-negative(v14, v25, v8, v81)
           Atom aconf(v4, v5)
           Atom ataconf(v4, v5)
           Atom pose(v14, v15)
           Atom graspable(v14)
           Atom ~test-cfree-pose-pose-negative(v14, v25, v12, v22)
           Atom ~test-cfree-pose-pose-negative(v16, v57, v14, v23)
           Atom ~test-cfree-pose-pose-negative(v16, v58, v14, v23)
           Atom stackable(v12, v18)
           Atom canmove()
           Atom ~test-cfree-pose-pose-negative(v16, v58, v8, v77)
           Atom supported(v16, v17, v11)
           Atom ~test-cfree-pose-pose-negative(v12, v22, v8, v19)
           Atom ~test-cfree-pose-pose-negative(v16, v59, v8, v77)
           Atom pose(v16, v17)
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom ~test-cfree-pose-pose-negative(v14, v23, v12, v21)
           Atom ~test-cfree-pose-pose-negative(v12, v22, v8, v77)
           Atom arm(v6)
           Atom ~test-cfree-pose-pose-negative(v14, v23, v12, v24)
           Atom ~test-cfree-pose-pose-negative(v14, v20, v12, v22)
           Atom ataconf(v6, v7)
           Atom ~test-cfree-pose-pose-negative(v12, v24, v8, v81)
           Atom graspable(v8)
           Atom graspable(v12)
           Atom grasp(v12, v127)
           Atom grasp(v12, v128)
           Atom grasp(v8, v130)
           Atom grasp(v8, v129)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, v129, #o3, #o4)
           Atom kin(v4, v8, v9, v130, #o3, #o4)
           Atom pose(v12, v22)
           Atom supported(v12, v22, v18)
           Atom pose(v12, v21)
           Atom supported(v12, v21, v18)
           Atom pose(v12, v24)
           Atom supported(v12, v24, v18)
           Atom kin(v4, v12, v21, v128, #o3, #o4)
           Atom kin(v4, v12, v21, v127, #o3, #o4)
           Atom kin(v4, v12, v22, v127, #o3, #o4)
           Atom kin(v4, v12, v22, v128, #o3, #o4)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v14, v25)
           Atom supported(v14, v25, v18)
           Atom pose(v14, v23)
           Atom supported(v14, v23, v18)
           Atom pose(v14, v20)
           Atom supported(v14, v20, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v14, v132)
           Atom grasp(v14, v131)
           Atom kin(v4, v14, v20, v131, #o3, #o4)
           Atom kin(v4, v14, v15, v131, #o3, #o4)
           Atom kin(v4, v14, v23, v131, #o3, #o4)
           Atom kin(v4, v14, v20, v132, #o3, #o4)
           Atom kin(v4, v14, v15, v132, #o3, #o4)
           Atom kin(v4, v14, v23, v132, #o3, #o4)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v8, v77)
           Atom supported(v8, v77, v18)
           Atom pose(v8, v81)
           Atom supported(v8, v81, v18)
           Atom kin(v4, v12, v13, v128, #o3, #o4)
           Atom kin(v4, v12, v13, v127, #o3, #o4)
           Atom kin(v4, v8, v19, v129, #o3, #o4)
           Atom kin(v4, v8, v19, v130, #o3, #o4)
           Atom kin(v4, v8, v77, v129, #o3, #o4)
           Atom kin(v4, v8, v77, v130, #o3, #o4)
           Atom grasp(v16, v134)
           Atom grasp(v16, v133)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom kin(v4, v16, v17, v134, #o3, #o4)
           Atom kin(v4, v16, v17, v133, #o3, #o4)
           Atom pose(v16, v59)
           Atom supported(v16, v59, v18)
           Atom pose(v16, v58)
           Atom supported(v16, v58, v18)
           Atom pose(v16, v57)
           Atom supported(v16, v57, v18)
           Atom kin(v4, v16, v57, v134, #o3, #o4)
           Atom kin(v4, v16, v57, v133, #o3, #o4)
           Atom kin(v4, v16, v58, v133, #o3, #o4)
           Atom kin(v4, v16, v58, v134, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom kin(v4, v16, #o2, v133, #o3, #o4)
           Atom kin(v4, v16, #o2, v134, #o3, #o4)
           Atom kin(v4, v8, #o2, v130, #o3, #o4)
           Atom kin(v4, v8, #o2, v129, #o3, #o4)
           Atom kin(v4, v12, #o2, v128, #o3, #o4)
           Atom kin(v4, v12, #o2, v127, #o3, #o4)
           Atom kin(v4, v14, #o2, v131, #o3, #o4)
           Atom kin(v4, v14, #o2, v132, #o3, #o4)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 v127 #o3 #o4))
           ((place v4 v12 #o2 v127 #o3 #o4))
           ((pick v4 v12 #o2 v128 #o3 #o4))
           ((place v4 v12 #o2 v128 #o3 #o4))
           ((pick v4 v12 v13 v127 #o3 #o4))
           ((place v4 v12 v13 v127 #o3 #o4))
           ((pick v4 v12 v13 v128 #o3 #o4))
           ((place v4 v12 v13 v128 #o3 #o4))
           ((pick v4 v12 v21 v127 #o3 #o4))
           ((place v4 v12 v21 v127 #o3 #o4))
           ((pick v4 v12 v21 v128 #o3 #o4))
           ((place v4 v12 v21 v128 #o3 #o4))
           ((pick v4 v12 v22 v127 #o3 #o4))
           ((place v4 v12 v22 v127 #o3 #o4))
           ((pick v4 v12 v22 v128 #o3 #o4))
           ((place v4 v12 v22 v128 #o3 #o4))
           ((pick v4 v14 #o2 v131 #o3 #o4))
           ((place v4 v14 #o2 v131 #o3 #o4))
           ((pick v4 v14 #o2 v132 #o3 #o4))
           ((place v4 v14 #o2 v132 #o3 #o4))
           ((pick v4 v14 v15 v131 #o3 #o4))
           ((place v4 v14 v15 v131 #o3 #o4))
           ((pick v4 v14 v15 v132 #o3 #o4))
           ((place v4 v14 v15 v132 #o3 #o4))
           ((pick v4 v14 v20 v131 #o3 #o4))
           ((place v4 v14 v20 v131 #o3 #o4))
           ((pick v4 v14 v20 v132 #o3 #o4))
           ((place v4 v14 v20 v132 #o3 #o4))
           ((pick v4 v14 v23 v131 #o3 #o4))
           ((place v4 v14 v23 v131 #o3 #o4))
           ((pick v4 v14 v23 v132 #o3 #o4))
           ((place v4 v14 v23 v132 #o3 #o4))
           ((pick v4 v16 #o2 v133 #o3 #o4))
           ((place v4 v16 #o2 v133 #o3 #o4))
           ((pick v4 v16 #o2 v134 #o3 #o4))
           ((place v4 v16 #o2 v134 #o3 #o4))
           ((pick v4 v16 v17 v133 #o3 #o4))
           ((place v4 v16 v17 v133 #o3 #o4))
           ((pick v4 v16 v17 v134 #o3 #o4))
           ((place v4 v16 v17 v134 #o3 #o4))
           ((pick v4 v16 v57 v133 #o3 #o4))
           ((place v4 v16 v57 v133 #o3 #o4))
           ((pick v4 v16 v57 v134 #o3 #o4))
           ((place v4 v16 v57 v134 #o3 #o4))
           ((pick v4 v16 v58 v133 #o3 #o4))
           ((place v4 v16 v58 v133 #o3 #o4))
           ((pick v4 v16 v58 v134 #o3 #o4))
           ((place v4 v16 v58 v134 #o3 #o4))
           ((pick v4 v8 #o2 v129 #o3 #o4))
           ((place v4 v8 #o2 v129 #o3 #o4))
           ((pick v4 v8 #o2 v130 #o3 #o4))
           ((place v4 v8 #o2 v130 #o3 #o4))
           ((pick v4 v8 v19 v129 #o3 #o4))
           ((place v4 v8 v19 v129 #o3 #o4))
           ((pick v4 v8 v19 v130 #o3 #o4))
           ((place v4 v8 v19 v130 #o3 #o4))
           ((pick v4 v8 v77 v129 #o3 #o4))
           ((place v4 v8 v77 v129 #o3 #o4))
           ((pick v4 v8 v77 v130 #o3 #o4))
           ((place v4 v8 v77 v130 #o3 #o4))
           ((pick v4 v8 v9 v129 #o3 #o4))
           ((place v4 v8 v9 v129 #o3 #o4))
           ((pick v4 v8 v9 v130 #o3 #o4))
           ((place v4 v8 v9 v130 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects (v8, v12, v14, v16) that are stackable and currently located on `v11`. The goal is to move all these objects from `v11` to `v18`. The robot arm `v4` is currently handempty and at configuration `v5`, and the robot base is at `v3`. The target poses for `v18` are `v19, v77, v81` for `v8`, `v21, v22, v24` for `v12`, `v20, v23, v25` for `v14`, and `v57, v58, v59` for `v16`. The plan will involve a sequence of pick and place actions for each object.
           
           --Plan--:
           (pick v4 v12 v13 v127 #o3 #o4)
           (place v4 v12 v21 v127 #o3 #o4)
           (pick v4 v14 v15 v131 #o3 #o4)
           (place v4 v14 v20 v131 #o3 #o4)
           (pick v4 v16 v17 v133 #o3 #o4)
           (place v4 v16 v57 v133 #o3 #o4)
           (pick v4 v8 v9 v129 #o3 #o4)
           (place v4 v8 v19 v129 #o3 #o4)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #o3) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the `atbconf` precondition for the pick and place actions was not met. The initial state has `atbconf(v3)`, but the plan used `#o3` for the pick and place actions, which isn't necessarily `v3`. However, the available action instances for pick and place all use `#o3` for the base configuration. This implies that a `move_base` action might be required to change the robot's base configuration from `v3` to `#o3` before picking and placing, or we are meant to assume that `#o3` is a valid base configuration for the pick and place operations given it exists as `bconf(#o3)`. Since there are `basemotion` actions from `v3` to `#o3`, we should include a move_base action.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v12 v13 v127 #o3 #o4)
           (place v4 v12 v21 v127 #o3 #o4)
           (pick v4 v14 v15 v131 #o3 #o4)
           (place v4 v14 v20 v131 #o3 #o4)
           (pick v4 v16 v17 v133 #o3 #o4)
           (place v4 v16 v57 v133 #o3 #o4)
           (pick v4 v8 v9 v129 #o3 #o4)
           (place v4 v8 v19 v129 #o3 #o4)

