User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v4)
           Atom type(v4, v2)
           Atom atconf(v12, v13)
           Atom lander(v9)
           Atom free(v14, v16)
           Atom objective(v19)
           Atom camera(v10)
           Atom conf(v12, v13)
           Atom rock(v8)
           Atom atconf(v14, v15)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom rock(v1)
           Atom supports(v10, v11)
           Atom objective(v20)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom mode(v11)
           Atom type(v1, v2)
           Atom rock(v3)
           Atom type(v3, v2)
           Atom store(v16)
           Atom type(v5, v6)
           Atom onboard(v10, v12)
           Atom objective(v17)
           Atom rock(v5)
           Atom rock(v7)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom imagevisible(v12, #q3, #y2, v19)
           Atom imagerange(v12, #q3, v19)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #q9, v7)
           Atom conf(v12, #q9)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q7, #y5, v17)
           Atom imagerange(v12, #q7, v17)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #q15, v1)
           Atom conf(v12, #q15)
           Atom imagevisible(v14, #q8, #y6, v17)
           Atom imagerange(v14, #q8, v17)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #q16, v5)
           Atom conf(v14, #q16)
           Atom above(v14, #q14, v7)
           Atom conf(v14, #q14)
           Atom imagevisible(v14, #q10, #y7, v19)
           Atom imagerange(v14, #q10, v19)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom above(v14, #q1, v4)
           Atom conf(v14, #q1)
           Atom above(v12, #q11, v4)
           Atom conf(v12, #q11)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v3)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q4, v8)
           Atom conf(v14, #q4)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q13, #y9, v18)
           Atom imagerange(v14, #q13, v18)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom imagevisible(v12, #q5, #y3, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q12, #y8, v20)
           Atom imagerange(v14, #q12, v20)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom motion(v12, v13, #t4, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #t13, #q12)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, v13, #t6, #q9)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q15, #o2, #q9)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, v13, #t37, #q15)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q9, #o2, #q15)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, v15, #t12, #q10)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q6, #t30, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v14, #q2, #t2, v15)
           Atom motion(v14, #q2, #t22, #q12)
           Atom motion(v14, #q2, #t17, #q13)
           Atom motion(v14, #q12, #t19, #q2)
           Atom motion(v14, #q13, #t18, #q2)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q2, #t31, #q4)
           Atom motion(v14, #q4, #t29, #q2)
           Atom motion(v14, #q10, #t8, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q2, #t26, #q14)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q14, #t23, #q2)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, v15, #t5, #q1)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q1, #t1, #q2)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q10, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q4)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q1)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q2, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q16, #o2, #q10)
           Atom motion(v14, v15, #t35, #q16)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q4, #o2, #q16)
           Atom motion(v14, #q16, #t36, #q2)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v12, #q9, #t9, #q0)
           Atom motion(v12, #q0, #t16, #q3)
           Atom motion(v12, #q0, #t15, #q11)
           Atom motion(v12, #q5, #t28, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q3, #t3, #q0)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, #q0, #t14, #q9)
           Atom motion(v12, #q6, #t27, #q0)
           Atom motion(v12, #q0, #t24, #q6)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q11, #t10, #q0)
           Atom motion(v12, #q15, #t34, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #t25, #q5)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, v15, #t11, #q8)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q8, #t7, #q2)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q14, #o2, #q8)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q3, #t33, #q7)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #t32, #q6)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, #q0, #t20, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q7, #t21, #q0)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q11 v4 v16))
           ((sample_rock v12 #q15 v1 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #q1 v4 v16))
           ((sample_rock v14 #q14 v7 v16))
           ((sample_rock v14 #q16 v5 v16))
           ((sample_rock v14 #q4 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t14 #q9))
           ((move v12 #q0 #t15 #q11))
           ((move v12 #q0 #t16 #q3))
           ((move v12 #q0 #t20 #q7))
           ((move v12 #q0 #t24 #q6))
           ((move v12 #q0 #t25 #q5))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t10 #q0))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 #q9))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t34 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t3 #q0))
           ((move v12 #q3 #t33 #q7))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t28 #q0))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t27 #q0))
           ((move v12 #q6 #t30 #q5))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t21 #q0))
           ((move v12 #q7 #t32 #q6))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q15))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t9 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t37 #q15))
           ((move v12 v13 #t4 #q3))
           ((move v12 v13 #t6 #q9))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q2))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q16))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t8 #q2))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t19 #q2))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t18 #q2))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q8))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t23 #q2))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q1))
           ((move v14 #q16 #o2 #q10))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q4))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t36 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q16))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #t17 #q13))
           ((move v14 #q2 #t2 v15))
           ((move v14 #q2 #t22 #q12))
           ((move v14 #q2 #t26 #q14))
           ((move v14 #q2 #t31 #q4))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q16))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t29 #q2))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t7 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t11 #q8))
           ((move v14 v15 #t12 #q10))
           ((move v14 v15 #t13 #q12))
           ((move v14 v15 #t35 #q16))
           ((move v14 v15 #t5 #q1))
           ((calibrate v12 #q3 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v12 #q7 #y5 v17 v10))
           ((calibrate v14 #q10 #y7 v19 v10))
           ((calibrate v14 #q12 #y8 v20 v10))
           ((calibrate v14 #q13 #y9 v18 v10))
           ((calibrate v14 #q8 #y6 v17 v10))
           ((take_image v12 #q3 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v12 #q7 #y5 v17 v10 v11))
           ((take_image v14 #q10 #y7 v19 v10 v11))
           ((take_image v14 #q12 #y8 v20 v10 v11))
           ((take_image v14 #q13 #y9 v18 v10 v11))
           ((take_image v14 #q8 #y6 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v19 v11))
           ((send_image v14 #q2 #y1 v9 v20 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **PDDL Planning Summary for new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal is to satisfy the `new-axiom@0()` condition, which essentially boils down to: get some images, analyze some rocks, and make sure the rovers end up in their initial configurations with free stores. It seems like the state must satisfy this set of axioms upon conclusion.
           
           First, I need to focus on getting those darn images: `receivedimage(O, M)` for four objectives and two rovers. We've got rovers v12 and v14, each with a camera v10 that supports mode v11.  The approach will be to:
           1.  Move to the objective.
           2.  Calibrate the camera.
           3.  Take the image.
           4.  Move to a communications configuration to send it.
           
           The objective configurations for the images are handled by v12, v14.
           
           Next, I have to ensure I satisfy both the stone and soil analysis requests. This is where the rovers get busy: sample the rock and send analysis results. I plan to use rover v12 to sample a `v3` rock (stone) and v14 to sample a `v7` rock (soil). This is the basic approach:
           
           1. Move to the location of the rock.
           2. Sample the rock.
           3. Send the analysis.
           4. **Important**: Drop the rock so that the store `v16` is freed.
           
           Finally, at the end of all the action, both rovers need to return to their initial configurations to ensure the axiom remains satisfied.
           
           My detailed plan is to make the rovers do each part independently of each other.
           v12 sequence: Move to objective q3, calibrate, take v19 image, move to config q5, calibrate, take v20 image, move to o5, sample rock, move to communication, send the images, drop the rock, move to the initial configuration v13.
           v14 sequence: Move to q8, calibrate, take v17 image, move to q13, calibrate, take v18 image, move to q14, sample rock, move to communication, send the images, drop the rock, move to initial configuration v15.
           
           The key to this problem is using the *right* `drop_rock` action in the end and ensuring `atconf` fluents are satisfied at the end. I am confident that these actions will satisfy the necessary conditions and complete the plan successfully.
           
)

Model:     **PDDL Planning Summary for new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal is to satisfy the `new-axiom@0()` condition, which essentially boils down to: get some images, analyze some rocks, and make sure the rovers end up in their initial configurations with free stores. It seems like the state must satisfy this set of axioms upon conclusion.
           
           First, I need to focus on getting those darn images: `receivedimage(O, M)` for four objectives and two rovers. We've got rovers v12 and v14, each with a camera v10 that supports mode v11.  The approach will be to:
           1.  Move to the objective.
           2.  Calibrate the camera.
           3.  Take the image.
           4.  Move to a communications configuration to send it.
           
           The objective configurations for the images are handled by v12, v14.
           
           Next, I have to ensure I satisfy both the stone and soil analysis requests. This is where the rovers get busy: sample the rock and send analysis results. I plan to use rover v12 to sample a `v3` rock (stone) and v14 to sample a `v7` rock (soil). This is the basic approach:
           
           1. Move to the location of the rock.
           2. Sample the rock.
           3. Send the analysis.
           4. **Important**: Drop the rock so that the store `v16` is freed.
           
           Finally, at the end of all the action, both rovers need to return to their initial configurations to ensure the axiom remains satisfied.
           
           My detailed plan is to make the rovers do each part independently of each other.
           v12 sequence: Move to objective q3, calibrate, take v19 image, move to config q5, calibrate, take v20 image, move to o5, sample rock, move to communication, send the images, drop the rock, move to the initial configuration v13.
           v14 sequence: Move to q8, calibrate, take v17 image, move to q13, calibrate, take v18 image, move to q14, sample rock, move to communication, send the images, drop the rock, move to initial configuration v15.
           
           The key to this problem is using the *right* `drop_rock` action in the end and ensuring `atconf` fluents are satisfied at the end. I am confident that these actions will satisfy the necessary conditions and complete the plan successfully.
           

