User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v4)
           Atom type(v4, v2)
           Atom atconf(v12, v13)
           Atom lander(v9)
           Atom free(v14, v16)
           Atom objective(v19)
           Atom camera(v10)
           Atom conf(v12, v13)
           Atom rock(v8)
           Atom atconf(v14, v15)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom rock(v1)
           Atom supports(v10, v11)
           Atom objective(v20)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom mode(v11)
           Atom type(v1, v2)
           Atom rock(v3)
           Atom type(v3, v2)
           Atom store(v16)
           Atom type(v5, v6)
           Atom onboard(v10, v12)
           Atom objective(v17)
           Atom rock(v5)
           Atom rock(v7)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom imagevisible(v12, #q3, #y2, v19)
           Atom imagerange(v12, #q3, v19)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #q9, v7)
           Atom conf(v12, #q9)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q7, #y5, v17)
           Atom imagerange(v12, #q7, v17)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #o5, v1)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v14, #q10, #y7, v19)
           Atom imagerange(v14, #q10, v19)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom imagevisible(v14, #q8, #y6, v17)
           Atom imagerange(v14, #q8, v17)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom above(v14, #q14, v7)
           Atom conf(v14, #q14)
           Atom above(v12, #q11, v4)
           Atom conf(v12, #q11)
           Atom above(v14, #q1, v4)
           Atom conf(v14, #q1)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v3)
           Atom above(v14, #q4, v8)
           Atom conf(v14, #q4)
           Atom above(v12, #o5, v8)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q13, #y9, v18)
           Atom imagerange(v14, #q13, v18)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom imagevisible(v14, #q12, #y8, v20)
           Atom imagerange(v14, #q12, v20)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom imagevisible(v12, #q5, #y3, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #t4, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v14, v15, #t11, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #t6, #q9)
           Atom motion(v14, v15, #t13, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q3, #t33, #q7)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q8)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q7, #t32, #q6)
           Atom motion(v12, #q6, #t30, #q5)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #t5, #q1)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v12, #q7, #t21, #q0)
           Atom motion(v12, #q0, #t24, #q6)
           Atom motion(v12, #q9, #t9, #q0)
           Atom motion(v12, #q6, #t27, #q0)
           Atom motion(v12, #q3, #t3, #q0)
           Atom motion(v12, #q0, #t16, #q3)
           Atom motion(v12, #q5, #t28, #q0)
           Atom motion(v12, #q0, #t20, #q7)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #t25, #q5)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t14, #q9)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q11, #t10, #q0)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q0, #t15, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q8, #t7, #q2)
           Atom motion(v14, #q14, #t23, #q2)
           Atom motion(v14, #q2, #t17, #q13)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q1, #t1, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q13, #t18, #q2)
           Atom motion(v14, #q12, #t19, #q2)
           Atom motion(v14, #q2, #t2, v15)
           Atom motion(v14, #q2, #t26, #q14)
           Atom motion(v14, #q2, #t22, #q12)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, v15, #t12, #q10)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q10, #t8, #q2)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q4, #t29, #q2)
           Atom motion(v14, #q2, #t31, #q4)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q11 v4 v16))
           ((sample_rock v12 #q9 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #q1 v4 v16))
           ((sample_rock v14 #q14 v7 v16))
           ((sample_rock v14 #q4 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t14 #q9))
           ((move v12 #q0 #t15 #q11))
           ((move v12 #q0 #t16 #q3))
           ((move v12 #q0 #t20 #q7))
           ((move v12 #q0 #t24 #q6))
           ((move v12 #q0 #t25 #q5))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t10 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t3 #q0))
           ((move v12 #q3 #t33 #q7))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t28 #q0))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t27 #q0))
           ((move v12 #q6 #t30 #q5))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t21 #q0))
           ((move v12 #q7 #t32 #q6))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t9 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t4 #q3))
           ((move v12 v13 #t6 #q9))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q2))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t8 #q2))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t19 #q2))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t18 #q2))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q8))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t23 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #t17 #q13))
           ((move v14 #q2 #t2 v15))
           ((move v14 #q2 #t22 #q12))
           ((move v14 #q2 #t26 #q14))
           ((move v14 #q2 #t31 #q4))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t29 #q2))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t7 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t11 #q8))
           ((move v14 v15 #t12 #q10))
           ((move v14 v15 #t13 #q12))
           ((move v14 v15 #t5 #q1))
           ((calibrate v12 #q3 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v12 #q7 #y5 v17 v10))
           ((calibrate v14 #q10 #y7 v19 v10))
           ((calibrate v14 #q12 #y8 v20 v10))
           ((calibrate v14 #q13 #y9 v18 v10))
           ((calibrate v14 #q8 #y6 v17 v10))
           ((take_image v12 #q3 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v12 #q7 #y5 v17 v10 v11))
           ((take_image v14 #q10 #y7 v19 v10 v11))
           ((take_image v14 #q12 #y8 v20 v10 v11))
           ((take_image v14 #q13 #y9 v18 v10 v11))
           ((take_image v14 #q8 #y6 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v19 v11))
           ((send_image v14 #q2 #y1 v9 v20 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Road to `new-axiom@0()`: A Detailed Plan**
           
           Alright, let's break down this `new-axiom@0()` beast in the `rovers` domain. The goal is clear: ensure the axiom's conditions are met. This means getting specific images and analyses, while also ending up in specific rover configurations with free stores.
           
           My initial thought was to examine these conditions and see if they were already met. I quickly realized they weren't; we have some significant work to do! So, I dove into the details:  the rovers need to receive specific images, analyze certain rock types, and return to their original starting points (v13 for v12 and v15 for v14) with empty storage bays.
           
           I've got two rovers, v12 and v14, each equipped with a store and a camera that can handle the necessary image mode. Analyzing the terrain, I see that these rovers are able to handle all of the necessary sampling and image acquisition. I then considered how to best approach this. Divide and conquer is the name of the game here.
           
           The strategy that makes the most sense is to have v12 handle some of the imaging tasks, as well as one of the rock samples, and v14 handle the rest. I started building out the plan, keeping in mind the need to calibrate the camera before each image and, of course, communicate with the lander. The analyses and images had to be sent.
           
           I meticulously outlined the actions for each rover: first, to perform analyses, move to a sampling location and send the analyses. Then, to capture images, move to the correct location for visibility, calibrate the cameras, take and then send images.
           
           As I built the plan, I realized I had missed something important. `new-axiom@0()` requires the stores to be free *and* the rovers to be in specific configurations. So, the analysis actions needed a new instruction after `send_analysis`: `drop_rock`. To address this critical step, I added the `drop_rock` action after each rover sends analysis results to free their stores. This, in turn, allows for `atconf` to be met because the final location is the initial location.
           
           With that incorporated, and after several detailed re-checks, I interleaved the actions into a more logical sequence. Now I am confident that the plan is sound, comprehensive, and ready to be executed.
           
)

Model:     **The Road to `new-axiom@0()`: A Detailed Plan**
           
           Alright, let's break down this `new-axiom@0()` beast in the `rovers` domain. The goal is clear: ensure the axiom's conditions are met. This means getting specific images and analyses, while also ending up in specific rover configurations with free stores.
           
           My initial thought was to examine these conditions and see if they were already met. I quickly realized they weren't; we have some significant work to do! So, I dove into the details:  the rovers need to receive specific images, analyze certain rock types, and return to their original starting points (v13 for v12 and v15 for v14) with empty storage bays.
           
           I've got two rovers, v12 and v14, each equipped with a store and a camera that can handle the necessary image mode. Analyzing the terrain, I see that these rovers are able to handle all of the necessary sampling and image acquisition. I then considered how to best approach this. Divide and conquer is the name of the game here.
           
           The strategy that makes the most sense is to have v12 handle some of the imaging tasks, as well as one of the rock samples, and v14 handle the rest. I started building out the plan, keeping in mind the need to calibrate the camera before each image and, of course, communicate with the lander. The analyses and images had to be sent.
           
           I meticulously outlined the actions for each rover: first, to perform analyses, move to a sampling location and send the analyses. Then, to capture images, move to the correct location for visibility, calibrate the cameras, take and then send images.
           
           As I built the plan, I realized I had missed something important. `new-axiom@0()` requires the stores to be free *and* the rovers to be in specific configurations. So, the analysis actions needed a new instruction after `send_analysis`: `drop_rock`. To address this critical step, I added the `drop_rock` action after each rover sends analysis results to free their stores. This, in turn, allows for `atconf` to be met because the final location is the initial location.
           
           With that incorporated, and after several detailed re-checks, I interleaved the actions into a more logical sequence. Now I am confident that the plan is sound, comprehensive, and ready to be executed.
           

