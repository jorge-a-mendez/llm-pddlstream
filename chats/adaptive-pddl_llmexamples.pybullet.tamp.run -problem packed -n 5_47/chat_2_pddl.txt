User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v12)
           Atom aconf(v6, v7)
           Atom graspable(v14)
           Atom stackable(v18, v20)
           Atom atpose(v16, v17)
           Atom stackable(v12, v10)
           Atom bconf(v3)
           Atom pose(v8, v9)
           Atom aconf(v4, v5)
           Atom stackable(v14, v20)
           Atom pose(v18, v19)
           Atom supported(v16, v17, v11)
           Atom arm(v4)
           Atom pose(v14, v15)
           Atom stackable(v16, v10)
           Atom controllable(v4)
           Atom supported(v18, v19, v11)
           Atom handempty(v4)
           Atom arm(v6)
           Atom ataconf(v4, v5)
           Atom supported(v12, v13, v11)
           Atom stackable(v8, v20)
           Atom atpose(v14, v15)
           Atom atpose(v18, v19)
           Atom atpose(v8, v9)
           Atom stackable(v12, v20)
           Atom graspable(v18)
           Atom handempty(v6)
           Atom pose(v12, v13)
           Atom supported(v14, v15, v11)
           Atom pose(v16, v17)
           Atom stackable(v16, v20)
           Atom graspable(v8)
           Atom atbconf(v3)
           Atom canmove()
           Atom stackable(v8, v10)
           Atom stackable(v14, v10)
           Atom stackable(v18, v10)
           Atom ataconf(v6, v7)
           Atom graspable(v16)
           Atom supported(v8, v9, v11)
           Atom atpose(v12, v13)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v16, #o1)
           Atom grasp(v18, #o1)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v12, #o2, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v14, #o2, v20)
           Atom supported(v8, #o2, v20)
           Atom grasp(v8, #o1)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v20)
           Atom grasp(v12, #o1)
           Atom supported(v18, #o2, v20)
           Atom grasp(v14, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v16, #o2, v10)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v18, v19, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v18, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v16 #o2 #o1 #o3 #o4))
           ((place v4 v16 #o2 #o1 #o3 #o4))
           ((pick v4 v16 v17 #o1 #o3 #o4))
           ((place v4 v16 v17 #o1 #o3 #o4))
           ((pick v4 v18 #o2 #o1 #o3 #o4))
           ((place v4 v18 #o2 #o1 #o3 #o4))
           ((pick v4 v18 v19 #o1 #o3 #o4))
           ((place v4 v18 v19 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place objects v8, v12, v14, v16, and v18 on object v20. Currently, all these objects are on v11. We need to pick each object from its current pose and place it on v20. The arm `v4` is available and hand empty. The robot is at base configuration `v3`.
           
           For each object, the general plan is:
           1. Pick the object from its current pose using arm `v4`.
           2. Place the object on object `v20` at a new pose. Since the goal is `on(object, v20)`, we need to find a `pose(#o2)` for each object that is supported by `v20`. The provided initial state shows `supported(object, #o2, v20)` for all target objects, and `pose(object, #o2)` is also given. We will use these new poses to place the objects on `v20`. We also need to move the base to the configuration `#o3` for picking and placing actions, and since the initial base configuration is `v3`, we will use `move_base v3 #o3 #o0` at the start. Since all kinematiic actions use #o3 as their bconf, we just need to move once.
           
           Let's break down the plan for each object:
           
           *   **v8:** Pick v8 from v9, then place it on v20 at #o2.
           *   **v12:** Pick v12 from v13, then place it on v20 at #o2.
           *   **v14:** Pick v14 from v15, then place it on v20 at #o2.
           *   **v16:** Pick v16 from v17, then place it on v20 at #o2.
           *   **v18:** Pick v18 from v19, then place it on v20 at #o2.
           
           Since all objects are currently supported by `v11` at their original poses (`v9`, `v13`, `v15`, `v17`, `v19`), and the goal is to place them on `v20` at new poses (`#o2`), and the kinematic actions `kin(v4, object, #o2, #o1, #o3, #o4)` are available, the plan should involve picking from the current poses and placing at the new poses `(#o2)` on `v20`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v16 v17 #o1 #o3 #o4)
           (place v4 v16 #o2 #o1 #o3 #o4)
           (pick v4 v18 v19 #o1 #o3 #o4)
           (place v4 v18 #o2 #o1 #o3 #o4)

