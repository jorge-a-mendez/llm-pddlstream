User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom type(v5, v6)
           Atom objective(v19)
           Atom type(v4, v2)
           Atom rover(v12)
           Atom objective(v18)
           Atom free(v12, v16)
           Atom type(v7, v6)
           Atom onboard(v10, v14)
           Atom mode(v11)
           Atom rock(v3)
           Atom rock(v4)
           Atom objective(v17)
           Atom lander(v9)
           Atom rock(v8)
           Atom type(v1, v2)
           Atom conf(v12, v13)
           Atom camera(v10)
           Atom free(v14, v16)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom type(v8, v6)
           Atom rock(v1)
           Atom atconf(v12, v13)
           Atom atconf(v14, v15)
           Atom type(v3, v2)
           Atom store(v16)
           Atom imagevisible(v12, #q1, #y1, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q2, v4)
           Atom conf(v14, #q2)
           Atom above(v12, #q10, v4)
           Atom conf(v12, #q10)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v7)
           Atom above(v12, #q12, v7)
           Atom conf(v12, #q12)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v12, #q5, #y3, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q9, v8)
           Atom conf(v12, #q9)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom motion(v12, v13, #t0, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, v13, #t16, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v14, #q0, #t1, v15)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q0, #t14, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #t5, #q0)
           Atom motion(v14, v15, #t7, #q4)
           Atom motion(v12, #q10, #t25, #q3)
           Atom motion(v12, #q3, #t28, #q10)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q7, #t19, #q3)
           Atom motion(v12, #q1, #t3, #q3)
           Atom motion(v12, #q3, #t18, #q1)
           Atom motion(v12, #q3, #t8, v13)
           Atom motion(v12, #q3, #t30, #q7)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q9, #t24, #q3)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q3, #t27, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q1, #t17, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q5, #t12, #q3)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q3, #t15, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q5, #t21, #q6)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q6, #t20, #q3)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #t10, #q5)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q3, #t13, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q1, #t11, #q6)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q3, #t23, #q8)
           Atom motion(v12, #q8, #t22, #q3)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #t26, #q3)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q3, #t29, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v14, #q2, #t9, #q4)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q0, #t2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q2, #t4, #q0)
           Atom motion(v14, v15, #t6, #q2)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #q2, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q2)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v4 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q12 v7 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v12 #q9 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q2 v4 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t11 #q6))
           ((move v12 #q1 #t17 #q5))
           ((move v12 #q1 #t3 #q3))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t25 #q3))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t26 #q3))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #t13 #q6))
           ((move v12 #q3 #t15 #q5))
           ((move v12 #q3 #t18 #q1))
           ((move v12 #q3 #t23 #q8))
           ((move v12 #q3 #t27 #q9))
           ((move v12 #q3 #t28 #q10))
           ((move v12 #q3 #t29 #q11))
           ((move v12 #q3 #t30 #q7))
           ((move v12 #q3 #t8 v13))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t12 #q3))
           ((move v12 #q5 #t21 #q6))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t10 #q5))
           ((move v12 #q6 #t20 #q3))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t19 #q3))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t22 #q3))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t24 #q3))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q1))
           ((move v12 v13 #t16 #q7))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q2))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #t1 v15))
           ((move v14 #q0 #t14 #q4))
           ((move v14 #q0 #t2 #q2))
           ((move v14 #q2 #o2 #o3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t4 #q0))
           ((move v14 #q2 #t9 #q4))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t5 #q0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t6 #q2))
           ((move v14 v15 #t7 #q4))
           ((calibrate v12 #q1 #y1 v17 v10))
           ((calibrate v12 #q5 #y3 v19 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q1 #y1 v17 v10 v11))
           ((take_image v12 #q5 #y3 v19 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` requires that `receivedanalysis(?stone)` is true for `v2` (stone type) and `v6` (soil type), and `receivedimage(?objective, v11)` is true for `v17`, `v18`, and `v19`. Additionally, both rovers `v12` and `v14` must be at some configuration, and their stores must be free.
           
           Let's break down how to achieve these conditions:
           
           1.  **receivedanalysis(?stone) and receivedanalysis(?soil)**:
               *   To achieve `receivedanalysis(?r)`, a rover needs to `sample_rock` `?r` and then `send_analysis`.
               *   We have rocks of type `v2` (v1, v3, v4) and type `v6` (v5, v7, v8).
               *   Both rovers `v12` and `v14` can sample these rocks.
               *   Rover `v12` can sample `v4` (type `v2`), `v3` (type `v2`), `v7` (type `v6`), `v1` (type `v2`), `v5` (type `v6`), `v8` (type `v6`).
               *   Rover `v14` can sample `v1` (type `v2`), `v3` (type `v2`), `v7` (type `v6`), `v8` (type `v6`), `v4` (type `v2`), `v5` (type `v6`).
               *   Both rovers have `v16` as a free store initially.
               *   To send analysis, the rover needs to be at a configuration where it has `comvisible` to `lander v9`. Rover `v12` has `comvisible(v12, #q3, #y2, v9)` and rover `v14` has `comvisible(v14, #q0, #y0, v9)`.
           
           2.  **receivedimage(v17, v11), receivedimage(v18, v11), receivedimage(v19, v11)**:
               *   To achieve `receivedimage(?o, ?m)`, a rover needs to `take_image` of `?o` in `?m` mode, and then `send_image`.
               *   The camera `v10` is on both rovers `v12` and `v14` and supports mode `v11`.
               *   Rover `v12` can see `v17`, `v19`, `v18` at various configurations.
               *   Rover `v14` can see `v17`, `v19`, `v18` at configuration `#o3`.
               *   Before taking an image, the camera needs to be calibrated.
           
           Let's devise a plan:
           
           *   **Sample and Analyze:**
               *   We need one rock of type `v2` (stone) and one of type `v6` (soil) analyzed.
               *   Let's use rover `v12` to sample rock `v4` (type `v2`) and `v5` (type `v6`).
               *   Move `v12` to `#q10` to sample `v4`.
               *   Sample `v4`.
               *   Move `v12` to `#q8` to sample `v5`.
               *   Sample `v5`.
               *   Now, `v12`'s store `v16` is full. To sample another rock, we need to `drop_rock`.
               *   Move `v12` to `#q3` to send the analysis.
               *   Send analysis for `v4` and `v5`. This covers `receivedanalysis(?stone)` and `receivedanalysis(?soil)`.
           
           *   **Take and Send Images:**
               *   We need images of `v17`, `v18`, `v19`.
               *   Let's use rover `v12`.
               *   Move `v12` to `#q1` to calibrate for `v17`.
               *   Calibrate `v10`.
               *   Take image of `v17`.
               *   Move `v12` to `#q5` to calibrate for `v19`.
               *   Calibrate `v10`.
               *   Take image of `v19`.
               *   Move `v12` to `#q6` to calibrate for `v18`.
               *   Calibrate `v10`.
               *   Take image of `v18`.
               *   Move `v12` to `#q3` (where it already is for sending analysis) to send images.
               *   Send images for `v17`, `v19`, `v18`.
           
           *   **Rover Store State:**
               *   The goal requires `free(v12, v16)` and `free(v14, v16)`.
               *   After sampling `v4` and `v5`, `v12` will have `full(v12, v16)`.
               *   So, after sending analysis for `v4` and `v5`, we need to `drop_rock` twice. This will make `v12`'s store `v16` free again.
           
           Let's construct the plan step-by-step.
           
           --Plan--:
           (move v12 v13 #o2 #q10)
           (sample_rock v12 #q10 v4 v16)
           (move v12 #q10 #o2 #q8)
           (sample_rock v12 #q8 v5 v16)
           (move v12 #q8 #t22 #q3)
           (send_analysis v12 #q3 #y2 v9 v4)
           (send_analysis v12 #q3 #y2 v9 v5)
           (drop_rock v12 v16)
           (drop_rock v12 v16)
           (move v12 #q3 #t18 #q1)
           (calibrate v12 #q1 #y1 v17 v10)
           (take_image v12 #q1 #y1 v17 v10 v11)
           (move v12 #q1 #t17 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t21 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t20 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (send_image v12 #q3 #y2 v9 v18 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final state did not satisfy `new-axiom@0()`. The axiom `new-axiom@0()` is a complex disjunction of many conditions, but the common part relevant to the goal is `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedanalysis(?stone)` for type `v2`, `receivedanalysis(?soil)` for type `v6`, `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)`. My previous plan addressed all these, but it seems there was an issue with the specific instantiation or some other subtle aspect.
           
           Let's re-evaluate the goals and conditions:
           
           1.  **`receivedanalysis(?stone)` (type `v2`)**: We need to sample and send analysis for at least one rock of type `v2`. Rocks `v1`, `v3`, `v4` are of type `v2`.
           2.  **`receivedanalysis(?soil)` (type `v6`)**: We need to sample and send analysis for at least one rock of type `v6`. Rocks `v5`, `v7`, `v8` are of type `v6`.
           3.  **`receivedimage(v17, v11)`**: Calibrate camera and take image of `v17` then send it.
           4.  **`receivedimage(v18, v11)`**: Calibrate camera and take image of `v18` then send it.
           5.  **`receivedimage(v19, v11)`**: Calibrate camera and take image of `v19` then send it.
           6.  **`atconf(v12, v13)` and `atconf(v14, v15)`**: These are true initially. The plan should end with these conditions holding.
           7.  **`free(v12, v16)` and `free(v14, v16)`**: Rover `v14`'s store `v16` is initially free and doesn't change. Rover `v12`'s store `v16` is initially free. If `v12` samples, its store becomes full, so it needs to `drop_rock` to make it free again.
           
           Let's retry with a clearer sequence:
           
           *   **Rover `v12` tasks:**
               *   **Sample Rocks:**
                   *   Move `v12` to `#q10` to sample `v4` (type `v2`).
                   *   Sample `v4`. (Store `v16` becomes full).
                   *   Move `v12` to `#q8` to sample `v5` (type `v6`).
                   *   *Wait, `v12` can only sample one rock before dropping it as it only has one store `v16`.* So, we need to sample one, send analysis, drop, then sample the other.
                   *   Move `v12` to `#q10` (from `v13` or any current location)
                   *   Sample `v4` (type `v2`).
                   *   Move `v12` to `#q3` (communication location).
                   *   Send analysis for `v4`. (Satisfies `receivedanalysis(?stone)` for `v2`).
                   *   Drop rock `v4`. (`v16` is free again).
                   *   Move `v12` to `#q8`.
                   *   Sample `v5` (type `v6`).
                   *   Move `v12` to `#q3`.
                   *   Send analysis for `v5`. (Satisfies `receivedanalysis(?soil)` for `v6`).
                   *   Drop rock `v5`. (`v16` is free again).
           
               *   **Image Acquisition & Transmission:**
                   *   Move `v12` to `#q1` for `v17`.
                   *   Calibrate `v10`.
                   *   Take image `v17`.
                   *   Move `v12` to `#q5` for `v19`.
                   *   Calibrate `v10`.
                   *   Take image `v19`.
                   *   Move `v12` to `#q6` for `v18`.
                   *   Calibrate `v10`.
                   *   Take image `v18`.
                   *   Move `v12` to `#q3` (communication location).
                   *   Send image `v17`.
                   *   Send image `v19`.
                   *   Send image `v18`.
           
               *   **Return to initial conf:** After all tasks, `v12` should be at `v13`. If it's at `#q3`, move it back to `v13`.
           
           Let's try to make the plan more linear and ensure all preconditions are met explicitly.
           
           Initial state: `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)`.
           
           --Plan--:
           (move v12 v13 #o2 #q10)
           (sample_rock v12 #q10 v4 v16)
           (move v12 #q10 #t25 #q3)
           (send_analysis v12 #q3 #y2 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q3 #t23 #q8)
           (sample_rock v12 #q8 v5 v16)
           (move v12 #q8 #t22 #q3)
           (send_analysis v12 #q3 #y2 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q3 #t18 #q1)
           (calibrate v12 #q1 #y1 v17 v10)
           (take_image v12 #q1 #y1 v17 v10 v11)
           (move v12 #q1 #t17 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t21 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t20 #q3)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (move v12 #q3 #t8 v13)

