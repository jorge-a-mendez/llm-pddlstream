User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom ataconf(v6, v7)
           Atom pose(v15, v16)
           Atom stackable(v8, v10)
           Atom controllable(v4)
           Atom atpose(v15, v16)
           Atom atpose(v12, v13)
           Atom type(v8, v17)
           Atom graspable(v12)
           Atom supported(v12, v13, v14)
           Atom stackable(v12, v18)
           Atom graspable(v15)
           Atom pose(v8, v9)
           Atom ataconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom graspable(v8)
           Atom stackable(v8, v18)
           Atom atbconf(v3)
           Atom stackable(v12, v10)
           Atom canmove()
           Atom stackable(v15, v10)
           Atom atpose(v8, v9)
           Atom type(v12, v17)
           Atom aconf(v6, v7)
           Atom arm(v4)
           Atom pose(v12, v13)
           Atom supported(v15, v16, v11)
           Atom arm(v6)
           Atom handempty(v4)
           Atom bconf(v3)
           Atom handempty(v6)
           Atom aconf(v4, v5)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v8, #o1)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #g0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, #p0, #g0, #q0, #t0)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q0 #t0))
           ((place v4 v12 #p0 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q1 #t1))
           ((place v4 v12 v13 #g0 #q1 #t1))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to satisfy `new-axiom@0()`, which is `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, we have `type(v12, v17)` and `stackable(v12, v18)`. This means we need to place object `v12` on `v18`. Object `v12` is currently at `v13` and supported by `v14`. There's also a pose `v12` could be in on `v18` at `#p0`.
           
           To achieve `on(v12, v18)`, we need to place `v12` on `v18` at a pose `#p0`.
           The current state is:
           - `atpose(v12, v13)`
           - `atbconf(v3)`
           - `handempty(v4)`
           
           To place `v12` on `v18` at `#p0`:
           1. The robot arm `v4` needs to pick up `v12` from its current pose `v13`. The `pick` action `(pick v4 v12 v13 #g0 #q1 #t1)` is available. This requires `atbconf(#q1)`. Since we are currently at `atbconf(v3)`, we need to move the base from `v3` to `#q1`. `(move_base v3 #q1 #t3)` is an available action.
           2. After picking up `v12`, the robot will be holding it.
           3. Then, the robot needs to place `v12` on `v18` at pose `#p0`. The `place` action `(place v4 v12 #p0 #g0 #q0 #t0)` is available. This requires `atbconf(#q0)`. After picking up `v12` at `#q1`, we need to move the base from `#q1` to `#q0`. `(move_base #q1 #q0 #o0)` is an available action.
           
           So the plan would be:
           1. Move the base to `q1` to pick `v12` from `v13`.
           2. Pick `v12` from `v13`.
           3. Move the base to `q0` to place `v12` at `#p0`.
           4. Place `v12` at `#p0` on `v18`.
           
           --Plan--:
           (move_base v3 #q1 #t3)
           (pick v4 v12 v13 #g0 #q1 #t1)
           (move_base #q1 #q0 #o0)
           (place v4 v12 #p0 #g0 #q0 #t0)

