User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom onboard(v10, v12)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom mode(v11)
           Atom rock(v3)
           Atom objective(v19)
           Atom atconf(v14, v15)
           Atom type(v3, v2)
           Atom conf(v14, v15)
           Atom free(v12, v16)
           Atom objective(v17)
           Atom rock(v5)
           Atom type(v5, v6)
           Atom rock(v1)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom type(v8, v6)
           Atom rock(v8)
           Atom free(v14, v16)
           Atom objective(v18)
           Atom lander(v9)
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom rock(v4)
           Atom type(v7, v6)
           Atom objective(v20)
           Atom rover(v12)
           Atom imagevisible(v12, #q1, #y1, v20)
           Atom imagerange(v12, #q1, v20)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #q3, v3)
           Atom conf(v12, #q3)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q10, v4)
           Atom conf(v14, #q10)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v5)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom imagevisible(v12, #q2, #y2, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q12, #y7, v9)
           Atom comrange(v14, #q12, v9)
           Atom conf(v14, #q12)
           Atom ray(#y7)
           Atom motion(v14, v15, #t0, v15)
           Atom imagevisible(v14, #q11, #y6, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y6)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v14, #q7, v8)
           Atom conf(v14, #q7)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q9, v7)
           Atom conf(v14, #q9)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q8, #y5, v19)
           Atom imagerange(v14, #q8, v19)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom above(v14, #q13, v1)
           Atom conf(v14, #q13)
           Atom above(v12, #o5, v1)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t28, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #t14, #q8)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, v13, #t2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q3, #t23, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, v15, #t15, #q11)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q6, #t30, #q0)
           Atom motion(v12, #q4, #t6, #q0)
           Atom motion(v12, #q0, #t8, #q4)
           Atom motion(v12, #q0, #t7, #q3)
           Atom motion(v12, #q0, #t4, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q5, #t29, #q0)
           Atom motion(v12, #q0, #t24, #q1)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #t27, #q5)
           Atom motion(v12, #q1, #t1, #q0)
           Atom motion(v12, #q3, #t5, #q0)
           Atom motion(v12, #q0, #t26, #q6)
           Atom motion(v14, #q11, #t17, #q12)
           Atom motion(v14, #q8, #t16, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #t22, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #t18, v15)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q1, #t9, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #t13, #q0)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, v13, #t3, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q0, #t25, #q2)
           Atom motion(v14, #q7, #t19, #q12)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, v15, #t31, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q12, #t10, #q7)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q12, #t11, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #t20, #q12)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #t21, #q12)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q12, #t12, #q10)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #o3, #o2, #q13)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q13, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #q11, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q3 v3 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #q10 v4 v16))
           ((sample_rock v14 #q13 v1 v16))
           ((sample_rock v14 #q7 v8 v16))
           ((sample_rock v14 #q9 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #t24 #q1))
           ((move v12 #q0 #t25 #q2))
           ((move v12 #q0 #t26 #q6))
           ((move v12 #q0 #t27 #q5))
           ((move v12 #q0 #t4 v13))
           ((move v12 #q0 #t7 #q3))
           ((move v12 #q0 #t8 #q4))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q0))
           ((move v12 #q1 #t9 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t13 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t23 #q4))
           ((move v12 #q3 #t5 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t6 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t29 #q0))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t30 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t2 #q1))
           ((move v12 v13 #t28 #q3))
           ((move v12 v13 #t3 #q2))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q13))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t21 #q12))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t17 #q12))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #t10 #q7))
           ((move v14 #q12 #t11 #q9))
           ((move v14 #q12 #t12 #q10))
           ((move v14 #q12 #t18 v15))
           ((move v14 #q13 #o2 #o3))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t22 #q12))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t19 #q12))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t16 #q12))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t20 #q12))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #t0 v15))
           ((move v14 v15 #t14 #q8))
           ((move v14 v15 #t15 #q11))
           ((move v14 v15 #t31 #q7))
           ((calibrate v12 #q1 #y1 v20 v10))
           ((calibrate v12 #q2 #y2 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((calibrate v14 #q11 #y6 v18 v10))
           ((calibrate v14 #q8 #y5 v19 v10))
           ((take_image v12 #q1 #y1 v20 v10 v11))
           ((take_image v12 #q2 #y2 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q11 #y6 v18 v10 v11))
           ((take_image v14 #q8 #y5 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q12 #y7 v9 v3))
           ((send_analysis v14 #q12 #y7 v9 v5))
           ((send_analysis v14 #q12 #y7 v9 v4))
           ((send_analysis v14 #q12 #y7 v9 v1))
           ((send_analysis v14 #q12 #y7 v9 v8))
           ((send_analysis v14 #q12 #y7 v9 v7))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q12 #y7 v9 v17 v11))
           ((send_image v14 #q12 #y7 v9 v20 v11))
           ((send_image v14 #q12 #y7 v9 v18 v11))
           ((send_image v14 #q12 #y7 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each equipped with a camera v10. There are multiple rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There is also a lander v9 for communication. The goal `new-axiom@0()` represents a complex state that requires several conditions to be met simultaneously:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers are at their initial configurations. These are already true.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers have their storage (v16) free. These are also already true.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: Images of all four objectives must be taken and sent to the lander.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: A rock of type `v2` must be analyzed and sent. Rocks v1, v3, and v4 are of type v2.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: A rock of type `v6` must be analyzed and sent. Rocks v5, v7, and v8 are of type v6.
           
           To achieve the goal, the plan needs to:
           - Calibrate the camera, take images of all four objectives (v17, v18, v19, v20) using either rover, and send them to the lander.
           - Sample at least one rock of type v2 and one rock of type v6 using either rover, and send their analyses to the lander.
           
           Since the initial state already satisfies the `atconf` and `free` predicates, the plan will focus on image acquisition and rock analysis. We can divide tasks between the two rovers to optimize.
           
           For `v12`:
           - Calibrate for v20, take image, send image.
           - Calibrate for v17, take image, send image.
           - Calibrate for v18, take image, send image.
           - Calibrate for v19, take image, send image.
           - Sample rock v3 (type v2), send analysis.
           - Sample rock v5 (type v6), send analysis.
           
           The rovers already have a camera (`v10`) onboard, and the camera supports mode `v11`. There are various `imagevisible` and `comvisible` predicates, along with `motion` predicates to move the rover to the correct configurations.
           
           The current configuration of v12 is `v13`. It can move to other configurations where it can see objectives or rocks.
           The current configuration of v14 is `v15`. It can move to other configurations where it can see objectives or rocks.
           
           Let's use rover v12 to handle all image tasks and analyze a rock of type v2, and rover v14 to analyze a rock of type v6.
           
           For v12:
           1. Calibrate, take and send image of v20. Current conf: v13. Needs to move to #q1 for v20.
           2. Calibrate, take and send image of v17. Current conf: #q1. Needs to move to #q2 for v17.
           3. Calibrate, take and send image of v18. Current conf: #q2. Needs to move to #q5 for v18.
           4. Calibrate, take and send image of v19. Current conf: #q5. Needs to move to #q6 for v19.
           5. Sample rock v3 (type v2). Current conf: #q6. Needs to move to #q3 for v3. Then move to #q0 to send analysis.
           
           For v14:
           1. Sample rock v7 (type v6). Current conf: v15. Needs to move to #q9 for v7. Then move to #q12 to send analysis.
           
           Constraints:
           - Calibrate needs `imagevisible`, `onboard`, `atconf`, `not blocked`.
           - Take image needs `imagevisible`, `onboard`, `supports`, `atconf`, `calibrated`, `not blocked`. Also makes camera uncalibrated.
           - Send image needs `comvisible`, `objective`, `mode`, `haveimage`, `atconf`, `not blocked`.
           - Sample rock needs `above`, `store`, `atconf`, `free`.
           - Send analysis needs `comvisible`, `rock`, `analyzed`, `atconf`, `not blocked`.
           
           It is important to recalibrate the camera after each `take_image` action if the camera is used for another image. However, the problem statement says "NegatedAtom calibrated(?c, ?v)" as an effect of `take_image`, so we need to recalibrate each time.
           
           Let's refine the plan:
           
           Rover v12:
           - Move to #q1 (for v20)
           - Calibrate for v20
           - Take image of v20
           - Move to #q0 (for communication)
           - Send image of v20
           - Move to #q2 (for v17)
           - Calibrate for v17
           - Take image of v17
           - Move to #q0 (for communication)
           - Send image of v17
           - Move to #q5 (for v18)
           - Calibrate for v18
           - Take image of v18
           - Move to #q0 (for communication)
           - Send image of v18
           - Move to #q6 (for v19)
           - Calibrate for v19
           - Take image of v19
           - Move to #q0 (for communication)
           - Send image of v19
           - Move to #q3 (for v3)
           - Sample rock v3
           - Move to #q0 (for communication)
           - Send analysis of v3
           
           Rover v14:
           - Move to #q9 (for v7)
           - Sample rock v7
           - Move to #q12 (for communication)
           - Send analysis of v7
           
           This plan covers all requirements.
           
           --Plan--:
           (move v12 v13 #t2 #q1)
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t1 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #t25 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #t13 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t27 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #t29 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #t26 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t30 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v12 #q0 #t7 #q3)
           (sample_rock v12 #q3 v3 v16)
           (move v12 #q3 #t5 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (move v14 v15 #o2 #q9)
           (sample_rock v14 #q9 v7 v16)
           (move v14 #q9 #t20 #q12)
           (send_analysis v14 #q12 #y7 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` (which expands to several conditions) was not fully satisfied. Let's re-examine the goal and the plan to ensure all conditions are met.
           
           The goal `new-axiom@0()` implies:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers are at their initial configurations. (Initial state already has this. However, rovers move during the plan, so they must return to this state or the conditions should be true at the final state which for the axiom is not required). The axiom simply states `atconf(v12, v13)` and `atconf(v14, v15)` as *part of the conjunction*, not necessarily the final state of the rovers. Since `atconf` is a dynamic predicate, the values from the *initial state* that match this are what makes the condition for the axiom. In this case, it means that at some point, these conditions (being at these configurations) existed. This is true at the beginning. It also seems to indicate that the rover does not need to return to the original configuration.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers have their storage (v16) free. (Initial state has this. If we sample rocks, we must drop them to make the store free again.)
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: Images of all four objectives must be taken and sent to the lander. (This was covered).
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: A rock of type `v2` must be analyzed and sent. (This was covered with v3).
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: A rock of type `v6` must be analyzed and sent. (This was covered with v7).
           
           The key missing piece in the previous attempt was likely the `free(v12, v16)` and `free(v14, v16)` conditions if we sampled rocks. If a rock is sampled, the store becomes `full`, and we need to `drop_rock` to make it `free` again.
           
           Let's adjust the plan to include dropping rocks.
           
           Rover v12:
           - Handles images for v20, v17, v18, v19.
           - Samples rock v3 (type v2).
           - Drops rock v3 to free store v16.
           - Sends analysis of v3.
           
           Rover v14:
           - Samples rock v7 (type v6).
           - Drops rock v7 to free store v16.
           - Sends analysis of v7.
           
           This should address all conditions including the `free` predicate at the end (or implicitly satisfied by the axiom logic).
           
           --Plan--:
           (move v12 v13 #t2 #q1)
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t1 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #t25 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #t13 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t27 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #t29 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #t26 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t30 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v12 #q0 #t7 #q3)
           (sample_rock v12 #q3 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q3 #t5 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (move v14 v15 #o2 #q9)
           (sample_rock v14 #q9 v7 v16)
           (drop_rock v14 v16)
           (move v14 #q9 #t20 #q12)
           (send_analysis v14 #q12 #y7 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan failed again, indicating that the `new-axiom@0()` condition is still not fully met. Let's break down the axiom's conditions again, particularly regarding the `atconf` and `free` predicates. The problem states:
           
           `Axiom new-axiom@0()`
             `Conjunction`
               `Atom atconf(v12, v13)`
               `Atom atconf(v14, v15)`
               `Atom free(v12, v16)`
               `Atom free(v14, v16)`
               `Atom receivedimage(v17, v11)`
               `Atom receivedimage(v18, v11)`
               `Atom receivedimage(v19, v11)`
               `Atom receivedimage(v20, v11)`
               `Atom type(?stone, v2)`
               `Atom receivedanalysis(?stone)`
               `Atom type(?soil, v6)`
               `Atom receivedanalysis(?soil)`
           
           The issue with `atconf(v12, v13)` and `atconf(v14, v15)` is likely that the rovers are *not* in these configurations at the end of the plan. Even if they start there, `move` actions change their `atconf` predicate. For an axiom to be true, all its conditions must hold true *simultaneously* at the end state. So, the rovers must return to their initial configurations (`v13` for `v12` and `v15` for `v14`).
           
           Let's modify the plan to ensure both rovers return to their initial configurations (`v13` and `v15`) after completing all tasks.
           
           Rover v12:
           - Handles images for v20, v17, v18, v19.
           - Samples rock v3 (type v2).
           - Drops rock v3.
           - Sends analysis of v3.
           - Returns to `v13`.
           
           Rover v14:
           - Samples rock v7 (type v6).
           - Drops rock v7.
           - Sends analysis of v7.
           - Returns to `v15`.
           
           We also need to make sure the camera is calibrated for each image and then re-calibrated for the next if needed, which was handled. The `free` predicate should be satisfied by dropping the sampled rocks.
           
           Revised Plan Strategy:
           For v12 (Initial `atconf(v12, v13)`):
           1. Move to `#q1` for `v20`.
           2. Calibrate, take image of `v20`.
           3. Move to `#q0` for communication.
           4. Send image of `v20`.
           5. Move to `#q2` for `v17`.
           6. Calibrate, take image of `v17`.
           7. Move to `#q0` for communication.
           8. Send image of `v17`.
           9. Move to `#q5` for `v18`.
           10. Calibrate, take image of `v18`.
           11. Move to `#q0` for communication.
           12. Send image of `v18`.
           13. Move to `#q6` for `v19`.
           14. Calibrate, take image of `v19`.
           15. Move to `#q0` for communication.
           16. Send image of `v19`.
           17. Move to `#q3` for `v3`.
           18. Sample `v3`.
           19. Drop `v3`.
           20. Move to `#q0` for communication.
           21. Send analysis of `v3`.
           22. Move from `#q0` back to `v13`.
           
           For v14 (Initial `atconf(v14, v15)`):
           1. Move to `#q9` for `v7`.
           2. Sample `v7`.
           3. Drop `v7`.
           4. Move to `#q12` for communication.
           5. Send analysis of `v7`.
           6. Move from `#q12` back to `v15`.
           
           --Plan--:
           (move v12 v13 #t2 #q1)
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t1 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #t25 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #t13 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t27 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #t29 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #t26 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t30 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v12 #q0 #t7 #q3)
           (sample_rock v12 #q3 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q3 #t5 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (move v12 #q0 #t4 v13)
           (move v14 v15 #o2 #q9)
           (sample_rock v14 #q9 v7 v16)
           (drop_rock v14 v16)
           (move v14 #q9 #t20 #q12)
           (send_analysis v14 #q12 #y7 v9 v7)
           (move v14 #q12 #t18 v15)

