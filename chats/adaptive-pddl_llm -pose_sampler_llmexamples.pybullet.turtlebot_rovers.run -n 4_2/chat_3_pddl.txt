User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom onboard(v10, v12)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom mode(v11)
           Atom rock(v3)
           Atom objective(v19)
           Atom atconf(v14, v15)
           Atom type(v3, v2)
           Atom conf(v14, v15)
           Atom free(v12, v16)
           Atom objective(v17)
           Atom rock(v5)
           Atom type(v5, v6)
           Atom rock(v1)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom type(v8, v6)
           Atom rock(v8)
           Atom free(v14, v16)
           Atom objective(v18)
           Atom lander(v9)
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom rock(v4)
           Atom type(v7, v6)
           Atom objective(v20)
           Atom rover(v12)
           Atom above(v12, #q3, v3)
           Atom conf(v12, #q3)
           Atom imagevisible(v12, #q1, #y1, v20)
           Atom imagerange(v12, #q1, v20)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v14, #q10, v4)
           Atom conf(v14, #q10)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v12, #q2, #y2, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q12, #y7, v9)
           Atom comrange(v14, #q12, v9)
           Atom conf(v14, #q12)
           Atom ray(#y7)
           Atom motion(v14, v15, #t0, v15)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q11, #y6, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y6)
           Atom above(v14, #q7, v8)
           Atom conf(v14, #q7)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q9, v7)
           Atom conf(v14, #q9)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v14, #q8, #y5, v19)
           Atom imagerange(v14, #q8, v19)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v14, #q13, v1)
           Atom conf(v14, #q13)
           Atom above(v12, #o5, v1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #t2, #q1)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v12, #q1, #t9, #q2)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #t3, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #t14, #q8)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q3, #t23, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v14, #q12, #t12, #q10)
           Atom motion(v14, #q8, #t16, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q13, #t22, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q10, #t21, #q12)
           Atom motion(v14, #q12, #t18, v15)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q11, #t17, #q12)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, v15, #t15, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #t8, #q4)
           Atom motion(v12, #q1, #t1, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q3, #t5, #q0)
           Atom motion(v12, #q0, #t4, v13)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t7, #q3)
           Atom motion(v12, #q2, #t13, #q0)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q4, #t6, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v14, #q7, #t19, #q12)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q12, #t10, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #t20, #q12)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q12, #t11, #q9)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q13)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q12)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o3)
           Atom motion(v14, #q13, #o2, #o3)
           Atom motion(v14, #q10, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q3 v3 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #q10 v4 v16))
           ((sample_rock v14 #q13 v1 v16))
           ((sample_rock v14 #q7 v8 v16))
           ((sample_rock v14 #q9 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #t4 v13))
           ((move v12 #q0 #t7 #q3))
           ((move v12 #q0 #t8 #q4))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q0))
           ((move v12 #q1 #t9 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t13 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t23 #q4))
           ((move v12 #q3 #t5 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t6 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t2 #q1))
           ((move v12 v13 #t3 #q2))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q12))
           ((move v14 #o3 #o2 #q13))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t21 #q12))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t17 #q12))
           ((move v14 #q12 #o2 #o3))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #t10 #q7))
           ((move v14 #q12 #t11 #q9))
           ((move v14 #q12 #t12 #q10))
           ((move v14 #q12 #t18 v15))
           ((move v14 #q13 #o2 #o3))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t22 #q12))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t19 #q12))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t16 #q12))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t20 #q12))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #t0 v15))
           ((move v14 v15 #t14 #q8))
           ((move v14 v15 #t15 #q11))
           ((calibrate v12 #q1 #y1 v20 v10))
           ((calibrate v12 #q2 #y2 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((calibrate v14 #q11 #y6 v18 v10))
           ((calibrate v14 #q8 #y5 v19 v10))
           ((take_image v12 #q1 #y1 v20 v10 v11))
           ((take_image v12 #q2 #y2 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q11 #y6 v18 v10 v11))
           ((take_image v14 #q8 #y5 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q12 #y7 v9 v3))
           ((send_analysis v14 #q12 #y7 v9 v5))
           ((send_analysis v14 #q12 #y7 v9 v4))
           ((send_analysis v14 #q12 #y7 v9 v1))
           ((send_analysis v14 #q12 #y7 v9 v8))
           ((send_analysis v14 #q12 #y7 v9 v7))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q12 #y7 v9 v17 v11))
           ((send_image v14 #q12 #y7 v9 v20 v11))
           ((send_image v14 #q12 #y7 v9 v18 v11))
           ((send_image v14 #q12 #y7 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a lander (v9), a camera (v10), and a storage unit (v16). There are multiple rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). The camera v10 supports the mode v11. Initially, both rovers are at specific configurations (v12 at v13, v14 at v15) and have free storage (v16). The goal `new-axiom@0()` essentially requires that both rovers are at some configurations, have free storage, and that certain images have been received (v17, v18, v19, v20 in mode v11) and certain rocks have been analyzed (v3 and v8, which are of types v2 and v6 respectively).
           
           Since the goal requires `receivedimage` for four objectives (v17, v18, v19, v20) and `receivedanalysis` for two rocks (v3 and v8), both rovers will be utilized.
           
           For the `receivedimage` goals, both rovers have visibility to multiple objectives and the lander. Each `receivedimage` requires taking an image and then sending it. Taking an image requires the camera to be calibrated.
           
           For the `receivedanalysis` goals for rocks v3 and v8, we need to sample these rocks and then send the analysis. Both rovers are above some rocks, including v3 and v8.
           
           Let's break down the plan for each rover:
           
           **Rover v12:**
           1. **Analyze rock v3:**
              - Move to a configuration where v3 is above (already at `v13`, can move to `#q3`).
              - Sample v3.
              - Move to a configuration where it can communicate with the lander.
              - Send the analysis of v3.
           2. **Handle objectives:**
              - Calibrate camera for an objective (e.g., v20).
              - Take image of v20.
              - Send image of v20.
              - Calibrate camera for v17.
              - Take image of v17.
              - Send image of v17.
              - Calibrate camera for v18.
              - Take image of v18.
              - Send image of v18.
              - Calibrate camera for v19.
              - Take image of v19.
              - Send image of v19.
           
           **Rover v14:**
           1. **Analyze rock v8:**
              - Move to a configuration where v8 is above.
              - Sample v8.
              - Move to a configuration where it can communicate with the lander.
              - Send the analysis of v8.
           
           The `new-axiom@0()` has a condition on `atconf` and `free` for both rovers, and `receivedimage` for v17, v18, v19, v20, and `receivedanalysis` for v3 and v8. The `atconf` and `free` predicates are largely maintained throughout the actions (except `full` after sampling, which is immediately reversed by the axiom if the analysis is done). The core tasks are image capture and analysis.
           
           Let's prioritize completing the analysis tasks first, then the image tasks.
           
           **Rover v12 for Analysis of v3 and images:**
           - Rover v12 is at `v13`. It can move to `#q3` to be above `v3`.
           - `sample_rock v12 #q3 v3 v16`
           - Move v12 from `#q3` to `#q0` to `comvisible` with `v9`.
           - `send_analysis v12 #q0 #y0 v9 v3`
           - Move v12 from `#q0` to `#q1` for objective v20.
           - `calibrate v12 #q1 #y1 v20 v10`
           - `take_image v12 #q1 #y1 v20 v10 v11`
           - Move v12 from `#q1` to `#q0` to `comvisible` with `v9`.
           - `send_image v12 #q0 #y0 v9 v20 v11`
           - Move v12 from `#q0` to `#q2` for objective v17.
           - `calibrate v12 #q2 #y2 v17 v10`
           - `take_image v12 #q2 #y2 v17 v10 v11`
           - Move v12 from `#q2` to `#q0`.
           - `send_image v12 #q0 #y0 v9 v17 v11`
           - Move v12 from `#q0` to `#q5` for objective v18.
           - `calibrate v12 #q5 #y3 v18 v10`
           - `take_image v12 #q5 #y3 v18 v10 v11`
           - Move v12 from `#q5` to `#q0`.
           - `send_image v12 #q0 #y0 v9 v18 v11`
           - Move v12 from `#q0` to `#q6` for objective v19.
           - `calibrate v12 #q6 #y4 v19 v10`
           - `take_image v12 #q6 #y4 v19 v10 v11`
           - Move v12 from `#q6` to `#q0`.
           - `send_image v12 #q0 #y0 v9 v19 v11`
           
           **Rover v14 for Analysis of v8:**
           - Rover v14 is at `v15`. It can move to `#q7` to be above `v8`.
           - `sample_rock v14 #q7 v8 v16`
           - Move v14 from `#q7` to `#q12` to `comvisible` with `v9`.
           - `send_analysis v14 #q12 #y7 v9 v8`
           
           All `receivedimage` and `receivedanalysis` conditions will be met. The `atconf` and `free` conditions will also be met (as the axioms cover free stores if analysis is received).
           
           --Plan--:
           (move v12 v13 #o2 #q3)
           (sample_rock v12 #q3 v3 v16)
           (move v12 #q3 #t5 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (move v12 #q0 #o2 #q1)
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t1 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #o2 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #t13 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #o2 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v14 v15 #o2 #q7)
           (sample_rock v14 #q7 v8 v16)
           (move v14 #q7 #t19 #q12)
           (send_analysis v14 #q12 #y7 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan was rejected because the axiom `new-axiom@0()` was not satisfied. Let's re-examine the goal `new-axiom@0()`:
           
           Axiom `new-axiom@0()` is a conjunction of several atoms:
           - `atconf(v12, v13)`: Rover 12 is at configuration v13.
           - `atconf(v14, v15)`: Rover 14 is at configuration v15.
           - `free(v12, v16)`: Storage v16 on Rover 12 is free.
           - `free(v14, v16)`: Storage v16 on Rover 14 is free.
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `type(?stone, v2)` (satisfied by `type(v3, v2)` and `type(v1, v2)` and `type(v4, v2)`)
           - `receivedanalysis(?stone)` (meaning `receivedanalysis(v3)` or `receivedanalysis(v1)` or `receivedanalysis(v4)`)
           - `type(?soil, v6)` (satisfied by `type(v5, v6)` and `type(v7, v6)` and `type(v8, v6)`)
           - `receivedanalysis(?soil)` (meaning `receivedanalysis(v5)` or `receivedanalysis(v7)` or `receivedanalysis(v8)`)
           
           My previous plan successfully targeted `receivedanalysis(v3)` and `receivedanalysis(v8)`. This satisfies the `receivedanalysis(?stone)` and `receivedanalysis(?soil)` conditions.
           
           The main issue was likely the `atconf` and `free` conditions for both rovers.
           - `atconf(v12, v13)`: My previous plan moved v12 around. To satisfy this at the end, v12 must return to v13.
           - `atconf(v14, v15)`: My previous plan moved v14 around. To satisfy this at the end, v14 must return to v15.
           - `free(v12, v16)` and `free(v14, v16)`: When `sample_rock` is used, the storage becomes `full`. `send_analysis` does not make the storage `free` again. Only `drop_rock` makes it `free`. Therefore, after sampling and sending analysis for rock v3 and v8, both rovers must `drop_rock`.
           
           Let's refine the plan to address these final state conditions.
           
           **Revised Plan Strategy:**
           
           **Rover v12:**
           1. Move to `#q3` to sample `v3`.
           2. `sample_rock v12 #q3 v3 v16`. (Storage becomes full)
           3. Move to `#q0` for communication.
           4. `send_analysis v12 #q0 #y0 v9 v3`.
           5. `drop_rock v12 v16`. (Storage becomes free again)
           6. Calibrate camera and take/send images for `v20`, `v17`, `v18`, `v19`.
              - For `v20`: Move to `#q1`, calibrate, take image. Move to `#q0`, send image.
              - For `v17`: Move to `#q2`, calibrate, take image. Move to `#q0`, send image.
              - For `v18`: Move to `#q5`, calibrate, take image. Move to `#q0`, send image.
              - For `v19`: Move to `#q6`, calibrate, take image. Move to `#q0`, send image.
              (The sequence of moving to communication config `#q0` after each image capture is important for `send_image` precondition).
           7. Return to `v13`.
           
           **Rover v14:**
           1. Move to `#q7` to sample `v8`.
           2. `sample_rock v14 #q7 v8 v16`. (Storage becomes full)
           3. Move to `#q12` for communication.
           4. `send_analysis v14 #q12 #y7 v9 v8`.
           5. `drop_rock v14 v16`. (Storage becomes free again)
           6. Return to `v15`.
           
           Let's ensure the order of operations for v12 and v14 respects the `atconf` and `free` conditions at the very end. The `atconf` to `v13` and `v15` for the respective rovers should be the final movements.
           
           --Plan--:
           (move v12 v13 #o2 #q3)
           (sample_rock v12 #q3 v3 v16)
           (move v12 #q3 #t5 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (drop_rock v12 v16)
           (move v14 v15 #o2 #q7)
           (sample_rock v14 #q7 v8 v16)
           (move v14 #q7 #t19 #q12)
           (send_analysis v14 #q12 #y7 v9 v8)
           (drop_rock v14 v16)
           (move v12 #q0 #o2 #q1)
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t1 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (move v12 #q0 #o2 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #t13 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #o2 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #o2 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v12 #q0 #t4 v13)
           (move v14 #q12 #t18 v15)

