User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom onboard(v10, v12)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom mode(v11)
           Atom rock(v3)
           Atom objective(v19)
           Atom atconf(v14, v15)
           Atom type(v3, v2)
           Atom conf(v14, v15)
           Atom free(v12, v16)
           Atom objective(v17)
           Atom rock(v5)
           Atom type(v5, v6)
           Atom rock(v1)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom type(v8, v6)
           Atom rock(v8)
           Atom free(v14, v16)
           Atom objective(v18)
           Atom lander(v9)
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom rock(v4)
           Atom type(v7, v6)
           Atom objective(v20)
           Atom rover(v12)
           Atom above(v12, #q3, v3)
           Atom conf(v12, #q3)
           Atom imagevisible(v12, #q1, #y1, v20)
           Atom imagerange(v12, #q1, v20)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v14, #q15, #y8, v20)
           Atom imagerange(v14, #q15, v20)
           Atom conf(v14, #q15)
           Atom ray(#y8)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #q10, v4)
           Atom conf(v14, #q10)
           Atom above(v14, #q14, v5)
           Atom conf(v14, #q14)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom imagevisible(v14, #q16, #y9, v17)
           Atom imagerange(v14, #q16, v17)
           Atom conf(v14, #q16)
           Atom ray(#y9)
           Atom imagevisible(v12, #q2, #y2, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v14, #q12, #y7, v9)
           Atom comrange(v14, #q12, v9)
           Atom conf(v14, #q12)
           Atom ray(#y7)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom motion(v14, v15, #t0, v15)
           Atom imagevisible(v14, #q11, #y6, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y6)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q7, v8)
           Atom conf(v14, #q7)
           Atom above(v12, #o5, v7)
           Atom above(v14, #q9, v7)
           Atom conf(v14, #q9)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q8, #y5, v19)
           Atom imagerange(v14, #q8, v19)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom above(v12, #o5, v1)
           Atom above(v14, #q13, v1)
           Atom conf(v14, #q13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, v13, #t2, #q1)
           Atom motion(v12, v13, #t3, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q1, #t9, #q2)
           Atom motion(v14, v15, #t14, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, v13, #t28, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, v15, #t15, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #t38, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q3, #t23, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q8, #t16, #q12)
           Atom motion(v14, #q11, #t17, #q12)
           Atom motion(v14, #q12, #t18, v15)
           Atom motion(v14, #q12, #t12, #q10)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q13, #t22, #q12)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q10, #t21, #q12)
           Atom motion(v14, #q12, #t37, #q13)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, #q2, #t13, #q0)
           Atom motion(v12, #q0, #t25, #q2)
           Atom motion(v12, #q0, #t24, #q1)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t4, v13)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q1, #t1, #q0)
           Atom motion(v12, #q4, #t6, #q0)
           Atom motion(v12, #q0, #t7, #q3)
           Atom motion(v12, #q0, #t8, #q4)
           Atom motion(v12, #q6, #t30, #q0)
           Atom motion(v12, #q0, #t26, #q6)
           Atom motion(v12, #q3, #t5, #q0)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #t29, #q0)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q0, #t27, #q5)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q16)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #t35, #q12)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q12, #t36, #q14)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q8)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #t19, #q12)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q12, #t10, #q7)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, v15, #t31, #q7)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q15, #t34, #q11)
           Atom motion(v14, v15, #t33, #q15)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q9, #t20, #q12)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q12, #t11, #q9)
           Atom motion(v14, v15, #t32, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, #q8)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q3 v3 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #q10 v4 v16))
           ((sample_rock v14 #q13 v1 v16))
           ((sample_rock v14 #q14 v5 v16))
           ((sample_rock v14 #q7 v8 v16))
           ((sample_rock v14 #q9 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #t24 #q1))
           ((move v12 #q0 #t25 #q2))
           ((move v12 #q0 #t26 #q6))
           ((move v12 #q0 #t27 #q5))
           ((move v12 #q0 #t4 v13))
           ((move v12 #q0 #t7 #q3))
           ((move v12 #q0 #t8 #q4))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q0))
           ((move v12 #q1 #t9 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t13 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t23 #q4))
           ((move v12 #q3 #t5 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t6 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t29 #q0))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t30 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t2 #q1))
           ((move v12 v13 #t28 #q3))
           ((move v12 v13 #t3 #q2))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q16))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t21 #q12))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t17 #q12))
           ((move v14 #q11 #t38 #q8))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #t10 #q7))
           ((move v14 #q12 #t11 #q9))
           ((move v14 #q12 #t12 #q10))
           ((move v14 #q12 #t18 v15))
           ((move v14 #q12 #t36 #q14))
           ((move v14 #q12 #t37 #q13))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t22 #q12))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q8))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t35 #q12))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t34 #q11))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q10))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t19 #q12))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t16 #q12))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t20 #q12))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #t0 v15))
           ((move v14 v15 #t14 #q8))
           ((move v14 v15 #t15 #q11))
           ((move v14 v15 #t31 #q7))
           ((move v14 v15 #t32 #q9))
           ((move v14 v15 #t33 #q15))
           ((calibrate v12 #q1 #y1 v20 v10))
           ((calibrate v12 #q2 #y2 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #q11 #y6 v18 v10))
           ((calibrate v14 #q15 #y8 v20 v10))
           ((calibrate v14 #q16 #y9 v17 v10))
           ((calibrate v14 #q8 #y5 v19 v10))
           ((take_image v12 #q1 #y1 v20 v10 v11))
           ((take_image v12 #q2 #y2 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #q11 #y6 v18 v10 v11))
           ((take_image v14 #q15 #y8 v20 v10 v11))
           ((take_image v14 #q16 #y9 v17 v10 v11))
           ((take_image v14 #q8 #y5 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q12 #y7 v9 v3))
           ((send_analysis v14 #q12 #y7 v9 v4))
           ((send_analysis v14 #q12 #y7 v9 v1))
           ((send_analysis v14 #q12 #y7 v9 v5))
           ((send_analysis v14 #q12 #y7 v9 v8))
           ((send_analysis v14 #q12 #y7 v9 v7))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q12 #y7 v9 v18 v11))
           ((send_image v14 #q12 #y7 v9 v20 v11))
           ((send_image v14 #q12 #y7 v9 v17 v11))
           ((send_image v14 #q12 #y7 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each equipped with a camera v10. There are multiple rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There is also a lander v9 for communication. The goal `new-axiom@0()` represents a complex state that requires several sub-goals to be met, namely:
           1. `atconf(v12, v13)`: Rover v12 needs to be at configuration v13. This is already true.
           2. `atconf(v14, v15)`: Rover v14 needs to be at configuration v15. This is already true.
           3. `free(v12, v16)`: Rover v12's store v16 needs to be free. This is already true.
           4. `free(v14, v16)`: Rover v14's store v16 needs to be free. This is already true.
           5. `receivedimage(v17, v11)`: An image of objective v17 needs to be received.
           6. `receivedimage(v18, v11)`: An image of objective v18 needs to be received.
           7. `receivedimage(v19, v11)`: An image of objective v19 needs to be received.
           8. `receivedimage(v20, v11)`: An image of objective v20 needs to be received.
           9. `type(?stone, v2)`: There exists a rock of type v2. This is true (v1, v3, v4).
           10. `receivedanalysis(?stone)`: The analysis of a rock of type v2 needs to be received.
           11. `type(?soil, v6)`: There exists a rock of type v6. This is true (v5, v7, v8).
           12. `receivedanalysis(?soil)`: The analysis of a rock of type v6 needs to be received.
           
           To achieve the goals:
           - For `receivedimage` predicates: Each rover can take images and send them. We need to calibrate the camera first, then take the image, and then send it. Rover v12 and v14 can both observe all objectives.
           - For `receivedanalysis` predicates: Rovers need to sample a rock of each required type and then send the analysis. Rover v12 can sample v1, v3, v4, v5, v7, v8. Rover v14 can also sample v1, v3, v4, v5, v7, v8.
           
           Let's break down the plan:
           1. Achieve all `receivedimage` goals:
               - We need to get images for v17, v18, v19, v20.
               - Rover v12 can handle v17, v18, v19, v20.
               - Rover v14 can also handle v17, v18, v19, v20.
               - We need to calibrate the camera before taking an image.
               - We need to move the rover to a configuration where it can see the objective and communicate with the lander.
           2. Achieve all `receivedanalysis` goals:
               - We need to analyze a rock of type v2 and a rock of type v6.
               - Rover v12 can sample v3 (type v2) and v5 (type v6).
               - We need to move the rover to a configuration above the rock.
               - After sampling, we need to send the analysis.
           
           Considering the available actions and current state:
           - Rover v12 is at v13 and can move to various image/com configurations.
           - Rover v14 is at v15 and can move to various image/com configurations.
           - Both rovers have camera v10.
           - Both rovers have free store v16.
           
           Let's use Rover v12 for imaging and Rover v14 for sampling to distribute tasks, though either could do both.
           
           For images (v17, v18, v19, v20):
           - Rover v12 is at v13.
           - To image v20: move v12 to #q1, calibrate, take image, move to #q0 (comms), send image.
           - To image v17: move v12 to #q2, calibrate, take image, move to #q0 (comms), send image.
           - To image v18: move v12 to #q5, calibrate, take image, move to #q0 (comms), send image.
           - To image v19: move v12 to #q6, calibrate, take image, move to #q0 (comms), send image.
           It's more efficient to calibrate for all objectives from suitable configurations and then send all images from a communication configuration.
           
           For analysis (type v2, type v6):
           - Rover v14 is at v15.
           - To sample type v2: move v14 to #o5 (above v3), sample v3.
           - To sample type v6: move v14 to #q14 (above v5), sample v5.
           - After sampling both, move v14 to #q12 (comms) and send analysis.
           
           Let's make a plan.
           
           Image acquisition and sending (using rover v12, using v10 camera, v11 mode, sending via v9 lander):
           1. Calibrate camera for v20, v17, v18, v19 using rover v12.
               - Move to #q1, calibrate for v20.
               - Take image of v20.
               - Move to #q2, calibrate for v17.
               - Take image of v17.
               - Move to #q5, calibrate for v18.
               - Take image of v18.
               - Move to #q6, calibrate for v19.
               - Take image of v19.
           2. Send all images from a single communication point.
               - Move v12 to #q0 (where comvisible is true).
               - Send images for v20, v17, v18, v19.
           
           Rock sampling and analysis (using rover v14, using v16 store, sending via v9 lander):
           1. Sample rock of type v2 (e.g., v3).
               - Move v14 to #o5 (above v3).
               - Sample v3.
           2. Sample rock of type v6 (e.g., v5).
               - Move v14 to #q14 (above v5).
               - Sample v5.
           3. Send analysis for v3 and v5.
               - Move v14 to #q12 (where comvisible is true).
               - Send analysis for v3.
               - Send analysis for v5.
           
           This strategy ensures all goals are met.
           
           --Plan--:
           (move v12 v13 #t2 #q1)
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t9 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #o2 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t30 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (drop_rock v14 v16)
           (move v14 #o5 #o2 #q14)
           (sample_rock v14 #q14 v5 v16)
           (move v14 #q14 #t35 #q12)
           (send_analysis v14 #q12 #y7 v9 v3)
           (send_analysis v14 #q12 #y7 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. This means at least one of its conjuncts was not true. Let's re-evaluate the goal and my approach.
           
           The goal `new-axiom@0()` requires:
           1. `atconf(v12, v13)` (true initially)
           2. `atconf(v14, v15)` (true initially)
           3. `free(v12, v16)` (true initially)
           4. `free(v14, v16)` (true initially after dropping rock)
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `type(?stone, v2)` (true initially for v1, v3, v4)
           10. `receivedanalysis(?stone)` (must be true for one of v1, v3, v4)
           11. `type(?soil, v6)` (true initially for v5, v7, v8)
           12. `receivedanalysis(?soil)` (must be true for one of v5, v7, v8)
           
           My previous plan correctly identified the subgoals. The issue must be in the execution logic, particularly around the `free(v14, v16)` precondition after sampling.
           
           Let's refine the plan, making sure each step is explicitly correct.
           
           For image collection (Rover v12, Camera v10, Mode v11, Lander v9):
           - Rover v12 needs to be at different configurations to image different objectives, but it can send all collected images from a single communication configuration.
           - A camera calibration is needed before each `take_image` action if the camera state `calibrated` is not preserved or if `take_image` negates `calibrated`. The definition of `take_image` negates `calibrated(?c, ?v)`. So, re-calibration is needed for each image or if the rover moves.
           - We need to be careful with the configurations. For instance, to image v20, v12 must be at #q1. For v17, it must be at #q2. For v18, it must be at #q5. For v19, it must be at #q6. To send images, it must be at #q0.
           
           For rock analysis (Rover v14, Store v16, Lander v9):
           - Rover v14 needs to sample one rock of type v2 (e.g., v3) and one rock of type v6 (e.g., v5).
           - The `sample_rock` action fills the store (`full(?v, ?s)` and negates `free(?v, ?s)`).
           - The `send_analysis` action has `analyzed(?v, ?r)` as a precondition. The `sample_rock` action adds `analyzed(?v, ?r)`.
           - If a rover samples a rock, its store becomes full. To sample another rock, the current rock needs to be dropped (which makes the store free again).
           - The goal requires `free(v14, v16)`, so any sampled rock must be dropped by v14 eventually.
           
           Revised strategy:
           
           **Rover v12 (Image tasks):**
           Start at `v13`.
           1. Move to `q1`, calibrate, take image of `v20`.
           2. Move to `q2`, calibrate, take image of `v17`.
           3. Move to `q5`, calibrate, take image of `v18`.
           4. Move to `q6`, calibrate, take image of `v19`.
           5. Move to `q0` (communication location).
           6. Send images for `v20`, `v17`, `v18`, `v19`.
           
           **Rover v14 (Sampling and Analysis tasks):**
           Start at `v15`.
           1. Move to `o5` (above `v3`, type `v2`).
           2. Sample `v3`.
           3. Move to `q12` (communication location).
           4. Send analysis for `v3`.
           5. Drop `v3` to free the store `v16`.
           6. Move to `q14` (above `v5`, type `v6`).
           7. Sample `v5`.
           8. Move to `q12` (communication location).
           9. Send analysis for `v5`.
           10. Drop `v5` to free the store `v16`.
           
           This ensures that `free(v14, v16)` is true at the end.
           
           --Plan--:
           (move v12 v13 #t2 #q1)
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t9 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #o2 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t30 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y7 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q12 #t36 #q14)
           (sample_rock v14 #q14 v5 v16)
           (move v14 #q14 #t35 #q12)
           (send_analysis v14 #q12 #y7 v9 v5)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed again, indicating that `new-axiom@0()` is still not satisfied. Let's re-verify the conditions for `new-axiom@0()` and precisely track the state changes. The primary issue appears to be ensuring all the individual `receivedimage` and `receivedanalysis` predicates are met, along with the `free` store predicates for both rovers at the *final state*.
           
           The goal `new-axiom@0()` consists of 12 conjuncts:
           1. `atconf(v12, v13)`: Rover 12 at its initial config.
           2. `atconf(v14, v15)`: Rover 14 at its initial config.
           3. `free(v12, v16)`: Rover 12's store is free.
           4. `free(v14, v16)`: Rover 14's store is free.
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `type(?stone, v2)` (always true, as there are rocks of type v2)
           10. `receivedanalysis(?stone)` (meaning some rock of type v2 is analyzed and sent)
           11. `type(?soil, v6)` (always true, as there are rocks of type v6)
           12. `receivedanalysis(?soil)` (meaning some rock of type v6 is analyzed and sent)
           
           My last plan ensured `free(v14, v16)` by dropping the rocks after analysis. However, it implicitly assumed that after all actions, `v12` would return to `v13` and `v14` to `v15`, and that these initial configurations are the *final* required configurations. The previous plan moved both rovers away from their initial configurations for tasks and *did not* include actions to move them back to `v13` and `v15` respectively. This is likely the cause of the failure for `atconf(v12, v13)` and `atconf(v14, v15)` in the final state.
           
           Let's refine the plan to explicitly return rovers to their initial configurations if they are not already there at the end of their tasks.
           
           **Rover v12 (Image tasks):**
           Initial `atconf(v12, v13)`.
           1. Move to `q1`, calibrate, take image of `v20`. (`atconf(v12, q1)`)
           2. Move to `q2`, calibrate, take image of `v17`. (`atconf(v12, q2)`)
           3. Move to `q5`, calibrate, take image of `v18`. (`atconf(v12, q5)`)
           4. Move to `q6`, calibrate, take image of `v19`. (`atconf(v12, q6)`)
           5. Move to `q0` (communication location). (`atconf(v12, q0)`)
           6. Send images for `v20`, `v17`, `v18`, `v19`. (`atconf(v12, q0)`)
           7. **Return v12 to v13.** (`atconf(v12, v13)`)
           
           **Rover v14 (Sampling and Analysis tasks):**
           Initial `atconf(v14, v15)`.
           1. Move to `o5` (above `v3`, type `v2`). (`atconf(v14, o5)`)
           2. Sample `v3`. (`full(v14, v16)`, `analyzed(v14, v3)`)
           3. Move to `q12` (communication location). (`atconf(v14, q12)`)
           4. Send analysis for `v3`. (`receivedanalysis(v3)`)
           5. Drop `v3` to free the store `v16`. (`free(v14, v16)`)
           6. Move to `q14` (above `v5`, type `v6`). (`atconf(v14, q14)`)
           7. Sample `v5`. (`full(v14, v16)`, `analyzed(v14, v5)`)
           8. Move to `q12` (communication location). (`atconf(v14, q12)`)
           9. Send analysis for `v5`. (`receivedanalysis(v5)`)
           10. Drop `v5` to free the store `v16`. (`free(v14, v16)`)
           11. **Return v14 to v15.** (`atconf(v14, v15)`)
           
           Let's ensure the `move` actions are correctly chosen from the provided list.
           
           --Plan--:
           (move v12 v13 #t2 #q1)
           (calibrate v12 #q1 #y1 v20 v10)
           (take_image v12 #q1 #y1 v20 v10 v11)
           (move v12 #q1 #t9 #q2)
           (calibrate v12 #q2 #y2 v17 v10)
           (take_image v12 #q2 #y2 v17 v10 v11)
           (move v12 #q2 #o2 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t30 #q0)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (move v12 #q0 #t4 v13)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y7 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q12 #t36 #q14)
           (sample_rock v14 #q14 v5 v16)
           (move v14 #q14 #t35 #q12)
           (send_analysis v14 #q12 #y7 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q12 #t18 v15)

