User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v15, v16)
           Atom type(v8, v17)
           Atom graspable(v8)
           Atom ataconf(v4, v5)
           Atom graspable(v12)
           Atom stackable(v8, v18)
           Atom handempty(v4)
           Atom stackable(v12, v10)
           Atom atpose(v15, v16)
           Atom arm(v4)
           Atom supported(v12, v13, v14)
           Atom controllable(v4)
           Atom stackable(v8, v10)
           Atom stackable(v15, v10)
           Atom bconf(v3)
           Atom arm(v6)
           Atom canmove()
           Atom graspable(v15)
           Atom ataconf(v6, v7)
           Atom pose(v8, v9)
           Atom aconf(v6, v7)
           Atom supported(v15, v16, v11)
           Atom supported(v8, v9, v11)
           Atom pose(v12, v13)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom atbconf(v3)
           Atom handempty(v6)
           Atom stackable(v12, v18)
           Atom aconf(v4, v5)
           Atom type(v12, v17)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom grasp(v12, #o1)
           Atom grasp(v15, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g0)
           Atom supported(v12, #o2, v10)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, v9, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, #p0, #g0, #q0, #t0)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom btraj(#t4)
           Atom basemotion(#q1, #t4, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q0 #t4))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p0 #g0 #q0 #t0))
           ((place v4 v8 #p0 #g0 #q0 #t0))
           ((pick v4 v8 v9 #g0 #q1 #t1))
           ((place v4 v8 v9 #g0 #q1 #t1))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (`v8`, `v12`, `v15`) that can be grasped and stacked on different surfaces (`v10`, `v11`, `v18`). There are two arms (`v4`, `v6`) and multiple poses and grasps defined. The robot is currently at base configuration `v3` and has arm `v4` at configuration `v5` and arm `v6` at `v7`. Both arms are empty. Objects `v8`, `v12`, and `v15` are at specific poses (`v9`, `v13`, `v16` respectively) and are supported by `v11`. Additionally, `v8` is supported by `v18` at `#p0` and `v12` by `v18` at `#o2`. `v15` is supported by `v10` at `#o2`, as is `v8` and `v12`. The goal is to satisfy `new-axiom@0()`, which translates to `on(green, v18)` and `type(green, v17)`. Looking at the initial state, we have `type(v12, v17)`, which means `v12` is the 'green' object for this axiom. So the goal is to put `v12` on `v18`.
           
           Currently, `v12` is at `v13` and supported by `v14` (also at `#o2` supported by `v18` and `v10`). To achieve `on(v12, v18)`, `v12` needs to be at a pose `p` such that `supported(v12, p, v18)` and `atpose(v12, p)`. We have `supported(v12, #o2, v18)`, so we need to place `v12` at pose `#o2`.
           
           The available actions allow picking and placing objects. We need to pick `v12` and place it at `#o2` on `v18`.
           
           Let's look for a pick action for `v12`.
           We have `(pick v4 v12 v13 #o1 #o3 #o4)` where `v13` is the current pose of `v12`, `#o1` is a grasp, `#o3` is a base configuration, and `#o4` is an arm trajectory.
           The preconditions for this pick are:
           - `kin(v4, v12, v13, #o1, #o3, #o4)` - This is available as `kin(v4, v12, v13, #o1, #o3, #o4)`.
           - `atpose(v12, v13)` - This is true initially.
           - `handempty(v4)` - This is true initially.
           - `atbconf(#o3)` - This is not true initially (we are at `v3`). We need to move to `#o3`.
           - `NegatedAtom unsafeapproach(v12, v13, #o1)` - No information about this. Assume it's safe.
           - `NegatedAtom unsafeatraj(#o4)` - No information about this. Assume it's safe.
           
           So, the first step is to move the base to `#o3`. We have `(move_base v3 #o3 #o0)`. This action is available.
           
           After moving, we can pick `v12`.
           
           Then, we need to place `v12` at `#o2` on `v18`.
           We have `(place v4 v12 #o2 #o1 #o3 #o4)`.
           The preconditions for this place are:
           - `kin(v4, v12, #o2, #o1, #o3, #o4)` - This is available as `kin(v4, v12, #o2, #o1, #o3, #o4)`.
           - `atgrasp(v4, v12, #o1)` - This will be true after the pick action.
           - `atbconf(#o3)` - This will be true after the `move_base` action and remains true.
           - `NegatedAtom unsafepose(v12, #o2)` - No information. Assume it's safe.
           - `NegatedAtom unsafeapproach(v12, #o2, #o1)` - No information. Assume it's safe.
           - `NegatedAtom unsafeatraj(#o4)` - No information. Assume it's safe.
           
           Therefore, the plan should be: move to `#o3`, pick `v12`, and place `v12` at `#o2`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)

