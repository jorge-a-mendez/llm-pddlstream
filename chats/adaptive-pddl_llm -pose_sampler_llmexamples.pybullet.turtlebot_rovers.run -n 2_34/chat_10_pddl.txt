User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t20: object
           #t22: object
           #t23: object
           #t25: object
           #t5: object
           #t6: object
           #t9: object
           #y0: object
           #y1: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supports(v10, v11)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom camera(v10)
           Atom onboard(v10, v12)
           Atom free(v14, v16)
           Atom type(v3, v2)
           Atom objective(v18)
           Atom lander(v9)
           Atom rock(v4)
           Atom store(v16)
           Atom type(v7, v6)
           Atom atconf(v14, v15)
           Atom rock(v5)
           Atom rock(v3)
           Atom conf(v12, v13)
           Atom type(v1, v2)
           Atom rover(v14)
           Atom type(v5, v6)
           Atom free(v12, v16)
           Atom type(v4, v2)
           Atom type(v8, v6)
           Atom rover(v12)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom rock(v8)
           Atom objective(v17)
           Atom above(v12, #q9, v8)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q1, #y0, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom above(v12, #q12, v7)
           Atom conf(v12, #q12)
           Atom above(v12, #q10, v4)
           Atom conf(v12, #q10)
           Atom motion(v14, v15, #t22, v15)
           Atom imagevisible(v12, #q2, #y1, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #q8, #y5, v18)
           Atom imagerange(v14, #q8, v18)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q7, #y4, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y4)
           Atom comvisible(v14, #q5, #y3, v9)
           Atom comrange(v14, #q5, v9)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #o5, v4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom above(v14, #q6, v5)
           Atom conf(v14, #q6)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #t15, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #t25, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v14, v15, #t17, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q0, #t14, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, v13, #t5, #q1)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q9, #t23, #q0)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, v15, #t11, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q2, #t12, #q0)
           Atom motion(v12, #q1, #t9, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, v13, #t6, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, v15, #t16, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q8, #t20, #q5)
           Atom motion(v14, #q7, #t19, #q5)
           Atom motion(v14, #q5, #t10, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q6, #t13, #q5)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q5, #t18, #q6)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q10 v4 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q12 v7 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v12 #q9 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q6 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t14 #q3))
           ((move v12 #q0 #t25 #q12))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t9 #q2))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t12 #q0))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t23 #q0))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q0))
           ((move v12 v13 #t5 #q1))
           ((move v12 v13 #t6 #q2))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #t10 v15))
           ((move v14 #q5 #t18 #q6))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t13 #q5))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t19 #q5))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t20 #q5))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #t11 #q6))
           ((move v14 v15 #t16 #q7))
           ((move v14 v15 #t17 #q8))
           ((move v14 v15 #t22 v15))
           ((calibrate v12 #q1 #y0 v17 v10))
           ((calibrate v12 #q2 #y1 v18 v10))
           ((calibrate v14 #q7 #y4 v17 v10))
           ((calibrate v14 #q8 #y5 v18 v10))
           ((take_image v12 #q1 #y0 v17 v10 v11))
           ((take_image v12 #q2 #y1 v18 v10 v11))
           ((take_image v14 #q7 #y4 v17 v10 v11))
           ((take_image v14 #q8 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q5 #y3 v9 v1))
           ((send_analysis v14 #q5 #y3 v9 v3))
           ((send_analysis v14 #q5 #y3 v9 v4))
           ((send_analysis v14 #q5 #y3 v9 v7))
           ((send_analysis v14 #q5 #y3 v9 v8))
           ((send_analysis v14 #q5 #y3 v9 v5))
           ((send_image v14 #q5 #y3 v9 v17 v11))
           ((send_image v14 #q5 #y3 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each with a camera (v10) that supports mode v11. Both rovers have a storage compartment (v16) that is currently free. There are several rocks (v1, v3, v4, v5, v7, v8) and two objectives (v17, v18). Lander v9 is present for communication.
           
           The goal `new-axiom@0()` represents a complex state that requires several subgoals to be achieved:
           1. Two rovers (v12 and v14) must be at some configurations (`atconf`). This is already true in the initial state.
           2. Both rovers must have a free storage compartment (`free(v12, v16)` and `free(v14, v16)`). This is also true in the initial state.
           3. Two objectives (v17 and v18) must have their images received in mode v11 (`receivedimage(v17, v11)` and `receivedimage(v18, v11)`).
           4. Two rocks must be analyzed and their analysis received, with specific types (`type(?stone, v2)` and `receivedanalysis(?stone)`, and `type(?soil, v6)` and `receivedanalysis(?soil)`).
           
           Let's break down the plan to achieve these subgoals:
           
           **Subgoal 3: Receive images of v17 and v18 in mode v11.**
           To achieve `receivedimage`, the rover needs to:
           a. Be at a configuration where the objective is visible (`imagevisible`).
           b. Calibrate the camera.
           c. Take an image.
           d. Move to a configuration where the lander is visible (`comvisible`).
           e. Send the image.
           
           For `v17`:
           - Rover v12 is at `#q1` and `imagevisible(v12, #q1, #y0, v17)`.
           - Rover v14 is at `#q7` and `imagevisible(v14, #q7, #y4, v17)`.
           We can use either rover. Let's use v14 as it also has a `comvisible` configuration later.
           - `calibrate(v14, #q7, #y4, v17, v10)`
           - `take_image(v14, #q7, #y4, v17, v10, v11)`
           Then move v14 to a `comvisible` configuration (e.g., `#q5`) and send the image:
           - `move(v14, #q7, #o2, #q5)` (assuming a path exists between #q7 and #q5, which is indicated by `motion(v14, #q7, #t19, #q5)`)
           - `send_image(v14, #q5, #y3, v9, v17, v11)`
           
           For `v18`:
           - Rover v12 is at `#q2` and `imagevisible(v12, #q2, #y1, v18)`.
           - Rover v14 is at `#q8` and `imagevisible(v14, #q8, #y5, v18)`.
           We can use v14 again, as it's already in a good position to move to a comvisible spot from #q8.
           - `calibrate(v14, #q8, #y5, v18, v10)`
           - `take_image(v14, #q8, #y5, v18, v10, v11)`
           Then move v14 to a `comvisible` configuration (e.g., `#q5`) and send the image:
           - `move(v14, #q8, #t20, #q5)` (assuming path exists)
           - `send_image(v14, #q5, #y3, v9, v18, v11)`
           
           **Subgoal 4: Analyze and receive analysis for two rocks of specific types.**
           The goal requires `type(?stone, v2)` and `receivedanalysis(?stone)`, and `type(?soil, v6)` and `receivedanalysis(?soil)`.
           Let's identify suitable rocks:
           - Rocks of type `v2`: v3, v1, v4.
           - Rocks of type `v6`: v7, v5, v8.
           
           To achieve `receivedanalysis`, the rover needs to:
           a. Be at a configuration where the rock is above the rover (`above`).
           b. Sample the rock.
           c. Move to a configuration where the lander is visible (`comvisible`).
           d. Send the analysis.
           After sampling, the store becomes full, so if another rock needs to be sampled by the same rover, the previous sample must be dropped.
           
           Let's use rover v14 for both analyses as it can reach the communication point.
           First rock (type v2, let's pick v3):
           - `above(v14, #o5, v3)` is given.
           - `sample_rock(v14, #o5, v3, v16)`
           - `move(v14, #o5, #o2, #q5)` (assuming a path exists)
           - `send_analysis(v14, #q5, #y3, v9, v3)`
           
           Now the store v16 of v14 is full. We need to drop the rock before sampling another one with v14.
           - `drop_rock(v14, v16)`
           
           Second rock (type v6, let's pick v5):
           - `above(v14, #q6, v5)` is given.
           - `move(v14, #q5, #t18, #q6)` (assuming path exists)
           - `sample_rock(v14, #q6, v5, v16)`
           - `move(v14, #q6, #t13, #q5)` (assuming path exists)
           - `send_analysis(v14, #q5, #y3, v9, v5)`
           
           Now, let's check the current state against the goal `new-axiom@0()` after this sequence of actions:
           - `atconf(v12, v13)`: True (initial)
           - `atconf(v14, v15)`: False, v14 is at #q5. This means we need to move v14 back to v15.
           - `free(v12, v16)`: True (initial)
           - `free(v14, v16)`: False, it became full after sampling v5 and we dropped it. So this will be true after the last drop_rock.
           - `receivedimage(v17, v11)`: True
           - `receivedimage(v18, v11)`: True
           - `type(?stone, v2)` and `receivedanalysis(?stone)`: True for v3
           - `type(?soil, v6)` and `receivedanalysis(?soil)`: True for v5
           
           So the plan needs to ensure `atconf(v14, v15)` and `free(v14, v16)` if the goal is to be fully satisfied.
           The last `send_analysis` for v5 leaves v14 at `#q5`. So we need to move v14 from `#q5` to `v15` and drop rock v5.
           
           Let's refine the final part of the plan to ensure v14 returns to `v15` and its store is free.
           After `send_analysis(v14, #q5, #y3, v9, v5)`:
           - `drop_rock(v14, v16)` (This ensures `free(v14, v16)`)
           - `move(v14, #q5, #t10, v15)` (This ensures `atconf(v14, v15)`)
           
           Revised plan structure:
           1. Calibrate v14 for v17.
           2. Take image of v17.
           3. Move v14 to a communication point.
           4. Send image of v17.
           5. Calibrate v14 for v18.
           6. Take image of v18.
           7. Send image of v18 (from the same communication point if possible or move to a new one).
           8. Move v14 to rock v3.
           9. Sample rock v3.
           10. Move v14 to a communication point.
           11. Send analysis of v3.
           12. Drop rock v3.
           13. Move v14 to rock v5.
           14. Sample rock v5.
           15. Move v14 to a communication point.
           16. Send analysis of v5.
           17. Drop rock v5.
           18. Move v14 back to v15.
           
           It's important that the continuous parameters are correctly used. From the available actions, we have specific motions between the configurations.
           
           Let's combine and optimize. We can potentially send images and analyses from the same communication point without moving back and forth as much.
           
           Initial state: `atconf(v14, v15)`, `free(v14, v16)`. `atconf(v12, v13)`, `free(v12, v16)`.
           `imagevisible(v14, #q7, #y4, v17)`, `imagevisible(v14, #q8, #y5, v18)`.
           `comvisible(v14, #q5, #y3, v9)`.
           `above(v14, #o5, v3)`, `type(v3, v2)`.
           `above(v14, #q6, v5)`, `type(v5, v6)`.
           
           --Plan--:
           (calibrate v14 #q7 #y4 v17 v10)
           (take_image v14 #q7 #y4 v17 v10 v11)
           (move v14 #q7 #t19 #q5)
           (send_image v14 #q5 #y3 v9 v17 v11)
           (move v14 #q5 #o2 #q8)
           (calibrate v14 #q8 #y5 v18 v10)
           (take_image v14 #q8 #y5 v18 v10 v11)
           (move v14 #q8 #t20 #q5)
           (send_image v14 #q5 #y3 v9 v18 v11)
           (move v14 #q5 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q5)
           (send_analysis v14 #q5 #y3 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q5 #t18 #q6)
           (sample_rock v14 #q6 v5 v16)
           (move v14 #q6 #t13 #q5)
           (send_analysis v14 #q5 #y3 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q5 #t10 v15)

