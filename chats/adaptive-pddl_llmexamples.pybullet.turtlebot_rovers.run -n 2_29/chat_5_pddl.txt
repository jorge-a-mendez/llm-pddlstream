User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v7, v6)
           Atom camera(v10)
           Atom rock(v3)
           Atom store(v16)
           Atom rock(v5)
           Atom rover(v12)
           Atom atconf(v14, v15)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom type(v3, v2)
           Atom type(v5, v6)
           Atom free(v14, v16)
           Atom free(v12, v16)
           Atom type(v1, v2)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom rock(v8)
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom lander(v9)
           Atom objective(v17)
           Atom conf(v12, v13)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q6, v7)
           Atom conf(v12, #q6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v12, #q13, v5)
           Atom conf(v12, #q13)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q12, v8)
           Atom conf(v12, #q12)
           Atom above(v14, #q10, v7)
           Atom conf(v14, #q10)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #q9, v8)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #q11, #y4, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y4)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom above(v14, #q8, v4)
           Atom conf(v14, #q8)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q7, v3)
           Atom conf(v12, #q7)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q0, #t9, #q2)
           Atom motion(v12, v13, #t5, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t7, #q0)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t12, #q0)
           Atom motion(v12, #q0, #t13, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q0, #t1, #q1)
           Atom motion(v12, #q1, #t11, #q0)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, v15, #t23, #q11)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q0, #t19, #q12)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #t8, #q0)
           Atom motion(v12, v13, #t6, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q0, #t10, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q2, #t15, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q9, #t21, #q3)
           Atom motion(v14, #q11, #t25, #q3)
           Atom motion(v14, #q3, #t24, #q9)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #t2, v15)
           Atom motion(v14, v15, #t4, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q11)
           Atom motion(v14, #q4, #t3, #q3)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q11, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q3, #t17, #q8)
           Atom motion(v14, #q8, #t16, #q3)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #t20, #q3)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q3, #t22, #q10)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q7, #t18, #q0)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q0, #t14, #q7)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #q3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q3)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q12 v8 v16))
           ((sample_rock v12 #q13 v5 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q6 v7 v16))
           ((sample_rock v12 #q7 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #q10 v7 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((sample_rock v14 #q8 v4 v16))
           ((sample_rock v14 #q9 v8 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t1 #q1))
           ((move v12 #q0 #t10 #q5))
           ((move v12 #q0 #t13 #q6))
           ((move v12 #q0 #t14 #q7))
           ((move v12 #q0 #t19 #q12))
           ((move v12 #q0 #t9 #q2))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t11 #q0))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t15 #q5))
           ((move v12 #q2 #t7 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t8 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t18 #q0))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q2))
           ((move v12 v13 #t6 #q5))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q3))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t20 #q3))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q4))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t25 #q3))
           ((move v14 #q3 #o2 #o3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #t17 #q8))
           ((move v14 #q3 #t2 v15))
           ((move v14 #q3 #t22 #q10))
           ((move v14 #q3 #t24 #q9))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t3 #q3))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t16 #q3))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t21 #q3))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t23 #q11))
           ((move v14 v15 #t4 #q4))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #q11 #y4 v18 v10))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #q11 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, v12 and v14, each equipped with a camera v10 and a store v16. Several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18) are present, along with a lander v9 for communication. The rovers are at initial configurations v13 and v15 respectively. The goal is `new-axiom@0()`, which is an abstract axiom. Looking at the definition of `new-axiom@0()`, it requires the following conditions to be met:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers are at their specified initial configurations. These are true in the initial state.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers have their stores free. These are true in the initial state.
           3. `receivedimage(v17, v11)` and `receivedimage(v18, v11)`: Images of objectives v17 and v18 in mode v11 must be received.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: Analysis of a rock of type v2 (which is `stone`) must be received.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: Analysis of a rock of type v6 (which is `soil`) must be received.
           
           Let's break down how to achieve the remaining parts of the goal:
           
           **Achieving `receivedimage(v17, v11)` and `receivedimage(v18, v11)`:**
           To receive an image, a rover must:
           * Be at a configuration where the objective is visible.
           * Calibrate its camera.
           * Take an image.
           * Send the image to the lander.
           
           For `v17` (objective):
           * Rover v12 can see v17 at #q2 with ray #y1.
           * Rover v14 can see v17 at #o3 with ray #o4.
           
           For `v18` (objective):
           * Rover v12 can see v18 at #q5 with ray #y3.
           * Rover v14 can see v18 at #q11 with ray #y4.
           
           We can use either rover for these tasks. Let's use v12 for v17 and v14 for v18.
           
           For v17 with v12:
           1. Move v12 to #q2 (if not already there). Current config is v13.
           2. Calibrate v10 at #q2 for v17.
           3. Take image of v17 at #q2 with v10 in mode v11.
           4. Move v12 to #q0 (where it has comvisible with lander v9).
           5. Send image of v17 at #q0 with v10 to lander v9 in mode v11.
           
           For v18 with v14:
           1. Move v14 to #q11 (if not already there). Current config is v15.
           2. Calibrate v10 at #q11 for v18.
           3. Take image of v18 at #q11 with v10 in mode v11.
           4. Move v14 to #q3 (where it has comvisible with lander v9).
           5. Send image of v18 at #q3 with v10 to lander v9 in mode v11.
           
           **Achieving `receivedanalysis(?stone)` and `receivedanalysis(?soil)`:**
           To receive an analysis of a rock, a rover must:
           * Be at a configuration above the rock.
           * Sample the rock.
           * Send the analysis to the lander.
           
           We need one rock of type v2 (stone) and one rock of type v6 (soil).
           Rocks of type v2 (stone): v1, v3, v4.
           Rocks of type v6 (soil): v5, v7, v8.
           
           Let's pick v1 (stone) and v5 (soil).
           
           For v1 (stone):
           * Rover v12 is above v1 at #q1.
           * Rover v14 is above v1 at #o5.
           Let's use v12 for rock v1.
           1. Move v12 to #q1 (if not already there).
           2. Sample rock v1 at #q1 into store v16.
           3. Move v12 to #q0 (where it has comvisible with lander v9).
           4. Send analysis of v1 at #q0 with v10 to lander v9.
           
           For v5 (soil):
           * Rover v12 is above v5 at #q13.
           * Rover v14 is above v5 at #q4.
           Let's use v14 for rock v5.
           1. Move v14 to #q4 (if not already there).
           2. Sample rock v5 at #q4 into store v16.
           3. Move v14 to #q3 (where it has comvisible with lander v9).
           4. Send analysis of v5 at #q3 with v10 to lander v9.
           
           **Combined Plan Logic:**
           
           *   **Rover v12 tasks:**
               *   Image of v17
               *   Analysis of v1 (stone)
           *   **Rover v14 tasks:**
               *   Image of v18
               *   Analysis of v5 (soil)
           
           Let's ensure the rovers start at their respective configurations and move to locations required for actions. Both rovers have `free(v16)`.
           
           **Rover v12:**
           1.  Move to #q2 for image of v17.
           2.  Calibrate.
           3.  Take image.
           4.  Move to #q1 for sampling v1.
           5.  Sample v1.
           6.  Move to #q0 for sending data.
           7.  Send image of v17.
           8.  Send analysis of v1.
           
           **Rover v14:**
           1.  Move to #q11 for image of v18.
           2.  Calibrate.
           3.  Take image.
           4.  Move to #q4 for sampling v5.
           5.  Sample v5.
           6.  Move to #q3 for sending data.
           7.  Send image of v18.
           8.  Send analysis of v5.
           
           We must make sure `full(v12, v16)` or `full(v14, v16)` don't prevent further sampling by the same rover if there were more rocks. However, the problem implies that the goal is to achieve 'received analysis' for *one* stone and *one* soil, not necessarily all rocks. The current plan samples one rock with each rover, so `free` will become `full`, which is fine.
           
           The initial state has `atconf(v12, v13)` and `atconf(v14, v15)`.
           
           --Plan--:
           (move v12 v13 #t5 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #o2 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t11 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_analysis v12 #q0 #y0 v9 v1)
           (move v14 v15 #t23 #q11)
           (calibrate v14 #q11 #y4 v18 v10)
           (take_image v14 #q11 #y4 v18 v10 v11)
           (move v14 #q11 #o2 #q4)
           (sample_rock v14 #q4 v5 v16)
           (move v14 #q4 #t3 #q3)
           (send_image v14 #q3 #y2 v9 v18 v11)
           (send_analysis v14 #q3 #y2 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. The `new-axiom@0()` refers to a complex set of conditions, which include:
           1. Both rovers v12 and v14 remain at their initial configurations (v13 and v15 respectively) OR return to them. However, the initial state has them atconf(v12, v13) and atconf(v14, v15), and this condition must hold at the end of the plan. My previous plan moved the rovers away from these configurations and did not return them.
           2. Both rovers' stores (v16) are free. My previous plan sampled rocks, filling the stores, and did not drop them.
           3. Images of objectives v17 and v18 in mode v11 are received. My previous plan achieved this.
           4. Analysis of a rock of type v2 (stone) is received. My previous plan achieved this.
           5. Analysis of a rock of type v6 (soil) is received. My previous plan achieved this.
           
           Let's re-evaluate the plan to ensure all parts of the `new-axiom@0()` goal are met, particularly the `atconf` and `free` conditions at the end.
           
           **Revised Plan Strategy:**
           
           To satisfy `atconf(v12, v13)` and `atconf(v14, v15)` at the end, the rovers must move back to their starting positions after all other tasks are completed.
           To satisfy `free(v12, v16)` and `free(v14, v16)` at the end, after sampling rocks, the rovers must drop the sampled rocks.
           
           **Rover v12 tasks:**
           1.  Move to #q2 for image of v17.
           2.  Calibrate.
           3.  Take image.
           4.  Move to #q1 for sampling v1 (stone).
           5.  Sample v1.
           6.  Move to #q0 for sending data.
           7.  Send image of v17.
           8.  Send analysis of v1.
           9.  Drop the rock from store v16.
           10. Move back to v13.
           
           **Rover v14 tasks:**
           1.  Move to #q11 for image of v18.
           2.  Calibrate.
           3.  Take image.
           4.  Move to #q4 for sampling v5 (soil).
           5.  Sample v5.
           6.  Move to #q3 for sending data.
           7.  Send image of v18.
           8.  Send analysis of v5.
           9.  Drop the rock from store v16.
           10. Move back to v15.
           
           Let's construct the plan step-by-step, ensuring all preconditions are met for each action and the final state matches the goal.
           
           --Plan--:
           (move v12 v13 #t5 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #o2 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t11 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_analysis v12 #q0 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q0 #t0 v13)
           (move v14 v15 #t23 #q11)
           (calibrate v14 #q11 #y4 v18 v10)
           (take_image v14 #q11 #y4 v18 v10 v11)
           (move v14 #q11 #o2 #q4)
           (sample_rock v14 #q4 v5 v16)
           (move v14 #q4 #t3 #q3)
           (send_image v14 #q3 #y2 v9 v18 v11)
           (send_analysis v14 #q3 #y2 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q3 #t2 v15)

