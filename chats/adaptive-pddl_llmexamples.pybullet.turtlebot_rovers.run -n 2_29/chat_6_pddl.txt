User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v7, v6)
           Atom camera(v10)
           Atom rock(v3)
           Atom store(v16)
           Atom rock(v5)
           Atom rover(v12)
           Atom atconf(v14, v15)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom type(v3, v2)
           Atom type(v5, v6)
           Atom free(v14, v16)
           Atom free(v12, v16)
           Atom type(v1, v2)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom rock(v8)
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom lander(v9)
           Atom objective(v17)
           Atom conf(v12, v13)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q6, v7)
           Atom conf(v12, #q6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v12, #q13, v5)
           Atom conf(v12, #q13)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q12, v8)
           Atom conf(v12, #q12)
           Atom above(v14, #q9, v8)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #q11, #y4, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y4)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom above(v14, #q10, v7)
           Atom conf(v14, #q10)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom above(v14, #q8, v4)
           Atom conf(v14, #q8)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q7, v3)
           Atom conf(v12, #q7)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #t4, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v12, #q0, #t9, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t7, #q0)
           Atom motion(v12, v13, #t5, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q0, #t13, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #t12, #q0)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q0, #t1, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q2, #t26, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t11, #q0)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q0, #t19, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q2, #t15, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #t8, #q0)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q0, #t10, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #t6, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, v15, #t23, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #t27, #q4)
           Atom motion(v14, #q4, #o2, #q11)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #t17, #q8)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, #q3, #t2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q4, #t3, #q3)
           Atom motion(v14, #q8, #t16, #q3)
           Atom motion(v14, #q11, #t25, #q3)
           Atom motion(v14, #q3, #t22, #q10)
           Atom motion(v14, #q10, #t20, #q3)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q3, #t24, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #t21, #q3)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q0, #t14, #q7)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q7, #t18, #q0)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q3, #o2, #o3)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #o3, #o2, #q3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q10)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q12 v8 v16))
           ((sample_rock v12 #q13 v5 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q6 v7 v16))
           ((sample_rock v12 #q7 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #q10 v7 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((sample_rock v14 #q8 v4 v16))
           ((sample_rock v14 #q9 v8 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t1 #q1))
           ((move v12 #q0 #t10 #q5))
           ((move v12 #q0 #t13 #q6))
           ((move v12 #q0 #t14 #q7))
           ((move v12 #q0 #t19 #q12))
           ((move v12 #q0 #t9 #q2))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t11 #q0))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t15 #q5))
           ((move v12 #q2 #t26 #q1))
           ((move v12 #q2 #t7 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t8 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t18 #q0))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q2))
           ((move v12 v13 #t6 #q5))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q3))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t20 #q3))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t25 #q3))
           ((move v14 #q11 #t27 #q4))
           ((move v14 #q3 #o2 #o3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #t17 #q8))
           ((move v14 #q3 #t2 v15))
           ((move v14 #q3 #t22 #q10))
           ((move v14 #q3 #t24 #q9))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t3 #q3))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t16 #q3))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t21 #q3))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t23 #q11))
           ((move v14 v15 #t4 #q4))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #q11 #y4 v18 v10))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #q11 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, v12 and v14, each with a camera (v10) and a store (v16). There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18). The rovers can move between configurations, take images, calibrate cameras, sample rocks, send images, and send analyses. The goal is `new-axiom@0()`, which is a complex axiom that requires:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers are at their initial configurations. This is already true in the initial state.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers' stores are free. This is already true in the initial state.
           3. `receivedimage(v17, v11)` and `receivedimage(v18, v11)`: Images of both objectives (v17 and v18) must be taken and sent with mode v11.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: Analysis of a rock of type v2 must be received. Rocks v1, v3, v4, v8 are of type v2 (stone).
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: Analysis of a rock of type v6 must be received. Rocks v5, v7 are of type v6 (soil).
           
           To achieve the goal, we need to:
           - Take and send images of v17 and v18.
           - Sample and send analysis for at least one rock of type v2 (stone).
           - Sample and send analysis for at least one rock of type v6 (soil).
           
           I'll use rover v12 for image taking and analysis of v3 (type v2 stone) and v7 (type v6 soil).
           I will also use rover v14 for image taking and analysis of v4 (type v2 stone) and v5 (type v6 soil), just in case.
           
           Let's break down the image part:
           - To get `receivedimage(v17, v11)`:
               - Rover v12 needs to be at `#q2`, calibrate its camera v10 for v17, take an image of v17.
               - Then move v12 to `#q0` and send the image of v17.
           - To get `receivedimage(v18, v11)`:
               - Rover v12 needs to be at `#q5`, calibrate its camera v10 for v18, take an image of v18.
               - Then move v12 to `#q0` and send the image of v18.
           
           Let's break down the rock analysis part for rover v12:
           - To get `receivedanalysis(v3)` (type v2 rock):
               - Rover v12 needs to move to `#q7` (above v3), sample v3.
               - Then move v12 to `#q0` and send the analysis of v3.
           - To get `receivedanalysis(v7)` (type v6 rock):
               - Rover v12 needs to move to `#q6` (above v7), sample v7.
               - Then move v12 to `#q0` and send the analysis of v7.
           
           It seems more efficient to first move v12 to a location where it can calibrate and take images of both objectives, then move it to a location where it can sample rocks, and finally move it to a communication point to send all data.
           
           Plan:
           1. Move v12 to `#q2` (where `imagevisible(v12, #q2, #y1, v17)` is true).
           2. Calibrate v10 on v12 for v17.
           3. Take image of v17.
           4. Move v12 to `#q5` (where `imagevisible(v12, #q5, #y3, v18)` is true).
           5. Calibrate v10 on v12 for v18.
           6. Take image of v18.
           7. Move v12 to `#q7` (above v3).
           8. Sample rock v3.
           9. Move v12 to `#q6` (above v7).
           10. Sample rock v7.
           11. Move v12 to `#q0` (where `comvisible(v12, #q0, #y0, v9)` is true).
           12. Send image of v17.
           13. Send image of v18.
           14. Send analysis of v3.
           15. Send analysis of v7.
           
           --Plan--:
           (move v12 v13 #t5 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t15 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #o2 #q7)
           (sample_rock v12 #q7 v3 v16)
           (move v12 #q7 #o2 #q6)
           (sample_rock v12 #q6 v7 v16)
           (move v12 #q6 #t12 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_analysis v12 #q0 #y0 v9 v3)
           (send_analysis v12 #q0 #y0 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. The goal `new-axiom@0()` requires that `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)` are true. My plan moved `v12` to `#q0`, which changed `atconf(v12, v13)` to `atconf(v12, #q0)`.
           
           Let's re-evaluate the goal and constraints. The `new-axiom@0()` goal specifies that `atconf(v12, v13)` and `atconf(v14, v15)` must be true at the end. This means both rovers must return to their initial configurations after completing all other tasks. The initial state already has `atconf(v12, v13)` and `atconf(v14, v15)`.
           
           The rest of the goal requires:
           1. `receivedimage(v17, v11)`
           2. `receivedimage(v18, v11)`
           3. `receivedanalysis(?stone)` (where ?stone is of type v2)
           4. `receivedanalysis(?soil)` (where ?soil is of type v6)
           
           Let's use rover v12 to achieve all image and analysis goals, and ensure it returns to v13.
           Rocks of type v2 (stone): v1, v3, v4, v8. Let's pick v3.
           Rocks of type v6 (soil): v5, v7. Let's pick v7.
           
           Revised plan for v12:
           1. Move to `#q2` to image v17.
           2. Calibrate camera for v17.
           3. Take image of v17.
           4. Move to `#q5` to image v18.
           5. Calibrate camera for v18.
           6. Take image of v18.
           7. Move to `#q7` to sample v3 (stone).
           8. Sample v3.
           9. Move to `#q6` to sample v7 (soil).
           10. Sample v7.
           11. Move to `#q0` to send data.
           12. Send image v17.
           13. Send image v18.
           14. Send analysis v3.
           15. Send analysis v7.
           16. Move back to `v13`.
           
           --Plan--:
           (move v12 v13 #t5 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t15 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #o2 #q7)
           (sample_rock v12 #q7 v3 v16)
           (move v12 #q7 #o2 #q6)
           (sample_rock v12 #q6 v7 v16)
           (move v12 #q6 #t12 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_analysis v12 #q0 #y0 v9 v3)
           (send_analysis v12 #q0 #y0 v9 v7)
           (move v12 #q0 #t0 v13)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. I again made the mistake of not fully satisfying the axiom. Let's re-examine the `new-axiom@0()` goal:
           
           `new-axiom@0()`:
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           
           My previous plan correctly returned `v12` to `v13`. `v14` remains at `v15` throughout the plan. `free(v12, v16)` and `free(v14, v16)` are initially true. However, `sample_rock` actions make `full(v12, v16)` true and `free(v12, v16)` false. I need to add `drop_rock` actions for `v12` after sampling.
           
           So, the full plan needs to ensure:
           - Images of `v17` and `v18` are received.
           - Analysis of a type `v2` rock is received.
           - Analysis of a type `v6` rock is received.
           - Both `v12` and `v14` are at their initial configurations (`v13` and `v15` respectively).
           - Both `v12` and `v14` have free stores (`v16`).
           
           Let's use rover `v12` for all tasks to simplify, and ensure `v14` remains at its initial configuration and its store remains free, which is already true.
           
           Rocks:
           - Type `v2` (stone): `v1`, `v3`, `v4`, `v8`. I'll pick `v3`.
           - Type `v6` (soil): `v5`, `v7`. I'll pick `v7`.
           
           Revised Plan:
           1. Move `v12` to `#q2` (for `v17` image).
           2. Calibrate `v10` for `v17`.
           3. Take image of `v17`.
           4. Move `v12` to `#q5` (for `v18` image).
           5. Calibrate `v10` for `v18`.
           6. Take image of `v18`.
           7. Move `v12` to `#q7` (to sample `v3`).
           8. Sample `v3`.
           9. Move `v12` to `#q6` (to sample `v7`).
           10. Sample `v7`. At this point, `v12`'s store `v16` will be full with `v3` and `v7`. The problem domain seems to allow multiple samples, but the `full` predicate only cares about whether *a* store is full, not with what. The `sample_rock` action makes the store `full` and `free` to `false`. Since there is only one store per rover, `v12` will be full after sampling `v3`. So, I need to drop `v3` before sampling `v7`.
           Revised Sampling Strategy:
           8. Sample `v3`. (`free(v12, v16)` becomes false, `full(v12, v16)` becomes true)
           9. Move `v12` to `#q0` to send analysis for `v3`.
           10. Send analysis for `v3`.
           11. Drop `v3`. (`full(v12, v16)` becomes false, `free(v12, v16)` becomes true)
           12. Move `v12` to `#q6` to sample `v7`.
           13. Sample `v7`. (`free(v12, v16)` becomes false, `full(v12, v16)` becomes true)
           14. Move `v12` to `#q0` to send analysis for `v7`.
           15. Send analysis for `v7`.
           16. Drop `v7`. (`full(v12, v16)` becomes false, `free(v12, v16)` becomes true)
           17. Send image `v17`.
           18. Send image `v18`.
           19. Move `v12` back to `v13`.
           
           This looks like a lot of movement back and forth. Let's see if I can optimize the movements. The `send_analysis` and `send_image` actions can both be done from `#q0`.
           
           Revised Optimal Plan:
           1. Move `v12` to `#q2` (for `v17` image).
           2. Calibrate `v10` for `v17`.
           3. Take image of `v17`.
           4. Move `v12` to `#q5` (for `v18` image).
           5. Calibrate `v10` for `v18`.
           6. Take image of `v18`.
           7. Move `v12` to `#q7` (to sample `v3`).
           8. Sample `v3`. (store is now full)
           9. Move `v12` to `#q0` (communication point).
           10. Send analysis for `v3`.
           11. Drop `v3`. (store is now free)
           12. Move `v12` to `#q6` (to sample `v7`).
           13. Sample `v7`. (store is now full)
           14. Move `v12` to `#q0` (communication point).
           15. Send analysis for `v7`.
           16. Drop `v7`. (store is now free)
           17. Send image `v17`.
           18. Send image `v18`.
           19. Move `v12` back to `v13`.
           
           --Plan--:
           (move v12 v13 #t5 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t15 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #o2 #q7)
           (sample_rock v12 #q7 v3 v16)
           (move v12 #q7 #t18 #q0)
           (send_analysis v12 #q0 #y0 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q0 #t13 #q6)
           (sample_rock v12 #q6 v7 v16)
           (move v12 #q6 #t12 #q0)
           (send_analysis v12 #q0 #y0 v9 v7)
           (drop_rock v12 v16)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #t0 v13)

