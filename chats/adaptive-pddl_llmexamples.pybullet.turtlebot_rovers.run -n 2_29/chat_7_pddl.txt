User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v7, v6)
           Atom camera(v10)
           Atom rock(v3)
           Atom store(v16)
           Atom rock(v5)
           Atom rover(v12)
           Atom atconf(v14, v15)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom type(v3, v2)
           Atom type(v5, v6)
           Atom free(v14, v16)
           Atom free(v12, v16)
           Atom type(v1, v2)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom rock(v8)
           Atom objective(v18)
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom lander(v9)
           Atom objective(v17)
           Atom conf(v12, v13)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q2, #y1, v17)
           Atom imagerange(v12, #q2, v17)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q6, v7)
           Atom conf(v12, #q6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v12, #q13, v5)
           Atom conf(v12, #q13)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q12, v8)
           Atom conf(v12, #q12)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #q11, #y4, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y4)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #q10, v7)
           Atom conf(v14, #q10)
           Atom above(v14, #q9, v8)
           Atom conf(v14, #q9)
           Atom above(v14, #q8, v4)
           Atom conf(v14, #q8)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom above(v12, #q7, v3)
           Atom conf(v12, #q7)
           Atom above(v14, #o5, v3)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #t2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v12, #q2, #t7, #q0)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q0, #t9, #q2)
           Atom motion(v12, v13, #t5, #q2)
           Atom motion(v12, #q0, #t13, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t12, #q0)
           Atom motion(v12, #q1, #t11, #q0)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q2, #t26, #q1)
           Atom motion(v12, #q0, #t1, #q1)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q0, #t19, #q12)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v14, v15, #t4, #q4)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #t3, #q3)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, v13, #t6, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q2, #t15, #q5)
           Atom motion(v12, #q5, #t8, #q0)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q0, #t10, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, v15, #t23, #q11)
           Atom motion(v14, #q4, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #t25, #q3)
           Atom motion(v14, #q11, #t27, #q4)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q3, #t24, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #t21, #q3)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #t16, #q3)
           Atom motion(v14, #q3, #t17, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q3, #t22, #q10)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q10, #t20, #q3)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #t18, #q0)
           Atom motion(v12, #q5, #t28, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q0, #t14, #q7)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #q3, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q4, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q12 v8 v16))
           ((sample_rock v12 #q13 v5 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q6 v7 v16))
           ((sample_rock v12 #q7 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #q10 v7 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((sample_rock v14 #q8 v4 v16))
           ((sample_rock v14 #q9 v8 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t1 #q1))
           ((move v12 #q0 #t10 #q5))
           ((move v12 #q0 #t13 #q6))
           ((move v12 #q0 #t14 #q7))
           ((move v12 #q0 #t19 #q12))
           ((move v12 #q0 #t9 #q2))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t11 #q0))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t15 #q5))
           ((move v12 #q2 #t26 #q1))
           ((move v12 #q2 #t7 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t28 #q7))
           ((move v12 #q5 #t8 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t18 #q0))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q2))
           ((move v12 v13 #t6 #q5))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q3))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t20 #q3))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t25 #q3))
           ((move v14 #q11 #t27 #q4))
           ((move v14 #q3 #o2 #o3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #t17 #q8))
           ((move v14 #q3 #t2 v15))
           ((move v14 #q3 #t22 #q10))
           ((move v14 #q3 #t24 #q9))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t3 #q3))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t16 #q3))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t21 #q3))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t23 #q11))
           ((move v14 v15 #t4 #q4))
           ((calibrate v12 #q2 #y1 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #q11 #y4 v18 v10))
           ((take_image v12 #q2 #y1 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #q11 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, `v12` and `v14`, each equipped with a camera `v10` and a store `v16`. Several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) are present, some identified as `type v2` (stone) and others as `type v6` (soil). There are also two objectives (`v17`, `v18`) to be imaged. The rovers are currently at configurations `v13` and `v15` respectively, and both have free storage. A lander `v9` is available for communication.
           
           The goal `new-axiom@0()` represents a complex set of conditions that need to be met. Examining the various `new-axiom@0()` definitions, the common and most specific part of the goal is that images for objectives `v17` and `v18` need to be received (meaning taken and sent) and rocks of `type v2` and `type v6` need to be analyzed and the analysis received.
           
           Let's break down the overall goal:
           1.  **Receive images of `v17` and `v18` (objective types):** This means a rover needs to:
               *   Move to a configuration where the objective is visible.
               *   Calibrate its camera.
               *   Take an image.
               *   Move to a configuration where the lander is visible.
               *   Send the image.
           2.  **Receive analysis of rocks of `type v2` (stone) and `type v6` (soil):** This means a rover needs to:
               *   Move to a configuration above a rock of the desired type.
               *   Sample the rock (if the store is free).
               *   Move to a configuration where the lander is visible.
               *   Send the analysis.
           
           We have two rovers, `v12` and `v14`, and one camera `v10`. The camera `v10` supports `mode v11`. Both rovers can move and have access to the camera and a store.
           
           Here's a possible plan to achieve the goal:
           
           **Rover v12 will handle objectives and some rock sampling/analysis.**
           **Rover v14 will handle the remaining rock sampling/analysis and can assist with objectives if needed.**
           
           **For objective `v17` and `v18` (images):**
           *   Rover `v12` can calibrate at `#q2` for `v17` and at `#q5` for `v18`.
           *   Rover `v12` can send images from `#q0`.
           
           **For rock analysis (type v2 and v6):**
           *   We need to analyze at least one rock of type `v2` (e.g., `v1` or `v3` or `v4`) and one of type `v6` (e.g., `v5` or `v7` or `v8`).
           *   Rover `v12` can sample `v1` at `#q1`, `v3` at `#q7`, `v4` at `#q14`, `v5` at `#q13`, `v7` at `#q6`, `v8` at `#q12`.
           *   Rover `v14` can sample `v1` at `#o5`, `v3` at `#o5`, `v4` at `#q8`, `v5` at `#q4`, `v7` at `#q10`, `v8` at `#q9`.
           *   Both rovers can send analysis from their respective communication configurations (`#q0` for `v12`, `#q3` for `v14`).
           
           Let's outline a concrete plan:
           
           1.  **Rover `v12` images objective `v17`:**
               *   Move `v12` to `#q2`.
               *   Calibrate `v10` for `v17`.
               *   Take image of `v17`.
               *   Move `v12` to `#q0`.
               *   Send image of `v17`.
           2.  **Rover `v12` images objective `v18`:**
               *   Move `v12` to `#q5`.
               *   Calibrate `v10` for `v18` (camera is uncalibrated after taking an image).
               *   Take image of `v18`.
               *   Move `v12` to `#q0`.
               *   Send image of `v18`.
           3.  **Rover `v12` samples and analyzes a type `v2` rock (e.g., `v1`):**
               *   Move `v12` to `#q1` (above `v1`).
               *   Sample `v1`. Store `v16` becomes full.
               *   Move `v12` to `#q0`.
               *   Send analysis of `v1`.
               *   Drop the rock from the store so it's free for another sample.
           4.  **Rover `v14` samples and analyzes a type `v6` rock (e.g., `v5`):**
               *   Move `v14` to `#q4` (above `v5`).
               *   Sample `v5`. Store `v16` on `v14` becomes full.
               *   Move `v14` to `#q3`.
               *   Send analysis of `v5`.
               *   Drop the rock from the store on `v14`.
           
           This plan ensures all required conditions are met.
           
           --Plan--:
           (move v12 v13 #t5 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t7 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t10 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #t8 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #t1 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t11 #q0)
           (send_analysis v12 #q0 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v14 v15 #t4 #q4)
           (sample_rock v14 #q4 v5 v16)
           (move v14 #q4 #t3 #q3)
           (send_analysis v14 #q3 #y2 v9 v5)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. The `new-axiom@0()` refers to a complex set of conditions, specifically needing:
           *   `receivedimage(v17, v11)`
           *   `receivedimage(v18, v11)`
           *   `receivedanalysis(?stone)` where `type(?stone, v2)`
           *   `receivedanalysis(?soil)` where `type(?soil, v6)`
           
           My previous plan attempted to achieve these. Let's re-examine the plan and the available actions and states to ensure all parts of the `new-axiom@0()` goal are met.
           
           **Objects and their types:**
           *   `v1`, `v3`, `v4` are type `v2` (stone).
           *   `v5`, `v7`, `v8` are type `v6` (soil).
           *   `v17`, `v18` are objectives.
           
           The plan should ensure one stone (`v2` type) and one soil (`v6` type) are analyzed and the analysis sent.
           
           Let's trace the previous plan's shortcomings and adjust.
           
           1.  **Image v17:**
               *   `(move v12 v13 #t5 #q2)`: `atconf(v12, #q2)` achieved.
               *   `(calibrate v12 #q2 #y1 v17 v10)`: `calibrated(v10, v12)` achieved.
               *   `(take_image v12 #q2 #y1 v17 v10 v11)`: `haveimage(v12, v17, v11)` achieved, `calibrated(v10, v12)` is negated.
               *   `(move v12 #q2 #t7 #q0)`: `atconf(v12, #q0)` achieved.
               *   `(send_image v12 #q0 #y0 v9 v17 v11)`: `receivedimage(v17, v11)` achieved. (Good for `v17`)
           
           2.  **Image v18:**
               *   `(move v12 #q0 #t10 #q5)`: `atconf(v12, #q5)` achieved.
               *   `(calibrate v12 #q5 #y3 v18 v10)`: `calibrated(v10, v12)` achieved. (This step correctly re-calibrates the camera after the previous `take_image` uncalibrated it.)
               *   `(take_image v12 #q5 #y3 v18 v10 v11)`: `haveimage(v12, v18, v11)` achieved, `calibrated(v10, v12)` is negated.
               *   `(move v12 #q5 #t8 #q0)`: `atconf(v12, #q0)` achieved.
               *   `(send_image v12 #q0 #y0 v9 v18 v11)`: `receivedimage(v18, v11)` achieved. (Good for `v18`)
           
           So far, the imaging goals are met.
           
           3.  **Analyze type v2 rock (stone):**
               *   `(move v12 #q0 #t1 #q1)`: `atconf(v12, #q1)` achieved.
               *   `(sample_rock v12 #q1 v1 v16)`: `analyzed(v12, v1)` achieved, `full(v12, v16)` achieved, `free(v12, v16)` negated. (Rock `v1` is type `v2`).
               *   `(move v12 #q1 #t11 #q0)`: `atconf(v12, #q0)` achieved.
               *   `(send_analysis v12 #q0 #y0 v9 v1)`: `receivedanalysis(v1)` achieved. (Good for type `v2` rock)
               *   `(drop_rock v12 v16)`: `free(v12, v16)` achieved, `full(v12, v16)` negated. (Important to free up the store).
           
           4.  **Analyze type v6 rock (soil):**
               *   `(move v14 v15 #t4 #q4)`: `atconf(v14, #q4)` achieved.
               *   `(sample_rock v14 #q4 v5 v16)`: `analyzed(v14, v5)` achieved, `full(v14, v16)` achieved, `free(v14, v16)` negated. (Rock `v5` is type `v6`).
               *   `(move v14 #q4 #t3 #q3)`: `atconf(v14, #q3)` achieved.
               *   `(send_analysis v14 #q3 #y2 v9 v5)`: `receivedanalysis(v5)` achieved. (Good for type `v6` rock)
               *   `(drop_rock v14 v16)`: `free(v14, v16)` achieved, `full(v14, v16)` negated.
           
           Based on this trace, all conditions for `new-axiom@0()` should be met. There might be a nuance in the axiom itself, or perhaps the exact wording of the type predicate matters.
           Let's check the axiom again:
           `Axiom new-axiom@0() Conjunction Atom atconf(v12, v13) Atom atconf(v14, v15) Atom free(v12, v16) Atom free(v14, v16) Atom receivedimage(v17, v11) Atom receivedimage(v18, v11) Atom type(?stone, v2) Atom receivedanalysis(?stone) Atom type(?soil, v6) Atom receivedanalysis(?soil)`
           
           The final state of my plan would have `atconf(v12, #q0)` and `atconf(v14, #q3)`, not `v13` and `v15` respectively. This is a critical detail. The rovers need to return to their initial configurations to satisfy these specific conditions in the axiom if those are part of the *final state requirements*. The provided axiom instances show a variable for configuration, but the error message states `Fact is not satisfied: Atom new-axiom@0()`, which implies that *some* specific instantiation of the axiom was not satisfied. If it means `atconf(v12, v13)` and `atconf(v14, v15)` specifically at the end, then the plan needs to include returning to those configurations.
           
           Let's assume the specific configurations `v13` and `v15` for the rovers are required at the end.
           
           Revised Plan:
           
           1.  **Rover `v12` images objective `v17` and `v18` and samples `v1` (type v2):**
               *   Move `v12` to `#q2`. Calibrate, take image of `v17`.
               *   Move `v12` to `#q0`. Send image of `v17`.
               *   Move `v12` to `#q5`. Re-calibrate, take image of `v18`.
               *   Move `v12` to `#q0`. Send image of `v18`.
               *   Move `v12` to `#q1`. Sample `v1`.
               *   Move `v12` to `#q0`. Send analysis of `v1`.
               *   Drop `v1`.
               *   Move `v12` back to `v13`.
           2.  **Rover `v14` samples `v5` (type v6):**
               *   Move `v14` to `#q4`. Sample `v5`.
               *   Move `v14` to `#q3`. Send analysis of `v5`.
               *   Drop `v5`.
               *   Move `v14` back to `v15`.
           
           This will satisfy all conditions.
           
           --Plan--:
           (move v12 v13 #t5 #q2)
           (calibrate v12 #q2 #y1 v17 v10)
           (take_image v12 #q2 #y1 v17 v10 v11)
           (move v12 #q2 #t7 #q0)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t10 #q5)
           (calibrate v12 #q5 #y3 v18 v10)
           (take_image v12 #q5 #y3 v18 v10 v11)
           (move v12 #q5 #t8 #q0)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v12 #q0 #t1 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t11 #q0)
           (send_analysis v12 #q0 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q0 #t0 v13)
           (move v14 v15 #t4 #q4)
           (sample_rock v14 #q4 v5 v16)
           (move v14 #q4 #t3 #q3)
           (send_analysis v14 #q3 #y2 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q3 #t2 v15)

