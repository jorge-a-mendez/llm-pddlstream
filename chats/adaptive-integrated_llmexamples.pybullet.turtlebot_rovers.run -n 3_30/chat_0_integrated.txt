User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v1 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.534, -1.481), (0.64, -1.375)).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.594, 2.041), (-0.497, 2.139)).
           Object v9 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.405, -2.346), (-1.395, -1.654)).
           Object v15 is a base configuration with (x, y, theta) = (-1.0, -1.75, 0.0).
           Object v13 is a base configuration with (x, y, theta) = (1.0, -1.75, 3.142).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.904, 2.053), (1.985, 2.134)).
           Object v5 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.461, 0.847), (-0.326, 0.981)).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.524, 2.094), (0.603, 2.173)).
           Object v3 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.749, 1.437), (0.853, 1.542)).
           Object v4 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.611, -0.428), (0.711, -0.328)).
           Object v7 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.137, -1.118), (-0.998, -0.978)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.187, -1.929), (-0.821, -1.571)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.821, -1.929), (1.187, -1.571)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.214, 0.44), (-1.074, 0.58)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v4)
           Atom type(v8, v6)
           Atom conf(v12, v13)
           Atom free(v14, v16)
           Atom onboard(v10, v14)
           Atom rock(v8)
           Atom camera(v10)
           Atom type(v1, v2)
           Atom rover(v14)
           Atom type(v3, v2)
           Atom lander(v9)
           Atom type(v7, v6)
           Atom rover(v12)
           Atom free(v12, v16)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom atconf(v14, v15)
           Atom rock(v1)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom objective(v17)
           Atom objective(v19)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom objective(v18)
           Atom type(v4, v2)
           Atom atconf(v12, v13)
           Atom mode(v11)
           Atom rock(v7)
           Atom rock(v3)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom above(v12, #o5, v4)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v5)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom motion(v12, v13, #o2, v13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, v12 and v14, each with a camera (v10) and a storage unit (v16). There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19). A lander (v9) is present for communication. The goal is `new-axiom@0()`, which expands to:
           ```
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           From the initial state, `atconf(v12, v13)` and `atconf(v14, v15)` are already true. `free(v12, v16)` and `free(v14, v16)` are also true.
           
           The main tasks are to:
           1. Receive images for objectives v17, v18, v19 using mode v11.
           2. Receive analysis for a rock of type v2 (stone) and a rock of type v6 (soil).
           
           Since there are no actions for `take_image`, `calibrate`, `send_image`, `sample_rock`, or `send_analysis` in the provided list of valid action instances, the goal is unreachable. The only available actions are `move` and `drop_rock`. These actions cannot fulfill the requirements of `receivedimage` and `receivedanalysis` directly.
           
           The `new-axiom@0` goal also includes predicates about `receivedimage` and `receivedanalysis`. Without the ability to perform `take_image`, `send_image`, `sample_rock`, or `send_analysis`, these conditions cannot be met. The available actions are only `move` and `drop_rock`, which are insufficient.

