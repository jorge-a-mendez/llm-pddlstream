User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom handempty(v6)
           Atom stackable(v8, v18)
           Atom controllable(v4)
           Atom pose(v8, v9)
           Atom graspable(v15)
           Atom stackable(v15, v10)
           Atom atpose(v12, v13)
           Atom pose(v15, v16)
           Atom ataconf(v4, v5)
           Atom aconf(v6, v7)
           Atom stackable(v8, v10)
           Atom arm(v6)
           Atom atpose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom supported(v12, v13, v14)
           Atom type(v8, v17)
           Atom atpose(v15, v16)
           Atom handempty(v4)
           Atom supported(v15, v16, v11)
           Atom atbconf(v3)
           Atom ataconf(v6, v7)
           Atom arm(v4)
           Atom bconf(v3)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom graspable(v8)
           Atom canmove()
           Atom aconf(v4, v5)
           Atom graspable(v12)
           Atom stackable(v12, v10)
           Atom pose(v12, v13)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #o1)
           Atom supported(v12, #o2, v18)
           Atom grasp(v12, #o1)
           Atom grasp(v15, #o1)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects: `v8`, `v12`, and `v15` are graspable and stackable. `v10`, `v11`, `v14`, `v18` are surfaces where objects can be supported. `v17` is a type. The robot has two arms, `v4` and `v6`, both are initially handempty. The robot's base is at configuration `v3`.
           
           The goal `new-axiom@0()` is defined by the axiom `on(?green, v18)` and `type(?green, v17)`. In our current state, `v8` is of `type(v8, v17)`. So, the goal translates to having `v8` on `v18`.
           
           Currently, `v8` is at `atpose(v8, v9)` and supported by `v11`. We need to pick up `v8` and place it on `v18`.
           
           Here's a breakdown of the plan:
           1. **Pick up v8**: The robot arm `v4` (since it's controllable and handempty) will pick up `v8` from its current pose `v9` using grasp `#o1` at base configuration `#o3` and arm trajectory `#o4`.
           2. **Place v8 on v18**: After picking up `v8`, the robot will place it at pose `#o2` which is supported by `v18`. This action also uses arm `v4`, grasp `#o1`, base configuration `#o3`, and arm trajectory `#o4`.
           
           Let's check preconditions for these actions:
           - **pick v4 v8 v9 #o1 #o3 #o4**:
               - `kin(v4, v8, v9, #o1, #o3, #o4)`: True (provided in initial state)
               - `atpose(v8, v9)`: True (provided in initial state)
               - `handempty(v4)`: True (provided in initial state)
               - `atbconf(#o3)`: Currently `atbconf(v3)`. We need to move the base to `#o3`.
               - `NegatedAtom unsafeapproach(v8, v9, #o1)`: We assume this is false since no positive `unsafeapproach` is provided.
               - `NegatedAtom unsafeatraj(#o4)`: We assume this is false since no positive `unsafeatraj` is provided.
           
           - **move_base v3 #o3 #o0**:
               - `basemotion(v3, #o0, #o3)`: True (provided in initial state)
               - `atbconf(v3)`: True (provided in initial state)
               - `canmove()`: True (provided in initial state)
           
           - **place v4 v8 #o2 #o1 #o3 #o4**:
               - `kin(v4, v8, #o2, #o1, #o3, #o4)`: True (provided in initial state)
               - `atgrasp(v4, v8, #o1)`: Achieved by the `pick` action.
               - `atbconf(#o3)`: Achieved by the `move_base` action.
               - `NegatedAtom unsafepose(v8, #o2)`: We assume this is false since no positive `unsafepose` is provided.
               - `NegatedAtom unsafeapproach(v8, #o2, #o1)`: We assume this is false.
               - `NegatedAtom unsafeatraj(#o4)`: We assume this is false.
               - Additionally, we need `supported(v8, #o2, v18)` for the goal `on(v8, v18)` which is provided in the initial state.
           
           The plan will involve moving the base to the pick/place configuration, then picking up `v8`, and finally placing it on `v18`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)

