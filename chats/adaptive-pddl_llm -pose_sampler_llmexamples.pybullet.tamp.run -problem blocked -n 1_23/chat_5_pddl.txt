User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom handempty(v6)
           Atom stackable(v8, v18)
           Atom controllable(v4)
           Atom pose(v8, v9)
           Atom graspable(v15)
           Atom stackable(v15, v10)
           Atom atpose(v12, v13)
           Atom pose(v15, v16)
           Atom ataconf(v4, v5)
           Atom aconf(v6, v7)
           Atom stackable(v8, v10)
           Atom arm(v6)
           Atom atpose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom supported(v12, v13, v14)
           Atom type(v8, v17)
           Atom atpose(v15, v16)
           Atom handempty(v4)
           Atom supported(v15, v16, v11)
           Atom atbconf(v3)
           Atom ataconf(v6, v7)
           Atom arm(v4)
           Atom bconf(v3)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom graspable(v8)
           Atom canmove()
           Atom ~test-cfree-approach-pose-negative(v8, v9, v23, v15, v16)
           Atom aconf(v4, v5)
           Atom graspable(v12)
           Atom stackable(v12, v10)
           Atom pose(v12, v13)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #o1)
           Atom grasp(v8, v20)
           Atom grasp(v8, v22)
           Atom grasp(v8, v23)
           Atom grasp(v8, v21)
           Atom supported(v12, #o2, v18)
           Atom grasp(v15, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, v23, #o3, #o4)
           Atom bconf(v28)
           Atom atraj(v29)
           Atom kin(v4, v8, v19, v21, v28, v29)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v20, v24, v25)
           Atom kin(v4, v8, v19, v23, #o3, #o4)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v22, v26, v27)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v3, #o0, v26)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v28, #o0, v24)
           Atom basemotion(v28, #o0, v3)
           Atom basemotion(v28, #o0, v26)
           Atom basemotion(v24, #o0, v28)
           Atom basemotion(v28, #o0, v28)
           Atom basemotion(v3, #o0, v28)
           Atom basemotion(v26, #o0, v28)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v24)
           Atom basemotion(#o3, #o0, v28)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v28, #o0, #o3)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v28 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v24 #o3 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v28 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v28 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v28 #o3 #o0))
           ((move_base v28 v24 #o0))
           ((move_base v28 v26 #o0))
           ((move_base v28 v28 #o0))
           ((move_base v28 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v28 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 v24 v25))
           ((place v4 v8 v19 v20 v24 v25))
           ((pick v4 v8 v19 v21 v28 v29))
           ((place v4 v8 v19 v21 v28 v29))
           ((pick v4 v8 v19 v22 v26 v27))
           ((place v4 v8 v19 v22 v26 v27))
           ((pick v4 v8 v19 v23 #o3 #o4))
           ((place v4 v8 v19 v23 #o3 #o4))
           ((pick v4 v8 v9 v23 #o3 #o4))
           ((place v4 v8 v9 v23 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `new-axiom@0()`, which is an axiom representing the state `on(?green, v18)` and `type(?green, v17)`. In the initial state, we have `atpose(v8, v9)` and `supported(v8, v9, v11)`, which implies `on(v8, v11)`. We also have `type(v8, v17)`.
           We also have `atpose(v12, v13)` and `supported(v12, v13, v14)`, which implies `on(v12, v14)`. We also have `type(v12, v17)`.
           To satisfy `on(?green, v18)` and `type(?green, v17)`, we need to place an object of type `v17` (which could be `v8` or `v12`) onto `v18`.
           
           Let's try to place `v8` onto `v18`. We know `v8` is `type(v8, v17)`.
           The initial state shows `atpose(v8, v9)` and `supported(v8, v9, v11)`. We need to change its pose to `pose(v8, v19)` and place it on `v18`, since `supported(v8, v19, v18)` is in the initial state.
           
           The plan involves picking up `v8` from its initial pose `v9` and placing it on `v18` at pose `v19`. The robot arm `v4` can perform this. We need to find a suitable grasp and base configuration.
           
           1.  **Pick `v8`**:
               *   `arm(v4)`, `object(v8)`, `pose(v8, v9)`, `grasp(v8, v23)`, `bconf(#o3)`, `atraj(#o4)`
               *   Preconditions: `kin(v4, v8, v9, v23, #o3, #o4)`, `atpose(v8, v9)`, `handempty(v4)`, `atbconf(#o3)`.
               *   We have `kin(v4, v8, v9, v23, #o3, #o4)`, `atpose(v8, v9)`, `handempty(v4)`. However, `atbconf(v3)` is true, not `atbconf(#o3)`. So we need a `move_base` action first.
           
           2.  **Move Base to `#o3`**:
               *   `basemotion(v3, #o0, #o3)`, `atbconf(v3)`, `canmove()`
               *   This will change `atbconf(v3)` to `atbconf(#o3)`.
           
           3.  **Pick `v8`**:
               *   Now, `atbconf(#o3)` is true. We can use `(pick v4 v8 v9 v23 #o3 #o4)`.
               *   This will result in `atgrasp(v4, v8, v23)`, `canmove()`, and `handempty(v4)` becomes false.
           
           4.  **Place `v8`**:
               *   `arm(v4)`, `object(v8)`, `pose(v8, v19)`, `grasp(v8, v23)` (from previous pick), `bconf(#o3)`, `atraj(#o4)`
               *   Preconditions: `kin(v4, v8, v19, v23, #o3, #o4)`, `atgrasp(v4, v8, v23)`, `atbconf(#o3)`.
               *   We have `kin(v4, v8, v19, v23, #o3, #o4)` (given). `atgrasp(v4, v8, v23)` and `atbconf(#o3)` are satisfied from the previous steps.
               *   Use `(place v4 v8 v19 v23 #o3 #o4)`.
               *   This will result in `atpose(v8, v19)` and `handempty(v4)` becomes true.
               *   Since `supported(v8, v19, v18)` is an initial fact, `on(v8, v18)` will be true. Combined with `type(v8, v17)`, the goal `new-axiom@0()` is satisfied.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 v23 #o3 #o4)
           (place v4 v8 v19 v23 #o3 #o4)

