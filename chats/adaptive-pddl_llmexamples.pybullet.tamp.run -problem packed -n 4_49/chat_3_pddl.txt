User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #p3: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom arm(v6)
           Atom graspable(v12)
           Atom supported(v8, v9, v11)
           Atom handempty(v6)
           Atom stackable(v8, v18)
           Atom stackable(v12, v10)
           Atom aconf(v4, v5)
           Atom canmove()
           Atom stackable(v16, v18)
           Atom pose(v14, v15)
           Atom handempty(v4)
           Atom ataconf(v6, v7)
           Atom atpose(v8, v9)
           Atom stackable(v14, v18)
           Atom atpose(v16, v17)
           Atom atpose(v12, v13)
           Atom graspable(v14)
           Atom pose(v8, v9)
           Atom graspable(v8)
           Atom pose(v12, v13)
           Atom graspable(v16)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v18)
           Atom supported(v14, v15, v11)
           Atom stackable(v16, v10)
           Atom stackable(v8, v10)
           Atom stackable(v14, v10)
           Atom atpose(v14, v15)
           Atom supported(v16, v17, v11)
           Atom supported(v12, v13, v11)
           Atom controllable(v4)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v6, v7)
           Atom bconf(v3)
           Atom pose(v16, v17)
           Atom pose(v8, #p3)
           Atom supported(v8, #p3, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v18)
           Atom pose(v16, #p2)
           Atom supported(v16, #p2, v18)
           Atom grasp(v16, #g0)
           Atom grasp(v8, #g2)
           Atom grasp(v12, #g3)
           Atom grasp(v14, #g1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v14, #p0)
           Atom supported(v14, #p0, v18)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v16, v17, #g0, #q0, #t0)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v16, #p2, #g0, #q3, #t6)
           Atom bconf(#q7)
           Atom atraj(#t10)
           Atom kin(v4, v12, v13, #g3, #q7, #t10)
           Atom bconf(#q6)
           Atom atraj(#t9)
           Atom kin(v4, v12, #p1, #g3, #q6, #t9)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v8, #p3, #g2, #q4, #t7)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v8, v9, #g2, #q5, #t8)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, v15, #g1, #q1, #t1)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, #p0, #g1, #q2, #t2)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q5, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g3, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g3 #o3 #o4))
           ((place v4 v12 #o2 #g3 #o3 #o4))
           ((pick v4 v12 #p1 #g3 #q6 #t9))
           ((place v4 v12 #p1 #g3 #q6 #t9))
           ((pick v4 v12 v13 #g3 #q7 #t10))
           ((place v4 v12 v13 #g3 #q7 #t10))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 #p0 #g1 #q2 #t2))
           ((place v4 v14 #p0 #g1 #q2 #t2))
           ((pick v4 v14 v15 #g1 #q1 #t1))
           ((place v4 v14 v15 #g1 #q1 #t1))
           ((pick v4 v16 #o2 #g0 #o3 #o4))
           ((place v4 v16 #o2 #g0 #o3 #o4))
           ((pick v4 v16 #p2 #g0 #q3 #t6))
           ((place v4 v16 #p2 #g0 #q3 #t6))
           ((pick v4 v16 v17 #g0 #q0 #t0))
           ((place v4 v16 v17 #g0 #q0 #t0))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p3 #g2 #q4 #t7))
           ((place v4 v8 #p3 #g2 #q4 #t7))
           ((pick v4 v8 v9 #g2 #q5 #t8))
           ((place v4 v8 v9 #g2 #q5 #t8))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms, `v4` and `v6`. Arm `v4` is controllable and currently at configuration `v5`, with its hand empty. Arm `v6` is at configuration `v7`, with its hand empty. The robot's base is at configuration `v3`. There are several objects in the scene: `v8`, `v12`, `v14`, and `v16`. All of these objects are `graspable`.
           
           Initially:
           - `v8` is at pose `v9`, supported by `v11`. It is also stackable on `v18` and `v10`.
           - `v12` is at pose `v13`, supported by `v11`. It is also stackable on `v10` and `v18`.
           - `v14` is at pose `v15`, supported by `v11`. It is also stackable on `v18` and `v10`.
           - `v16` is at pose `v17`, supported by `v11`. It is also stackable on `v18` and `v10`.
           
           The goal is to have all four objects (`v8`, `v12`, `v14`, and `v16`) on `v18`. Since they are initially supported by `v11`, and not `v18`, the robot will need to pick up each object and place it on `v18`. This involves moving the base to the appropriate configuration for each pick and place operation.
           
           Let's break down the plan for each object:
           
           1.  **For `v8`:**
               *   Currently `atpose(v8, v9)` and supported by `v11`. We want `on(v8, v18)`, which means `atpose(v8, #p3)` and `supported(v8, #p3, v18)`.
               *   To pick `v8` from `v9`, the base needs to be at `q5` (from `kin(v4, v8, v9, #g2, #q5, #t8)`).
               *   To place `v8` to `#p3` on `v18`, the base needs to be at `q4` (from `kin(v4, v8, #p3, #g2, #q4, #t7)`).
           
           2.  **For `v12`:**
               *   Currently `atpose(v12, v13)` and supported by `v11`. We want `on(v12, v18)`, which means `atpose(v12, #p1)` and `supported(v12, #p1, v18)`.
               *   To pick `v12` from `v13`, the base needs to be at `q7` (from `kin(v4, v12, v13, #g3, #q7, #t10)`).
               *   To place `v12` to `#p1` on `v18`, the base needs to be at `q6` (from `kin(v4, v12, #p1, #g3, #q6, #t9)`).
           
           3.  **For `v14`:**
               *   Currently `atpose(v14, v15)` and supported by `v11`. We want `on(v14, v18)`, which means `atpose(v14, #p0)` and `supported(v14, #p0, v18)`.
               *   To pick `v14` from `v15`, the base needs to be at `q1` (from `kin(v4, v14, v15, #g1, #q1, #t1)`).
               *   To place `v14` to `#p0` on `v18`, the base needs to be at `q2` (from `kin(v4, v14, #p0, #g1, #q2, #t2)`).
           
           4.  **For `v16`:**
               *   Currently `atpose(v16, v17)` and supported by `v11`. We want `on(v16, v18)`, which means `atpose(v16, #p2)` and `supported(v16, #p2, v18)`.
               *   To pick `v16` from `v17`, the base needs to be at `q0` (from `kin(v4, v16, v17, #g0, #q0, #t0)`).
               *   To place `v16` to `#p2` on `v18`, the base needs to be at `q3` (from `kin(v4, v16, #p2, #g0, #q3, #t6)`).
           
           The plan will involve a sequence of `move_base`, `pick`, and `place` actions for each object. The order of objects doesn't inherently matter, but we'll process them one by one. The robot starts at `v3`.
           
           --Plan--:
           (move_base v3 #q5 #o0)
           (pick v4 v8 v9 #g2 #q5 #t8)
           (move_base #q5 #q4 #o0)
           (place v4 v8 #p3 #g2 #q4 #t7)
           (move_base #q4 #q7 #o0)
           (pick v4 v12 v13 #g3 #q7 #t10)
           (move_base #q7 #q6 #o0)
           (place v4 v12 #p1 #g3 #q6 #t9)
           (move_base #q6 #q1 #o0)
           (pick v4 v14 v15 #g1 #q1 #t1)
           (move_base #q1 #q2 #o0)
           (place v4 v14 #p0 #g1 #q2 #t2)
           (move_base #q2 #q0 #o0)
           (pick v4 v16 v17 #g0 #q0 #t0)
           (move_base #q0 #q3 #o0)
           (place v4 v16 #p2 #g0 #q3 #t6)

