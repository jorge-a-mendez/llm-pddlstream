User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom arm(v6)
           Atom graspable(v12)
           Atom supported(v8, v9, v11)
           Atom handempty(v6)
           Atom stackable(v8, v18)
           Atom stackable(v12, v10)
           Atom aconf(v4, v5)
           Atom canmove()
           Atom stackable(v16, v18)
           Atom pose(v14, v15)
           Atom handempty(v4)
           Atom ataconf(v6, v7)
           Atom atpose(v8, v9)
           Atom stackable(v14, v18)
           Atom atpose(v16, v17)
           Atom atpose(v12, v13)
           Atom graspable(v14)
           Atom pose(v8, v9)
           Atom graspable(v8)
           Atom pose(v12, v13)
           Atom graspable(v16)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v18)
           Atom supported(v14, v15, v11)
           Atom stackable(v16, v10)
           Atom stackable(v8, v10)
           Atom stackable(v14, v10)
           Atom atpose(v14, v15)
           Atom supported(v16, v17, v11)
           Atom supported(v12, v13, v11)
           Atom controllable(v4)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v6, v7)
           Atom bconf(v3)
           Atom pose(v16, v17)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v16, #o2, v18)
           Atom grasp(v16, #o1)
           Atom grasp(v8, #o1)
           Atom grasp(v12, #o1)
           Atom grasp(v14, #o1)
           Atom supported(v12, #o2, v10)
           Atom supported(v14, #o2, v18)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v16 #o2 #o1 #o3 #o4))
           ((place v4 v16 #o2 #o1 #o3 #o4))
           ((pick v4 v16 v17 #o1 #o3 #o4))
           ((place v4 v16 v17 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (v8, v12, v14, v16) that are stackable and currently located on `v11` or `v10` (implied by `supported` predicates). The goal is to place all four objects (v8, v12, v14, v16) on `v18`. The robot has two arms, `v4` and `v6`, but only `v4` has kin information available for picking and placing these objects. `v4` is currently `handempty`. The current base configuration is `v3`. There are also different possible poses for these objects, represented by `v9`, `v13`, `v15`, `v17` and `#o2`. The goal `on(object, v18)` requires that `supported(object, pose, v18)` and `atpose(object, pose)` be true.
           
           Currently:
           - `v8` is `atpose(v8, v9)` and `supported(v8, v9, v11)`. It can be placed at `#o2` on `v18` or `v10`.
           - `v12` is `atpose(v12, v13)` and `supported(v12, v13, v11)`. It can be placed at `#o2` on `v18` or `v10`.
           - `v14` is `atpose(v14, v15)` and `supported(v14, v15, v11)`. It can be placed at `#o2` on `v18` or `v10`.
           - `v16` is `atpose(v16, v17)` and `supported(v16, v17, v11)`. It can be placed at `#o2` on `v18` or `v10`.
           
           All objects need to be moved to a pose that is supported by `v18`. The pose `#o2` is the only valid pose that is supported by `v18` for all objects.
           
           The plan will involve picking each object from its current location and placing it at `#o2` (which is supported by `v18`). Since `v4` is the only arm with relevant kin information, it will be used for all pick and place operations. The base configuration `v3` and `#o3` are available, with base motions connecting them. We will use `#o3` as the base configuration for the pick and place actions, as it is specified in the kin predicates.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v16 v17 #o1 #o3 #o4)
           (place v4 v16 #o2 #o1 #o3 #o4)

