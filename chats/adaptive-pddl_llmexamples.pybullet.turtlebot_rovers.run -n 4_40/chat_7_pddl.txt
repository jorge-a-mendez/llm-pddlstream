User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v19)
           Atom type(v5, v6)
           Atom onboard(v10, v12)
           Atom type(v1, v2)
           Atom mode(v11)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom camera(v10)
           Atom conf(v14, v15)
           Atom rover(v12)
           Atom objective(v18)
           Atom supports(v10, v11)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom free(v14, v16)
           Atom rock(v5)
           Atom atconf(v12, v13)
           Atom rock(v4)
           Atom conf(v12, v13)
           Atom objective(v17)
           Atom type(v8, v6)
           Atom rock(v3)
           Atom rock(v7)
           Atom type(v4, v2)
           Atom rock(v8)
           Atom objective(v20)
           Atom type(v3, v2)
           Atom onboard(v10, v14)
           Atom store(v16)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q17, v4)
           Atom conf(v14, #q17)
           Atom above(v14, #q14, v3)
           Atom conf(v14, #q14)
           Atom above(v14, #q16, v8)
           Atom conf(v14, #q16)
           Atom above(v14, #q8, v5)
           Atom conf(v14, #q8)
           Atom imagevisible(v14, #q3, #y2, v20)
           Atom imagerange(v14, #q3, v20)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #q15, v7)
           Atom conf(v14, #q15)
           Atom imagevisible(v14, #q4, #y3, v17)
           Atom imagerange(v14, #q4, v17)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom above(v14, #q9, v1)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #q1, #y1, v18)
           Atom imagerange(v14, #q1, v18)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom imagevisible(v14, #q0, #y0, v19)
           Atom imagerange(v14, #q0, v19)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q12, #y8, v18)
           Atom imagerange(v12, #q12, v18)
           Atom conf(v12, #q12)
           Atom ray(#y8)
           Atom imagevisible(v12, #q11, #y7, v20)
           Atom imagerange(v12, #q11, v20)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom imagevisible(v12, #q10, #y6, v19)
           Atom imagerange(v12, #q10, v19)
           Atom conf(v12, #q10)
           Atom ray(#y6)
           Atom imagevisible(v12, #q13, #y9, v17)
           Atom imagerange(v12, #q13, v17)
           Atom conf(v12, #q13)
           Atom ray(#y9)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v3)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom above(v12, #q2, v5)
           Atom conf(v12, #q2)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v4)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v12, #q6, #y5, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y5)
           Atom comvisible(v14, #q5, #y4, v9)
           Atom comrange(v14, #q5, v9)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q5, #t9, v15)
           Atom motion(v14, #q1, #t3, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #t38, #q17)
           Atom motion(v14, #q17, #t36, #q5)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v12, #q6, #t8, v13)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t6, #q2)
           Atom motion(v12, v13, #t1, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #t7, #q6)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v14, v15, #t31, #q15)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q5, #t34, #q15)
           Atom motion(v14, #q15, #t25, #q5)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #t15, #q5)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q5, #t33, #q9)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, v13, #t17, #q7)
           Atom motion(v12, #q7, #t21, #q6)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v14, #q17, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q17)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q15)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, v15, #t18, #q4)
           Atom motion(v14, #q15, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #t20, #q1)
           Atom motion(v14, #q4, #t5, #q5)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q17, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q1, #t11, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q3, #t12, #q4)
           Atom motion(v14, #q3, #t4, #q5)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q17)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #t29, #q6)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, v13, #t22, #q10)
           Atom motion(v12, #q10, #t26, #q6)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q17)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #t14, #q5)
           Atom motion(v14, #q8, #t42, #q9)
           Atom motion(v14, #q4, #t41, #q8)
           Atom motion(v14, #q5, #t10, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, #q17, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #t27, #q6)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, v13, #t23, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q16, #t35, #q5)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q5, #t37, #q16)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q4, #o2, #q16)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q16, #o2, #q4)
           Atom motion(v14, #q16, #o2, #q1)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q15, #o2, #q0)
           Atom motion(v14, v15, #t0, #q0)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q16)
           Atom motion(v14, #q0, #o2, #q15)
           Atom motion(v14, #q0, #t19, #q3)
           Atom motion(v14, #q1, #t16, #q0)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q17)
           Atom motion(v14, #q0, #t13, #q1)
           Atom motion(v14, #q17, #o2, #q0)
           Atom motion(v14, #q16, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q0, #t2, #q5)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v12, #q12, #t28, #q6)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q0, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q14, #o2, #q0)
           Atom motion(v14, #q5, #t32, #q14)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, v15, #t30, #q14)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q14, #t24, #q5)
           Atom motion(v14, #q9, #t39, #q14)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v14, #q14, #o2, #q8)
           Atom motion(v14, #q14, #t40, #q15)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q11, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v5 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v14 #q14 v3 v16))
           ((sample_rock v14 #q15 v7 v16))
           ((sample_rock v14 #q16 v8 v16))
           ((sample_rock v14 #q17 v4 v16))
           ((sample_rock v14 #q8 v5 v16))
           ((sample_rock v14 #q9 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t26 #q6))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t27 #q6))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t28 #q6))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t29 #q6))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t7 #q6))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #t6 #q2))
           ((move v12 #q6 #t8 v13))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t21 #q6))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q2))
           ((move v12 v13 #t17 #q7))
           ((move v12 v13 #t22 #q10))
           ((move v12 v13 #t23 #q11))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q14))
           ((move v14 #q0 #o2 #q15))
           ((move v14 #q0 #o2 #q16))
           ((move v14 #q0 #o2 #q17))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t13 #q1))
           ((move v14 #q0 #t19 #q3))
           ((move v14 #q0 #t2 #q5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q17))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t11 #q3))
           ((move v14 #q1 #t16 #q0))
           ((move v14 #q1 #t3 #q5))
           ((move v14 #q14 #o2 #q0))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q8))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t24 #q5))
           ((move v14 #q14 #t40 #q15))
           ((move v14 #q15 #o2 #q0))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t25 #q5))
           ((move v14 #q16 #o2 #q0))
           ((move v14 #q16 #o2 #q1))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 #q4))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t35 #q5))
           ((move v14 #q17 #o2 #q0))
           ((move v14 #q17 #o2 #q1))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q3))
           ((move v14 #q17 #o2 #q4))
           ((move v14 #q17 #o2 #q8))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t36 #q5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q17))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t12 #q4))
           ((move v14 #q3 #t4 #q5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q16))
           ((move v14 #q4 #o2 #q17))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t20 #q1))
           ((move v14 #q4 #t41 #q8))
           ((move v14 #q4 #t5 #q5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #t10 #q8))
           ((move v14 #q5 #t32 #q14))
           ((move v14 #q5 #t33 #q9))
           ((move v14 #q5 #t34 #q15))
           ((move v14 #q5 #t37 #q16))
           ((move v14 #q5 #t38 #q17))
           ((move v14 #q5 #t9 v15))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q17))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t14 #q5))
           ((move v14 #q8 #t42 #q9))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t15 #q5))
           ((move v14 #q9 #t39 #q14))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((move v14 v15 #t18 #q4))
           ((move v14 v15 #t30 #q14))
           ((move v14 v15 #t31 #q15))
           ((calibrate v12 #q10 #y6 v19 v10))
           ((calibrate v12 #q11 #y7 v20 v10))
           ((calibrate v12 #q12 #y8 v18 v10))
           ((calibrate v12 #q13 #y9 v17 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q1 #y1 v18 v10))
           ((calibrate v14 #q3 #y2 v20 v10))
           ((calibrate v14 #q4 #y3 v17 v10))
           ((take_image v12 #q10 #y6 v19 v10 v11))
           ((take_image v12 #q11 #y7 v20 v10 v11))
           ((take_image v12 #q12 #y8 v18 v10 v11))
           ((take_image v12 #q13 #y9 v17 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q1 #y1 v18 v10 v11))
           ((take_image v14 #q3 #y2 v20 v10 v11))
           ((take_image v14 #q4 #y3 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y5 v9 v3))
           ((send_analysis v12 #q6 #y5 v9 v4))
           ((send_analysis v12 #q6 #y5 v9 v7))
           ((send_analysis v12 #q6 #y5 v9 v8))
           ((send_analysis v12 #q6 #y5 v9 v5))
           ((send_analysis v12 #q6 #y5 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q5 #y4 v9 v3))
           ((send_analysis v14 #q5 #y4 v9 v7))
           ((send_analysis v14 #q5 #y4 v9 v8))
           ((send_analysis v14 #q5 #y4 v9 v4))
           ((send_analysis v14 #q5 #y4 v9 v5))
           ((send_analysis v14 #q5 #y4 v9 v1))
           ((send_image v12 #q6 #y5 v9 v19 v11))
           ((send_image v12 #q6 #y5 v9 v20 v11))
           ((send_image v12 #q6 #y5 v9 v18 v11))
           ((send_image v12 #q6 #y5 v9 v17 v11))
           ((send_image v14 #q5 #y4 v9 v19 v11))
           ((send_image v14 #q5 #y4 v9 v18 v11))
           ((send_image v14 #q5 #y4 v9 v20 v11))
           ((send_image v14 #q5 #y4 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each with a camera (v10) and a store (v16). There are several objectives (v17, v18, v19, v20) and rocks (v1, v3, v4, v5, v7, v8). There's also a lander (v9) for communication. The goal is to satisfy `new-axiom@0()`, which requires `receivedimage` for all objectives (v17, v18, v19, v20) with mode v11, `receivedanalysis` for rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8), and for both rovers to be at their current configurations (v12 at v13, v14 at v15) and have their stores free.
           
           Currently, no images have been received and no rocks have been analyzed. Both rovers are at their initial configurations and have free stores.
           
           To achieve the goal, both rovers need to:
           1. Calibrate their camera.
           2. Take images of all objectives.
           3. Send those images to the lander.
           4. Sample all rocks.
           5. Send the analysis of the sampled rocks to the lander.
           
           Since both rovers can access different rocks and objectives, they can work in parallel to achieve the goals. The current initial state indicates that v14 is at conf v15, and v12 is at conf v13.
           
           The `new-axiom@0()` goal specifies:
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`
           - `receivedanalysis(v1)`, `receivedanalysis(v3)`, `receivedanalysis(v4)` (type v2)
           - `receivedanalysis(v5)`, `receivedanalysis(v7)`, `receivedanalysis(v8)` (type v6)
           - `atconf(v12, v13)` and `atconf(v14, v15)` (already true)
           - `free(v12, v16)` and `free(v14, v16)` (already true, but will become full after sampling, so they need to be dropped)
           
           Let's break down the plan for each rover.
           
           **Rover v14 (at v15):**
           *   **Objectives for v14:** v17, v18, v19, v20 are visible from various configurations.
               *   v19 from #q0
               *   v18 from #q1
               *   v20 from #q3
               *   v17 from #q4
           *   **Rocks for v14:** v1, v3, v4, v5, v7, v8 are above various configurations.
               *   v4 from #q17
               *   v3 from #q14
               *   v8 from #q16
               *   v5 from #q8
               *   v7 from #q15
               *   v1 from #q9
           
           **Rover v12 (at v13):**
           *   **Objectives for v12:** v17, v18, v19, v20 are visible from various configurations.
               *   v18 from #q12
               *   v20 from #q11
               *   v19 from #q10
               *   v17 from #q13
           *   **Rocks for v12:** v1, v3, v4, v5, v7, v8 are above various configurations.
               *   v7, v3, v8, v4 from #o5
               *   v1 from #q7
               *   v5 from #q2
           
           The plan will involve a sequence of moves, calibrations, image captures, image transmissions, rock samplings, and analysis transmissions for both rovers. Since the goal is about the final state (all images received, all analyses received, stores free, and rovers at home config), the order within each rover's tasks can be flexible as long as preconditions are met. We need to make sure to drop rocks after sampling and before ending the mission if the stores are full.
           
           Since `new-axiom@0()` already states `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)`, and `receivedimage` for all objectives and `receivedanalysis` for all rocks, the plan just needs to achieve the `receivedimage` and `receivedanalysis` for all the specified items. The `free` and `atconf` parts are true in the initial state and are maintained as long as the rovers eventually return to their starting positions and drop any sampled rocks.
           
           I will focus on getting all images and analyses sent.
           For v14:
           1. Calibrate at different image-visible locations for objectives and take images.
           2. Send all taken images.
           3. Move to different above-rock locations and sample rocks.
           4. Send all rock analyses.
           5. Drop rocks.
           
           For v12:
           1. Calibrate at different image-visible locations for objectives and take images.
           2. Send all taken images.
           3. Move to different above-rock locations and sample rocks.
           4. Send all rock analyses.
           5. Drop rocks.
           
           The rovers need to be at communication-visible locations to send images and analyses.
           For v14, #q5 is a comvisible location.
           For v12, #q6 is a comvisible location.
           
           Let's prioritize Rover 14 (already at v15):
           1. Calibrate and take images for all objectives it can see.
           2. Send all images.
           3. Sample all rocks it can reach.
           4. Send all analyses.
           5. Drop rocks.
           
           Then for Rover 12 (already at v13):
           1. Calibrate and take images for all objectives it can see.
           2. Send all images.
           3. Sample all rocks it can reach.
           4. Send all analyses.
           5. Drop rocks.
           
           This strategy ensures that the `receivedimage` and `receivedanalysis` predicates are met. Since both rovers start at their home configurations and have free stores, and the plan concludes with dropping all sampled rocks, the `atconf` and `free` conditions will be met at the end.
           
           --Plan--:
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (calibrate v14 #q1 #y1 v18 v10)
           (take_image v14 #q1 #y1 v18 v10 v11)
           (calibrate v14 #q3 #y2 v20 v10)
           (take_image v14 #q3 #y2 v20 v10 v11)
           (calibrate v14 #q4 #y3 v17 v10)
           (take_image v14 #q4 #y3 v17 v10 v11)
           (move v14 v15 #o2 #q5)
           (send_image v14 #q5 #y4 v9 v19 v11)
           (send_image v14 #q5 #y4 v9 v18 v11)
           (send_image v14 #q5 #y4 v9 v20 v11)
           (send_image v14 #q5 #y4 v9 v17 v11)
           (move v14 #q5 #t32 #q14)
           (sample_rock v14 #q14 v3 v16)
           (move v14 #q14 #t40 #q15)
           (sample_rock v14 #q15 v7 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #q15 v7 v16)
           (move v14 #q15 #o2 #q16)
           (sample_rock v14 #q16 v8 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #q16 v8 v16)
           (move v14 #q16 #o2 #q17)
           (sample_rock v14 #q17 v4 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #q17 v4 v16)
           (move v14 #q17 #o2 #q8)
           (sample_rock v14 #q8 v5 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #q8 v5 v16)
           (move v14 #q8 #t42 #q9)
           (sample_rock v14 #q9 v1 v16)
           (move v14 #q9 #t15 #q5)
           (send_analysis v14 #q5 #y4 v9 v3)
           (send_analysis v14 #q5 #y4 v9 v7)
           (send_analysis v14 #q5 #y4 v9 v8)
           (send_analysis v14 #q5 #y4 v9 v4)
           (send_analysis v14 #q5 #y4 v9 v5)
           (send_analysis v14 #q5 #y4 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q5 #t9 v15)
           (calibrate v12 #q10 #y6 v19 v10)
           (take_image v12 #q10 #y6 v19 v10 v11)
           (calibrate v12 #q11 #y7 v20 v10)
           (take_image v12 #q11 #y7 v20 v10 v11)
           (calibrate v12 #q12 #y8 v18 v10)
           (take_image v12 #q12 #y8 v18 v10 v11)
           (calibrate v12 #q13 #y9 v17 v10)
           (take_image v12 #q13 #y9 v17 v10 v11)
           (move v12 v13 #o2 #q6)
           (send_image v12 #q6 #y5 v9 v19 v11)
           (send_image v12 #q6 #y5 v9 v20 v11)
           (send_image v12 #q6 #y5 v9 v18 v11)
           (send_image v12 #q6 #y5 v9 v17 v11)
           (move v12 #q6 #t6 #q2)
           (sample_rock v12 #q2 v5 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #q2 v5 v16)
           (move v12 #q2 #o2 #q7)
           (sample_rock v12 #q7 v1 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #q7 v1 v16)
           (move v12 #q7 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v3 v16)
           (sample_rock v12 #o5 v4 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v4 v16)
           (sample_rock v12 #o5 v7 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v7 v16)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q6)
           (send_analysis v12 #q6 #y5 v9 v3)
           (send_analysis v12 #q6 #y5 v9 v4)
           (send_analysis v12 #q6 #y5 v9 v7)
           (send_analysis v12 #q6 #y5 v9 v8)
           (send_analysis v12 #q6 #y5 v9 v5)
           (send_analysis v12 #q6 #y5 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q6 #t8 v13)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v14, #q1) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because Rover v14 was assumed to be at `#q1` for `take_image`, but it was at `v15` and `move` actions were not used to bring it to `#q1`. I need to ensure that the rover is moved to the correct configuration before attempting to take an image or sample a rock.
           
           Let's re-plan carefully, ensuring that `atconf` preconditions are met.
           
           **Initial State:**
           *   Rover v12 at `v13`, store v16 free.
           *   Rover v14 at `v15`, store v16 free.
           *   Camera v10 is on both rovers and supports mode v11.
           *   Lander v9.
           *   Objectives: v17, v18, v19, v20.
           *   Rocks: v1, v3, v4, v5, v7, v8.
           
           **Goal:**
           *   `receivedimage` for v17, v18, v19, v20 with mode v11.
           *   `receivedanalysis` for v1, v3, v4, v5, v7, v8.
           *   `atconf(v12, v13)`, `atconf(v14, v15)`.
           *   `free(v12, v16)`, `free(v14, v16)`.
           
           **Revised Strategy:**
           
           For each rover, I will:
           1.  Move to a specific configuration where an objective is visible.
           2.  Calibrate the camera at that configuration.
           3.  Take an image of the objective.
           4.  Repeat for all objectives the rover needs to image.
           5.  Move to a communication-visible configuration (e.g., #q5 for v14, #q6 for v12).
           6.  Send all images.
           7.  Move to a specific configuration where a rock is above.
           8.  Sample the rock.
           9.  Repeat for all rocks the rover needs to sample.
           10. Move to a communication-visible configuration.
           11. Send all analyses.
           12. Drop any sampled rocks (to make the store free again).
           13. Move back to the initial configuration (v13 for v12, v15 for v14).
           
           Let's try to make Rover 14 handle objectives v19, v18, v20, v17 and rocks v3, v7, v8, v4, v5, v1. Rover 12 will not be strictly needed based on the action instances provided for v14. I will focus on rover v14 first, if it cannot cover all rocks/objectives, I will then incorporate v12.
           
           **Rover v14 Plan:**
           
           *   **Images:**
               *   v19 from #q0
               *   v18 from #q1
               *   v20 from #q3
               *   v17 from #q4
           *   **Analysis:**
               *   v3 from #q14
               *   v7 from #q15
               *   v8 from #q16
               *   v4 from #q17
               *   v5 from #q8
               *   v1 from #q9
           *   **Comms:**
               *   v9 from #q5
           
           The plan needs to ensure that after sampling a rock, if the store is full, it is dropped so that the next sample action can be performed. The goal state requires `free(v12, v16)` and `free(v14, v16)`, so dropping all rocks at the end of sampling is crucial.
           
           --Plan--:
           (move v14 v15 #t0 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #t13 #q1)
           (calibrate v14 #q1 #y1 v18 v10)
           (take_image v14 #q1 #y1 v18 v10 v11)
           (move v14 #q1 #t11 #q3)
           (calibrate v14 #q3 #y2 v20 v10)
           (take_image v14 #q3 #y2 v20 v10 v11)
           (move v14 #q3 #t12 #q4)
           (calibrate v14 #q4 #y3 v17 v10)
           (take_image v14 #q4 #y3 v17 v10 v11)
           (move v14 #q4 #t5 #q5)
           (send_image v14 #q5 #y4 v9 v19 v11)
           (send_image v14 #q5 #y4 v9 v18 v11)
           (send_image v14 #q5 #y4 v9 v20 v11)
           (send_image v14 #q5 #y4 v9 v17 v11)
           (move v14 #q5 #t32 #q14)
           (sample_rock v14 #q14 v3 v16)
           (move v14 #q14 #t40 #q15)
           (sample_rock v14 #q15 v7 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #q15 v7 v16)
           (move v14 #q15 #o2 #q16)
           (sample_rock v14 #q16 v8 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #q16 v8 v16)
           (move v14 #q16 #o2 #q17)
           (sample_rock v14 #q17 v4 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #q17 v4 v16)
           (move v14 #q17 #o2 #q8)
           (sample_rock v14 #q8 v5 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #q8 v5 v16)
           (move v14 #q8 #t42 #q9)
           (sample_rock v14 #q9 v1 v16)
           (move v14 #q9 #t15 #q5)
           (send_analysis v14 #q5 #y4 v9 v3)
           (send_analysis v14 #q5 #y4 v9 v7)
           (send_analysis v14 #q5 #y4 v9 v8)
           (send_analysis v14 #q5 #y4 v9 v4)
           (send_analysis v14 #q5 #y4 v9 v5)
           (send_analysis v14 #q5 #y4 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q5 #t9 v15)
           (move v12 v13 #t22 #q10)
           (calibrate v12 #q10 #y6 v19 v10)
           (take_image v12 #q10 #y6 v19 v10 v11)
           (move v12 #q10 #o2 #q11)
           (calibrate v12 #q11 #y7 v20 v10)
           (take_image v12 #q11 #y7 v20 v10 v11)
           (move v12 #q11 #o2 #q12)
           (calibrate v12 #q12 #y8 v18 v10)
           (take_image v12 #q12 #y8 v18 v10 v11)
           (move v12 #q12 #o2 #q13)
           (calibrate v12 #q13 #y9 v17 v10)
           (take_image v12 #q13 #y9 v17 v10 v11)
           (move v12 #q13 #t29 #q6)
           (send_image v12 #q6 #y5 v9 v19 v11)
           (send_image v12 #q6 #y5 v9 v20 v11)
           (send_image v12 #q6 #y5 v9 v18 v11)
           (send_image v12 #q6 #y5 v9 v17 v11)
           (move v12 #q6 #t6 #q2)
           (sample_rock v12 #q2 v5 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #q2 v5 v16)
           (move v12 #q2 #o2 #q7)
           (sample_rock v12 #q7 v1 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #q7 v1 v16)
           (move v12 #q7 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v3 v16)
           (sample_rock v12 #o5 v4 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v4 v16)
           (sample_rock v12 #o5 v7 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v7 v16)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q6)
           (send_analysis v12 #q6 #y5 v9 v3)
           (send_analysis v12 #q6 #y5 v9 v4)
           (send_analysis v12 #q6 #y5 v9 v7)
           (send_analysis v12 #q6 #y5 v9 v8)
           (send_analysis v12 #q6 #y5 v9 v5)
           (send_analysis v12 #q6 #y5 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q6 #t8 v13)

