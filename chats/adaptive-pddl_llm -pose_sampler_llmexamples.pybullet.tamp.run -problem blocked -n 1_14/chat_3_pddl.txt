User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom bconf(v3)
           Atom pose(v12, v13)
           Atom stackable(v15, v10)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v18)
           Atom ataconf(v4, v5)
           Atom type(v8, v17)
           Atom stackable(v12, v10)
           Atom aconf(v6, v7)
           Atom atpose(v12, v13)
           Atom pose(v15, v16)
           Atom aconf(v4, v5)
           Atom graspable(v8)
           Atom arm(v4)
           Atom graspable(v12)
           Atom atpose(v15, v16)
           Atom arm(v6)
           Atom supported(v15, v16, v11)
           Atom type(v12, v17)
           Atom handempty(v6)
           Atom stackable(v8, v10)
           Atom canmove()
           Atom graspable(v15)
           Atom pose(v8, v9)
           Atom atbconf(v3)
           Atom atpose(v8, v9)
           Atom stackable(v8, v18)
           Atom controllable(v4)
           Atom ataconf(v6, v7)
           Atom handempty(v4)
           Atom supported(v12, v13, v14)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v15, #o1)
           Atom grasp(v8, #o1)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #g0)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v12, #p0, #g0, #q1, #t2)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(v3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q1 #t2))
           ((place v4 v12 #p0 #g0 #q1 #t2))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The robot needs to achieve the goal `new-axiom@0()`, which, according to the axioms, means `on(?green, v18)` and `type(?green, v17)`. The object `v12` is `green` and its `type` is `v17`. Currently `v12` is at `v13` and supported by `v14`. The goal requires `v12` to be on `v18`. So the plan is to pick up `v12` and place it on `v18`.
           
           The current state shows that `v12` is at `v13` and `atbconf` is `v3`.
           There is an action to `pick v4 v12 v13 #g0 #q0 #t0`. This action picks `v12` with arm `v4` at pose `v13` using grasp `#g0` and base configuration `#q0` with trajectory `#t0`.
           To execute this, the robot needs to be at base configuration `#q0`. The current base configuration is `v3`.
           There is a `basemotion` from `v3` to `#q0` with trajectory `#t1`. So a `move_base` action `(move_base v3 #q0 #t1)` can be used to move the robot to `#q0`.
           After picking up `v12`, the robot will be holding `v12`.
           Then, to place `v12` on `v18`, we need a pose `#p0` on `v18` for `v12`.
           There is `kin(v4, v12, #p0, #g0, #q1, #t2)` which implies that `#p0` is a valid pose for `v12` on `v18` with base configuration `#q1`.
           So, the robot needs to move its base to `#q1`. There is a `basemotion` from `#q0` to `#q1` with trajectory `#o0`. The action would be `(move_base #q0 #q1 #o0)`.
           Finally, `(place v4 v12 #p0 #g0 #q1 #t2)` can be executed to place `v12` on `v18` at pose `#p0`.
           
           --Plan--:
           (move_base v3 #q0 #t1)
           (pick v4 v12 v13 #g0 #q0 #t0)
           (move_base #q0 #q1 #o0)
           (place v4 v12 #p0 #g0 #q1 #t2)

