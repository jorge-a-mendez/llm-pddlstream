User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v8, v6)
           Atom rock(v3)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom objective(v18)
           Atom rock(v4)
           Atom mode(v11)
           Atom type(v5, v6)
           Atom store(v16)
           Atom rock(v7)
           Atom type(v7, v6)
           Atom rock(v1)
           Atom onboard(v10, v12)
           Atom rock(v5)
           Atom camera(v10)
           Atom free(v12, v16)
           Atom objective(v17)
           Atom supports(v10, v11)
           Atom atconf(v14, v15)
           Atom type(v1, v2)
           Atom rock(v8)
           Atom rover(v12)
           Atom lander(v9)
           Atom type(v4, v2)
           Atom atconf(v12, v13)
           Atom onboard(v10, v14)
           Atom free(v14, v16)
           Atom objective(v19)
           Atom conf(v14, v15)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom above(v12, #q7, v3)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q1, #y0, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom comvisible(v12, #q3, #y2, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #q8, v8)
           Atom conf(v12, #q8)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v14, #q9, v7)
           Atom conf(v14, #q9)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #o5, v4)
           Atom above(v14, #q10, v4)
           Atom conf(v14, #q10)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom above(v12, #o5, v5)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #t2, #q1)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #t11, #q3)
           Atom motion(v12, #q8, #t16, #q3)
           Atom motion(v12, #q3, #t22, #q8)
           Atom motion(v12, #q3, #t7, v13)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #t6, #q6)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q1, #t9, #q3)
           Atom motion(v12, #q3, #t4, #q1)
           Atom motion(v14, v15, #t1, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q3, #t14, #q7)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q7, #t15, #q3)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, v15, #t21, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q0, #t8, #q3)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q3, #t0, #q0)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, v15, #t20, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v12, v13, #t3, #q5)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #t10, #q3)
           Atom motion(v12, #q3, #t5, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t12, v15)
           Atom motion(v14, #q2, #t18, #q4)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q4, #t13, #q2)
           Atom motion(v14, #q2, #t19, #q9)
           Atom motion(v14, #q9, #t17, #q2)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q2)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q10)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q7 v3 v16))
           ((sample_rock v12 #q8 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q10 v4 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((sample_rock v14 #q9 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t8 #q3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t9 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #t0 #q0))
           ((move v12 #q3 #t14 #q7))
           ((move v12 #q3 #t22 #q8))
           ((move v12 #q3 #t4 #q1))
           ((move v12 #q3 #t5 #q5))
           ((move v12 #q3 #t6 #q6))
           ((move v12 #q3 #t7 v13))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t10 #q3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t11 #q3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t15 #q3))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t16 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t2 #q1))
           ((move v12 v13 #t3 #q5))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q2))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q2 #o2 #o3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #t12 v15))
           ((move v14 #q2 #t18 #q4))
           ((move v14 #q2 #t19 #q9))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t13 #q2))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t17 #q2))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q4))
           ((move v14 v15 #t20 #q9))
           ((move v14 v15 #t21 #q10))
           ((calibrate v12 #q1 #y0 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q1 #y0 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y2 v9 v4))
           ((send_analysis v12 #q3 #y2 v9 v5))
           ((send_analysis v12 #q3 #y2 v9 v7))
           ((send_analysis v12 #q3 #y2 v9 v1))
           ((send_analysis v12 #q3 #y2 v9 v3))
           ((send_analysis v12 #q3 #y2 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_image v12 #q3 #y2 v9 v18 v11))
           ((send_image v12 #q3 #y2 v9 v17 v11))
           ((send_image v12 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), a store (v16), and several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19). There's also a specific mode (v11). The rovers are currently at different configurations (v12 at v13, v14 at v15) and both have free storage. The camera v10 is onboard both rovers and supports mode v11. The goal is `new-axiom@0()`, which essentially means:
           1. Both rovers are at some configurations. (Already true: v12 at v13, v14 at v15)
           2. Both rovers have free storage. (Already true: v12 has free v16, v14 has free v16)
           3. Three specific images have been received: v17, v18, and v19, all in mode v11.
           4. Two types of rocks, v2 and v6, have been analyzed.
           
           To achieve goal (3), the rovers need to take images of objectives v17, v18, v19 using camera v10 in mode v11, and then send those images to the lander v9. This requires the camera to be calibrated, the rover to be at a visible configuration, and no blockages.
           To achieve goal (4), the rovers need to sample rocks of type v2 and v6, and then send their analyses to the lander v9. This requires the rover to be above the rock and have free storage.
           
           Let's break down the plan:
           *   **Achieving `receivedimage` for v17, v18, v19 (mode v11):**
               *   Rover v12 can see v18 at q1, v17 at q5, and v19 at q6.
               *   Rover v14 can see v17, v18, v19 at o3.
               *   We will use rover v12 to take and send images for v17, v18, v19.
               *   Rover v12 needs to calibrate its camera, take the images, move to a communication configuration, and send the images.
           *   **Achieving `receivedanalysis` for rock types v2 and v6:**
               *   Rocks of type v2: v1, v3, v4. Rocks of type v6: v5, v7, v8.
               *   We need to analyze at least one rock of type v2 and one of type v6.
               *   Rover v12 can sample v1 (type v2) at q0, v3 (type v2) at q7, v8 (type v6) at q8, v4 (type v2) at o5, v5 (type v6) at o5, v7 (type v6) at o5.
               *   Rover v14 can sample v1 (type v2) at o5, v3 (type v2) at o5, v8 (type v6) at o5, v4 (type v2) at q10, v5 (type v6) at q4, v7 (type v6) at q9.
               *   We'll use rover v12 to sample rocks and send analysis. It has free storage.
           
           Let's use rover v12 for most of the tasks, as it's already at v13.
           
           1.  **Analyze rocks:**
               *   Move v12 to #q0 to sample v1 (type v2).
               *   Sample v1.
               *   Move v12 to #q8 to sample v8 (type v6). Since it is full, it needs to drop the current sample.
               *   Drop the rock.
               *   Sample v8.
               *   Move v12 to #q3 (comms config).
               *   Send analysis for v1 and v8.
           
           2.  **Take and send images:**
               *   Move v12 to #q1 (image config for v18).
               *   Calibrate camera v10 for v18.
               *   Take image of v18.
               *   Move v12 to #q5 (image config for v17).
               *   Calibrate camera v10 for v17.
               *   Take image of v17.
               *   Move v12 to #q6 (image config for v19).
               *   Calibrate camera v10 for v19.
               *   Take image of v19.
               *   Move v12 to #q3 (comms config).
               *   Send images for v17, v18, v19.
           
           The initial state indicates that Rover v12 is at v13 and Rover v14 is at v15. Both rovers have free storage v16. Camera v10 is onboard both rovers and supports mode v11. Lander v9 is the communication target.
           
           The goal requires receiving images of v17, v18, v19 in mode v11, and receiving analysis of rock types v2 and v6.
           
           For rock analysis:
           *   Rocks of type v2 are v1, v3, v4.
           *   Rocks of type v6 are v5, v7, v8.
           *   Rover v12 can sample v1 (type v2) at #q0.
           *   Rover v12 can sample v8 (type v6) at #q8.
           
           For image capture and transmission:
           *   Rover v12 can see v18 at #q1.
           *   Rover v12 can see v17 at #q5.
           *   Rover v12 can see v19 at #q6.
           *   Rover v12 can communicate from #q3.
           
           Let's plan the actions for rover v12.
           
           --Plan--:
           (move v12 v13 #o2 #q0)
           (sample_rock v12 #q0 v1 v16)
           (move v12 #q0 #o2 #q8)
           (drop_rock v12 v16)
           (sample_rock v12 #q8 v8 v16)
           (move v12 #q8 #t16 #q3)
           (send_analysis v12 #q3 #y2 v9 v1)
           (send_analysis v12 #q3 #y2 v9 v8)
           (move v12 #q3 #t4 #q1)
           (calibrate v12 #q1 #y0 v18 v10)
           (take_image v12 #q1 #y0 v18 v10 v11)
           (move v12 #q1 #o2 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t11 #q3)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (send_image v12 #q3 #y2 v9 v19 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. This goal is a complex axiom that requires several conditions to be met simultaneously:
           1.  `atconf(v12, v13)`
           2.  `atconf(v14, v15)`
           3.  `free(v12, v16)`
           4.  `free(v14, v16)`
           5.  `receivedimage(v17, v11)`
           6.  `receivedimage(v18, v11)`
           7.  `receivedimage(v19, v11)`
           8.  `type(?stone, v2)` and `receivedanalysis(?stone)` (meaning a rock of type v2 has been analyzed)
           9.  `type(?soil, v6)` and `receivedanalysis(?soil)` (meaning a rock of type v6 has been analyzed)
           
           Let's re-evaluate the plan to ensure all these conditions are met at the end.
           
           Initial state conditions:
           *   `atconf(v12, v13)` and `atconf(v14, v15)` are initially true. We need to ensure rovers end up in these configurations, or at valid configurations where no actions are pending that require specific configuration. However, the axiom only needs them to be at *some* configuration, and since they start there, we don't strictly need to return them to v13 and v15 if we move them. The provided goal definition for `new-axiom@0` (repeated multiple times) uses `atconf(v12, v13)` and `atconf(v14, v15)`, so the rovers *must* be in these specific configurations at the end. This is a crucial point.
           *   `free(v12, v16)` and `free(v14, v16)` are initially true. If we sample rocks, these will become `full`. We must ensure they are `free` again at the end (by dropping any sampled rocks).
           
           Actions taken in the previous plan:
           *   Rover v12 moves from v13, samples v1 (type v2), drops it, samples v8 (type v6), sends analysis for both.
           *   Then it takes and sends images for v18, v17, v19.
           
           The issues with the previous plan were likely:
           1.  **Rover configurations:** Rover v12 ends up at #q3, not v13. Rover v14 remains at v15, which is good. We need to ensure v12 returns to v13.
           2.  **Free storage:** Rover v12 samples v8 and the plan doesn't end with a `drop_rock` action if it is still holding v8, which means `free(v12, v16)` might be false. However, the previous plan *did* include a `drop_rock v12 v16` after sampling `v1`, and then sampled `v8`. So, it would end with `full(v12, v16)`. This needs to be corrected.
           
           Let's refine the plan:
           
           1.  **Analyze rocks (v12):**
               *   Move v12 to #q0 (to sample v1, type v2).
               *   Sample v1. Now v12 is `full`.
               *   Move v12 to #q3 (comms config).
               *   Send analysis for v1.
               *   Drop v1. Now v12 is `free`.
               *   Move v12 to #q8 (to sample v8, type v6).
               *   Sample v8. Now v12 is `full`.
               *   Move v12 back to #q3 (comms config).
               *   Send analysis for v8.
               *   Drop v8. Now v12 is `free`.
           
           2.  **Take and send images (v12):**
               *   Move v12 to #q1 (image config for v18).
               *   Calibrate camera v10 for v18.
               *   Take image of v18.
               *   Move v12 to #q5 (image config for v17).
               *   Calibrate camera v10 for v17.
               *   Take image of v17.
               *   Move v12 to #q6 (image config for v19).
               *   Calibrate camera v10 for v19.
               *   Take image of v19.
               *   Move v12 back to #q3 (comms config).
               *   Send images for v17, v18, v19.
           
           3.  **Return rover v12 to initial config:**
               *   Move v12 from #q3 back to v13.
           
           Now let's construct the plan with these steps.
           
           --Plan--:
           (move v12 v13 #o2 #q0)
           (sample_rock v12 #q0 v1 v16)
           (move v12 #q0 #t8 #q3)
           (send_analysis v12 #q3 #y2 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q3 #t22 #q8)
           (sample_rock v12 #q8 v8 v16)
           (move v12 #q8 #t16 #q3)
           (send_analysis v12 #q3 #y2 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q3 #t4 #q1)
           (calibrate v12 #q1 #y0 v18 v10)
           (take_image v12 #q1 #y0 v18 v10 v11)
           (move v12 #q1 #o2 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #o2 #q6)
           (calibrate v12 #q6 #y4 v19 v10)
           (take_image v12 #q6 #y4 v19 v10 v11)
           (move v12 #q6 #t11 #q3)
           (send_image v12 #q3 #y2 v9 v18 v11)
           (send_image v12 #q3 #y2 v9 v17 v11)
           (send_image v12 #q3 #y2 v9 v19 v11)
           (move v12 #q3 #t7 v13)

