User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g12: object
           #g13: object
           #g14: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p1: object
           #q34: object
           #q35: object
           #q36: object
           #q37: object
           #q38: object
           #q39: object
           #t100: object
           #t101: object
           #t102: object
           #t103: object
           #t104: object
           #t105: object
           #t106: object
           #t107: object
           #t108: object
           #t109: object
           #t110: object
           #t99: object
           @sink: object
           @stove: object
           p10: object
           p11: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v48: object
           v49: object
           v5: object
           v50: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p3 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p4 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p5 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v9 is a pose with position (-0.037, -0.499, 0.781) and quaternion (0.0, 0.0, 0.991, 0.132).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.222, 0.443, 0.781) and quaternion (0.0, 0.0, 0.002, 1.0).
           Object v13 is a pose with position (-0.192, -0.46, 0.781) and quaternion (0.0, 0.0, 0.913, -0.408).
           Object p7 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p8 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p10 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p3)
           Atom supported(v8, p3, v16)
           Atom pose(v14, p5)
           Atom supported(v14, p5, v10)
           Atom supported(v14, p5, v16)
           Atom pose(v12, p4)
           Atom supported(v12, p4, v16)
           Atom supported(v12, p4, v10)
           Atom supported(v8, p3, v10)
           Atom kin(v32, v38, p5, v34, v35, v36)
           Atom kin(v32, v33, p3, v34, v35, v36)
           Atom kin(v32, v37, p4, v34, v35, v36)
           Atom pose(v12, p7)
           Atom supported(v12, p7, v10)
           Atom pose(v14, p8)
           Atom supported(v14, p8, v10)
           Atom supported(v12, p7, v16)
           Atom pose(v8, p6)
           Atom supported(v8, p6, v10)
           Atom supported(v8, p6, v16)
           Atom supported(v14, p8, v16)
           Atom kin(v32, v33, p6, v34, v35, v36)
           Atom kin(v32, v37, p7, v34, v35, v36)
           Atom kin(v32, v38, p8, v34, v35, v36)
           Atom pose(v8, p9)
           Atom supported(v8, p9, v16)
           Atom pose(v14, p11)
           Atom supported(v14, p11, v10)
           Atom supported(v14, p11, v16)
           Atom pose(v12, p10)
           Atom supported(v12, p10, v16)
           Atom supported(v12, p10, v10)
           Atom supported(v8, p9, v10)
           Atom kin(v32, v33, p9, v48, v35, v36)
           Atom kin(v32, v37, p10, v49, v35, v36)
           Atom kin(v32, v38, p11, v50, v35, v36)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v14, #p1)
           Atom supported(v14, #p1, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g13)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g14)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g12)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p5, #g13, #o3, #o4)
           Atom kin(v4, v14, p11, #g13, #o3, #o4)
           Atom kin(v4, v14, p8, #g13, #o3, #o4)
           Atom bconf(#q36)
           Atom atraj(#t101)
           Atom kin(v4, v14, v15, #g13, #q36, #t101)
           Atom bconf(#q37)
           Atom atraj(#t102)
           Atom kin(v4, v14, #p1, #g13, #q37, #t102)
           Atom kin(v4, v8, p6, #g12, #o3, #o4)
           Atom bconf(#q35)
           Atom atraj(#t100)
           Atom kin(v4, v8, v9, #g12, #q35, #t100)
           Atom bconf(#q34)
           Atom atraj(#t99)
           Atom kin(v4, v8, p3, #g12, #q34, #t99)
           Atom kin(v4, v8, p9, #g12, #o3, #o4)
           Atom kin(v4, v12, p10, #g14, #o3, #o4)
           Atom bconf(#q39)
           Atom atraj(#t104)
           Atom kin(v4, v12, p4, #g14, #q39, #t104)
           Atom kin(v4, v12, p7, #g14, #o3, #o4)
           Atom bconf(#q38)
           Atom atraj(#t103)
           Atom kin(v4, v12, v13, #g14, #q38, #t103)
           Atom basemotion(#q35, #o0, v3)
           Atom btraj(#t106)
           Atom basemotion(v3, #t106, #q35)
           Atom basemotion(#q35, #o0, #q35)
           Atom basemotion(#q39, #o0, v3)
           Atom basemotion(#q39, #o0, #q35)
           Atom basemotion(#q35, #o0, #q39)
           Atom btraj(#t110)
           Atom basemotion(v3, #t110, #q39)
           Atom basemotion(#q39, #o0, #q39)
           Atom basemotion(#q34, #o0, v3)
           Atom basemotion(#q34, #o0, #q35)
           Atom btraj(#t105)
           Atom basemotion(v3, #t105, #q34)
           Atom basemotion(#q34, #o0, #q34)
           Atom basemotion(#q35, #o0, #q34)
           Atom basemotion(#q39, #o0, #q34)
           Atom basemotion(#q34, #o0, #q39)
           Atom basemotion(#q36, #o0, #q35)
           Atom basemotion(#q36, #o0, v3)
           Atom basemotion(#q36, #o0, #q34)
           Atom basemotion(#q36, #o0, #q39)
           Atom basemotion(#q35, #o0, #q36)
           Atom btraj(#t107)
           Atom basemotion(v3, #t107, #q36)
           Atom basemotion(#q34, #o0, #q36)
           Atom basemotion(#q39, #o0, #q36)
           Atom basemotion(#q36, #o0, #q36)
           Atom basemotion(#q38, #o0, #q35)
           Atom basemotion(#q38, #o0, v3)
           Atom basemotion(#q38, #o0, #q34)
           Atom basemotion(#q38, #o0, #q39)
           Atom basemotion(#q35, #o0, #q38)
           Atom btraj(#t109)
           Atom basemotion(v3, #t109, #q38)
           Atom basemotion(#q34, #o0, #q38)
           Atom basemotion(#q38, #o0, #q38)
           Atom basemotion(#q39, #o0, #q38)
           Atom basemotion(#q36, #o0, #q38)
           Atom basemotion(#q38, #o0, #q36)
           Atom basemotion(#q37, #o0, #q35)
           Atom basemotion(#q37, #o0, v3)
           Atom basemotion(#q37, #o0, #q34)
           Atom basemotion(#q37, #o0, #q38)
           Atom basemotion(#q37, #o0, #q39)
           Atom basemotion(#q37, #o0, #q36)
           Atom basemotion(#q37, #o0, #q37)
           Atom basemotion(#q35, #o0, #q37)
           Atom btraj(#t108)
           Atom basemotion(v3, #t108, #q37)
           Atom basemotion(#q34, #o0, #q37)
           Atom basemotion(#q38, #o0, #q37)
           Atom basemotion(#q39, #o0, #q37)
           Atom basemotion(#q36, #o0, #q37)
           Atom kin(v4, v12, #o2, #g14, #o3, #o4)
           Atom kin(v4, v14, #o2, #g13, #o3, #o4)
           Atom kin(v4, v8, #o2, #g12, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q35, #o0, #o3)
           Atom basemotion(#o3, #o0, #q35)
           Atom basemotion(#q34, #o0, #o3)
           Atom basemotion(#o3, #o0, #q34)
           Atom basemotion(#q39, #o0, #o3)
           Atom basemotion(#o3, #o0, #q39)
           Atom basemotion(#q38, #o0, #o3)
           Atom basemotion(#o3, #o0, #q38)
           Atom basemotion(#q36, #o0, #o3)
           Atom basemotion(#o3, #o0, #q36)
           Atom basemotion(#q37, #o0, #o3)
           Atom basemotion(#o3, #o0, #q37)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q34 #o0))
           ((move_base #o3 #q35 #o0))
           ((move_base #o3 #q36 #o0))
           ((move_base #o3 #q37 #o0))
           ((move_base #o3 #q38 #o0))
           ((move_base #o3 #q39 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q34 #o3 #o0))
           ((move_base #q34 #q34 #o0))
           ((move_base #q34 #q35 #o0))
           ((move_base #q34 #q36 #o0))
           ((move_base #q34 #q37 #o0))
           ((move_base #q34 #q38 #o0))
           ((move_base #q34 #q39 #o0))
           ((move_base #q34 v3 #o0))
           ((move_base #q35 #o3 #o0))
           ((move_base #q35 #q34 #o0))
           ((move_base #q35 #q35 #o0))
           ((move_base #q35 #q36 #o0))
           ((move_base #q35 #q37 #o0))
           ((move_base #q35 #q38 #o0))
           ((move_base #q35 #q39 #o0))
           ((move_base #q35 v3 #o0))
           ((move_base #q36 #o3 #o0))
           ((move_base #q36 #q34 #o0))
           ((move_base #q36 #q35 #o0))
           ((move_base #q36 #q36 #o0))
           ((move_base #q36 #q37 #o0))
           ((move_base #q36 #q38 #o0))
           ((move_base #q36 #q39 #o0))
           ((move_base #q36 v3 #o0))
           ((move_base #q37 #o3 #o0))
           ((move_base #q37 #q34 #o0))
           ((move_base #q37 #q35 #o0))
           ((move_base #q37 #q36 #o0))
           ((move_base #q37 #q37 #o0))
           ((move_base #q37 #q38 #o0))
           ((move_base #q37 #q39 #o0))
           ((move_base #q37 v3 #o0))
           ((move_base #q38 #o3 #o0))
           ((move_base #q38 #q34 #o0))
           ((move_base #q38 #q35 #o0))
           ((move_base #q38 #q36 #o0))
           ((move_base #q38 #q37 #o0))
           ((move_base #q38 #q38 #o0))
           ((move_base #q38 #q39 #o0))
           ((move_base #q38 v3 #o0))
           ((move_base #q39 #o3 #o0))
           ((move_base #q39 #q34 #o0))
           ((move_base #q39 #q35 #o0))
           ((move_base #q39 #q36 #o0))
           ((move_base #q39 #q37 #o0))
           ((move_base #q39 #q38 #o0))
           ((move_base #q39 #q39 #o0))
           ((move_base #q39 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q34 #t105))
           ((move_base v3 #q35 #t106))
           ((move_base v3 #q36 #t107))
           ((move_base v3 #q37 #t108))
           ((move_base v3 #q38 #t109))
           ((move_base v3 #q39 #t110))
           ((pick v4 v12 #o2 #g14 #o3 #o4))
           ((place v4 v12 #o2 #g14 #o3 #o4))
           ((pick v4 v12 p10 #g14 #o3 #o4))
           ((place v4 v12 p10 #g14 #o3 #o4))
           ((pick v4 v12 p4 #g14 #q39 #t104))
           ((place v4 v12 p4 #g14 #q39 #t104))
           ((pick v4 v12 p7 #g14 #o3 #o4))
           ((place v4 v12 p7 #g14 #o3 #o4))
           ((pick v4 v12 v13 #g14 #q38 #t103))
           ((place v4 v12 v13 #g14 #q38 #t103))
           ((pick v4 v14 #o2 #g13 #o3 #o4))
           ((place v4 v14 #o2 #g13 #o3 #o4))
           ((pick v4 v14 #p1 #g13 #q37 #t102))
           ((place v4 v14 #p1 #g13 #q37 #t102))
           ((pick v4 v14 p11 #g13 #o3 #o4))
           ((place v4 v14 p11 #g13 #o3 #o4))
           ((pick v4 v14 p5 #g13 #o3 #o4))
           ((place v4 v14 p5 #g13 #o3 #o4))
           ((pick v4 v14 p8 #g13 #o3 #o4))
           ((place v4 v14 p8 #g13 #o3 #o4))
           ((pick v4 v14 v15 #g13 #q36 #t101))
           ((place v4 v14 v15 #g13 #q36 #t101))
           ((pick v4 v8 #o2 #g12 #o3 #o4))
           ((place v4 v8 #o2 #g12 #o3 #o4))
           ((pick v4 v8 p3 #g12 #q34 #t99))
           ((place v4 v8 p3 #g12 #q34 #t99))
           ((pick v4 v8 p6 #g12 #o3 #o4))
           ((place v4 v8 p6 #g12 #o3 #o4))
           ((pick v4 v8 p9 #g12 #o3 #o4))
           ((place v4 v8 p9 #g12 #o3 #o4))
           ((pick v4 v8 v9 #g12 #q35 #t100))
           ((place v4 v8 v9 #g12 #q35 #t100))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q30', '#t90'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g10', '#q30', '#t84'))
           Action(name='move_base', args=('#q30', '#q29', '#t94'))
           Action(name='place', args=('v4', 'v8', 'p3', '#g10', '#q29', '#t83'))
           Action(name='move_base', args=('#q29', '#q32', '#t98'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g11', '#q32', '#t86'))
           Action(name='move_base', args=('#q32', '#q33', '#t95'))
           Action(name='place', args=('v4', 'v12', 'p4', '#g11', '#q33', '#t87'))
           Action(name='move_base', args=('#q33', '#q31', '#t97'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g9', '#q31', '#t85'))
           Action(name='move_base', args=('#q31', '#q28', '#t96'))
           Action(name='place', args=('v4', 'v14', 'p5', '#g9', '#q28', '#t82'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v14', 'p5', 'v8', 'p3')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The goal is to place objects `v8`, `v12`, and `v14` on the surface `v16`. Currently, `v8` is at `v9` on `v11`, `v12` is at `v13` on `v11`, and `v14` is at `v15` on `v11`. We need to pick up each object and place it on `v16`. Since `p3`, `p4`, and `p5` are valid poses on `v16` and are given as collision-free, they will be used. The previous plan failed due to a collision when placing `v14` at `p5` while `v8` was at `p3`. This means we need to find different placement poses on `v16` or ensure that the poses are collision-free with respect to the objects already placed.
           
           The current available placements for `v8` on `v16` are `p3`, `p6`, and `p9`. For `v12` on `v16` are `p4`, `p7`, and `p10`. For `v14` on `v16` are `p5`, `p8`, and `p11`. The previous plan put `v8` at `p3` and `v14` at `p5` and these two collided. This suggests `p3` and `p5` might be too close. We should choose poses that are further apart.
           
           Let's try placing `v8` at `p3`, `v12` at `p4`, and `v14` at `p5`.
           The previous plan failed because placing `v14` at `p5` collided with `v8` at `p3`. Let's re-evaluate the collision-free nature. Since all of the poses `p3, p4, p5` are given as collision free, it means that they are suitable for *one* object. When multiple objects are placed on the same surface, care must be taken to avoid collisions. The provided axioms `unsafepose` and `unsafeapproach` are important for checking collisions. Since `p3` and `p5` collide, we need to choose other poses for `v8` or `v14` or `v12` that are farther away.
           The current initial state already has `pose(v8, p3)`, `pose(v14, p5)` and `pose(v12, p4)` along with `supported` relations to `v16` and `v10`. These poses are *given* as collision free so they should be able to hold objects.
           However, the initial state has objects `v8` at `v9`, `v12` at `v13`, and `v14` at `v15`. So, we need to pick them up from their initial positions and place them at the new positions.
           Let's try to place them in a sequence that minimizes collisions. We'll try to pick and place `v8` at `p3`, `v12` at `p4` and `v14` at `p5`.
           
           The error from the previous attempt means that `p3` and `p5` are too close for `v8` and `v14` to occupy simultaneously. This implies that we must use the poses starting with '#' for objects `v8`, `v12` or `v14` to avoid collisions. Or we can use the other provided poses `p6, p7, p8, p9, p10, p11`.
           Let's try to place `v8` at `p3`, `v12` at `p4`, and `v14` at `p11`. This might avoid the collision, as `p11` is (-0.05, 0.0, 0.782) which is on the other side of `p4` (0.05, 0.0, 0.782) from `p3` (0.0, 0.0, 0.782). Let's see if this works.
           
           The robot is at `v3` initially.
           
           1. Pick `v8` from `v9` using arm `v4`.
           2. Move the base to `q34` to place `v8` at `p3`.
           3. Place `v8` at `p3` on `v16`.
           4. Pick `v12` from `v13` using arm `v4`.
           5. Move the base to `q39` to place `v12` at `p4`.
           6. Place `v12` at `p4` on `v16`.
           7. Pick `v14` from `v15` using arm `v4`.
           8. Move the base to `o3` to place `v14` at `p11`.
           9. Place `v14` at `p11` on `v16`.
           
           This plan uses the given poses `p3`, `p4`, and `p11` which are defined on `v16`. Since `p3` and `p5` previously collided, using `p11` instead of `p5` for `v14` might solve the problem. `p11` is (-0.05, 0.0, 0.782), `p3` is (0.0, 0.0, 0.782) and `p4` is (0.05, 0.0, 0.782). The X-coordinates are different so they should be far enough.
           
           --Plan--:
           (move_base v3 #q35 #t106)
           (pick v4 v8 v9 #g12 #q35 #t100)
           (move_base #q35 #q34 #o0)
           (place v4 v8 p3 #g12 #q34 #t99)
           (move_base #q34 #q38 #o0)
           (pick v4 v12 v13 #g14 #q38 #t103)
           (move_base #q38 #q39 #o0)
           (place v4 v12 p4 #g14 #q39 #t104)
           (move_base #q39 #q36 #o0)
           (pick v4 v14 v15 #g13 #q36 #t101)
           (move_base #q36 #o3 #o0)
           (place v4 v14 p11 #g13 #o3 #o4)

