User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v14, v16)
           Atom arm(v6)
           Atom graspable(v14)
           Atom controllable(v4)
           Atom stackable(v8, v10)
           Atom atpose(v12, v13)
           Atom aconf(v4, v5)
           Atom handempty(v6)
           Atom arm(v4)
           Atom graspable(v12)
           Atom pose(v8, v9)
           Atom pose(v14, v15)
           Atom ataconf(v6, v7)
           Atom bconf(v3)
           Atom graspable(v8)
           Atom atpose(v8, v9)
           Atom atbconf(v3)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v10)
           Atom supported(v14, v15, v11)
           Atom pose(v12, v13)
           Atom atpose(v14, v15)
           Atom handempty(v4)
           Atom canmove()
           Atom supported(v12, v13, v11)
           Atom stackable(v12, v16)
           Atom stackable(v8, v16)
           Atom ataconf(v4, v5)
           Atom aconf(v6, v7)
           Atom stackable(v14, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v16)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #p2)
           Atom supported(v14, #p2, v16)
           Atom grasp(v12, #g0)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #g1)
           Atom grasp(v8, #g2)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v12, #p0, #g0, #q1, #t2)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom bconf(#q3)
           Atom atraj(#t4)
           Atom kin(v4, v14, v15, #g1, #q3, #t4)
           Atom bconf(#q2)
           Atom atraj(#t3)
           Atom kin(v4, v14, #p2, #g1, #q2, #t3)
           Atom bconf(#q4)
           Atom atraj(#t5)
           Atom kin(v4, v8, #p1, #g2, #q4, #t5)
           Atom bconf(#q5)
           Atom atraj(#t6)
           Atom kin(v4, v8, v9, #g2, #q5, #t6)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(v3, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(v3, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q1 #t2))
           ((place v4 v12 #p0 #g0 #q1 #t2))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 #p2 #g1 #q2 #t3))
           ((place v4 v14 #p2 #g1 #q2 #t3))
           ((pick v4 v14 v15 #g1 #q3 #t4))
           ((place v4 v14 v15 #g1 #q3 #t4))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p1 #g2 #q4 #t5))
           ((place v4 v8 #p1 #g2 #q4 #t5))
           ((pick v4 v8 v9 #g2 #q5 #t6))
           ((place v4 v8 v9 #g2 #q5 #t6))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three graspable objects: `v8`, `v12`, and `v14`. They are currently at poses `v9`, `v13`, and `v15` respectively, all supported by `v11`. The goal is to place all three objects on `v16`. Since the objects are currently on `v11`, the robot needs to pick them up and place them on `v16`. The arm `v4` is available and handempty. The robot's current base configuration is `v3`.
           
           The plan will involve picking up each object from its current location and placing it onto `v16`. This means for each object, we will perform a `pick` action, potentially a `move_base` action if the base configuration for placing is different from picking, and then a `place` action. Since all target poses are on `v16`, we'll need to use the poses that are supported by `v16` and the corresponding kinematically valid configurations for those poses.
           
           Let's break down the plan for each object:
           
           1.  **Object `v8`**:
               *   Currently `on(v8, v11)` at `atpose(v8, v9)`.
               *   Goal: `on(v8, v16)`. This means placing `v8` at `#p1` (supported by `v16`).
               *   We can pick `v8` from `v9` with `kin(v4, v8, v9, #g2, #q5, #t6)`.
               *   We can place `v8` at `#p1` with `kin(v4, v8, #p1, #g2, #q4, #t5)`.
           
           2.  **Object `v12`**:
               *   Currently `on(v12, v11)` at `atpose(v12, v13)`.
               *   Goal: `on(v12, v16)`. This means placing `v12` at `#p0` (supported by `v16`).
               *   We can pick `v12` from `v13` with `kin(v4, v12, v13, #g0, #q0, #t0)`.
               *   We can place `v12` at `#p0` with `kin(v4, v12, #p0, #g0, #q1, #t2)`.
           
           3.  **Object `v14`**:
               *   Currently `on(v14, v11)` at `atpose(v14, v15)`.
               *   Goal: `on(v14, v16)`. This means placing `v14` at `#p2` (supported by `v16`).
               *   We can pick `v14` from `v15` with `kin(v4, v14, v15, #g1, #q3, #t4)`.
               *   We can place `v14` at `#p2` with `kin(v4, v14, #p2, #g1, #q2, #t3)`.
           
           We need to ensure the robot's base configuration (`atbconf`) matches the `q` parameter in the `kin` predicate for each pick and place action. We also need to move the base between actions if the required `q` changes. The `canmove()` predicate must be true before `move_base` and becomes true after `pick` and `place`.
           
           --Plan--:
           (move_base v3 #q5 #o0)
           (pick v4 v8 v9 #g2 #q5 #t6)
           (move_base #q5 #q4 #o0)
           (place v4 v8 #p1 #g2 #q4 #t5)
           (move_base #q4 #q0 #o0)
           (pick v4 v12 v13 #g0 #q0 #t0)
           (move_base #q0 #q1 #o0)
           (place v4 v12 #p0 #g0 #q1 #t2)
           (move_base #q1 #q3 #o0)
           (pick v4 v14 v15 #g1 #q3 #t4)
           (move_base #q3 #q2 #o0)
           (place v4 v14 #p2 #g1 #q2 #t3)

