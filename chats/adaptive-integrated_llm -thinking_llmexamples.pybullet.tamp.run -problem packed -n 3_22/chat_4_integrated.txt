User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p3: object
           p4: object
           p5: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v15 is a pose with position (-0.124, 0.327, 0.781) and quaternion (0.0, 0.0, 0.953, -0.303).
           Object v13 is a pose with position (-0.254, -0.085, 0.781) and quaternion (0.0, 0.0, 0.993, 0.116).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p3 is a pose with position (0.0, 0.06, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.095), (0.035, -0.025)).
           Object p4 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, 0.025), (0.035, 0.095)).
           Object p5 is a pose with position (0.0, -0.06, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v9 is a pose with position (0.192, -0.255, 0.781) and quaternion (0.0, 0.0, 0.4, 0.917).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom kin(v27, v28, p3, v29, v30, v31)
           Atom supported(v14, p3, v16)
           Atom atpose(v14, v15)
           Atom canmove()
           Atom pose(v12, p4)
           Atom kin(v27, v32, p4, v29, v30, v31)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v16)
           Atom stackable(v14, v10)
           Atom controllable(v4)
           Atom handempty(v4)
           Atom supported(v8, p5, v16)
           Atom kin(v27, v33, p5, v29, v30, v31)
           Atom stackable(v12, v10)
           Atom pose(v12, v13)
           Atom arm(v6)
           Atom stackable(v8, v16)
           Atom atpose(v12, v13)
           Atom supported(v14, v15, v11)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom aconf(v6, v7)
           Atom bconf(v3)
           Atom supported(v12, p4, v16)
           Atom supported(v12, v13, v11)
           Atom aconf(v4, v5)
           Atom pose(v14, v15)
           Atom graspable(v14)
           Atom stackable(v8, v10)
           Atom graspable(v12)
           Atom supported(v8, v9, v11)
           Atom handempty(v6)
           Atom stackable(v14, v16)
           Atom pose(v14, p3)
           Atom pose(v8, p5)
           Atom arm(v4)
           Atom atpose(v8, v9)
           Atom pose(v8, v9)
           Atom atbconf(v3)
           Atom grasp(v14, #g0)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom grasp(v12, #g2)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v14, #o2, v10)
           Atom grasp(v8, #g1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom supported(v8, #o2, v16)
           Atom supported(v12, #o2, v10)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, v15, #g0, #q0, #t0)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, p3, #g0, #q2, #t2)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v12, p4, #g2, #q4, #t4)
           Atom bconf(#q5)
           Atom atraj(#t10)
           Atom kin(v4, v12, v13, #g2, #q5, #t10)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, v9, #g1, #q1, #t1)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v8, p5, #g1, #q3, #t3)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t12)
           Atom basemotion(#q1, #t12, #q3)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q1, #o0, #q4)
           Atom btraj(#t15)
           Atom basemotion(#q4, #t15, #q1)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom btraj(#t13)
           Atom basemotion(#q5, #t13, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t14)
           Atom basemotion(#q2, #t14, #q5)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t11)
           Atom basemotion(#q0, #t11, #q2)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q2 #t11))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q3 #t12))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t14))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q1 #t15))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q4 #t13))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t5))
           ((move_base v3 #q1 #t6))
           ((move_base v3 #q2 #t7))
           ((move_base v3 #q3 #t8))
           ((move_base v3 #q4 #t9))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p4 #g2 #q4 #t4))
           ((place v4 v12 p4 #g2 #q4 #t4))
           ((pick v4 v12 v13 #g2 #q5 #t10))
           ((place v4 v12 v13 #g2 #q5 #t10))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 p3 #g0 #q2 #t2))
           ((place v4 v14 p3 #g0 #q2 #t2))
           ((pick v4 v14 v15 #g0 #q0 #t0))
           ((place v4 v14 v15 #g0 #q0 #t0))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 p5 #g1 #q3 #t3))
           ((place v4 v8 p5 #g1 #q3 #t3))
           ((pick v4 v8 v9 #g1 #q1 #t1))
           ((place v4 v8 v9 #g1 #q1 #t1))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Strategic Plan for Object Placement**
           
           My goal is to place three objects (v8, v12, v14) onto the surface v16, specifically achieving the states `on(v8, v16)`, `on(v12, v16)`, and `on(v14, v16)`.  The initial state reveals that these objects are currently located on surface v11.
           
           To accomplish this, I've devised a multi-step plan involving the robotic arm (v4). The plan hinges on a sequence of pick-and-place actions, utilizing pre-defined poses and base configurations.
           
           1.  **Pick and Place v14:**  I will begin by moving the robot base to configuration `#q0`, suitable for picking up object v14 from its current pose `v15` on v11, using a grasp `#g0` and trajectory `#t0`.  Subsequently, I will maneuver the robot to base configuration `#q2` and place v14 onto pre-defined pose `p3` on v16.
           
           2.  **Pick and Place v12:**  Next, I'll shift the robot base to configuration `#q5` to enable picking v12 from its current position `v13` on surface v11 using grasp `#g2` and trajectory `#t10`.  The robot base will then move to configuration `#q4`, allowing me to place v12 onto pose `p4` on the target surface v16.
           
           3.  **Pick and Place v8:**  Finally, I will position the robot to configuration `#q1`, enabling the picking of object v8 from pose `v9` on v11 using grasp `#g1` and trajectory `#t1`. The final base movement is to configuration `#q3`, which positions the robot for placing object v8 on pose `p5` on surface v16.
           
           The placement of the objects on v16 is possible using poses `p3`, `p4`, and `p5`. These poses all fit within the bounding box of v16, and will be stable for supporting v14, v12, and v8. 
           
           The resulting plan, if successful, will place all objects on the desired surface and satisfy the task's stated goal.
           
           **Detailed Action Sequence:**
           
           The final plan is as follows:
           
           1.  `move_base v3 #q0 #t5`
           2.  `pick v4 v14 v15 #g0 #q0 #t0`
           3.  `move_base #q0 #q2 #t11`
           4.  `place v4 v14 p3 #g0 #q2 #t2`
           5.  `move_base #q2 #q5 #t14`
           6.  `pick v4 v12 v13 #g2 #q5 #t10`
           7.  `move_base #q5 #q4 #t13`
           8.  `place v4 v12 p4 #g2 #q4 #t4`
           9.  `move_base #q4 #q1 #t15`
           10. `pick v4 v8 v9 #g1 #q1 #t1`
           11. `move_base #q1 #q3 #t12`
           12. `place v4 v8 p5 #g1 #q3 #t3`
           
)

Model:     **Strategic Plan for Object Placement**
           
           My goal is to place three objects (v8, v12, v14) onto the surface v16, specifically achieving the states `on(v8, v16)`, `on(v12, v16)`, and `on(v14, v16)`.  The initial state reveals that these objects are currently located on surface v11.
           
           To accomplish this, I've devised a multi-step plan involving the robotic arm (v4). The plan hinges on a sequence of pick-and-place actions, utilizing pre-defined poses and base configurations.
           
           1.  **Pick and Place v14:**  I will begin by moving the robot base to configuration `#q0`, suitable for picking up object v14 from its current pose `v15` on v11, using a grasp `#g0` and trajectory `#t0`.  Subsequently, I will maneuver the robot to base configuration `#q2` and place v14 onto pre-defined pose `p3` on v16.
           
           2.  **Pick and Place v12:**  Next, I'll shift the robot base to configuration `#q5` to enable picking v12 from its current position `v13` on surface v11 using grasp `#g2` and trajectory `#t10`.  The robot base will then move to configuration `#q4`, allowing me to place v12 onto pose `p4` on the target surface v16.
           
           3.  **Pick and Place v8:**  Finally, I will position the robot to configuration `#q1`, enabling the picking of object v8 from pose `v9` on v11 using grasp `#g1` and trajectory `#t1`. The final base movement is to configuration `#q3`, which positions the robot for placing object v8 on pose `p5` on surface v16.
           
           The placement of the objects on v16 is possible using poses `p3`, `p4`, and `p5`. These poses all fit within the bounding box of v16, and will be stable for supporting v14, v12, and v8. 
           
           The resulting plan, if successful, will place all objects on the desired surface and satisfy the task's stated goal.
           
           **Detailed Action Sequence:**
           
           The final plan is as follows:
           
           1.  `move_base v3 #q0 #t5`
           2.  `pick v4 v14 v15 #g0 #q0 #t0`
           3.  `move_base #q0 #q2 #t11`
           4.  `place v4 v14 p3 #g0 #q2 #t2`
           5.  `move_base #q2 #q5 #t14`
           6.  `pick v4 v12 v13 #g2 #q5 #t10`
           7.  `move_base #q5 #q4 #t13`
           8.  `place v4 v12 p4 #g2 #q4 #t4`
           9.  `move_base #q4 #q1 #t15`
           10. `pick v4 v8 v9 #g1 #q1 #t1`
           11. `move_base #q1 #q3 #t12`
           12. `place v4 v8 p5 #g1 #q3 #t3`
           

