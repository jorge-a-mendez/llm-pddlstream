User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #p3: object
           #p4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v18, v19, v11)
           Atom stackable(v18, v20)
           Atom arm(v4)
           Atom canmove()
           Atom stackable(v12, v20)
           Atom pose(v16, v17)
           Atom handempty(v6)
           Atom graspable(v12)
           Atom graspable(v14)
           Atom supported(v14, v15, v11)
           Atom graspable(v18)
           Atom stackable(v14, v20)
           Atom atbconf(v3)
           Atom atpose(v14, v15)
           Atom atpose(v18, v19)
           Atom ataconf(v4, v5)
           Atom ataconf(v6, v7)
           Atom handempty(v4)
           Atom pose(v12, v13)
           Atom stackable(v18, v10)
           Atom arm(v6)
           Atom stackable(v12, v10)
           Atom pose(v8, v9)
           Atom stackable(v16, v20)
           Atom controllable(v4)
           Atom pose(v18, v19)
           Atom graspable(v16)
           Atom supported(v16, v17, v11)
           Atom stackable(v16, v10)
           Atom aconf(v6, v7)
           Atom aconf(v4, v5)
           Atom graspable(v8)
           Atom atpose(v16, v17)
           Atom supported(v12, v13, v11)
           Atom atpose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom pose(v14, v15)
           Atom bconf(v3)
           Atom stackable(v8, v10)
           Atom stackable(v8, v20)
           Atom atpose(v12, v13)
           Atom stackable(v14, v10)
           Atom pose(v18, #p1)
           Atom supported(v18, #p1, v20)
           Atom pose(v12, #p2)
           Atom supported(v12, #p2, v20)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v16, #g3)
           Atom pose(v14, #p4)
           Atom supported(v14, #p4, v20)
           Atom grasp(v18, #g0)
           Atom pose(v16, #p0)
           Atom supported(v16, #p0, v20)
           Atom pose(v8, #p3)
           Atom supported(v8, #p3, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #g4)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom grasp(v12, #g1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, #g2)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom bconf(#q6)
           Atom atraj(#t9)
           Atom kin(v4, v16, v17, #g3, #q6, #t9)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v18, #p1, #g0, #q0, #t0)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v18, v19, #g0, #q4, #t7)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v16, #p0, #g3, #q5, #t8)
           Atom bconf(#q9)
           Atom atraj(#t12)
           Atom kin(v4, v14, v15, #g4, #q9, #t12)
           Atom bconf(#q7)
           Atom atraj(#t10)
           Atom kin(v4, v14, #p4, #g4, #q7, #t10)
           Atom bconf(#q8)
           Atom atraj(#t11)
           Atom kin(v4, v12, #p2, #g1, #q8, #t11)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g1, #q1, #t1)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v8, #p3, #g2, #q3, #t6)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v8, v9, #g2, #q2, #t2)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q9)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q2, #o0, #q6)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q9, #o0, #q1)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q6, #o0, #q1)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, #q7)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q0, #o0, #q8)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, #o2, #g3, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v18, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g4, #o3, #o4)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p2 #g1 #q8 #t11))
           ((place v4 v12 #p2 #g1 #q8 #t11))
           ((pick v4 v12 v13 #g1 #q1 #t1))
           ((place v4 v12 v13 #g1 #q1 #t1))
           ((pick v4 v14 #o2 #g4 #o3 #o4))
           ((place v4 v14 #o2 #g4 #o3 #o4))
           ((pick v4 v14 #p4 #g4 #q7 #t10))
           ((place v4 v14 #p4 #g4 #q7 #t10))
           ((pick v4 v14 v15 #g4 #q9 #t12))
           ((place v4 v14 v15 #g4 #q9 #t12))
           ((pick v4 v16 #o2 #g3 #o3 #o4))
           ((place v4 v16 #o2 #g3 #o3 #o4))
           ((pick v4 v16 #p0 #g3 #q5 #t8))
           ((place v4 v16 #p0 #g3 #q5 #t8))
           ((pick v4 v16 v17 #g3 #q6 #t9))
           ((place v4 v16 v17 #g3 #q6 #t9))
           ((pick v4 v18 #o2 #g0 #o3 #o4))
           ((place v4 v18 #o2 #g0 #o3 #o4))
           ((pick v4 v18 #p1 #g0 #q0 #t0))
           ((place v4 v18 #p1 #g0 #q0 #t0))
           ((pick v4 v18 v19 #g0 #q4 #t7))
           ((place v4 v18 v19 #g0 #q4 #t7))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p3 #g2 #q3 #t6))
           ((place v4 v8 #p3 #g2 #q3 #t6))
           ((pick v4 v8 v9 #g2 #q2 #t2))
           ((place v4 v8 v9 #g2 #q2 #t2))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Here's the plan I've devised to move the objects onto `v20`:**
           
           I'll tackle this by handling each object individually in a sequence of `pick`, `move_base`, and `place` actions. My primary strategy is to move the robot's base between the designated pick and place configurations for each object.
           
           Here's how it'll work, using `v18` as the first example (but repeating for the other four objects):
           
           1.  **Move the Base:** The robot's base will initially be at `v3`. I need to move it to a base configuration associated with picking `v18`. I move to `#q4` via `(move_base v3 #q4 #o0)`.
           
           2.  **Pick:** Then, I'll execute the `(pick)` action to lift `v18` from its current location and the robot arm will grasp `v18` at configuration `#g0`, trajectory `#t7`.
           
           3.  **Move the Base (Again):** Now, with `v18` held by the arm, the robot base moves from its current configuration (#q4) to another configuration associated with placing the object on `v20`. So, `move_base` from `#q4` to `#q0`.
           
           4.  **Place:** Finally, I'll use the `(place)` action to place `v18` onto `v20`. The action is successful since it matches the supported facts.
           
           This process will repeat for the other four objects: `v16`, `v14`, `v12`, and `v8`, adjusting the base configuration for each object's pick-place operations.
           
           **In essence, the entire plan boils down to this pattern for each object:**
           
           *   `move_base` (from the previous place config) -> `pick_pose`
           *   `pick`
           *   `move_base` (from the pick_pose) -> `place_pose`
           *   `place`
           
           I will need exactly 10 moves (initial plus the 2 move_base actions for each of the 5 objects). All actions are available.
           The order might affect the cost, but for this simpler version, the cost only depends on the `move_base` actions which are increasing with distance.
           All constraints and preconditions in this plan match the allowed actions.
           
)

Model:     **Here's the plan I've devised to move the objects onto `v20`:**
           
           I'll tackle this by handling each object individually in a sequence of `pick`, `move_base`, and `place` actions. My primary strategy is to move the robot's base between the designated pick and place configurations for each object.
           
           Here's how it'll work, using `v18` as the first example (but repeating for the other four objects):
           
           1.  **Move the Base:** The robot's base will initially be at `v3`. I need to move it to a base configuration associated with picking `v18`. I move to `#q4` via `(move_base v3 #q4 #o0)`.
           
           2.  **Pick:** Then, I'll execute the `(pick)` action to lift `v18` from its current location and the robot arm will grasp `v18` at configuration `#g0`, trajectory `#t7`.
           
           3.  **Move the Base (Again):** Now, with `v18` held by the arm, the robot base moves from its current configuration (#q4) to another configuration associated with placing the object on `v20`. So, `move_base` from `#q4` to `#q0`.
           
           4.  **Place:** Finally, I'll use the `(place)` action to place `v18` onto `v20`. The action is successful since it matches the supported facts.
           
           This process will repeat for the other four objects: `v16`, `v14`, `v12`, and `v8`, adjusting the base configuration for each object's pick-place operations.
           
           **In essence, the entire plan boils down to this pattern for each object:**
           
           *   `move_base` (from the previous place config) -> `pick_pose`
           *   `pick`
           *   `move_base` (from the pick_pose) -> `place_pose`
           *   `place`
           
           I will need exactly 10 moves (initial plus the 2 move_base actions for each of the 5 objects). All actions are available.
           The order might affect the cost, but for this simpler version, the cost only depends on the `move_base` actions which are increasing with distance.
           All constraints and preconditions in this plan match the allowed actions.
           

