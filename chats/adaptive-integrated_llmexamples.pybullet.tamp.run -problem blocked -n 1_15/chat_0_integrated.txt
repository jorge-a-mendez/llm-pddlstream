User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v9 is a pose with position (4.5, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.493, -0.581), (-4.398, -0.486)).
           Object v15 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.315, 0.265), (4.385, 0.335)).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v13 is a pose with position (-4.446, -0.533, 0.801) and quaternion (0.0, 0.0, -0.863, 0.506).
           Object v16 is a pose with position (4.35, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.0)).
           Object v5 is an arm configuration with joint values (0.393, 0.333, 0.0, -1.522, 2.722, -1.219, -2.989).
           Object v3 is a base configuration with (x, y, theta) = (2.5, 0.0, 0.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.465, 0.265), (4.535, 0.335)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.8, -0.6), (-4.2, 0.6)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v8, v17)
           Atom supported(v15, v16, v11)
           Atom supported(v8, v9, v11)
           Atom bconf(v3)
           Atom aconf(v6, v7)
           Atom pose(v12, v13)
           Atom stackable(v15, v10)
           Atom controllable(v4)
           Atom handempty(v6)
           Atom stackable(v12, v18)
           Atom stackable(v8, v10)
           Atom stackable(v12, v10)
           Atom atpose(v8, v9)
           Atom handempty(v4)
           Atom supported(v12, v13, v14)
           Atom atbconf(v3)
           Atom graspable(v15)
           Atom pose(v15, v16)
           Atom arm(v6)
           Atom atpose(v15, v16)
           Atom graspable(v8)
           Atom ataconf(v6, v7)
           Atom canmove()
           Atom arm(v4)
           Atom ataconf(v4, v5)
           Atom pose(v8, v9)
           Atom stackable(v8, v18)
           Atom aconf(v4, v5)
           Atom graspable(v12)
           Atom type(v12, v17)
           Atom atpose(v12, v13)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom grasp(v8, #o1)
           Atom grasp(v15, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `(new-axiom@0)` means that the object `green` (which is `v12` in our case, as determined by `type(v12, v17)`) should be `on` surface `v18`. From the initial state, `v12` is at `v13` which is supported by `v14`. Therefore, to achieve the goal, `v12` needs to be moved from `v14` to `v18`. However, the only available action is `move_base`. No pick or place actions are available. This means we cannot move `v12` to `v18`. Therefore, the goal is unreachable.

