User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.465, 0.265), (4.535, 0.335)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.8, -0.6), (-4.2, 0.6)).
           Object v3 is a base configuration with (x, y, theta) = (2.5, 0.0, 0.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.349, 0.347), (-4.251, 0.445)).
           Object v9 is a pose with position (4.5, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.315, 0.265), (4.385, 0.335)).
           Object v5 is an arm configuration with joint values (0.393, 0.333, 0.0, -1.522, 2.722, -1.219, -2.989).
           Object v13 is a pose with position (-4.3, 0.396, 0.801) and quaternion (0.0, 0.0, 0.89, 0.455).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v16 is a pose with position (4.35, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.0)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom supported(v15, v16, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v15, v16)
           Atom type(v12, v17)
           Atom stackable(v8, v18)
           Atom stackable(v8, v10)
           Atom bconf(v3)
           Atom pose(v8, v9)
           Atom supported(v12, v13, v14)
           Atom stackable(v15, v10)
           Atom arm(v4)
           Atom handempty(v4)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v18)
           Atom atpose(v12, v13)
           Atom graspable(v15)
           Atom aconf(v4, v5)
           Atom handempty(v6)
           Atom canmove()
           Atom atpose(v8, v9)
           Atom aconf(v6, v7)
           Atom pose(v15, v16)
           Atom type(v8, v17)
           Atom arm(v6)
           Atom atbconf(v3)
           Atom controllable(v4)
           Atom stackable(v12, v10)
           Atom ataconf(v4, v5)
           Atom grasp(v8, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom supported(v12, #o2, v18)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v8, #o2, v18)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, including `v8`, `v12`, and `v15`, which are graspable and stackable. `v11` is a surface with AABB `((4.2, -0.6), (4.8, 0.6))`, and `v14` is a surface with AABB `((-4.8, -0.6), (-4.2, 0.6))`. `v18` is a surface with AABB `((4.2, -0.6), (4.8, 0.0))`. `v10` is also a surface, but its AABB is not specified. The robot has two arms, `v4` and `v6`, both currently empty. The robot is at base configuration `v3`.
           
           The goal `new-axiom@0()` can be satisfied if `on(green, v18)` and `type(green, v17)` are true. The "green" object is an alias for `v8` (from the PDDL definition of `new-axiom@0()`). `type(v8, v17)` is already true in the initial state. Therefore, the goal simplifies to achieving `on(v8, v18)`.
           
           From the initial state, `atpose(v8, v9)` and `supported(v8, v9, v11)` are true, meaning `v8` is currently on `v11`. To achieve `on(v8, v18)`, `v8` needs to be moved from `v11` to `v18`. Since `v18` is a dummy surface, the placement on `v18` must still be a collision free stable placement within some other surface, and the continuous value for the surface will be assigned to a real object. `v11` has an AABB of `((4.2, -0.6), (4.8, 0.6))`, and `v18` has an AABB of `((4.2, -0.6), (4.8, 0.0))`. `v18` is essentially the front half of `v11`. `v9` is at (4.5, 0.3, 0.8), which is on `v11` but not on `v18` (since the y coordinate is 0.3 which is not within `v18`'s y range of (-0.6, 0.0)). Therefore, a new pose for `v8` on `v18` (or on a part of `v11` that `v18` occupies) needs to be found.
           
           However, the only available action instance is `((move_base v3 v3 #o0))`. This action does not allow for picking or placing objects. Since the goal requires moving `v8` to `v18` (which would necessitate a pick and a place action), and these actions are not available, the goal cannot be achieved.
           
           Therefore, the goal is not achievable with the given set of available actions.

