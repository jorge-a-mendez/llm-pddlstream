User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g1: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t10: object
           #t11: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.201, -0.602), (4.298, -0.505)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.8, -0.6), (-4.2, 0.6)).
           Object v33 is a base configuration with (x, y, theta) = (3.565, -0.812, -0.051).
           Object v29 is a base configuration with (x, y, theta) = (4.023, 0.04, -0.113).
           Object v21 is a grasp with position (0.005, 0.0, -0.04) and quaternion (0.0, 0.0, 0.707, 0.707) relative to the target object.
           Object v19 is a pose with position (4.726, -0.184, 0.802) and quaternion (0.0, 0.0, -0.384, 0.923).
           Object v3 is a base configuration with (x, y, theta) = (2.5, 0.0, 0.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.349, 0.347), (-4.251, 0.445)).
           Object v9 is a pose with position (4.5, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v20 is a grasp with position (0.005, 0.0, -0.04) and quaternion (0.0, -0.0, 1.0, -0.0) relative to the target object.
           Object v15 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.315, 0.265), (4.385, 0.335)).
           Object v23 is a grasp with position (0.005, 0.0, -0.04) and quaternion (0.0, 0.0, -0.707, 0.707) relative to the target object.
           Object v24 is a base configuration with (x, y, theta) = (4.888, -1.165, 0.9).
           Object v31 is a base configuration with (x, y, theta) = (4.863, -1.313, 0.627).
           Object v5 is an arm configuration with joint values (0.393, 0.333, 0.0, -1.522, 2.722, -1.219, -2.989).
           Object v22 is a grasp with position (0.005, 0.0, -0.04) and quaternion (0.0, 0.0, 0.0, 1.0) relative to the target object.
           Object v13 is a pose with position (-4.3, 0.396, 0.801) and quaternion (0.0, 0.0, 0.89, 0.455).
           Object v35 is a pose with position (4.343, -0.558, 0.802) and quaternion (0.0, 0.0, 0.755, 0.656).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v16 is a pose with position (4.35, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v28 is a pose with position (4.327, -0.473, 0.802) and quaternion (0.0, 0.0, 0.305, 0.952).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.0)).
           Object v26 is a base configuration with (x, y, theta) = (4.299, -1.066, 0.21).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom supported(v15, v16, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v15, v16)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v22, v15, v16)
           Atom type(v12, v17)
           Atom ~test-cfree-traj-pose-negative(v30, v15, v16)
           Atom stackable(v8, v18)
           Atom stackable(v8, v10)
           Atom bconf(v3)
           Atom pose(v8, v9)
           Atom supported(v12, v13, v14)
           Atom stackable(v15, v10)
           Atom arm(v4)
           Atom handempty(v4)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v18)
           Atom atpose(v12, v13)
           Atom graspable(v15)
           Atom aconf(v4, v5)
           Atom handempty(v6)
           Atom canmove()
           Atom atpose(v8, v9)
           Atom aconf(v6, v7)
           Atom pose(v15, v16)
           Atom type(v8, v17)
           Atom arm(v6)
           Atom atbconf(v3)
           Atom controllable(v4)
           Atom stackable(v12, v10)
           Atom ataconf(v4, v5)
           Atom grasp(v8, v21)
           Atom grasp(v8, v23)
           Atom grasp(v8, v22)
           Atom grasp(v8, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, v9, v22, #q2, #t4)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #g1)
           Atom pose(v8, v28)
           Atom supported(v8, v28, v18)
           Atom pose(v8, v35)
           Atom supported(v8, v35, v18)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom grasp(v15, #o1)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v20, v24, v25)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v8, v19, v22, #q3, #t6)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v23, v26, v27)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v3, #o0, v26)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v26, #o0, v24)
           Atom bconf(v31)
           Atom atraj(v32)
           Atom kin(v4, v8, v28, v23, v31, v32)
           Atom bconf(v29)
           Atom atraj(v30)
           Atom kin(v4, v8, v28, v20, v29, v30)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v28, v22, #o3, #o4)
           Atom bconf(v33)
           Atom atraj(v34)
           Atom kin(v4, v8, v28, v21, v33, v34)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q2, #o0, v24)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, v26)
           Atom basemotion(v26, #o0, #q2)
           Atom basemotion(v24, #o0, #q2)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v12, v13, #g1, #q4, #t8)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(v26, #o0, #q3)
           Atom btraj(#t7)
           Atom basemotion(#q2, #t7, #q3)
           Atom basemotion(v24, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, v26)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, v24)
           Atom basemotion(#q3, #o0, #q3)
           Atom bconf(#q5)
           Atom atraj(#t9)
           Atom kin(v4, v12, #p1, #g1, #q5, #t9)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, v24)
           Atom btraj(#t10)
           Atom basemotion(#q3, #t10, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(v26, #o0, #q4)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, v26)
           Atom basemotion(v24, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(v26, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, v26)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(v24, #o0, #q5)
           Atom basemotion(#q5, #o0, v24)
           Atom basemotion(v3, #o0, #q5)
           Atom btraj(#t11)
           Atom basemotion(#q3, #t11, #q5)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, v24)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q3 #t7))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v24 #o0))
           ((move_base #q3 v26 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q4 #t10))
           ((move_base #q3 #q5 #t11))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v24 #o0))
           ((move_base #q4 v26 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v24 #o0))
           ((move_base #q5 v26 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q3 #o0))
           ((move_base v24 #q4 #o0))
           ((move_base v24 #q5 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q3 #o0))
           ((move_base v26 #q4 #o0))
           ((move_base v26 #q5 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p1 #g1 #q5 #t9))
           ((place v4 v12 #p1 #g1 #q5 #t9))
           ((pick v4 v12 v13 #g1 #q4 #t8))
           ((place v4 v12 v13 #g1 #q4 #t8))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 v24 v25))
           ((place v4 v8 v19 v20 v24 v25))
           ((pick v4 v8 v19 v22 #q3 #t6))
           ((place v4 v8 v19 v22 #q3 #t6))
           ((pick v4 v8 v19 v23 v26 v27))
           ((place v4 v8 v19 v23 v26 v27))
           ((pick v4 v8 v28 v22 #o3 #o4))
           ((place v4 v8 v28 v22 #o3 #o4))
           ((pick v4 v8 v9 v22 #q2 #t4))
           ((place v4 v8 v9 v22 #q2 #t4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, some of which are graspable and stackable. The robot has two arms, v4 and v6, both of which are initially empty. Objects v8, v12, and v15 are present in the scene. Object v8 is currently at pose v9, on surface v11. Object v12 is at pose v13, on surface v14. Object v15 is at pose v16, on surface v11. The robot's base is at configuration v3, and arm v4 is at configuration v5. The goal is `new-axiom@0()`, which states that object v8 (green object) is on surface v18 (green table) and is of type v17 (food item). This means the robot needs to pick up object v8 from its current location and place it on surface v18.
           
           There are several pick and place actions available for object v8. The most relevant ones for placing it on v18 are those involving poses v19, v28, and v35, all of which are supported by v18. I will choose to place object v8 at pose v19 using grasp v22.
           
           Here is the plan:
           1. Move the robot's base to a configuration where it can pick up object v8 from pose v9. The `kin` predicate for `(v4, v8, v9, v22, #q2, #t4)` indicates that base configuration `#q2` allows picking `v8` from `v9` with `v22` grasp.
           2. Pick up object v8 from pose v9 using arm v4 and grasp v22.
           3. Move the robot's base to a configuration where it can place object v8 at pose v19 on surface v18. The `kin` predicate for `(v4, v8, v19, v22, #q3, #t6)` indicates that base configuration `#q3` allows placing `v8` at `v19` with `v22` grasp.
           4. Place object v8 at pose v19 using arm v4 and grasp v22.
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v8 v9 v22 #q2 #t4)
           (move_base #q2 #q3 #t7)
           (place v4 v8 v19 v22 #q3 #t6)
           
           --Poses--:

