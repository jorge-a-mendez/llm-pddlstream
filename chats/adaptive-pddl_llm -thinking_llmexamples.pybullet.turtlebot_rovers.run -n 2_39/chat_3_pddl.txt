User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v7, v6)
           Atom type(v5, v6)
           Atom rock(v3)
           Atom rock(v7)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom onboard(v10, v12)
           Atom type(v4, v2)
           Atom rover(v14)
           Atom type(v3, v2)
           Atom camera(v10)
           Atom mode(v11)
           Atom type(v1, v2)
           Atom rover(v12)
           Atom rock(v1)
           Atom supports(v10, v11)
           Atom rock(v5)
           Atom onboard(v10, v14)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom rock(v4)
           Atom rock(v8)
           Atom conf(v12, v13)
           Atom atconf(v14, v15)
           Atom lander(v9)
           Atom atconf(v12, v13)
           Atom objective(v18)
           Atom store(v16)
           Atom imagevisible(v12, #q3, #y2, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #q2, v7)
           Atom conf(v12, #q2)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q0, #y0, v17)
           Atom imagerange(v12, #q0, v17)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q6, #y3, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y3)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #q5, v7)
           Atom conf(v14, #q5)
           Atom above(v14, #o5, v4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q4, v3)
           Atom conf(v12, #q4)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v5)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v1)
           Atom above(v12, #o5, v1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t2, v13)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #t8, v15)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #t6, #q1)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q1, #t9, #q3)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #t5, #q1)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q2, #t3, #q1)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q1, #t1, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #t4, #q1)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q1, #t11, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v14, #q5, #t10, #q6)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, v15, #t7, #q5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q5)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #q5, #o2, #o3)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v7 v16))
           ((sample_rock v12 #q4 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q5 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t5 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #t1 #q2))
           ((move v12 #q1 #t11 #q4))
           ((move v12 #q1 #t2 v13))
           ((move v12 #q1 #t9 #q3))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t3 #q1))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t6 #q1))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t4 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q5))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q5 #o2 #o3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t10 #q6))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #t8 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t7 #q5))
           ((calibrate v12 #q0 #y0 v17 v10))
           ((calibrate v12 #q3 #y2 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((take_image v12 #q0 #y0 v17 v10 v11))
           ((take_image v12 #q3 #y2 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y3 v9 v1))
           ((send_analysis v14 #q6 #y3 v9 v3))
           ((send_analysis v14 #q6 #y3 v9 v4))
           ((send_analysis v14 #q6 #y3 v9 v5))
           ((send_analysis v14 #q6 #y3 v9 v8))
           ((send_analysis v14 #q6 #y3 v9 v7))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q6 #y3 v9 v17 v11))
           ((send_image v14 #q6 #y3 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Strategic Deployment for Axiom Achievement**
           
           Okay, here's my plan to nail down this `new-axiom@0()` objective.  My main goal is to satisfy each condition, and I'll lay it all out for you, step-by-step.
           
           Firstly,  the rovers, `v12` and `v14`, are already in their starting configurations (`atconf(v12, v13)`, `atconf(v14, v15)`) and have a free storage space (`free(v12, v16)`, `free(v14, v16)`).  That's great, that's already a good start, so let's start with getting those images and analyses done.
           
           For images, I'm going to task rover `v12`. I need images of `v17` and `v18` in mode `v11`.  Here's how I see it:
           
           1.  **Prep and Position:** I'll move `v12` around (from `v13` to `#q0`, then `#q1`, and back to `#q3` then `#q1`) to line up for the images and communication.  The motions available are `#t0`, `#t5`, `#t11`, `#t4`, `#t9` and `#t6`, which get me around.
           2.  **Calibrate & Capture:** At each location, I'll calibrate `v10` and then use `take_image` to grab the picture.  
           3.  **Communication:** I'll use `send_image` from the right configurations to get those images to be "received".  Easy!
           
           Next, I need to get analysis of some stone and some soil. I'm going to pick `v3` and `v7`, which are of the right types (`v2` and `v6`).
           
           1.  **Sample collection:** `v12` will grab `v3` in a sampling action when at `#q4`. Rover `v14` will pick up `v7` when it is at `#q5`.
           2.  **Report the Analysis:** Then rover `v12` will report on `v3` from `#q1`, and `v14` will report on `v7` from `#q6`.
           
           I have to be careful with the storage on the rovers. I'll need to use `drop_rock` on `v12` and on `v14` to make sure the store is free, so I do not have to move around with full storage!
           
           Finally, to fulfill the last two conditions, I'll move `v12` from `#q1` to `#q2`, and from `#q3` back to `#q1`. This way, both rovers return to their starting positions and the storage areas are ready.
           
           **The Strategy (in Detail):**
           
           **Rover v12 Operations:**
           
           1.  `move v12 v13 #t0 #q0` (to start)
           2.  `calibrate v12 #q0 #y0 v17 v10`
           3.  `take_image v12 #q0 #y0 v17 v10 v11`
           4.  `move v12 #q0 #t5 #q1` (to transmit)
           5.  `send_image v12 #q1 #y1 v9 v17 v11`  (image of v17)
           6.  `move v12 #q1 #t11 #q4` (to sample v3)
           7.  `sample_rock v12 #q4 v3 v16`
           8.  `move v12 #q4 #t4 #q1` (to transmit)
           9.  `send_analysis v12 #q1 #y1 v9 v3` (analysis of v3)
           10. `drop_rock v12 v16` (make free storage)
           11. `move v12 #q1 #t9 #q3` (for image)
           12. `calibrate v12 #q3 #y2 v18 v10`
           13. `take_image v12 #q3 #y2 v18 v10 v11`
           14. `move v12 #q3 #t6 #q1` (to transmit)
           15. `send_image v12 #q1 #y1 v9 v18 v11` (image of v18)
           16.
)

Model:     **Strategic Deployment for Axiom Achievement**
           
           Okay, here's my plan to nail down this `new-axiom@0()` objective.  My main goal is to satisfy each condition, and I'll lay it all out for you, step-by-step.
           
           Firstly,  the rovers, `v12` and `v14`, are already in their starting configurations (`atconf(v12, v13)`, `atconf(v14, v15)`) and have a free storage space (`free(v12, v16)`, `free(v14, v16)`).  That's great, that's already a good start, so let's start with getting those images and analyses done.
           
           For images, I'm going to task rover `v12`. I need images of `v17` and `v18` in mode `v11`.  Here's how I see it:
           
           1.  **Prep and Position:** I'll move `v12` around (from `v13` to `#q0`, then `#q1`, and back to `#q3` then `#q1`) to line up for the images and communication.  The motions available are `#t0`, `#t5`, `#t11`, `#t4`, `#t9` and `#t6`, which get me around.
           2.  **Calibrate & Capture:** At each location, I'll calibrate `v10` and then use `take_image` to grab the picture.  
           3.  **Communication:** I'll use `send_image` from the right configurations to get those images to be "received".  Easy!
           
           Next, I need to get analysis of some stone and some soil. I'm going to pick `v3` and `v7`, which are of the right types (`v2` and `v6`).
           
           1.  **Sample collection:** `v12` will grab `v3` in a sampling action when at `#q4`. Rover `v14` will pick up `v7` when it is at `#q5`.
           2.  **Report the Analysis:** Then rover `v12` will report on `v3` from `#q1`, and `v14` will report on `v7` from `#q6`.
           
           I have to be careful with the storage on the rovers. I'll need to use `drop_rock` on `v12` and on `v14` to make sure the store is free, so I do not have to move around with full storage!
           
           Finally, to fulfill the last two conditions, I'll move `v12` from `#q1` to `#q2`, and from `#q3` back to `#q1`. This way, both rovers return to their starting positions and the storage areas are ready.
           
           **The Strategy (in Detail):**
           
           **Rover v12 Operations:**
           
           1.  `move v12 v13 #t0 #q0` (to start)
           2.  `calibrate v12 #q0 #y0 v17 v10`
           3.  `take_image v12 #q0 #y0 v17 v10 v11`
           4.  `move v12 #q0 #t5 #q1` (to transmit)
           5.  `send_image v12 #q1 #y1 v9 v17 v11`  (image of v17)
           6.  `move v12 #q1 #t11 #q4` (to sample v3)
           7.  `sample_rock v12 #q4 v3 v16`
           8.  `move v12 #q4 #t4 #q1` (to transmit)
           9.  `send_analysis v12 #q1 #y1 v9 v3` (analysis of v3)
           10. `drop_rock v12 v16` (make free storage)
           11. `move v12 #q1 #t9 #q3` (for image)
           12. `calibrate v12 #q3 #y2 v18 v10`
           13. `take_image v12 #q3 #y2 v18 v10 v11`
           14. `move v12 #q3 #t6 #q1` (to transmit)
           15. `send_image v12 #q1 #y1 v9 v18 v11` (image of v18)
           16.

