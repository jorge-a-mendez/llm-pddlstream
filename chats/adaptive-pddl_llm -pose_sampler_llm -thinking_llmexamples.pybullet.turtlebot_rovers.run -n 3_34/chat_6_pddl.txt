User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t23: object
           #t24: object
           #t26: object
           #t27: object
           #t28: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v5)
           Atom conf(v14, v15)
           Atom objective(v18)
           Atom onboard(v10, v12)
           Atom lander(v9)
           Atom rock(v3)
           Atom mode(v11)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom type(v4, v2)
           Atom free(v12, v16)
           Atom rock(v7)
           Atom type(v5, v6)
           Atom supports(v10, v11)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom rock(v4)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom free(v14, v16)
           Atom type(v3, v2)
           Atom rock(v8)
           Atom conf(v12, v13)
           Atom atconf(v12, v13)
           Atom camera(v10)
           Atom objective(v17)
           Atom rover(v14)
           Atom store(v16)
           Atom objective(v19)
           Atom type(v7, v6)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q5, #y3, v19)
           Atom imagerange(v14, #q5, v19)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #q8, v3)
           Atom conf(v14, #q8)
           Atom imagevisible(v14, #q4, #y2, v17)
           Atom imagerange(v14, #q4, v17)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #o5, v1)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom above(v12, #q2, v5)
           Atom conf(v12, #q2)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #q9, #y5, v18)
           Atom imagerange(v12, #q9, v18)
           Atom conf(v12, #q9)
           Atom ray(#y5)
           Atom above(v12, #o5, v7)
           Atom above(v12, #q3, v3)
           Atom conf(v12, #q3)
           Atom imagevisible(v12, #q10, #y6, v17)
           Atom imagerange(v12, #q10, v17)
           Atom conf(v12, #q10)
           Atom ray(#y6)
           Atom above(v12, #o5, v4)
           Atom above(v14, #o5, v4)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #t21, #q10)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, v15, #t10, #q6)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, v15, #t9, #q5)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q5, #t14, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #t15, #q6)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, v15, #t8, #q4)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, v15, #t26, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v12, v13, #t13, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, v13, #t20, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q4, #t3, #q0)
           Atom motion(v14, #q0, #t17, #q8)
           Atom motion(v14, #q7, #t18, #q0)
           Atom motion(v14, #q0, #t11, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q5, #t4, #q0)
           Atom motion(v14, #q0, #t16, #q7)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q6, #t5, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q8, #t19, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, v13, #t12, #q2)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t1, #q3)
           Atom motion(v12, #q9, #t23, #q1)
           Atom motion(v12, #q1, #t2, v13)
           Atom motion(v12, #q3, #t7, #q1)
           Atom motion(v12, #q10, #t24, #q1)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, #q1, #t28, #q10)
           Atom motion(v12, #q1, #t27, #q9)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q2, #t6, #q1)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q9, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v5 v16))
           ((sample_rock v12 #q3 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((sample_rock v14 #q8 v3 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q1 #t1 #q3))
           ((move v12 #q1 #t2 v13))
           ((move v12 #q1 #t27 #q9))
           ((move v12 #q1 #t28 #q10))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t24 #q1))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t6 #q1))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t7 #q1))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t23 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t12 #q2))
           ((move v12 v13 #t13 #q3))
           ((move v12 v13 #t20 #q9))
           ((move v12 v13 #t21 #q10))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #t11 v15))
           ((move v14 #q0 #t16 #q7))
           ((move v14 #q0 #t17 #q8))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t15 #q6))
           ((move v14 #q4 #t3 #q0))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t14 #q4))
           ((move v14 #q5 #t4 #q0))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t5 #q0))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t18 #q0))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t19 #q0))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q6))
           ((move v14 v15 #t26 #q7))
           ((move v14 v15 #t8 #q4))
           ((move v14 v15 #t9 #q5))
           ((calibrate v12 #q10 #y6 v17 v10))
           ((calibrate v12 #q9 #y5 v18 v10))
           ((calibrate v14 #q4 #y2 v17 v10))
           ((calibrate v14 #q5 #y3 v19 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((take_image v12 #q10 #y6 v17 v10 v11))
           ((take_image v12 #q9 #y5 v18 v10 v11))
           ((take_image v14 #q4 #y2 v17 v10 v11))
           ((take_image v14 #q5 #y3 v19 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Path to New Knowledge**
           
           Alright, let's break this down. My objective is to achieve `new-axiom@0()` in the `rovers` domain. This boils down to ensuring several things: I need to get images of three specific objects (`v17`, `v18`, `v19`), analyze and transmit the analysis for all rocks of a particular type (both stone and soil), and finally, to ensure both of my rovers end up in their initial configs (`atconf`).
           
           First, imaging. I have two rovers, `v12` and `v14`, both equipped with cameras (`v10`) that support the necessary mode (`v11`). Each rover also has a store (`v16`).
           
           Rover `v14` will tackle `v19` (moving to #q5, taking and sending image), and `v18` (moving to #q6, taking and sending image).
           Rover `v12` will take on `v17` (moving to #q10, taking and sending image).
           
           For the rock analysis part.
           I need to analyze and transmit the analyses of all the stones (`v3`, `v1`, `v4`) and soils (`v5`, `v7`, `v8`).
           
           I’ve decided that `v14` will take on the stone analysis since it has the closest initial positions. The sequence for each stone will be: Move near the sample, Sample, Move to a communication point, Send the analysis, and Drop the sample to ensure the store is free for the next sample.
           
           Rover `v12` will do the soils, also starting by getting itself into position to move near the target, sample the sample, send the analysis, and drop to be free.
           
           Finally, at the end of all the action, both rovers will return to their starting configurations.
           
           Here's the plan, step by step:
           
           **Rover v14's Plan:**
           
           1.  Move v14 from v15 to #q5
           2.  Calibrate v14 with the camera on #q5
           3.  Take an image of v19 at #q5
           4.  Move v14 from #q5 to #q0
           5.  Send the image of v19 from v14 to #q0
           6.  Move v14 from #q0 to #q6
           7.  Calibrate v14 with the camera on #q6
           8.  Take an image of v18 at #q6
           9.  Move v14 from #q6 to #q0
           10. Send the image of v18 from v14 to #q0
           11. Move v14 from #q0 to #q8 (to sample stone v3)
           12. Sample stone v3
           13. Move v14 from #q8 to #q0
           14. Send the analysis of stone v3 from v14 to #q0
           15. Drop the rock from v14's store
           16. Move v14 from #q0 to #o5 (to sample stone v1)
           17. Sample stone v1
           18. Move v14 from #o5 to #q0
           19. Send the analysis of stone v1 from v14 to #q0
           20. Drop the rock from v14's store
           21. Move v14 from #q0 to #o5 (to sample stone v4)
           22. Sample stone v4
           23. Move v14 from #o5 to #q0
           24. Send the analysis of stone v4 from v14 to #q0
           25. Drop the rock from v14's store
           26. Move v14 from #q0 back to v15
           
           **Rover v12's Plan:**
           
           1.  Move v12 from v13 to #q10
           2.  Calibrate v12 with the camera on #q10
           3.  Take an image of v17 at #q10
           4.  Move v12 from #q10 to #q1
           5.  Send the image of v17 from v12 to #q1
           6.  Move v12 from #q1 to #q2 (to sample soil v5)
           7.  Sample soil v5
           8.  Move v12 from #q2 to #q1
           9.  Send the analysis of soil v5 from v12 to #q1
           10. Drop the rock from v12's store
           11. Move
)

Model:     **The Path to New Knowledge**
           
           Alright, let's break this down. My objective is to achieve `new-axiom@0()` in the `rovers` domain. This boils down to ensuring several things: I need to get images of three specific objects (`v17`, `v18`, `v19`), analyze and transmit the analysis for all rocks of a particular type (both stone and soil), and finally, to ensure both of my rovers end up in their initial configs (`atconf`).
           
           First, imaging. I have two rovers, `v12` and `v14`, both equipped with cameras (`v10`) that support the necessary mode (`v11`). Each rover also has a store (`v16`).
           
           Rover `v14` will tackle `v19` (moving to #q5, taking and sending image), and `v18` (moving to #q6, taking and sending image).
           Rover `v12` will take on `v17` (moving to #q10, taking and sending image).
           
           For the rock analysis part.
           I need to analyze and transmit the analyses of all the stones (`v3`, `v1`, `v4`) and soils (`v5`, `v7`, `v8`).
           
           I’ve decided that `v14` will take on the stone analysis since it has the closest initial positions. The sequence for each stone will be: Move near the sample, Sample, Move to a communication point, Send the analysis, and Drop the sample to ensure the store is free for the next sample.
           
           Rover `v12` will do the soils, also starting by getting itself into position to move near the target, sample the sample, send the analysis, and drop to be free.
           
           Finally, at the end of all the action, both rovers will return to their starting configurations.
           
           Here's the plan, step by step:
           
           **Rover v14's Plan:**
           
           1.  Move v14 from v15 to #q5
           2.  Calibrate v14 with the camera on #q5
           3.  Take an image of v19 at #q5
           4.  Move v14 from #q5 to #q0
           5.  Send the image of v19 from v14 to #q0
           6.  Move v14 from #q0 to #q6
           7.  Calibrate v14 with the camera on #q6
           8.  Take an image of v18 at #q6
           9.  Move v14 from #q6 to #q0
           10. Send the image of v18 from v14 to #q0
           11. Move v14 from #q0 to #q8 (to sample stone v3)
           12. Sample stone v3
           13. Move v14 from #q8 to #q0
           14. Send the analysis of stone v3 from v14 to #q0
           15. Drop the rock from v14's store
           16. Move v14 from #q0 to #o5 (to sample stone v1)
           17. Sample stone v1
           18. Move v14 from #o5 to #q0
           19. Send the analysis of stone v1 from v14 to #q0
           20. Drop the rock from v14's store
           21. Move v14 from #q0 to #o5 (to sample stone v4)
           22. Sample stone v4
           23. Move v14 from #o5 to #q0
           24. Send the analysis of stone v4 from v14 to #q0
           25. Drop the rock from v14's store
           26. Move v14 from #q0 back to v15
           
           **Rover v12's Plan:**
           
           1.  Move v12 from v13 to #q10
           2.  Calibrate v12 with the camera on #q10
           3.  Take an image of v17 at #q10
           4.  Move v12 from #q10 to #q1
           5.  Send the image of v17 from v12 to #q1
           6.  Move v12 from #q1 to #q2 (to sample soil v5)
           7.  Sample soil v5
           8.  Move v12 from #q2 to #q1
           9.  Send the analysis of soil v5 from v12 to #q1
           10. Drop the rock from v12's store
           11. Move

