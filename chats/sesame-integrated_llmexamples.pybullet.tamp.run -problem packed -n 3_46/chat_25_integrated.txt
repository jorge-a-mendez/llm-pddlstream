User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g15: object
           #g16: object
           #g17: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q47: object
           #q48: object
           #q49: object
           #q50: object
           #q51: object
           #q52: object
           #t137: object
           #t138: object
           #t139: object
           #t140: object
           #t141: object
           #t142: object
           #t143: object
           #t144: object
           @sink: object
           @stove: object
           p13: object
           p14: object
           p15: object
           p16: object
           p17: object
           p18: object
           p19: object
           p20: object
           p21: object
           p22: object
           p23: object
           p24: object
           p25: object
           p26: object
           p27: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v45: object
           v46: object
           v47: object
           v48: object
           v5: object
           v57: object
           v58: object
           v59: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p15 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p3 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p4 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.086, 0.375, 0.781) and quaternion (0.0, 0.0, 0.978, -0.21).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p7 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p27 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p23 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p25 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v9 is a pose with position (-0.06, -0.448, 0.781) and quaternion (0.0, 0.0, 0.69, 0.724).
           Object p26 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p19 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p22 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p21 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p20 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p18 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p24 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p17 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (0.244, 0.469, 0.781) and quaternion (0.0, 0.0, 0.483, 0.875).
           Object p16 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p3)
           Atom supported(v8, p3, v16)
           Atom pose(v14, p5)
           Atom supported(v14, p5, v10)
           Atom supported(v14, p5, v16)
           Atom pose(v12, p4)
           Atom supported(v12, p4, v16)
           Atom supported(v12, p4, v10)
           Atom supported(v8, p3, v10)
           Atom kin(v32, v33, p3, v34, v35, v36)
           Atom kin(v32, v37, p4, v34, v35, v36)
           Atom kin(v32, v38, p5, v34, v35, v36)
           Atom pose(v8, p7)
           Atom supported(v8, p7, v16)
           Atom pose(v12, p6)
           Atom supported(v12, p6, v16)
           Atom supported(v8, p7, v10)
           Atom kin(v32, v33, p7, v48, v35, v36)
           Atom kin(v32, v37, p6, v45, v46, v47)
           Atom pose(v12, p8)
           Atom supported(v12, p8, v16)
           Atom pose(v8, p9)
           Atom supported(v8, p9, v10)
           Atom supported(v8, p9, v16)
           Atom kin(v32, v37, p8, v45, v46, v47)
           Atom kin(v32, v33, p9, v48, v35, v36)
           Atom pose(v8, p15)
           Atom supported(v8, p15, v16)
           Atom pose(v14, p13)
           Atom supported(v14, p13, v10)
           Atom supported(v14, p13, v16)
           Atom pose(v12, p14)
           Atom supported(v12, p14, v16)
           Atom supported(v12, p14, v10)
           Atom supported(v8, p15, v10)
           Atom kin(v32, v33, p15, v59, v35, v36)
           Atom kin(v32, v38, p13, v57, v35, v36)
           Atom kin(v32, v37, p14, v58, v35, v36)
           Atom pose(v14, p16)
           Atom supported(v14, p16, v10)
           Atom pose(v12, p17)
           Atom supported(v12, p17, v16)
           Atom supported(v14, p16, v16)
           Atom pose(v8, p18)
           Atom supported(v8, p18, v10)
           Atom supported(v8, p18, v16)
           Atom supported(v12, p17, v10)
           Atom kin(v32, v38, p16, v57, v35, v36)
           Atom kin(v32, v37, p17, v58, v35, v36)
           Atom kin(v32, v33, p18, v59, v35, v36)
           Atom pose(v8, p21)
           Atom supported(v8, p21, v16)
           Atom pose(v14, p19)
           Atom supported(v14, p19, v10)
           Atom supported(v14, p19, v16)
           Atom pose(v12, p20)
           Atom supported(v12, p20, v16)
           Atom supported(v12, p20, v10)
           Atom supported(v8, p21, v10)
           Atom kin(v32, v38, p19, v57, v35, v36)
           Atom kin(v32, v37, p20, v58, v35, v36)
           Atom kin(v32, v33, p21, v59, v35, v36)
           Atom pose(v8, p22)
           Atom supported(v8, p22, v16)
           Atom kin(v32, v33, p22, v34, v35, v36)
           Atom pose(v14, p23)
           Atom supported(v14, p23, v16)
           Atom kin(v32, v38, p23, v34, v35, v36)
           Atom pose(v12, p24)
           Atom supported(v12, p24, v16)
           Atom kin(v32, v37, p24, v34, v35, v36)
           Atom pose(v8, p25)
           Atom supported(v8, p25, v16)
           Atom kin(v32, v33, p25, v34, v35, v36)
           Atom pose(v14, p26)
           Atom supported(v14, p26, v16)
           Atom kin(v32, v38, p26, v34, v35, v36)
           Atom pose(v12, p27)
           Atom supported(v12, p27, v16)
           Atom kin(v32, v37, p27, v34, v35, v36)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g16)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g15)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g17)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p19, #g16, #o3, #o4)
           Atom kin(v4, v14, p16, #g16, #o3, #o4)
           Atom kin(v4, v14, p23, #g16, #o3, #o4)
           Atom kin(v4, v14, p26, #g16, #o3, #o4)
           Atom kin(v4, v14, p5, #g16, #o3, #o4)
           Atom bconf(#q49)
           Atom atraj(#t141)
           Atom kin(v4, v14, p13, #g16, #q49, #t141)
           Atom bconf(#q48)
           Atom atraj(#t138)
           Atom kin(v4, v14, v15, #g16, #q48, #t138)
           Atom kin(v4, v8, p21, #g17, #o3, #o4)
           Atom kin(v4, v8, p15, #g17, #o3, #o4)
           Atom kin(v4, v8, p22, #g17, #o3, #o4)
           Atom kin(v4, v8, p18, #g17, #o3, #o4)
           Atom kin(v4, v8, p7, #g17, #o3, #o4)
           Atom bconf(#q52)
           Atom atraj(#t144)
           Atom kin(v4, v8, p3, #g17, #q52, #t144)
           Atom kin(v4, v8, p25, #g17, #o3, #o4)
           Atom bconf(#q50)
           Atom atraj(#t142)
           Atom kin(v4, v8, v9, #g17, #q50, #t142)
           Atom kin(v4, v8, p9, #g17, #o3, #o4)
           Atom kin(v4, v12, p8, #g15, #o3, #o4)
           Atom kin(v4, v12, p24, #g15, #o3, #o4)
           Atom kin(v4, v12, p14, #g15, #o3, #o4)
           Atom kin(v4, v12, p27, #g15, #o3, #o4)
           Atom bconf(#q47)
           Atom atraj(#t137)
           Atom kin(v4, v12, v13, #g15, #q47, #t137)
           Atom bconf(#q51)
           Atom atraj(#t143)
           Atom kin(v4, v12, p4, #g15, #q51, #t143)
           Atom kin(v4, v12, p17, #g15, #o3, #o4)
           Atom kin(v4, v12, p6, #g15, #o3, #o4)
           Atom kin(v4, v12, p20, #g15, #o3, #o4)
           Atom basemotion(#q48, #o0, v3)
           Atom basemotion(#q48, #o0, #q48)
           Atom btraj(#t140)
           Atom basemotion(v3, #t140, #q48)
           Atom basemotion(#q52, #o0, v3)
           Atom basemotion(v3, #o0, #q52)
           Atom basemotion(#q52, #o0, #q52)
           Atom basemotion(#q48, #o0, #q52)
           Atom basemotion(#q52, #o0, #q48)
           Atom basemotion(#q49, #o0, #q52)
           Atom basemotion(#q49, #o0, v3)
           Atom basemotion(#q52, #o0, #q49)
           Atom basemotion(#q49, #o0, #q49)
           Atom basemotion(v3, #o0, #q49)
           Atom basemotion(#q48, #o0, #q49)
           Atom basemotion(#q49, #o0, #q48)
           Atom basemotion(#q51, #o0, #q52)
           Atom basemotion(#q51, #o0, v3)
           Atom basemotion(#q52, #o0, #q51)
           Atom basemotion(v3, #o0, #q51)
           Atom basemotion(#q51, #o0, #q51)
           Atom basemotion(#q49, #o0, #q51)
           Atom basemotion(#q51, #o0, #q49)
           Atom basemotion(#q48, #o0, #q51)
           Atom basemotion(#q51, #o0, #q48)
           Atom basemotion(#q47, #o0, v3)
           Atom basemotion(#q47, #o0, #q52)
           Atom basemotion(#q47, #o0, #q47)
           Atom basemotion(#q52, #o0, #q47)
           Atom btraj(#t139)
           Atom basemotion(v3, #t139, #q47)
           Atom basemotion(#q51, #o0, #q47)
           Atom basemotion(#q47, #o0, #q51)
           Atom basemotion(#q49, #o0, #q47)
           Atom basemotion(#q47, #o0, #q49)
           Atom basemotion(#q48, #o0, #q47)
           Atom basemotion(#q47, #o0, #q48)
           Atom basemotion(#q50, #o0, v3)
           Atom basemotion(#q50, #o0, #q52)
           Atom basemotion(#q50, #o0, #q50)
           Atom basemotion(v3, #o0, #q50)
           Atom basemotion(#q52, #o0, #q50)
           Atom basemotion(#q47, #o0, #q50)
           Atom basemotion(#q50, #o0, #q47)
           Atom basemotion(#q51, #o0, #q50)
           Atom basemotion(#q50, #o0, #q51)
           Atom basemotion(#q49, #o0, #q50)
           Atom basemotion(#q50, #o0, #q49)
           Atom basemotion(#q48, #o0, #q50)
           Atom basemotion(#q50, #o0, #q48)
           Atom kin(v4, v8, #o2, #g17, #o3, #o4)
           Atom kin(v4, v12, #o2, #g15, #o3, #o4)
           Atom kin(v4, v14, #o2, #g16, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q52, #o0, #o3)
           Atom basemotion(#o3, #o0, #q52)
           Atom basemotion(#q50, #o0, #o3)
           Atom basemotion(#o3, #o0, #q50)
           Atom basemotion(#q47, #o0, #o3)
           Atom basemotion(#o3, #o0, #q47)
           Atom basemotion(#q51, #o0, #o3)
           Atom basemotion(#o3, #o0, #q51)
           Atom basemotion(#q49, #o0, #o3)
           Atom basemotion(#o3, #o0, #q49)
           Atom basemotion(#q48, #o0, #o3)
           Atom basemotion(#o3, #o0, #q48)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q47 #o0))
           ((move_base #o3 #q48 #o0))
           ((move_base #o3 #q49 #o0))
           ((move_base #o3 #q50 #o0))
           ((move_base #o3 #q51 #o0))
           ((move_base #o3 #q52 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q47 #o3 #o0))
           ((move_base #q47 #q47 #o0))
           ((move_base #q47 #q48 #o0))
           ((move_base #q47 #q49 #o0))
           ((move_base #q47 #q50 #o0))
           ((move_base #q47 #q51 #o0))
           ((move_base #q47 #q52 #o0))
           ((move_base #q47 v3 #o0))
           ((move_base #q48 #o3 #o0))
           ((move_base #q48 #q47 #o0))
           ((move_base #q48 #q48 #o0))
           ((move_base #q48 #q49 #o0))
           ((move_base #q48 #q50 #o0))
           ((move_base #q48 #q51 #o0))
           ((move_base #q48 #q52 #o0))
           ((move_base #q48 v3 #o0))
           ((move_base #q49 #o3 #o0))
           ((move_base #q49 #q47 #o0))
           ((move_base #q49 #q48 #o0))
           ((move_base #q49 #q49 #o0))
           ((move_base #q49 #q50 #o0))
           ((move_base #q49 #q51 #o0))
           ((move_base #q49 #q52 #o0))
           ((move_base #q49 v3 #o0))
           ((move_base #q50 #o3 #o0))
           ((move_base #q50 #q47 #o0))
           ((move_base #q50 #q48 #o0))
           ((move_base #q50 #q49 #o0))
           ((move_base #q50 #q50 #o0))
           ((move_base #q50 #q51 #o0))
           ((move_base #q50 #q52 #o0))
           ((move_base #q50 v3 #o0))
           ((move_base #q51 #o3 #o0))
           ((move_base #q51 #q47 #o0))
           ((move_base #q51 #q48 #o0))
           ((move_base #q51 #q49 #o0))
           ((move_base #q51 #q50 #o0))
           ((move_base #q51 #q51 #o0))
           ((move_base #q51 #q52 #o0))
           ((move_base #q51 v3 #o0))
           ((move_base #q52 #o3 #o0))
           ((move_base #q52 #q47 #o0))
           ((move_base #q52 #q48 #o0))
           ((move_base #q52 #q49 #o0))
           ((move_base #q52 #q50 #o0))
           ((move_base #q52 #q51 #o0))
           ((move_base #q52 #q52 #o0))
           ((move_base #q52 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q49 #o0))
           ((move_base v3 #q50 #o0))
           ((move_base v3 #q51 #o0))
           ((move_base v3 #q52 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q47 #t139))
           ((move_base v3 #q48 #t140))
           ((pick v4 v12 #o2 #g15 #o3 #o4))
           ((place v4 v12 #o2 #g15 #o3 #o4))
           ((pick v4 v12 p14 #g15 #o3 #o4))
           ((place v4 v12 p14 #g15 #o3 #o4))
           ((pick v4 v12 p17 #g15 #o3 #o4))
           ((place v4 v12 p17 #g15 #o3 #o4))
           ((pick v4 v12 p20 #g15 #o3 #o4))
           ((place v4 v12 p20 #g15 #o3 #o4))
           ((pick v4 v12 p24 #g15 #o3 #o4))
           ((place v4 v12 p24 #g15 #o3 #o4))
           ((pick v4 v12 p27 #g15 #o3 #o4))
           ((place v4 v12 p27 #g15 #o3 #o4))
           ((pick v4 v12 p4 #g15 #q51 #t143))
           ((place v4 v12 p4 #g15 #q51 #t143))
           ((pick v4 v12 p6 #g15 #o3 #o4))
           ((place v4 v12 p6 #g15 #o3 #o4))
           ((pick v4 v12 p8 #g15 #o3 #o4))
           ((place v4 v12 p8 #g15 #o3 #o4))
           ((pick v4 v12 v13 #g15 #q47 #t137))
           ((place v4 v12 v13 #g15 #q47 #t137))
           ((pick v4 v14 #o2 #g16 #o3 #o4))
           ((place v4 v14 #o2 #g16 #o3 #o4))
           ((pick v4 v14 p13 #g16 #q49 #t141))
           ((place v4 v14 p13 #g16 #q49 #t141))
           ((pick v4 v14 p16 #g16 #o3 #o4))
           ((place v4 v14 p16 #g16 #o3 #o4))
           ((pick v4 v14 p19 #g16 #o3 #o4))
           ((place v4 v14 p19 #g16 #o3 #o4))
           ((pick v4 v14 p23 #g16 #o3 #o4))
           ((place v4 v14 p23 #g16 #o3 #o4))
           ((pick v4 v14 p26 #g16 #o3 #o4))
           ((place v4 v14 p26 #g16 #o3 #o4))
           ((pick v4 v14 p5 #g16 #o3 #o4))
           ((place v4 v14 p5 #g16 #o3 #o4))
           ((pick v4 v14 v15 #g16 #q48 #t138))
           ((place v4 v14 v15 #g16 #q48 #t138))
           ((pick v4 v8 #o2 #g17 #o3 #o4))
           ((place v4 v8 #o2 #g17 #o3 #o4))
           ((pick v4 v8 p15 #g17 #o3 #o4))
           ((place v4 v8 p15 #g17 #o3 #o4))
           ((pick v4 v8 p18 #g17 #o3 #o4))
           ((place v4 v8 p18 #g17 #o3 #o4))
           ((pick v4 v8 p21 #g17 #o3 #o4))
           ((place v4 v8 p21 #g17 #o3 #o4))
           ((pick v4 v8 p22 #g17 #o3 #o4))
           ((place v4 v8 p22 #g17 #o3 #o4))
           ((pick v4 v8 p25 #g17 #o3 #o4))
           ((place v4 v8 p25 #g17 #o3 #o4))
           ((pick v4 v8 p3 #g17 #q52 #t144))
           ((place v4 v8 p3 #g17 #q52 #t144))
           ((pick v4 v8 p7 #g17 #o3 #o4))
           ((place v4 v8 p7 #g17 #o3 #o4))
           ((pick v4 v8 p9 #g17 #o3 #o4))
           ((place v4 v8 p9 #g17 #o3 #o4))
           ((pick v4 v8 v9 #g17 #q50 #t142))
           ((place v4 v8 v9 #g17 #q50 #t142))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q42', '#t121'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g14', '#q42', '#t116'))
           Action(name='move_base', args=('#q42', '#q44', '#t125'))
           Action(name='place', args=('v4', 'v14', 'p5', '#g14', '#q44', '#t124'))
           Action(name='move_base', args=('#q44', '#q40', '#t129'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g13', '#q40', '#t114'))
           Action(name='move_base', args=('#q40', '#q46', '#t136'))
           Action(name='place', args=('v4', 'v8', 'p3', '#g13', '#q46', '#t131'))
           Action(name='move_base', args=('#q46', '#q39', '#t135'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g12', '#q39', '#t111'))
           Action(name='move_base', args=('#q39', '#q45', '#t133'))
           Action(name='place', args=('v4', 'v12', 'p4', '#g12', '#q45', '#t128'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v8', 'p3', 'v14', 'p5')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The goal is to place all three objects (v8, v12, and v14) on surface v16. Currently, v8 is at v9 (supported by v11), v12 is at v13 (supported by v11), and v14 is at v15 (supported by v11). The previous plan failed because placing v8 at p3 and v14 at p5 resulted in a collision. This indicates that the chosen poses for these two objects were too close, causing an overlap. I need to find new collision-free poses for the objects on surface v16.
           
           Looking at the available poses and the AABBs of the objects and the surface:
           v8 (AABB = ((-0.035, -0.035), (0.035, 0.035)))
           v12 (AABB = ((-0.035, -0.035), (0.035, 0.035)))
           v14 (AABB = ((-0.035, -0.035), (0.035, 0.035)))
           v16 (AABB = ((-0.135, -0.135), (0.135, 0.135)))
           
           The surface v16 has a width and depth of 0.27 (2 * 0.135). The objects have a width and depth of 0.07 (2 * 0.035).
           To avoid collisions, the objects need to be placed with sufficient distance between them. The available poses p3, p4, p5, p6, p7, p8, p9, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27 are given as (x,y,z) with (0.0, 0.0, 0.782), (0.05, 0.05, 0.782), (-0.05, 0.05, 0.782), (0.05, -0.05, 0.782), (-0.05, -0.05, 0.782).
           These poses are relative to the origin of the surface.
           The previous plan failed because p3 and p5 are (0.0, 0.0, 0.782) and (-0.05, 0.05, 0.782), which might be too close for the objects' AABBs.
           
           Let's pick v14 first, then v8, then v12.
           I will place v14 at p13, v8 at p22, and v12 at p24. These are all on v16, and some are (0,0,z) and others are on the corners. They appear to be far enough apart.
           
           1. Pick v14 from v15 (on v11).
           2. Place v14 at p13 (on v16).
           3. Pick v8 from v9 (on v11).
           4. Place v8 at p22 (on v16).
           5. Pick v12 from v13 (on v11).
           6. Place v12 at p24 (on v16).
           
           All these chosen poses have `supported(<obj>, <pose>, v16)` in the initial state.
           
           --Plan--:
           (move_base v3 #q48 #t140)
           (pick v4 v14 v15 #g16 #q48 #t138)
           (move_base #q48 #q49 #o0)
           (place v4 v14 p13 #g16 #q49 #t141)
           (move_base #q49 #q50 #o0)
           (pick v4 v8 v9 #g17 #q50 #t142)
           (move_base #q50 #o3 #o0)
           (place v4 v8 p22 #g17 #o3 #o4)
           (move_base #o3 #q47 #o0)
           (pick v4 v12 v13 #g15 #q47 #t137)
           (move_base #q47 #o3 #o0)
           (place v4 v12 p24 #g15 #o3 #o4)

