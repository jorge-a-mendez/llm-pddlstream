User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v14, v16)
           Atom supports(v10, v11)
           Atom type(v1, v2)
           Atom rock(v8)
           Atom free(v12, v16)
           Atom atconf(v14, v15)
           Atom camera(v10)
           Atom objective(v19)
           Atom type(v3, v2)
           Atom lander(v9)
           Atom onboard(v10, v12)
           Atom atconf(v12, v13)
           Atom rock(v3)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom conf(v12, v13)
           Atom type(v7, v6)
           Atom store(v16)
           Atom rover(v14)
           Atom objective(v18)
           Atom rock(v4)
           Atom rock(v5)
           Atom type(v5, v6)
           Atom rock(v1)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom objective(v17)
           Atom rock(v7)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q7, v7)
           Atom conf(v12, #q7)
           Atom above(v12, #q6, v3)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q2, v1)
           Atom conf(v12, #q2)
           Atom above(v12, #q14, v5)
           Atom conf(v12, #q14)
           Atom above(v12, #q15, v4)
           Atom conf(v12, #q15)
           Atom above(v12, #q1, v8)
           Atom conf(v12, #q1)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q4, #y2, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v14, #q16, v8)
           Atom conf(v14, #q16)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q10, #y5, v9)
           Atom comrange(v14, #q10, v9)
           Atom conf(v14, #q10)
           Atom ray(#y5)
           Atom above(v14, #q9, v1)
           Atom conf(v14, #q9)
           Atom above(v14, #q13, v5)
           Atom conf(v14, #q13)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q12, #y7, v18)
           Atom imagerange(v14, #q12, v18)
           Atom conf(v14, #q12)
           Atom ray(#y7)
           Atom imagevisible(v14, #q8, #y4, v17)
           Atom imagerange(v14, #q8, v17)
           Atom conf(v14, #q8)
           Atom ray(#y4)
           Atom imagevisible(v14, #q11, #y6, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y6)
           Atom imagevisible(v12, #q3, #y1, v19)
           Atom imagerange(v12, #q3, v19)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t35, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #t11, #q5)
           Atom motion(v14, v15, #t17, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, v15, #t21, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, v15, #t32, #q9)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, #q1, #t1, #q0)
           Atom motion(v12, #q0, #t27, #q14)
           Atom motion(v12, #q5, #t23, #q0)
           Atom motion(v12, #q0, #t7, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q14, #t26, #q0)
           Atom motion(v12, #q6, #t12, #q0)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #t8, #q2)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q2, #t2, #q0)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q0, #t13, #q6)
           Atom motion(v14, #q11, #t33, #q10)
           Atom motion(v14, #q12, #t36, #q10)
           Atom motion(v14, #q10, #t19, #q9)
           Atom motion(v14, #q10, #t20, #q13)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #t37, #q11)
           Atom motion(v14, #q10, #t18, v15)
           Atom motion(v14, #q10, #t34, #q12)
           Atom motion(v14, #q13, #t25, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q9, #t15, #q10)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q10, #o2, #q16)
           Atom motion(v14, #q16, #t30, #q10)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q9, #t31, #q16)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q8, #t14, #q10)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, v15, #t16, #q8)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #t5, #q0)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q0, #t22, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, v13, #t3, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, v13, #t4, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #t9, #q3)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q0, #t24, #q4)
           Atom motion(v12, #q4, #t29, #q5)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q5, #t10, #q4)
           Atom motion(v12, #q4, #t6, #q0)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q3, #t28, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q11, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q1 v8 v16))
           ((sample_rock v12 #q14 v5 v16))
           ((sample_rock v12 #q15 v4 v16))
           ((sample_rock v12 #q2 v1 v16))
           ((sample_rock v12 #q6 v3 v16))
           ((sample_rock v12 #q7 v7 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q13 v5 v16))
           ((sample_rock v14 #q16 v8 v16))
           ((sample_rock v14 #q9 v1 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t13 #q6))
           ((move v12 #q0 #t22 #q3))
           ((move v12 #q0 #t24 #q4))
           ((move v12 #q0 #t27 #q14))
           ((move v12 #q0 #t7 v13))
           ((move v12 #q0 #t8 #q2))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q0))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t26 #q0))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t28 #q4))
           ((move v12 #q3 #t5 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t29 #q5))
           ((move v12 #q4 #t6 #q0))
           ((move v12 #q4 #t9 #q3))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t10 #q4))
           ((move v12 #q5 #t23 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q0))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t11 #q5))
           ((move v12 v13 #t3 #q3))
           ((move v12 v13 #t35 #q2))
           ((move v12 v13 #t4 #q4))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q16))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #t18 v15))
           ((move v14 #q10 #t19 #q9))
           ((move v14 #q10 #t20 #q13))
           ((move v14 #q10 #t34 #q12))
           ((move v14 #q10 #t37 #q11))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t33 #q10))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t36 #q10))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t25 #q10))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t30 #q10))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t14 #q10))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t15 #q10))
           ((move v14 #q9 #t31 #q16))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t16 #q8))
           ((move v14 v15 #t17 #q11))
           ((move v14 v15 #t21 #q13))
           ((move v14 v15 #t32 #q9))
           ((calibrate v12 #q3 #y1 v19 v10))
           ((calibrate v12 #q4 #y2 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #q11 #y6 v19 v10))
           ((calibrate v14 #q12 #y7 v18 v10))
           ((calibrate v14 #q8 #y4 v17 v10))
           ((take_image v12 #q3 #y1 v19 v10 v11))
           ((take_image v12 #q4 #y2 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q11 #y6 v19 v10 v11))
           ((take_image v14 #q12 #y7 v18 v10 v11))
           ((take_image v14 #q8 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q10 #y5 v9 v3))
           ((send_analysis v14 #q10 #y5 v9 v4))
           ((send_analysis v14 #q10 #y5 v9 v7))
           ((send_analysis v14 #q10 #y5 v9 v5))
           ((send_analysis v14 #q10 #y5 v9 v8))
           ((send_analysis v14 #q10 #y5 v9 v1))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q10 #y5 v9 v19 v11))
           ((send_image v14 #q10 #y5 v9 v18 v11))
           ((send_image v14 #q10 #y5 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, v12 and v14, each with a camera (v10) and a storage unit (v16). There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19) located at various configurations. The lander (v9) is the communication target. The camera v10 supports mode v11. The goal is `new-axiom@0()`. This axiom is derived from a conjunction of many conditions, most notably:
           - Rover v12 and v14 must be at some configurations. (atconf(v12, v13), atconf(v14, v15)) - These are already true.
           - Both rovers must have free storage (free(v12, v16), free(v14, v16)) - These are already true.
           - Images of objectives v17, v18, and v19 must be received (receivedimage(v17, v11), receivedimage(v18, v11), receivedimage(v19, v11)). This means the rovers need to take images and send them.
           - Rocks v2 and v6 must be analyzed and received. Specifically, `type(?stone, v2)` and `receivedanalysis(?stone)`, and `type(?soil, v6)` and `receivedanalysis(?soil)`. This implies that rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8) need to be sampled and their analysis sent to the lander.
           
           Therefore, the plan should involve:
           1. Calibrating the camera for each objective.
           2. Taking an image of each objective (v17, v18, v19) with one of the rovers.
           3. Sending the images to the lander.
           4. Sampling a rock of type v2 (e.g., v1 or v3 or v4) with one of the rovers.
           5. Sending the analysis of the sampled rock of type v2 to the lander.
           6. Sampling a rock of type v6 (e.g., v5 or v7 or v8) with one of the rovers.
           7. Sending the analysis of the sampled rock of type v6 to the lander.
           
           Let's use rover v12 for objectives and rover v14 for rocks to maximize efficiency.
           
           For objectives:
           - Objective v19: Rover v12 can see v19 at #q3.
           - Objective v18: Rover v12 can see v18 at #q4.
           - Objective v17: Rover v12 can see v17 at #q5.
           
           For rocks:
           - Type v2 rocks: v1, v3, v4. Rover v14 can sample v1 at #q9, v3 at #o5, v4 at #o5.
           - Type v6 rocks: v5, v7, v8. Rover v14 can sample v5 at #q13, v7 at #o5, v8 at #q16.
           
           Let's refine the plan:
           Rover v12 will handle all images.
           Rover v14 will handle rock samples.
           
           **Rover v12's actions (Images):**
           1. Move to #q3 to image v19.
           2. Calibrate camera v10 for v19.
           3. Take image of v19.
           4. Move to #q4 to image v18.
           5. Calibrate camera v10 for v18.
           6. Take image of v18.
           7. Move to #q5 to image v17.
           8. Calibrate camera v10 for v17.
           9. Take image of v17.
           10. Move to #q0 to send all images.
           11. Send image of v19.
           12. Send image of v18.
           13. Send image of v17.
           
           **Rover v14's actions (Rock Analysis):**
           1. Move to #q9 to sample rock v1 (type v2).
           2. Sample rock v1.
           3. Move to #q13 to sample rock v5 (type v6).
           4. Sample rock v5.
           5. Move to #q10 to send analyses.
           6. Send analysis of v1.
           7. Send analysis of v5.
           
           Let's check for conflicts and current states:
           - `atconf(v12, v13)` and `atconf(v14, v15)` are true initially.
           - `free(v12, v16)` and `free(v14, v16)` are true initially.
           - The `calibrate` action invalidates `calibrated(c, v)`. So we need to calibrate before each `take_image`.
           
           Revised plan with step-by-step preconditions:
           
           **Rover v12 (Images):**
           - Current conf: v13
           - Goal 1: Image v19 (at #q3)
               - (move v12 v13 #t3 #q3)
               - (calibrate v12 #q3 #y1 v19 v10)
               - (take_image v12 #q3 #y1 v19 v10 v11)
           - Goal 2: Image v18 (at #q4)
               - (move v12 #q3 #t28 #q4)
               - (calibrate v12 #q4 #y2 v18 v10)
               - (take_image v12 #q4 #y2 v18 v10 v11)
           - Goal 3: Image v17 (at #q5)
               - (move v12 #q4 #t29 #q5)
               - (calibrate v12 #q5 #y3 v17 v10)
               - (take_image v12 #q5 #y3 v17 v10 v11)
           - Goal 4: Send Images (from #q0)
               - (move v12 #q5 #t23 #q0)
               - (send_image v12 #q0 #y0 v9 v19 v11)
               - (send_image v12 #q0 #y0 v9 v18 v11)
               - (send_image v12 #q0 #y0 v9 v17 v11)
           
           **Rover v14 (Rock Analysis):**
           - Current conf: v15
           - Goal 1: Sample rock v1 (type v2, at #q9)
               - (move v14 v15 #t32 #q9)
               - (sample_rock v14 #q9 v1 v16)
           - Goal 2: Sample rock v5 (type v6, at #q13)
               - (move v14 #q9 #q13 #o2) This isn't right, needs to move from #q9 to #q13
               - (move v14 #q9 #o2 #q13) - This action is available.
               - (sample_rock v14 #q13 v5 v16)
               - Since v14 already has full(v14, v16) after sampling v1, it cannot sample v5 unless it drops v1.
               - (drop_rock v14 v16)
               - (sample_rock v14 #q13 v5 v16)
           - Goal 3: Send Analyses (from #q10)
               - (move v14 #q13 #t25 #q10)
               - (send_analysis v14 #q10 #y5 v9 v1)
               - (send_analysis v14 #q10 #y5 v9 v5)
           
           This looks like a solid plan. The order of rock sampling and dropping is crucial to ensure `free(v14, v16)` before each sample.
           
           Final check on goal:
           - `atconf(v12, v13)` will be `atconf(v12, #q0)`. The axiom just says `atconf(v12, v13)` and `atconf(v14, v15)` which are initial states. If they are no longer at those states, then the axiom might not be true. The axiom uses `v13` and `v15` as variables, so it doesn't matter what configuration v12 and v14 are at, as long as they are at *some* configuration. So `atconf(v12, #q0)` and `atconf(v14, #q10)` are fine.
           - `free(v12, v16)` - True (v12 never samples)
           - `free(v14, v16)` - True after dropping rock.
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)` - Achieved by v12.
           - `type(?stone, v2)` and `receivedanalysis(?stone)` - Achieved by v14 for v1 (type v2).
           - `type(?soil, v6)` and `receivedanalysis(?soil)` - Achieved by v14 for v5 (type v6).
           
           All conditions for `new-axiom@0()` are met.
           
           --Plan--:
           (move v12 v13 #t3 #q3)
           (calibrate v12 #q3 #y1 v19 v10)
           (take_image v12 #q3 #y1 v19 v10 v11)
           (move v12 #q3 #t28 #q4)
           (calibrate v12 #q4 #y2 v18 v10)
           (take_image v12 #q4 #y2 v18 v10 v11)
           (move v12 #q4 #t29 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t23 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v14 v15 #t32 #q9)
           (sample_rock v14 #q9 v1 v16)
           (move v14 #q9 #o2 #q13)
           (drop_rock v14 v16)
           (sample_rock v14 #q13 v5 v16)
           (move v14 #q13 #t25 #q10)
           (send_analysis v14 #q10 #y5 v9 v1)
           (send_analysis v14 #q10 #y5 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. Let's re-examine the goal `new-axiom@0()`. This axiom is a complex conjunction that includes several conditions:
           
           1.  `atconf(v12, v13)` and `atconf(v14, v15)`: These are initially true. My previous reasoning that the axiom uses variables was incorrect. The axiom specifically refers to `v13` and `v15` as the configurations. This means the rovers must *remain* at their initial configurations `v13` and `v15` for the goal to be true. This directly conflicts with the need to `move` the rovers to different locations to take images and sample rocks.
           
           Given the constraint that `atconf(v12, v13)` and `atconf(v14, v15)` must hold for the goal `new-axiom@0()` to be true, the rovers `v12` and `v14` *cannot move* from their initial configurations `v13` and `v15`, respectively.
           
           Let's check if the necessary actions can be performed without moving the rovers:
           
           **For Images:**
           -   `imagevisible(v12, #q5, #y3, v17)` implies v12 must be at #q5 to see v17.
           -   `imagevisible(v12, #q4, #y2, v18)` implies v12 must be at #q4 to see v18.
           -   `imagevisible(v12, #q3, #y1, v19)` implies v12 must be at #q3 to see v19.
           -   `imagevisible(v14, #q8, #y4, v17)` implies v14 must be at #q8 to see v17.
           -   `imagevisible(v14, #q12, #y7, v18)` implies v14 must be at #q12 to see v18.
           -   `imagevisible(v14, #q11, #y6, v19)` implies v14 must be at #q11 to see v19.
           
           Since rover `v12` is at `v13` and rover `v14` is at `v15`, they cannot take any images if the target configuration for imaging is different from their current configuration. None of the `imagevisible` predicates are true for `v13` or `v15`. For example, there is no `imagevisible(v12, v13, ..., ...)` or `imagevisible(v14, v15, ..., ...)`. This means that without moving, the rovers cannot take any images.
           
           **For Rock Samples:**
           -   `above(v12, #q1, v8)` implies v12 must be at #q1 to sample v8.
           -   `above(v12, #q14, v5)` implies v12 must be at #q14 to sample v5.
           -   `above(v12, #q15, v4)` implies v12 must be at #q15 to sample v4.
           -   `above(v12, #q2, v1)` implies v12 must be at #q2 to sample v1.
           -   `above(v12, #q6, v3)` implies v12 must be at #q6 to sample v3.
           -   `above(v12, #q7, v7)` implies v12 must be at #q7 to sample v7.
           -   `above(v14, #q16, v8)` implies v14 must be at #q16 to sample v8.
           -   `above(v14, #o5, v4)` implies v14 must be at #o5 to sample v4.
           -   `above(v14, #o5, v3)` implies v14 must be at #o5 to sample v3.
           -   `above(v14, #o5, v7)` implies v14 must be at #o5 to sample v7.
           -   `above(v14, #q13, v5)` implies v14 must be at #q13 to sample v5.
           -   `above(v14, #q9, v1)` implies v14 must be at #q9 to sample v1.
           
           Similar to images, none of the `above` predicates are true for `v13` or `v15`. There is no `above(v12, v13, ..., ...)` or `above(v14, v15, ..., ...)`. This means that without moving, the rovers cannot sample any rocks.
           
           **For Sending Data:**
           -   `comvisible(v12, #q0, #y0, v9)` implies v12 must be at #q0 to communicate.
           -   `comvisible(v14, #q10, #y5, v9)` implies v14 must be at #q10 to communicate.
           
           Again, neither rover is at a communication-visible configuration at their initial positions `v13` or `v15`.
           
           **Conclusion:**
           The goal `new-axiom@0()` requires that the rovers `v12` and `v14` remain at their initial configurations `v13` and `v15`. However, all actions necessary to satisfy the other parts of the goal (taking images, sampling rocks, sending data) require the rovers to move to different configurations. Since moving the rovers would falsify the `atconf` predicates in the goal axiom, and staying put prevents any progress towards the other parts of the goal, the goal is unachievable under these conditions.

