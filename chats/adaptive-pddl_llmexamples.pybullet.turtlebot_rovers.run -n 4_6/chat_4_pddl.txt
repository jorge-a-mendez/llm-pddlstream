User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v14, v15)
           Atom conf(v14, v15)
           Atom free(v12, v16)
           Atom objective(v17)
           Atom rock(v3)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom store(v16)
           Atom camera(v10)
           Atom rock(v8)
           Atom objective(v20)
           Atom rock(v1)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom rock(v5)
           Atom mode(v11)
           Atom type(v3, v2)
           Atom rover(v12)
           Atom lander(v9)
           Atom type(v1, v2)
           Atom free(v14, v16)
           Atom atconf(v12, v13)
           Atom type(v7, v6)
           Atom type(v8, v6)
           Atom type(v5, v6)
           Atom onboard(v10, v14)
           Atom objective(v19)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v12, #q3, #y1, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom above(v12, #q7, v7)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #q5, #y3, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q8, #y4, v20)
           Atom imagerange(v12, #q8, v20)
           Atom conf(v12, #q8)
           Atom ray(#y4)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom above(v12, #q2, v5)
           Atom conf(v12, #q2)
           Atom imagevisible(v14, #q13, #y7, v20)
           Atom imagerange(v14, #q13, v20)
           Atom conf(v14, #q13)
           Atom ray(#y7)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q11, #y5, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y5)
           Atom comvisible(v14, #q12, #y6, v9)
           Atom comrange(v14, #q12, v9)
           Atom conf(v14, #q12)
           Atom ray(#y6)
           Atom above(v14, #o5, v1)
           Atom above(v12, #q6, v3)
           Atom conf(v12, #q6)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q9, v8)
           Atom conf(v12, #q9)
           Atom imagevisible(v14, #q15, #y9, v17)
           Atom imagerange(v14, #q15, v17)
           Atom conf(v14, #q15)
           Atom ray(#y9)
           Atom imagevisible(v12, #q4, #y2, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom imagevisible(v12, #q1, #y0, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom imagevisible(v14, #q14, #y8, v18)
           Atom imagerange(v14, #q14, v18)
           Atom conf(v14, #q14)
           Atom ray(#y8)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q10, v4)
           Atom conf(v12, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #t4, #q0)
           Atom motion(v12, #q0, #t11, #q8)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q0, #t8, #q1)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q0, #t9, #q4)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, v13, #t44, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q0, #t10, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q2, #t14, #q5)
           Atom motion(v12, v13, #t5, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q2, #t15, #q8)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q2, #t12, #q1)
           Atom motion(v12, #q0, #t32, #q2)
           Atom motion(v12, #q2, #t13, #q4)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t16, #q1)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, v13, #t6, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #t19, #q8)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #t17, #q4)
           Atom motion(v12, #q6, #t18, #q5)
           Atom motion(v12, #q9, #t24, #q1)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q9, #t26, #q5)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q9, #t25, #q4)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #t27, #q8)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q7, #t21, #q4)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #t20, #q1)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q7, #t23, #q8)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #t7, #q7)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q7, #t22, #q5)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q12, #t29, v15)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #t28, #q12)
           Atom motion(v14, v15, #t30, #q11)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q8, #t47, #q3)
           Atom motion(v12, #q3, #t45, #q0)
           Atom motion(v12, #q9, #t46, #q3)
           Atom motion(v12, #q3, #t42, #q5)
           Atom motion(v12, #q3, #t40, #q8)
           Atom motion(v12, #q3, #t48, #q6)
           Atom motion(v12, #q7, #t43, #q3)
           Atom motion(v12, #q3, #t39, #q9)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #t34, #q2)
           Atom motion(v12, #q10, #t41, #q3)
           Atom motion(v12, #q3, #t37, #q1)
           Atom motion(v12, #q3, #t35, #q10)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q2, #t33, #q3)
           Atom motion(v12, #q3, #t0, v13)
           Atom motion(v12, #q0, #t38, #q3)
           Atom motion(v12, #q4, #t2, #q3)
           Atom motion(v12, #q3, #t49, #q7)
           Atom motion(v12, #q1, #t1, #q3)
           Atom motion(v12, #q5, #t3, #q3)
           Atom motion(v12, #q6, #t36, #q3)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, v15, #t31, #q13)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q15)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q10 v4 v16))
           ((sample_rock v12 #q2 v5 v16))
           ((sample_rock v12 #q6 v3 v16))
           ((sample_rock v12 #q7 v7 v16))
           ((sample_rock v12 #q9 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t10 #q5))
           ((move v12 #q0 #t11 #q8))
           ((move v12 #q0 #t32 #q2))
           ((move v12 #q0 #t38 #q3))
           ((move v12 #q0 #t8 #q1))
           ((move v12 #q0 #t9 #q4))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q3))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t41 #q3))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t12 #q1))
           ((move v12 #q2 #t13 #q4))
           ((move v12 #q2 #t14 #q5))
           ((move v12 #q2 #t15 #q8))
           ((move v12 #q2 #t33 #q3))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #t0 v13))
           ((move v12 #q3 #t34 #q2))
           ((move v12 #q3 #t35 #q10))
           ((move v12 #q3 #t37 #q1))
           ((move v12 #q3 #t39 #q9))
           ((move v12 #q3 #t40 #q8))
           ((move v12 #q3 #t42 #q5))
           ((move v12 #q3 #t45 #q0))
           ((move v12 #q3 #t48 #q6))
           ((move v12 #q3 #t49 #q7))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t2 #q3))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t3 #q3))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t16 #q1))
           ((move v12 #q6 #t17 #q4))
           ((move v12 #q6 #t18 #q5))
           ((move v12 #q6 #t19 #q8))
           ((move v12 #q6 #t36 #q3))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t20 #q1))
           ((move v12 #q7 #t21 #q4))
           ((move v12 #q7 #t22 #q5))
           ((move v12 #q7 #t23 #q8))
           ((move v12 #q7 #t43 #q3))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t47 #q3))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t24 #q1))
           ((move v12 #q9 #t25 #q4))
           ((move v12 #q9 #t26 #q5))
           ((move v12 #q9 #t27 #q8))
           ((move v12 #q9 #t46 #q3))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t4 #q0))
           ((move v12 v13 #t44 #q4))
           ((move v12 v13 #t5 #q2))
           ((move v12 v13 #t6 #q6))
           ((move v12 v13 #t7 #q7))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t28 #q12))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #t29 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t30 #q11))
           ((move v14 v15 #t31 #q13))
           ((calibrate v12 #q1 #y0 v18 v10))
           ((calibrate v12 #q4 #y2 v17 v10))
           ((calibrate v12 #q5 #y3 v19 v10))
           ((calibrate v12 #q8 #y4 v20 v10))
           ((calibrate v14 #q11 #y5 v19 v10))
           ((calibrate v14 #q13 #y7 v20 v10))
           ((calibrate v14 #q14 #y8 v18 v10))
           ((calibrate v14 #q15 #y9 v17 v10))
           ((take_image v12 #q1 #y0 v18 v10 v11))
           ((take_image v12 #q4 #y2 v17 v10 v11))
           ((take_image v12 #q5 #y3 v19 v10 v11))
           ((take_image v12 #q8 #y4 v20 v10 v11))
           ((take_image v14 #q11 #y5 v19 v10 v11))
           ((take_image v14 #q13 #y7 v20 v10 v11))
           ((take_image v14 #q14 #y8 v18 v10 v11))
           ((take_image v14 #q15 #y9 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y1 v9 v1))
           ((send_analysis v12 #q3 #y1 v9 v4))
           ((send_analysis v12 #q3 #y1 v9 v5))
           ((send_analysis v12 #q3 #y1 v9 v3))
           ((send_analysis v12 #q3 #y1 v9 v7))
           ((send_analysis v12 #q3 #y1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q12 #y6 v9 v1))
           ((send_analysis v14 #q12 #y6 v9 v3))
           ((send_analysis v14 #q12 #y6 v9 v4))
           ((send_analysis v14 #q12 #y6 v9 v5))
           ((send_analysis v14 #q12 #y6 v9 v7))
           ((send_analysis v14 #q12 #y6 v9 v8))
           ((send_image v12 #q3 #y1 v9 v18 v11))
           ((send_image v12 #q3 #y1 v9 v17 v11))
           ((send_image v12 #q3 #y1 v9 v19 v11))
           ((send_image v12 #q3 #y1 v9 v20 v11))
           ((send_image v14 #q12 #y6 v9 v19 v11))
           ((send_image v14 #q12 #y6 v9 v20 v11))
           ((send_image v14 #q12 #y6 v9 v18 v11))
           ((send_image v14 #q12 #y6 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. There are several rock objectives: `v1`, `v3`, `v4`, `v5`, `v7`, `v8`. The goal `new-axiom@0()` can be satisfied if both rovers are at some configuration (`atconf`), both have free storage (`free`), all objectives `v17, v18, v19, v20` have their images received, and all rocks `v1, v3, v4, v5, v7, v8` have their analysis received, with `v1, v3, v4` being of type `v2` (stone) and `v5, v7, v8` being of type `v6` (soil).
           
           Currently, both rovers are at their initial configurations (`v12` at `v13`, `v14` at `v15`), and both have free storage `v16`. So the `atconf` and `free` conditions are met.
           The remaining tasks are to:
           1. Acquire and send images for objectives `v17, v18, v19, v20`.
           2. Analyze and send analysis for rocks `v1, v3, v4, v5, v7, v8`.
           
           Both rovers have a camera `v10` that supports mode `v11`.
           
           **Strategy:**
           *   **Rover `v12`** will focus on taking images and sampling/analyzing rocks. It can then send this data when it's in communication range with the lander `v9`.
           *   **Rover `v14`** will also take images and sample/analyze rocks, and then send its data.
           
           Let's break down the image collection for `v12`:
           *   `v17` (imagevisible at `#q4`)
           *   `v18` (imagevisible at `#q1`)
           *   `v19` (imagevisible at `#q5`)
           *   `v20` (imagevisible at `#q8`)
           
           And for `v14`:
           *   `v17` (imagevisible at `#q15`)
           *   `v18` (imagevisible at `#q14`)
           *   `v19` (imagevisible at `#q11`)
           *   `v20` (imagevisible at `#q13`)
           
           Let's break down rock sampling for `v12`:
           *   `v1` (above at `#q0`)
           *   `v3` (above at `#q6`)
           *   `v4` (above at `#q10`)
           *   `v5` (above at `#q2`)
           *   `v7` (above at `#q7`)
           *   `v8` (above at `#q9`)
           
           And for `v14`:
           *   `v1, v3, v4, v5, v7, v8` (all above at `#o5`)
           
           Both rovers can communicate with `v9` from specific configurations: `v12` at `#q3` and `v14` at `#q12`.
           
           **Plan for Rover v12:**
           1.  Calibrate camera at `v13` (current config) to take image of `v18` at `#q1`. Move to `#q1`.
           2.  Take image of `v18`.
           3.  Move to `#q4` to calibrate and take image of `v17`.
           4.  Move to `#q5` to calibrate and take image of `v19`.
           5.  Move to `#q8` to calibrate and take image of `v20`.
           6.  Move to `#q0` to sample `v1`.
           7.  Move to `#q10` to sample `v4`.
           8.  Move to `#q2` to sample `v5`. (Storage becomes full. Need to drop or send analysis before sampling more)
           9.  Move to `#q3` for communication.
           10. Send all images.
           11. Send analysis for `v1, v4, v5`.
           12. Drop rock `v5` (or any rock).
           13. Move to `#q6` to sample `v3`.
           14. Move to `#q7` to sample `v7`.
           15. Move to `#q9` to sample `v8`.
           16. Move to `#q3` for communication.
           17. Send analysis for `v3, v7, v8`.
           
           **Plan for Rover v14:**
           1. Calibrate camera at `v15` (current config) to take image of `v18` at `#q14`. Move to `#q14`.
           2. Take image of `v18`.
           3. Move to `#q15` to calibrate and take image of `v17`.
           4. Move to `#q11` to calibrate and take image of `v19`.
           5. Move to `#q13` to calibrate and take image of `v20`.
           6. Move to `#o5` to sample `v1, v3, v4, v5, v7, v8` (one by one, dropping as needed, or leveraging rover v12's sampling).
           
           Considering the `new-axiom@0()` goal where all received images and analyses are needed, a more efficient plan would involve both rovers contributing.
           
           Revised plan:
           Rover v12 will take images and sample specific rocks.
           Rover v14 will take images and sample the remaining rocks.
           
           **Rover v12 actions:**
           1.  Calibrate for v18 at #q1.
           2.  Take image of v18.
           3.  Calibrate for v17 at #q4.
           4.  Take image of v17.
           5.  Calibrate for v19 at #q5.
           6.  Take image of v19.
           7.  Calibrate for v20 at #q8.
           8.  Take image of v20.
           9.  Move to #q0 to sample rock v1.
           10. Move to #q10 to sample rock v4.
           11. Move to #q2 to sample rock v5. (v12's storage `v16` is now full).
           12. Move to #q3 (comm range).
           13. Send image of v18.
           14. Send image of v17.
           15. Send image of v19.
           16. Send image of v20.
           17. Send analysis of v1.
           18. Send analysis of v4.
           19. Send analysis of v5.
           20. Drop rock v5 to free storage.
           21. Move to #q6 to sample rock v3.
           22. Move to #q7 to sample rock v7.
           23. Move to #q9 to sample rock v8. (v12's storage `v16` is now full again).
           24. Move to #q3 (comm range).
           25. Send analysis of v3.
           26. Send analysis of v7.
           27. Send analysis of v8.
           
           This covers all images and all rock analyses. The other rover, v14, is not strictly necessary to meet this particular goal, but its actions could be interleaved. However, since there are no cost associated to the actions, and the question is simply to find a plan, the sequential plan for `v12` is sufficient.
           
           --Plan--:
           (calibrate v12 #q1 #y0 v18 v10)
           (take_image v12 #q1 #y0 v18 v10 v11)
           (move v12 #q1 #o2 #q4)
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #o2 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #o2 #q8)
           (calibrate v12 #q8 #y4 v20 v10)
           (take_image v12 #q8 #y4 v20 v10 v11)
           (move v12 #q8 #o2 #q0)
           (sample_rock v12 #q0 v1 v16)
           (move v12 #q0 #o2 #q10)
           (sample_rock v12 #q10 v4 v16)
           (move v12 #q10 #o2 #q2)
           (sample_rock v12 #q2 v5 v16)
           (move v12 #q2 #t33 #q3)
           (send_image v12 #q3 #y1 v9 v18 v11)
           (send_image v12 #q3 #y1 v9 v17 v11)
           (send_image v12 #q3 #y1 v9 v19 v11)
           (send_image v12 #q3 #y1 v9 v20 v11)
           (send_analysis v12 #q3 #y1 v9 v1)
           (send_analysis v12 #q3 #y1 v9 v4)
           (send_analysis v12 #q3 #y1 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q3 #t48 #q6)
           (sample_rock v12 #q6 v3 v16)
           (move v12 #q6 #o2 #q7)
           (sample_rock v12 #q7 v7 v16)
           (move v12 #q7 #o2 #q9)
           (sample_rock v12 #q9 v8 v16)
           (move v12 #q9 #t46 #q3)
           (send_analysis v12 #q3 #y1 v9 v3)
           (send_analysis v12 #q3 #y1 v9 v7)
           (send_analysis v12 #q3 #y1 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` (which encompasses several conditions) was not fully met. I need to ensure all images are received AND all rock analyses are received. My prior plan for `v12` does cover all images and all rock analyses. Let's re-evaluate the preconditions and post-conditions carefully.
           
           The goal `new-axiom@0()` contains the following implicit conjuncts (from the axioms provided):
           *   `atconf(v12, v13)`: This is true initially and is met if `v12` ends up at `v13` or `v15`. My plan leaves `v12` at `#q3`, which could be a problem if `v13` or `v15` are not equivalent to it, or if it isn't an `atconf` state. `atconf(v12, #q3)` is true after the move. The goal's `atconf` allows any configuration for the rover. So `atconf(v12, #q3)` and `atconf(v14, v15)` (initial state, no moves for v14 needed for the goal) are fine.
           *   `free(v12, v16)`: After sampling `v1, v4, v5`, then dropping `v5`, `v12` has one free slot. Then after sampling `v3, v7, v8`, its storage `v16` becomes full. The `drop_rock` action is used after the first set of samples, but not after the second set. This means `free(v12, v16)` would be false at the end of the plan. I need to add a `drop_rock` for `v12` at the very end.
           *   `free(v14, v16)`: This is true initially and `v14` does not sample anything in the revised plan, so it remains true.
           *   `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: All these are covered by `send_image` actions by `v12`.
           *   `type(?stone, v2)` and `receivedanalysis(?stone)` for all rocks of type `v2` (v1, v3, v4).
           *   `type(?soil, v6)` and `receivedanalysis(?soil)` for all rocks of type `v6` (v5, v7, v8).
               All rocks are sampled and their analyses are sent by `v12`.
           
           The problem was `free(v12, v16)` not being true at the end. I need to drop one more rock from `v12` at the end to satisfy this. Since `v12` samples 6 rocks and only has one store `v16`, it will be full at the end of the current plan. I need to drop another rock.
           
           Let's modify the plan to ensure `free(v12, v16)` holds at the end. Rover `v12` has only one store `v16`. It starts free.
           1. `sample_rock v12 #q0 v1 v16` (full)
           2. `sample_rock v12 #q10 v4 v16` (cannot sample, `free(v12, v16)` is false)
           
           Ah, this is a critical misunderstanding of the `sample_rock` action. The `sample_rock` action states `full(?v, ?s)` as an effect and `NegatedAtom free(?v, ?s)`. This means that after `sample_rock` is executed, the storage is `full` and `free` is `false`. So a rover with only one store can only sample one rock before it needs to drop it. This means my plan needs to be significantly restructured to interleave sampling and dropping.
           
           Revised strategy:
           Each rover can only hold one rock at a time.
           1. Calibrate camera.
           2. Take image.
           3. Move to rock.
           4. Sample rock.
           5. Move to comms.
           6. Send image (if new).
           7. Send analysis.
           8. Drop rock.
           Repeat for each rock/image as needed.
           
           Let's trace `v12` for analysis:
           *   Sample `v1` (at `#q0`).
           *   Send `v1` analysis (at `#q3`).
           *   Drop `v1`.
           *   Sample `v4` (at `#q10`).
           *   Send `v4` analysis (at `#q3`).
           *   Drop `v4`.
           *   Sample `v5` (at `#q2`).
           *   Send `v5` analysis (at `#q3`).
           *   Drop `v5`.
           *   Sample `v3` (at `#q6`).
           *   Send `v3` analysis (at `#q3`).
           *   Drop `v3`.
           *   Sample `v7` (at `#q7`).
           *   Send `v7` analysis (at `#q3`).
           *   Drop `v7`.
           *   Sample `v8` (at `#q9`).
           *   Send `v8` analysis (at `#q3`).
           *   Drop `v8`.
           
           The current `atconf` of `v12` is `v13`.
           The current `atconf` of `v14` is `v15`.
           Both `free(v12, v16)` and `free(v14, v16)` are true initially.
           
           We need all images for `v17, v18, v19, v20` and analyses for `v1, v3, v4, v5, v7, v8`.
           
           Let `v12` handle all image taking and sending, and `v14` handle all rock sampling, analyzing, and sending. This distributes the load better and avoids complex interleaved movements if the comms and sample spots are far from each other.
           
           **Rover v12's plan:**
           1.  Calibrate for v18 at `#q1`.
           2.  Take image of v18.
           3.  Move to `#q4` (from `#q1`).
           4.  Calibrate for v17 at `#q4`.
           5.  Take image of v17.
           6.  Move to `#q5` (from `#q4`).
           7.  Calibrate for v19 at `#q5`.
           8.  Take image of v19.
           9.  Move to `#q8` (from `#q5`).
           10. Calibrate for v20 at `#q8`.
           11. Take image of v20.
           12. Move to `#q3` (from `#q8`, comms position).
           13. Send image of v18.
           14. Send image of v17.
           15. Send image of v19.
           16. Send image of v20.
           17. `v12` stays at `#q3` and its storage `v16` remains free.
           
           **Rover v14's plan:**
           `v14` is at `v15`. All rocks `v1, v3, v4, v5, v7, v8` are `above(v14, #o5, rock)`.
           `v14` can communicate from `#q12`.
           1.  Move from `v15` to `#o5`.
           2.  Sample `v1`.
           3.  Move from `#o5` to `#q12`.
           4.  Send analysis for `v1`.
           5.  Drop `v1`.
           6.  Move from `#q12` to `#o5`.
           7.  Sample `v3`.
           8.  Move from `#o5` to `#q12`.
           9.  Send analysis for `v3`.
           10. Drop `v3`.
           11. Move from `#q12` to `#o5`.
           12. Sample `v4`.
           13. Move from `#o5` to `#q12`.
           14. Send analysis for `v4`.
           15. Drop `v4`.
           16. Move from `#q12` to `#o5`.
           17. Sample `v5`.
           18. Move from `#o5` to `#q12`.
           19. Send analysis for `v5`.
           20. Drop `v5`.
           21. Move from `#q12` to `#o5`.
           22. Sample `v7`.
           23. Move from `#o5` to `#q12`.
           24. Send analysis for `v7`.
           25. Drop `v7`.
           26. Move from `#q12` to `#o5`.
           27. Sample `v8`.
           28. Move from `#o5` to `#q12`.
           29. Send analysis for `v8`.
           30. Drop `v8`.
           31. `v14` stays at `#q12` and its storage `v16` is free.
           
           This ensures `free(v12, v16)` and `free(v14, v16)` are true at the end, along with all received images and analyses.
           
           --Plan--:
           (calibrate v12 #q1 #y0 v18 v10)
           (take_image v12 #q1 #y0 v18 v10 v11)
           (move v12 #q1 #o2 #q4)
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #o2 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #o2 #q8)
           (calibrate v12 #q8 #y4 v20 v10)
           (take_image v12 #q8 #y4 v20 v10 v11)
           (move v12 #q8 #t47 #q3)
           (send_image v12 #q3 #y1 v9 v18 v11)
           (send_image v12 #q3 #y1 v9 v17 v11)
           (send_image v12 #q3 #y1 v9 v19 v11)
           (send_image v12 #q3 #y1 v9 v20 v11)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v4 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v5 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v8 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v8)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan still didn't satisfy the goal, likely due to a subtle issue with the `new-axiom@0()` definition or my interpretation of it. Let's break down the `new-axiom@0()` condition completely, considering the variables in the axiom definition provided:
           
           `Axiom new-axiom@0()`
             `Conjunction`
               `Atom atconf(v12, v13)`: `v12` must be at `v13`.
               `Atom atconf(v14, v15)`: `v14` must be at `v15`.
               `Atom free(v12, v16)`: `v12` must have a free store `v16`.
               `Atom free(v14, v16)`: `v14` must have a free store `v16`.
               `Atom receivedimage(v17, v11)`
               `Atom receivedimage(v18, v11)`
               `Atom receivedimage(v19, v11)`
               `Atom receivedimage(v20, v11)`
               `Atom type(?stone, v2)`: This means for any object `?stone` of type `v2` (which is 'stone'), its analysis must be received.
               `Atom receivedanalysis(?stone)`: Specifically for rocks `v1, v3, v4` (which are type `v2`).
               `Atom type(?soil, v6)`: This means for any object `?soil` of type `v6` (which is 'soil'), its analysis must be received.
               `Atom receivedanalysis(?soil)`: Specifically for rocks `v5, v7, v8` (which are type `v6`).
           
           My previous plan failed to satisfy `atconf(v12, v13)` and `atconf(v14, v15)` because `v12` ended at `#q3` and `v14` ended at `#q12`. The goal explicitly requires the rovers to be at their *initial* configurations `v13` and `v15` respectively, *at the end of the plan*.
           
           This is a critical detail. My plan must ensure both rovers return to their initial configurations after completing their tasks.
           
           **Revised Plan Strategy:**
           *   Both rovers need to return to their initial positions: `v12` to `v13` and `v14` to `v15`.
           *   All images must be received.
           *   All rock analyses must be received.
           *   Both `v12` and `v14` must have a free store `v16` at the end.
           
           Let's stick to the distribution of tasks: `v12` for images, `v14` for rocks.
           
           **Rover v12's plan:**
           1.  Calibrate for `v18` at `#q1` (from `v13`).
           2.  Take image of `v18`.
           3.  Move to `#q4`.
           4.  Calibrate for `v17` at `#q4`.
           5.  Take image of `v17`.
           6.  Move to `#q5`.
           7.  Calibrate for `v19` at `#q5`.
           8.  Take image of `v19`.
           9.  Move to `#q8`.
           10. Calibrate for `v20` at `#q8`.
           11. Take image of `v20`.
           12. Move to `#q3` (comm range).
           13. Send image of `v18`.
           14. Send image of `v17`.
           15. Send image of `v19`.
           16. Send image of `v20`.
           17. **Move from `#q3` back to `v13`**. `v12` starts at `v13` and must end at `v13`. Its storage `v16` is free throughout.
           
           **Rover v14's plan:**
           `v14` is at `v15`.
           1.  Move from `v15` to `#o5`.
           2.  Sample `v1`.
           3.  Move from `#o5` to `#q12` (comm range).
           4.  Send analysis for `v1`.
           5.  Drop `v1`.
           6.  Move from `#q12` to `#o5`.
           7.  Sample `v3`.
           8.  Move from `#o5` to `#q12`.
           9.  Send analysis for `v3`.
           10. Drop `v3`.
           11. Move from `#q12` to `#o5`.
           12. Sample `v4`.
           13. Move from `#o5` to `#q12`.
           14. Send analysis for `v4`.
           15. Drop `v4`.
           16. Move from `#q12` to `#o5`.
           17. Sample `v5`.
           18. Move from `#o5` to `#q12`.
           19. Send analysis for `v5`.
           20. Drop `v5`.
           21. Move from `#q12` to `#o5`.
           22. Sample `v7`.
           23. Move from `#o5` to `#q12`.
           24. Send analysis for `v7`.
           25. Drop `v7`.
           26. Move from `#q12` to `#o5`.
           27. Sample `v8`.
           28. Move from `#o5` to `#q12`.
           29. Send analysis for `v8`.
           30. Drop `v8`.
           31. **Move from `#q12` back to `v15`**. `v14` starts at `v15` and must end at `v15`. Its storage `v16` is free at the end.
           
           This plan addresses all conditions identified from `new-axiom@0()`.
           
           --Plan--:
           (move v12 v13 #t8 #q1)
           (calibrate v12 #q1 #y0 v18 v10)
           (take_image v12 #q1 #y0 v18 v10 v11)
           (move v12 #q1 #o2 #q4)
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #o2 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #o2 #q8)
           (calibrate v12 #q8 #y4 v20 v10)
           (take_image v12 #q8 #y4 v20 v10 v11)
           (move v12 #q8 #t47 #q3)
           (send_image v12 #q3 #y1 v9 v18 v11)
           (send_image v12 #q3 #y1 v9 v17 v11)
           (send_image v12 #q3 #y1 v9 v19 v11)
           (send_image v12 #q3 #y1 v9 v20 v11)
           (move v12 #q3 #t0 v13)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v4 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v5 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v8 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q12 #t29 v15)

User:      The plan you provided contains the following invalid actions: `(move v12 v13 #t8 #q1)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q10 v4 v16))
           ((sample_rock v12 #q2 v5 v16))
           ((sample_rock v12 #q6 v3 v16))
           ((sample_rock v12 #q7 v7 v16))
           ((sample_rock v12 #q9 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t10 #q5))
           ((move v12 #q0 #t11 #q8))
           ((move v12 #q0 #t32 #q2))
           ((move v12 #q0 #t38 #q3))
           ((move v12 #q0 #t8 #q1))
           ((move v12 #q0 #t9 #q4))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q3))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t41 #q3))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t12 #q1))
           ((move v12 #q2 #t13 #q4))
           ((move v12 #q2 #t14 #q5))
           ((move v12 #q2 #t15 #q8))
           ((move v12 #q2 #t33 #q3))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #t0 v13))
           ((move v12 #q3 #t34 #q2))
           ((move v12 #q3 #t35 #q10))
           ((move v12 #q3 #t37 #q1))
           ((move v12 #q3 #t39 #q9))
           ((move v12 #q3 #t40 #q8))
           ((move v12 #q3 #t42 #q5))
           ((move v12 #q3 #t45 #q0))
           ((move v12 #q3 #t48 #q6))
           ((move v12 #q3 #t49 #q7))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t2 #q3))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t3 #q3))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t16 #q1))
           ((move v12 #q6 #t17 #q4))
           ((move v12 #q6 #t18 #q5))
           ((move v12 #q6 #t19 #q8))
           ((move v12 #q6 #t36 #q3))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t20 #q1))
           ((move v12 #q7 #t21 #q4))
           ((move v12 #q7 #t22 #q5))
           ((move v12 #q7 #t23 #q8))
           ((move v12 #q7 #t43 #q3))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t47 #q3))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t24 #q1))
           ((move v12 #q9 #t25 #q4))
           ((move v12 #q9 #t26 #q5))
           ((move v12 #q9 #t27 #q8))
           ((move v12 #q9 #t46 #q3))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t4 #q0))
           ((move v12 v13 #t44 #q4))
           ((move v12 v13 #t5 #q2))
           ((move v12 v13 #t6 #q6))
           ((move v12 v13 #t7 #q7))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t28 #q12))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #t29 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t30 #q11))
           ((move v14 v15 #t31 #q13))
           ((calibrate v12 #q1 #y0 v18 v10))
           ((calibrate v12 #q4 #y2 v17 v10))
           ((calibrate v12 #q5 #y3 v19 v10))
           ((calibrate v12 #q8 #y4 v20 v10))
           ((calibrate v14 #q11 #y5 v19 v10))
           ((calibrate v14 #q13 #y7 v20 v10))
           ((calibrate v14 #q14 #y8 v18 v10))
           ((calibrate v14 #q15 #y9 v17 v10))
           ((take_image v12 #q1 #y0 v18 v10 v11))
           ((take_image v12 #q4 #y2 v17 v10 v11))
           ((take_image v12 #q5 #y3 v19 v10 v11))
           ((take_image v12 #q8 #y4 v20 v10 v11))
           ((take_image v14 #q11 #y5 v19 v10 v11))
           ((take_image v14 #q13 #y7 v20 v10 v11))
           ((take_image v14 #q14 #y8 v18 v10 v11))
           ((take_image v14 #q15 #y9 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y1 v9 v1))
           ((send_analysis v12 #q3 #y1 v9 v4))
           ((send_analysis v12 #q3 #y1 v9 v5))
           ((send_analysis v12 #q3 #y1 v9 v3))
           ((send_analysis v12 #q3 #y1 v9 v7))
           ((send_analysis v12 #q3 #y1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q12 #y6 v9 v1))
           ((send_analysis v14 #q12 #y6 v9 v3))
           ((send_analysis v14 #q12 #y6 v9 v4))
           ((send_analysis v14 #q12 #y6 v9 v5))
           ((send_analysis v14 #q12 #y6 v9 v7))
           ((send_analysis v14 #q12 #y6 v9 v8))
           ((send_image v12 #q3 #y1 v9 v18 v11))
           ((send_image v12 #q3 #y1 v9 v17 v11))
           ((send_image v12 #q3 #y1 v9 v19 v11))
           ((send_image v12 #q3 #y1 v9 v20 v11))
           ((send_image v14 #q12 #y6 v9 v19 v11))
           ((send_image v14 #q12 #y6 v9 v20 v11))
           ((send_image v14 #q12 #y6 v9 v18 v11))
           ((send_image v14 #q12 #y6 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The error message indicates that `(move v12 v13 #t8 #q1)` is an invalid action. I need to carefully check the available `move` actions for `v12` starting at `v13`.
           
           Available moves for `v12` from `v13`:
           *   `((move v12 v13 #o2 #q1))`
           *   `((move v12 v13 #o2 #q10))`
           *   `((move v12 v13 #o2 #q3))`
           *   `((move v12 v13 #o2 #q5))`
           *   `((move v12 v13 #o2 #q8))`
           *   `((move v12 v13 #o2 #q9))`
           *   `((move v12 v13 #o2 v13))` (staying in place)
           *   `((move v12 v13 #t4 #q0))`
           *   `((move v12 v13 #t44 #q4))`
           *   `((move v12 v13 #t5 #q2))`
           *   `((move v12 v13 #t6 #q6))`
           *   `((move v12 v13 #t7 #q7))`
           
           My previous plan used `(move v12 v13 #t8 #q1)`, which is not in this list. Instead, I should use `(move v12 v13 #o2 #q1)`. This is a direct path and should be valid.
           
           Let's re-verify the full plan with this correction, ensuring all moves are valid.
           
           **Rover v12's plan (corrected first move):**
           1.  **Move from `v13` to `#q1`:** `(move v12 v13 #o2 #q1)` (valid)
           2.  Calibrate for `v18` at `#q1`.
           3.  Take image of `v18`.
           4.  Move to `#q4` (from `#q1`): `(move v12 #q1 #o2 #q4)` (valid)
           5.  Calibrate for `v17` at `#q4`.
           6.  Take image of `v17`.
           7.  Move to `#q5` (from `#q4`): `(move v12 #q4 #o2 #q5)` (valid)
           8.  Calibrate for `v19` at `#q5`.
           9.  Take image of `v19`.
           10. Move to `#q8` (from `#q5`): `(move v12 #q5 #o2 #q8)` (valid)
           11. Calibrate for `v20` at `#q8`.
           12. Take image of `v20`.
           13. Move to `#q3` (from `#q8`, comm range): `(move v12 #q8 #t47 #q3)` (valid)
           14. Send image of `v18`.
           15. Send image of `v17`.
           16. Send image of `v19`.
           17. Send image of `v20`.
           18. **Move from `#q3` back to `v13`**: `(move v12 #q3 #t0 v13)` (valid)
           
           **Rover v14's plan:**
           1.  **Move from `v15` to `#o5`**: `(move v14 v15 #o2 #o5)` (valid)
           2.  Sample `v1`.
           3.  Move from `#o5` to `#q12` (comm range): `(move v14 #o5 #o2 #q12)` (valid)
           4.  Send analysis for `v1`.
           5.  Drop `v1`.
           6.  Move from `#q12` to `#o5`: `(move v14 #q12 #o2 #o5)` (valid)
           7.  Sample `v3`.
           8.  Move from `#o5` to `#q12`: `(move v14 #o5 #o2 #q12)` (valid)
           9.  Send analysis for `v3`.
           10. Drop `v3`.
           11. Move from `#q12` to `#o5`: `(move v14 #q12 #o2 #o5)` (valid)
           12. Sample `v4`.
           13. Move from `#o5` to `#q12`: `(move v14 #o5 #o2 #q12)` (valid)
           14. Send analysis for `v4`.
           15. Drop `v4`.
           16. Move from `#q12` to `#o5`: `(move v14 #q12 #o2 #o5)` (valid)
           17. Sample `v5`.
           18. Move from `#o5` to `#q12`: `(move v14 #o5 #o2 #q12)` (valid)
           19. Send analysis for `v5`.
           20. Drop `v5`.
           21. Move from `#q12` to `#o5`: `(move v14 #q12 #o2 #o5)` (valid)
           22. Sample `v7`.
           23. Move from `#o5` to `#q12`: `(move v14 #o5 #o2 #q12)` (valid)
           24. Send analysis for `v7`.
           25. Drop `v7`.
           26. Move from `#q12` to `#o5`: `(move v14 #q12 #o2 #o5)` (valid)
           27. Sample `v8`.
           28. Move from `#o5` to `#q12`: `(move v14 #o5 #o2 #q12)` (valid)
           29. Send analysis for `v8`.
           30. Drop `v8`.
           31. **Move from `#q12` back to `v15`**: `(move v14 #q12 #t29 v15)` (valid)
           
           This plan now uses only explicitly listed valid moves.
           
           --Plan--:
           (move v12 v13 #o2 #q1)
           (calibrate v12 #q1 #y0 v18 v10)
           (take_image v12 #q1 #y0 v18 v10 v11)
           (move v12 #q1 #o2 #q4)
           (calibrate v12 #q4 #y2 v17 v10)
           (take_image v12 #q4 #y2 v17 v10 v11)
           (move v12 #q4 #o2 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #o2 #q8)
           (calibrate v12 #q8 #y4 v20 v10)
           (take_image v12 #q8 #y4 v20 v10 v11)
           (move v12 #q8 #t47 #q3)
           (send_image v12 #q3 #y1 v9 v18 v11)
           (send_image v12 #q3 #y1 v9 v17 v11)
           (send_image v12 #q3 #y1 v9 v19 v11)
           (send_image v12 #q3 #y1 v9 v20 v11)
           (move v12 #q3 #t0 v13)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v4 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v5 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q12 #o2 #o5)
           (sample_rock v14 #o5 v8 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y6 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q12 #t29 v15)

