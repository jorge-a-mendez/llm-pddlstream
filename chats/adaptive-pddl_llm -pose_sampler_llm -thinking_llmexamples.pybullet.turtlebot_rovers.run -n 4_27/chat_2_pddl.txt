User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v19)
           Atom type(v8, v6)
           Atom type(v4, v2)
           Atom store(v16)
           Atom camera(v10)
           Atom free(v12, v16)
           Atom lander(v9)
           Atom rock(v5)
           Atom mode(v11)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom objective(v20)
           Atom atconf(v12, v13)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom rover(v12)
           Atom rock(v7)
           Atom rock(v4)
           Atom conf(v14, v15)
           Atom type(v7, v6)
           Atom type(v1, v2)
           Atom conf(v12, v13)
           Atom type(v3, v2)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom onboard(v10, v14)
           Atom objective(v17)
           Atom type(v5, v6)
           Atom rock(v3)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #q0, #y0, v17)
           Atom imagerange(v12, #q0, v17)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v4)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #q1, v8)
           Atom conf(v14, #q1)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q7, v1)
           Atom conf(v14, #q7)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v12, #q3, #y2, v20)
           Atom imagerange(v12, #q3, v20)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v12, #q6, #y5, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y5)
           Atom imagevisible(v12, #q5, #y4, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v5)
           Atom above(v12, #o5, v5)
           Atom comvisible(v14, #q4, #y3, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, v15, #t4, #q1)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t1, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #t3, v15)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q1, #t2, #q4)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t5, #q2)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #t8, #q2)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #t7, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q3, #t6, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #q4, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q1 v8 v16))
           ((sample_rock v14 #q7 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t5 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #t1 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t6 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t7 #q2))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t8 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t2 #q4))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #t3 v15))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t4 #q1))
           ((calibrate v12 #q0 #y0 v17 v10))
           ((calibrate v12 #q3 #y2 v20 v10))
           ((calibrate v12 #q5 #y4 v19 v10))
           ((calibrate v12 #q6 #y5 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q0 #y0 v17 v10 v11))
           ((take_image v12 #q3 #y2 v20 v10 v11))
           ((take_image v12 #q5 #y4 v19 v10 v11))
           ((take_image v12 #q6 #y5 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y3 v9 v3))
           ((send_analysis v14 #q4 #y3 v9 v4))
           ((send_analysis v14 #q4 #y3 v9 v5))
           ((send_analysis v14 #q4 #y3 v9 v7))
           ((send_analysis v14 #q4 #y3 v9 v8))
           ((send_analysis v14 #q4 #y3 v9 v1))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v20 v11))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q4 #y3 v9 v17 v11))
           ((send_image v14 #q4 #y3 v9 v18 v11))
           ((send_image v14 #q4 #y3 v9 v19 v11))
           ((send_image v14 #q4 #y3 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Master Plan: Achieving `new-axiom@0()`**
           
           Alright, let's break this down. My objective is `new-axiom@0()`, a conjunction of various states and achievements. Essentially, I need to get images of objects v17, v18, v19, and v20 in mode v11, analyze a rock of type v2 (stone) and a rock of type v6 (soil), and ensure rovers v12 and v14 are in their initial configurations, with v12's store free. The initial state gives me a head start, as some conditions are already met (rover positions, free stores).
           
           **Sub-Goal Breakdown and Strategy**
           
           First, I'll tackle the imaging.  To get those images, I need to use the `take_image` action. This necessitates that I have the `calibrated` property, an image be `imagevisible`, and be in an appropriate configuration.
           *   My plan is to use rover v12 since v10 is onboard.
           *   v10 can capture images in mode v11.
           *   I can move v12 to the configurations needed to capture the images.
           *   I'll then send the images using `send_image`.
           
           Next, I'll take on the rock analysis. I need to sample and analyze rocks of type v2 and v6.
           *   I can use the `sample_rock` action on rover v12.
           *   I can sample at #o5 and the type of rock doesn't matter, as long as I have one of each type.
           *   I need to make sure to `drop_rock` after I sample for a free store.
           *   I can then send the analysis.
           
           **Rover v12's Path to Glory**
           
           My initial plan is to ensure v12 goes through:
           1.  **Imaging:** Move to several positions to take and send images.
           2.  **Rock Analysis:** Move to the rock sampling point (#o5), sample a stone, drop the stone, sample a soil, drop the soil.
           3.  **Final Move:** After it is all said and done, v12 needs to return to its initial configuration (v13).
           
           **The Final Sequence (Action)**
           
           1.  Move v12 to #q0. Calibrate and capture image for v17.
           2.  Move to #q3. Calibrate and capture image for v20.
           3.  Move to #q6. Calibrate and capture image for v18.
           4.  Move to #q5. Calibrate and capture image for v19.
           5.  Move to #q2. Send the images.
           6.  Move to #o5 (rock sampling location).
           7.  Sample a rock of type v2 (v1).
           8.  Drop the rock of type v2.
           9.  Sample a rock of type v6 (v5).
           10. Drop the rock of type v6.
           11. Move to #q2 (sending location).
           12. Send analysis of rock v1.
           13. Send analysis of rock v5.
           14. Move back to the initial configuration v13.
           
           Now, with v12 returning to its initial state, all conditions of `new-axiom@0()` will be satisfied.
           
)

Model:     **The Master Plan: Achieving `new-axiom@0()`**
           
           Alright, let's break this down. My objective is `new-axiom@0()`, a conjunction of various states and achievements. Essentially, I need to get images of objects v17, v18, v19, and v20 in mode v11, analyze a rock of type v2 (stone) and a rock of type v6 (soil), and ensure rovers v12 and v14 are in their initial configurations, with v12's store free. The initial state gives me a head start, as some conditions are already met (rover positions, free stores).
           
           **Sub-Goal Breakdown and Strategy**
           
           First, I'll tackle the imaging.  To get those images, I need to use the `take_image` action. This necessitates that I have the `calibrated` property, an image be `imagevisible`, and be in an appropriate configuration.
           *   My plan is to use rover v12 since v10 is onboard.
           *   v10 can capture images in mode v11.
           *   I can move v12 to the configurations needed to capture the images.
           *   I'll then send the images using `send_image`.
           
           Next, I'll take on the rock analysis. I need to sample and analyze rocks of type v2 and v6.
           *   I can use the `sample_rock` action on rover v12.
           *   I can sample at #o5 and the type of rock doesn't matter, as long as I have one of each type.
           *   I need to make sure to `drop_rock` after I sample for a free store.
           *   I can then send the analysis.
           
           **Rover v12's Path to Glory**
           
           My initial plan is to ensure v12 goes through:
           1.  **Imaging:** Move to several positions to take and send images.
           2.  **Rock Analysis:** Move to the rock sampling point (#o5), sample a stone, drop the stone, sample a soil, drop the soil.
           3.  **Final Move:** After it is all said and done, v12 needs to return to its initial configuration (v13).
           
           **The Final Sequence (Action)**
           
           1.  Move v12 to #q0. Calibrate and capture image for v17.
           2.  Move to #q3. Calibrate and capture image for v20.
           3.  Move to #q6. Calibrate and capture image for v18.
           4.  Move to #q5. Calibrate and capture image for v19.
           5.  Move to #q2. Send the images.
           6.  Move to #o5 (rock sampling location).
           7.  Sample a rock of type v2 (v1).
           8.  Drop the rock of type v2.
           9.  Sample a rock of type v6 (v5).
           10. Drop the rock of type v6.
           11. Move to #q2 (sending location).
           12. Send analysis of rock v1.
           13. Send analysis of rock v5.
           14. Move back to the initial configuration v13.
           
           Now, with v12 returning to its initial state, all conditions of `new-axiom@0()` will be satisfied.
           

