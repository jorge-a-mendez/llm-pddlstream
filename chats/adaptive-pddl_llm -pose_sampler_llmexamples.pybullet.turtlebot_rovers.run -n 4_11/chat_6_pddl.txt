User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q19: object
           #q2: object
           #q20: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v7, v6)
           Atom objective(v19)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom type(v8, v6)
           Atom camera(v10)
           Atom store(v16)
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom conf(v14, v15)
           Atom rock(v3)
           Atom rock(v1)
           Atom rock(v5)
           Atom objective(v18)
           Atom rover(v14)
           Atom free(v14, v16)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom objective(v17)
           Atom conf(v12, v13)
           Atom type(v3, v2)
           Atom objective(v20)
           Atom free(v12, v16)
           Atom rock(v7)
           Atom supports(v10, v11)
           Atom onboard(v10, v14)
           Atom rock(v4)
           Atom type(v1, v2)
           Atom rover(v12)
           Atom lander(v9)
           Atom imagevisible(v12, #q8, #y6, v18)
           Atom imagerange(v12, #q8, v18)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom imagevisible(v12, #q16, #y9, v19)
           Atom imagerange(v12, #q16, v19)
           Atom conf(v12, #q16)
           Atom ray(#y9)
           Atom comvisible(v12, #q3, #y1, v9)
           Atom comrange(v12, #q3, v9)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom above(v12, #q20, v4)
           Atom conf(v12, #q20)
           Atom above(v12, #q0, v5)
           Atom conf(v12, #q0)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v12, #q17, v7)
           Atom conf(v12, #q17)
           Atom above(v12, #q15, v3)
           Atom conf(v12, #q15)
           Atom imagevisible(v12, #q14, #y8, v20)
           Atom imagerange(v12, #q14, v20)
           Atom conf(v12, #q14)
           Atom ray(#y8)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q11, #y7, v17)
           Atom imagerange(v12, #q11, v17)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q7, #y5, v18)
           Atom imagerange(v14, #q7, v18)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom comvisible(v14, #q2, #y0, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y0)
           Atom imagevisible(v14, #q5, #y3, v19)
           Atom imagerange(v14, #q5, v19)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q4, #y2, v20)
           Atom imagerange(v14, #q4, v20)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom above(v14, #q19, v5)
           Atom conf(v14, #q19)
           Atom above(v14, #q13, v4)
           Atom conf(v14, #q13)
           Atom above(v14, #q9, v7)
           Atom conf(v14, #q9)
           Atom above(v14, #q18, v1)
           Atom conf(v14, #q18)
           Atom above(v14, #q10, v3)
           Atom conf(v14, #q10)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q18, #o2, #q9)
           Atom motion(v14, #q18, #o2, #q18)
           Atom motion(v14, #q18, #o2, v15)
           Atom motion(v14, #q9, #o2, #q18)
           Atom motion(v14, v15, #t40, #q18)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, v13, #t17, #q8)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q18)
           Atom motion(v14, #q18, #o2, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q8, #o2, #q16)
           Atom motion(v12, v13, #t35, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q15, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q8)
           Atom motion(v14, #q19, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q19)
           Atom motion(v14, #q18, #o2, #q19)
           Atom motion(v14, #q9, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q18)
           Atom motion(v14, v15, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q9)
           Atom motion(v14, #q19, #o2, v15)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q18)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q18, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v12, #q20, #o2, #q16)
           Atom motion(v12, #q8, #o2, #q20)
           Atom motion(v12, #q20, #o2, v13)
           Atom motion(v12, v13, #t47, #q20)
           Atom motion(v12, #q15, #o2, #q20)
           Atom motion(v12, #q16, #o2, #q20)
           Atom motion(v12, #q20, #o2, #q20)
           Atom motion(v12, #q20, #o2, #q15)
           Atom motion(v12, #q20, #o2, #q8)
           Atom motion(v12, #q20, #o2, #q0)
           Atom motion(v12, #q16, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q16)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q20)
           Atom motion(v12, #q8, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q8)
           Atom motion(v12, #q17, #o2, #q16)
           Atom motion(v12, #q17, #o2, #q0)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, #q15, #o2, #q17)
           Atom motion(v12, v13, #o2, #q17)
           Atom motion(v12, #q20, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q17)
           Atom motion(v12, #q16, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q20)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #t8, #q4)
           Atom motion(v14, #q18, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q18)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q19)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q19, #o2, #q4)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q17)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q16, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, v13, #t1, #q1)
           Atom motion(v12, #q1, #o2, #q20)
           Atom motion(v12, #q17, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q16)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q20, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v14, #q5, #t16, #q4)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, v15, #t9, #q5)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q5, #o2, #q18)
           Atom motion(v14, #q5, #o2, #q19)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q19, #o2, #q5)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q18, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q14, #t27, #q15)
           Atom motion(v12, #q14, #o2, #q20)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q17)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q20, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q17, #o2, #q14)
           Atom motion(v12, #q14, #t39, #q3)
           Atom motion(v12, #q17, #t32, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #t33, #q8)
           Atom motion(v12, #q3, #t30, #q17)
           Atom motion(v12, #q3, #t7, #q1)
           Atom motion(v12, #q3, #t29, #q15)
           Atom motion(v12, #q0, #t3, #q3)
           Atom motion(v12, #q3, #t38, #q14)
           Atom motion(v12, #q20, #t46, #q3)
           Atom motion(v12, #q15, #t31, #q3)
           Atom motion(v12, #q16, #t36, #q3)
           Atom motion(v12, #q3, #t5, v13)
           Atom motion(v12, #q8, #t24, #q3)
           Atom motion(v12, #q3, #t48, #q16)
           Atom motion(v12, #q3, #o2, #q20)
           Atom motion(v12, #q1, #t4, #q3)
           Atom motion(v12, #q3, #t6, #q0)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q18, #t44, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #t41, #q13)
           Atom motion(v14, #q2, #t2, v15)
           Atom motion(v14, #q2, #t42, #q18)
           Atom motion(v14, #q12, #t20, #q2)
           Atom motion(v14, #q19, #t45, #q2)
           Atom motion(v14, #q13, #t34, #q2)
           Atom motion(v14, #q2, #t23, #q12)
           Atom motion(v14, #q2, #t21, #q9)
           Atom motion(v14, #q5, #t13, #q2)
           Atom motion(v14, #q9, #t18, #q2)
           Atom motion(v14, #q4, #t12, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t43, #q19)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q18, #o2, #q7)
           Atom motion(v14, #q7, #t15, #q2)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q19)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q18)
           Atom motion(v14, #q19, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, v15, #t11, #q7)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q19)
           Atom motion(v14, #q18, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q18)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, v15, #t10, #q6)
           Atom motion(v14, #q19, #o2, #q6)
           Atom motion(v14, #q6, #t14, #q2)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v12, #q11, #o2, #q16)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q11, #t26, #q14)
           Atom motion(v12, #q11, #t25, #q3)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q3, #t37, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q17)
           Atom motion(v12, #q11, #o2, #q20)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q8, #t28, #q11)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q17, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q11)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q20, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q18)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q18, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q10, #t19, #q2)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, #q2, #t22, #q10)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q17)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q17, #o2, #o5)
           Atom motion(v12, #q16, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q16)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q20)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q20, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q14)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v5 v16))
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q15 v3 v16))
           ((sample_rock v12 #q17 v7 v16))
           ((sample_rock v12 #q20 v4 v16))
           ((sample_rock v14 #q10 v3 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q13 v4 v16))
           ((sample_rock v14 #q18 v1 v16))
           ((sample_rock v14 #q19 v5 v16))
           ((sample_rock v14 #q9 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q16))
           ((move v12 #o5 #o2 #q17))
           ((move v12 #o5 #o2 #q20))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q16))
           ((move v12 #q0 #o2 #q17))
           ((move v12 #q0 #o2 #q20))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t3 #q3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q16))
           ((move v12 #q1 #o2 #q17))
           ((move v12 #q1 #o2 #q20))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t4 #q3))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q16))
           ((move v12 #q11 #o2 #q17))
           ((move v12 #q11 #o2 #q20))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t25 #q3))
           ((move v12 #q11 #t26 #q14))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 #q17))
           ((move v12 #q14 #o2 #q20))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t27 #q15))
           ((move v12 #q14 #t39 #q3))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q16))
           ((move v12 #q15 #o2 #q17))
           ((move v12 #q15 #o2 #q20))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t31 #q3))
           ((move v12 #q16 #o2 #o5))
           ((move v12 #q16 #o2 #q0))
           ((move v12 #q16 #o2 #q1))
           ((move v12 #q16 #o2 #q11))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q17))
           ((move v12 #q16 #o2 #q20))
           ((move v12 #q16 #o2 #q8))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t36 #q3))
           ((move v12 #q17 #o2 #o5))
           ((move v12 #q17 #o2 #q0))
           ((move v12 #q17 #o2 #q1))
           ((move v12 #q17 #o2 #q11))
           ((move v12 #q17 #o2 #q14))
           ((move v12 #q17 #o2 #q15))
           ((move v12 #q17 #o2 #q16))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q20))
           ((move v12 #q17 #o2 #q8))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q17 #t32 #q3))
           ((move v12 #q20 #o2 #o5))
           ((move v12 #q20 #o2 #q0))
           ((move v12 #q20 #o2 #q1))
           ((move v12 #q20 #o2 #q11))
           ((move v12 #q20 #o2 #q14))
           ((move v12 #q20 #o2 #q15))
           ((move v12 #q20 #o2 #q16))
           ((move v12 #q20 #o2 #q17))
           ((move v12 #q20 #o2 #q20))
           ((move v12 #q20 #o2 #q8))
           ((move v12 #q20 #o2 v13))
           ((move v12 #q20 #t46 #q3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q20))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #t29 #q15))
           ((move v12 #q3 #t30 #q17))
           ((move v12 #q3 #t33 #q8))
           ((move v12 #q3 #t37 #q11))
           ((move v12 #q3 #t38 #q14))
           ((move v12 #q3 #t48 #q16))
           ((move v12 #q3 #t5 v13))
           ((move v12 #q3 #t6 #q0))
           ((move v12 #q3 #t7 #q1))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q16))
           ((move v12 #q8 #o2 #q17))
           ((move v12 #q8 #o2 #q20))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t24 #q3))
           ((move v12 #q8 #t28 #q11))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t1 #q1))
           ((move v12 v13 #t17 #q8))
           ((move v12 v13 #t35 #q16))
           ((move v12 v13 #t47 #q20))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q18))
           ((move v14 #q10 #o2 #q19))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t19 #q2))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q18))
           ((move v14 #q12 #o2 #q19))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t20 #q2))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q18))
           ((move v14 #q13 #o2 #q19))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t34 #q2))
           ((move v14 #q18 #o2 #q10))
           ((move v14 #q18 #o2 #q12))
           ((move v14 #q18 #o2 #q13))
           ((move v14 #q18 #o2 #q18))
           ((move v14 #q18 #o2 #q19))
           ((move v14 #q18 #o2 #q4))
           ((move v14 #q18 #o2 #q5))
           ((move v14 #q18 #o2 #q6))
           ((move v14 #q18 #o2 #q7))
           ((move v14 #q18 #o2 #q9))
           ((move v14 #q18 #o2 v15))
           ((move v14 #q18 #t44 #q2))
           ((move v14 #q19 #o2 #q10))
           ((move v14 #q19 #o2 #q12))
           ((move v14 #q19 #o2 #q13))
           ((move v14 #q19 #o2 #q18))
           ((move v14 #q19 #o2 #q19))
           ((move v14 #q19 #o2 #q4))
           ((move v14 #q19 #o2 #q5))
           ((move v14 #q19 #o2 #q6))
           ((move v14 #q19 #o2 #q7))
           ((move v14 #q19 #o2 #q9))
           ((move v14 #q19 #o2 v15))
           ((move v14 #q19 #t45 #q2))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #t2 v15))
           ((move v14 #q2 #t21 #q9))
           ((move v14 #q2 #t22 #q10))
           ((move v14 #q2 #t23 #q12))
           ((move v14 #q2 #t41 #q13))
           ((move v14 #q2 #t42 #q18))
           ((move v14 #q2 #t43 #q19))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q18))
           ((move v14 #q4 #o2 #q19))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t12 #q2))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q18))
           ((move v14 #q5 #o2 #q19))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t13 #q2))
           ((move v14 #q5 #t16 #q4))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q18))
           ((move v14 #q6 #o2 #q19))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t14 #q2))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q18))
           ((move v14 #q7 #o2 #q19))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t15 #q2))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q18))
           ((move v14 #q9 #o2 #q19))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t18 #q2))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q19))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q6))
           ((move v14 v15 #t11 #q7))
           ((move v14 v15 #t40 #q18))
           ((move v14 v15 #t8 #q4))
           ((move v14 v15 #t9 #q5))
           ((calibrate v12 #q11 #y7 v17 v10))
           ((calibrate v12 #q14 #y8 v20 v10))
           ((calibrate v12 #q16 #y9 v19 v10))
           ((calibrate v12 #q8 #y6 v18 v10))
           ((calibrate v14 #q4 #y2 v20 v10))
           ((calibrate v14 #q5 #y3 v19 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((calibrate v14 #q7 #y5 v18 v10))
           ((take_image v12 #q11 #y7 v17 v10 v11))
           ((take_image v12 #q14 #y8 v20 v10 v11))
           ((take_image v12 #q16 #y9 v19 v10 v11))
           ((take_image v12 #q8 #y6 v18 v10 v11))
           ((take_image v14 #q4 #y2 v20 v10 v11))
           ((take_image v14 #q5 #y3 v19 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((take_image v14 #q7 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q3 #y1 v9 v8))
           ((send_analysis v12 #q3 #y1 v9 v5))
           ((send_analysis v12 #q3 #y1 v9 v1))
           ((send_analysis v12 #q3 #y1 v9 v3))
           ((send_analysis v12 #q3 #y1 v9 v7))
           ((send_analysis v12 #q3 #y1 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y0 v9 v3))
           ((send_analysis v14 #q2 #y0 v9 v8))
           ((send_analysis v14 #q2 #y0 v9 v4))
           ((send_analysis v14 #q2 #y0 v9 v1))
           ((send_analysis v14 #q2 #y0 v9 v5))
           ((send_analysis v14 #q2 #y0 v9 v7))
           ((send_image v12 #q3 #y1 v9 v17 v11))
           ((send_image v12 #q3 #y1 v9 v20 v11))
           ((send_image v12 #q3 #y1 v9 v19 v11))
           ((send_image v12 #q3 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y0 v9 v20 v11))
           ((send_image v14 #q2 #y0 v9 v19 v11))
           ((send_image v14 #q2 #y0 v9 v17 v11))
           ((send_image v14 #q2 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. Both rovers are equipped with a camera `v10` and a store `v16`. There are several objectives (`v17`, `v18`, `v19`, `v20`) and rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`). The rocks are of two types: `v2` (for `v1`, `v3`, `v4`) and `v6` (for `v5`, `v7`, `v8`). The camera `v10` supports mode `v11`. Both rovers `v12` and `v14` are currently at their initial configurations `v13` and `v15` respectively, and their stores are free.
           
           The goal is to satisfy `new-axiom@0()`, which requires:
           1. `atconf(v12, v13)`
           2. `atconf(v14, v15)`
           3. `free(v12, v16)`
           4. `free(v14, v16)`
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `type(?stone, v2)` and `receivedanalysis(?stone)` (implies `receivedanalysis(v1)`, `receivedanalysis(v3)`, `receivedanalysis(v4)`)
           10. `type(?soil, v6)` and `receivedanalysis(?soil)` (implies `receivedanalysis(v5)`, `receivedanalysis(v7)`, `receivedanalysis(v8)`)
           
           From the initial state:
           - `atconf(v12, v13)` and `atconf(v14, v15)` are already true.
           - `free(v12, v16)` and `free(v14, v16)` are already true.
           
           Therefore, the remaining tasks are:
           - Get and send images for all objectives (`v17`, `v18`, `v19`, `v20`) using mode `v11`.
           - Sample and send analysis for all rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`).
           
           Both rovers can contribute to these goals. Since both rovers start at their home configurations and have free stores, we can use them to collect samples and images.
           
           We need to:
           1. Calibrate a camera.
           2. Take an image of each objective.
           3. Send each image to the lander.
           4. Sample each rock.
           5. Send the analysis of each rock to the lander.
           
           Let's break down the image and analysis goals.
           
           **Image Goals:**
           - `receivedimage(v17, v11)`: Rover `v12` can image `v17` at `#q11`. Rover `v14` can image `v17` at `#q6`.
           - `receivedimage(v18, v11)`: Rover `v12` can image `v18` at `#q8`. Rover `v14` can image `v18` at `#q7`.
           - `receivedimage(v19, v11)`: Rover `v12` can image `v19` at `#q16`. Rover `v14` can image `v19` at `#q5`.
           - `receivedimage(v20, v11)`: Rover `v12` can image `v20` at `#q14`. Rover `v14` can image `v20` at `#q4`.
           
           **Analysis Goals (for all rocks):**
           - `receivedanalysis(v1)`: Rover `v12` can sample `v1` at `#q1`. Rover `v14` can sample `v1` at `#q18`.
           - `receivedanalysis(v3)`: Rover `v12` can sample `v3` at `#q15`. Rover `v14` can sample `v3` at `#q10`.
           - `receivedanalysis(v4)`: Rover `v12` can sample `v4` at `#q20`. Rover `v14` can sample `v4` at `#q13`.
           - `receivedanalysis(v5)`: Rover `v12` can sample `v5` at `#q0`. Rover `v14` can sample `v5` at `#q19`.
           - `receivedanalysis(v7)`: Rover `v12` can sample `v7` at `#q17`. Rover `v14` can sample `v7` at `#q9`.
           - `receivedanalysis(v8)`: Rover `v12` can sample `v8` at `#o5`. Rover `v14` can sample `v8` at `#q12`.
           
           Rover `v12` is at `v13`. Rover `v14` is at `v15`.
           Both rovers have onboard camera `v10` and store `v16`.
           `supports(v10, v11)` is true.
           
           Let's assign tasks to rovers.
           
           **Rover v12 tasks:**
           - Calibrate camera.
           - Take images of v17, v18, v19, v20.
           - Sample rocks v1, v3, v4, v5, v7, v8.
           - Send all images and analyses.
           
           To minimize movement, we can plan for Rover v12 to go to a position where it can send data (e.g., `#q3`) and then repeatedly calibrate, take image, send image, or move to rock, sample rock, send analysis.
           
           Let's prioritize sending images and analyses.
           
           **Initial state for v12:** `atconf(v12, v13)`, `free(v12, v16)`. No calibration, no images, no analyses.
           **Initial state for v14:** `atconf(v14, v15)`, `free(v14, v16)`. No calibration, no images, no analyses.
           
           The goal requires all `receivedimage` and `receivedanalysis` predicates to be true. This means we need to perform all image and analysis collection, and then send them.
           
           It makes sense to let one rover focus on sampling and the other on imaging, or to split the work. Given the initial configuration, both rovers are well-positioned for various tasks. Since sending analysis requires `analyzed` and sending image requires `haveimage`, and `calibrated` becomes false after `take_image`, the calibration will need to be done repeatedly or we need to ensure images are taken for all objectives before moving on. However, the problem statement says "Any fact that is not explicitly stated in the initial state is false. Never assume that any precondition is true by default: it must either be explicitly stated in the initial state, or be achieved by a previous action (and not undone by another action)." So, `calibrated` needs to be achieved each time for `take_image`.
           
           Let's use rover `v12` for all image collection and sending, and all rock sampling and sending. This simplifies the plan by only focusing on one rover. This is valid because `free(v12, v16)` is true, and the goal requires `free(v12, v16)` to remain true. Sampling a rock makes `full(v12, v16)` and then `analyzed(v12, <rock>)`. The problem does not state any capacity constraints on the store, meaning it can only hold one rock at a time. Therefore, after each sample, `drop_rock` must be called to free the store. Then, `send_analysis` can be called.
           
           **Rover v12 Plan:**
           1.  **Sample and Analyze all rocks:**
               *   Move to rock `v8` location (`#o5`).
               *   Sample `v8`.
               *   Move to communication location (`#q3`).
               *   Send analysis for `v8`.
               *   Drop rock (free store).
               *   Repeat for other rocks: `v5` (`#q0`), `v1` (`#q1`), `v3` (`#q15`), `v7` (`#q17`), `v4` (`#q20`).
           
           2.  **Take and Send Images for all objectives:**
               *   Move to image `v17` location (`#q11`).
               *   Calibrate camera.
               *   Take image of `v17`.
               *   Move to communication location (`#q3`).
               *   Send image for `v17`.
               *   Repeat for other objectives: `v20` (`#q14`), `v19` (`#q16`), `v18` (`#q8`).
           
           It's more efficient to group actions: sample all rocks, then send all analyses. Or take all images, then send all images. This is because sending involves moving to a communication spot. However, because of the `calibrated` state and the single store, it's safer to perform the sequence of actions (move, calibrate/sample, action, move, send, drop) for each item. The `calibrated` predicate is consumed by `take_image`, and `free` by `sample_rock` (until `drop_rock`).
           
           Let's create the plan following the sequence:
           For each rock: (move to rock, sample, move to comm, send analysis, drop rock)
           For each objective: (move to obj, calibrate, take image, move to comm, send image)
           
           This approach ensures the preconditions are met at each step.
           
           **Target Rocks:** v8, v5, v1, v3, v7, v4
           **Target Objectives:** v17, v20, v19, v18
           
           Order of operations for Rover v12:
           Start `atconf(v12, v13)` and `free(v12, v16)`.
           
           1.  **Rock v8:**
               *   `move v12 v13 #o2 #o5`
               *   `sample_rock v12 #o5 v8 v16` (now `analyzed(v12, v8)` and `full(v12, v16)`)
               *   `move v12 #o5 #o2 #q3`
               *   `send_analysis v12 #q3 #y1 v9 v8` (now `receivedanalysis(v8)`)
               *   `move v12 #q3 #o2 #o5` (move to a non-comm location to drop rock, could be original position or back to the rock pos)
               *   `drop_rock v12 v16` (now `free(v12, v16)`)
           
           2.  **Rock v5:**
               *   `move v12 #o5 #o2 #q0`
               *   `sample_rock v12 #q0 v5 v16`
               *   `move v12 #q0 #o2 #q3`
               *   `send_analysis v12 #q3 #y1 v9 v5`
               *   `move v12 #q3 #o2 #q0`
               *   `drop_rock v12 v16`
           
           3.  **Rock v1:**
               *   `move v12 #q0 #o2 #q1`
               *   `sample_rock v12 #q1 v1 v16`
               *   `move v12 #q1 #o2 #q3`
               *   `send_analysis v12 #q3 #y1 v9 v1`
               *   `move v12 #q3 #o2 #q1`
               *   `drop_rock v12 v16`
           
           4.  **Rock v3:**
               *   `move v12 #q1 #o2 #q15`
               *   `sample_rock v12 #q15 v3 v16`
               *   `move v12 #q15 #o2 #q3`
               *   `send_analysis v12 #q3 #y1 v9 v3`
               *   `move v12 #q3 #o2 #q15`
               *   `drop_rock v12 v16`
           
           5.  **Rock v7:**
               *   `move v12 #q15 #o2 #q17`
               *   `sample_rock v12 #q17 v7 v16`
               *   `move v12 #q17 #o2 #q3`
               *   `send_analysis v12 #q3 #y1 v9 v7`
               *   `move v12 #q3 #o2 #q17`
               *   `drop_rock v12 v16`
           
           6.  **Rock v4:**
               *   `move v12 #q17 #o2 #q20`
               *   `sample_rock v12 #q20 v4 v16`
               *   `move v12 #q20 #o2 #q3`
               *   `send_analysis v12 #q3 #y1 v9 v4`
               *   `move v12 #q3 #o2 #q20`
               *   `drop_rock v12 v16`
           
           At this point, all `receivedanalysis` goals are met. Now for images. Current position of v12 is `#q20`, and it's at `free(v12, v16)`. We will leave `v14` at `v15` and `free(v14, v16)`. The final goal state `atconf(v12, v13)` will require an additional move at the end. We'll send images using `v12` as well.
           
           7.  **Objective v17:**
               *   `move v12 #q20 #o2 #q11`
               *   `calibrate v12 #q11 #y7 v17 v10` (now `calibrated(v10, v12)`)
               *   `take_image v12 #q11 #y7 v17 v10 v11` (now `haveimage(v12, v17, v11)`)
               *   `move v12 #q11 #o2 #q3`
               *   `send_image v12 #q3 #y1 v9 v17 v11` (now `receivedimage(v17, v11)`)
           
           8.  **Objective v20:**
               *   `move v12 #q3 #o2 #q14`
               *   `calibrate v12 #q14 #y8 v20 v10`
               *   `take_image v12 #q14 #y8 v20 v10 v11`
               *   `move v12 #q14 #o2 #q3`
               *   `send_image v12 #q3 #y1 v9 v20 v11`
           
           9.  **Objective v19:**
               *   `move v12 #q3 #o2 #q16`
               *   `calibrate v12 #q16 #y9 v19 v10`
               *   `take_image v12 #q16 #y9 v19 v10 v11`
               *   `move v12 #q16 #o2 #q3`
               *   `send_image v12 #q3 #y1 v9 v19 v11`
           
           10. **Objective v18:**
               *   `move v12 #q3 #o2 #q8`
               *   `calibrate v12 #q8 #y6 v18 v10`
               *   `take_image v12 #q8 #y6 v18 v10 v11`
               *   `move v12 #q8 #o2 #q3`
               *   `send_image v12 #q3 #y1 v9 v18 v11`
           
           All `receivedanalysis` and `receivedimage` goals are met.
           Final checks: `atconf(v12, v13)` and `atconf(v14, v15)` and `free(v12, v16)` and `free(v14, v16)`.
           Currently, `v12` is at `#q3` and `v14` is at `v15`. So `v12` needs to move back to `v13`.
           
           11. **Rover v12 return to v13:**
               *   `move v12 #q3 #o2 v13`
           
           This plan seems to cover all aspects of the goal.
           Note: The 'drop_rock' action for rover `v12` should be performed after `send_analysis` and before the next `sample_rock` to ensure `free(v12, v16)` is true for the next sample. The current `move v12 #q3 #o2 <rock_pos>` is an efficient way to get to a non-communication location to drop the rock.
           
           The `free(v12, v16)` and `free(v14, v16)` conditions are implicitly satisfied throughout the plan, as `drop_rock` is called after each `sample_rock`.
           The final position for `v12` is `v13`, and for `v14` is `v15`.
           
           The explanation for axiom `new-axiom@0()` (from the prompt) already implies the truth values, which makes it easier to track. The specific instance we need to match is:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `type(v1, v2)`, `receivedanalysis(v1)`
           - `type(v3, v2)`, `receivedanalysis(v3)`
           - `type(v4, v2)`, `receivedanalysis(v4)`
           - `type(v5, v6)`, `receivedanalysis(v5)`
           - `type(v7, v6)`, `receivedanalysis(v7)`
           - `type(v8, v6)`, `receivedanalysis(v8)`
           
           This revised strategy ensures all necessary predicates for the axiom `new-axiom@0()` are met.
           
           --Plan--:
           (move v12 v13 #o2 #o5)
           (sample_rock v12 #o5 v8 v16)
           (move v12 #o5 #o2 #q3)
           (send_analysis v12 #q3 #y1 v9 v8)
           (move v12 #q3 #o2 #o5)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q0)
           (sample_rock v12 #q0 v5 v16)
           (move v12 #q0 #o2 #q3)
           (send_analysis v12 #q3 #y1 v9 v5)
           (move v12 #q3 #o2 #q0)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #o2 #q3)
           (send_analysis v12 #q3 #y1 v9 v1)
           (move v12 #q3 #o2 #q1)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q15)
           (sample_rock v12 #q15 v3 v16)
           (move v12 #q15 #o2 #q3)
           (send_analysis v12 #q3 #y1 v9 v3)
           (move v12 #q3 #o2 #q15)
           (drop_rock v12 v16)
           (move v12 #q15 #o2 #q17)
           (sample_rock v12 #q17 v7 v16)
           (move v12 #q17 #o2 #q3)
           (send_analysis v12 #q3 #y1 v9 v7)
           (move v12 #q3 #o2 #q17)
           (drop_rock v12 v16)
           (move v12 #q17 #o2 #q20)
           (sample_rock v12 #q20 v4 v16)
           (move v12 #q20 #o2 #q3)
           (send_analysis v12 #q3 #y1 v9 v4)
           (move v12 #q3 #o2 #q20)
           (drop_rock v12 v16)
           (move v12 #q20 #o2 #q11)
           (calibrate v12 #q11 #y7 v17 v10)
           (take_image v12 #q11 #y7 v17 v10 v11)
           (move v12 #q11 #o2 #q3)
           (send_image v12 #q3 #y1 v9 v17 v11)
           (move v12 #q3 #o2 #q14)
           (calibrate v12 #q14 #y8 v20 v10)
           (take_image v12 #q14 #y8 v20 v10 v11)
           (move v12 #q14 #o2 #q3)
           (send_image v12 #q3 #y1 v9 v20 v11)
           (move v12 #q3 #o2 #q16)
           (calibrate v12 #q16 #y9 v19 v10)
           (take_image v12 #q16 #y9 v19 v10 v11)
           (move v12 #q16 #o2 #q3)
           (send_image v12 #q3 #y1 v9 v19 v11)
           (move v12 #q3 #o2 #q8)
           (calibrate v12 #q8 #y6 v18 v10)
           (take_image v12 #q8 #y6 v18 v10 v11)
           (move v12 #q8 #o2 #q3)
           (send_image v12 #q3 #y1 v9 v18 v11)
           (move v12 #q3 #o2 v13)

