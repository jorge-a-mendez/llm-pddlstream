User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v7)
           Atom mode(v11)
           Atom type(v7, v6)
           Atom objective(v20)
           Atom free(v12, v16)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom atconf(v14, v15)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom supports(v10, v11)
           Atom lander(v9)
           Atom store(v16)
           Atom rock(v8)
           Atom conf(v12, v13)
           Atom type(v8, v6)
           Atom rock(v1)
           Atom type(v4, v2)
           Atom camera(v10)
           Atom atconf(v12, v13)
           Atom objective(v18)
           Atom objective(v17)
           Atom objective(v19)
           Atom rock(v4)
           Atom free(v14, v16)
           Atom rock(v3)
           Atom type(v3, v2)
           Atom conf(v14, v15)
           Atom rock(v5)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom above(v12, #q13, v8)
           Atom conf(v12, #q13)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v8)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom comvisible(v14, #q12, #y9, v9)
           Atom comrange(v14, #q12, v9)
           Atom conf(v14, #q12)
           Atom ray(#y9)
           Atom above(v12, #q7, v3)
           Atom conf(v12, #q7)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q10, #y7, v19)
           Atom imagerange(v14, #q10, v19)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom imagevisible(v12, #q2, #y1, v19)
           Atom imagerange(v12, #q2, v19)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v7)
           Atom above(v12, #q15, v7)
           Atom conf(v12, #q15)
           Atom imagevisible(v14, #q8, #y5, v20)
           Atom imagerange(v14, #q8, v20)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom imagevisible(v12, #q5, #y3, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q11, #y8, v17)
           Atom imagerange(v14, #q11, v17)
           Atom conf(v14, #q11)
           Atom ray(#y8)
           Atom imagevisible(v12, #q6, #y4, v17)
           Atom imagerange(v12, #q6, v17)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q9, #y6, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom imagevisible(v12, #q4, #y2, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v14, #o5, v1)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v12, v13, #t25, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #t2, v13)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q13, #t20, #q0)
           Atom motion(v12, #q0, #t29, #q6)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q6, #t26, #q0)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q0, #t30, #q3)
           Atom motion(v12, #q3, #t8, #q0)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, v15, #t18, #q11)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #t7, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q0, #t28, #q5)
           Atom motion(v12, #q5, #t27, #q0)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #t9, #q3)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q7, #t21, #q0)
           Atom motion(v12, #q0, #t24, #q7)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, v13, #t10, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, v15, #t15, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q0, #t1, #q1)
           Atom motion(v12, #q1, #t0, #q0)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, v13, #t5, #q2)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q0, #t23, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q2, #t3, #q0)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, v15, #t17, #q10)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q0, #t22, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q4, #t4, #q0)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v14, #q10, #t13, #q12)
           Atom motion(v14, #q12, #t19, v15)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #t14, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q8, #t11, #q12)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, v15, #t16, #q9)
           Atom motion(v14, #q9, #t12, #q12)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q11, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q13 v8 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q15 v7 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v12 #q7 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #t1 #q1))
           ((move v12 #q0 #t2 v13))
           ((move v12 #q0 #t22 #q4))
           ((move v12 #q0 #t23 #q2))
           ((move v12 #q0 #t24 #q7))
           ((move v12 #q0 #t28 #q5))
           ((move v12 #q0 #t29 #q6))
           ((move v12 #q0 #t30 #q3))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q0))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t20 #q0))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t3 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t8 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t4 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t27 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t26 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t21 #q0))
           ((move v12 #q7 #t9 #q3))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q7))
           ((move v12 v13 #t25 #q13))
           ((move v12 v13 #t5 #q2))
           ((move v12 v13 #t6 #q4))
           ((move v12 v13 #t7 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t13 #q12))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t14 #q12))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #t19 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t11 #q12))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t12 #q12))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t15 #q8))
           ((move v14 v15 #t16 #q9))
           ((move v14 v15 #t17 #q10))
           ((move v14 v15 #t18 #q11))
           ((calibrate v12 #q2 #y1 v19 v10))
           ((calibrate v12 #q4 #y2 v18 v10))
           ((calibrate v12 #q5 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v17 v10))
           ((calibrate v14 #q10 #y7 v19 v10))
           ((calibrate v14 #q11 #y8 v17 v10))
           ((calibrate v14 #q8 #y5 v20 v10))
           ((calibrate v14 #q9 #y6 v18 v10))
           ((take_image v12 #q2 #y1 v19 v10 v11))
           ((take_image v12 #q4 #y2 v18 v10 v11))
           ((take_image v12 #q5 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v17 v10 v11))
           ((take_image v14 #q10 #y7 v19 v10 v11))
           ((take_image v14 #q11 #y8 v17 v10 v11))
           ((take_image v14 #q8 #y5 v20 v10 v11))
           ((take_image v14 #q9 #y6 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q12 #y9 v9 v1))
           ((send_analysis v14 #q12 #y9 v9 v3))
           ((send_analysis v14 #q12 #y9 v9 v4))
           ((send_analysis v14 #q12 #y9 v9 v5))
           ((send_analysis v14 #q12 #y9 v9 v7))
           ((send_analysis v14 #q12 #y9 v9 v8))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q12 #y9 v9 v19 v11))
           ((send_image v14 #q12 #y9 v9 v17 v11))
           ((send_image v14 #q12 #y9 v9 v20 v11))
           ((send_image v14 #q12 #y9 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers (v12 and v14), a lander (v9), a camera (v10), and a store (v16). There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). The goal is to achieve 'new-axiom@0()', which translates to several conditions:
           1. Both rovers (v12 and v14) must be at a configuration. (Currently, both are at a configuration, v12 at v13 and v14 at v15).
           2. Both rovers must have their store (v16) free. (Currently, both have their store free).
           3. Several images must be received for objectives v17, v18, v19, v20 in mode v11.
           4. Several rocks (type v2 and type v6) must be analyzed and the analysis received. The rocks of type v2 are v1, v3, v4. The rocks of type v6 are v5, v7, v8.
           
           The plan will focus on:
           - Taking images of objectives v17, v18, v19, v20 using either rover's camera, then sending them to the lander.
           - Sampling and analyzing rocks v1, v3, v4, v5, v7, v8 using either rover, then sending the analysis to the lander.
           
           Since rover v12 is at v13 and rover v14 is at v15, and rover v12 has access to many rock locations (#q1, #q3, #q7, #q13, #q14, #q15) and image locations (#q2, #q4, #q5, #q6) through direct motion or from v13. Similarly, rover v14 has access to rocks and image locations through #o5 or from v15. Both rovers can also communicate with the lander v9 from their respective communication configurations (#q0 for v12 and #q12 for v14).
           
           We need to receive images for v17, v18, v19, v20. Rover v12 can take images of v19 at #q2, v18 at #q4, v20 at #q5, v17 at #q6. Rover v14 can take images of v19 at #q10, v17 at #q11, v20 at #q8, v18 at #q9.
           We need to analyze rocks v1, v3, v4, v5, v7, v8. Rover v12 can sample rocks v1 at #q1, v3 at #q7, v4 at #q14, v5 at #q3, v7 at #q15, v8 at #q13. Rover v14 can sample rocks v1, v3, v4, v5, v7, v8 at #o5.
           
           Given both rovers can access all the required objectives and rocks, we can use either or a combination. The provided action instances show that rover v12 is currently at configuration v13 and can move to various other configurations to interact with the environment, and rover v14 is at configuration v15 and can also move.
           Let's use rover v12 for all the image taking and sending, and rover v14 for all the rock sampling and sending.
           
           For rover v12 to take images, it must be calibrated first.
           1. Calibrate camera v10 with rover v12 for objective v19 at #q2.
           2. Take image of objective v19.
           3. Move v12 to #q0 to send the image.
           4. Send image of objective v19.
           Repeat for objectives v18, v20, v17.
           
           For rover v14 to sample rocks, it must be above the rock.
           1. Sample rock v1 at #o5.
           2. Repeat for rocks v3, v4, v5, v7, v8.
           3. Move v14 to #q12 to send analyses.
           4. Send analysis for v1.
           Repeat for rocks v3, v4, v5, v7, v8.
           Since the stores will become full, after sampling each rock, the rover has to drop it to free up the store.
           The goal states `receivedanalysis(?r)` which means the analysis has been sent. The `analyzed(?v, ?r)` state is achieved by `sample_rock`. The `receivedanalysis` needs `send_analysis`. The `store` becoming full after sample and then dropping it allows it to be free again for the next sample.
           
           Let's optimize to combine movements and actions.
           For Rover v12 (image tasks):
           - Calibrate for v19 at #q2, take image of v19.
           - Move to #q4, calibrate for v18, take image of v18.
           - Move to #q5, calibrate for v20, take image of v20.
           - Move to #q6, calibrate for v17, take image of v17.
           - Move to #q0 (comms config).
           - Send all four images (v19, v18, v20, v17).
           
           For Rover v14 (rock tasks):
           - Sample v1 at #o5, then drop.
           - Sample v3 at #o5, then drop.
           - Sample v4 at #o5, then drop.
           - Sample v5 at #o5, then drop.
           - Sample v7 at #o5, then drop.
           - Sample v8 at #o5, then drop.
           - Move to #q12 (comms config).
           - Send analyses for all six rocks (v1, v3, v4, v5, v7, v8).
           
           --Plan--:
           (calibrate v12 #q2 #y1 v19 v10)
           (take_image v12 #q2 #y1 v19 v10 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v18 v10)
           (take_image v12 #q4 #y2 v18 v10 v11)
           (move v12 #q4 #o2 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #o2 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t26 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (sample_rock v14 #o5 v1 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v3 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v4 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v5 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v7 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v8 v16)
           (drop_rock v14 v16)
           (move v14 v15 #o2 #q12)
           (send_analysis v14 #q12 #y9 v9 v1)
           (send_analysis v14 #q12 #y9 v9 v3)
           (send_analysis v14 #q12 #y9 v9 v4)
           (send_analysis v14 #q12 #y9 v9 v5)
           (send_analysis v14 #q12 #y9 v9 v7)
           (send_analysis v14 #q12 #y9 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. Let's re-evaluate the goal `new-axiom@0()`, which is an axiom with a conjunction of several facts:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `type(?stone, v2)` and `receivedanalysis(?stone)` (for all objects of type v2)
           - `type(?soil, v6)` and `receivedanalysis(?soil)` (for all objects of type v6)
           
           Let's break down each part of the goal and ensure it's met:
           
           1.  **`atconf(v12, v13)` and `atconf(v14, v15)`**: These are initial states. We must ensure our actions do not change these final configurations if they are not necessary, or move them back to these configurations. My previous plan ended with `v12` at `#q0` and `v14` at `#q12`. This needs to be corrected by moving them back to their initial configurations (v13 and v15 respectively).
           
           2.  **`free(v12, v16)` and `free(v14, v16)`**: These are initial states. My previous plan correctly accounted for this by dropping rocks after sampling, making the store free again.
           
           3.  **`receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`**: My previous plan took images of all these objectives using rover v12 and sent them from `#q0`. This part should be correct.
           
           4.  **`receivedanalysis(?stone)` for all rocks of type `v2` and `receivedanalysis(?soil)` for all rocks of type `v6`**:
               *   Rocks of type `v2`: v1, v3, v4.
               *   Rocks of type `v6`: v5, v7, v8.
               My previous plan sampled all these rocks using rover v14 and sent the analyses from `#q12`. This part should be correct.
           
           The primary issue was not restoring the rovers to their initial configurations (`v13` for `v12` and `v15` for `v14`). I need to add `move` actions at the end of the plan to achieve this.
           
           Let's refine the plan:
           
           **Rover v12 (Image Tasks):**
           - Calibrate and take images for v19, v18, v20, v17.
           - Move to communication config #q0.
           - Send all images.
           - Move back to initial config v13.
           
           **Rover v14 (Rock Tasks):**
           - Sample and drop rocks v1, v3, v4, v5, v7, v8.
           - Move to communication config #q12.
           - Send all analyses.
           - Move back to initial config v15.
           
           The order of rover activities does not matter relative to each other. I'll maintain the previous order for simplicity and add the final moves.
           
           --Plan--:
           (calibrate v12 #q2 #y1 v19 v10)
           (take_image v12 #q2 #y1 v19 v10 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v18 v10)
           (take_image v12 #q4 #y2 v18 v10 v11)
           (move v12 #q4 #o2 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #o2 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t26 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t2 v13) ; Move rover v12 back to v13
           (sample_rock v14 #o5 v1 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v3 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v4 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v5 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v7 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v8 v16)
           (drop_rock v14 v16)
           (move v14 v15 #o2 #q12) ; Move rover v14 to comms config (v15 is also a comms config, but for safety using a path through a specific comms config)
           (send_analysis v14 #q12 #y9 v9 v1)
           (send_analysis v14 #q12 #y9 v9 v3)
           (send_analysis v14 #q12 #y9 v9 v4)
           (send_analysis v14 #q12 #y9 v9 v5)
           (send_analysis v14 #q12 #y9 v9 v7)
           (send_analysis v14 #q12 #y9 v9 v8)
           (move v14 #q12 #t19 v15) ; Move rover v14 back to v15

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v14, #o5) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `(atconf v14 #o5)` was not satisfied for the `sample_rock` actions using `v14`. In the initial state, `v14` is at `v15`. To `sample_rock` at `#o5`, rover `v14` must first `move` from `v15` to `#o5`.
           
           Let's correct this by adding the necessary move actions for rover v14.
           
           **Rover v12 (Image Tasks):**
           - Calibrate and take images for v19, v18, v20, v17.
           - Move to communication config #q0.
           - Send all images.
           - Move back to initial config v13.
           (This part seems valid as rover v12 starts at v13 and moves to configurations where it has `imagevisible` and then to a `comvisible` configuration, and finally back to v13).
           
           **Rover v14 (Rock Tasks):**
           - **Move from v15 to #o5.**
           - Sample and drop rocks v1, v3, v4, v5, v7, v8 at #o5.
           - **Move from #o5 to #q12** (communication config).
           - Send all analyses.
           - Move back to initial config v15.
           
           Let's re-construct the plan with this correction for rover v14.
           
           --Plan--:
           (calibrate v12 #q2 #y1 v19 v10)
           (take_image v12 #q2 #y1 v19 v10 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v18 v10)
           (take_image v12 #q4 #y2 v18 v10 v11)
           (move v12 #q4 #o2 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #o2 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t26 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t2 v13)
           (move v14 v15 #o2 #o5) ; Rover v14 moves to #o5 for sampling
           (sample_rock v14 #o5 v1 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v3 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v4 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v5 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v7 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v8 v16)
           (drop_rock v14 v16)
           (move v14 #o5 #o2 #q12) ; Rover v14 moves from #o5 to #q12 for sending analysis
           (send_analysis v14 #q12 #y9 v9 v1)
           (send_analysis v14 #q12 #y9 v9 v3)
           (send_analysis v14 #q12 #y9 v9 v4)
           (send_analysis v14 #q12 #y9 v9 v5)
           (send_analysis v14 #q12 #y9 v9 v7)
           (send_analysis v14 #q12 #y9 v9 v8)
           (move v14 #q12 #t19 v15)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q2) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `(atconf v12 #q2)` was not satisfied for the first `calibrate` action. In the initial state, rover `v12` is at `v13`. To `calibrate` at `#q2`, rover `v12` must first `move` from `v13` to `#q2`.
           
           Let's correct this by adding the necessary move action for rover v12 at the beginning of its tasks.
           
           **Rover v12 (Image Tasks):**
           - **Move from v13 to #q2.**
           - Calibrate and take images for v19.
           - Move to #q4, calibrate and take images for v18.
           - Move to #q5, calibrate and take images for v20.
           - Move to #q6, calibrate and take images for v17.
           - Move to communication config #q0.
           - Send all images.
           - Move back to initial config v13.
           
           **Rover v14 (Rock Tasks):**
           - Move from v15 to #o5.
           - Sample and drop rocks v1, v3, v4, v5, v7, v8 at #o5.
           - Move from #o5 to #q12 (communication config).
           - Send all analyses.
           - Move back to initial config v15.
           
           This revised plan addresses the `atconf` precondition for both rovers before their first respective tasks.
           
           --Plan--:
           (move v12 v13 #t5 #q2) ; Rover v12 moves to #q2 for the first image task
           (calibrate v12 #q2 #y1 v19 v10)
           (take_image v12 #q2 #y1 v19 v10 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v18 v10)
           (take_image v12 #q4 #y2 v18 v10 v11)
           (move v12 #q4 #o2 #q5)
           (calibrate v12 #q5 #y3 v20 v10)
           (take_image v12 #q5 #y3 v20 v10 v11)
           (move v12 #q5 #o2 #q6)
           (calibrate v12 #q6 #y4 v17 v10)
           (take_image v12 #q6 #y4 v17 v10 v11)
           (move v12 #q6 #t26 #q0)
           (send_image v12 #q0 #y0 v9 v19 v11)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (send_image v12 #q0 #y0 v9 v20 v11)
           (send_image v12 #q0 #y0 v9 v17 v11)
           (move v12 #q0 #t2 v13)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v3 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v4 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v5 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v7 v16)
           (drop_rock v14 v16)
           (sample_rock v14 #o5 v8 v16)
           (drop_rock v14 v16)
           (move v14 #o5 #o2 #q12)
           (send_analysis v14 #q12 #y9 v9 v1)
           (send_analysis v14 #q12 #y9 v9 v3)
           (send_analysis v14 #q12 #y9 v9 v4)
           (send_analysis v14 #q12 #y9 v9 v5)
           (send_analysis v14 #q12 #y9 v9 v7)
           (send_analysis v14 #q12 #y9 v9 v8)
           (move v14 #q12 #t19 v15)

