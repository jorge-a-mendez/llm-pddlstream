User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v12, v16)
           Atom objective(v18)
           Atom onboard(v10, v12)
           Atom mode(v11)
           Atom type(v4, v2)
           Atom onboard(v10, v14)
           Atom atconf(v14, v15)
           Atom conf(v14, v15)
           Atom type(v5, v6)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom conf(v12, v13)
           Atom atconf(v12, v13)
           Atom rock(v8)
           Atom objective(v17)
           Atom camera(v10)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom store(v16)
           Atom rock(v5)
           Atom type(v7, v6)
           Atom rover(v12)
           Atom lander(v9)
           Atom rock(v3)
           Atom type(v1, v2)
           Atom objective(v19)
           Atom type(v8, v6)
           Atom rock(v7)
           Atom type(v3, v2)
           Atom rover(v14)
           Atom imagevisible(v14, #q11, #y7, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q10, #y6, v19)
           Atom imagerange(v14, #q10, v19)
           Atom conf(v14, #q10)
           Atom ray(#y6)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v3)
           Atom comvisible(v14, #q7, #y5, v9)
           Atom comrange(v14, #q7, v9)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #q8, v1)
           Atom conf(v14, #q8)
           Atom imagevisible(v12, #q3, #y2, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q2, #y1, v19)
           Atom imagerange(v12, #q2, v19)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #q12, v1)
           Atom conf(v12, #q12)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v7)
           Atom above(v12, #q5, v5)
           Atom conf(v12, #q5)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q1, v4)
           Atom conf(v12, #q1)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q4, #y3, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t17, #q4)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, v15, #t11, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, v15, #t22, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q11, #t23, #q7)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q7, #t16, v15)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q6, #t10, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q7, #t14, #q8)
           Atom motion(v14, #q8, #t12, #q7)
           Atom motion(v14, v15, #t18, #q8)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t3, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q12, #t25, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, #q0, #t26, #q12)
           Atom motion(v12, #q0, #t6, #q4)
           Atom motion(v12, #q4, #t9, #q0)
           Atom motion(v12, #q0, #t4, #q2)
           Atom motion(v12, #q2, #t7, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q9, #t13, #q7)
           Atom motion(v14, #q7, #t15, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q8, #t20, #q9)
           Atom motion(v14, v15, #t24, #q9)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q1, #t2, #q0)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q0, #t1, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #t21, #q2)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q4, #t19, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q0, #t5, #q3)
           Atom motion(v12, #q3, #t8, #q0)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, v13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v4 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v12 #q5 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q8 v1 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t1 #q1))
           ((move v12 #q0 #t26 #q12))
           ((move v12 #q0 #t4 #q2))
           ((move v12 #q0 #t5 #q3))
           ((move v12 #q0 #t6 #q4))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t2 #q0))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t25 #q0))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t7 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t21 #q2))
           ((move v12 #q3 #t8 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t19 #q3))
           ((move v12 #q4 #t9 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q4))
           ((move v12 v13 #t3 #q2))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t23 #q7))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t10 #q7))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #t14 #q8))
           ((move v14 #q7 #t15 #q9))
           ((move v14 #q7 #t16 v15))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t12 #q7))
           ((move v14 #q8 #t20 #q9))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t13 #q7))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t11 #q6))
           ((move v14 v15 #t18 #q8))
           ((move v14 v15 #t22 #q11))
           ((move v14 v15 #t24 #q9))
           ((calibrate v12 #q2 #y1 v19 v10))
           ((calibrate v12 #q3 #y2 v18 v10))
           ((calibrate v12 #q4 #y3 v17 v10))
           ((calibrate v14 #q10 #y6 v19 v10))
           ((calibrate v14 #q11 #y7 v18 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #q2 #y1 v19 v10 v11))
           ((take_image v12 #q3 #y2 v18 v10 v11))
           ((take_image v12 #q4 #y3 v17 v10 v11))
           ((take_image v14 #q10 #y6 v19 v10 v11))
           ((take_image v14 #q11 #y7 v18 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q7 #y5 v9 v3))
           ((send_analysis v14 #q7 #y5 v9 v4))
           ((send_analysis v14 #q7 #y5 v9 v7))
           ((send_analysis v14 #q7 #y5 v9 v8))
           ((send_analysis v14 #q7 #y5 v9 v1))
           ((send_analysis v14 #q7 #y5 v9 v5))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q7 #y5 v9 v19 v11))
           ((send_image v14 #q7 #y5 v9 v18 v11))
           ((send_image v14 #q7 #y5 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Path to New Knowledge**
           
           Alright, let's break this down. The objective is to achieve `new-axiom@0()`, a pretty specific goal in this *rovers* domain. My initial thought is to analyze the sub-goals. I see that the overall goal requires satisfying a bunch of conditions. Some are already true in the initial state like `atconf` and `free`. That's a good start!
           
           The core challenge involves gathering information: getting images of specific *objectives* (`v17`, `v18`, `v19`) and analyzing rock samples (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`). The key here is resource management - we've got two rovers, *v12* and *v14*, a shared camera *v10*, and a single store *v16* each. Efficiency is key!
           
           My initial assessment is that the most direct way to get images is to command rover *v12*, since that matches the current configuration. Rover *v12* and *v14* can move and communicate to the lander at comms spot #q0. My thought is to have *v12* move to those locations and have it gather images and communicate those images. This is efficient since it will do this while it is already moving, and after images are gathered it will send those images.
           
           For rock analysis, I need to get each rover to sample these rocks and then send to lander.  I need to determine the location of each of the rocks and then have the rover move to those locations. However, the store can only be used on one action. To avoid complications, I will instruct *v12* to go to comms after taking images and go and sample each rock. This way it only uses that store.
           
           My plan has two phases: **Image Acquisition** and **Rock Analysis**.
           -   **Image Acquisition** involves rover *v12* moving to the locations of the objectives, calibrating and taking images with the onboard camera, and finally sending the images to the lander. The move to comms will let *v12* efficiently send the images together.
           -   **Rock Analysis**  After images are sent, *v12* will move to different rocks, sample them, drop the sample, and then move to a new rock. After all rocks have been sampled it will send the data.
           
           I have a plan that has *v12* cover all of the goal requirements. This has a few advantages, the plan is more straightforward, and there are less chances for errors. My final action is to move the rover back to the starting point. I'm confident this plan should get me there.
           
)

Model:     **The Path to New Knowledge**
           
           Alright, let's break this down. The objective is to achieve `new-axiom@0()`, a pretty specific goal in this *rovers* domain. My initial thought is to analyze the sub-goals. I see that the overall goal requires satisfying a bunch of conditions. Some are already true in the initial state like `atconf` and `free`. That's a good start!
           
           The core challenge involves gathering information: getting images of specific *objectives* (`v17`, `v18`, `v19`) and analyzing rock samples (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`). The key here is resource management - we've got two rovers, *v12* and *v14*, a shared camera *v10*, and a single store *v16* each. Efficiency is key!
           
           My initial assessment is that the most direct way to get images is to command rover *v12*, since that matches the current configuration. Rover *v12* and *v14* can move and communicate to the lander at comms spot #q0. My thought is to have *v12* move to those locations and have it gather images and communicate those images. This is efficient since it will do this while it is already moving, and after images are gathered it will send those images.
           
           For rock analysis, I need to get each rover to sample these rocks and then send to lander.  I need to determine the location of each of the rocks and then have the rover move to those locations. However, the store can only be used on one action. To avoid complications, I will instruct *v12* to go to comms after taking images and go and sample each rock. This way it only uses that store.
           
           My plan has two phases: **Image Acquisition** and **Rock Analysis**.
           -   **Image Acquisition** involves rover *v12* moving to the locations of the objectives, calibrating and taking images with the onboard camera, and finally sending the images to the lander. The move to comms will let *v12* efficiently send the images together.
           -   **Rock Analysis**  After images are sent, *v12* will move to different rocks, sample them, drop the sample, and then move to a new rock. After all rocks have been sampled it will send the data.
           
           I have a plan that has *v12* cover all of the goal requirements. This has a few advantages, the plan is more straightforward, and there are less chances for errors. My final action is to move the rover back to the starting point. I'm confident this plan should get me there.
           

