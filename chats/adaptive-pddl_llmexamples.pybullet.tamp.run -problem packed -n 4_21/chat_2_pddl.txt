User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v14, v18)
           Atom controllable(v4)
           Atom stackable(v12, v10)
           Atom handempty(v6)
           Atom ataconf(v4, v5)
           Atom canmove()
           Atom supported(v16, v17, v11)
           Atom supported(v14, v15, v11)
           Atom stackable(v16, v10)
           Atom handempty(v4)
           Atom stackable(v16, v18)
           Atom arm(v6)
           Atom stackable(v14, v10)
           Atom arm(v4)
           Atom atpose(v12, v13)
           Atom graspable(v12)
           Atom supported(v12, v13, v11)
           Atom graspable(v16)
           Atom ataconf(v6, v7)
           Atom atpose(v16, v17)
           Atom pose(v16, v17)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom graspable(v8)
           Atom aconf(v4, v5)
           Atom stackable(v8, v10)
           Atom aconf(v6, v7)
           Atom stackable(v8, v18)
           Atom atbconf(v3)
           Atom supported(v8, v9, v11)
           Atom atpose(v14, v15)
           Atom graspable(v14)
           Atom atpose(v8, v9)
           Atom stackable(v12, v18)
           Atom pose(v14, v15)
           Atom bconf(v3)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom grasp(v14, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom supported(v14, #o2, v18)
           Atom supported(v16, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v16, #o1)
           Atom grasp(v12, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v16 #o2 #o1 #o3 #o4))
           ((place v4 v16 #o2 #o1 #o3 #o4))
           ((pick v4 v16 v17 #o1 #o3 #o4))
           ((place v4 v16 v17 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several stackable objects (v8, v12, v14, v16) currently supported by `v11`. The goal is to place all these objects on `v18`. The robot has two arms, `v4` and `v6`, but only `v4` is given kinematic information for picking and placing the objects. Both arms are initially handempty. The robot's base is at configuration `v3`.
           
           The plan involves picking each object from its initial position on `v11` and placing it on `v18`. Since all objects are currently on `v11`, we will use the `pick` action with their current poses (v13 for v12, v15 for v14, v17 for v16, v9 for v8) and then use the `place` action to put them on `v18` at a new pose represented by `#o2`. The base configuration needs to be `o3` for the pick and place actions, and the robot is initially at `v3`, so a `move_base` action will be needed before the first pick and after the last place if we want to return to `v3`. However, the problem statement provides `basemotion(v3, #o0, #o3)` and `basemotion(#o3, #o0, v3)` which allow moving to and from `#o3`. However, since all pick and place actions use the base configuration `#o3`, we only need to move the base once to `#o3` and stay there.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)
           (pick v4 v16 v17 #o1 #o3 #o4)
           (place v4 v16 #o2 #o1 #o3 #o4)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)

