User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom bconf(v3)
           Atom handempty(v6)
           Atom ataconf(v4, v5)
           Atom pose(v12, v13)
           Atom handempty(v4)
           Atom atpose(v15, v16)
           Atom type(v8, v17)
           Atom controllable(v4)
           Atom arm(v6)
           Atom atbconf(v3)
           Atom aconf(v4, v5)
           Atom stackable(v15, v10)
           Atom graspable(v12)
           Atom stackable(v8, v10)
           Atom arm(v4)
           Atom aconf(v6, v7)
           Atom ataconf(v6, v7)
           Atom stackable(v12, v18)
           Atom supported(v15, v16, v11)
           Atom atpose(v12, v13)
           Atom type(v12, v17)
           Atom supported(v8, v9, v11)
           Atom pose(v15, v16)
           Atom stackable(v8, v18)
           Atom graspable(v8)
           Atom supported(v12, v13, v14)
           Atom pose(v8, v9)
           Atom stackable(v12, v10)
           Atom atpose(v8, v9)
           Atom graspable(v15)
           Atom canmove()
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v15, #o1)
           Atom grasp(v12, #g0)
           Atom grasp(v8, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v12, #p0, #g0, #q1, #t2)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(v3, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q1 #t2))
           ((place v4 v12 #p0 #g0 #q1 #t2))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains various objects, some of which are stackable and graspable. There are two arms, `v4` and `v6`, both of which are initially empty. The robot is at base configuration `v3`.
           The objects `v8`, `v12`, and `v15` are stackable and graspable.
           `v12` is at `v13` and supported by `v14`.
           `v15` is at `v16` and supported by `v11`.
           `v8` is at `v9` and supported by `v11`.
           The goal `new-axiom@0()` can be achieved if `on(?green, v18)` and `type(?green, v17)` are true.
           From the initial state, we know that `type(v12, v17)` is true. So we need to make `on(v12, v18)` true.
           The `on` predicate is an axiom: `on(?o: object, ?r: object)` is true if `supported(?o, ?p, ?r)` and `atpose(?o, ?p)` are true.
           We have `supported(v12, #p0, v18)` as a fact. Therefore, we need to achieve `atpose(v12, #p0)`.
           Currently, `v12` is at `v13`. To move `v12` to `#p0`, we need to pick it up from `v13` and place it at `#p0`.
           The arm `v4` is `handempty` and `ataconf(v4, v5)`.
           To pick `v12` from `v13` with `v4`, we need to be at base configuration `q0` (from `kin(v4, v12, v13, #g0, #q0, #t0)`). The robot is currently at `v3`, so we need to `move_base` from `v3` to `q0`.
           After picking `v12`, to place it at `#p0`, we need to be at base configuration `q1` (from `kin(v4, v12, #p0, #g0, #q1, #t2)`). So, after picking, we need to `move_base` from `q0` to `q1`.
           
           --Plan--:
           (move_base v3 #q0 #t1)
           (pick v4 v12 v13 #g0 #q0 #t0)
           (move_base #q0 #q1 #o0)
           (place v4 v12 #p0 #g0 #q1 #t2)

