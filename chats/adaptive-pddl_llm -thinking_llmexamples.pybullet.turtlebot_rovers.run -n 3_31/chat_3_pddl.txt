User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v7, v6)
           Atom objective(v17)
           Atom rock(v5)
           Atom rock(v1)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom free(v14, v16)
           Atom atconf(v12, v13)
           Atom rock(v3)
           Atom rock(v8)
           Atom lander(v9)
           Atom type(v1, v2)
           Atom objective(v19)
           Atom mode(v11)
           Atom rover(v12)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom rover(v14)
           Atom objective(v18)
           Atom rock(v4)
           Atom rock(v7)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom free(v12, v16)
           Atom onboard(v10, v14)
           Atom conf(v14, v15)
           Atom camera(v10)
           Atom conf(v12, v13)
           Atom type(v5, v6)
           Atom atconf(v14, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q7, #y5, v19)
           Atom imagerange(v14, #q7, v19)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q9, #y6, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom above(v14, #q4, v4)
           Atom conf(v14, #q4)
           Atom above(v14, #q0, v7)
           Atom conf(v14, #q0)
           Atom imagevisible(v14, #q10, #y7, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q11, v7)
           Atom conf(v12, #q11)
           Atom above(v12, #q8, v4)
           Atom conf(v12, #q8)
           Atom imagevisible(v12, #q1, #y0, v19)
           Atom imagerange(v12, #q1, v19)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v3)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v5)
           Atom above(v12, #o5, v5)
           Atom motion(v14, v15, #t12, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t3, #q0)
           Atom motion(v14, #q4, #o2, #q10)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q10, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, v15, #t4, #q4)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v12, #q2, #t5, v13)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, v15, #t11, #q9)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q3, #t1, v15)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q0, #t6, #q3)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q4, #t7, #q3)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v12, v13, #t2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, v15, #t10, #q7)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #t8, #q3)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v12, v13, #t13, #q8)
           Atom motion(v12, #q8, #t9, #q2)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, v13, #t14, #q11)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q6, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q11 v7 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v7 v16))
           ((sample_rock v14 #q4 v4 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #t5 v13))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t9 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t13 #q8))
           ((move v12 v13 #t14 #q11))
           ((move v12 v13 #t2 #q1))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t6 #q3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q4))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #t1 v15))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q10))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t7 #q3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t8 #q3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q7))
           ((move v14 v15 #t11 #q9))
           ((move v14 v15 #t12 #q10))
           ((move v14 v15 #t3 #q0))
           ((move v14 v15 #t4 #q4))
           ((calibrate v12 #q1 #y0 v19 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q10 #y7 v17 v10))
           ((calibrate v14 #q7 #y5 v19 v10))
           ((calibrate v14 #q9 #y6 v18 v10))
           ((take_image v12 #q1 #y0 v19 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q10 #y7 v17 v10 v11))
           ((take_image v14 #q7 #y5 v19 v10 v11))
           ((take_image v14 #q9 #y6 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Path to `new-axiom@0()`: A Rover's Strategy**
           
           Okay, so I need to make `new-axiom@0()` happen.  It's a conjunction, meaning I need all its parts to be true at the same time.  Since this involves rovers, imaging, and analysis, here's my plan.
           
           First, I need to make sure the starting conditions stay true. `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` are all true to begin with.  The `free` predicates are a little tricky. If I use a store, I need to *make sure* it is *free* again for each rover by `drop_rock(rover, store)`.
           
           Next, the `receivedimage` predicates.  I've got to capture the images for `v17`, `v18`, and `v19`.  Both rovers, `v12` and `v14`, can do this, but I am going to try and have `v12` handle all the tasks to optimize the plan.  For each objective, the plan is:
             1.  Get to the right spot (`imagevisible`).
             2.  Calibrate the camera (`calibrate`).
             3.  Take the picture (`take_image`).
             4.  Go back to the comm point (`comvisible`).
             5.  Send the image (`send_image`).
           
           The same approach applies to the analysis.  To analyze rocks, I have to:
             1.  Move the rover to where they can sample (`above`).
             2.  Make sure the store `v16` is empty.
             3.  Sample the rock.
             4.  Move back to `comvisible`.
             5.  Send the analysis.
             6.  *Drop* the sample to free the store.
           
           For analyses, I will have rover `v12` handle v4, a stone of type `v2`, and v7, soil of type `v6`. That will satisfy the `receivedanalysis` predicates.
           
           Since the goal needs `free(v12,v16)` and `free(v14, v16)` at the *end*, I need to be careful with the sampling and dropping.  Rover `v12` has one store and can't do parallel sampling. So it samples, analyses, drops, samples, analyzes, drops, then images.
           
           Here's the detailed plan for rover `v12`:
           
           1.  **Analyze v4 (stone):**
               *   Move to location for sampling `sample_rock(v4)`.
               *   Sample `v4`.
               *   Move to the communication point.
               *   Send the analysis.
               *   Drop the sample.
           
           2.  **Analyze v7 (soil):**
               *   Move to location for sampling `sample_rock(v7)`.
               *   Sample `v7`.
               *   Move to communication point.
               *   Send the analysis.
               *   Drop the sample.
           
           3.  **Image v19:**
               *   Move to image visible for v19.
               *   Calibrate Camera.
               *   Take the image.
               *   Move to communication point.
               *   Send the image.
           
           4.  **Image v17:**
               *   Move to image visible for v17.
               *   Calibrate Camera.
               *   Take the image.
               *   Move to communication point.
               *   Send the image.
           
           5.  **Image v18:**
               *   Move to image visible for v18.
               *   Calibrate Camera.
               *   Take the image.
               *   Move to communication point.
               *   Send the image.
           
           6.  **Move v12 back to `v13`.**
           
           That should ensure all the goal conditions are true.
           
           This plan uses the assumption that all the actions are possible and can be achieved. It also assumes I can ignore obstacles and other complexities for now. I am also planning on computing each of the actions preconditions.
           
)

Model:     **The Path to `new-axiom@0()`: A Rover's Strategy**
           
           Okay, so I need to make `new-axiom@0()` happen.  It's a conjunction, meaning I need all its parts to be true at the same time.  Since this involves rovers, imaging, and analysis, here's my plan.
           
           First, I need to make sure the starting conditions stay true. `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` are all true to begin with.  The `free` predicates are a little tricky. If I use a store, I need to *make sure* it is *free* again for each rover by `drop_rock(rover, store)`.
           
           Next, the `receivedimage` predicates.  I've got to capture the images for `v17`, `v18`, and `v19`.  Both rovers, `v12` and `v14`, can do this, but I am going to try and have `v12` handle all the tasks to optimize the plan.  For each objective, the plan is:
             1.  Get to the right spot (`imagevisible`).
             2.  Calibrate the camera (`calibrate`).
             3.  Take the picture (`take_image`).
             4.  Go back to the comm point (`comvisible`).
             5.  Send the image (`send_image`).
           
           The same approach applies to the analysis.  To analyze rocks, I have to:
             1.  Move the rover to where they can sample (`above`).
             2.  Make sure the store `v16` is empty.
             3.  Sample the rock.
             4.  Move back to `comvisible`.
             5.  Send the analysis.
             6.  *Drop* the sample to free the store.
           
           For analyses, I will have rover `v12` handle v4, a stone of type `v2`, and v7, soil of type `v6`. That will satisfy the `receivedanalysis` predicates.
           
           Since the goal needs `free(v12,v16)` and `free(v14, v16)` at the *end*, I need to be careful with the sampling and dropping.  Rover `v12` has one store and can't do parallel sampling. So it samples, analyses, drops, samples, analyzes, drops, then images.
           
           Here's the detailed plan for rover `v12`:
           
           1.  **Analyze v4 (stone):**
               *   Move to location for sampling `sample_rock(v4)`.
               *   Sample `v4`.
               *   Move to the communication point.
               *   Send the analysis.
               *   Drop the sample.
           
           2.  **Analyze v7 (soil):**
               *   Move to location for sampling `sample_rock(v7)`.
               *   Sample `v7`.
               *   Move to communication point.
               *   Send the analysis.
               *   Drop the sample.
           
           3.  **Image v19:**
               *   Move to image visible for v19.
               *   Calibrate Camera.
               *   Take the image.
               *   Move to communication point.
               *   Send the image.
           
           4.  **Image v17:**
               *   Move to image visible for v17.
               *   Calibrate Camera.
               *   Take the image.
               *   Move to communication point.
               *   Send the image.
           
           5.  **Image v18:**
               *   Move to image visible for v18.
               *   Calibrate Camera.
               *   Take the image.
               *   Move to communication point.
               *   Send the image.
           
           6.  **Move v12 back to `v13`.**
           
           That should ensure all the goal conditions are true.
           
           This plan uses the assumption that all the actions are possible and can be achieved. It also assumes I can ignore obstacles and other complexities for now. I am also planning on computing each of the actions preconditions.
           

