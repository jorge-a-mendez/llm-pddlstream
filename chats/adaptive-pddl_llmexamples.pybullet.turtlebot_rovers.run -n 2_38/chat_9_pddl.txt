User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v4)
           Atom objective(v17)
           Atom rock(v3)
           Atom rock(v7)
           Atom mode(v11)
           Atom supports(v10, v11)
           Atom type(v5, v6)
           Atom type(v3, v2)
           Atom rock(v5)
           Atom type(v7, v6)
           Atom atconf(v12, v13)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom atconf(v14, v15)
           Atom onboard(v10, v12)
           Atom conf(v12, v13)
           Atom type(v8, v6)
           Atom objective(v18)
           Atom onboard(v10, v14)
           Atom free(v12, v16)
           Atom camera(v10)
           Atom store(v16)
           Atom rover(v12)
           Atom type(v4, v2)
           Atom rover(v14)
           Atom rock(v1)
           Atom type(v1, v2)
           Atom lander(v9)
           Atom comvisible(v14, #q5, #y3, v9)
           Atom comrange(v14, #q5, v9)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q7, #y4, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y4)
           Atom above(v14, #q8, v1)
           Atom conf(v14, #q8)
           Atom above(v14, #q6, v8)
           Atom conf(v14, #q6)
           Atom imagevisible(v12, #q3, #y2, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom above(v12, #q4, v8)
           Atom conf(v12, #q4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q12, v4)
           Atom conf(v12, #q12)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v14, #o5, v7)
           Atom above(v14, #q11, v5)
           Atom conf(v14, #q11)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v14, #q9, #y5, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y5)
           Atom imagevisible(v12, #q1, #y0, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #q10, v3)
           Atom conf(v12, #q10)
           Atom above(v14, #o5, v3)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, v13, #t0, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #t6, #q7)
           Atom motion(v14, #q7, #t17, #q6)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #t5, #q6)
           Atom motion(v14, #q7, #t9, #q5)
           Atom motion(v14, #q5, #t8, v15)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q6, #t7, #q5)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, v13, #t23, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #t21, #q1)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q2, #t4, #q0)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q0, #t2, #q2)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q4, #t22, #q2)
           Atom motion(v12, #q2, #t3, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q1, #t1, #q2)
           Atom motion(v14, #q9, #t10, #q5)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, v15, #t26, #q9)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #t18, #q2)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q2, #t19, #q12)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, v15, #t14, #q11)
           Atom motion(v14, #q11, #t28, #q5)
           Atom motion(v14, #q11, #t13, #q7)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #t25, #q11)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q5, #t30, #q11)
           Atom motion(v12, v13, #t27, #q3)
           Atom motion(v12, #q3, #t29, #q12)
           Atom motion(v12, #q1, #t24, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q3, #t20, #q4)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q1, #t15, #q10)
           Atom motion(v12, #q10, #t16, #q2)
           Atom motion(v12, v13, #t12, #q10)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q10, #t11, #q1)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q12 v4 v16))
           ((sample_rock v12 #q4 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q11 v5 v16))
           ((sample_rock v14 #q6 v8 v16))
           ((sample_rock v14 #q8 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t2 #q2))
           ((move v12 #q0 #t21 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q2))
           ((move v12 #q1 #t15 #q10))
           ((move v12 #q1 #t24 #q3))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t11 #q1))
           ((move v12 #q10 #t16 #q2))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t18 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #t19 #q12))
           ((move v12 #q2 #t3 v13))
           ((move v12 #q2 #t4 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t20 #q4))
           ((move v12 #q3 #t29 #q12))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t22 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q1))
           ((move v12 v13 #t12 #q10))
           ((move v12 v13 #t23 #q0))
           ((move v12 v13 #t27 #q3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t13 #q7))
           ((move v14 #q11 #t28 #q5))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #t30 #q11))
           ((move v14 #q5 #t5 #q6))
           ((move v14 #q5 #t8 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t7 #q5))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t17 #q6))
           ((move v14 #q7 #t9 #q5))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t10 #q5))
           ((move v14 #q9 #t25 #q11))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q11))
           ((move v14 v15 #t26 #q9))
           ((move v14 v15 #t6 #q7))
           ((calibrate v12 #q1 #y0 v18 v10))
           ((calibrate v12 #q3 #y2 v17 v10))
           ((calibrate v14 #q7 #y4 v17 v10))
           ((calibrate v14 #q9 #y5 v18 v10))
           ((take_image v12 #q1 #y0 v18 v10 v11))
           ((take_image v12 #q3 #y2 v17 v10 v11))
           ((take_image v14 #q7 #y4 v17 v10 v11))
           ((take_image v14 #q9 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q5 #y3 v9 v3))
           ((send_analysis v14 #q5 #y3 v9 v4))
           ((send_analysis v14 #q5 #y3 v9 v7))
           ((send_analysis v14 #q5 #y3 v9 v5))
           ((send_analysis v14 #q5 #y3 v9 v8))
           ((send_analysis v14 #q5 #y3 v9 v1))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q5 #y3 v9 v17 v11))
           ((send_image v14 #q5 #y3 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, v12 and v14, each with a camera (v10) and a store (v16). There are several rocks (v1, v3, v4, v5, v7, v8) of different types (v2, v6) and two objectives (v17, v18). The goal is to achieve `new-axiom@0()`, which is a complex axiom requiring:
           1. Both rovers (v12 and v14) to be at some configuration (`atconf`). This is already true in the initial state.
           2. Both rovers (v12 and v14) to have a free store (v16). This is already true in the initial state.
           3. Images of objectives v17 and v18 in mode v11 to be received.
           4. Rocks of type v2 and type v6 to be analyzed and received analysis.
           
           Let's break down the plan:
           
           **Achieving `receivedimage(v17, v11)` and `receivedimage(v18, v11)`:**
           *   To get `receivedimage(v17, v11)`, a rover needs to `take_image` of v17 with camera v10 in mode v11, and then `send_image`.
               *   Rover v12 can `imagevisible` v17 at #q3.
               *   Rover v14 can `imagevisible` v17 at #q7.
               *   Rover v12 can `comvisible` the lander v9 at #q2.
               *   Rover v14 can `comvisible` the lander v9 at #q5.
           *   To get `receivedimage(v18, v11)`, a rover needs to `take_image` of v18 with camera v10 in mode v11, and then `send_image`.
               *   Rover v12 can `imagevisible` v18 at #q1.
               *   Rover v14 can `imagevisible` v18 at #q9.
           
           **Achieving `receivedanalysis(?stone)` and `receivedanalysis(?soil)` (for types v2 and v6):**
           *   To get `receivedanalysis`, a rover needs to `sample_rock` of the correct type, and then `send_analysis`.
           *   Rocks of type v2: v1, v3, v4.
           *   Rocks of type v6: v5, v7, v8.
           
           One possible strategy:
           1.  Use rover v12 to handle objective v17 and some rocks.
           2.  Use rover v14 to handle objective v18 and other rocks.
           
           **Rover v12:**
           *   Calibrate camera v10 for objective v17 at #q3.
           *   Take image of v17.
           *   Move to a position (#q2) where it can communicate with lander v9.
           *   Send image of v17.
           *   Sample a rock of type v2 (e.g., v3 at #q10) and a rock of type v6 (e.g., v5 at #o5 or v7 at #o5).
           *   Move to a position (#q2) where it can communicate with lander v9.
           *   Send analysis of the sampled rocks.
           
           **Rover v14:**
           *   Calibrate camera v10 for objective v18 at #q9.
           *   Take image of v18.
           *   Move to a position (#q5) where it can communicate with lander v9.
           *   Send image of v18.
           *   Sample any remaining rock types if v12 hasn't covered both.
           
           Let's refine the plan:
           
           **Rover v12:**
           1.  **Calibrate:** `calibrate v12 #q3 #y2 v17 v10` (to take image of v17).
           2.  **Take image:** `take_image v12 #q3 #y2 v17 v10 v11`.
           3.  **Move for comms:** Current config is #q3. Need to move to #q2 for `send_image`. `move v12 #q3 #o2 #q2`.
           4.  **Send image:** `send_image v12 #q2 #y1 v9 v17 v11`. (Now `receivedimage(v17, v11)` is true).
           5.  **Move to sample rock v3 (type v2):** Current config is #q2. Need to move to #q10. `move v12 #q2 #o2 #q10`.
           6.  **Sample rock v3:** `sample_rock v12 #q10 v3 v16`. (Now `analyzed(v12, v3)` is true).
           7.  **Move to sample rock v5 (type v6):** Current config is #q10. Need to move to #o5. `move v12 #q10 #o2 #o5`.
           8.  **Sample rock v5:** `sample_rock v12 #o5 v5 v16`. (Now `analyzed(v12, v5)` is true, store v16 is now full for v12).
           9.  **Move for comms:** Current config is #o5. Need to move to #q2. `move v12 #o5 #o2 #q2`.
           10. **Send analysis for v3:** `send_analysis v12 #q2 #y1 v9 v3`. (Now `receivedanalysis(v3)` is true, type v2 covered).
           11. **Send analysis for v5:** `send_analysis v12 #q2 #y1 v9 v5`. (Now `receivedanalysis(v5)` is true, type v6 covered).
           
           **Rover v14:**
           1.  **Calibrate:** `calibrate v14 #q9 #y5 v18 v10` (to take image of v18).
           2.  **Take image:** `take_image v14 #q9 #y5 v18 v10 v11`.
           3.  **Move for comms:** Current config is #q9. Need to move to #q5 for `send_image`. `move v14 #q9 #o2 #q5`.
           4.  **Send image:** `send_image v14 #q5 #y3 v9 v18 v11`. (Now `receivedimage(v18, v11)` is true).
           
           All conditions of `new-axiom@0()` should now be met.
           
           --Plan--:
           (calibrate v12 #q3 #y2 v17 v10)
           (take_image v12 #q3 #y2 v17 v10 v11)
           (move v12 #q3 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (move v12 #q2 #o2 #q10)
           (sample_rock v12 #q10 v3 v16)
           (move v12 #q10 #o2 #o5)
           (sample_rock v12 #o5 v5 v16)
           (move v12 #o5 #o2 #q2)
           (send_analysis v12 #q2 #y1 v9 v3)
           (send_analysis v12 #q2 #y1 v9 v5)
           (calibrate v14 #q9 #y5 v18 v10)
           (take_image v14 #q9 #y5 v18 v10 v11)
           (move v14 #q9 #o2 #q5)
           (send_image v14 #q5 #y3 v9 v18 v11)

User:      The plan you provided contains the following invalid actions: `(move v14 #q9 #o2 #q5)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q12 v4 v16))
           ((sample_rock v12 #q4 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q11 v5 v16))
           ((sample_rock v14 #q6 v8 v16))
           ((sample_rock v14 #q8 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t2 #q2))
           ((move v12 #q0 #t21 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q2))
           ((move v12 #q1 #t15 #q10))
           ((move v12 #q1 #t24 #q3))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t11 #q1))
           ((move v12 #q10 #t16 #q2))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t18 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #t19 #q12))
           ((move v12 #q2 #t3 v13))
           ((move v12 #q2 #t4 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t20 #q4))
           ((move v12 #q3 #t29 #q12))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t22 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q1))
           ((move v12 v13 #t12 #q10))
           ((move v12 v13 #t23 #q0))
           ((move v12 v13 #t27 #q3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t13 #q7))
           ((move v14 #q11 #t28 #q5))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #t30 #q11))
           ((move v14 #q5 #t5 #q6))
           ((move v14 #q5 #t8 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t7 #q5))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t17 #q6))
           ((move v14 #q7 #t9 #q5))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t10 #q5))
           ((move v14 #q9 #t25 #q11))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q11))
           ((move v14 v15 #t26 #q9))
           ((move v14 v15 #t6 #q7))
           ((calibrate v12 #q1 #y0 v18 v10))
           ((calibrate v12 #q3 #y2 v17 v10))
           ((calibrate v14 #q7 #y4 v17 v10))
           ((calibrate v14 #q9 #y5 v18 v10))
           ((take_image v12 #q1 #y0 v18 v10 v11))
           ((take_image v12 #q3 #y2 v17 v10 v11))
           ((take_image v14 #q7 #y4 v17 v10 v11))
           ((take_image v14 #q9 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q5 #y3 v9 v3))
           ((send_analysis v14 #q5 #y3 v9 v4))
           ((send_analysis v14 #q5 #y3 v9 v7))
           ((send_analysis v14 #q5 #y3 v9 v5))
           ((send_analysis v14 #q5 #y3 v9 v8))
           ((send_analysis v14 #q5 #y3 v9 v1))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q5 #y3 v9 v17 v11))
           ((send_image v14 #q5 #y3 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The scene describes two rovers, v12 and v14, each with a camera (v10) and a store (v16). There are several rocks (v1, v3, v4, v5, v7, v8) of different types (v2, v6) and two objectives (v17, v18). The goal is to achieve `new-axiom@0()`, which is a complex axiom requiring:
           1. Both rovers (v12 and v14) to be at some configuration (`atconf`). This is already true in the initial state.
           2. Both rovers (v12 and v14) to have a free store (v16). This is already true in the initial state.
           3. Images of objectives v17 and v18 in mode v11 to be received.
           4. Rocks of type v2 and type v6 to be analyzed and received analysis.
           
           Let's break down the plan:
           
           **Achieving `receivedimage(v17, v11)` and `receivedimage(v18, v11)`:**
           *   To get `receivedimage(v17, v11)`, a rover needs to `take_image` of v17 with camera v10 in mode v11, and then `send_image`.
               *   Rover v12 can `imagevisible` v17 at #q3.
               *   Rover v14 can `imagevisible` v17 at #q7.
               *   Rover v12 can `comvisible` the lander v9 at #q2.
               *   Rover v14 can `comvisible` the lander v9 at #q5.
           *   To get `receivedimage(v18, v11)`, a rover needs to `take_image` of v18 with camera v10 in mode v11, and then `send_image`.
               *   Rover v12 can `imagevisible` v18 at #q1.
               *   Rover v14 can `imagevisible` v18 at #q9.
           
           **Achieving `receivedanalysis(?stone)` and `receivedanalysis(?soil)` (for types v2 and v6):**
           *   To get `receivedanalysis`, a rover needs to `sample_rock` of the correct type, and then `send_analysis`.
           *   Rocks of type v2: v1, v3, v4.
           *   Rocks of type v6: v5, v7, v8.
           
           **Rover v12 (for objective v17, rock v3 (type v2), rock v5 (type v6)):**
           1.  **Calibrate for v17:** `calibrate v12 #q3 #y2 v17 v10`. (v12 is at v13 initially, and can move to #q3)
               *   Need to move to #q3 first. Initial state: `atconf(v12, v13)`. Available move: `(move v12 v13 #t27 #q3)`.
           2.  **Take image of v17:** `take_image v12 #q3 #y2 v17 v10 v11`.
           3.  **Move for comms (send image v17):** From #q3 to #q2. `(move v12 #q3 #o2 #q2)`.
           4.  **Send image v17:** `send_image v12 #q2 #y1 v9 v17 v11`. (Now `receivedimage(v17, v11)` is true).
           5.  **Move to sample rock v3 (type v2):** From #q2 to #q10. `(move v12 #q2 #o2 #q10)`.
           6.  **Sample rock v3:** `sample_rock v12 #q10 v3 v16`. (`analyzed(v12, v3)` becomes true).
           7.  **Move to sample rock v5 (type v6):** From #q10 to #o5. `(move v12 #q10 #o2 #o5)`.
           8.  **Sample rock v5:** `sample_rock v12 #o5 v5 v16`. (`analyzed(v12, v5)` becomes true. Store for v12 is now full).
           9.  **Move for comms (send analysis):** From #o5 to #q2. `(move v12 #o5 #o2 #q2)`.
           10. **Send analysis v3:** `send_analysis v12 #q2 #y1 v9 v3`. (`receivedanalysis(v3)` becomes true).
           11. **Send analysis v5:** `send_analysis v12 #q2 #y1 v9 v5`. (`receivedanalysis(v5)` becomes true).
           
           **Rover v14 (for objective v18):**
           1.  **Calibrate for v18:** `calibrate v14 #q9 #y5 v18 v10`. (v14 is at v15 initially, and can move to #q9)
               *   Need to move to #q9 first. Initial state: `atconf(v14, v15)`. Available move: `(move v14 v15 #t26 #q9)`.
           2.  **Take image of v18:** `take_image v14 #q9 #y5 v18 v10 v11`.
           3.  **Move for comms (send image v18):** From #q9 to #q5. There is no direct move from #q9 to #q5. Looking at options:
               *   `move v14 #q9 #t10 #q5` is available.
           4.  **Send image v18:** `send_image v14 #q5 #y3 v9 v18 v11`. (Now `receivedimage(v18, v11)` is true).
           
           All conditions for `new-axiom@0()` are now met.
           
           --Plan--:
           (move v12 v13 #t27 #q3)
           (calibrate v12 #q3 #y2 v17 v10)
           (take_image v12 #q3 #y2 v17 v10 v11)
           (move v12 #q3 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (move v12 #q2 #o2 #q10)
           (sample_rock v12 #q10 v3 v16)
           (move v12 #q10 #o2 #o5)
           (sample_rock v12 #o5 v5 v16)
           (move v12 #o5 #o2 #q2)
           (send_analysis v12 #q2 #y1 v9 v3)
           (send_analysis v12 #q2 #y1 v9 v5)
           (move v14 v15 #t26 #q9)
           (calibrate v14 #q9 #y5 v18 v10)
           (take_image v14 #q9 #y5 v18 v10 v11)
           (move v14 #q9 #t10 #q5)
           (send_image v14 #q5 #y3 v9 v18 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not fully satisfied. Let's re-evaluate the goal and ensure all components are met. The goal is `new-axiom@0()`, which is an axiom with the following implicit conditions from its definition:
           
           ```
             Conjunction
               Atom atconf(v12, v13)        ; This is an example, it actually means atconf(v12, ?q)
               Atom atconf(v14, v15)        ; This is an example, it actually means atconf(v14, ?q)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           From the problem description, `?stone` and `?soil` are variables implying that *any* rock of type v2 and *any* rock of type v6 needs to be analyzed and its analysis received.
           
           Initial State Analysis:
           *   `atconf(v12, v13)` and `atconf(v14, v15)` are true. These will change as rovers move but will always be true at some config.
           *   `free(v12, v16)` and `free(v14, v16)` are true.
           *   `objective(v17)` and `objective(v18)` are true.
           *   `mode(v11)` is true.
           *   `store(v16)` is true.
           *   Rocks of type `v2`: `v1`, `v3`, `v4`.
           *   Rocks of type `v6`: `v5`, `v7`, `v8`.
           
           To satisfy the goal:
           1.  **Receive image of v17 and v18:**
               *   Rover v12 can take images of v17 at #q3 and v18 at #q1.
               *   Rover v12 can communicate from #q2.
               *   Rover v14 can take images of v17 at #q7 and v18 at #q9.
               *   Rover v14 can communicate from #q5.
           2.  **Receive analysis of a rock of type v2 and a rock of type v6:**
               *   Rover v12 can sample v1, v3, v4 (type v2) at various locations, and v5, v7, v8 (type v6) at various locations.
               *   Rover v14 can sample v1, v3, v4 (type v2) at various locations, and v5, v7, v8 (type v6) at various locations.
               *   A rover's store becomes `full` after sampling, and `free` after dropping a rock. We need a *free* store for *each* rover for the initial part of the axiom, but sampling makes it `full`. This is fine as long as `free` is true *initially* and the goal does not require `free` at the *end*. The `new-axiom@0()` just states that both `free(v12, v16)` and `free(v14, v16)` are true *at the time the axiom is evaluated*. Since they are true in the initial state and are not directly negated in the axiom, we assume this is handled. The critical part is ensuring that *at least one* rock of each type is analyzed.
           
           Let's revise the strategy for maximum efficiency using the available moves.
           
           **Rover v12 tasks:**
           *   Take image of v17 and send it.
           *   Sample rock v3 (type v2) and send analysis.
           *   Sample rock v5 (type v6) and send analysis.
           
           **Rover v14 tasks:**
           *   Take image of v18 and send it.
           
           Detailed Plan Steps:
           
           **Rover v12 (Starts at v13, free v16):**
           1.  Move to #q3 (image v17 location): `(move v12 v13 #t27 #q3)`
           2.  Calibrate camera: `(calibrate v12 #q3 #y2 v17 v10)`
           3.  Take image of v17: `(take_image v12 #q3 #y2 v17 v10 v11)`
           4.  Move to #q2 (comms location): `(move v12 #q3 #o2 #q2)`
           5.  Send image of v17: `(send_image v12 #q2 #y1 v9 v17 v11)` (receivedimage(v17, v11) achieved)
           6.  Move to #q10 (rock v3 location): `(move v12 #q2 #o2 #q10)`
           7.  Sample rock v3 (type v2): `(sample_rock v12 #q10 v3 v16)` (analyzed(v12, v3) achieved, v12's store full)
           8.  Move to #o5 (rock v5 location): `(move v12 #q10 #o2 #o5)`
           9.  Sample rock v5 (type v6): `(sample_rock v12 #o5 v5 v16)` (analyzed(v12, v5) achieved, this is fine, it doesn't matter that it's already full, the axiom only asks if it's free. We just need two different types of rocks to be analyzed.)
               *   **Correction:** Rover v12 only has *one* store `v16`. It becomes full after the first sample (`sample_rock v12 #q10 v3 v16`). To sample another rock, it would need to drop the first one. However, the goal is `receivedanalysis(?r)` for types `v2` and `v6`, not that one rover must analyze both.
               *   Let's have v12 analyze type v2, and v14 analyze type v6.
           
           **Revised Rover v12 tasks:**
           *   Take image of v17 and send it.
           *   Sample rock v3 (type v2) and send analysis.
           
           **Revised Rover v14 tasks:**
           *   Take image of v18 and send it.
           *   Sample rock v5 (type v6) and send analysis.
           
           Let's re-construct the plan with this correction.
           
           **Rover v12 (Starts at v13, free v16):**
           1.  Move to #q3 (image v17 location): `(move v12 v13 #t27 #q3)`
           2.  Calibrate camera: `(calibrate v12 #q3 #y2 v17 v10)`
           3.  Take image of v17: `(take_image v12 #q3 #y2 v17 v10 v11)`
           4.  Move to #q2 (comms location): `(move v12 #q3 #o2 #q2)`
           5.  Send image of v17: `(send_image v12 #q2 #y1 v9 v17 v11)` (receivedimage(v17, v11) achieved)
           6.  Move to #q10 (rock v3 location): `(move v12 #q2 #o2 #q10)`
           7.  Sample rock v3 (type v2): `(sample_rock v12 #q10 v3 v16)` (analyzed(v12, v3) achieved, v12's store full)
           8.  Move back to #q2 (comms location): `(move v12 #q10 #o2 #q2)`
           9.  Send analysis v3: `(send_analysis v12 #q2 #y1 v9 v3)` (receivedanalysis(v3) achieved, type v2 fulfilled)
           
           **Rover v14 (Starts at v15, free v16):**
           1.  Move to #q9 (image v18 location): `(move v14 v15 #t26 #q9)`
           2.  Calibrate camera: `(calibrate v14 #q9 #y5 v18 v10)`
           3.  Take image of v18: `(take_image v14 #q9 #y5 v18 v10 v11)`
           4.  Move to #q5 (comms location): `(move v14 #q9 #t10 #q5)`
           5.  Send image of v18: `(send_image v14 #q5 #y3 v9 v18 v11)` (receivedimage(v18, v11) achieved)
           6.  Move to #q11 (rock v5 location): `(move v14 #q5 #t30 #q11)`
           7.  Sample rock v5 (type v6): `(sample_rock v14 #q11 v5 v16)` (analyzed(v14, v5) achieved, v14's store full)
           8.  Move back to #q5 (comms location): `(move v14 #q11 #t28 #q5)`
           9.  Send analysis v5: `(send_analysis v14 #q5 #y3 v9 v5)` (receivedanalysis(v5) achieved, type v6 fulfilled)
           
           All conditions should now be met.
           
           --Plan--:
           (move v12 v13 #t27 #q3)
           (calibrate v12 #q3 #y2 v17 v10)
           (take_image v12 #q3 #y2 v17 v10 v11)
           (move v12 #q3 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (move v12 #q2 #o2 #q10)
           (sample_rock v12 #q10 v3 v16)
           (move v12 #q10 #o2 #q2)
           (send_analysis v12 #q2 #y1 v9 v3)
           (move v14 v15 #t26 #q9)
           (calibrate v14 #q9 #y5 v18 v10)
           (take_image v14 #q9 #y5 v18 v10 v11)
           (move v14 #q9 #t10 #q5)
           (send_image v14 #q5 #y3 v9 v18 v11)
           (move v14 #q5 #t30 #q11)
           (sample_rock v14 #q11 v5 v16)
           (move v14 #q11 #t28 #q5)
           (send_analysis v14 #q5 #y3 v9 v5)

