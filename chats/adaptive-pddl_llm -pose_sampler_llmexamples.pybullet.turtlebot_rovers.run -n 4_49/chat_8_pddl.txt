User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t1: object
           #t10: object
           #t12: object
           #t13: object
           #t14: object
           #t16: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t40: object
           #t6: object
           #t7: object
           #t8: object
           #y1: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom rover(v12)
           Atom rock(v7)
           Atom lander(v9)
           Atom type(v7, v6)
           Atom rock(v3)
           Atom rock(v5)
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom objective(v17)
           Atom mode(v11)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom type(v3, v2)
           Atom supports(v10, v11)
           Atom type(v4, v2)
           Atom rock(v1)
           Atom objective(v20)
           Atom free(v14, v16)
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom free(v12, v16)
           Atom camera(v10)
           Atom rock(v4)
           Atom onboard(v10, v14)
           Atom atconf(v14, v15)
           Atom objective(v18)
           Atom type(v1, v2)
           Atom type(v5, v6)
           Atom store(v16)
           Atom objective(v19)
           Atom above(v12, #q2, v3)
           Atom conf(v12, #q2)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #q4, #y3, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v14, #q10, #y6, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y6)
           Atom above(v14, #q15, v4)
           Atom conf(v14, #q15)
           Atom above(v14, #q14, v8)
           Atom conf(v14, #q14)
           Atom imagevisible(v14, #q13, #y9, v19)
           Atom imagerange(v14, #q13, v19)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom above(v14, #q7, v3)
           Atom conf(v14, #q7)
           Atom imagevisible(v14, #q11, #y7, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom comvisible(v14, #q8, #y5, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q5, v7)
           Atom conf(v12, #q5)
           Atom above(v14, #q16, v7)
           Atom conf(v14, #q16)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q12, #y8, v20)
           Atom imagerange(v14, #q12, v20)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom above(v14, #q17, v1)
           Atom conf(v14, #q17)
           Atom above(v12, #o5, v1)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom above(v12, #o5, v5)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, v13, #t23, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, v15, #t27, #q10)
           Atom motion(v14, #q17, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v14, v15, #t29, #q12)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q2, #t2, #q1)
           Atom motion(v12, #q1, #t3, #q2)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #t1, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q2, #t31, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q1, #t19, #q5)
           Atom motion(v12, #q5, #t21, #q1)
           Atom motion(v12, #q6, #t22, #q1)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q1, #t16, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #t20, #q1)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q1, #t18, #q4)
           Atom motion(v12, #q6, #t12, #q4)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q17, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q17)
           Atom motion(v14, v15, #t28, #q11)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, v15, #t7, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #t24, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #t32, #q9)
           Atom motion(v14, #q17, #o2, #q8)
           Atom motion(v14, #q12, #t26, #q8)
           Atom motion(v14, #q8, #t10, #q7)
           Atom motion(v14, #q9, #t14, #q8)
           Atom motion(v14, #q8, #o2, #q17)
           Atom motion(v14, #q7, #t13, #q8)
           Atom motion(v14, #q8, #t37, #q11)
           Atom motion(v14, #q8, #t35, #q12)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q11, #t25, #q8)
           Atom motion(v14, #q8, #t8, v15)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q13, #t40, #q8)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q8, #t36, #q13)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, v15, #t30, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q10)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q16)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q14, #t33, #q8)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q8, #t38, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q8, #t39, #q15)
           Atom motion(v14, #q15, #t34, #q8)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q2 v3 v16))
           ((sample_rock v12 #q5 v7 v16))
           ((sample_rock v14 #q14 v8 v16))
           ((sample_rock v14 #q15 v4 v16))
           ((sample_rock v14 #q16 v7 v16))
           ((sample_rock v14 #q17 v1 v16))
           ((sample_rock v14 #q7 v3 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #t1 v13))
           ((move v12 #q1 #t16 #q6))
           ((move v12 #q1 #t18 #q4))
           ((move v12 #q1 #t19 #q5))
           ((move v12 #q1 #t3 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t2 #q1))
           ((move v12 #q2 #t31 #q5))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t20 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t21 #q1))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q4))
           ((move v12 #q6 #t22 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t23 #q2))
           ((move v12 v13 #t6 #q4))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q16))
           ((move v14 #q10 #o2 #q17))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t24 #q8))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q17))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t25 #q8))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t26 #q8))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t40 #q8))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t33 #q8))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t34 #q8))
           ((move v14 #q16 #o2 #q10))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q17 #o2 #q10))
           ((move v14 #q17 #o2 #q11))
           ((move v14 #q17 #o2 #q12))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 #q8))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t13 #q8))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q17))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #t10 #q7))
           ((move v14 #q8 #t32 #q9))
           ((move v14 #q8 #t35 #q12))
           ((move v14 #q8 #t36 #q13))
           ((move v14 #q8 #t37 #q11))
           ((move v14 #q8 #t38 #q14))
           ((move v14 #q8 #t39 #q15))
           ((move v14 #q8 #t8 v15))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t14 #q8))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t27 #q10))
           ((move v14 v15 #t28 #q11))
           ((move v14 v15 #t29 #q12))
           ((move v14 v15 #t30 #q13))
           ((move v14 v15 #t7 #q7))
           ((calibrate v12 #q4 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q10 #y6 v17 v10))
           ((calibrate v14 #q11 #y7 v18 v10))
           ((calibrate v14 #q12 #y8 v20 v10))
           ((calibrate v14 #q13 #y9 v19 v10))
           ((take_image v12 #q4 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q10 #y6 v17 v10 v11))
           ((take_image v14 #q11 #y7 v18 v10 v11))
           ((take_image v14 #q12 #y8 v20 v10 v11))
           ((take_image v14 #q13 #y9 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y5 v9 v8))
           ((send_analysis v14 #q8 #y5 v9 v4))
           ((send_analysis v14 #q8 #y5 v9 v7))
           ((send_analysis v14 #q8 #y5 v9 v1))
           ((send_analysis v14 #q8 #y5 v9 v3))
           ((send_analysis v14 #q8 #y5 v9 v5))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v20 v11))
           ((send_image v14 #q8 #y5 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. Both rovers have a camera `v10` onboard which supports mode `v11`. There are several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) of two types (`v2`, `v6`). There are also several objectives (`v17`, `v18`, `v19`, `v20`). Both rovers have a store `v16` which is currently free.
           
           The goal `new-axiom@0()` requires that:
           1. Both rovers `v12` and `v14` are at some configuration (`v13` and `v15` respectively). This is already true in the initial state.
           2. Both rovers `v12` and `v14` have their store `v16` free. This is also true.
           3. Images of all objectives (`v17`, `v18`, `v19`, `v20`) in mode `v11` have been received.
           4. All rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) have been analyzed and the analysis has been received.
           
           To achieve the goal, the plan needs to:
           - For `v12`:
               - Calibrate its camera.
               - Take images of `v17` and `v18`.
               - Send images of `v17` and `v18`.
               - Sample rocks `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
               - Send analysis of rocks.
           - For `v14`:
               - Calibrate its camera.
               - Take images of `v17`, `v18`, `v19`, `v20`.
               - Send images of `v17`, `v18`, `v19`, `v20`.
               - Sample rocks `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
               - Send analysis of rocks.
           
           We can split the tasks between the two rovers to achieve the goal efficiently. Rover `v12` can handle sampling some rocks and taking some images, while `v14` can handle the rest.
           
           Let's focus on `v12`:
           - It is at `v13`. We need to move it to positions where it can take images and sample rocks.
           - `v12` can image `v17` at `#q4` and `v18` at `#q6`.
           - `v12` can sample `v3` at `#q2`, `v7` at `#q5`, `v1`, `v4`, `v5`, `v8` at `#o5`.
           
           Let's focus on `v14`:
           - It is at `v15`.
           - `v14` can image `v17` at `#q10`, `v18` at `#q11`, `v19` at `#q13`, `v20` at `#q12`.
           - `v14` can sample `v3` at `#q7`, `v4` at `#q15`, `v1` at `#q17`, `v5` at `#q9`, `v7` at `#q16`, `v8` at `#q14`.
           
           We need to make sure the store is free to sample rocks, and the camera is calibrated to take images.
           
           Here's a possible plan:
           1. **Rover v12**:
               - Calibrate camera for `v18` at `#q6`.
               - Take image of `v18`.
               - Calibrate camera for `v17` at `#q4`.
               - Take image of `v17`.
               - Move to `#q1` to send images.
               - Send image of `v17`.
               - Send image of `v18`.
               - Move to `#o5` to sample rocks `v1`, `v4`, `v5`, `v8`.
               - Sample `v1`, `v4`, `v5`, `v8`.
               - Move to `#q2` to sample `v3`.
               - Sample `v3`.
               - Move to `#q5` to sample `v7`.
               - Sample `v7`.
               - Move to `#q1` to send analysis for all sampled rocks.
           
           2. **Rover v14**:
               - Calibrate camera for `v17` at `#q10`.
               - Take image of `v17`.
               - Calibrate camera for `v18` at `#q11`.
               - Take image of `v18`.
               - Calibrate camera for `v19` at `#q13`.
               - Take image of `v19`.
               - Calibrate camera for `v20` at `#q12`.
               - Take image of `v20`.
               - Move to `#q8` to send images.
               - Send image of `v17`.
               - Send image of `v18`.
               - Send image of `v19`.
               - Send image of `v20`.
               - No need to sample rocks with v14 since v12 can do all of it. However, the problem statement says "all rocks ... have been analyzed". We need to make sure we consider all rocks, and since `v12` can sample all unique rocks listed (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`), it is sufficient for `v12` to do it.
           
           Let's revise the plan considering rover `v12` can sample all needed rocks, and both rovers need to send analysis for all sampled rocks. Since we want to achieve `receivedanalysis` for all rocks and `receivedimage` for all objectives, we should make sure all rocks are sampled and all images are taken and sent.
           
           The goal `new-axiom@0()` implies receiving analysis for all rocks of type `v2` and `v6`. In this case, rocks are `v1, v3, v4, v5, v7, v8`. Rover `v12` can sample `v1, v3, v4, v5, v7, v8` as it has `above` predicates for all of them. Rover `v14` can also sample them. To avoid using `drop_rock`, we should ensure one rover samples them all, if it has a free store. Both rovers have a free store `v16`.
           
           The given valid action instances include `sample_rock v12 #o5 v1 v16`, `sample_rock v12 #o5 v4 v16`, `sample_rock v12 #o5 v5 v16`, `sample_rock v12 #o5 v8 v16`, `sample_rock v12 #q2 v3 v16`, `sample_rock v12 #q5 v7 v16`. This means `v12` can sample all the specified rocks.
           
           --Plan--:
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (calibrate v12 #q4 #y3 v17 v10)
           (take_image v12 #q4 #y3 v17 v10 v11)
           (move v12 #q6 #t22 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (move v12 #q1 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (sample_rock v12 #o5 v4 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v5 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v8 v16)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q2)
           (sample_rock v12 #q2 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q2 #t31 #q5)
           (sample_rock v12 #q5 v7 v16)
           (drop_rock v12 v16)
           (move v12 #q5 #t21 #q1)
           (send_analysis v12 #q1 #y1 v9 v1)
           (send_analysis v12 #q1 #y1 v9 v4)
           (send_analysis v12 #q1 #y1 v9 v5)
           (send_analysis v12 #q1 #y1 v9 v8)
           (send_analysis v12 #q1 #y1 v9 v3)
           (send_analysis v12 #q1 #y1 v9 v7)
           (calibrate v14 #q10 #y6 v17 v10)
           (take_image v14 #q10 #y6 v17 v10 v11)
           (calibrate v14 #q11 #y7 v18 v10)
           (take_image v14 #q11 #y7 v18 v10 v11)
           (calibrate v14 #q13 #y9 v19 v10)
           (take_image v14 #q13 #y9 v19 v10 v11)
           (calibrate v14 #q12 #y8 v20 v10)
           (take_image v14 #q12 #y8 v20 v10 v11)
           (move v14 #q10 #t24 #q8)
           (send_image v14 #q8 #y5 v9 v17 v11)
           (send_image v14 #q8 #y5 v9 v18 v11)
           (send_image v14 #q8 #y5 v9 v19 v11)
           (send_image v14 #q8 #y5 v9 v20 v11)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v14, #q12) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `v14` was not at `#q12` when `take_image` was called for objective `v20`. I need to ensure that the rover is at the correct configuration before attempting to take an image or perform other actions. Also, I need to consider using `drop_rock` appropriately to free up the store after sampling, before sampling another rock. The goal `new-axiom@0()` essentially requires that:
           1. `receivedimage` for objectives `v17`, `v18`, `v19`, `v20` (using mode `v11`).
           2. `receivedanalysis` for rocks `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
           
           Let's break down the plan for each rover more carefully:
           
           **Rover v12 (at v13 initially, store v16 free, camera v10 supports v11)**:
           * **Images**: `v12` can image `v17` (at `#q4`) and `v18` (at `#q6`).
           * **Communication**: `v12` can communicate from `#q1` to `v9`.
           * **Rocks**: `v12` can sample `v3` (at `#q2`), `v7` (at `#q5`), `v1`, `v4`, `v5`, `v8` (at `#o5`).
           
           **Rover v14 (at v15 initially, store v16 free, camera v10 supports v11)**:
           * **Images**: `v14` can image `v17` (at `#q10`), `v18` (at `#q11`), `v19` (at `#q13`), `v20` (at `#q12`).
           * **Communication**: `v14` can communicate from `#q8` to `v9`.
           * **Rocks**: `v14` can sample `v3` (at `#q7`), `v4` (at `#q15`), `v1` (at `#q17`), `v5` (at `#q9`), `v7` (at `#q16`), `v8` (at `#q14`).
           
           Since `v12` can sample all rocks, let `v12` handle all rock sampling and analysis, and also take images of `v17` and `v18`. Let `v14` handle taking images of `v17`, `v18`, `v19`, `v20` and sending them. This covers all objectives and rocks. I need to make sure to account for `atconf` changes and `calibrated` status.
           
           Revised Plan:
           
           **Part 1: Rover v12 - Image taking, Rock sampling and analysis sending**
           1. Calibrate camera at a position to take an image.
           2. Take image.
           3. Calibrate camera at another position.
           4. Take second image.
           5. Move to communication spot.
           6. Send both images.
           7. Move to first rock sampling spot (`#o5` for `v1`).
           8. Sample rock `v1`.
           9. Drop rock (to free store for next sample).
           10. Sample rock `v4`.
           11. Drop rock.
           12. Sample rock `v5`.
           13. Drop rock.
           14. Sample rock `v8`.
           15. Drop rock.
           16. Move to second rock sampling spot (`#q2` for `v3`).
           17. Sample rock `v3`.
           18. Drop rock.
           19. Move to third rock sampling spot (`#q5` for `v7`).
           20. Sample rock `v7`.
           21. Drop rock.
           22. Move back to communication spot.
           23. Send analysis for all 6 rocks.
           
           **Part 2: Rover v14 - Image taking and sending (for remaining objectives)**
           1. Move to a position to calibrate and take an image.
           2. Calibrate camera.
           3. Take image.
           4. Repeat for other objectives (`v18`, `v19`, `v20`).
           5. Move to communication spot.
           6. Send all four images.
           
           This way, all goals are covered.
           
           --Plan--:
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (calibrate v12 #q4 #y3 v17 v10)
           (take_image v12 #q4 #y3 v17 v10 v11)
           (move v12 #q4 #t20 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (move v12 #q1 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v4 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v5 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v8 v16)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q2)
           (sample_rock v12 #q2 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q2 #t31 #q5)
           (sample_rock v12 #q5 v7 v16)
           (drop_rock v12 v16)
           (move v12 #q5 #t21 #q1)
           (send_analysis v12 #q1 #y1 v9 v1)
           (send_analysis v12 #q1 #y1 v9 v4)
           (send_analysis v12 #q1 #y1 v9 v5)
           (send_analysis v12 #q1 #y1 v9 v8)
           (send_analysis v12 #q1 #y1 v9 v3)
           (send_analysis v12 #q1 #y1 v9 v7)
           (move v14 v15 #t27 #q10)
           (calibrate v14 #q10 #y6 v17 v10)
           (take_image v14 #q10 #y6 v17 v10 v11)
           (move v14 #q10 #o2 #q11)
           (calibrate v14 #q11 #y7 v18 v10)
           (take_image v14 #q11 #y7 v18 v10 v11)
           (move v14 #q11 #o2 #q13)
           (calibrate v14 #q13 #y9 v19 v10)
           (take_image v14 #q13 #y9 v19 v10 v11)
           (move v14 #q13 #o2 #q12)
           (calibrate v14 #q12 #y8 v20 v10)
           (take_image v14 #q12 #y8 v20 v10 v11)
           (move v14 #q12 #t26 #q8)
           (send_image v14 #q8 #y5 v9 v17 v11)
           (send_image v14 #q8 #y5 v9 v18 v11)
           (send_image v14 #q8 #y5 v9 v19 v11)
           (send_image v14 #q8 #y5 v9 v20 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan was not valid because the goal `new-axiom@0()` was not satisfied. Let's re-examine the goal `new-axiom@0()`, which is an axiom with several conjunctive conditions that need to be met. The specific conditions are:
           - `atconf(v12, v13)`: Rover `v12` must be at configuration `v13`.
           - `atconf(v14, v15)`: Rover `v14` must be at configuration `v15`.
           - `free(v12, v16)`: Rover `v12` must have its store `v16` free.
           - `free(v14, v16)`: Rover `v14` must have its store `v16` free.
           - `receivedimage(v17, v11)`: Image of objective `v17` in mode `v11` must be received.
           - `receivedimage(v18, v11)`: Image of objective `v18` in mode `v11` must be received.
           - `receivedimage(v19, v11)`: Image of objective `v19` in mode `v11` must be received.
           - `receivedimage(v20, v11)`: Image of objective `v20` in mode `v11` must be received.
           - `type(?stone, v2)`: This refers to any rock of type `v2`.
           - `receivedanalysis(?stone)`: Analysis of any rock of type `v2` must be received.
           - `type(?soil, v6)`: This refers to any rock of type `v6`.
           - `receivedanalysis(?soil)`: Analysis of any rock of type `v6` must be received.
           
           From the initial state, we know:
           - Rocks of type `v2`: `v1`, `v3`, `v4`.
           - Rocks of type `v6`: `v5`, `v7`, `v8`.
           
           So, the plan needs to ensure `receivedanalysis` for `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
           
           My previous plan failed to satisfy the goal, specifically the `atconf` states for `v12` and `v14` and `free` store states for both rovers **at the end of the plan**. I must ensure these conditions are met in the *final state*. This means after all sampling and dropping, both rovers must return to their initial configuration (`v13` and `v15` respectively) and have their stores free.
           
           Let's carefully construct the plan, ensuring all `atconf` and `free` states are restored, and all image and analysis receipts are achieved.
           
           **Rover v12 Plan:**
           1. Move to `#q6` to calibrate and take image of `v18`.
           2. Move to `#q4` to calibrate and take image of `v17`.
           3. Move to `#q1` for communication.
           4. Send images of `v17` and `v18`.
           5. Move to `#o5` for sampling rocks `v1`, `v4`, `v5`, `v8`.
           6. For each rock, sample, then drop to free the store.
           7. Move to `#q2` for sampling rock `v3`.
           8. Sample `v3`, then drop.
           9. Move to `#q5` for sampling rock `v7`.
           10. Sample `v7`, then drop.
           11. Move back to `#q1` for sending analysis.
           12. Send analysis for all sampled rocks.
           13. Move back to initial configuration `v13`.
           
           **Rover v14 Plan:**
           1. Move to `#q10` to calibrate and take image of `v17`.
           2. Move to `#q11` to calibrate and take image of `v18`.
           3. Move to `#q13` to calibrate and take image of `v19`.
           4. Move to `#q12` to calibrate and take image of `v20`.
           5. Move to `#q8` for communication.
           6. Send images of `v17`, `v18`, `v19`, `v20`.
           7. Move back to initial configuration `v15`.
           
           Note that `receivedimage(v17, v11)` and `receivedimage(v18, v11)` will be achieved twice, which is fine as it's a positive goal condition.
           
           --Plan--:
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t12 #q4)
           (calibrate v12 #q4 #y3 v17 v10)
           (take_image v12 #q4 #y3 v17 v10 v11)
           (move v12 #q4 #t20 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (move v12 #q1 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v4 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v5 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v8 v16)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q2)
           (sample_rock v12 #q2 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q2 #t31 #q5)
           (sample_rock v12 #q5 v7 v16)
           (drop_rock v12 v16)
           (move v12 #q5 #t21 #q1)
           (send_analysis v12 #q1 #y1 v9 v1)
           (send_analysis v12 #q1 #y1 v9 v4)
           (send_analysis v12 #q1 #y1 v9 v5)
           (send_analysis v12 #q1 #y1 v9 v8)
           (send_analysis v12 #q1 #y1 v9 v3)
           (send_analysis v12 #q1 #y1 v9 v7)
           (move v12 #q1 #t1 v13)
           (move v14 v15 #t27 #q10)
           (calibrate v14 #q10 #y6 v17 v10)
           (take_image v14 #q10 #y6 v17 v10 v11)
           (move v14 #q10 #o2 #q11)
           (calibrate v14 #q11 #y7 v18 v10)
           (take_image v14 #q11 #y7 v18 v10 v11)
           (move v14 #q11 #o2 #q13)
           (calibrate v14 #q13 #y9 v19 v10)
           (take_image v14 #q13 #y9 v19 v10 v11)
           (move v14 #q13 #o2 #q12)
           (calibrate v14 #q12 #y8 v20 v10)
           (take_image v14 #q12 #y8 v20 v10 v11)
           (move v14 #q12 #t26 #q8)
           (send_image v14 #q8 #y5 v9 v17 v11)
           (send_image v14 #q8 #y5 v9 v18 v11)
           (send_image v14 #q8 #y5 v9 v19 v11)
           (send_image v14 #q8 #y5 v9 v20 v11)
           (move v14 #q8 #t8 v15)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q6) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `v12` was not at `#q6` when the `calibrate` action was called. I missed the initial move to `#q6`. Rover `v12` starts at `v13`. So, the very first action for `v12` needs to be a `move` from `v13` to `#q6`.
           
           Let's refine the plan with this crucial initial move and re-verify all `atconf` preconditions.
           
           **Rover v12 Plan:**
           1. **Move from `v13` to `#q6`**.
           2. Calibrate camera at `#q6` for `v18`.
           3. Take image of `v18`.
           4. Move from `#q6` to `#q4`.
           5. Calibrate camera at `#q4` for `v17`.
           6. Take image of `v17`.
           7. Move from `#q4` to `#q1` for communication.
           8. Send images of `v17` and `v18`.
           9. Move from `#q1` to `#o5` for sampling rocks `v1`, `v4`, `v5`, `v8`.
           10. For each rock, sample, then drop to free the store.
           11. Move from `#o5` to `#q2` for sampling rock `v3`.
           12. Sample `v3`, then drop.
           13. Move from `#q2` to `#q5` for sampling rock `v7`.
           14. Sample `v7`, then drop.
           15. Move from `#q5` back to `#q1` for sending analysis.
           16. Send analysis for all sampled rocks.
           17. Move from `#q1` back to initial configuration `v13`.
           
           **Rover v14 Plan:**
           1. **Move from `v15` to `#q10`**.
           2. Calibrate camera at `#q10` for `v17`.
           3. Take image of `v17`.
           4. Move from `#q10` to `#q11`.
           5. Calibrate camera at `#q11` for `v18`.
           6. Take image of `v18`.
           7. Move from `#q11` to `#q13`.
           8. Calibrate camera at `#q13` for `v19`.
           9. Take image of `v19`.
           10. Move from `#q13` to `#q12`.
           11. Calibrate camera at `#q12` for `v20`.
           12. Take image of `v20`.
           13. Move from `#q12` to `#q8` for communication.
           14. Send images of `v17`, `v18`, `v19`, `v20`.
           15. Move from `#q8` back to initial configuration `v15`.
           
           This detailed step-by-step breakdown with `move` actions before each configuration-dependent action should ensure `atconf` preconditions are met.
           
           --Plan--:
           (move v12 v13 #o2 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t12 #q4)
           (calibrate v12 #q4 #y3 v17 v10)
           (take_image v12 #q4 #y3 v17 v10 v11)
           (move v12 #q4 #t20 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (move v12 #q1 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v4 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v5 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v8 v16)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q2)
           (sample_rock v12 #q2 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q2 #t31 #q5)
           (sample_rock v12 #q5 v7 v16)
           (drop_rock v12 v16)
           (move v12 #q5 #t21 #q1)
           (send_analysis v12 #q1 #y1 v9 v1)
           (send_analysis v12 #q1 #y1 v9 v4)
           (send_analysis v12 #q1 #y1 v9 v5)
           (send_analysis v12 #q1 #y1 v9 v8)
           (send_analysis v12 #q1 #y1 v9 v3)
           (send_analysis v12 #q1 #y1 v9 v7)
           (move v12 #q1 #t1 v13)
           (move v14 v15 #t27 #q10)
           (calibrate v14 #q10 #y6 v17 v10)
           (take_image v14 #q10 #y6 v17 v10 v11)
           (move v14 #q10 #o2 #q11)
           (calibrate v14 #q11 #y7 v18 v10)
           (take_image v14 #q11 #y7 v18 v10 v11)
           (move v14 #q11 #o2 #q13)
           (calibrate v14 #q13 #y9 v19 v10)
           (take_image v14 #q13 #y9 v19 v10 v11)
           (move v14 #q13 #o2 #q12)
           (calibrate v14 #q12 #y8 v20 v10)
           (take_image v14 #q12 #y8 v20 v10 v11)
           (move v14 #q12 #t26 #q8)
           (send_image v14 #q8 #y5 v9 v17 v11)
           (send_image v14 #q8 #y5 v9 v18 v11)
           (send_image v14 #q8 #y5 v9 v19 v11)
           (send_image v14 #q8 #y5 v9 v20 v11)
           (move v14 #q8 #t8 v15)

