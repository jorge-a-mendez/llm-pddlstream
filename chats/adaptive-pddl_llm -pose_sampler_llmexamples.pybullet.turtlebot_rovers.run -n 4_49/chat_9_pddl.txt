User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q19: object
           #q2: object
           #q20: object
           #q21: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t1: object
           #t10: object
           #t12: object
           #t13: object
           #t14: object
           #t16: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t6: object
           #t7: object
           #t8: object
           #y1: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom rover(v12)
           Atom rock(v7)
           Atom lander(v9)
           Atom type(v7, v6)
           Atom rock(v3)
           Atom rock(v5)
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom objective(v17)
           Atom mode(v11)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom type(v3, v2)
           Atom supports(v10, v11)
           Atom type(v4, v2)
           Atom rock(v1)
           Atom objective(v20)
           Atom free(v14, v16)
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom free(v12, v16)
           Atom camera(v10)
           Atom rock(v4)
           Atom onboard(v10, v14)
           Atom atconf(v14, v15)
           Atom objective(v18)
           Atom type(v1, v2)
           Atom type(v5, v6)
           Atom store(v16)
           Atom objective(v19)
           Atom above(v12, #q2, v3)
           Atom conf(v12, #q2)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q19, v4)
           Atom conf(v12, #q19)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #q4, #y3, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #q18, v8)
           Atom conf(v12, #q18)
           Atom comvisible(v14, #q8, #y5, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom above(v14, #q7, v3)
           Atom conf(v14, #q7)
           Atom above(v14, #q14, v8)
           Atom conf(v14, #q14)
           Atom above(v14, #q15, v4)
           Atom conf(v14, #q15)
           Atom imagevisible(v14, #q11, #y7, v18)
           Atom imagerange(v14, #q11, v18)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom imagevisible(v14, #q10, #y6, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y6)
           Atom imagevisible(v14, #q13, #y9, v19)
           Atom imagerange(v14, #q13, v19)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q5, v7)
           Atom conf(v12, #q5)
           Atom above(v14, #q16, v7)
           Atom conf(v14, #q16)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q12, #y8, v20)
           Atom imagerange(v14, #q12, v20)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom above(v12, #q21, v1)
           Atom conf(v12, #q21)
           Atom above(v14, #q17, v1)
           Atom conf(v14, #q17)
           Atom above(v12, #q20, v5)
           Atom conf(v12, #q20)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom motion(v12, #q19, #o2, v13)
           Atom motion(v12, #q19, #o2, #q19)
           Atom motion(v12, v13, #o2, #q19)
           Atom motion(v12, #q20, #o2, #q20)
           Atom motion(v12, #q20, #o2, #q19)
           Atom motion(v12, #q20, #o2, v13)
           Atom motion(v12, v13, #o2, #q20)
           Atom motion(v12, #q19, #o2, #q20)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #t8, v15)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v12, #q2, #o2, #q20)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q19, #t46, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q19)
           Atom motion(v12, v13, #t23, #q2)
           Atom motion(v12, #q20, #t47, #q2)
           Atom motion(v12, #q21, #o2, #q2)
           Atom motion(v12, #q19, #o2, #q21)
           Atom motion(v12, #q2, #o2, #q21)
           Atom motion(v12, #q21, #o2, #q21)
           Atom motion(v12, #q21, #o2, v13)
           Atom motion(v12, #q20, #o2, #q21)
           Atom motion(v12, #q21, #o2, #q19)
           Atom motion(v12, v13, #o2, #q21)
           Atom motion(v12, #q21, #o2, #q20)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q8, #t35, #q12)
           Atom motion(v14, #q12, #t26, #q8)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, v15, #t29, #q12)
           Atom motion(v12, #q21, #o2, #q1)
           Atom motion(v12, #q1, #t1, v13)
           Atom motion(v12, #q1, #t42, #q19)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t3, #q2)
           Atom motion(v12, #q19, #o2, #q1)
           Atom motion(v12, #q2, #t2, #q1)
           Atom motion(v12, #q1, #o2, #q21)
           Atom motion(v12, #q1, #o2, #q20)
           Atom motion(v12, #q20, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q21)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q2, #t31, #q5)
           Atom motion(v12, #q1, #t19, #q5)
           Atom motion(v12, #q20, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q19)
           Atom motion(v12, #q21, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q20)
           Atom motion(v12, #q5, #t21, #q1)
           Atom motion(v12, #q19, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q1, #t16, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q21, #o2, #q6)
           Atom motion(v12, #q20, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #t43, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q20)
           Atom motion(v12, #q6, #o2, #q21)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q19)
           Atom motion(v12, #q6, #t22, #q1)
           Atom motion(v12, #q19, #o2, #q6)
           Atom motion(v12, #q18, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q18)
           Atom motion(v12, #q1, #t41, #q18)
           Atom motion(v12, #q18, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q5)
           Atom motion(v12, #q18, #o2, #q21)
           Atom motion(v12, #q18, #t45, #q2)
           Atom motion(v12, v13, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q20)
           Atom motion(v12, #q18, #o2, #q6)
           Atom motion(v12, #q18, #o2, #q19)
           Atom motion(v12, #q20, #o2, #q18)
           Atom motion(v12, #q18, #o2, v13)
           Atom motion(v12, #q2, #o2, #q18)
           Atom motion(v12, #q19, #o2, #q18)
           Atom motion(v12, #q21, #o2, #q18)
           Atom motion(v12, #q6, #o2, #q18)
           Atom motion(v14, #q9, #t14, #q8)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q8, #t32, #q9)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #t24, #q8)
           Atom motion(v14, v15, #t27, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q20, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q21, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q21)
           Atom motion(v12, #q1, #t18, #q4)
           Atom motion(v12, #q4, #o2, #q19)
           Atom motion(v12, #q19, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #t20, #q1)
           Atom motion(v12, #q18, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q18)
           Atom motion(v12, #q4, #o2, #q20)
           Atom motion(v12, #q6, #t12, #q4)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q8, #t37, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #t49, #q11)
           Atom motion(v14, v15, #t28, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q11, #t25, #q8)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q13, #t48, #q12)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q8, #t36, #q13)
           Atom motion(v14, v15, #t30, #q13)
           Atom motion(v14, #q11, #t44, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q13, #t40, #q8)
           Atom motion(v14, #q17, #o2, #q10)
           Atom motion(v14, #q17, #o2, #q11)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q8)
           Atom motion(v14, #q17, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q8, #o2, #q17)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q10, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q11, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q8, #t39, #q15)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q15, #t34, #q8)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q8, #t38, #q14)
           Atom motion(v14, #q14, #t33, #q8)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q10, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q16, #o2, #q10)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q8, #t10, #q7)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #t13, #q8)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, v15, #t7, #q7)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q18 v8 v16))
           ((sample_rock v12 #q19 v4 v16))
           ((sample_rock v12 #q2 v3 v16))
           ((sample_rock v12 #q20 v5 v16))
           ((sample_rock v12 #q21 v1 v16))
           ((sample_rock v12 #q5 v7 v16))
           ((sample_rock v14 #q14 v8 v16))
           ((sample_rock v14 #q15 v4 v16))
           ((sample_rock v14 #q16 v7 v16))
           ((sample_rock v14 #q17 v1 v16))
           ((sample_rock v14 #q7 v3 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q20))
           ((move v12 #q1 #o2 #q21))
           ((move v12 #q1 #t1 v13))
           ((move v12 #q1 #t16 #q6))
           ((move v12 #q1 #t18 #q4))
           ((move v12 #q1 #t19 #q5))
           ((move v12 #q1 #t3 #q2))
           ((move v12 #q1 #t41 #q18))
           ((move v12 #q1 #t42 #q19))
           ((move v12 #q18 #o2 #q1))
           ((move v12 #q18 #o2 #q18))
           ((move v12 #q18 #o2 #q19))
           ((move v12 #q18 #o2 #q20))
           ((move v12 #q18 #o2 #q21))
           ((move v12 #q18 #o2 #q4))
           ((move v12 #q18 #o2 #q5))
           ((move v12 #q18 #o2 #q6))
           ((move v12 #q18 #o2 v13))
           ((move v12 #q18 #t45 #q2))
           ((move v12 #q19 #o2 #q1))
           ((move v12 #q19 #o2 #q18))
           ((move v12 #q19 #o2 #q19))
           ((move v12 #q19 #o2 #q20))
           ((move v12 #q19 #o2 #q21))
           ((move v12 #q19 #o2 #q4))
           ((move v12 #q19 #o2 #q5))
           ((move v12 #q19 #o2 #q6))
           ((move v12 #q19 #o2 v13))
           ((move v12 #q19 #t46 #q2))
           ((move v12 #q2 #o2 #q18))
           ((move v12 #q2 #o2 #q19))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q20))
           ((move v12 #q2 #o2 #q21))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t2 #q1))
           ((move v12 #q2 #t31 #q5))
           ((move v12 #q20 #o2 #q1))
           ((move v12 #q20 #o2 #q18))
           ((move v12 #q20 #o2 #q19))
           ((move v12 #q20 #o2 #q20))
           ((move v12 #q20 #o2 #q21))
           ((move v12 #q20 #o2 #q4))
           ((move v12 #q20 #o2 #q5))
           ((move v12 #q20 #o2 #q6))
           ((move v12 #q20 #o2 v13))
           ((move v12 #q20 #t47 #q2))
           ((move v12 #q21 #o2 #q1))
           ((move v12 #q21 #o2 #q18))
           ((move v12 #q21 #o2 #q19))
           ((move v12 #q21 #o2 #q2))
           ((move v12 #q21 #o2 #q20))
           ((move v12 #q21 #o2 #q21))
           ((move v12 #q21 #o2 #q4))
           ((move v12 #q21 #o2 #q5))
           ((move v12 #q21 #o2 #q6))
           ((move v12 #q21 #o2 v13))
           ((move v12 #q4 #o2 #q18))
           ((move v12 #q4 #o2 #q19))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q20))
           ((move v12 #q4 #o2 #q21))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t20 #q1))
           ((move v12 #q5 #o2 #q18))
           ((move v12 #q5 #o2 #q19))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q20))
           ((move v12 #q5 #o2 #q21))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t21 #q1))
           ((move v12 #q6 #o2 #q18))
           ((move v12 #q6 #o2 #q19))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q20))
           ((move v12 #q6 #o2 #q21))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q4))
           ((move v12 #q6 #t22 #q1))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q18))
           ((move v12 v13 #o2 #q19))
           ((move v12 v13 #o2 #q20))
           ((move v12 v13 #o2 #q21))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t23 #q2))
           ((move v12 v13 #t43 #q6))
           ((move v12 v13 #t6 #q4))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q16))
           ((move v14 #q10 #o2 #q17))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t24 #q8))
           ((move v14 #q10 #t49 #q11))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q17))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t25 #q8))
           ((move v14 #q11 #t44 #q13))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t26 #q8))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t40 #q8))
           ((move v14 #q13 #t48 #q12))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t33 #q8))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t34 #q8))
           ((move v14 #q16 #o2 #q10))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q17 #o2 #q10))
           ((move v14 #q17 #o2 #q11))
           ((move v14 #q17 #o2 #q12))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 #q8))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t13 #q8))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q17))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #t10 #q7))
           ((move v14 #q8 #t32 #q9))
           ((move v14 #q8 #t35 #q12))
           ((move v14 #q8 #t36 #q13))
           ((move v14 #q8 #t37 #q11))
           ((move v14 #q8 #t38 #q14))
           ((move v14 #q8 #t39 #q15))
           ((move v14 #q8 #t8 v15))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t14 #q8))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t27 #q10))
           ((move v14 v15 #t28 #q11))
           ((move v14 v15 #t29 #q12))
           ((move v14 v15 #t30 #q13))
           ((move v14 v15 #t7 #q7))
           ((calibrate v12 #q4 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q10 #y6 v17 v10))
           ((calibrate v14 #q11 #y7 v18 v10))
           ((calibrate v14 #q12 #y8 v20 v10))
           ((calibrate v14 #q13 #y9 v19 v10))
           ((take_image v12 #q4 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q10 #y6 v17 v10 v11))
           ((take_image v14 #q11 #y7 v18 v10 v11))
           ((take_image v14 #q12 #y8 v20 v10 v11))
           ((take_image v14 #q13 #y9 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y5 v9 v8))
           ((send_analysis v14 #q8 #y5 v9 v4))
           ((send_analysis v14 #q8 #y5 v9 v7))
           ((send_analysis v14 #q8 #y5 v9 v1))
           ((send_analysis v14 #q8 #y5 v9 v3))
           ((send_analysis v14 #q8 #y5 v9 v5))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v20 v11))
           ((send_image v14 #q8 #y5 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. There are several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`, `v19`, `v20`). Both rovers have a camera `v10` and a store `v16`. The camera `v10` supports mode `v11`.
           
           The goal `new-axiom@0()` can be satisfied by analyzing two rocks and receiving images of four objectives.
           Specifically, `new-axiom@0()` requires:
           - `receivedanalysis(?stone)` for two different types of stone (v2 and v6)
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           
           Let's break down the plan:
           
           1.  **Analyze rocks:**
               *   We need to analyze rocks of type `v2` (e.g., `v1`, `v3`, `v4`) and type `v6` (e.g., `v5`, `v7`, `v8`).
               *   Rover `v12` is at `v13` and can move to `#q2` to sample rock `v3` (type `v2`).
               *   Rover `v12` can then move to `#q5` to sample rock `v7` (type `v6`).
               *   After sampling, rover `v12` can move to `#q1` and send the analyses for `v3` and `v7`.
           
           2.  **Take and send images:**
               *   We need to take and send images for objectives `v17`, `v18`, `v19`, `v20`.
               *   Rover `v12` is at `v13`. It can move to `#q4` to image `v17` and to `#q6` to image `v18`.
               *   Rover `v14` is at `v15`. It can move to `#q10` to image `v17`, `#q11` to image `v18`, `#q12` to image `v20`, and `#q13` to image `v19`.
               *   To send images, both rovers need to be at a configuration where they have `comvisible` to `v9` (the lander). For `v12`, this is `#q1`, and for `v14`, this is `#q8`.
           
           Let's try to achieve the goal with rover `v12` analyzing `v3` and `v7`, and both rovers taking and sending images.
           
           **Plan for analyses:**
           *   Move `v12` to `#q2` to be above `v3`.
           *   `sample_rock v12 #q2 v3 v16` (This satisfies `analyzed(v12, v3)` and `full(v12, v16)`, and `receivedanalysis(v3)` is derived from `type(v3, v2)` and `analyzed(v12, v3)` and `receivedanalysis(?stone)` axiom.)
           *   Move `v12` to `#q5` to be above `v7`.
           *   `drop_rock v12 v16` (To free up the store for `v7`).
           *   `sample_rock v12 #q5 v7 v16` (This satisfies `analyzed(v12, v7)` and `full(v12, v16)`, and `receivedanalysis(v7)` is derived from `type(v7, v6)` and `analyzed(v12, v7)` and `receivedanalysis(?stone)` axiom.)
           *   Move `v12` to `#q1` to be able to send analysis.
           *   `send_analysis v12 #q1 #y1 v9 v3`
           *   `send_analysis v12 #q1 #y1 v9 v7`
           
           **Plan for images:**
           *   **For v17 (objective):**
               *   Move `v12` to `#q4`.
               *   `calibrate v12 #q4 #y3 v17 v10`
               *   `take_image v12 #q4 #y3 v17 v10 v11`
               *   Move `v12` to `#q1` (current position for `send_analysis`).
               *   `send_image v12 #q1 #y1 v9 v17 v11`
           *   **For v18 (objective):**
               *   Move `v12` to `#q6`.
               *   `calibrate v12 #q6 #y4 v18 v10`
               *   `take_image v12 #q6 #y4 v18 v10 v11`
               *   Move `v12` to `#q1` (current position for `send_analysis`).
               *   `send_image v12 #q1 #y1 v9 v18 v11`
           *   **For v19 (objective):**
               *   Move `v14` to `#q13`.
               *   `calibrate v14 #q13 #y9 v19 v10`
               *   `take_image v14 #q13 #y9 v19 v10 v11`
               *   Move `v14` to `#q8`.
               *   `send_image v14 #q8 #y5 v9 v19 v11`
           *   **For v20 (objective):**
               *   Move `v14` to `#q12`.
               *   `calibrate v14 #q12 #y8 v20 v10`
               *   `take_image v14 #q12 #y8 v20 v10 v11`
               *   Move `v14` to `#q8`.
               *   `send_image v14 #q8 #y5 v9 v20 v11`
           
           Combining these steps, ensuring preconditions are met.
           
           --Plan--:
           (move v12 v13 #t23 #q2)
           (sample_rock v12 #q2 v3 v16)
           (move v12 #q2 #t31 #q5)
           (drop_rock v12 v16)
           (sample_rock v12 #q5 v7 v16)
           (move v12 #q5 #t21 #q1)
           (send_analysis v12 #q1 #y1 v9 v3)
           (send_analysis v12 #q1 #y1 v9 v7)
           (move v12 #q1 #t18 #q4)
           (calibrate v12 #q4 #y3 v17 v10)
           (take_image v12 #q4 #y3 v17 v10 v11)
           (move v12 #q4 #t20 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (move v12 #q1 #t16 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t22 #q1)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (move v14 v15 #t30 #q13)
           (calibrate v14 #q13 #y9 v19 v10)
           (take_image v14 #q13 #y9 v19 v10 v11)
           (move v14 #q13 #t40 #q8)
           (send_image v14 #q8 #y5 v9 v19 v11)
           (move v14 #q8 #t35 #q12)
           (calibrate v14 #q12 #y8 v20 v10)
           (take_image v14 #q12 #y8 v20 v10 v11)
           (move v14 #q12 #t26 #q8)
           (send_image v14 #q8 #y5 v9 v20 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. This goal requires two rock analyses (specifically for types `v2` and `v6`) and four images (for objectives `v17`, `v18`, `v19`, `v20`) to be received by the lander. My previous plan correctly identified the types of rocks and the objectives, and attempted to achieve them. However, it seems like the combination of actions did not fully satisfy all conditions of the axiom, or perhaps there was an issue with the state tracking.
           
           Let's re-evaluate the goal and strategy.
           The goal `new-axiom@0()` explicitly requires:
           1.  `receivedanalysis(?stone)` for rocks of `type v2` (stone) and `type v6` (soil).
           2.  `receivedimage(v17, v11)`
           3.  `receivedimage(v18, v11)`
           4.  `receivedimage(v19, v11)`
           5.  `receivedimage(v20, v11)`
           
           I will focus on performing two distinct rock analyses and then taking and sending the four required images.
           
           For rock analysis:
           *   Rover `v12` is at `v13` and has a free store `v16`.
           *   Rock `v3` is of type `v2` and is above `v12` at `#q2`.
           *   Rock `v7` is of type `v6` and is above `v12` at `#q5`.
           *   After sampling `v3`, `v16` will be full, so `v12` must drop the rock to sample `v7`.
           *   `v12` can send analysis from `#q1`.
           
           For image tasks:
           *   Objectives `v17` and `v18` can be imaged by `v12`.
           *   Objectives `v19` and `v20` can be imaged by `v14`.
           *   All images need to be sent to `v9` (lander). `v12` can send from `#q1`, `v14` from `#q8`.
           *   Calibration is required before taking each image.
           
           Let's construct the plan step-by-step:
           
           1.  **Analyze `v3` (type `v2`):**
               *   `v12` moves to `#q2`.
               *   `v12` samples `v3`.
               *   `v12` moves to `#q1` to be able to send analysis and images.
               *   `v12` sends analysis of `v3`.
           2.  **Analyze `v7` (type `v6`):**
               *   `v12` drops the rock to free the store.
               *   `v12` moves to `#q5`.
               *   `v12` samples `v7`.
               *   `v12` moves back to `#q1` to send analysis.
               *   `v12` sends analysis of `v7`.
           3.  **Image `v17` (using `v12`):**
               *   `v12` moves to `#q4`.
               *   `v12` calibrates its camera.
               *   `v12` takes the image of `v17`.
               *   `v12` moves to `#q1`.
               *   `v12` sends the image of `v17`.
           4.  **Image `v18` (using `v12`):**
               *   `v12` moves to `#q6`.
               *   `v12` calibrates its camera.
               *   `v12` takes the image of `v18`.
               *   `v12` moves to `#q1`.
               *   `v12` sends the image of `v18`.
           5.  **Image `v19` (using `v14`):**
               *   `v14` moves to `#q13`.
               *   `v14` calibrates its camera.
               *   `v14` takes the image of `v19`.
               *   `v14` moves to `#q8`.
               *   `v14` sends the image of `v19`.
           6.  **Image `v20` (using `v14`):**
               *   `v14` moves to `#q12`.
               *   `v14` calibrates its camera.
               *   `v14` takes the image of `v20`.
               *   `v14` moves to `#q8`.
               *   `v14` sends the image of `v20`.
           
           This refined sequence ensures that all necessary actions are performed and their preconditions met.
           
           --Plan--:
           (move v12 v13 #t23 #q2)
           (sample_rock v12 #q2 v3 v16)
           (move v12 #q2 #t2 #q1)
           (send_analysis v12 #q1 #y1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q1 #t19 #q5)
           (sample_rock v12 #q5 v7 v16)
           (move v12 #q5 #t21 #q1)
           (send_analysis v12 #q1 #y1 v9 v7)
           (move v12 #q1 #t18 #q4)
           (calibrate v12 #q4 #y3 v17 v10)
           (take_image v12 #q4 #y3 v17 v10 v11)
           (move v12 #q4 #t20 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (move v12 #q1 #t16 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t22 #q1)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (move v14 v15 #t30 #q13)
           (calibrate v14 #q13 #y9 v19 v10)
           (take_image v14 #q13 #y9 v19 v10 v11)
           (move v14 #q13 #t40 #q8)
           (send_image v14 #q8 #y5 v9 v19 v11)
           (move v14 #q8 #t35 #q12)
           (calibrate v14 #q12 #y8 v20 v10)
           (take_image v14 #q12 #y8 v20 v10 v11)
           (move v14 #q12 #t26 #q8)
           (send_image v14 #q8 #y5 v9 v20 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan, while attempting to address the goal requirements, still failed to satisfy `new-axiom@0()`. This indicates a misunderstanding or misapplication of how the axiom's conditions are met. Let's re-examine `new-axiom@0()` and the corresponding predicates carefully.
           
           The axiom `new-axiom@0()` is a conjunction of several conditions:
           *   `atconf(v12, v13)`: Rover `v12` must be at configuration `v13`.
           *   `atconf(v14, v15)`: Rover `v14` must be at configuration `v15`.
           *   `free(v12, v16)`: Rover `v12` must have its store `v16` free.
           *   `free(v14, v16)`: Rover `v14` must have its store `v16` free.
           *   `receivedimage(v17, v11)`: Image of objective `v17` in mode `v11` must be received.
           *   `receivedimage(v18, v11)`: Image of objective `v18` in mode `v11` must be received.
           *   `receivedimage(v19, v11)`: Image of objective `v19` in mode `v11` must be received.
           *   `receivedimage(v20, v11)`: Image of objective `v20` in mode `v11` must be received.
           *   `type(?stone, v2)`: There exists an object `?stone` of type `v2`.
           *   `receivedanalysis(?stone)`: This `?stone` (of type `v2`) must have its analysis received.
           *   `type(?soil, v6)`: There exists an object `?soil` of type `v6`.
           *   `receivedanalysis(?soil)`: This `?soil` (of type `v6`) must have its analysis received.
           
           My previous plans likely failed because the state of `atconf` or `free` for the rovers or stores was not correctly handled at the *end* of the plan, or the `receivedanalysis` condition was not fully met for *both* required types (`v2` and `v6`).
           
           Let's break down the final state requirements:
           1.  **Rover `v12` at `v13` and `v14` at `v15`**: This means after all other tasks are done, both rovers must return to their initial configurations.
           2.  **`v12` and `v14` have `v16` free**: If they sample a rock, they must drop it before the plan ends.
           3.  **Received Images**: The plan must include actions to `calibrate`, `take_image`, and `send_image` for `v17`, `v18`, `v19`, and `v20`.
           4.  **Received Analyses**: The plan must include actions to `sample_rock` and `send_analysis` for a rock of `type v2` and a rock of `type v6`.
               *   Rocks of `type v2`: `v1`, `v3`, `v4`.
               *   Rocks of `type v6`: `v5`, `v7`, `v8`.
           
           Let's prioritize what needs to be done by each rover and ensure they end up in the correct final configuration with free stores.
           
           **Rover `v12` (at `v13`, free `v16`) tasks:**
           *   Sample `v3` (type `v2`).
           *   Sample `v7` (type `v6`).
           *   Send analysis for `v3` and `v7`.
           *   Take/send images for `v17` and `v18`.
           *   End at `v13` with `v16` free.
           
           **Rover `v14` (at `v15`, free `v16`) tasks:**
           *   Take/send images for `v19` and `v20`.
           *   End at `v15` with `v16` free. (Since it's not sampling, `v16` will remain free).
           
           **Detailed Plan Steps:**
           
           **Rover `v12` actions:**
           1.  Move to `#q2` (above `v3`).
           2.  Sample `v3`. `v16` becomes full.
           3.  Move to `#q1` (comms with lander).
           4.  Send analysis of `v3`.
           5.  Drop `v3` to free `v16`.
           6.  Move to `#q5` (above `v7`).
           7.  Sample `v7`. `v16` becomes full.
           8.  Move to `#q1`.
           9.  Send analysis of `v7`.
           10. Drop `v7` to free `v16`. (Now `v16` is free for `v12`, satisfying a goal condition).
           11. Move to `#q4` (visible to `v17`).
           12. Calibrate camera.
           13. Take image of `v17`.
           14. Move to `#q1`.
           15. Send image of `v17`.
           16. Move to `#q6` (visible to `v18`).
           17. Calibrate camera.
           18. Take image of `v18`.
           19. Move to `#q1`.
           20. Send image of `v18`.
           21. Move back to `v13`. (Now `v12` is at `v13`, satisfying a goal condition).
           
           **Rover `v14` actions (can run in parallel if necessary, but sequentially here):**
           1.  Move to `#q13` (visible to `v19`).
           2.  Calibrate camera.
           3.  Take image of `v19`.
           4.  Move to `#q8` (comms with lander).
           5.  Send image of `v19`.
           6.  Move to `#q12` (visible to `v20`).
           7.  Calibrate camera.
           8.  Take image of `v20`.
           9.  Move to `#q8`.
           10. Send image of `v20`.
           11. Move back to `v15`. (Now `v14` is at `v15`, satisfying a goal condition). `v16` for `v14` was already free, satisfying another goal condition.
           
           This comprehensive approach covers all conditions of the axiom and ensures the final state is met.
           
           --Plan--:
           (move v12 v13 #t23 #q2)
           (sample_rock v12 #q2 v3 v16)
           (move v12 #q2 #t2 #q1)
           (send_analysis v12 #q1 #y1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q1 #t19 #q5)
           (sample_rock v12 #q5 v7 v16)
           (move v12 #q5 #t21 #q1)
           (send_analysis v12 #q1 #y1 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q1 #t18 #q4)
           (calibrate v12 #q4 #y3 v17 v10)
           (take_image v12 #q4 #y3 v17 v10 v11)
           (move v12 #q4 #t20 #q1)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (move v12 #q1 #t16 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t22 #q1)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (move v12 #q1 #t1 v13)
           (move v14 v15 #t30 #q13)
           (calibrate v14 #q13 #y9 v19 v10)
           (take_image v14 #q13 #y9 v19 v10 v11)
           (move v14 #q13 #t40 #q8)
           (send_image v14 #q8 #y5 v9 v19 v11)
           (move v14 #q8 #t35 #q12)
           (calibrate v14 #q12 #y8 v20 v10)
           (take_image v14 #q12 #y8 v20 v10 v11)
           (move v14 #q12 #t26 #q8)
           (send_image v14 #q8 #y5 v9 v20 v11)
           (move v14 #q8 #t8 v15)

