User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v8, v18)
           Atom stackable(v12, v10)
           Atom pose(v15, v16)
           Atom graspable(v12)
           Atom supported(v15, v16, v11)
           Atom atpose(v8, v9)
           Atom controllable(v4)
           Atom aconf(v4, v5)
           Atom pose(v8, v9)
           Atom aconf(v6, v7)
           Atom ataconf(v6, v7)
           Atom canmove()
           Atom arm(v6)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v21, v15, v16)
           Atom atbconf(v3)
           Atom supported(v8, v9, v11)
           Atom ataconf(v4, v5)
           Atom atpose(v15, v16)
           Atom stackable(v15, v10)
           Atom stackable(v8, v10)
           Atom handempty(v6)
           Atom handempty(v4)
           Atom graspable(v15)
           Atom graspable(v8)
           Atom stackable(v12, v18)
           Atom atpose(v12, v13)
           Atom pose(v12, v13)
           Atom type(v12, v17)
           Atom arm(v4)
           Atom bconf(v3)
           Atom type(v8, v17)
           Atom supported(v12, v13, v14)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v12, #o2, v18)
           Atom grasp(v8, v23)
           Atom grasp(v8, v20)
           Atom grasp(v8, v21)
           Atom grasp(v8, v22)
           Atom grasp(v15, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom grasp(v12, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v19, v20, #o3, #o4)
           Atom kin(v4, v8, v9, v21, #o3, #o4)
           Atom kin(v4, v8, v19, v23, #o3, #o4)
           Atom kin(v4, v8, v19, v21, #o3, #o4)
           Atom kin(v4, v8, v19, v22, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 #o3 #o4))
           ((place v4 v8 v19 v20 #o3 #o4))
           ((pick v4 v8 v19 v21 #o3 #o4))
           ((place v4 v8 v19 v21 #o3 #o4))
           ((pick v4 v8 v19 v22 #o3 #o4))
           ((place v4 v8 v19 v22 #o3 #o4))
           ((pick v4 v8 v19 v23 #o3 #o4))
           ((place v4 v8 v19 v23 #o3 #o4))
           ((pick v4 v8 v9 v21 #o3 #o4))
           ((place v4 v8 v9 v21 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes three graspable objects: `v8`, `v12`, and `v15`. `v8` and `v12` are of type `v17`. `v8` is currently at `v9` and supported by `v11`. `v12` is at `v13` and supported by `v14`. `v15` is at `v16` and supported by `v11`. The robot has two arms, `v4` and `v6`, both are handempty. The robot is at base configuration `v3`.
           
           The goal `new-axiom@0()` is achieved when `on(?green, v18)` and `type(?green, v17)` are true. From the initial state, we know `type(v8, v17)` and `type(v12, v17)`. Therefore, we need to make either `v8` or `v12` to be `?green`. Let's pick `v8` as `?green`. So the goal becomes `on(v8, v18)`. Since `supported(v8, v19, v18)` is true, we need to achieve `atpose(v8, v19)`. Currently, `v8` is at `v9`.
           
           To achieve `atpose(v8, v19)`:
           1. The robot arm `v4` needs to pick `v8` from its current pose `v9`. The action `pick v4 v8 v9 v21 #o3 #o4` is available. This requires `handempty(v4)`, which is true, `atpose(v8, v9)`, which is true, and `atbconf(#o3)`, which is not true. The current base configuration is `v3`. So, we first need to move the base to `#o3`.
           2. After picking `v8`, the robot arm `v4` will be holding `v8`.
           3. Then, the robot needs to place `v8` onto `v18` at pose `v19`. The action `place v4 v8 v19 v21 #o3 #o4` is available. This requires `atgrasp(v4, v8, v21)`, which will be true after the pick action, `atbconf(#o3)`, which is the same base configuration from the pick action, and `unsafepose(v8, v19)` and `unsafeapproach(v8, v19, v21)` to be false. There is no information to suggest these are true.
           
           So the plan will be:
           1. Move the base from `v3` to `#o3`.
           2. Pick `v8` from `v9` using arm `v4` with grasp `v21`.
           3. Place `v8` at `v19` on `v18` using arm `v4` with grasp `v21`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 v21 #o3 #o4)
           (place v4 v8 v19 v21 #o3 #o4)

