User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.192, 0.244), (0.285, 0.337)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.148, 0.499), (-0.061, 0.586)).
           Object v9 is a pose with position (0.235, -0.518, 0.781) and quaternion (0.0, 0.0, 0.26, 0.966).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.122, 0.469), (0.214, 0.561)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v19 is a pose with position (-0.175, -0.529, 0.781) and quaternion (0.0, 0.0, -0.057, 0.998).
           Object v17 is a pose with position (0.238, 0.29, 0.781) and quaternion (0.0, 0.0, -0.533, 0.846).
           Object v15 is a pose with position (-0.104, 0.542, 0.781) and quaternion (0.0, 0.0, 0.99, 0.143).
           Object v13 is a pose with position (0.168, 0.515, 0.781) and quaternion (0.0, 0.0, 0.979, -0.203).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.187, -0.566), (0.283, -0.47)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.213, -0.568), (-0.136, -0.49)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v4, v5)
           Atom canmove()
           Atom stackable(v18, v10)
           Atom stackable(v8, v10)
           Atom graspable(v16)
           Atom handempty(v6)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom aconf(v6, v7)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom stackable(v12, v10)
           Atom stackable(v18, v20)
           Atom pose(v16, v17)
           Atom atbconf(v3)
           Atom atpose(v14, v15)
           Atom controllable(v4)
           Atom graspable(v12)
           Atom graspable(v14)
           Atom atpose(v16, v17)
           Atom stackable(v16, v20)
           Atom supported(v14, v15, v11)
           Atom stackable(v14, v20)
           Atom arm(v6)
           Atom pose(v14, v15)
           Atom stackable(v14, v10)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v20)
           Atom supported(v18, v19, v11)
           Atom stackable(v16, v10)
           Atom atpose(v18, v19)
           Atom handempty(v4)
           Atom supported(v16, v17, v11)
           Atom stackable(v8, v20)
           Atom bconf(v3)
           Atom supported(v12, v13, v11)
           Atom graspable(v18)
           Atom arm(v4)
           Atom pose(v18, v19)
           Atom ataconf(v4, v5)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom grasp(v18, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v16, #o1)
           Atom grasp(v8, #o1)
           Atom supported(v14, #o2, v20)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v20)
           Atom supported(v8, #o2, v10)
           Atom grasp(v14, #o1)
           Atom supported(v16, #o2, v10)
           Atom supported(v12, #o2, v20)
           Atom grasp(v12, #o1)
           Atom supported(v18, #o2, v10)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects (v8, v12, v14, v16, v18) currently supported by `v11` at their respective `pose`s (v9, v13, v15, v17, v19). The goal is to move all these objects onto `v20`. The robot has two arms, `v4` and `v6`, and is initially at `bconf` `v3`.
           
           Currently, the robot can only `move_base` from `v3` to `v3` using a `btraj` named `#o0`. This means the robot can't actually move its base, effectively staying at `v3`. The `pick` and `place` actions would require `kin` and `atraj` parameters, which are not provided in the list of available actions. Specifically, no valid `kin` and `atraj` are provided that would allow picking up any of the objects, or placing them. Since no `pick` or `place` actions are provided, the goal of moving objects is unachievable.
           
           Therefore, the goal is not achievable given the current set of available actions.

