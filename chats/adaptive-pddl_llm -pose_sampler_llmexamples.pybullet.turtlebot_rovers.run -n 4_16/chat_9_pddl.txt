User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t5: object
           #t50: object
           #t51: object
           #t52: object
           #t53: object
           #t54: object
           #t55: object
           #t56: object
           #t57: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v1)
           Atom type(v3, v2)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom type(v5, v6)
           Atom atconf(v14, v15)
           Atom conf(v12, v13)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom rock(v3)
           Atom atconf(v12, v13)
           Atom rock(v5)
           Atom rock(v8)
           Atom objective(v18)
           Atom camera(v10)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom free(v12, v16)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom rock(v4)
           Atom objective(v17)
           Atom rover(v14)
           Atom free(v14, v16)
           Atom onboard(v10, v12)
           Atom lander(v9)
           Atom objective(v19)
           Atom type(v7, v6)
           Atom rover(v12)
           Atom objective(v20)
           Atom type(v1, v2)
           Atom imagevisible(v12, #q10, #y8, v20)
           Atom imagerange(v12, #q10, v20)
           Atom conf(v12, #q10)
           Atom ray(#y8)
           Atom imagevisible(v12, #q9, #y7, v18)
           Atom imagerange(v12, #q9, v18)
           Atom conf(v12, #q9)
           Atom ray(#y7)
           Atom imagevisible(v12, #q8, #y6, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom imagevisible(v14, #q1, #y1, v18)
           Atom imagerange(v14, #q1, v18)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q16, v5)
           Atom conf(v14, #q16)
           Atom imagevisible(v14, #q6, #y4, v20)
           Atom imagerange(v14, #q6, v20)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q3, #y3, v19)
           Atom imagerange(v14, #q3, v19)
           Atom conf(v14, #q3)
           Atom ray(#y3)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v14, #q17, v1)
           Atom conf(v14, #q17)
           Atom above(v14, #q13, v3)
           Atom conf(v14, #q13)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #q11, #y9, v17)
           Atom imagerange(v12, #q11, v17)
           Atom conf(v12, #q11)
           Atom ray(#y9)
           Atom imagevisible(v14, #q7, #y5, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v12, #o5, v4)
           Atom above(v14, #q15, v4)
           Atom conf(v14, #q15)
           Atom above(v12, #o5, v7)
           Atom above(v14, #q14, v7)
           Atom conf(v14, #q14)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #t9, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #t19, #q2)
           Atom motion(v12, v13, #t23, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q10, #t18, #q2)
           Atom motion(v12, #q2, #t44, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #t22, #q10)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #t50, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #t21, #q9)
           Atom motion(v12, #q9, #t17, #q2)
           Atom motion(v12, #q9, #t33, #q10)
           Atom motion(v12, #q2, #t45, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q11, #t41, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v14, v15, #t52, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #t11, #q2)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q2, #t2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, v13, #t8, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #t4, #q3)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, v13, #t7, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #t10, #q2)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q2, #t1, #q4)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q5, #t26, #q4)
           Atom motion(v14, #q3, #t13, #q0)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #t0, v15)
           Atom motion(v14, #q0, #t30, #q13)
           Atom motion(v14, #q13, #t35, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, v15, #t28, #q12)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q12, #t34, #q0)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q0, #t29, #q12)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q17, #o2, #q12)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q3, #o2, #q17)
           Atom motion(v14, #q17, #t48, #q0)
           Atom motion(v14, #q17, #o2, #q3)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q0, #o2, #q17)
           Atom motion(v14, v15, #t49, #q17)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v14, #q17, #t57, #q13)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q13, #t56, #q15)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q15)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q15, #t37, #q0)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q17)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q3, #t27, #q6)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q15)
           Atom motion(v14, v15, #t5, #q6)
           Atom motion(v14, #q17, #o2, #q6)
           Atom motion(v14, #q6, #t14, #q0)
           Atom motion(v14, #q15, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q6)
           Atom motion(v14, v15, #t42, #q16)
           Atom motion(v14, #q15, #t55, #q16)
           Atom motion(v14, #q13, #t51, #q16)
           Atom motion(v14, #q16, #t40, #q0)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q0, #t46, #q16)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q6, #o2, #q16)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, v15, #t3, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q16, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q17)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q1, #t12, #q0)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q17, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q1, #t25, #q3)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q0, #t31, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #t53, #q12)
           Atom motion(v14, #q6, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q6)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q14, #t36, #q0)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q16, #t54, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, v13, #t20, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q10, #t32, #q8)
           Atom motion(v12, #q8, #t38, #q11)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q2, #t47, #q8)
           Atom motion(v12, #q8, #t43, #q10)
           Atom motion(v12, #q8, #t16, #q2)
           Atom motion(v12, #q9, #t39, #q8)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, v15, #t6, #q7)
           Atom motion(v14, #q7, #t15, #q0)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q6, #t24, #q7)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q13 v3 v16))
           ((sample_rock v14 #q14 v7 v16))
           ((sample_rock v14 #q15 v4 v16))
           ((sample_rock v14 #q16 v5 v16))
           ((sample_rock v14 #q17 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t18 #q2))
           ((move v12 #q10 #t32 #q8))
           ((move v12 #q10 #t50 #q9))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t19 #q2))
           ((move v12 #q11 #t41 #q9))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #t1 #q4))
           ((move v12 #q2 #t2 #q5))
           ((move v12 #q2 #t44 #q10))
           ((move v12 #q2 #t45 #q9))
           ((move v12 #q2 #t47 #q8))
           ((move v12 #q2 #t9 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t10 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t11 #q2))
           ((move v12 #q5 #t26 #q4))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t16 #q2))
           ((move v12 #q8 #t38 #q11))
           ((move v12 #q8 #t43 #q10))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t17 #q2))
           ((move v12 #q9 #t33 #q10))
           ((move v12 #q9 #t39 #q8))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t20 #q8))
           ((move v12 v13 #t21 #q9))
           ((move v12 v13 #t22 #q10))
           ((move v12 v13 #t23 #q11))
           ((move v12 v13 #t7 #q4))
           ((move v12 v13 #t8 #q5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q15))
           ((move v14 #q0 #o2 #q17))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #t0 v15))
           ((move v14 #q0 #t29 #q12))
           ((move v14 #q0 #t30 #q13))
           ((move v14 #q0 #t31 #q14))
           ((move v14 #q0 #t46 #q16))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q17))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t12 #q0))
           ((move v14 #q1 #t25 #q3))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t34 #q0))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t35 #q0))
           ((move v14 #q13 #t51 #q16))
           ((move v14 #q13 #t56 #q15))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q6))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t36 #q0))
           ((move v14 #q14 #t53 #q12))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q6))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t37 #q0))
           ((move v14 #q15 #t55 #q16))
           ((move v14 #q16 #o2 #q1))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 #q6))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t40 #q0))
           ((move v14 #q16 #t54 #q14))
           ((move v14 #q17 #o2 #q1))
           ((move v14 #q17 #o2 #q12))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q3))
           ((move v14 #q17 #o2 #q6))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t48 #q0))
           ((move v14 #q17 #t57 #q13))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q17))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t13 #q0))
           ((move v14 #q3 #t27 #q6))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q14))
           ((move v14 #q6 #o2 #q15))
           ((move v14 #q6 #o2 #q16))
           ((move v14 #q6 #o2 #q17))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t14 #q0))
           ((move v14 #q6 #t24 #q7))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t15 #q0))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t28 #q12))
           ((move v14 v15 #t3 #q1))
           ((move v14 v15 #t4 #q3))
           ((move v14 v15 #t42 #q16))
           ((move v14 v15 #t49 #q17))
           ((move v14 v15 #t5 #q6))
           ((move v14 v15 #t52 #q13))
           ((move v14 v15 #t6 #q7))
           ((calibrate v12 #q10 #y8 v20 v10))
           ((calibrate v12 #q11 #y9 v17 v10))
           ((calibrate v12 #q8 #y6 v19 v10))
           ((calibrate v12 #q9 #y7 v18 v10))
           ((calibrate v14 #q1 #y1 v18 v10))
           ((calibrate v14 #q3 #y3 v19 v10))
           ((calibrate v14 #q6 #y4 v20 v10))
           ((calibrate v14 #q7 #y5 v17 v10))
           ((take_image v12 #q10 #y8 v20 v10 v11))
           ((take_image v12 #q11 #y9 v17 v10 v11))
           ((take_image v12 #q8 #y6 v19 v10 v11))
           ((take_image v12 #q9 #y7 v18 v10 v11))
           ((take_image v14 #q1 #y1 v18 v10 v11))
           ((take_image v14 #q3 #y3 v19 v10 v11))
           ((take_image v14 #q6 #y4 v20 v10 v11))
           ((take_image v14 #q7 #y5 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_image v12 #q2 #y2 v9 v20 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), a mode (v11), a store (v16), and several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). Both rovers are initially at specific configurations (v12 at v13, v14 at v15) and have a free store (v16). The camera (v10) is onboard both rovers and supports mode v11.
           
           The goal `new-axiom@0()` requires that atconf(v12, v13), atconf(v14, v15), free(v12, v16), free(v14, v16), receivedimage(v17, v11), receivedimage(v18, v11), receivedimage(v19, v11), receivedimage(v20, v11), receivedanalysis of stone and soil.
           From the initial state, `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` are already true.
           The remaining parts of the goal are to achieve `receivedimage` for all four objectives (v17, v18, v19, v20) with mode v11, and to receive analysis for a stone (v2) and a soil (v6).
           We need to use the camera (v10) to take images of the objectives and send them. We also need to sample rocks of type stone and soil, then send their analysis.
           
           Let's break down the `receivedimage` goals:
           - `receivedimage(v17, v11)`: Needs `haveimage(v12, v17, v11)` or `haveimage(v14, v17, v11)`.
             - Rover v12 can take an image of v17 at #q11 (calibrate and then take_image).
             - Rover v14 can take an image of v17 at #q7 (calibrate and then take_image).
           - `receivedimage(v18, v11)`: Needs `haveimage(v12, v18, v11)` or `haveimage(v14, v18, v11)`.
             - Rover v12 can take an image of v18 at #q9 (calibrate and then take_image).
             - Rover v14 can take an image of v18 at #q1 (calibrate and then take_image).
           - `receivedimage(v19, v11)`: Needs `haveimage(v12, v19, v11)` or `haveimage(v14, v19, v11)`.
             - Rover v12 can take an image of v19 at #q8 (calibrate and then take_image).
             - Rover v14 can take an image of v19 at #q3 (calibrate and then take_image).
           - `receivedimage(v20, v11)`: Needs `haveimage(v12, v20, v11)` or `haveimage(v14, v20, v11)`.
             - Rover v12 can take an image of v20 at #q10 (calibrate and then take_image).
             - Rover v14 can take an image of v20 at #q6 (calibrate and then take_image).
           
           Once `haveimage` is achieved, the rover needs to move to a `comvisible` configuration and `send_image`.
           - Rover v12 has `comvisible(v12, #q2, #y2, v9)`.
           - Rover v14 has `comvisible(v14, #q0, #y0, v9)`.
           
           Let's address the `receivedanalysis` goals:
           - `type(?stone, v2)`: Rocks v1, v3, v4 have type v2 (stone).
           - `type(?soil, v6)`: Rocks v5, v7, v8 have type v6 (soil).
           
           So we need to `sample_rock` for one rock of type v2 (stone) and one rock of type v6 (soil), and then `send_analysis`.
           - Rover v12 can sample v1, v3, v4, v5, v7, v8.
           - Rover v14 can sample v1, v3, v4, v5, v7, v8.
           
           Let's use rover v12 for objectives v17 and v18, and sampling a stone.
           Let's use rover v14 for objectives v19 and v20, and sampling a soil.
           This way, both rovers can then send their data to the lander.
           
           Rover v12 plan:
           1. Calibrate for objective v17 at #q11.
           2. Take image of v17.
           3. Calibrate for objective v18 at #q9.
           4. Take image of v18.
           5. Move to a position to sample rock v1 (stone) at #q5.
           6. Sample rock v1.
           7. Move to communication configuration #q2.
           8. Send image v17.
           9. Send image v18.
           10. Send analysis of rock v1.
           
           Rover v14 plan:
           1. Calibrate for objective v19 at #q3.
           2. Take image of v19.
           3. Calibrate for objective v20 at #q6.
           4. Take image of v20.
           5. Move to a position to sample rock v5 (soil) at #q16.
           6. Sample rock v5.
           7. Move to communication configuration #q0.
           8. Send image v19.
           9. Send image v20.
           10. Send analysis of rock v5.
           
           Combining these, we need to ensure preconditions are met. We can interleave the actions, but for simplicity, we can plan for one rover then the other.
           
           --Plan--:
           (calibrate v12 #q11 #y9 v17 v10)
           (take_image v12 #q11 #y9 v17 v10 v11)
           (calibrate v12 #q9 #y7 v18 v10)
           (take_image v12 #q9 #y7 v18 v10 v11)
           (move v12 v13 #t8 #q5)
           (sample_rock v12 #q5 v1 v16)
           (move v12 #q5 #t11 #q2)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_analysis v12 #q2 #y2 v9 v1)
           (calibrate v14 #q3 #y3 v19 v10)
           (take_image v14 #q3 #y3 v19 v10 v11)
           (calibrate v14 #q6 #y4 v20 v10)
           (take_image v14 #q6 #y4 v20 v10 v11)
           (move v14 v15 #t42 #q16)
           (sample_rock v14 #q16 v5 v16)
           (move v14 #q16 #t40 #q0)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (send_analysis v14 #q0 #y0 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not fully satisfied. Specifically, the axiom includes `receivedanalysis(?stone)` and `receivedanalysis(?soil)`. My prior plan correctly sampled a stone (v1) and a soil (v5) and sent their analyses. The remaining components of the axiom, `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)`, `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, and `receivedimage(v20, v11)` were also addressed.
           
           Let's re-examine the goal `new-axiom@0()`. It is an axiom, meaning it is derived from the state. The condition for `new-axiom@0()` is a large conjunction:
           `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)`, `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`, `type(?stone, v2)`, `receivedanalysis(?stone)`, `type(?soil, v6)`, `receivedanalysis(?soil)`.
           
           The initial state already has:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           - `type(v1, v2)` (stone)
           - `type(v3, v2)` (stone)
           - `type(v4, v2)` (stone)
           - `type(v5, v6)` (soil)
           - `type(v7, v6)` (soil)
           - `type(v8, v6)` (soil)
           
           So, we need to achieve:
           1. `receivedimage(v17, v11)`
           2. `receivedimage(v18, v11)`
           3. `receivedimage(v19, v11)`
           4. `receivedimage(v20, v11)`
           5. `receivedanalysis(?stone)` (e.g., for v1, v3 or v4)
           6. `receivedanalysis(?soil)` (e.g., for v5, v7 or v8)
           
           My previous plan attempted to satisfy these by:
           - Rover v12: took images of v17 and v18, sampled stone v1, and sent all.
           - Rover v14: took images of v19 and v20, sampled soil v5, and sent all.
           
           The failure message "Fact is not satisfied: Atom new-axiom@0()" implies that at least one of these conditions wasn't met. Let's trace it carefully, specifically the `calibrated` precondition for `take_image`. The `take_image` action also makes `calibrated` false. This means if a rover takes multiple images, it needs to recalibrate for each image, unless the image is visible from the same position and ray as the prior calibration.
           
           Let's simplify the distribution of tasks to avoid re-calibration issues if possible.
           Each `take_image` action requires a prior `calibrate` action at the same `(rover, conf, ray, objective, camera)` combination. After `take_image`, the camera becomes uncalibrated. So for each image taken, we must recalibrate or ensure the camera is already calibrated for that specific (rover, camera) pair for the specific image.
           
           It is more efficient to perform all calibrations and image takings for one rover, then move it to the communication point, and send all. Then repeat for the other rover.
           
           Let's use Rover v12 for objectives v17 and v18, and Rover v14 for objectives v19 and v20.
           Let Rover v12 sample a stone (v1) and Rover v14 sample a soil (v5).
           
           **Rover v12 tasks:**
           - Image v17: `calibrate v12 #q11 #y9 v17 v10` -> `take_image v12 #q11 #y9 v17 v10 v11`
           - Image v18: `calibrate v12 #q9 #y7 v18 v10` -> `take_image v12 #q9 #y7 v18 v10 v11`
           - Sample stone v1: `move v12 v13 #t8 #q5` (already at `v13`, so just move to `#q5`) -> `sample_rock v12 #q5 v1 v16`
           - Send all data from `comvisible(v12, #q2, #y2, v9)`: `move v12 #q5 #t11 #q2` -> `send_image` for v17, v18 and `send_analysis` for v1.
           
           **Rover v14 tasks:**
           - Image v19: `calibrate v14 #q3 #y3 v19 v10` -> `take_image v14 #q3 #y3 v19 v10 v11`
           - Image v20: `calibrate v14 #q6 #y4 v20 v10` -> `take_image v14 #q6 #y4 v20 v10 v11`
           - Sample soil v5: `move v14 v15 #t42 #q16` (already at `v15`, so just move to `#q16`) -> `sample_rock v14 #q16 v5 v16`
           - Send all data from `comvisible(v14, #q0, #y0, v9)`: `move v14 #q16 #t40 #q0` -> `send_image` for v19, v20 and `send_analysis` for v5.
           
           The crucial part is ensuring the `calibrated` predicate. A `take_image` action uncalibrates the camera (`NegatedAtom calibrated(?c, ?v)`). So, for each `take_image` action, a `calibrate` action must precede it, even if the camera was calibrated for a *different* objective or from a *different* configuration.
           
           Let's re-construct the plan ensuring re-calibration when needed.
           
           --Plan--:
           (calibrate v12 #q11 #y9 v17 v10)
           (take_image v12 #q11 #y9 v17 v10 v11)
           (calibrate v12 #q9 #y7 v18 v10) ; Recalibrate for the next image
           (take_image v12 #q9 #y7 v18 v10 v11)
           (move v12 v13 #t8 #q5) ; Move to where rock v1 is above
           (sample_rock v12 #q5 v1 v16)
           (move v12 #q5 #t11 #q2) ; Move to a position to communicate
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_analysis v12 #q2 #y2 v9 v1)
           (calibrate v14 #q3 #y3 v19 v10)
           (take_image v14 #q3 #y3 v19 v10 v11)
           (calibrate v14 #q6 #y4 v20 v10) ; Recalibrate for the next image
           (take_image v14 #q6 #y4 v20 v10 v11)
           (move v14 v15 #t42 #q16) ; Move to where rock v5 is above
           (sample_rock v14 #q16 v5 v16)
           (move v14 #q16 #t40 #q0) ; Move to a position to communicate
           (send_image v14 #q0 #y0 v9 v19 v11)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (send_analysis v14 #q0 #y0 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     I apologize for the continued errors in reaching the goal. The `new-axiom@0()` predicate is complex, and it appears I'm missing some subtle interactions or requirements. Let's break down `new-axiom@0()` again, as it's the core of the problem.
           
           `new-axiom@0()` is true if *all* of the following conditions are met:
           1. `atconf(v12, v13)`: Rover v12 is at configuration v13.
           2. `atconf(v14, v15)`: Rover v14 is at configuration v15.
           3. `free(v12, v16)`: Store v16 on rover v12 is free.
           4. `free(v14, v16)`: Store v16 on rover v14 is free.
           5. `receivedimage(v17, v11)`: Image of objective v17 in mode v11 has been received.
           6. `receivedimage(v18, v11)`: Image of objective v18 in mode v11 has been received.
           7. `receivedimage(v19, v11)`: Image of objective v19 in mode v11 has been received.
           8. `receivedimage(v20, v11)`: Image of objective v20 in mode v11 has been received.
           9. `type(?stone, v2)`: There exists a rock of type v2 (stone). (This is true from initial state: v1, v3, v4 are type v2).
           10. `receivedanalysis(?stone)`: Analysis of a stone has been received.
           11. `type(?soil, v6)`: There exists a rock of type v6 (soil). (This is true from initial state: v5, v7, v8 are type v6).
           12. `receivedanalysis(?soil)`: Analysis of a soil has been received.
           
           My plans have been satisfying (1) and (2) by ensuring the rovers return to their initial positions or don't move from them at the end. However, sampling a rock (`sample_rock`) makes the store `full` (`full(?v, ?s)`) and `not free` (`NegatedAtom free(?v, ?s)`). To satisfy `free(v12, v16)` and `free(v14, v16)` *at the end of the plan*, I must include `drop_rock` actions for any sampled rocks. This is a critical oversight.
           
           Let's refine the plan with `drop_rock` actions.
           
           **Revised Rover v12 tasks:**
           - Image v17: Calibrate, Take Image.
           - Image v18: Calibrate, Take Image.
           - Sample stone v1: Move to #q5, Sample rock v1.
           - Drop rock v1: Drop rock v1. This makes `free(v12, v16)` true again.
           - Send all data from `comvisible(v12, #q2, #y2, v9)`: Move to #q2, Send images v17, v18 and analysis for v1.
           
           **Revised Rover v14 tasks:**
           - Image v19: Calibrate, Take Image.
           - Image v20: Calibrate, Take Image.
           - Sample soil v5: Move to #q16, Sample rock v5.
           - Drop rock v5: Drop rock v5. This makes `free(v14, v16)` true again.
           - Send all data from `comvisible(v14, #q0, #y0, v9)`: Move to #q0, Send images v19, v20 and analysis for v5.
           
           Let's check the initial and goal states again for rover positions.
           Initial: `atconf(v14, v15)`, `atconf(v12, v13)`
           Goal: `atconf(v12, v13)`, `atconf(v14, v15)`
           
           So the rovers must end up at their initial configurations. My movement actions always move them to a new configuration. We need to explicitly add movements back to `v13` and `v15` for v12 and v14 respectively, right before the plan ends.
           
           Let's plan this out step by step.
           
           **Rover v12 plan:**
           1. Move from v13 to #q11 (for v17 image)
           2. Calibrate camera v10 for objective v17 at #q11
           3. Take image of v17 in mode v11
           4. Move from #q11 to #q9 (for v18 image)
           5. Calibrate camera v10 for objective v18 at #q9
           6. Take image of v18 in mode v11
           7. Move from #q9 to #q5 (for sampling rock v1)
           8. Sample rock v1 at #q5 into store v16
           9. Drop rock v1 from store v16
           10. Move from #q5 to #q2 (for communication)
           11. Send image of v17
           12. Send image of v18
           13. Send analysis of v1
           14. Move from #q2 back to v13 (initial configuration)
           
           **Rover v14 plan:**
           1. Move from v15 to #q3 (for v19 image)
           2. Calibrate camera v10 for objective v19 at #q3
           3. Take image of v19 in mode v11
           4. Move from #q3 to #q6 (for v20 image)
           5. Calibrate camera v10 for objective v20 at #q6
           6. Take image of v20 in mode v11
           7. Move from #q6 to #q16 (for sampling rock v5)
           8. Sample rock v5 at #q16 into store v16
           9. Drop rock v5 from store v16
           10. Move from #q16 to #q0 (for communication)
           11. Send image of v19
           12. Send image of v20
           13. Send analysis of v5
           14. Move from #q0 back to v15 (initial configuration)
           
           This extended plan ensures all aspects of `new-axiom@0()` are met at the final state.
           
           --Plan--:
           (move v12 v13 #t23 #q11)
           (calibrate v12 #q11 #y9 v17 v10)
           (take_image v12 #q11 #y9 v17 v10 v11)
           (move v12 #q11 #t41 #q9)
           (calibrate v12 #q9 #y7 v18 v10)
           (take_image v12 #q9 #y7 v18 v10 v11)
           (move v12 #q9 #o2 #q5) ; Using a generic move for q9 to q5 since no specific path was given, but #o2 is a valid continuous parameter
           (sample_rock v12 #q5 v1 v16)
           (drop_rock v12 v16)
           (move v12 #q5 #t11 #q2)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_analysis v12 #q2 #y2 v9 v1)
           (move v12 #q2 #t9 v13)
           (move v14 v15 #t4 #q3)
           (calibrate v14 #q3 #y3 v19 v10)
           (take_image v14 #q3 #y3 v19 v10 v11)
           (move v14 #q3 #t27 #q6)
           (calibrate v14 #q6 #y4 v20 v10)
           (take_image v14 #q6 #y4 v20 v10 v11)
           (move v14 #q6 #o2 #q16) ; Using a generic move for q6 to q16
           (sample_rock v14 #q16 v5 v16)
           (drop_rock v14 v16)
           (move v14 #q16 #t40 #q0)
           (send_image v14 #q0 #y0 v9 v19 v11)
           (send_image v14 #q0 #y0 v9 v20 v11)
           (send_analysis v14 #q0 #y0 v9 v5)
           (move v14 #q0 #t0 v15)

