User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t5: object
           #t50: object
           #t51: object
           #t52: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v1)
           Atom type(v3, v2)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom type(v5, v6)
           Atom atconf(v14, v15)
           Atom conf(v12, v13)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom rock(v3)
           Atom atconf(v12, v13)
           Atom rock(v5)
           Atom rock(v8)
           Atom objective(v18)
           Atom camera(v10)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom free(v12, v16)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom rock(v4)
           Atom objective(v17)
           Atom rover(v14)
           Atom free(v14, v16)
           Atom onboard(v10, v12)
           Atom lander(v9)
           Atom objective(v19)
           Atom type(v7, v6)
           Atom rover(v12)
           Atom objective(v20)
           Atom type(v1, v2)
           Atom imagevisible(v12, #q9, #y7, v18)
           Atom imagerange(v12, #q9, v18)
           Atom conf(v12, #q9)
           Atom ray(#y7)
           Atom imagevisible(v12, #q10, #y8, v20)
           Atom imagerange(v12, #q10, v20)
           Atom conf(v12, #q10)
           Atom ray(#y8)
           Atom imagevisible(v12, #q8, #y6, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom above(v14, #q16, v5)
           Atom conf(v14, #q16)
           Atom imagevisible(v14, #q6, #y4, v20)
           Atom imagerange(v14, #q6, v20)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom imagevisible(v14, #q3, #y3, v19)
           Atom imagerange(v14, #q3, v19)
           Atom conf(v14, #q3)
           Atom ray(#y3)
           Atom imagevisible(v14, #q1, #y1, v18)
           Atom imagerange(v14, #q1, v18)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q17, v1)
           Atom conf(v14, #q17)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v12, #o5, v3)
           Atom above(v14, #q13, v3)
           Atom conf(v14, #q13)
           Atom imagevisible(v12, #q11, #y9, v17)
           Atom imagerange(v12, #q11, v17)
           Atom conf(v12, #q11)
           Atom ray(#y9)
           Atom imagevisible(v14, #q7, #y5, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v12, #o5, v4)
           Atom above(v14, #q15, v4)
           Atom conf(v14, #q15)
           Atom above(v12, #o5, v7)
           Atom above(v14, #q14, v7)
           Atom conf(v14, #q14)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, #q2, #t9, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, v13, #t23, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #t19, #q2)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #t41, #q9)
           Atom motion(v12, #q2, #t45, #q9)
           Atom motion(v12, v13, #t21, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #t17, #q2)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, v13, #t22, #q10)
           Atom motion(v12, #q10, #t50, #q9)
           Atom motion(v12, #q10, #t18, #q2)
           Atom motion(v12, #q9, #t33, #q10)
           Atom motion(v12, #q2, #t44, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, v15, #t49, #q17)
           Atom motion(v14, #q17, #t48, #q0)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q17)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t0, v15)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t7, #q4)
           Atom motion(v12, #q2, #t1, #q4)
           Atom motion(v12, #q4, #t10, #q2)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q17, #o2, #q1)
           Atom motion(v14, #q1, #t12, #q0)
           Atom motion(v14, v15, #t3, #q1)
           Atom motion(v14, #q1, #o2, #q17)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #t11, #q2)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, v13, #t8, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q2, #t2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #t26, #q4)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v14, #q0, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q15, #t37, #q0)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q17, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q3, #t13, #q0)
           Atom motion(v14, #q1, #t25, #q3)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #t4, #q3)
           Atom motion(v14, #q3, #o2, #q17)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q0, #t29, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q17, #o2, #q12)
           Atom motion(v14, #q12, #t34, #q0)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v14, v15, #t28, #q12)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q0, #t30, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, v15, #t52, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #t35, #q0)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q3, #t27, #q6)
           Atom motion(v14, #q6, #t14, #q0)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q15, #o2, #q6)
           Atom motion(v14, #q17, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q15)
           Atom motion(v14, v15, #t5, #q6)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q6, #o2, #q17)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q1)
           Atom motion(v14, #q16, #t40, #q0)
           Atom motion(v14, #q16, #o2, #q6)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q13, #t51, #q16)
           Atom motion(v14, #q6, #o2, #q16)
           Atom motion(v14, v15, #t42, #q16)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q0, #t46, #q16)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q0, #t31, #q14)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q14)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #t36, #q0)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v12, #q8, #t38, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q9, #t39, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, v13, #t20, #q8)
           Atom motion(v12, #q10, #t32, #q8)
           Atom motion(v12, #q8, #t43, #q10)
           Atom motion(v12, #q2, #t47, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #t16, #q2)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q6, #t24, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, v15, #t6, #q7)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q7, #t15, #q0)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q13 v3 v16))
           ((sample_rock v14 #q14 v7 v16))
           ((sample_rock v14 #q15 v4 v16))
           ((sample_rock v14 #q16 v5 v16))
           ((sample_rock v14 #q17 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t18 #q2))
           ((move v12 #q10 #t32 #q8))
           ((move v12 #q10 #t50 #q9))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t19 #q2))
           ((move v12 #q11 #t41 #q9))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #t1 #q4))
           ((move v12 #q2 #t2 #q5))
           ((move v12 #q2 #t44 #q10))
           ((move v12 #q2 #t45 #q9))
           ((move v12 #q2 #t47 #q8))
           ((move v12 #q2 #t9 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t10 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t11 #q2))
           ((move v12 #q5 #t26 #q4))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t16 #q2))
           ((move v12 #q8 #t38 #q11))
           ((move v12 #q8 #t43 #q10))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t17 #q2))
           ((move v12 #q9 #t33 #q10))
           ((move v12 #q9 #t39 #q8))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t20 #q8))
           ((move v12 v13 #t21 #q9))
           ((move v12 v13 #t22 #q10))
           ((move v12 v13 #t23 #q11))
           ((move v12 v13 #t7 #q4))
           ((move v12 v13 #t8 #q5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q15))
           ((move v14 #q0 #o2 #q17))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #t0 v15))
           ((move v14 #q0 #t29 #q12))
           ((move v14 #q0 #t30 #q13))
           ((move v14 #q0 #t31 #q14))
           ((move v14 #q0 #t46 #q16))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q17))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t12 #q0))
           ((move v14 #q1 #t25 #q3))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t34 #q0))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t35 #q0))
           ((move v14 #q13 #t51 #q16))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q6))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t36 #q0))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q6))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t37 #q0))
           ((move v14 #q16 #o2 #q1))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 #q6))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t40 #q0))
           ((move v14 #q17 #o2 #q1))
           ((move v14 #q17 #o2 #q12))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q3))
           ((move v14 #q17 #o2 #q6))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t48 #q0))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q17))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t13 #q0))
           ((move v14 #q3 #t27 #q6))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q14))
           ((move v14 #q6 #o2 #q15))
           ((move v14 #q6 #o2 #q16))
           ((move v14 #q6 #o2 #q17))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t14 #q0))
           ((move v14 #q6 #t24 #q7))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t15 #q0))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t28 #q12))
           ((move v14 v15 #t3 #q1))
           ((move v14 v15 #t4 #q3))
           ((move v14 v15 #t42 #q16))
           ((move v14 v15 #t49 #q17))
           ((move v14 v15 #t5 #q6))
           ((move v14 v15 #t52 #q13))
           ((move v14 v15 #t6 #q7))
           ((calibrate v12 #q10 #y8 v20 v10))
           ((calibrate v12 #q11 #y9 v17 v10))
           ((calibrate v12 #q8 #y6 v19 v10))
           ((calibrate v12 #q9 #y7 v18 v10))
           ((calibrate v14 #q1 #y1 v18 v10))
           ((calibrate v14 #q3 #y3 v19 v10))
           ((calibrate v14 #q6 #y4 v20 v10))
           ((calibrate v14 #q7 #y5 v17 v10))
           ((take_image v12 #q10 #y8 v20 v10 v11))
           ((take_image v12 #q11 #y9 v17 v10 v11))
           ((take_image v12 #q8 #y6 v19 v10 v11))
           ((take_image v12 #q9 #y7 v18 v10 v11))
           ((take_image v14 #q1 #y1 v18 v10 v11))
           ((take_image v14 #q3 #y3 v19 v10 v11))
           ((take_image v14 #q6 #y4 v20 v10 v11))
           ((take_image v14 #q7 #y5 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_image v12 #q2 #y2 v9 v20 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a lander (v9), a camera (v10), a store (v16), and several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There's also a specific mode (v11) for the camera. The goal is to achieve `new-axiom@0()`, which is a complex axiom. Looking at the definition of `new-axiom@0()`, it requires:
           1. Two rovers at specific configurations (`atconf(v12, v13)` and `atconf(v14, v15)`). These are already true in the initial state.
           2. Two free stores for these rovers (`free(v12, v16)` and `free(v14, v16)`). These are also true initially.
           3. Several images received for different objectives and modes (`receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`).
           4. Analysis received for certain rock types (`receivedanalysis(?stone)` where `type(?stone, v2)` and `receivedanalysis(?soil)` where `type(?soil, v6)`).
           
           The initial state already satisfies the `atconf` and `free` conditions. Therefore, the plan needs to focus on:
           - Taking images of all objectives (v17, v18, v19, v20) with mode v11 and sending them to the lander v9.
           - Sampling and sending analysis for rocks of type v2 and v6.
           
           Let's break down the image and analysis goals:
           
           **Image Goals:**
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           
           To achieve `receivedimage`, the rover needs to:
           1. Be at a configuration where the objective is visible.
           2. Calibrate its camera.
           3. Take an image.
           4. Move to a configuration where the lander is visible.
           5. Send the image.
           
           Both rovers (v12 and v14) are currently at their home configurations (v13 and v15 respectively). Camera v10 is onboard both rovers and supports mode v11.
           
           **Analysis Goals:**
           - `receivedanalysis(?stone)` where `type(?stone, v2)` (rocks v1, v3, v4)
           - `receivedanalysis(?soil)` where `type(?soil, v6)` (rocks v5, v7, v8)
           
           To achieve `receivedanalysis`, the rover needs to:
           1. Be at a configuration above the rock.
           2. Sample the rock.
           3. Move to a configuration where the lander is visible.
           4. Send the analysis.
           
           Let's plan for each rover.
           
           **Rover v12 (at v13):**
           - Can see objectives: v17 at #q11, v18 at #q9, v19 at #q8, v20 at #q10.
           - Can see lander: v9 at #q2.
           - Can be above rocks: v1 at #q5, v3 at #o5, v4 at #o5, v5 at #q4, v7 at #o5, v8 at #o5.
           
           **Rover v14 (at v15):**
           - Can see objectives: v17 at #q7, v18 at #q1, v19 at #q3, v20 at #q6.
           - Can see lander: v9 at #q0.
           - Can be above rocks: v1 at #q17, v3 at #q13, v4 at #q15, v5 at #q16, v7 at #q14, v8 at #q12.
           
           **Plan Strategy:**
           1. **Images:** Distribute the image taking and sending tasks.
               * Rover v12 takes images of v17, v18, v19, v20.
               * Rover v14 takes images for redundant coverage or if v12's path is blocked/more costly. Given no cost specified, we can just pick one rover for each image.
               * Let's have v12 handle objectives v17, v18, v19, v20.
               * Since v12 is at v13, it will need to move to the image locations, then to the comm location.
               * v12 is at v13 initially.
           2. **Analysis:** Distribute rock sampling and analysis sending.
               * Rocks of type v2: v1, v3, v4.
               * Rocks of type v6: v5, v7, v8.
               * Let's have v12 handle v3, v4, v7, v8.
               * Let's have v14 handle v1, v5.
               * Then send the analysis.
           
           **Detailed Plan for Rover v12 (images and some analysis):**
           1. Move to #q11 (for v17).
           2. Calibrate camera v10.
           3. Take image of v17.
           4. Move to #q9 (for v18).
           5. Calibrate camera v10 (as it was used).
           6. Take image of v18.
           7. Move to #q8 (for v19).
           8. Calibrate camera v10.
           9. Take image of v19.
           10. Move to #q10 (for v20).
           11. Calibrate camera v10.
           12. Take image of v20.
           13. Move to #q2 (for communication).
           14. Send all collected images (v17, v18, v19, v20).
           15. Move to #o5 (above v3, v4, v7, v8).
           16. Sample v3.
           17. Sample v4.
           18. Sample v7.
           19. Sample v8.
           20. Move to #q2 (for communication).
           21. Send analysis for v3, v4, v7, v8.
           
           **Detailed Plan for Rover v14 (remaining analysis):**
           1. Rover v14 is at v15 initially.
           2. Move to #q17 (above v1).
           3. Sample v1.
           4. Move to #q16 (above v5).
           5. Sample v5.
           6. Move to #q0 (for communication).
           7. Send analysis for v1, v5.
           
           Let's refine the plan to ensure all conditions of `new-axiom@0()` are met, focusing on the cheapest (least actions) approach.
           The goal asks for:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `receivedanalysis(?stone)` where type is v2 (rocks: v1, v3, v4)
           - `receivedanalysis(?soil)` where type is v6 (rocks: v5, v7, v8)
           
           Let's use rover v12 for all image tasks and rover v14 for all rock sampling and analysis, as they are independent tasks and this might reduce movements.
           
           **Rover v12: Images (objectives v17, v18, v19, v20)**
           1.  **Image v17:**
               *   `move v12 v13 #t23 #q11` (Move to #q11 for v17)
               *   `calibrate v12 #q11 #y9 v17 v10`
               *   `take_image v12 #q11 #y9 v17 v10 v11`
           2.  **Image v18:**
               *   `move v12 #q11 #t41 #q9` (Move to #q9 for v18)
               *   `calibrate v12 #q9 #y7 v18 v10`
               *   `take_image v12 #q9 #y7 v18 v10 v11`
           3.  **Image v19:**
               *   `move v12 #q9 #t39 #q8` (Move to #q8 for v19)
               *   `calibrate v12 #q8 #y6 v19 v10`
               *   `take_image v12 #q8 #y6 v19 v10 v11`
           4.  **Image v20:**
               *   `move v12 #q8 #t43 #q10` (Move to #q10 for v20)
               *   `calibrate v12 #q10 #y8 v20 v10`
               *   `take_image v12 #q10 #y8 v20 v10 v11`
           5.  **Send Images:**
               *   `move v12 #q10 #t18 #q2` (Move to #q2 for comm with lander v9)
               *   `send_image v12 #q2 #y2 v9 v17 v11`
               *   `send_image v12 #q2 #y2 v9 v18 v11`
               *   `send_image v12 #q2 #y2 v9 v19 v11`
               *   `send_image v12 #q2 #y2 v9 v20 v11`
           
           **Rover v14: Rock Analysis (rocks v1, v3, v4, v5, v7, v8)**
           Rover v14 is at v15 initially and free(v14, v16).
           Type v2 rocks: v1, v3, v4
           Type v6 rocks: v5, v7, v8
           
           1.  **Sample v1 (type v2):**
               *   `move v14 v15 #t49 #q17` (Move to #q17 above v1)
               *   `sample_rock v14 #q17 v1 v16`
               *   `drop_rock v14 v16` (Need to free the store for next sample)
           2.  **Sample v3 (type v2):**
               *   `move v14 #q17 #o2 #q13` (Move to #q13 above v3)
               *   `sample_rock v14 #q13 v3 v16`
               *   `drop_rock v14 v16`
           3.  **Sample v4 (type v2):**
               *   `move v14 #q13 #o2 #q15` (Move to #q15 above v4)
               *   `sample_rock v14 #q15 v4 v16`
               *   `drop_rock v14 v16`
           4.  **Sample v5 (type v6):**
               *   `move v14 #q15 #o2 #q16` (Move to #q16 above v5)
               *   `sample_rock v14 #q16 v5 v16`
               *   `drop_rock v14 v16`
           5.  **Sample v7 (type v6):**
               *   `move v14 #q16 #o2 #q14` (Move to #q14 above v7)
               *   `sample_rock v14 #q14 v7 v16`
               *   `drop_rock v14 v16`
           6.  **Sample v8 (type v6):**
               *   `move v14 #q14 #o2 #q12` (Move to #q12 above v8)
               *   `sample_rock v14 #q12 v8 v16`
           7.  **Send Analysis:**
               *   `move v14 #q12 #t34 #q0` (Move to #q0 for comm with lander v9)
               *   `send_analysis v14 #q0 #y0 v9 v1`
               *   `send_analysis v14 #q0 #y0 v9 v3`
               *   `send_analysis v14 #q0 #y0 v9 v4`
               *   `send_analysis v14 #q0 #y0 v9 v5`
               *   `send_analysis v14 #q0 #y0 v9 v7`
               *   `send_analysis v14 #q0 #y0 v9 v8`
               *   `drop_rock v14 v16` (Finally drop the last sample to keep state consistent, though not strictly required by goal, it's good practice)
           
           This plan ensures all necessary images are taken and sent, and all relevant rocks are sampled and analyzed, thereby satisfying the `new-axiom@0()` goal.
           
           --Plan--:
           (move v12 v13 #t23 #q11)
           (calibrate v12 #q11 #y9 v17 v10)
           (take_image v12 #q11 #y9 v17 v10 v11)
           (move v12 #q11 #t41 #q9)
           (calibrate v12 #q9 #y7 v18 v10)
           (take_image v12 #q9 #y7 v18 v10 v11)
           (move v12 #q9 #t39 #q8)
           (calibrate v12 #q8 #y6 v19 v10)
           (take_image v12 #q8 #y6 v19 v10 v11)
           (move v12 #q8 #t43 #q10)
           (calibrate v12 #q10 #y8 v20 v10)
           (take_image v12 #q10 #y8 v20 v10 v11)
           (move v12 #q10 #t18 #q2)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (send_image v12 #q2 #y2 v9 v20 v11)
           (move v14 v15 #t49 #q17)
           (sample_rock v14 #q17 v1 v16)
           (drop_rock v14 v16)
           (move v14 #q17 #o2 #q13)
           (sample_rock v14 #q13 v3 v16)
           (drop_rock v14 v16)
           (move v14 #q13 #o2 #q15)
           (sample_rock v14 #q15 v4 v16)
           (drop_rock v14 v16)
           (move v14 #q15 #o2 #q16)
           (sample_rock v14 #q16 v5 v16)
           (drop_rock v14 v16)
           (move v14 #q16 #o2 #q14)
           (sample_rock v14 #q14 v7 v16)
           (drop_rock v14 v16)
           (move v14 #q14 #o2 #q12)
           (sample_rock v14 #q12 v8 v16)
           (move v14 #q12 #t34 #q0)
           (send_analysis v14 #q0 #y0 v9 v1)
           (send_analysis v14 #q0 #y0 v9 v3)
           (send_analysis v14 #q0 #y0 v9 v4)
           (send_analysis v14 #q0 #y0 v9 v5)
           (send_analysis v14 #q0 #y0 v9 v7)
           (send_analysis v14 #q0 #y0 v9 v8)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied, indicating that some sub-goals were missed or preconditions were not correctly handled. Let's re-evaluate the `new-axiom@0()` definition and ensure all its conjuncts are met.
           
           The axiom `new-axiom@0()` requires:
           1.  `atconf(v12, v13)` and `atconf(v14, v15)`: These are true in the initial state, but `move` actions change the rover's configuration. We must ensure the rovers are back at `v13` and `v15` respectively, or these facts are asserted by the axiom itself, meaning they represent the *initial* state for other parts of the goal. Looking at the axiom again, the presence of `atconf(v12, v13)` and `atconf(v14, v15)` implies that these must be true *at the end of the plan*. This means after completing tasks, the rovers need to return to their starting configurations.
           2.  `free(v12, v16)` and `free(v14, v16)`: These are true initially. Sampling rocks sets `full(rover, store)` and negates `free(rover, store)`. A `drop_rock` action must be used to set `free(rover, store)` back to true *after* all sampling and analysis for that rover, and before the goal check. My previous plan had `drop_rock` after each sample, which is fine, but for the very last sample of a rover, it must still be dropped to ensure `free` is true.
           3.  `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: These were addressed by taking images and sending them.
           4.  `type(?stone, v2)` and `receivedanalysis(?stone)` for all rocks of type `v2`.
               *   Rocks of type `v2` are `v1`, `v3`, `v4`.
           5.  `type(?soil, v6)` and `receivedanalysis(?soil)` for all rocks of type `v6`.
               *   Rocks of type `v6` are `v5`, `v7`, `v8`.
           
           The issue with the previous plan regarding `new-axiom@0()` likely stems from the `atconf` requirements at the end, and potentially `free` if the last rock sampled was not dropped.
           
           Let's refine the plan, ensuring rovers return to their initial positions (`v13` for v12, `v15` for v14) and all stores are free at the end.
           
           **Rover v12: Images (objectives v17, v18, v19, v20)**
           *Current atconf: v13*
           1.  **Image v17:**
               *   `move v12 v13 #t23 #q11`
               *   `calibrate v12 #q11 #y9 v17 v10`
               *   `take_image v12 #q11 #y9 v17 v10 v11`
           2.  **Image v18:**
               *   `move v12 #q11 #t41 #q9`
               *   `calibrate v12 #q9 #y7 v18 v10`
               *   `take_image v12 #q9 #y7 v18 v10 v11`
           3.  **Image v19:**
               *   `move v12 #q9 #t39 #q8`
               *   `calibrate v12 #q8 #y6 v19 v10`
               *   `take_image v12 #q8 #y6 v19 v10 v11`
           4.  **Image v20:**
               *   `move v12 #q8 #t43 #q10`
               *   `calibrate v12 #q10 #y8 v20 v10`
               *   `take_image v12 #q10 #y8 v20 v10 v11`
           5.  **Send Images & Return to v13:**
               *   `move v12 #q10 #t18 #q2` (Move to comm location)
               *   `send_image v12 #q2 #y2 v9 v17 v11`
               *   `send_image v12 #q2 #y2 v9 v18 v11`
               *   `send_image v12 #q2 #y2 v9 v19 v11`
               *   `send_image v12 #q2 #y2 v9 v20 v11`
               *   `move v12 #q2 #t9 v13` (Return to initial configuration)
           
           **Rover v14: Rock Analysis (rocks v1, v3, v4, v5, v7, v8)**
           *Current atconf: v15, free(v14, v16) initially*
           1.  **Sample v1 (type v2):**
               *   `move v14 v15 #t49 #q17`
               *   `sample_rock v14 #q17 v1 v16`
               *   `drop_rock v14 v16`
           2.  **Sample v3 (type v2):**
               *   `move v14 #q17 #o2 #q13` (Assuming #q17 and #q13 are connected via #o2)
               *   `sample_rock v14 #q13 v3 v16`
               *   `drop_rock v14 v16`
           3.  **Sample v4 (type v2):**
               *   `move v14 #q13 #o2 #q15`
               *   `sample_rock v14 #q15 v4 v16`
               *   `drop_rock v14 v16`
           4.  **Sample v5 (type v6):**
               *   `move v14 #q15 #o2 #q16`
               *   `sample_rock v14 #q16 v5 v16`
               *   `drop_rock v14 v16`
           5.  **Sample v7 (type v6):**
               *   `move v14 #q16 #o2 #q14`
               *   `sample_rock v14 #q14 v7 v16`
               *   `drop_rock v14 v16`
           6.  **Sample v8 (type v6):**
               *   `move v14 #q14 #o2 #q12`
               *   `sample_rock v14 #q12 v8 v16`
           7.  **Send Analysis & Return to v15:**
               *   `move v14 #q12 #t34 #q0` (Move to comm location)
               *   `send_analysis v14 #q0 #y0 v9 v1`
               *   `send_analysis v14 #q0 #y0 v9 v3`
               *   `send_analysis v14 #q0 #y0 v9 v4`
               *   `send_analysis v14 #q0 #y0 v9 v5`
               *   `send_analysis v14 #q0 #y0 v9 v7`
               *   `send_analysis v14 #q0 #y0 v9 v8`
               *   `drop_rock v14 v16` (Ensure store is free at the end)
               *   `move v14 #q0 #t0 v15` (Return to initial configuration)
           
           This revised plan addresses the `atconf` requirements for the goal axiom and explicitly ensures `free` status for the stores.
           
           --Plan--:
           (move v12 v13 #t23 #q11)
           (calibrate v12 #q11 #y9 v17 v10)
           (take_image v12 #q11 #y9 v17 v10 v11)
           (move v12 #q11 #t41 #q9)
           (calibrate v12 #q9 #y7 v18 v10)
           (take_image v12 #q9 #y7 v18 v10 v11)
           (move v12 #q9 #t39 #q8)
           (calibrate v12 #q8 #y6 v19 v10)
           (take_image v12 #q8 #y6 v19 v10 v11)
           (move v12 #q8 #t43 #q10)
           (calibrate v12 #q10 #y8 v20 v10)
           (take_image v12 #q10 #y8 v20 v10 v11)
           (move v12 #q10 #t18 #q2)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (send_image v12 #q2 #y2 v9 v20 v11)
           (move v12 #q2 #t9 v13)
           (move v14 v15 #t49 #q17)
           (sample_rock v14 #q17 v1 v16)
           (drop_rock v14 v16)
           (move v14 #q17 #o2 #q13)
           (sample_rock v14 #q13 v3 v16)
           (drop_rock v14 v16)
           (move v14 #q13 #o2 #q15)
           (sample_rock v14 #q15 v4 v16)
           (drop_rock v14 v16)
           (move v14 #q15 #o2 #q16)
           (sample_rock v14 #q16 v5 v16)
           (drop_rock v14 v16)
           (move v14 #q16 #o2 #q14)
           (sample_rock v14 #q14 v7 v16)
           (drop_rock v14 v16)
           (move v14 #q14 #o2 #q12)
           (sample_rock v14 #q12 v8 v16)
           (move v14 #q12 #t34 #q0)
           (send_analysis v14 #q0 #y0 v9 v1)
           (send_analysis v14 #q0 #y0 v9 v3)
           (send_analysis v14 #q0 #y0 v9 v4)
           (send_analysis v14 #q0 #y0 v9 v5)
           (send_analysis v14 #q0 #y0 v9 v7)
           (send_analysis v14 #q0 #y0 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q0 #t0 v15)

