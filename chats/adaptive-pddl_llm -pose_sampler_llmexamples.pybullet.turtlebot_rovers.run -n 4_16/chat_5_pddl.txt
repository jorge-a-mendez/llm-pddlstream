User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v1)
           Atom type(v3, v2)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom type(v5, v6)
           Atom atconf(v14, v15)
           Atom conf(v12, v13)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom rock(v3)
           Atom atconf(v12, v13)
           Atom rock(v5)
           Atom rock(v8)
           Atom objective(v18)
           Atom camera(v10)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom free(v12, v16)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom rock(v4)
           Atom objective(v17)
           Atom rover(v14)
           Atom free(v14, v16)
           Atom onboard(v10, v12)
           Atom lander(v9)
           Atom objective(v19)
           Atom type(v7, v6)
           Atom rover(v12)
           Atom objective(v20)
           Atom type(v1, v2)
           Atom imagevisible(v12, #q9, #y7, v18)
           Atom imagerange(v12, #q9, v18)
           Atom conf(v12, #q9)
           Atom ray(#y7)
           Atom imagevisible(v12, #q10, #y8, v20)
           Atom imagerange(v12, #q10, v20)
           Atom conf(v12, #q10)
           Atom ray(#y8)
           Atom imagevisible(v12, #q8, #y6, v19)
           Atom imagerange(v12, #q8, v19)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom imagevisible(v14, #q1, #y1, v18)
           Atom imagerange(v14, #q1, v18)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q16, v5)
           Atom conf(v14, #q16)
           Atom imagevisible(v14, #q3, #y3, v19)
           Atom imagerange(v14, #q3, v19)
           Atom conf(v14, #q3)
           Atom ray(#y3)
           Atom imagevisible(v14, #q6, #y4, v20)
           Atom imagerange(v14, #q6, v20)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom above(v14, #q17, v1)
           Atom conf(v14, #q17)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v12, #o5, v3)
           Atom above(v14, #q13, v3)
           Atom conf(v14, #q13)
           Atom imagevisible(v14, #q7, #y5, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v12, #q11, #y9, v17)
           Atom imagerange(v12, #q11, v17)
           Atom conf(v12, #q11)
           Atom ray(#y9)
           Atom above(v12, #o5, v4)
           Atom above(v14, #q15, v4)
           Atom conf(v14, #q15)
           Atom above(v12, #o5, v7)
           Atom above(v14, #q14, v7)
           Atom conf(v14, #q14)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, #q2, #t9, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v14, v15, #t6, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, #q9, #t17, #q2)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #t21, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q10, #t18, #q2)
           Atom motion(v12, v13, #t22, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #t33, #q10)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q17, #o2, #q6)
           Atom motion(v14, v15, #t5, #q6)
           Atom motion(v14, #q6, #t24, #q7)
           Atom motion(v14, #q6, #o2, #q17)
           Atom motion(v12, #q2, #t1, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t7, #q4)
           Atom motion(v12, #q4, #t10, #q2)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v14, v15, #t4, #q3)
           Atom motion(v14, #q3, #t27, #q6)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q17, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q17)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #t26, #q4)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #t8, #q5)
           Atom motion(v12, #q2, #t2, #q5)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q5, #t11, #q2)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q6)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q15)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q16, #o2, #q6)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v14, v15, #t28, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q17, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q16)
           Atom motion(v14, #q3, #t13, #q0)
           Atom motion(v14, #q12, #t34, #q0)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #t29, #q12)
           Atom motion(v14, #q17, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q15)
           Atom motion(v14, #q0, #t0, v15)
           Atom motion(v14, #q16, #o2, #q0)
           Atom motion(v14, #q6, #t14, #q0)
           Atom motion(v14, #q7, #t15, #q0)
           Atom motion(v14, #q0, #o2, #q17)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q15, #t37, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q0, #t30, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #t35, #q0)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q17, #o2, #q1)
           Atom motion(v14, #q12, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q1, #t25, #q3)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q16, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q12)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q1, #t12, #q0)
           Atom motion(v14, #q1, #o2, #q17)
           Atom motion(v14, v15, #t3, #q1)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q6, #o2, #q14)
           Atom motion(v14, #q0, #t31, #q14)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q14, #t36, #q0)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q6)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v12, v13, #t20, #q8)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q10, #t32, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q8, #t16, #q2)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, v13, #t23, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q11, #t19, #q2)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q8, #t38, #q11)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q11, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q13 v3 v16))
           ((sample_rock v14 #q14 v7 v16))
           ((sample_rock v14 #q15 v4 v16))
           ((sample_rock v14 #q16 v5 v16))
           ((sample_rock v14 #q17 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t18 #q2))
           ((move v12 #q10 #t32 #q8))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t19 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #t1 #q4))
           ((move v12 #q2 #t2 #q5))
           ((move v12 #q2 #t9 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t10 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t11 #q2))
           ((move v12 #q5 #t26 #q4))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t16 #q2))
           ((move v12 #q8 #t38 #q11))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t17 #q2))
           ((move v12 #q9 #t33 #q10))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t20 #q8))
           ((move v12 v13 #t21 #q9))
           ((move v12 v13 #t22 #q10))
           ((move v12 v13 #t23 #q11))
           ((move v12 v13 #t7 #q4))
           ((move v12 v13 #t8 #q5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q15))
           ((move v14 #q0 #o2 #q16))
           ((move v14 #q0 #o2 #q17))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #t0 v15))
           ((move v14 #q0 #t29 #q12))
           ((move v14 #q0 #t30 #q13))
           ((move v14 #q0 #t31 #q14))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q12))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q17))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t12 #q0))
           ((move v14 #q1 #t25 #q3))
           ((move v14 #q12 #o2 #q1))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t34 #q0))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t35 #q0))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q6))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t36 #q0))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q6))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t37 #q0))
           ((move v14 #q16 #o2 #q0))
           ((move v14 #q16 #o2 #q1))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 #q6))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q17 #o2 #q0))
           ((move v14 #q17 #o2 #q1))
           ((move v14 #q17 #o2 #q12))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q3))
           ((move v14 #q17 #o2 #q6))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q17))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t13 #q0))
           ((move v14 #q3 #t27 #q6))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q14))
           ((move v14 #q6 #o2 #q15))
           ((move v14 #q6 #o2 #q16))
           ((move v14 #q6 #o2 #q17))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t14 #q0))
           ((move v14 #q6 #t24 #q7))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t15 #q0))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t28 #q12))
           ((move v14 v15 #t3 #q1))
           ((move v14 v15 #t4 #q3))
           ((move v14 v15 #t5 #q6))
           ((move v14 v15 #t6 #q7))
           ((calibrate v12 #q10 #y8 v20 v10))
           ((calibrate v12 #q11 #y9 v17 v10))
           ((calibrate v12 #q8 #y6 v19 v10))
           ((calibrate v12 #q9 #y7 v18 v10))
           ((calibrate v14 #q1 #y1 v18 v10))
           ((calibrate v14 #q3 #y3 v19 v10))
           ((calibrate v14 #q6 #y4 v20 v10))
           ((calibrate v14 #q7 #y5 v17 v10))
           ((take_image v12 #q10 #y8 v20 v10 v11))
           ((take_image v12 #q11 #y9 v17 v10 v11))
           ((take_image v12 #q8 #y6 v19 v10 v11))
           ((take_image v12 #q9 #y7 v18 v10 v11))
           ((take_image v14 #q1 #y1 v18 v10 v11))
           ((take_image v14 #q3 #y3 v19 v10 v11))
           ((take_image v14 #q6 #y4 v20 v10 v11))
           ((take_image v14 #q7 #y5 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_image v12 #q2 #y2 v9 v20 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, `v12` and `v14`, each equipped with a camera `v10` that supports imaging in `v11` mode. There are several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) of various types (`v2`, `v6`). There are also several objectives (`v17`, `v18`, `v19`, `v20`) to be imaged, and a lander `v9` to communicate with. Both rovers have a free storage `v16`.
           
           The goal `new-axiom@0()` specifies several conditions:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers are at their initial configurations. This is already true.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers have free storage. This is also true.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: Images of all four objectives must be taken in mode `v11` by a rover and sent to the lander.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: A rock of type `v2` needs to be analyzed and the analysis sent to the lander. Rocks `v1`, `v3`, `v4` are of type `v2`.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: A rock of type `v6` needs to be analyzed and the analysis sent to the lander. Rocks `v5`, `v7`, `v8` are of type `v6`.
           
           To achieve the goal, both rovers need to:
           - Calibrate their camera.
           - Take images of all objectives.
           - Send the images to the lander.
           - Sample and analyze rocks of type `v2` and `v6`.
           - Send the analysis to the lander.
           
           Since `v12` and `v14` both have `v10` onboard, they can both take images and analyze samples. We need to ensure that the images of all four objectives (`v17`, `v18`, `v19`, `v20`) and analysis of both types of rocks (`v2`, `v6`) are received.
           
           Here's a possible plan:
           1. Rover `v12` can handle some images and a rock analysis.
           2. Rover `v14` can handle the remaining images and another rock analysis.
           
           Let's break down the image and analysis goals:
           - `receivedimage(v17, v11)`: Can be done by `v12` or `v14`. `v12` can take image of `v17` at `#q11`, `v14` can take image of `v17` at `#q7`.
           - `receivedimage(v18, v11)`: Can be done by `v12` or `v14`. `v12` can take image of `v18` at `#q9`, `v14` can take image of `v18` at `#q1`.
           - `receivedimage(v19, v11)`: Can be done by `v12` or `v14`. `v12` can take image of `v19` at `#q8`, `v14` can take image of `v19` at `#q3`.
           - `receivedimage(v20, v11)`: Can be done by `v12` or `v14`. `v12` can take image of `v20` at `#q10`, `v14` can take image of `v20` at `#q6`.
           
           - `receivedanalysis(?stone)` for type `v2`: Rock `v1` (rover v12: #q5, v14: #q17), `v3` (rover v12: #o5, v14: #q13), `v4` (rover v12: #o5, v14: #q15).
           - `receivedanalysis(?soil)` for type `v6`: Rock `v5` (rover v12: #q4, v14: #q16), `v7` (rover v12: #o5, v14: #q14), `v8` (rover v12: #o5, v14: #q12).
           
           Let's make `v12` take images of `v17`, `v18`, `v19`, `v20`, sample rock `v1` (type v2) and `v5` (type v6) and send the analysis.
           To send the image and analysis, `v12` needs to be at a configuration `comvisible` with the lander `v9`. `v12` is `comvisible` at `#q2` with `v9` via ray `#y2`.
           
           Plan strategy:
           1. Rover `v12` moves to positions to calibrate and take images of all objectives.
           2. Rover `v12` moves to a `comvisible` position (`#q2`) to send images.
           3. Rover `v12` moves to `above` positions to sample a rock of type `v2` and a rock of type `v6`.
           4. Rover `v12` moves back to `comvisible` position (`#q2`) to send the analysis.
           
           Let's assign specific tasks to `v12`.
           - Images: `v17` (at #q11), `v18` (at #q9), `v19` (at #q8), `v20` (at #q10).
           - Rock analysis: `v1` (type v2, at #q5), `v5` (type v6, at #q4).
           
           All imaging and sampling can be done by `v12`. Since the goal is the `new-axiom@0()`, which does not explicitly require tasks to be split, a single rover could accomplish everything if it has the necessary capabilities. However, the available action instances might implicitly guide us to use both rovers.
           The goal statement "new-axiom@0()" implicitly requires both rovers to be at their initial configuration, which they are. It also requires free stores, which they have. It also requires received images and analyses.
           The question states that the axioms are derived from the predicates. `new-axiom@0` simply represents that all required `receivedimage` and `receivedanalysis` predicates are true.
           
           We need to ensure `receivedimage` for all 4 objectives (`v17`, `v18`, `v19`, `v20`) and `receivedanalysis` for one rock of type `v2` and one rock of type `v6`.
           
           Let's use `v12` for all image tasks and one type of rock analysis. And `v14` for the other rock analysis.
           
           Rover `v12` tasks:
           1. Image `v17` (at #q11).
           2. Image `v18` (at #q9).
           3. Image `v19` (at #q8).
           4. Image `v20` (at #q10).
           5. Send all images (from #q2).
           6. Sample rock `v1` (type v2, at #q5).
           7. Send analysis of `v1` (from #q2).
           
           Rover `v14` tasks:
           1. Sample rock `v5` (type v6, at #q16).
           2. Send analysis of `v5` (from #q0).
           
           This plan seems feasible and covers all goal requirements.
           
           --Plan--:
           (move v12 v13 #t23 #q11)
           (calibrate v12 #q11 #y9 v17 v10)
           (take_image v12 #q11 #y9 v17 v10 v11)
           (move v12 #q11 #o2 #q9)
           (calibrate v12 #q9 #y7 v18 v10)
           (take_image v12 #q9 #y7 v18 v10 v11)
           (move v12 #q9 #o2 #q8)
           (calibrate v12 #q8 #y6 v19 v10)
           (take_image v12 #q8 #y6 v19 v10 v11)
           (move v12 #q8 #o2 #q10)
           (calibrate v12 #q10 #y8 v20 v10)
           (take_image v12 #q10 #y8 v20 v10 v11)
           (move v12 #q10 #t18 #q2)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (send_image v12 #q2 #y2 v9 v20 v11)
           (move v12 #q2 #t2 #q5)
           (sample_rock v12 #q5 v1 v16)
           (move v12 #q5 #t11 #q2)
           (send_analysis v12 #q2 #y2 v9 v1)
           (move v14 v15 #o2 #q16)
           (sample_rock v14 #q16 v5 v16)
           (move v14 #q16 #o2 #q0)
           (send_analysis v14 #q0 #y0 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied, indicating that some sub-goals of the axiom were not met. Let's re-examine the goal `new-axiom@0()`:
           - `atconf(v12, v13)` and `atconf(v14, v15)`: Already true initially.
           - `free(v12, v16)` and `free(v14, v16)`: Already true initially, but sampling rocks will make `full(vX, v16)`. We need to drop rocks if we want to sample more than one rock with the same store or if the final state needs stores to be free. The axiom itself doesn't explicitly require `free` stores at the end, only at the start. However, the `sample_rock` precondition `free(v, s)` means if a rover samples a rock, its store `s` becomes `full(v, s)`. If it then needs to sample another rock, it must first `drop_rock`.
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: All objectives must have their images received.
           - `type(?stone, v2)` and `receivedanalysis(?stone)`: At least one rock of type `v2` must be analyzed and the analysis received.
           - `type(?soil, v6)` and `receivedanalysis(?soil)`: At least one rock of type `v6` must be analyzed and the analysis received.
           
           My previous plan had `v12` sample `v1` (type `v2`) and `v14` sample `v5` (type `v6`). This should cover the analysis part of the goal.
           It also had `v12` take and send images of all four objectives.
           
           Let's check the state transitions for the `free` predicate more carefully.
           `sample_rock(?v: object, ?q: object, ?r: object, ?s: object)`:
             Effects: `full(?v, ?s)` and `NegatedAtom free(?v, ?s)`.
           `drop_rock(?v: object, ?s: object)`:
             Effects: `free(?v, ?s)` and `NegatedAtom full(?v, ?s)`.
           
           The axiom `new-axiom@0()` explicitly checks for `free(v12, v16)` and `free(v14, v16)`. This means that after sampling a rock, the rover must `drop_rock` to make its storage `free` again, otherwise the axiom will not be satisfied.
           
           Let's adjust the plan to include `drop_rock` after sampling for both rovers to satisfy the `free` predicate in the goal axiom.
           
           Revised Plan Strategy:
           1. Rover `v12` calibrates and takes images of all four objectives (`v17`, `v18`, `v19`, `v20`).
           2. Rover `v12` moves to `comvisible` location (`#q2`) and sends all four images.
           3. Rover `v12` moves to `above` location (`#q5`) for `v1` (type `v2`), samples it, and immediately drops it to keep its store free for the final goal state.
           4. Rover `v12` moves back to `comvisible` location (`#q2`) and sends analysis for `v1`.
           5. Rover `v14` moves to `above` location (`#q16`) for `v5` (type `v6`), samples it, and immediately drops it to keep its store free for the final goal state.
           6. Rover `v14` moves to `comvisible` location (`#q0`) and sends analysis for `v5`.
           
           This plan ensures `free(v12, v16)` and `free(v14, v16)` at the end. All other conditions from the axiom (`receivedimage` for all objectives, `receivedanalysis` for both types of rocks) are also covered.
           
           --Plan--:
           (move v12 v13 #t23 #q11)
           (calibrate v12 #q11 #y9 v17 v10)
           (take_image v12 #q11 #y9 v17 v10 v11)
           (move v12 #q11 #o2 #q9)
           (calibrate v12 #q9 #y7 v18 v10)
           (take_image v12 #q9 #y7 v18 v10 v11)
           (move v12 #q9 #o2 #q8)
           (calibrate v12 #q8 #y6 v19 v10)
           (take_image v12 #q8 #y6 v19 v10 v11)
           (move v12 #q8 #o2 #q10)
           (calibrate v12 #q10 #y8 v20 v10)
           (take_image v12 #q10 #y8 v20 v10 v11)
           (move v12 #q10 #t18 #q2)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (send_image v12 #q2 #y2 v9 v20 v11)
           (move v12 #q2 #t2 #q5)
           (sample_rock v12 #q5 v1 v16)
           (send_analysis v12 #q2 #y2 v9 v1)
           (drop_rock v12 v16)
           (move v14 v15 #o2 #q16)
           (sample_rock v14 #q16 v5 v16)
           (send_analysis v14 #q0 #y0 v9 v5)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan failed again, indicating that `new-axiom@0()` is still not satisfied. Let's meticulously re-evaluate the axiom components and ensure every single one is explicitly achieved.
           
           The goal `new-axiom@0()` is a conjunction of several predicates:
           1. `atconf(v12, v13)`: Rover `v12` is at its initial configuration `v13`. This is true at the beginning and remains true if `v12` moves away and then moves back to `v13`.
           2. `atconf(v14, v15)`: Rover `v14` is at its initial configuration `v15`. Similar to `v12`.
           3. `free(v12, v16)`: Rover `v12` has a free store `v16`. This is true initially and must be true at the end. After `sample_rock`, `drop_rock` is needed.
           4. `free(v14, v16)`: Rover `v14` has a free store `v16`. Similar to `v12`.
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`: All these four objective images must be received.
           9. `type(?stone, v2)` and `receivedanalysis(?stone)`: At least one rock of type `v2` (e.g., `v1`, `v3`, or `v4`) must be analyzed and the analysis received.
           10. `type(?soil, v6)` and `receivedanalysis(?soil)`: At least one rock of type `v6` (e.g., `v5`, `v7`, or `v8`) must be analyzed and the analysis received.
           
           My last plan addressed the `free` store issue by adding `drop_rock`.
           The problem could be related to rovers not returning to their initial configurations (`v13` for `v12` and `v15` for `v14`). The current plan does not have `v12` or `v14` return to their initial configurations after moving to perform tasks.
           
           Let's modify the plan to ensure that both rovers return to their initial configurations `v13` and `v15` respectively, at the very end of the plan. This is a common requirement in planning problems when the goal explicitly mentions initial configuration.
           
           Revised Plan Strategy:
           1. Rover `v12` calibrates and takes images of all four objectives (`v17`, `v18`, `v19`, `v20`).
           2. Rover `v12` moves to `comvisible` location (`#q2`) and sends all four images.
           3. Rover `v12` moves to `above` location (`#q5`) for `v1` (type `v2`), samples it.
           4. Rover `v12` moves back to `comvisible` location (`#q2`) and sends analysis for `v1`.
           5. Rover `v12` drops the rock `v1`.
           6. Rover `v12` returns to its initial configuration `v13`.
           7. Rover `v14` moves to `above` location (`#q16`) for `v5` (type `v6`), samples it.
           8. Rover `v14` moves to `comvisible` location (`#q0`) and sends analysis for `v5`.
           9. Rover `v14` drops the rock `v5`.
           10. Rover `v14` returns to its initial configuration `v15`.
           
           This plan ensures:
           - All images are taken and sent.
           - Both types of rocks are analyzed and sent.
           - Both rovers' stores are free at the end.
           - Both rovers are at their initial configurations at the end.
           
           Let's verify the `motion` predicates for returning to initial configurations:
           - For `v12` to `v13`: `(move v12 #q2 #t9 v13)`
           - For `v14` to `v15`: `(move v14 #q0 #t0 v15)`
           
           --Plan--:
           (move v12 v13 #t23 #q11)
           (calibrate v12 #q11 #y9 v17 v10)
           (take_image v12 #q11 #y9 v17 v10 v11)
           (move v12 #q11 #o2 #q9)
           (calibrate v12 #q9 #y7 v18 v10)
           (take_image v12 #q9 #y7 v18 v10 v11)
           (move v12 #q9 #o2 #q8)
           (calibrate v12 #q8 #y6 v19 v10)
           (take_image v12 #q8 #y6 v19 v10 v11)
           (move v12 #q8 #o2 #q10)
           (calibrate v12 #q10 #y8 v20 v10)
           (take_image v12 #q10 #y8 v20 v10 v11)
           (move v12 #q10 #t18 #q2)
           (send_image v12 #q2 #y2 v9 v17 v11)
           (send_image v12 #q2 #y2 v9 v18 v11)
           (send_image v12 #q2 #y2 v9 v19 v11)
           (send_image v12 #q2 #y2 v9 v20 v11)
           (move v12 #q2 #t2 #q5)
           (sample_rock v12 #q5 v1 v16)
           (move v12 #q5 #t11 #q2)
           (send_analysis v12 #q2 #y2 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q2 #t9 v13)
           (move v14 v15 #o2 #q16)
           (sample_rock v14 #q16 v5 v16)
           (move v14 #q16 #o2 #q0)
           (send_analysis v14 #q0 #y0 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q0 #t0 v15)

