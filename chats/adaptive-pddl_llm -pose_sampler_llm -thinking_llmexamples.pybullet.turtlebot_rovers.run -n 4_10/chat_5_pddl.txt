User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v14, v15)
           Atom rock(v7)
           Atom objective(v19)
           Atom rock(v3)
           Atom rover(v12)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom rock(v1)
           Atom type(v5, v6)
           Atom onboard(v10, v14)
           Atom camera(v10)
           Atom rock(v8)
           Atom objective(v17)
           Atom atconf(v12, v13)
           Atom type(v7, v6)
           Atom rock(v4)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom conf(v12, v13)
           Atom store(v16)
           Atom rover(v14)
           Atom lander(v9)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom objective(v20)
           Atom atconf(v14, v15)
           Atom type(v1, v2)
           Atom type(v4, v2)
           Atom free(v12, v16)
           Atom rock(v5)
           Atom type(v8, v6)
           Atom above(v14, #q8, v7)
           Atom conf(v14, #q8)
           Atom imagevisible(v14, #q2, #y2, v18)
           Atom imagerange(v14, #q2, v18)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q15, v5)
           Atom conf(v14, #q15)
           Atom imagevisible(v14, #q3, #y3, v20)
           Atom imagerange(v14, #q3, v20)
           Atom conf(v14, #q3)
           Atom ray(#y3)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q1, #y1, v17)
           Atom imagerange(v14, #q1, v17)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v12, #q14, v7)
           Atom conf(v12, #q14)
           Atom comvisible(v12, #q6, #y4, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q11, #y7, v20)
           Atom imagerange(v12, #q11, v20)
           Atom conf(v12, #q11)
           Atom ray(#y7)
           Atom imagevisible(v12, #q12, #y8, v17)
           Atom imagerange(v12, #q12, v17)
           Atom conf(v12, #q12)
           Atom ray(#y8)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom imagevisible(v12, #q9, #y6, v18)
           Atom imagerange(v12, #q9, v18)
           Atom conf(v12, #q9)
           Atom ray(#y6)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q10, v3)
           Atom conf(v14, #q10)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v14, #q7, #y5, v19)
           Atom imagerange(v14, #q7, v19)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v12, #q13, #y9, v19)
           Atom imagerange(v12, #q13, v19)
           Atom conf(v12, #q13)
           Atom ray(#y9)
           Atom above(v14, #o5, v1)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v12, #o5, v4)
           Atom above(v14, #o5, v4)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, v15, #t12, #q3)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, v15, #t13, #q7)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q15, #t34, #q0)
           Atom motion(v14, #q7, #t21, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t24, #q7)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q0, #t2, v15)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q0, #t29, #q15)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #t15, #q9)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, v13, #t8, #q4)
           Atom motion(v14, v15, #t11, #q2)
           Atom motion(v14, #q2, #t1, #q0)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q15, #o2, #q2)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, v13, #t28, #q12)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, v15, #t14, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q8, #t17, #q0)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q0, #t16, #q8)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, v13, #t9, #q5)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q6, #t7, #q5)
           Atom motion(v12, #q6, #t25, #q11)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #t27, #q13)
           Atom motion(v12, #q12, #t33, #q6)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q6, #t5, v13)
           Atom motion(v12, #q6, #t30, #q9)
           Atom motion(v12, #q6, #t6, #q4)
           Atom motion(v12, #q11, #t23, #q6)
           Atom motion(v12, #q9, #t18, #q6)
           Atom motion(v12, #q13, #t31, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q5, #t4, #q6)
           Atom motion(v12, #q4, #t3, #q6)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q10, #t26, #q0)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q0, #t20, #q10)
           Atom motion(v14, v15, #t32, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q6, #t19, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q14, #t22, #q6)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, v15, #t10, #q1)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q1, #t0, #q0)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q14 v7 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q10 v3 v16))
           ((sample_rock v14 #q15 v5 v16))
           ((sample_rock v14 #q8 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t23 #q6))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t33 #q6))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t31 #q6))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t22 #q6))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t3 #q6))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t4 #q6))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #t19 #q14))
           ((move v12 #q6 #t25 #q11))
           ((move v12 #q6 #t27 #q13))
           ((move v12 #q6 #t30 #q9))
           ((move v12 #q6 #t5 v13))
           ((move v12 #q6 #t6 #q4))
           ((move v12 #q6 #t7 #q5))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t18 #q6))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q9))
           ((move v12 v13 #t28 #q12))
           ((move v12 v13 #t8 #q4))
           ((move v12 v13 #t9 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #t16 #q8))
           ((move v14 #q0 #t2 v15))
           ((move v14 #q0 #t20 #q10))
           ((move v14 #q0 #t24 #q7))
           ((move v14 #q0 #t29 #q15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t0 #q0))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t26 #q0))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q2))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t34 #q0))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t1 #q0))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t21 #q0))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t17 #q0))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q1))
           ((move v14 v15 #t11 #q2))
           ((move v14 v15 #t12 #q3))
           ((move v14 v15 #t13 #q7))
           ((move v14 v15 #t14 #q8))
           ((move v14 v15 #t32 #q10))
           ((calibrate v12 #q11 #y7 v20 v10))
           ((calibrate v12 #q12 #y8 v17 v10))
           ((calibrate v12 #q13 #y9 v19 v10))
           ((calibrate v12 #q9 #y6 v18 v10))
           ((calibrate v14 #q1 #y1 v17 v10))
           ((calibrate v14 #q2 #y2 v18 v10))
           ((calibrate v14 #q3 #y3 v20 v10))
           ((calibrate v14 #q7 #y5 v19 v10))
           ((take_image v12 #q11 #y7 v20 v10 v11))
           ((take_image v12 #q12 #y8 v17 v10 v11))
           ((take_image v12 #q13 #y9 v19 v10 v11))
           ((take_image v12 #q9 #y6 v18 v10 v11))
           ((take_image v14 #q1 #y1 v17 v10 v11))
           ((take_image v14 #q2 #y2 v18 v10 v11))
           ((take_image v14 #q3 #y3 v20 v10 v11))
           ((take_image v14 #q7 #y5 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y4 v9 v3))
           ((send_analysis v12 #q6 #y4 v9 v4))
           ((send_analysis v12 #q6 #y4 v9 v8))
           ((send_analysis v12 #q6 #y4 v9 v7))
           ((send_analysis v12 #q6 #y4 v9 v5))
           ((send_analysis v12 #q6 #y4 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_image v12 #q6 #y4 v9 v20 v11))
           ((send_image v12 #q6 #y4 v9 v17 v11))
           ((send_image v12 #q6 #y4 v9 v19 v11))
           ((send_image v12 #q6 #y4 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v20 v11))
           ((send_image v14 #q0 #y0 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Plan to Achieve `new-axiom@0()` in the `rovers` Domain**
           
           Okay, let's break this down. The ultimate goal is to satisfy all the conditions of `new-axiom@0()`. From a planning perspective, I see that I need to achieve a bunch of subgoals related to taking images of specific objectives, analyzing rock samples, and ensuring certain configurations are in place.
           
           First, I identified the crucial parts. I have two rovers at my disposal: `v12` and `v14`.  I will use `v14` for all the image gathering tasks. My strategy with `v14` is to have it sequentially: move to a location, calibrate its camera, take an image, move to a communication position, and send the image. I'll need to do this for all four image objectives `v17`, `v18`, `v19`, and `v20`.
           
           Meanwhile, `v12` will focus on rock analysis, specifically samples of type 'stone' (`v3`) and type 'soil' (`v7`). I'll need to move `v12` to each sample location, get the sample, send the analysis to the lander, and then drop the sample so I can sample another one.
           
           I determined that the plan needs to satisfy the following.
           
           1.  **Image Gathering (v14):**
               *   Move to configuration #q1, calibrate, take image, communicate the image, repeat for #q2, #q7, #q3.
           
           2.  **Rock Analysis (v12):**
               *   Move to location #o5, sample rock `v3` send, then move to location #q14, sample rock `v7`, send.
           
           I need to make sure the end-state includes satisfying several conditions:
           *   `atconf(v12, v13)`
           *   `atconf(v14, v15)`
           *   `free(v12, v16)`
           *   `free(v14, v16)`
           *   and, of course, the `receivedimage` and `receivedanalysis` conditions.
           
           I've crafted a plan, but there is one critical detail I've missed. At the end of the image and analysis parts, the rovers are not in the correct start states.  I've ensured the images and analyses are done. But I must add at the end of the plan the following:
           
           *   Move `v12` to position `v13`.
           *   Move `v14` to position `v15`.
           
           The complete plan is therefore:
           
           1.  `(move v14 v15 #t10 #q1)`
           2.  `(calibrate v14 #q1 #y1 v17 v10)`
           3.  `(take_image v14 #q1 #y1 v17 v10 v11)`
           4.  `(move v14 #q1 #t0 #q0)`
           5.  `(send_image v14 #q0 #y0 v9 v17 v11)`
           6.  `(move v14 #q0 #o2 #q2)`
           7.  `(calibrate v14 #q2 #y2 v18 v10)`
           8.  `(take_image v14 #q2 #y2 v18 v10 v11)`
           9.  `(move v14 #q2 #t1 #q0)`
           10. `(send_image v14 #q0 #y0 v9 v18 v11)`
           11. `(move v14 #q0 #t24 #q7)`
           12. `(calibrate v14 #q7 #y5 v19 v10)`
           13. `(take_image v14 #q7 #y5 v19 v10 v11)`
           14. `(move v14 #q7 #t21 #q0)`
           15. `(send_image v14 #q0 #y0 v9 v19 v11)`
           16. `(move v14 #q0 #o2 #q3)`
           17. `(calibrate v14 #q3 #y3 v20 v10)`
           18. `(take_image v14 #q3 #y3 v20 v10 v11)`
           19. `(move v14 #q3 #o2 #q0)`
           20. `(
)

Model:     **A Plan to Achieve `new-axiom@0()` in the `rovers` Domain**
           
           Okay, let's break this down. The ultimate goal is to satisfy all the conditions of `new-axiom@0()`. From a planning perspective, I see that I need to achieve a bunch of subgoals related to taking images of specific objectives, analyzing rock samples, and ensuring certain configurations are in place.
           
           First, I identified the crucial parts. I have two rovers at my disposal: `v12` and `v14`.  I will use `v14` for all the image gathering tasks. My strategy with `v14` is to have it sequentially: move to a location, calibrate its camera, take an image, move to a communication position, and send the image. I'll need to do this for all four image objectives `v17`, `v18`, `v19`, and `v20`.
           
           Meanwhile, `v12` will focus on rock analysis, specifically samples of type 'stone' (`v3`) and type 'soil' (`v7`). I'll need to move `v12` to each sample location, get the sample, send the analysis to the lander, and then drop the sample so I can sample another one.
           
           I determined that the plan needs to satisfy the following.
           
           1.  **Image Gathering (v14):**
               *   Move to configuration #q1, calibrate, take image, communicate the image, repeat for #q2, #q7, #q3.
           
           2.  **Rock Analysis (v12):**
               *   Move to location #o5, sample rock `v3` send, then move to location #q14, sample rock `v7`, send.
           
           I need to make sure the end-state includes satisfying several conditions:
           *   `atconf(v12, v13)`
           *   `atconf(v14, v15)`
           *   `free(v12, v16)`
           *   `free(v14, v16)`
           *   and, of course, the `receivedimage` and `receivedanalysis` conditions.
           
           I've crafted a plan, but there is one critical detail I've missed. At the end of the image and analysis parts, the rovers are not in the correct start states.  I've ensured the images and analyses are done. But I must add at the end of the plan the following:
           
           *   Move `v12` to position `v13`.
           *   Move `v14` to position `v15`.
           
           The complete plan is therefore:
           
           1.  `(move v14 v15 #t10 #q1)`
           2.  `(calibrate v14 #q1 #y1 v17 v10)`
           3.  `(take_image v14 #q1 #y1 v17 v10 v11)`
           4.  `(move v14 #q1 #t0 #q0)`
           5.  `(send_image v14 #q0 #y0 v9 v17 v11)`
           6.  `(move v14 #q0 #o2 #q2)`
           7.  `(calibrate v14 #q2 #y2 v18 v10)`
           8.  `(take_image v14 #q2 #y2 v18 v10 v11)`
           9.  `(move v14 #q2 #t1 #q0)`
           10. `(send_image v14 #q0 #y0 v9 v18 v11)`
           11. `(move v14 #q0 #t24 #q7)`
           12. `(calibrate v14 #q7 #y5 v19 v10)`
           13. `(take_image v14 #q7 #y5 v19 v10 v11)`
           14. `(move v14 #q7 #t21 #q0)`
           15. `(send_image v14 #q0 #y0 v9 v19 v11)`
           16. `(move v14 #q0 #o2 #q3)`
           17. `(calibrate v14 #q3 #y3 v20 v10)`
           18. `(take_image v14 #q3 #y3 v20 v10 v11)`
           19. `(move v14 #q3 #o2 #q0)`
           20. `(

