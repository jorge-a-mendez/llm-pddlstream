User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom handempty(v6)
           Atom graspable(v8)
           Atom ataconf(v6, v7)
           Atom aconf(v4, v5)
           Atom stackable(v8, v10)
           Atom bconf(v3)
           Atom controllable(v4)
           Atom supported(v14, v15, v11)
           Atom supported(v8, v9, v11)
           Atom arm(v4)
           Atom pose(v8, v9)
           Atom stackable(v12, v10)
           Atom stackable(v8, v16)
           Atom atpose(v14, v15)
           Atom aconf(v6, v7)
           Atom stackable(v14, v10)
           Atom atbconf(v3)
           Atom pose(v14, v15)
           Atom arm(v6)
           Atom stackable(v12, v16)
           Atom graspable(v12)
           Atom atpose(v8, v9)
           Atom stackable(v14, v16)
           Atom supported(v12, v13, v11)
           Atom pose(v12, v13)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom canmove()
           Atom graspable(v14)
           Atom atpose(v12, v13)
           Atom grasp(v8, #g2)
           Atom pose(v8, #p2)
           Atom supported(v8, #p2, v16)
           Atom grasp(v14, #g0)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #p0)
           Atom supported(v14, #p0, v16)
           Atom grasp(v12, #g1)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, v15, #g0, #q2, #t2)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v8, v9, #g2, #q4, #t7)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v8, #p2, #g2, #q3, #t6)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, #p0, #g0, #q0, #t0)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v12, v13, #g1, #q5, #t8)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, #p1, #g1, #q1, #t1)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom btraj(#t13)
           Atom basemotion(#q5, #t13, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q2, #o0, #q1)
           Atom btraj(#t14)
           Atom basemotion(#q1, #t14, #q2)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t9)
           Atom basemotion(#q3, #t9, #q5)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q5, #o0, #q3)
           Atom btraj(#t11)
           Atom basemotion(#q4, #t11, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t10)
           Atom basemotion(#q2, #t10, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q3, #o0, #q0)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q5)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q2 #t14))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q0 #t10))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q5 #t9))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q3 #t11))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q1 #t13))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t12))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p1 #g1 #q1 #t1))
           ((place v4 v12 #p1 #g1 #q1 #t1))
           ((pick v4 v12 v13 #g1 #q5 #t8))
           ((place v4 v12 v13 #g1 #q5 #t8))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 #p0 #g0 #q0 #t0))
           ((place v4 v14 #p0 #g0 #q0 #t0))
           ((pick v4 v14 v15 #g0 #q2 #t2))
           ((place v4 v14 v15 #g0 #q2 #t2))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p2 #g2 #q3 #t6))
           ((place v4 v8 #p2 #g2 #q3 #t6))
           ((pick v4 v8 v9 #g2 #q4 #t7))
           ((place v4 v8 v9 #g2 #q4 #t7))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The robot arm `v4` and `v6` are currently empty.
           The objects `v8`, `v12`, and `v14` are graspable and stackable.
           `v8` is at pose `v9`, `v12` is at pose `v13`, and `v14` is at pose `v15`. All these objects are currently supported by `v11`.
           The goal is to have `v8`, `v12`, and `v14` on `v16`. This means the robot needs to pick up each object from its current location and place it on `v16`.
           The `kin` predicates provide information about the kinematics for `v4` to pick and place `v8`, `v12`, and `v14` at various poses, including some related to `v16` (indicated by `supported(?o, ?p, v16)`). We need to identify the correct `pose` and `grasp` for each object to be placed on `v16`.
           
           Looking at the `supported` facts with `v16`:
           - `supported(v8, #p2, v16)`: So `v8` should be placed at `#p2`.
           - `supported(v14, #p0, v16)`: So `v14` should be placed at `#p0`.
           - `supported(v12, #p1, v16)`: So `v12` should be placed at `#p1`.
           
           Let's break down the plan for each object:
           
           1.  **Place v8 on v16**:
               *   Pick `v8` from `v9` using `g2`. The `kin` for this is `kin(v4, v8, v9, #g2, #q4, #t7)`.
               *   Place `v8` at `#p2` using `g2`. The `kin` for this is `kin(v4, v8, #p2, #g2, #q3, #t6)`.
               *   The base needs to be at `#q4` for picking `v8` at `v9` and at `#q3` for placing `v8` at `#p2`. So, a base movement might be needed between pick and place.
           
           2.  **Place v12 on v16**:
               *   Pick `v12` from `v13` using `g1`. The `kin` for this is `kin(v4, v12, v13, #g1, #q5, #t8)`.
               *   Place `v12` at `#p1` using `g1`. The `kin` for this is `kin(v4, v12, #p1, #g1, #q1, #t1)`.
               *   The base needs to be at `#q5` for picking `v12` at `v13` and at `#q1` for placing `v12` at `#p1`.
           
           3.  **Place v14 on v16**:
               *   Pick `v14` from `v15` using `g0`. The `kin` for this is `kin(v4, v14, v15, #g0, #q2, #t2)`.
               *   Place `v14` at `#p0` using `g0`. The `kin` for this is `kin(v4, v14, #p0, #g0, #q0, #t0)`.
               *   The base needs to be at `#q2` for picking `v14` at `v15` and at `#q0` for placing `v14` at `#p0`.
           
           We must ensure `canmove()` is true for `move_base` actions, and that `handempty(v4)` is true before picking, and `atbconf` is correct for each action. The initial base configuration is `v3`.
           
           Let's plan the sequence considering base movements:
           
           *   **Move to pick `v14`**: From `v3` to `q2`.
           *   **Pick `v14`**:
           *   **Move to place `v14`**: From `q2` to `q0`.
           *   **Place `v14`**:
           *   **Move to pick `v12`**: From `q0` to `q5`.
           *   **Pick `v12`**:
           *   **Move to place `v12`**: From `q5` to `q1`.
           *   **Place `v12`**:
           *   **Move to pick `v8`**: From `q1` to `q4`.
           *   **Pick `v8`**:
           *   **Move to place `v8`**: From `q4` to `q3`.
           *   **Place `v8`**:
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v14 v15 #g0 #q2 #t2)
           (move_base #q2 #q0 #t10)
           (place v4 v14 #p0 #g0 #q0 #t0)
           (move_base #q0 #q5 #o0)
           (pick v4 v12 v13 #g1 #q5 #t8)
           (move_base #q5 #q1 #t13)
           (place v4 v12 #p1 #g1 #q1 #t1)
           (move_base #q1 #q4 #o0)
           (pick v4 v8 v9 #g2 #q4 #t7)
           (move_base #q4 #q3 #t11)
           (place v4 v8 #p2 #g2 #q3 #t6)

