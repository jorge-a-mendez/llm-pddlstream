User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v8, v17)
           Atom graspable(v12)
           Atom ataconf(v4, v5)
           Atom atpose(v15, v16)
           Atom ataconf(v6, v7)
           Atom controllable(v4)
           Atom stackable(v8, v10)
           Atom supported(v15, v16, v11)
           Atom aconf(v6, v7)
           Atom bconf(v3)
           Atom pose(v15, v16)
           Atom arm(v6)
           Atom graspable(v15)
           Atom stackable(v8, v18)
           Atom arm(v4)
           Atom atpose(v8, v9)
           Atom handempty(v4)
           Atom handempty(v6)
           Atom pose(v12, v13)
           Atom stackable(v12, v18)
           Atom canmove()
           Atom atbconf(v3)
           Atom supported(v12, v13, v14)
           Atom pose(v8, v9)
           Atom aconf(v4, v5)
           Atom stackable(v15, v10)
           Atom atpose(v12, v13)
           Atom supported(v8, v9, v11)
           Atom graspable(v8)
           Atom stackable(v12, v10)
           Atom type(v12, v17)
           Atom grasp(v12, #g0)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom grasp(v15, #o1)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, #p0, #g0, #q0, #t0)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q0 #t0))
           ((place v4 v12 #p0 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q1 #t1))
           ((place v4 v12 v13 #g0 #q1 #t1))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true. From the initial state, we know `type(v12, v17)`. So, `?green` should be `v12`. Therefore, the goal simplifies to `on(v12, v18)`. The `on` predicate is derived from `supported` and `atpose`. Specifically, `on(v12, v18)` means there exists a pose `p` such that `supported(v12, p, v18)` and `atpose(v12, p)`.
           
           Looking at the initial state, we have `atpose(v12, v13)` and `supported(v12, v13, v14)`. We also have `pose(v12, #p0)` and `supported(v12, #p0, v18)`. This means if we can place `v12` at `pose #p0`, the goal will be achieved.
           
           Currently, `v12` is at `v13`. We need to pick it up from `v13` and place it at `#p0`.
           
           The robot arm `v4` is `handempty` and `ataconf(v4, v5)`. The base is at `atbconf(v3)`.
           
           To pick `v12` from `v13` using arm `v4`, we have the action instance: `(pick v4 v12 v13 #g0 #q1 #t1)`. For this, `atbconf` needs to be `#q1`. We are currently at `v3`, so we need to move the base.
           `basemotion(v3, #t3, #q1)` and `(move_base v3 #q1 #t3)` allows us to move to `#q1`.
           
           After picking `v12`, `v4` will be holding `v12`. Then, to place `v12` at `#p0`, we have the action instance: `(place v4 v12 #p0 #g0 #q0 #t0)`. For this, `atbconf` needs to be `#q0`. We are currently at `#q1` after the pick.
           `basemotion(#q1, #o0, #q0)` and `(move_base #q1 #q0 #o0)` allows us to move to `#q0`.
           
           --Plan--:
           (move_base v3 #q1 #t3)
           (pick v4 v12 v13 #g0 #q1 #t1)
           (move_base #q1 #q0 #o0)
           (place v4 v12 #p0 #g0 #q0 #t0)

