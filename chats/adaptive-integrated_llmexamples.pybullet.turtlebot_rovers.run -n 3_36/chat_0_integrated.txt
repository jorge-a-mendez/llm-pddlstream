User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v13 is a base configuration with (x, y, theta) = (1.0, -1.75, 3.142).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.696, 2.022), (-0.621, 2.098)).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.986, 2.146), (2.07, 2.231)).
           Object v4 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.379, -1.36), (0.48, -1.259)).
           Object v3 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.775, -1.023), (0.867, -0.93)).
           Object v1 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.02, -0.404), (-0.929, -0.313)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.187, -1.929), (-0.821, -1.571)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.612, 1.092), (-1.471, 1.232)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.821, -1.929), (1.187, -1.571)).
           Object v7 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.203, 1.885), (1.309, 1.991)).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.381, 1.979), (0.473, 2.071)).
           Object v5 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.169, -0.818), (-2.032, -0.681)).
           Object v9 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.405, -2.346), (-1.395, -1.654)).
           Object v15 is a base configuration with (x, y, theta) = (-1.0, -1.75, 0.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom camera(v10)
           Atom lander(v9)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom type(v5, v6)
           Atom type(v8, v6)
           Atom onboard(v10, v12)
           Atom type(v1, v2)
           Atom rock(v3)
           Atom objective(v17)
           Atom rock(v5)
           Atom rock(v7)
           Atom rock(v8)
           Atom conf(v12, v13)
           Atom store(v16)
           Atom objective(v19)
           Atom mode(v11)
           Atom rock(v4)
           Atom supports(v10, v11)
           Atom free(v14, v16)
           Atom atconf(v12, v13)
           Atom onboard(v10, v14)
           Atom free(v12, v16)
           Atom objective(v18)
           Atom rover(v12)
           Atom conf(v14, v15)
           Atom type(v3, v2)
           Atom type(v4, v2)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #o5, v3)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v3)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be satisfied by various combinations of `atconf`, `free`, `receivedimage`, and `receivedanalysis` predicates.
           Since the initial state already contains `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)`, we need to achieve `receivedimage` for v17, v18, v19 with v11 mode, and `receivedanalysis` for v2 (stone) and v6 (soil) types. However, v2 and v6 are types, not specific rocks. The axiom implies that *some* stone and *some* soil rock must have been analyzed.
           From the initial state, we have rocks v1, v3, v4 (type v2, stone) and v5, v7, v8 (type v6, soil).
           We also have objectives v17, v18, v19.
           No `take_image` or `send_image` actions are provided in the allowed action instances, which means we cannot fulfill the `receivedimage` part of the goal. Similarly, no `sample_rock` or `send_analysis` actions are provided. This makes the goal unreachable given the available action instances.
           
           The goal `new-axiom@0()` includes:
           - `atconf(v12, v13)`: True in initial state.
           - `atconf(v14, v15)`: True in initial state.
           - `free(v12, v16)`: True in initial state.
           - `free(v14, v16)`: True in initial state.
           - `receivedimage(v17, v11)`: This needs to be achieved.
           - `receivedimage(v18, v11)`: This needs to be achieved.
           - `receivedimage(v19, v11)`: This needs to be achieved.
           - `type(?stone, v2)` and `receivedanalysis(?stone)`: This means for some object of type `v2` (stone), `receivedanalysis` must be true.
           - `type(?soil, v6)` and `receivedanalysis(?soil)`: This means for some object of type `v6` (soil), `receivedanalysis` must be true.
           
           To achieve `receivedimage`, we need to first `take_image` and then `send_image`. However, there are no `take_image` or `send_image` actions in the provided list of valid action instances.
           Similarly, to achieve `receivedanalysis`, we need to `sample_rock` and then `send_analysis`. Again, these actions are not in the provided list of valid action instances.
           
           Since the necessary actions to achieve `receivedimage` and `receivedanalysis` are not available, the goal is unreachable.

