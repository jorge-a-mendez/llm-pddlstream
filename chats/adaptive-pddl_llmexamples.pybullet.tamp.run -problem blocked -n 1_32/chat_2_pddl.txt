User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom arm(v6)
           Atom bconf(v3)
           Atom ataconf(v4, v5)
           Atom aconf(v4, v5)
           Atom stackable(v12, v18)
           Atom stackable(v8, v10)
           Atom type(v12, v17)
           Atom graspable(v15)
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom atpose(v8, v9)
           Atom atpose(v15, v16)
           Atom handempty(v6)
           Atom stackable(v12, v10)
           Atom canmove()
           Atom arm(v4)
           Atom type(v8, v17)
           Atom supported(v8, v9, v11)
           Atom atbconf(v3)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom handempty(v4)
           Atom controllable(v4)
           Atom ataconf(v6, v7)
           Atom atpose(v12, v13)
           Atom pose(v15, v16)
           Atom supported(v12, v13, v14)
           Atom aconf(v6, v7)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom stackable(v8, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom supported(v12, #o2, v18)
           Atom grasp(v12, #o1)
           Atom grasp(v8, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `new-axiom@0()`, which is an axiom representing the conjunction `on(?green, v18)` and `type(?green, v17)`. In the given initial state, `v12` is of `type(v12, v17)` and `v8` is also of `type(v8, v17)`. The objects `v12`, `v8`, and `v15` are graspable.
           
           Let's assume `?green` refers to `v12` or `v8`. To achieve `on(?green, v18)`, we need to place either `v12` or `v8` onto `v18`. Currently, `v12` is `atpose(v12, v13)` and `supported(v12, v13, v14)`. `v8` is `atpose(v8, v9)` and `supported(v8, v9, v11)`. Both `v12` and `v8` are stackable on `v18`.
           
           The robot has two arms, `v4` and `v6`. `v4` is currently at `ataconf(v4, v5)` and `handempty(v4)`. `v6` is at `ataconf(v6, v7)` and `handempty(v6)`. The robot's base is at `atbconf(v3)`.
           
           We need to pick an object of type `v17` (either `v12` or `v8`) and place it on `v18`. Let's choose `v12`.
           
           1. **Pick v12**: The robot arm `v4` can pick `v12` from its current pose `v13`. We need a base configuration `#o3` and a trajectory `#o4`. The action `(pick v4 v12 v13 #o1 #o3 #o4)` is available.
              * Preconditions:
                * `kin(v4, v12, v13, #o1, #o3, #o4)` - Given.
                * `atpose(v12, v13)` - Given.
                * `handempty(v4)` - Given.
                * `atbconf(#o3)` - Not `v3`. We need to move the base first if `#o3` is different from `v3`. The available `move_base` actions involve `v3` and `#o3`. If `#o3` is meant to be the base configuration for picking, we should move to it. However, the `pick` action has `atbconf(#o3)` as a precondition, and the initial state only has `atbconf(v3)`. We only have `basemotion(v3, #o0, #o3)` and `basemotion(#o3, #o0, v3)`. Let's assume that `#o3` needs to be achieved. So we must move to it.
                * `NegatedAtom unsafeapproach(v12, v13, #o1)` - No information to determine if this is true. Assuming it is false (safe).
                * `NegatedAtom unsafeatraj(#o4)` - No information to determine if this is true. Assuming it is false (safe).
           
           2. **Move to #o3**: The action `(move_base v3 #o3 #o0)` satisfies `atbconf(v3)` and `basemotion(v3, #o0, #o3)`.
           
           3. **Place v12 on v18**: After picking, `v4` will be holding `v12`. We need to place it on `v18`. For this, we need a pose `#o2` on `v18`. The action `(place v4 v12 #o2 #o1 #o3 #o4)` is available.
              * Preconditions:
                * `kin(v4, v12, #o2, #o1, #o3, #o4)` - Given.
                * `atgrasp(v4, v12, #o1)` - Achieved by `pick`.
                * `atbconf(#o3)` - Still true from previous move.
                * `NegatedAtom unsafepose(v12, #o2)` - Assuming false.
                * `NegatedAtom unsafeapproach(v12, #o2, #o1)` - Assuming false.
                * `NegatedAtom unsafeatraj(#o4)` - Assuming false.
              * Effects: `atpose(v12, #o2)` and `supported(v12, #o2, v18)` from axioms.
           
           Let's consider the initial `atbconf(v3)`. The `pick` action requires `atbconf(#o3)`. Therefore, we first need to move the base to `#o3`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)

