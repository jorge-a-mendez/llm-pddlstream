User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q1: object
           #q2: object
           #q6: object
           #q7: object
           #q8: object
           #t1: object
           #t10: object
           #t11: object
           #t15: object
           #t16: object
           #t17: object
           #t2: object
           #t6: object
           #t7: object
           #t8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom ~test-cfree-pose-pose-negative(v18, v25, v8, v21)
           Atom controllable(v4)
           Atom handempty(v6)
           Atom pose(v16, v17)
           Atom stackable(v14, v10)
           Atom supported(v12, v13, v11)
           Atom stackable(v12, v10)
           Atom arm(v4)
           Atom atpose(v18, v19)
           Atom supported(v14, v15, v11)
           Atom bconf(v3)
           Atom stackable(v18, v20)
           Atom stackable(v16, v20)
           Atom supported(v16, v17, v11)
           Atom stackable(v16, v10)
           Atom atpose(v16, v17)
           Atom ataconf(v6, v7)
           Atom stackable(v14, v20)
           Atom supported(v8, v9, v11)
           Atom graspable(v14)
           Atom canmove()
           Atom graspable(v18)
           Atom graspable(v12)
           Atom aconf(v6, v7)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom stackable(v8, v10)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom stackable(v12, v20)
           Atom ataconf(v4, v5)
           Atom stackable(v8, v20)
           Atom arm(v6)
           Atom pose(v14, v15)
           Atom graspable(v16)
           Atom graspable(v8)
           Atom atpose(v8, v9)
           Atom atpose(v14, v15)
           Atom atbconf(v3)
           Atom atpose(v12, v13)
           Atom stackable(v18, v10)
           Atom supported(v18, v19, v11)
           Atom pose(v18, v19)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v16, v23)
           Atom supported(v16, v23, v20)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom pose(v18, v25)
           Atom supported(v18, v25, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g1)
           Atom grasp(v16, #g4)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, v21)
           Atom supported(v8, v21, v20)
           Atom pose(v12, v22)
           Atom supported(v12, v22, v20)
           Atom grasp(v12, #g3)
           Atom grasp(v18, #g2)
           Atom grasp(v14, #g0)
           Atom pose(v14, v24)
           Atom supported(v14, v24, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, v9, #g1, #q1, #t1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v21, #g1, #o3, #o4)
           Atom kin(v4, v12, v22, #g3, #o3, #o4)
           Atom bconf(#q6)
           Atom atraj(#t6)
           Atom kin(v4, v12, v13, #g3, #q6, #t6)
           Atom bconf(#q7)
           Atom atraj(#t7)
           Atom kin(v4, v16, v17, #g4, #q7, #t7)
           Atom kin(v4, v16, v23, #g4, #o3, #o4)
           Atom kin(v4, v18, v25, #g2, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v18, v19, #g2, #q2, #t2)
           Atom bconf(#q8)
           Atom atraj(#t8)
           Atom kin(v4, v14, v15, #g0, #q8, #t8)
           Atom kin(v4, v14, v24, #g0, #o3, #o4)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q8, #o0, v3)
           Atom btraj(#t17)
           Atom basemotion(v3, #t17, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q7, #o0, #q2)
           Atom btraj(#t16)
           Atom basemotion(v3, #t16, #q7)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q6, #o0, v3)
           Atom btraj(#t15)
           Atom basemotion(v3, #t15, #q6)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q1)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q1, #o0, #q6)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v16, #o2, #g4, #o3, #o4)
           Atom kin(v4, v12, #o2, #g3, #o3, #o4)
           Atom kin(v4, v18, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q8, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q1 #t10))
           ((move_base v3 #q2 #t11))
           ((move_base v3 #q6 #t15))
           ((move_base v3 #q7 #t16))
           ((move_base v3 #q8 #t17))
           ((pick v4 v12 #o2 #g3 #o3 #o4))
           ((place v4 v12 #o2 #g3 #o3 #o4))
           ((pick v4 v12 v13 #g3 #q6 #t6))
           ((place v4 v12 v13 #g3 #q6 #t6))
           ((pick v4 v12 v22 #g3 #o3 #o4))
           ((place v4 v12 v22 #g3 #o3 #o4))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 v15 #g0 #q8 #t8))
           ((place v4 v14 v15 #g0 #q8 #t8))
           ((pick v4 v14 v24 #g0 #o3 #o4))
           ((place v4 v14 v24 #g0 #o3 #o4))
           ((pick v4 v16 #o2 #g4 #o3 #o4))
           ((place v4 v16 #o2 #g4 #o3 #o4))
           ((pick v4 v16 v17 #g4 #q7 #t7))
           ((place v4 v16 v17 #g4 #q7 #t7))
           ((pick v4 v16 v23 #g4 #o3 #o4))
           ((place v4 v16 v23 #g4 #o3 #o4))
           ((pick v4 v18 #o2 #g2 #o3 #o4))
           ((place v4 v18 #o2 #g2 #o3 #o4))
           ((pick v4 v18 v19 #g2 #q2 #t2))
           ((place v4 v18 v19 #g2 #q2 #t2))
           ((pick v4 v18 v25 #g2 #o3 #o4))
           ((place v4 v18 v25 #g2 #o3 #o4))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 v21 #g1 #o3 #o4))
           ((place v4 v8 v21 #g1 #o3 #o4))
           ((pick v4 v8 v9 #g1 #q1 #t1))
           ((place v4 v8 v9 #g1 #q1 #t1))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place all objects (v8, v12, v14, v16, v18) onto a surface represented by `v20`. This means for each object, the robot needs to pick it up from its current location and place it onto a pose supported by `v20`. The robot has arm `v4` and it's currently at base configuration `v3` and arm configuration `v5` (handempty).
           
           Let's break down the plan for each object:
           
           1.  **Object v8:**
               *   Currently at `v9` supported by `v11`. We want it at a pose supported by `v20`.
               *   There is a known pose `v21` for `v8` supported by `v20`.
               *   We can pick `v8` from `v9` using `(pick v4 v8 v9 #g1 #q1 #t1)` if the robot moves to `q1`.
               *   Then, we need to place `v8` at `v21` using `(place v4 v8 v21 #g1 #o3 #o4)` after moving to `o3`.
           
           2.  **Object v12:**
               *   Currently at `v13` supported by `v11`. We want it at a pose supported by `v20`.
               *   There is a known pose `v22` for `v12` supported by `v20`.
               *   We can pick `v12` from `v13` using `(pick v4 v12 v13 #g3 #q6 #t6)` if the robot moves to `q6`.
               *   Then, we need to place `v12` at `v22` using `(place v4 v12 v22 #g3 #o3 #o4)` after moving to `o3`.
           
           3.  **Object v14:**
               *   Currently at `v15` supported by `v11`. We want it at a pose supported by `v20`.
               *   There is a known pose `v24` for `v14` supported by `v20`.
               *   We can pick `v14` from `v15` using `(pick v4 v14 v15 #g0 #q8 #t8)` if the robot moves to `q8`.
               *   Then, we need to place `v14` at `v24` using `(place v4 v14 v24 #g0 #o3 #o4)` after moving to `o3`.
           
           4.  **Object v16:**
               *   Currently at `v17` supported by `v11`. We want it at a pose supported by `v20`.
               *   There is a known pose `v23` for `v16` supported by `v20`.
               *   We can pick `v16` from `v17` using `(pick v4 v16 v17 #g4 #q7 #t7)` if the robot moves to `q7`.
               *   Then, we need to place `v16` at `v23` using `(place v4 v16 v23 #g4 #o3 #o4)` after moving to `o3`.
           
           5.  **Object v18:**
               *   Currently at `v19` supported by `v11`. We want it at a pose supported by `v20`.
               *   There is a known pose `v25` for `v18` supported by `v20`.
               *   We can pick `v18` from `v19` using `(pick v4 v18 v19 #g2 #q2 #t2)` if the robot moves to `q2`.
               *   Then, we need to place `v18` at `v25` using `(place v4 v18 v25 #g2 #o3 #o4)` after moving to `o3`.
           
           The robot starts at `v3`. It needs to move to different `q` configurations for picking and then to `o3` for placing. It's more efficient to do all picks first, then move to `o3` and do all places. However, the actions require the base configuration `q` to be correct for both pick and place, and the `place` actions that lead to the goal state use `o3` as the base configuration. Therefore, the robot needs to go to the respective `q` for each pick, then move to `o3` to place the object.
           
           Since we need to move to `o3` to place each object, it is more efficient to move to `o3` once, and then sequentially place each object. However, the `pick` actions require different `q` values. So, the strategy will be: move to `q_pick`, pick, move to `o3`, place, move back to `v3` (or the next `q_pick`). It is simpler and valid to just switch `q` values as needed for each object.
           
           --Plan--:
           (move_base v3 #q1 #t10)
           (pick v4 v8 v9 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v8 v21 #g1 #o3 #o4)
           (move_base #o3 #q6 #o0)
           (pick v4 v12 v13 #g3 #q6 #t6)
           (move_base #q6 #o3 #o0)
           (place v4 v12 v22 #g3 #o3 #o4)
           (move_base #o3 #q8 #o0)
           (pick v4 v14 v15 #g0 #q8 #t8)
           (move_base #q8 #o3 #o0)
           (place v4 v14 v24 #g0 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v16 v17 #g4 #q7 #t7)
           (move_base #q7 #o3 #o0)
           (place v4 v16 v23 #g4 #o3 #o4)
           (move_base #o3 #q2 #o0)
           (pick v4 v18 v19 #g2 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v18 v25 #g2 #o3 #o4)

