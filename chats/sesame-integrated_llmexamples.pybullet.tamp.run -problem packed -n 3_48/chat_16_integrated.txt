User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g12: object
           #g13: object
           #g14: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p3: object
           #q30: object
           #q31: object
           #q32: object
           #q33: object
           #q34: object
           #q35: object
           #t83: object
           #t84: object
           #t85: object
           #t86: object
           #t87: object
           #t88: object
           #t89: object
           #t90: object
           #t91: object
           #t92: object
           #t93: object
           #t94: object
           @sink: object
           @stove: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p7 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v15 is a pose with position (-0.228, 0.117, 0.781) and quaternion (0.0, 0.0, -0.718, 0.696).
           Object v13 is a pose with position (0.019, -0.532, 0.781) and quaternion (0.0, 0.0, -0.143, 0.99).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p8 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p3 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p5 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.085), (0.035, -0.015)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, 0.015), (0.035, 0.085)).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (-0.08, 0.285, 0.781) and quaternion (0.0, 0.0, 0.166, 0.986).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p3)
           Atom supported(v8, p3, v16)
           Atom pose(v14, p5)
           Atom supported(v14, p5, v10)
           Atom supported(v14, p5, v16)
           Atom pose(v12, p4)
           Atom supported(v12, p4, v16)
           Atom supported(v12, p4, v10)
           Atom supported(v8, p3, v10)
           Atom kin(v32, v33, p3, v34, v35, v36)
           Atom kin(v32, v37, p4, v34, v35, v36)
           Atom kin(v32, v38, p5, v34, v35, v36)
           Atom pose(v8, p6)
           Atom supported(v8, p6, v10)
           Atom pose(v12, p7)
           Atom supported(v12, p7, v16)
           Atom supported(v12, p7, v10)
           Atom pose(v14, p8)
           Atom supported(v14, p8, v10)
           Atom supported(v14, p8, v16)
           Atom supported(v8, p6, v16)
           Atom kin(v32, v33, p6, v34, v35, v36)
           Atom kin(v32, v37, p7, v34, v35, v36)
           Atom kin(v32, v38, p8, v34, v35, v36)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v14, #p3)
           Atom supported(v14, #p3, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g14)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g12)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g13)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p8, #g14, #o3, #o4)
           Atom bconf(#q35)
           Atom atraj(#t88)
           Atom kin(v4, v14, v15, #g14, #q35, #t88)
           Atom kin(v4, v14, p5, #g14, #o3, #o4)
           Atom bconf(#q33)
           Atom atraj(#t86)
           Atom kin(v4, v14, #p3, #g14, #q33, #t86)
           Atom bconf(#q32)
           Atom atraj(#t85)
           Atom kin(v4, v8, p3, #g13, #q32, #t85)
           Atom kin(v4, v8, p6, #g13, #o3, #o4)
           Atom bconf(#q34)
           Atom atraj(#t87)
           Atom kin(v4, v8, v9, #g13, #q34, #t87)
           Atom bconf(#q31)
           Atom atraj(#t84)
           Atom kin(v4, v12, v13, #g12, #q31, #t84)
           Atom kin(v4, v12, p7, #g12, #o3, #o4)
           Atom bconf(#q30)
           Atom atraj(#t83)
           Atom kin(v4, v12, p4, #g12, #q30, #t83)
           Atom basemotion(#q31, #o0, v3)
           Atom btraj(#t90)
           Atom basemotion(v3, #t90, #q31)
           Atom basemotion(#q31, #o0, #q31)
           Atom basemotion(#q34, #o0, v3)
           Atom basemotion(#q34, #o0, #q34)
           Atom btraj(#t93)
           Atom basemotion(v3, #t93, #q34)
           Atom basemotion(#q31, #o0, #q34)
           Atom basemotion(#q34, #o0, #q31)
           Atom basemotion(#q35, #o0, #q34)
           Atom basemotion(#q35, #o0, v3)
           Atom basemotion(#q35, #o0, #q31)
           Atom basemotion(#q34, #o0, #q35)
           Atom btraj(#t94)
           Atom basemotion(v3, #t94, #q35)
           Atom basemotion(#q31, #o0, #q35)
           Atom basemotion(#q35, #o0, #q35)
           Atom basemotion(#q32, #o0, v3)
           Atom btraj(#t91)
           Atom basemotion(v3, #t91, #q32)
           Atom basemotion(#q32, #o0, #q32)
           Atom basemotion(#q34, #o0, #q32)
           Atom basemotion(#q32, #o0, #q34)
           Atom basemotion(#q31, #o0, #q32)
           Atom basemotion(#q32, #o0, #q31)
           Atom basemotion(#q35, #o0, #q32)
           Atom basemotion(#q32, #o0, #q35)
           Atom basemotion(#q30, #o0, #q32)
           Atom basemotion(#q30, #o0, #q34)
           Atom basemotion(#q30, #o0, v3)
           Atom basemotion(#q30, #o0, #q31)
           Atom basemotion(#q32, #o0, #q30)
           Atom basemotion(#q34, #o0, #q30)
           Atom btraj(#t89)
           Atom basemotion(v3, #t89, #q30)
           Atom basemotion(#q31, #o0, #q30)
           Atom basemotion(#q30, #o0, #q30)
           Atom basemotion(#q35, #o0, #q30)
           Atom basemotion(#q30, #o0, #q35)
           Atom basemotion(#q33, #o0, #q32)
           Atom basemotion(#q33, #o0, #q34)
           Atom basemotion(#q33, #o0, v3)
           Atom basemotion(#q33, #o0, #q31)
           Atom basemotion(#q33, #o0, #q35)
           Atom basemotion(#q33, #o0, #q30)
           Atom basemotion(#q33, #o0, #q33)
           Atom basemotion(#q32, #o0, #q33)
           Atom basemotion(#q34, #o0, #q33)
           Atom btraj(#t92)
           Atom basemotion(v3, #t92, #q33)
           Atom basemotion(#q31, #o0, #q33)
           Atom basemotion(#q35, #o0, #q33)
           Atom basemotion(#q30, #o0, #q33)
           Atom kin(v4, v14, #o2, #g14, #o3, #o4)
           Atom kin(v4, v8, #o2, #g13, #o3, #o4)
           Atom kin(v4, v12, #o2, #g12, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q32)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q32, #o0, #o3)
           Atom basemotion(#q34, #o0, #o3)
           Atom basemotion(#o3, #o0, #q34)
           Atom basemotion(#q31, #o0, #o3)
           Atom basemotion(#o3, #o0, #q31)
           Atom basemotion(#q30, #o0, #o3)
           Atom basemotion(#o3, #o0, #q30)
           Atom basemotion(#q35, #o0, #o3)
           Atom basemotion(#o3, #o0, #q35)
           Atom basemotion(#q33, #o0, #o3)
           Atom basemotion(#o3, #o0, #q33)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q30 #o0))
           ((move_base #o3 #q31 #o0))
           ((move_base #o3 #q32 #o0))
           ((move_base #o3 #q33 #o0))
           ((move_base #o3 #q34 #o0))
           ((move_base #o3 #q35 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q30 #o3 #o0))
           ((move_base #q30 #q30 #o0))
           ((move_base #q30 #q31 #o0))
           ((move_base #q30 #q32 #o0))
           ((move_base #q30 #q33 #o0))
           ((move_base #q30 #q34 #o0))
           ((move_base #q30 #q35 #o0))
           ((move_base #q30 v3 #o0))
           ((move_base #q31 #o3 #o0))
           ((move_base #q31 #q30 #o0))
           ((move_base #q31 #q31 #o0))
           ((move_base #q31 #q32 #o0))
           ((move_base #q31 #q33 #o0))
           ((move_base #q31 #q34 #o0))
           ((move_base #q31 #q35 #o0))
           ((move_base #q31 v3 #o0))
           ((move_base #q32 #o3 #o0))
           ((move_base #q32 #q30 #o0))
           ((move_base #q32 #q31 #o0))
           ((move_base #q32 #q32 #o0))
           ((move_base #q32 #q33 #o0))
           ((move_base #q32 #q34 #o0))
           ((move_base #q32 #q35 #o0))
           ((move_base #q32 v3 #o0))
           ((move_base #q33 #o3 #o0))
           ((move_base #q33 #q30 #o0))
           ((move_base #q33 #q31 #o0))
           ((move_base #q33 #q32 #o0))
           ((move_base #q33 #q33 #o0))
           ((move_base #q33 #q34 #o0))
           ((move_base #q33 #q35 #o0))
           ((move_base #q33 v3 #o0))
           ((move_base #q34 #o3 #o0))
           ((move_base #q34 #q30 #o0))
           ((move_base #q34 #q31 #o0))
           ((move_base #q34 #q32 #o0))
           ((move_base #q34 #q33 #o0))
           ((move_base #q34 #q34 #o0))
           ((move_base #q34 #q35 #o0))
           ((move_base #q34 v3 #o0))
           ((move_base #q35 #o3 #o0))
           ((move_base #q35 #q30 #o0))
           ((move_base #q35 #q31 #o0))
           ((move_base #q35 #q32 #o0))
           ((move_base #q35 #q33 #o0))
           ((move_base #q35 #q34 #o0))
           ((move_base #q35 #q35 #o0))
           ((move_base #q35 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q30 #t89))
           ((move_base v3 #q31 #t90))
           ((move_base v3 #q32 #t91))
           ((move_base v3 #q33 #t92))
           ((move_base v3 #q34 #t93))
           ((move_base v3 #q35 #t94))
           ((pick v4 v12 #o2 #g12 #o3 #o4))
           ((place v4 v12 #o2 #g12 #o3 #o4))
           ((pick v4 v12 p4 #g12 #q30 #t83))
           ((place v4 v12 p4 #g12 #q30 #t83))
           ((pick v4 v12 p7 #g12 #o3 #o4))
           ((place v4 v12 p7 #g12 #o3 #o4))
           ((pick v4 v12 v13 #g12 #q31 #t84))
           ((place v4 v12 v13 #g12 #q31 #t84))
           ((pick v4 v14 #o2 #g14 #o3 #o4))
           ((place v4 v14 #o2 #g14 #o3 #o4))
           ((pick v4 v14 #p3 #g14 #q33 #t86))
           ((place v4 v14 #p3 #g14 #q33 #t86))
           ((pick v4 v14 p5 #g14 #o3 #o4))
           ((place v4 v14 p5 #g14 #o3 #o4))
           ((pick v4 v14 p8 #g14 #o3 #o4))
           ((place v4 v14 p8 #g14 #o3 #o4))
           ((pick v4 v14 v15 #g14 #q35 #t88))
           ((place v4 v14 v15 #g14 #q35 #t88))
           ((pick v4 v8 #o2 #g13 #o3 #o4))
           ((place v4 v8 #o2 #g13 #o3 #o4))
           ((pick v4 v8 p3 #g13 #q32 #t85))
           ((place v4 v8 p3 #g13 #q32 #t85))
           ((pick v4 v8 p6 #g13 #o3 #o4))
           ((place v4 v8 p6 #g13 #o3 #o4))
           ((pick v4 v8 v9 #g13 #q34 #t87))
           ((place v4 v8 v9 #g13 #q34 #t87))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q24', '#t67'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g10', '#q24', '#t61'))
           Action(name='move_base', args=('#q24', '#q23', '#t70'))
           Action(name='place', args=('v4', 'v8', 'p3', '#g10', '#q23', '#t60'))
           Action(name='move_base', args=('#q23', '#q22', '#t72'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g9', '#q22', '#t59'))
           Action(name='move_base', args=('#q22', '#q28', '#t80'))
           Action(name='place', args=('v4', 'v12', 'p4', '#g9', '#q28', '#t78'))
           Action(name='move_base', args=('#q28', '#q25', '#t79'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g11', '#q25', '#t62'))
           Action(name='move_base', args=('#q25', '#q26', '#t73'))
           Action(name='place', args=('v4', 'v14', 'p8', '#g11', '#q26', '#t63'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v14', 'p8', 'v8', 'p3')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The goal is to place objects `v8`, `v12`, and `v14` on `v16`. Currently, `v8` is at `v9` on `v11`, `v12` is at `v13` on `v11`, and `v14` is at `v15` on `v11`. All target poses `p3`, `p4`, `p5`, `p6`, `p7`, `p8` are on `v10` and `v16`. Since `v16` has a smaller AABB than `v10` and we need to place three objects on `v16`, we need to use a new pose with '#' for at least one of them, as the existing poses are too close to each other or might collide. In the previous failed attempt, placing `v14` at `p8` and `v8` at `p3` caused a collision. We need to find collision-free poses for all three objects on `v16`.
           
           We will pick up `v8` from `v9` and place it at `p3` on `v16`.
           Then we pick up `v12` from `v13` and place it at `p4` on `v16`.
           Finally, we pick up `v14` from `v15` and place it at `p8` on `v16`.
           
           To ensure collision avoidance, we must carefully choose the continuous values for poses.
           The previous failure suggests that `p3` and `p8` may be too close to each other. We will try to place `v14` at a new pose `#o2` on `v16` to avoid collision.
           
           --Plan--:
           (move_base v3 #q34 #t93)
           (pick v4 v8 v9 #g13 #q34 #t87)
           (move_base #q34 #q32 #o0)
           (place v4 v8 p3 #g13 #q32 #t85)
           (move_base #q32 #q31 #o0)
           (pick v4 v12 v13 #g12 #q31 #t84)
           (move_base #q31 #q30 #o0)
           (place v4 v12 p4 #g12 #q30 #t83)
           (move_base #q30 #q35 #o0)
           (pick v4 v14 v15 #g14 #q35 #t88)
           (move_base #q35 #o3 #o0)
           (place v4 v14 #o2 #g14 #o3 #o4)
           
           --Poses--:
           (#o2 v14 v16): (0.0 0.1 0.782 0.0)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom on(v14, v16)`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal is to place objects `v8`, `v12`, and `v14` on `v16`. Currently, `v8` is at `v9` on `v11`, `v12` is at `v13` on `v11`, and `v14` is at `v15` on `v11`. All target poses `p3`, `p4`, `p5`, `p6`, `p7`, `p8` are on `v10` and `v16`.
           The previous plan failed to satisfy `on(v14, v16)` because the place action used a continuous parameter #o2 for v14, which was not properly defined to be supported by v16. However, looking at the initial state, `supported(v14, #o2, v10)` and `supported(v14, #o2, v16)` are already given, so the previous plan using `#o2` for `v14` should have been valid regarding the support. It seems the issue was not with the definition of `#o2` itself but potentially with the overall sequence or interactions leading to `on(v14,v16)` not being true at the end. The axiom for `on` states that `on(?o, ?r)` is true if `supported(?o, ?p, ?r)` AND `atpose(?o, ?p)` are true. The previous plan's place action for `v14` did result in `atpose(v14, #o2)`, and `supported(v14, #o2, v16)` is given in the initial state, so the `on(v14, v16)` should have been satisfied.
           
           Let's re-examine the poses available. There are multiple poses (p3, p4, p5, p6, p7, p8, #o2, #p3) that are supported by `v16`.
           `p3`, `p4`, `p6`, `p7`, `p8` are specified with continuous values. `#o2` and `#p3` are not.
           We need to place `v8`, `v12`, `v14` on `v16`. Let's use `p3`, `p4`, and `p8` for `v8`, `v12`, and `v14` respectively, as these are the poses that were available in the initial state and are also supported by `v16`. The previous failure stated "test-cfree-pose-pose:('v14', 'p8', 'v8', 'p3')->()", indicating a collision between v14 at p8 and v8 at p3. This means we cannot place v8 at p3 and v14 at p8 simultaneously.
           
           We will try placing them further apart:
           1. Pick `v8` from `v9` and place it on `p3` (on `v16`).
           2. Pick `v12` from `v13` and place it on `p7` (on `v16`).
           3. Pick `v14` from `v15` and place it on `p8` (on `v16`).
           This combination of `p3`, `p7`, `p8` should avoid collision, as they are distinct poses.
           
           --Plan--:
           (move_base v3 #q34 #t93)
           (pick v4 v8 v9 #g13 #q34 #t87)
           (move_base #q34 #q32 #o0)
           (place v4 v8 p3 #g13 #q32 #t85)
           (move_base #q32 #q31 #o0)
           (pick v4 v12 v13 #g12 #q31 #t84)
           (move_base #q31 #o3 #o0)
           (place v4 v12 p7 #g12 #o3 #o4)
           (move_base #o3 #q35 #o0)
           (pick v4 v14 v15 #g14 #q35 #t88)
           (move_base #q35 #o3 #o0)
           (place v4 v14 p8 #g14 #o3 #o4)

