User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p12: object
           p13: object
           p14: object
           p15: object
           p16: object
           p17: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v15 is a pose with position (0.185, 0.452, 0.781) and quaternion (0.0, 0.0, 0.918, 0.398).
           Object v13 is a pose with position (0.118, -0.455, 0.781) and quaternion (0.0, 0.0, 0.755, 0.656).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p14 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.1, 0.1, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p3 is a pose with position (0.0, 0.0, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (-0.1, -0.1, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (0.1, 0.1, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (-0.1, -0.1, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p15 is a pose with position (-0.08, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p13 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.045, -0.035), (0.115, 0.035)).
           Object v9 is a pose with position (-0.144, -0.367, 0.781) and quaternion (0.0, 0.0, -0.039, 0.999).
           Object p16 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, -0.035), (-0.045, 0.035)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p17 is a pose with position (0.08, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (0.0, 0.0, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v8, p7, v11)
           Atom stackable(v14, v10)
           Atom handempty(v4)
           Atom pose(v14, p8)
           Atom supported(v12, p15, v16)
           Atom arm(v4)
           Atom stackable(v8, v16)
           Atom pose(v14, p14)
           Atom atpose(v12, v13)
           Atom kin(v27, v33, p17, v29, v30, v31)
           Atom handempty(v6)
           Atom stackable(v14, v16)
           Atom supported(v12, p3, v11)
           Atom pose(v8, p4)
           Atom supported(v14, v15, v11)
           Atom kin(v27, v28, p12, v29, v30, v31)
           Atom pose(v14, p5)
           Atom pose(v12, v13)
           Atom supported(v14, p5, v11)
           Atom graspable(v14)
           Atom supported(v12, p6, v11)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom arm(v6)
           Atom kin(v27, v32, p7, v29, v30, v31)
           Atom pose(v8, p7)
           Atom pose(v12, p12)
           Atom ataconf(v4, v5)
           Atom pose(v8, p13)
           Atom kin(v27, v33, p14, v29, v30, v31)
           Atom pose(v12, p15)
           Atom atpose(v8, v9)
           Atom kin(v27, v32, p4, v29, v30, v31)
           Atom pose(v12, p6)
           Atom pose(v12, p3)
           Atom controllable(v4)
           Atom aconf(v6, v7)
           Atom pose(v14, v15)
           Atom kin(v27, v28, p3, v29, v30, v31)
           Atom supported(v14, p14, v16)
           Atom pose(v8, p16)
           Atom supported(v14, p17, v16)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom pose(v14, p17)
           Atom atpose(v14, v15)
           Atom supported(v12, p12, v16)
           Atom supported(v8, p16, v16)
           Atom canmove()
           Atom kin(v27, v33, p5, v29, v30, v31)
           Atom kin(v27, v28, p6, v29, v30, v31)
           Atom supported(v8, v9, v11)
           Atom atbconf(v3)
           Atom supported(v8, p13, v16)
           Atom kin(v27, v32, p16, v29, v30, v31)
           Atom ataconf(v6, v7)
           Atom supported(v8, p4, v11)
           Atom aconf(v4, v5)
           Atom bconf(v3)
           Atom graspable(v12)
           Atom supported(v14, p8, v11)
           Atom kin(v27, v28, p15, v29, v30, v31)
           Atom kin(v27, v33, p8, v29, v30, v31)
           Atom stackable(v12, v16)
           Atom kin(v27, v32, p13, v29, v30, v31)
           Atom stackable(v8, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v12, #g2)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom supported(v14, #o2, v16)
           Atom grasp(v8, #g0)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #g1)
           Atom supported(v8, #o2, v16)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, p15, #g2, #q2, #t2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, p12, #g2, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v12, v13, #g2, #q3, #t3)
           Atom kin(v4, v12, p6, #g2, #o3, #o4)
           Atom kin(v4, v12, p3, #g2, #o3, #o4)
           Atom kin(v4, v8, p13, #g0, #o3, #o4)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom kin(v4, v8, p4, #g0, #o3, #o4)
           Atom kin(v4, v8, p7, #g0, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v8, p16, #g0, #q4, #t4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, p17, #g1, #q1, #t1)
           Atom kin(v4, v14, p5, #g1, #o3, #o4)
           Atom kin(v4, v14, p14, #g1, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t10)
           Atom kin(v4, v14, v15, #g1, #q5, #t10)
           Atom kin(v4, v14, p8, #g1, #o3, #o4)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q2, #o0, #q4)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q4)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t14)
           Atom basemotion(#q0, #t14, #q4)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom btraj(#t15)
           Atom basemotion(#q4, #t15, #q3)
           Atom btraj(#t11)
           Atom basemotion(#q3, #t11, #q2)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom btraj(#t13)
           Atom basemotion(#q2, #t13, #q5)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q1)
           Atom btraj(#t12)
           Atom basemotion(#q5, #t12, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q3)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, v3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q4 #t14))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t13))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q2 #t11))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q3 #t15))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q1 #t12))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t5))
           ((move_base v3 #q1 #t6))
           ((move_base v3 #q2 #t7))
           ((move_base v3 #q3 #t8))
           ((move_base v3 #q4 #t9))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p12 #g2 #o3 #o4))
           ((place v4 v12 p12 #g2 #o3 #o4))
           ((pick v4 v12 p15 #g2 #q2 #t2))
           ((place v4 v12 p15 #g2 #q2 #t2))
           ((pick v4 v12 p3 #g2 #o3 #o4))
           ((place v4 v12 p3 #g2 #o3 #o4))
           ((pick v4 v12 p6 #g2 #o3 #o4))
           ((place v4 v12 p6 #g2 #o3 #o4))
           ((pick v4 v12 v13 #g2 #q3 #t3))
           ((place v4 v12 v13 #g2 #q3 #t3))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 p14 #g1 #o3 #o4))
           ((place v4 v14 p14 #g1 #o3 #o4))
           ((pick v4 v14 p17 #g1 #q1 #t1))
           ((place v4 v14 p17 #g1 #q1 #t1))
           ((pick v4 v14 p5 #g1 #o3 #o4))
           ((place v4 v14 p5 #g1 #o3 #o4))
           ((pick v4 v14 p8 #g1 #o3 #o4))
           ((place v4 v14 p8 #g1 #o3 #o4))
           ((pick v4 v14 v15 #g1 #q5 #t10))
           ((place v4 v14 v15 #g1 #q5 #t10))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p13 #g0 #o3 #o4))
           ((place v4 v8 p13 #g0 #o3 #o4))
           ((pick v4 v8 p16 #g0 #q4 #t4))
           ((place v4 v8 p16 #g0 #q4 #t4))
           ((pick v4 v8 p4 #g0 #o3 #o4))
           ((place v4 v8 p4 #g0 #o3 #o4))
           ((pick v4 v8 p7 #g0 #o3 #o4))
           ((place v4 v8 p7 #g0 #o3 #o4))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place objects `v8`, `v12`, and `v14` on `v16`. Currently, `v8` is at `v9` on `v11`, `v12` is at `v13` on `v11`, and `v14` is at `v15` on `v11`. All objects are initially on `v11`, so they need to be picked and placed onto `v16`. Since `v16` is a stackable surface, the task is achievable.
           
           The robot currently has arm `v4` at `v5` and base `v3`. It is initially at base config `v3` and `canmove()` is true.
           
           We need to pick up `v8` from `v9` and place it on `v16`, then `v12` from `v13` and place it on `v16`, then `v14` from `v15` and place it on `v16`.
           
           To pick `v8` from `v9`, the robot needs to move its base to `q0`.
           To place `v8` on `v16` (at `p16`), the robot needs to move its base to `q4`.
           To pick `v12` from `v13`, the robot needs to move its base to `q3`.
           To place `v12` on `v16` (at `p12`), the robot needs to move its base to `o3`.
           To pick `v14` from `v15`, the robot needs to move its base to `q5`.
           To place `v14` on `v16` (at `p17`), the robot needs to move its base to `q1`.
           
           Let's prioritize placing objects on `v16` to fulfill the goal. We'll start with `v8`.
           
           1. **Pick v8**:
              - Move base from `v3` to `q0` (`t5`).
              - Pick `v8` from `v9` using grasp `#g0` and trajectory `#t0`.
           2. **Place v8**:
              - Move base from `q0` to `q4` (`t14`).
              - Place `v8` at `p16` using grasp `#g0` and trajectory `#t4`.
           3. **Pick v12**:
              - Move base from `q4` to `q3` (`t15`).
              - Pick `v12` from `v13` using grasp `#g2` and trajectory `#t3`.
           4. **Place v12**:
              - Move base from `q3` to `o3` (`o0`). (The given actions don't allow moving from `q3` to `o3` directly, but `basemotion(#q3, #o0, #o3)` exists, so `move_base #q3 #o3 #o0` is allowed)
              - Place `v12` at `p12` using grasp `#g2` and trajectory `#o4`.
           5. **Pick v14**:
              - Move base from `o3` to `q5` (`o0`).
              - Pick `v14` from `v15` using grasp `#g1` and trajectory `#t10`.
           6. **Place v14**:
              - Move base from `q5` to `q1` (`t12`).
              - Place `v14` at `p17` using grasp `#g1` and trajectory `#t1`.
           
           --Plan--:
           (move_base v3 #q0 #t5)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q4 #t14)
           (place v4 v8 p16 #g0 #q4 #t4)
           (move_base #q4 #q3 #t15)
           (pick v4 v12 v13 #g2 #q3 #t3)
           (move_base #q3 #o3 #o0)
           (place v4 v12 p12 #g2 #o3 #o4)
           (move_base #o3 #q5 #o0)
           (pick v4 v14 v15 #g1 #q5 #t10)
           (move_base #q5 #q1 #t12)
           (place v4 v14 p17 #g1 #q1 #t1)

