User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v8, v6)
           Atom rock(v8)
           Atom objective(v18)
           Atom rover(v14)
           Atom rock(v5)
           Atom rock(v1)
           Atom free(v12, v16)
           Atom free(v14, v16)
           Atom conf(v14, v15)
           Atom type(v7, v6)
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom atconf(v12, v13)
           Atom rock(v4)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom type(v1, v2)
           Atom rock(v3)
           Atom type(v5, v6)
           Atom onboard(v10, v14)
           Atom rover(v12)
           Atom type(v3, v2)
           Atom objective(v17)
           Atom store(v16)
           Atom lander(v9)
           Atom supports(v10, v11)
           Atom conf(v12, v13)
           Atom rock(v7)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q11, v8)
           Atom conf(v12, #q11)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q4, #y3, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q3, #y2, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #q12, v4)
           Atom conf(v12, #q12)
           Atom above(v12, #q9, v1)
           Atom conf(v12, #q9)
           Atom above(v12, #o5, v3)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom above(v14, #q5, v8)
           Atom conf(v14, #q5)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom above(v14, #q1, v4)
           Atom conf(v14, #q1)
           Atom above(v14, #o5, v3)
           Atom above(v14, #q6, v1)
           Atom conf(v14, #q6)
           Atom imagevisible(v14, #q10, #y5, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y5)
           Atom above(v14, #o5, v5)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q7, #y4, v18)
           Atom imagerange(v14, #q7, v18)
           Atom conf(v14, #q7)
           Atom ray(#y4)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #t13, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t27, #q12)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q12, #t26, #q4)
           Atom motion(v12, #q4, #t4, v13)
           Atom motion(v12, #q3, #t7, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q3, #t18, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q8, #t17, #q4)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q4, #t23, #q9)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, v13, #t20, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #t19, #q4)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q4, #t11, #q0)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q0, #t6, #q4)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q3, #t14, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q4, #t24, #q11)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, v15, #t21, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q2, #t3, v15)
           Atom motion(v14, #q2, #t9, #q5)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q5, #t8, #q2)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, v15, #t12, #q6)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #t10, #q2)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q10, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q10)
           Atom motion(v14, v15, #t5, #q1)
           Atom motion(v14, #q1, #t1, #q2)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q2, #t2, #q1)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q7, #t15, #q6)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q10, #t22, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #t25, #q2)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, v15, #t16, #q7)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q12 v4 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v12 #q9 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q1 v4 v16))
           ((sample_rock v14 #q5 v8 v16))
           ((sample_rock v14 #q6 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t6 #q4))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t26 #q4))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t14 #q0))
           ((move v12 #q3 #t18 #q8))
           ((move v12 #q3 #t7 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #t11 #q0))
           ((move v12 #q4 #t23 #q9))
           ((move v12 #q4 #t24 #q11))
           ((move v12 #q4 #t4 v13))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t17 #q4))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t19 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t13 #q3))
           ((move v12 v13 #t20 #q9))
           ((move v12 v13 #t27 #q12))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q10))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q2))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q1))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t22 #q7))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #t2 #q1))
           ((move v14 #q2 #t3 v15))
           ((move v14 #q2 #t9 #q5))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t8 #q2))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t10 #q2))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t15 #q6))
           ((move v14 #q7 #t25 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q6))
           ((move v14 v15 #t16 #q7))
           ((move v14 v15 #t21 #q10))
           ((move v14 v15 #t5 #q1))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q3 #y2 v17 v10))
           ((calibrate v14 #q10 #y5 v17 v10))
           ((calibrate v14 #q7 #y4 v18 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q3 #y2 v17 v10 v11))
           ((take_image v14 #q10 #y5 v17 v10 v11))
           ((take_image v14 #q7 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y3 v9 v3))
           ((send_analysis v12 #q4 #y3 v9 v7))
           ((send_analysis v12 #q4 #y3 v9 v8))
           ((send_analysis v12 #q4 #y3 v9 v4))
           ((send_analysis v12 #q4 #y3 v9 v5))
           ((send_analysis v12 #q4 #y3 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_image v12 #q4 #y3 v9 v18 v11))
           ((send_image v12 #q4 #y3 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **The Plan for new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal is `new-axiom@0()`, a conjunction of several conditions. My job is to craft a plan to make them all true. Here's what I'm thinking:
           
           First, let's look at the conditions. I see I need to achieve the following:
           
           *   **Images:** `receivedimage(v17, v11)` and `receivedimage(v18, v11)`. I get it. Rover 1 needs to image the one thing, and Rover 2 needs to image the other.
           *   **Analyses:** `receivedanalysis(?stone)` and `receivedanalysis(?soil)`. I have to analyze a stone and soil sample.
           *   **Initial Configuration**: `atconf(v12, v13)` and `atconf(v14, v15)`, and also `free(v12, v16)` and `free(v14, v16)`.  The first two mean the rovers need to end up in their original positions. The second two mean I need them to have free storage.
           
           I've got two rovers: `v12` and `v14`, and I can use them to achieve the subgoals.
           
           **Let's plan this out:**
           
           1.  **Rover `v12`**: I'll have it:
               *   Image `v17` and send the image.
               *   Sample stone `v4`, analyze it, send the analysis, then drop the sample (to satisfy `free(v12, v16)`).
               *   Return to `v13`.
           2.  **Rover `v14`**: I'll have it:
               *   Image `v18` and send the image.
               *   Sample soil `v8`, analyze it, send the analysis, then drop the sample (to satisfy `free(v14, v16)`).
               *   Return to `v15`.
           
           **Here's the detailed sequence of actions I'll create:**
           
           **Rover v12 operations:**
           1.  Move from `v13` to ` #q3`.
           2.  Calibrate camera `v10`
           3.  Take image of `v17`.
           4.  Move to communication point `q4`.
           5.  Send image of `v17`.
           6.  Move from comm point `#q4` to `#q12` (sampling location).
           7.  Sample the rock `v4` and store it in `v16`.
           8.  Move from `#q12` back to communication point `#q4`.
           9.  Send analysis of `v4`.
           10. Drop `v16`.
           11. Return to `v13`.
           
           **Rover v14 operations:**
           1.  Move from `v15` to `#q7`.
           2.  Calibrate camera `v10`.
           3.  Take image of `v18`.
           4.  Move to communication point `#q2`.
           5.  Send image of `v18`.
           6.  Move from comm point `#q2` to `#q5` (sampling location).
           7.  Sample rock `v8`.
           8.  Move from `#q5` back to communication point `#q2`.
           9.  Send analysis of `v8`.
           10. Drop `v16`.
           11. Return to `v15`.
           
           I can execute the two plans simultaneously as long as I have the information that the communications are visible.
           The most important thing here are that these actions are valid, meet preconditions, and result in a state that satisfies the goals in `new-axiom@0()`.
           
)

Model:     **The Plan for new-axiom@0()**
           
           Alright, let's break this down. The ultimate goal is `new-axiom@0()`, a conjunction of several conditions. My job is to craft a plan to make them all true. Here's what I'm thinking:
           
           First, let's look at the conditions. I see I need to achieve the following:
           
           *   **Images:** `receivedimage(v17, v11)` and `receivedimage(v18, v11)`. I get it. Rover 1 needs to image the one thing, and Rover 2 needs to image the other.
           *   **Analyses:** `receivedanalysis(?stone)` and `receivedanalysis(?soil)`. I have to analyze a stone and soil sample.
           *   **Initial Configuration**: `atconf(v12, v13)` and `atconf(v14, v15)`, and also `free(v12, v16)` and `free(v14, v16)`.  The first two mean the rovers need to end up in their original positions. The second two mean I need them to have free storage.
           
           I've got two rovers: `v12` and `v14`, and I can use them to achieve the subgoals.
           
           **Let's plan this out:**
           
           1.  **Rover `v12`**: I'll have it:
               *   Image `v17` and send the image.
               *   Sample stone `v4`, analyze it, send the analysis, then drop the sample (to satisfy `free(v12, v16)`).
               *   Return to `v13`.
           2.  **Rover `v14`**: I'll have it:
               *   Image `v18` and send the image.
               *   Sample soil `v8`, analyze it, send the analysis, then drop the sample (to satisfy `free(v14, v16)`).
               *   Return to `v15`.
           
           **Here's the detailed sequence of actions I'll create:**
           
           **Rover v12 operations:**
           1.  Move from `v13` to ` #q3`.
           2.  Calibrate camera `v10`
           3.  Take image of `v17`.
           4.  Move to communication point `q4`.
           5.  Send image of `v17`.
           6.  Move from comm point `#q4` to `#q12` (sampling location).
           7.  Sample the rock `v4` and store it in `v16`.
           8.  Move from `#q12` back to communication point `#q4`.
           9.  Send analysis of `v4`.
           10. Drop `v16`.
           11. Return to `v13`.
           
           **Rover v14 operations:**
           1.  Move from `v15` to `#q7`.
           2.  Calibrate camera `v10`.
           3.  Take image of `v18`.
           4.  Move to communication point `#q2`.
           5.  Send image of `v18`.
           6.  Move from comm point `#q2` to `#q5` (sampling location).
           7.  Sample rock `v8`.
           8.  Move from `#q5` back to communication point `#q2`.
           9.  Send analysis of `v8`.
           10. Drop `v16`.
           11. Return to `v15`.
           
           I can execute the two plans simultaneously as long as I have the information that the communications are visible.
           The most important thing here are that these actions are valid, meet preconditions, and result in a state that satisfies the goals in `new-axiom@0()`.
           

