User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q19: object
           #q2: object
           #q3: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t11: object
           #t12: object
           #t15: object
           #t16: object
           #t2: object
           #t20: object
           #t22: object
           #t23: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t39: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t50: object
           #t51: object
           #t52: object
           #t53: object
           #t54: object
           #t6: object
           #t7: object
           #t8: object
           #y0: object
           #y1: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rover(v12)
           Atom free(v14, v16)
           Atom rock(v4)
           Atom atconf(v14, v15)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom lander(v9)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom objective(v17)
           Atom free(v12, v16)
           Atom conf(v12, v13)
           Atom rock(v7)
           Atom type(v3, v2)
           Atom rock(v1)
           Atom atconf(v12, v13)
           Atom type(v8, v6)
           Atom store(v16)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom type(v5, v6)
           Atom objective(v19)
           Atom rock(v5)
           Atom rock(v3)
           Atom type(v4, v2)
           Atom objective(v18)
           Atom type(v1, v2)
           Atom camera(v10)
           Atom onboard(v10, v12)
           Atom rock(v8)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q11, v7)
           Atom conf(v14, #q11)
           Atom imagevisible(v14, #q7, #y5, v18)
           Atom imagerange(v14, #q7, v18)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q12, #y7, v19)
           Atom imagerange(v14, #q12, v19)
           Atom conf(v14, #q12)
           Atom ray(#y7)
           Atom above(v14, #q3, v1)
           Atom conf(v14, #q3)
           Atom above(v14, #q9, v8)
           Atom conf(v14, #q9)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom above(v14, #q13, v3)
           Atom conf(v14, #q13)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q8, #y6, v17)
           Atom imagerange(v14, #q8, v17)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom above(v12, #q15, v8)
           Atom conf(v12, #q15)
           Atom above(v12, #q16, v3)
           Atom conf(v12, #q16)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q18, v7)
           Atom conf(v12, #q18)
           Atom imagevisible(v12, #q5, #y3, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q17, v1)
           Atom conf(v12, #q17)
           Atom imagevisible(v12, #q1, #y0, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #q19, v5)
           Atom conf(v12, #q19)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom above(v14, #q10, v4)
           Atom conf(v14, #q10)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, v15, #t12, #q7)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, v13, #t23, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q2, #t11, v13)
           Atom motion(v12, #q2, #t45, #q15)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q15, #t42, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q7, #t29, #q8)
           Atom motion(v14, #q8, #t27, #q7)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, v15, #t2, #q0)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v12, v13, #t22, #q14)
           Atom motion(v12, #q2, #t44, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #t20, #q2)
           Atom motion(v12, #q14, #t51, #q15)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #t15, #q0)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, v13, #t6, #q1)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q0, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, #q0, #t16, #q3)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, v15, #t3, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q3, #t28, #q0)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q17)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, v13, #o2, #q17)
           Atom motion(v12, #q1, #o2, #q17)
           Atom motion(v12, #q15, #o2, #q17)
           Atom motion(v12, #q17, #t47, #q2)
           Atom motion(v12, #q14, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q1)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q14)
           Atom motion(v12, #q17, #o2, #q15)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q2, #t35, #q5)
           Atom motion(v12, #q5, #t32, #q2)
           Atom motion(v12, #q17, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q17)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, v13, #t7, #q5)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q8, #t31, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q7, #t26, #q12)
           Atom motion(v14, #q12, #o2, #q0)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v12, #q18, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q18)
           Atom motion(v12, #q18, #o2, v13)
           Atom motion(v12, #q15, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q18)
           Atom motion(v12, #q18, #t48, #q2)
           Atom motion(v12, #q18, #o2, #q14)
           Atom motion(v12, #q18, #o2, #q1)
           Atom motion(v12, #q18, #o2, #q17)
           Atom motion(v12, #q18, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q18)
           Atom motion(v12, v13, #o2, #q18)
           Atom motion(v12, #q14, #o2, #q18)
           Atom motion(v12, #q2, #o2, #q18)
           Atom motion(v12, #q17, #t53, #q18)
           Atom motion(v12, #q19, #o2, #q15)
           Atom motion(v12, #q18, #t50, #q19)
           Atom motion(v12, #q19, #o2, #q1)
           Atom motion(v12, #q19, #o2, v13)
           Atom motion(v12, #q15, #o2, #q19)
           Atom motion(v12, #q19, #o2, #q18)
           Atom motion(v12, #q17, #o2, #q19)
           Atom motion(v12, #q14, #o2, #q19)
           Atom motion(v12, #q19, #o2, #q19)
           Atom motion(v12, #q5, #o2, #q19)
           Atom motion(v12, #q19, #t54, #q2)
           Atom motion(v12, #q1, #o2, #q19)
           Atom motion(v12, #q19, #o2, #q17)
           Atom motion(v12, #q2, #o2, #q19)
           Atom motion(v12, #q19, #o2, #q14)
           Atom motion(v12, v13, #o2, #q19)
           Atom motion(v12, #q19, #o2, #q5)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q2, #t33, #q6)
           Atom motion(v12, #q18, #o2, #q6)
           Atom motion(v12, #q6, #t34, #q2)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q19, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q18)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q19)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #t36, #q5)
           Atom motion(v12, v13, #t8, #q6)
           Atom motion(v12, #q17, #o2, #q6)
           Atom motion(v12, #q1, #t39, #q6)
           Atom motion(v12, #q6, #o2, #q17)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q17, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q1)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q5, #o2, #q16)
           Atom motion(v12, #q6, #o2, #q16)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q16, #o2, #q5)
           Atom motion(v12, #q18, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q19)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q18)
           Atom motion(v12, #q15, #t52, #q16)
           Atom motion(v12, #q19, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q6)
           Atom motion(v12, #q16, #t46, #q2)
           Atom motion(v12, #q16, #t49, #q17)
           Atom motion(v12, #q2, #t43, #q16)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q15 v8 v16))
           ((sample_rock v12 #q16 v3 v16))
           ((sample_rock v12 #q17 v1 v16))
           ((sample_rock v12 #q18 v7 v16))
           ((sample_rock v12 #q19 v5 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((sample_rock v14 #q10 v4 v16))
           ((sample_rock v14 #q11 v7 v16))
           ((sample_rock v14 #q13 v3 v16))
           ((sample_rock v14 #q3 v1 v16))
           ((sample_rock v14 #q9 v8 v16))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q16))
           ((move v12 #q1 #o2 #q17))
           ((move v12 #q1 #o2 #q18))
           ((move v12 #q1 #o2 #q19))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q1 #t39 #q6))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 #q17))
           ((move v12 #q14 #o2 #q18))
           ((move v12 #q14 #o2 #q19))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t20 #q2))
           ((move v12 #q14 #t51 #q15))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q17))
           ((move v12 #q15 #o2 #q18))
           ((move v12 #q15 #o2 #q19))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t42 #q2))
           ((move v12 #q15 #t52 #q16))
           ((move v12 #q16 #o2 #q1))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q18))
           ((move v12 #q16 #o2 #q19))
           ((move v12 #q16 #o2 #q5))
           ((move v12 #q16 #o2 #q6))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q16 #t46 #q2))
           ((move v12 #q16 #t49 #q17))
           ((move v12 #q17 #o2 #q1))
           ((move v12 #q17 #o2 #q14))
           ((move v12 #q17 #o2 #q15))
           ((move v12 #q17 #o2 #q16))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q19))
           ((move v12 #q17 #o2 #q5))
           ((move v12 #q17 #o2 #q6))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q17 #t47 #q2))
           ((move v12 #q17 #t53 #q18))
           ((move v12 #q18 #o2 #q1))
           ((move v12 #q18 #o2 #q14))
           ((move v12 #q18 #o2 #q15))
           ((move v12 #q18 #o2 #q16))
           ((move v12 #q18 #o2 #q17))
           ((move v12 #q18 #o2 #q18))
           ((move v12 #q18 #o2 #q5))
           ((move v12 #q18 #o2 #q6))
           ((move v12 #q18 #o2 v13))
           ((move v12 #q18 #t48 #q2))
           ((move v12 #q18 #t50 #q19))
           ((move v12 #q19 #o2 #q1))
           ((move v12 #q19 #o2 #q14))
           ((move v12 #q19 #o2 #q15))
           ((move v12 #q19 #o2 #q16))
           ((move v12 #q19 #o2 #q17))
           ((move v12 #q19 #o2 #q18))
           ((move v12 #q19 #o2 #q19))
           ((move v12 #q19 #o2 #q5))
           ((move v12 #q19 #o2 #q6))
           ((move v12 #q19 #o2 v13))
           ((move v12 #q19 #t54 #q2))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q17))
           ((move v12 #q2 #o2 #q18))
           ((move v12 #q2 #o2 #q19))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #t11 v13))
           ((move v12 #q2 #t33 #q6))
           ((move v12 #q2 #t35 #q5))
           ((move v12 #q2 #t43 #q16))
           ((move v12 #q2 #t44 #q14))
           ((move v12 #q2 #t45 #q15))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q16))
           ((move v12 #q5 #o2 #q17))
           ((move v12 #q5 #o2 #q18))
           ((move v12 #q5 #o2 #q19))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t32 #q2))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q16))
           ((move v12 #q6 #o2 #q17))
           ((move v12 #q6 #o2 #q18))
           ((move v12 #q6 #o2 #q19))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t34 #q2))
           ((move v12 #q6 #t36 #q5))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q18))
           ((move v12 v13 #o2 #q19))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t22 #q14))
           ((move v12 v13 #t23 #q15))
           ((move v12 v13 #t6 #q1))
           ((move v12 v13 #t7 #q5))
           ((move v12 v13 #t8 #q6))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q10))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t16 #q3))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t28 #q0))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t26 #q12))
           ((move v14 #q7 #t29 #q8))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t27 #q7))
           ((move v14 #q8 #t31 #q12))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t15 #q0))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q7))
           ((move v14 v15 #t2 #q0))
           ((move v14 v15 #t3 #q3))
           ((calibrate v12 #q1 #y0 v17 v10))
           ((calibrate v12 #q5 #y3 v19 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q12 #y7 v19 v10))
           ((calibrate v14 #q7 #y5 v18 v10))
           ((calibrate v14 #q8 #y6 v17 v10))
           ((take_image v12 #q1 #y0 v17 v10 v11))
           ((take_image v12 #q5 #y3 v19 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q12 #y7 v19 v10 v11))
           ((take_image v14 #q7 #y5 v18 v10 v11))
           ((take_image v14 #q8 #y6 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((drop_rock v14 v16))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, both equipped with a camera (v10) that supports mode v11. They both have access to a store (v16) for samples. Several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19) are present. There's also a lander (v9) for communication. The rovers are currently at specific configurations (v13 for v12, v15 for v14).
           
           The goal is `new-axiom@0()`, which is an axiom that evaluates to true if all the following conditions are met:
           - `atconf(v12, v13)`: Rover v12 is at configuration v13. (Initially true)
           - `atconf(v14, v15)`: Rover v14 is at configuration v15. (Initially true)
           - `free(v12, v16)`: Rover v12 has a free store slot. (Initially true)
           - `free(v14, v16)`: Rover v14 has a free store slot. (Initially true)
           - `receivedimage(v17, v11)`: An image of objective v17 in mode v11 has been received.
           - `receivedimage(v18, v11)`: An image of objective v18 in mode v11 has been received.
           - `receivedimage(v19, v11)`: An image of objective v19 in mode v11 has been received.
           - `type(?stone, v2)`: There exists a rock of type v2. (Multiple rocks of type v2 exist: v1, v3, v4)
           - `receivedanalysis(?stone)`: An analysis of a rock of type v2 has been received.
           - `type(?soil, v6)`: There exists a rock of type v6. (Multiple rocks of type v6 exist: v5, v7, v8)
           - `receivedanalysis(?soil)`: An analysis of a rock of type v6 has been received.
           
           To achieve the goal, we need to:
           1.  Obtain and send images for all three objectives (v17, v18, v19) using camera v10 in mode v11.
           2.  Sample and send analysis for at least one rock of type v2 (e.g., v1, v3, or v4).
           3.  Sample and send analysis for at least one rock of type v6 (e.g., v5, v7, or v8).
           
           Let's break down the image collection and analysis for each rover:
           
           **Rover v12:**
           *   **Images:**
               *   v17: `imagevisible(v12, #q1, #y0, v17)`
               *   v18: `imagevisible(v12, #q6, #y4, v18)`
               *   v19: `imagevisible(v12, #q5, #y3, v19)`
           *   **Rocks:**
               *   Type v2 (rock): v1 (`above(v12, #q17, v1)`), v3 (`above(v12, #q16, v3)`), v4 (`above(v12, #q14, v4)`)
               *   Type v6 (soil): v5 (`above(v12, #q19, v5)`), v7 (`above(v12, #q18, v7)`), v8 (`above(v12, #q15, v8)`)
           *   **Communication:** `comvisible(v12, #q2, #y1, v9)`
           
           **Rover v14:**
           *   **Images:**
               *   v17: `imagevisible(v14, #q8, #y6, v17)`
               *   v18: `imagevisible(v14, #q7, #y5, v18)`
               *   v19: `imagevisible(v14, #q12, #y7, v19)`
           *   **Rocks:**
               *   Type v2 (rock): v1 (`above(v14, #q3, v1)`), v3 (`above(v14, #q13, v3)`), v4 (`above(v14, #q10, v4)`)
               *   Type v6 (soil): v5 (`above(v14, #q0, v5)`), v7 (`above(v14, #q11, v7)`), v8 (`above(v14, #q9, v8)`)
           *   **Communication:** No `comvisible` directly stated for v14.
           
           We can use Rover v12 for all image and analysis tasks, as it has communication visibility to the lander and can reach all the objectives and rocks.
           
           **Plan for Rover v12:**
           
           1.  **Images:**
               *   Calibrate camera and take image of v17 at #q1.
               *   Send image of v17.
               *   Calibrate camera and take image of v18 at #q6.
               *   Send image of v18.
               *   Calibrate camera and take image of v19 at #q5.
               *   Send image of v19.
               *   Note: It's more efficient to move to a configuration where all image targets are visible or to take images in sequence without returning to a central point if possible. However, the available actions show individual `calibrate` and `take_image` actions at specific configurations for each objective. Also, after `take_image`, the camera becomes uncalibrated. So we need to recalibrate for each image.
           
           2.  **Rock Analysis:**
               *   Sample a rock of type v2 (e.g., v4 at #q14).
               *   Send analysis of v4.
               *   Sample a rock of type v6 (e.g., v5 at #q19).
               *   Send analysis of v5.
           
           Let's prioritize:
           - Taking images of v17, v18, v19 and sending them.
           - Sampling a rock of type v2 and sending its analysis.
           - Sampling a rock of type v6 and sending its analysis.
           
           Since rover v12 is at v13 and can directly communicate from #q2, we should move to #q2 for sending all data. The available actions also indicate that the camera v10 is onboard v12, and supports mode v11.
           
           Let's make a plan:
           1.  Move v12 to #q1 (for v17). Calibrate, take image, then move to #q2 to send.
           2.  Move v12 to #q6 (for v18). Calibrate, take image, then move to #q2 to send.
           3.  Move v12 to #q5 (for v19). Calibrate, take image, then move to #q2 to send.
           4.  Move v12 to #q14 (for rock v4 - type v2). Sample, then move to #q2 to send.
           5.  Move v12 to #q19 (for rock v5 - type v6). Sample, then move to #q2 to send.
           
           Note: The goal specifically mentions `atconf(v12, v13)` and `atconf(v14, v15)` as *initial state conditions*, not necessarily end state conditions. But the new-axiom does not have these as an effect condition, meaning it just needs to be true at any point. The problem definition states "If any of the axioms contains an object that starts with '?', that object is a variable and there is an implicit existential quantifier over that variable." The `new-axiom@0` for this problem doesn't contain any `?` objects, so these must refer to specific objects. The initial state already fulfills `atconf(v12, v13)` and `atconf(v14, v15)`. Therefore, we don't need to return to these configurations.
           
           Also, the `new-axiom@0()` explicitly checks for `type(?stone, v2)` and `receivedanalysis(?stone)`, and `type(?soil, v6)` and `receivedanalysis(?soil)`. This implies we need *at least one* rock of each type to be analyzed and received.
           Let's select rock v4 (type v2) and rock v5 (type v6) for analysis using rover v12.
           
           --Plan--:
           (move v12 v13 #t6 #q1)
           (calibrate v12 #q1 #y0 v17 v10)
           (take_image v12 #q1 #y0 v17 v10 v11)
           (move v12 #q1 #t0 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (move v12 #q2 #t33 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t34 #q2)
           (send_image v12 #q2 #y1 v9 v18 v11)
           (move v12 #q2 #t35 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t32 #q2)
           (send_image v12 #q2 #y1 v9 v19 v11)
           (move v12 #q2 #t44 #q14)
           (sample_rock v12 #q14 v4 v16)
           (move v12 #q14 #t20 #q2)
           (send_analysis v12 #q2 #y1 v9 v4)
           (move v12 #q2 #t35 #q5)
           (move v12 #q5 #o2 #q19)
           (sample_rock v12 #q19 v5 v16)
           (move v12 #q19 #t54 #q2)
           (send_analysis v12 #q2 #y1 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. I need to ensure all the sub-goals within this axiom are met. Let's re-evaluate the requirements for `new-axiom@0()`:
           
           1.  `atconf(v12, v13)`: Rover v12 at configuration v13. (Initially true)
           2.  `atconf(v14, v15)`: Rover v14 at configuration v15. (Initially true)
           3.  `free(v12, v16)`: Rover v12 has a free store slot. (Initially true, but sampling fills it. We need to maintain this or ensure it's free *after* analysis if it was to be used again, but for this goal, we just need to ensure that it was free *when sampling* and *full* when it was analyzed, and if we are to sample again we would need to drop a rock. The goal states `free` for both rovers in the end state of the axiom, so if we sample, we *must* drop the rock.
           4.  `free(v14, v16)`: Rover v14 has a free store slot. (Initially true)
           5.  `receivedimage(v17, v11)`: Image of v17 received.
           6.  `receivedimage(v18, v11)`: Image of v18 received.
           7.  `receivedimage(v19, v11)`: Image of v19 received.
           8.  `type(?stone, v2)`: A rock of type v2 exists. (v1, v3, v4 are type v2)
           9.  `receivedanalysis(?stone)`: Analysis of a type v2 rock received.
           10. `type(?soil, v6)`: A rock of type v6 exists. (v5, v7, v8 are type v6)
           11. `receivedanalysis(?soil)`: Analysis of a type v6 rock received.
           
           My previous plan successfully completed the image and analysis sending for the chosen rocks. The issue likely lies with the `free(v12, v16)` predicate. When `sample_rock` is performed, `free(v12, v16)` becomes false and `full(v12, v16)` becomes true. After `send_analysis`, the goal requires `free(v12, v16)` to be true again (as specified in the axiom). This means I need to add a `drop_rock` action after each `send_analysis` that fills the store.
           
           Let's refine the plan to include `drop_rock` for rover v12 after each sample and send.
           
           Revised Plan Strategy:
           1.  **Images (Rover v12):**
               *   Move v12 to #q1, calibrate, take image of v17.
               *   Move v12 to #q2, send image of v17.
               *   Move v12 to #q6, calibrate, take image of v18.
               *   Move v12 to #q2, send image of v18.
               *   Move v12 to #q5, calibrate, take image of v19.
               *   Move v12 to #q2, send image of v19.
           2.  **Rock Analysis (Rover v12):**
               *   Move v12 to #q14, sample rock v4 (type v2).
               *   Move v12 to #q2, send analysis of v4.
               *   **Drop rock v4.** (This makes `free(v12, v16)` true again)
               *   Move v12 to #q19, sample rock v5 (type v6).
               *   Move v12 to #q2, send analysis of v5.
               *   **Drop rock v5.** (This makes `free(v12, v16)` true again)
           
           This ensures `free(v12, v16)` remains true for the final state, satisfying that part of the axiom. The initial state already satisfies `atconf(v12, v13)` and `atconf(v14, v15)` and `free(v14, v16)`.
           
           --Plan--:
           (move v12 v13 #t6 #q1)
           (calibrate v12 #q1 #y0 v17 v10)
           (take_image v12 #q1 #y0 v17 v10 v11)
           (move v12 #q1 #t0 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (move v12 #q2 #t33 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t34 #q2)
           (send_image v12 #q2 #y1 v9 v18 v11)
           (move v12 #q2 #t35 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t32 #q2)
           (send_image v12 #q2 #y1 v9 v19 v11)
           (move v12 #q2 #t44 #q14)
           (sample_rock v12 #q14 v4 v16)
           (move v12 #q14 #t20 #q2)
           (send_analysis v12 #q2 #y1 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #q19)
           (sample_rock v12 #q19 v5 v16)
           (move v12 #q19 #t54 #q2)
           (send_analysis v12 #q2 #y1 v9 v5)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies. The previous plan still failed to satisfy the `new-axiom@0()` goal. I need to be extremely precise about each predicate within the axiom and how it is achieved.
           
           Let's break down the axiom again, paying close attention to the state of `free(v12, v16)` and `free(v14, v16)` and the `atconf` predicates at the *final state*.
           
           The goal is `new-axiom@0()`, which consists of the following conditions *that must hold true at the end of the plan*:
           1.  `atconf(v12, v13)`: Rover v12 must be at configuration v13.
           2.  `atconf(v14, v15)`: Rover v14 must be at configuration v15.
           3.  `free(v12, v16)`: Rover v12's store v16 must be free.
           4.  `free(v14, v16)`: Rover v14's store v16 must be free.
           5.  `receivedimage(v17, v11)`: Image of objective v17 in mode v11 must be received.
           6.  `receivedimage(v18, v11)`: Image of objective v18 in mode v11 must be received.
           7.  `receivedimage(v19, v11)`: Image of objective v19 in mode v11 must be received.
           8.  `type(?stone, v2)`: A rock of type v2 exists (initially true, e.g., v1, v3, v4).
           9.  `receivedanalysis(?stone)`: Analysis of a rock of type v2 must be received.
           10. `type(?soil, v6)`: A rock of type v6 exists (initially true, e.g., v5, v7, v8).
           11. `receivedanalysis(?soil)`: Analysis of a rock of type v6 must be received.
           
           My previous plans failed because I didn't ensure that `v12` returned to `v13` after its tasks, and potentially the `free` predicate.
           
           Let's ensure the `atconf` and `free` predicates are met at the very end.
           
           Initial State:
           *   `atconf(v12, v13)` is true.
           *   `atconf(v14, v15)` is true.
           *   `free(v12, v16)` is true.
           *   `free(v14, v16)` is true.
           
           This means that after performing all actions, I need to ensure `v12` is back at `v13` and any sampled rocks have been dropped by `v12`. `v14` does not perform any actions, so its initial state `atconf(v14,v15)` and `free(v14,v16)` will remain true.
           
           **Detailed Plan Steps for Rover v12:**
           
           1.  **Get image of v17:**
               *   Move v12 from v13 to #q1 (where v17 is visible).
               *   Calibrate camera v10 for v17.
               *   Take image of v17.
               *   Move v12 from #q1 to #q2 (for communication).
               *   Send image of v17.
           2.  **Get image of v18:**
               *   Move v12 from #q2 to #q6 (where v18 is visible).
               *   Calibrate camera v10 for v18.
               *   Take image of v18.
               *   Move v12 from #q6 to #q2.
               *   Send image of v18.
           3.  **Get image of v19:**
               *   Move v12 from #q2 to #q5 (where v19 is visible).
               *   Calibrate camera v10 for v19.
               *   Take image of v19.
               *   Move v12 from #q5 to #q2.
               *   Send image of v19.
           4.  **Sample and analyze rock of type v2 (v4):**
               *   Move v12 from #q2 to #q14 (above rock v4).
               *   Sample rock v4. (This makes `free(v12, v16)` false, `full(v12, v16)` true).
               *   Move v12 from #q14 to #q2.
               *   Send analysis of v4.
               *   Drop rock v4. (This makes `full(v12, v16)` false, `free(v12, v16)` true).
           5.  **Sample and analyze rock of type v6 (v5):**
               *   Move v12 from #q2 to #q19 (above rock v5).
               *   Sample rock v5. (This makes `free(v12, v16)` false, `full(v12, v16)` true).
               *   Move v12 from #q19 to #q2.
               *   Send analysis of v5.
               *   Drop rock v5. (This makes `full(v12, v16)` false, `free(v12, v16)` true).
           6.  **Return v12 to v13:**
               *   Move v12 from #q2 back to v13.
           
           All necessary `free` and `atconf` predicates for the end state should now be met, alongside the `receivedimage` and `receivedanalysis` predicates.
           
           --Plan--:
           (move v12 v13 #t6 #q1)
           (calibrate v12 #q1 #y0 v17 v10)
           (take_image v12 #q1 #y0 v17 v10 v11)
           (move v12 #q1 #t0 #q2)
           (send_image v12 #q2 #y1 v9 v17 v11)
           (move v12 #q2 #t33 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t34 #q2)
           (send_image v12 #q2 #y1 v9 v18 v11)
           (move v12 #q2 #t35 #q5)
           (calibrate v12 #q5 #y3 v19 v10)
           (take_image v12 #q5 #y3 v19 v10 v11)
           (move v12 #q5 #t32 #q2)
           (send_image v12 #q2 #y1 v9 v19 v11)
           (move v12 #q2 #t44 #q14)
           (sample_rock v12 #q14 v4 v16)
           (move v12 #q14 #t20 #q2)
           (send_analysis v12 #q2 #y1 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q2 #o2 #q19)
           (sample_rock v12 #q19 v5 v16)
           (move v12 #q19 #t54 #q2)
           (send_analysis v12 #q2 #y1 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q2 #t11 v13)

