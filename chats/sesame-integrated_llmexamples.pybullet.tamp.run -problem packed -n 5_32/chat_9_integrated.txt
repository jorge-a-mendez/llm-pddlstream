User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g5: object
           #g6: object
           #g7: object
           #g8: object
           #g9: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q20: object
           #q21: object
           #q22: object
           #q23: object
           #q24: object
           #q25: object
           #q26: object
           #q27: object
           #q28: object
           #q29: object
           #t77: object
           #t78: object
           #t79: object
           #t80: object
           #t81: object
           #t82: object
           #t83: object
           #t84: object
           #t85: object
           #t86: object
           #t87: object
           #t88: object
           #t89: object
           #t90: object
           #t91: object
           #t92: object
           #t93: object
           #t94: object
           #t95: object
           @sink: object
           @stove: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p15: object
           p16: object
           p17: object
           p18: object
           p19: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v3: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v44: object
           v45: object
           v46: object
           v47: object
           v48: object
           v5: object
           v6: object
           v64: object
           v65: object
           v66: object
           v67: object
           v68: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p11 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v17 is a pose with position (0.096, -0.511, 0.781) and quaternion (0.0, 0.0, 1.0, 0.012).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p12 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p18 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p16 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p15 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p19 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.085), (0.035, -0.015)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.06, -0.035), (0.01, 0.035)).
           Object v9 is a pose with position (0.223, -0.15, 0.781) and quaternion (0.0, 0.0, 0.595, 0.804).
           Object v19 is a pose with position (0.248, 0.511, 0.781) and quaternion (0.0, 0.0, -0.659, 0.752).
           Object p17 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v13 is a pose with position (-0.195, 0.263, 0.781) and quaternion (0.0, 0.0, 0.929, -0.369).
           Object p13 is a pose with position (0.025, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (-0.025, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.025, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (-0.025, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.085), (0.035, -0.015)).
           Object v22 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p6 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (0.046, 0.538, 0.781) and quaternion (0.0, 0.0, -0.845, 0.534).
           Object p10 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom graspable(v16)
           Atom pose(v16, v17)
           Atom atpose(v16, v17)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom graspable(v18)
           Atom pose(v18, v19)
           Atom atpose(v18, v19)
           Atom stackable(v18, v10)
           Atom supported(v18, v19, v11)
           Atom stackable(v8, v20)
           Atom stackable(v12, v20)
           Atom stackable(v14, v20)
           Atom stackable(v16, v20)
           Atom stackable(v18, v20)
           Atom pose(v14, p7)
           Atom supported(v14, p7, v10)
           Atom pose(v18, p9)
           Atom supported(v18, p9, v20)
           Atom pose(v16, p8)
           Atom supported(v16, p8, v20)
           Atom supported(v14, p7, v20)
           Atom pose(v12, p6)
           Atom supported(v12, p6, v20)
           Atom pose(v8, p5)
           Atom supported(v8, p5, v20)
           Atom supported(v12, p6, v10)
           Atom supported(v18, p9, v10)
           Atom supported(v16, p8, v10)
           Atom supported(v8, p5, v10)
           Atom kin(v40, v46, p7, v42, v43, v44)
           Atom kin(v40, v47, p8, v42, v43, v44)
           Atom kin(v40, v48, p9, v42, v43, v44)
           Atom kin(v40, v41, p5, v42, v43, v44)
           Atom kin(v40, v45, p6, v42, v43, v44)
           Atom pose(v12, p11)
           Atom supported(v12, p11, v10)
           Atom supported(v12, p11, v20)
           Atom pose(v14, p12)
           Atom supported(v14, p12, v20)
           Atom pose(v18, p14)
           Atom supported(v18, p14, v10)
           Atom pose(v16, p13)
           Atom supported(v16, p13, v20)
           Atom pose(v8, p10)
           Atom supported(v8, p10, v10)
           Atom supported(v8, p10, v20)
           Atom supported(v14, p12, v10)
           Atom supported(v16, p13, v10)
           Atom supported(v18, p14, v20)
           Atom kin(v40, v41, p10, v42, v43, v44)
           Atom kin(v40, v45, p11, v42, v43, v44)
           Atom kin(v40, v46, p12, v42, v43, v44)
           Atom kin(v40, v47, p13, v42, v43, v44)
           Atom kin(v40, v48, p14, v42, v43, v44)
           Atom pose(v14, p17)
           Atom supported(v14, p17, v10)
           Atom pose(v18, p18)
           Atom supported(v18, p18, v20)
           Atom pose(v16, p15)
           Atom supported(v16, p15, v20)
           Atom supported(v14, p17, v20)
           Atom pose(v12, p16)
           Atom supported(v12, p16, v20)
           Atom pose(v8, p19)
           Atom supported(v8, p19, v20)
           Atom supported(v12, p16, v10)
           Atom supported(v18, p18, v10)
           Atom supported(v16, p15, v10)
           Atom supported(v8, p19, v10)
           Atom kin(v40, v47, p15, v64, v43, v44)
           Atom kin(v40, v45, p16, v65, v43, v44)
           Atom kin(v40, v46, p17, v66, v43, v44)
           Atom kin(v40, v48, p18, v67, v43, v44)
           Atom kin(v40, v41, p19, v68, v43, v44)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #g7)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v20)
           Atom supported(v14, #o2, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom grasp(v14, #g5)
           Atom supported(v12, #o2, v10)
           Atom supported(v18, #o2, v10)
           Atom grasp(v18, #g9)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #g6)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g8)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, p13, #g7, #o3, #o4)
           Atom bconf(#q29)
           Atom atraj(#t95)
           Atom kin(v4, v16, v17, #g7, #q29, #t95)
           Atom bconf(#q22)
           Atom atraj(#t79)
           Atom kin(v4, v16, p8, #g7, #q22, #t79)
           Atom kin(v4, v16, p15, #g7, #o3, #o4)
           Atom kin(v4, v12, p11, #g6, #o3, #o4)
           Atom kin(v4, v12, p16, #g6, #o3, #o4)
           Atom bconf(#q21)
           Atom atraj(#t78)
           Atom kin(v4, v12, v13, #g6, #q21, #t78)
           Atom bconf(#q23)
           Atom atraj(#t80)
           Atom kin(v4, v12, p6, #g6, #q23, #t80)
           Atom bconf(#q20)
           Atom atraj(#t77)
           Atom kin(v4, v14, v15, #g5, #q20, #t77)
           Atom bconf(#q24)
           Atom atraj(#t81)
           Atom kin(v4, v14, p7, #g5, #q24, #t81)
           Atom kin(v4, v14, p17, #g5, #o3, #o4)
           Atom kin(v4, v14, p12, #g5, #o3, #o4)
           Atom kin(v4, v18, p18, #g9, #o3, #o4)
           Atom bconf(#q26)
           Atom atraj(#t83)
           Atom kin(v4, v18, p9, #g9, #q26, #t83)
           Atom bconf(#q27)
           Atom atraj(#t84)
           Atom kin(v4, v18, v19, #g9, #q27, #t84)
           Atom kin(v4, v18, p14, #g9, #o3, #o4)
           Atom bconf(#q28)
           Atom atraj(#t85)
           Atom kin(v4, v8, p5, #g8, #q28, #t85)
           Atom bconf(#q25)
           Atom atraj(#t82)
           Atom kin(v4, v8, v9, #g8, #q25, #t82)
           Atom kin(v4, v8, p10, #g8, #o3, #o4)
           Atom kin(v4, v8, p19, #g8, #o3, #o4)
           Atom basemotion(#q22, #o0, v3)
           Atom btraj(#t88)
           Atom basemotion(v3, #t88, #q22)
           Atom basemotion(#q22, #o0, #q22)
           Atom basemotion(#q29, #o0, v3)
           Atom basemotion(v3, #o0, #q29)
           Atom basemotion(#q29, #o0, #q29)
           Atom basemotion(#q22, #o0, #q29)
           Atom basemotion(#q29, #o0, #q22)
           Atom basemotion(#q25, #o0, v3)
           Atom btraj(#t91)
           Atom basemotion(v3, #t91, #q25)
           Atom basemotion(#q25, #o0, #q25)
           Atom basemotion(#q29, #o0, #q25)
           Atom basemotion(#q25, #o0, #q29)
           Atom basemotion(#q22, #o0, #q25)
           Atom basemotion(#q25, #o0, #q22)
           Atom basemotion(#q28, #o0, v3)
           Atom basemotion(#q28, #o0, #q28)
           Atom btraj(#t94)
           Atom basemotion(v3, #t94, #q28)
           Atom basemotion(#q25, #o0, #q28)
           Atom basemotion(#q28, #o0, #q25)
           Atom basemotion(#q29, #o0, #q28)
           Atom basemotion(#q28, #o0, #q29)
           Atom basemotion(#q22, #o0, #q28)
           Atom basemotion(#q28, #o0, #q22)
           Atom basemotion(#q27, #o0, #q25)
           Atom basemotion(#q27, #o0, v3)
           Atom basemotion(#q27, #o0, #q22)
           Atom basemotion(#q27, #o0, #q28)
           Atom basemotion(#q27, #o0, #q29)
           Atom basemotion(#q25, #o0, #q27)
           Atom basemotion(#q27, #o0, #q27)
           Atom btraj(#t93)
           Atom basemotion(v3, #t93, #q27)
           Atom basemotion(#q22, #o0, #q27)
           Atom basemotion(#q28, #o0, #q27)
           Atom basemotion(#q29, #o0, #q27)
           Atom basemotion(#q24, #o0, #q25)
           Atom basemotion(#q24, #o0, v3)
           Atom basemotion(#q24, #o0, #q28)
           Atom basemotion(#q25, #o0, #q24)
           Atom basemotion(#q24, #o0, #q24)
           Atom btraj(#t90)
           Atom basemotion(v3, #t90, #q24)
           Atom basemotion(#q28, #o0, #q24)
           Atom basemotion(#q29, #o0, #q24)
           Atom basemotion(#q24, #o0, #q29)
           Atom basemotion(#q22, #o0, #q24)
           Atom basemotion(#q24, #o0, #q22)
           Atom basemotion(#q27, #o0, #q24)
           Atom basemotion(#q24, #o0, #q27)
           Atom basemotion(#q26, #o0, #q25)
           Atom basemotion(#q26, #o0, #q24)
           Atom basemotion(#q26, #o0, v3)
           Atom basemotion(#q26, #o0, #q22)
           Atom basemotion(#q26, #o0, #q28)
           Atom basemotion(#q26, #o0, #q29)
           Atom basemotion(#q25, #o0, #q26)
           Atom basemotion(#q26, #o0, #q26)
           Atom basemotion(#q24, #o0, #q26)
           Atom btraj(#t92)
           Atom basemotion(v3, #t92, #q26)
           Atom basemotion(#q22, #o0, #q26)
           Atom basemotion(#q28, #o0, #q26)
           Atom basemotion(#q29, #o0, #q26)
           Atom basemotion(#q27, #o0, #q26)
           Atom basemotion(#q26, #o0, #q27)
           Atom basemotion(#q21, #o0, #q28)
           Atom basemotion(#q21, #o0, v3)
           Atom basemotion(#q21, #o0, #q25)
           Atom basemotion(#q25, #o0, #q21)
           Atom basemotion(#q21, #o0, #q21)
           Atom btraj(#t87)
           Atom basemotion(v3, #t87, #q21)
           Atom basemotion(#q28, #o0, #q21)
           Atom basemotion(#q24, #o0, #q21)
           Atom basemotion(#q21, #o0, #q24)
           Atom basemotion(#q29, #o0, #q21)
           Atom basemotion(#q21, #o0, #q29)
           Atom basemotion(#q22, #o0, #q21)
           Atom basemotion(#q21, #o0, #q22)
           Atom basemotion(#q26, #o0, #q21)
           Atom basemotion(#q21, #o0, #q26)
           Atom basemotion(#q27, #o0, #q21)
           Atom basemotion(#q21, #o0, #q27)
           Atom basemotion(#q23, #o0, #q25)
           Atom basemotion(#q23, #o0, #q21)
           Atom basemotion(#q23, #o0, v3)
           Atom basemotion(#q23, #o0, #q28)
           Atom basemotion(#q25, #o0, #q23)
           Atom basemotion(#q21, #o0, #q23)
           Atom btraj(#t89)
           Atom basemotion(v3, #t89, #q23)
           Atom basemotion(#q23, #o0, #q23)
           Atom basemotion(#q28, #o0, #q23)
           Atom basemotion(#q24, #o0, #q23)
           Atom basemotion(#q23, #o0, #q24)
           Atom basemotion(#q29, #o0, #q23)
           Atom basemotion(#q23, #o0, #q29)
           Atom basemotion(#q22, #o0, #q23)
           Atom basemotion(#q23, #o0, #q22)
           Atom basemotion(#q26, #o0, #q23)
           Atom basemotion(#q23, #o0, #q26)
           Atom basemotion(#q27, #o0, #q23)
           Atom basemotion(#q23, #o0, #q27)
           Atom basemotion(#q20, #o0, #q25)
           Atom basemotion(#q20, #o0, #q21)
           Atom basemotion(#q20, #o0, v3)
           Atom basemotion(#q20, #o0, #q23)
           Atom basemotion(#q20, #o0, #q28)
           Atom basemotion(#q20, #o0, #q20)
           Atom basemotion(#q25, #o0, #q20)
           Atom basemotion(#q21, #o0, #q20)
           Atom btraj(#t86)
           Atom basemotion(v3, #t86, #q20)
           Atom basemotion(#q23, #o0, #q20)
           Atom basemotion(#q28, #o0, #q20)
           Atom basemotion(#q24, #o0, #q20)
           Atom basemotion(#q20, #o0, #q24)
           Atom basemotion(#q29, #o0, #q20)
           Atom basemotion(#q20, #o0, #q29)
           Atom basemotion(#q22, #o0, #q20)
           Atom basemotion(#q20, #o0, #q22)
           Atom basemotion(#q26, #o0, #q20)
           Atom basemotion(#q20, #o0, #q26)
           Atom basemotion(#q27, #o0, #q20)
           Atom basemotion(#q20, #o0, #q27)
           Atom kin(v4, v8, #o2, #g8, #o3, #o4)
           Atom kin(v4, v12, #o2, #g6, #o3, #o4)
           Atom kin(v4, v18, #o2, #g9, #o3, #o4)
           Atom kin(v4, v14, #o2, #g5, #o3, #o4)
           Atom kin(v4, v16, #o2, #g7, #o3, #o4)
           Atom basemotion(#o3, #o0, #q28)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q25)
           Atom basemotion(#q28, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q25, #o0, #o3)
           Atom basemotion(#q21, #o0, #o3)
           Atom basemotion(#o3, #o0, #q21)
           Atom basemotion(#q23, #o0, #o3)
           Atom basemotion(#o3, #o0, #q23)
           Atom basemotion(#q20, #o0, #o3)
           Atom basemotion(#o3, #o0, #q20)
           Atom basemotion(#q24, #o0, #o3)
           Atom basemotion(#o3, #o0, #q24)
           Atom basemotion(#q29, #o0, #o3)
           Atom basemotion(#o3, #o0, #q29)
           Atom basemotion(#q22, #o0, #o3)
           Atom basemotion(#o3, #o0, #q22)
           Atom basemotion(#q26, #o0, #o3)
           Atom basemotion(#o3, #o0, #q26)
           Atom basemotion(#q27, #o0, #o3)
           Atom basemotion(#o3, #o0, #q27)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q20 #o0))
           ((move_base #o3 #q21 #o0))
           ((move_base #o3 #q22 #o0))
           ((move_base #o3 #q23 #o0))
           ((move_base #o3 #q24 #o0))
           ((move_base #o3 #q25 #o0))
           ((move_base #o3 #q26 #o0))
           ((move_base #o3 #q27 #o0))
           ((move_base #o3 #q28 #o0))
           ((move_base #o3 #q29 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q20 #o3 #o0))
           ((move_base #q20 #q20 #o0))
           ((move_base #q20 #q21 #o0))
           ((move_base #q20 #q22 #o0))
           ((move_base #q20 #q23 #o0))
           ((move_base #q20 #q24 #o0))
           ((move_base #q20 #q25 #o0))
           ((move_base #q20 #q26 #o0))
           ((move_base #q20 #q27 #o0))
           ((move_base #q20 #q28 #o0))
           ((move_base #q20 #q29 #o0))
           ((move_base #q20 v3 #o0))
           ((move_base #q21 #o3 #o0))
           ((move_base #q21 #q20 #o0))
           ((move_base #q21 #q21 #o0))
           ((move_base #q21 #q22 #o0))
           ((move_base #q21 #q23 #o0))
           ((move_base #q21 #q24 #o0))
           ((move_base #q21 #q25 #o0))
           ((move_base #q21 #q26 #o0))
           ((move_base #q21 #q27 #o0))
           ((move_base #q21 #q28 #o0))
           ((move_base #q21 #q29 #o0))
           ((move_base #q21 v3 #o0))
           ((move_base #q22 #o3 #o0))
           ((move_base #q22 #q20 #o0))
           ((move_base #q22 #q21 #o0))
           ((move_base #q22 #q22 #o0))
           ((move_base #q22 #q23 #o0))
           ((move_base #q22 #q24 #o0))
           ((move_base #q22 #q25 #o0))
           ((move_base #q22 #q26 #o0))
           ((move_base #q22 #q27 #o0))
           ((move_base #q22 #q28 #o0))
           ((move_base #q22 #q29 #o0))
           ((move_base #q22 v3 #o0))
           ((move_base #q23 #o3 #o0))
           ((move_base #q23 #q20 #o0))
           ((move_base #q23 #q21 #o0))
           ((move_base #q23 #q22 #o0))
           ((move_base #q23 #q23 #o0))
           ((move_base #q23 #q24 #o0))
           ((move_base #q23 #q25 #o0))
           ((move_base #q23 #q26 #o0))
           ((move_base #q23 #q27 #o0))
           ((move_base #q23 #q28 #o0))
           ((move_base #q23 #q29 #o0))
           ((move_base #q23 v3 #o0))
           ((move_base #q24 #o3 #o0))
           ((move_base #q24 #q20 #o0))
           ((move_base #q24 #q21 #o0))
           ((move_base #q24 #q22 #o0))
           ((move_base #q24 #q23 #o0))
           ((move_base #q24 #q24 #o0))
           ((move_base #q24 #q25 #o0))
           ((move_base #q24 #q26 #o0))
           ((move_base #q24 #q27 #o0))
           ((move_base #q24 #q28 #o0))
           ((move_base #q24 #q29 #o0))
           ((move_base #q24 v3 #o0))
           ((move_base #q25 #o3 #o0))
           ((move_base #q25 #q20 #o0))
           ((move_base #q25 #q21 #o0))
           ((move_base #q25 #q22 #o0))
           ((move_base #q25 #q23 #o0))
           ((move_base #q25 #q24 #o0))
           ((move_base #q25 #q25 #o0))
           ((move_base #q25 #q26 #o0))
           ((move_base #q25 #q27 #o0))
           ((move_base #q25 #q28 #o0))
           ((move_base #q25 #q29 #o0))
           ((move_base #q25 v3 #o0))
           ((move_base #q26 #o3 #o0))
           ((move_base #q26 #q20 #o0))
           ((move_base #q26 #q21 #o0))
           ((move_base #q26 #q22 #o0))
           ((move_base #q26 #q23 #o0))
           ((move_base #q26 #q24 #o0))
           ((move_base #q26 #q25 #o0))
           ((move_base #q26 #q26 #o0))
           ((move_base #q26 #q27 #o0))
           ((move_base #q26 #q28 #o0))
           ((move_base #q26 #q29 #o0))
           ((move_base #q26 v3 #o0))
           ((move_base #q27 #o3 #o0))
           ((move_base #q27 #q20 #o0))
           ((move_base #q27 #q21 #o0))
           ((move_base #q27 #q22 #o0))
           ((move_base #q27 #q23 #o0))
           ((move_base #q27 #q24 #o0))
           ((move_base #q27 #q25 #o0))
           ((move_base #q27 #q26 #o0))
           ((move_base #q27 #q27 #o0))
           ((move_base #q27 #q28 #o0))
           ((move_base #q27 #q29 #o0))
           ((move_base #q27 v3 #o0))
           ((move_base #q28 #o3 #o0))
           ((move_base #q28 #q20 #o0))
           ((move_base #q28 #q21 #o0))
           ((move_base #q28 #q22 #o0))
           ((move_base #q28 #q23 #o0))
           ((move_base #q28 #q24 #o0))
           ((move_base #q28 #q25 #o0))
           ((move_base #q28 #q26 #o0))
           ((move_base #q28 #q27 #o0))
           ((move_base #q28 #q28 #o0))
           ((move_base #q28 #q29 #o0))
           ((move_base #q28 v3 #o0))
           ((move_base #q29 #o3 #o0))
           ((move_base #q29 #q20 #o0))
           ((move_base #q29 #q21 #o0))
           ((move_base #q29 #q22 #o0))
           ((move_base #q29 #q23 #o0))
           ((move_base #q29 #q24 #o0))
           ((move_base #q29 #q25 #o0))
           ((move_base #q29 #q26 #o0))
           ((move_base #q29 #q27 #o0))
           ((move_base #q29 #q28 #o0))
           ((move_base #q29 #q29 #o0))
           ((move_base #q29 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q29 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q20 #t86))
           ((move_base v3 #q21 #t87))
           ((move_base v3 #q22 #t88))
           ((move_base v3 #q23 #t89))
           ((move_base v3 #q24 #t90))
           ((move_base v3 #q25 #t91))
           ((move_base v3 #q26 #t92))
           ((move_base v3 #q27 #t93))
           ((move_base v3 #q28 #t94))
           ((pick v4 v12 #o2 #g6 #o3 #o4))
           ((place v4 v12 #o2 #g6 #o3 #o4))
           ((pick v4 v12 p11 #g6 #o3 #o4))
           ((place v4 v12 p11 #g6 #o3 #o4))
           ((pick v4 v12 p16 #g6 #o3 #o4))
           ((place v4 v12 p16 #g6 #o3 #o4))
           ((pick v4 v12 p6 #g6 #q23 #t80))
           ((place v4 v12 p6 #g6 #q23 #t80))
           ((pick v4 v12 v13 #g6 #q21 #t78))
           ((place v4 v12 v13 #g6 #q21 #t78))
           ((pick v4 v14 #o2 #g5 #o3 #o4))
           ((place v4 v14 #o2 #g5 #o3 #o4))
           ((pick v4 v14 p12 #g5 #o3 #o4))
           ((place v4 v14 p12 #g5 #o3 #o4))
           ((pick v4 v14 p17 #g5 #o3 #o4))
           ((place v4 v14 p17 #g5 #o3 #o4))
           ((pick v4 v14 p7 #g5 #q24 #t81))
           ((place v4 v14 p7 #g5 #q24 #t81))
           ((pick v4 v14 v15 #g5 #q20 #t77))
           ((place v4 v14 v15 #g5 #q20 #t77))
           ((pick v4 v16 #o2 #g7 #o3 #o4))
           ((place v4 v16 #o2 #g7 #o3 #o4))
           ((pick v4 v16 p13 #g7 #o3 #o4))
           ((place v4 v16 p13 #g7 #o3 #o4))
           ((pick v4 v16 p15 #g7 #o3 #o4))
           ((place v4 v16 p15 #g7 #o3 #o4))
           ((pick v4 v16 p8 #g7 #q22 #t79))
           ((place v4 v16 p8 #g7 #q22 #t79))
           ((pick v4 v16 v17 #g7 #q29 #t95))
           ((place v4 v16 v17 #g7 #q29 #t95))
           ((pick v4 v18 #o2 #g9 #o3 #o4))
           ((place v4 v18 #o2 #g9 #o3 #o4))
           ((pick v4 v18 p14 #g9 #o3 #o4))
           ((place v4 v18 p14 #g9 #o3 #o4))
           ((pick v4 v18 p18 #g9 #o3 #o4))
           ((place v4 v18 p18 #g9 #o3 #o4))
           ((pick v4 v18 p9 #g9 #q26 #t83))
           ((place v4 v18 p9 #g9 #q26 #t83))
           ((pick v4 v18 v19 #g9 #q27 #t84))
           ((place v4 v18 v19 #g9 #q27 #t84))
           ((pick v4 v8 #o2 #g8 #o3 #o4))
           ((place v4 v8 #o2 #g8 #o3 #o4))
           ((pick v4 v8 p10 #g8 #o3 #o4))
           ((place v4 v8 p10 #g8 #o3 #o4))
           ((pick v4 v8 p19 #g8 #o3 #o4))
           ((place v4 v8 p19 #g8 #o3 #o4))
           ((pick v4 v8 p5 #g8 #q28 #t85))
           ((place v4 v8 p5 #g8 #q28 #t85))
           ((pick v4 v8 v9 #g8 #q25 #t82))
           ((place v4 v8 v9 #g8 #q25 #t82))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q0', '#t2'))
           Action(name='pick', args=('v4', 'v16', 'v17', '#g0', '#q0', '#t0'))
           Action(name='move_base', args=('#q0', '#q8', '#t72'))
           Action(name='place', args=('v4', 'v16', 'p13', '#g0', '#q8', '#t10'))
           Action(name='move_base', args=('#q8', '#q3', '#t73'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g2', '#q3', '#t5'))
           Action(name='move_base', args=('#q3', '#q5', '#t44'))
           Action(name='place', args=('v4', 'v12', 'p11', '#g2', '#q5', '#t7'))
           Action(name='move_base', args=('#q5', '#q1', '#t46'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g1', '#q1', '#t1'))
           Action(name='move_base', args=('#q1', '#q2', '#t47'))
           Action(name='place', args=('v4', 'v14', 'p12', '#g1', '#q2', '#t4'))
           Action(name='move_base', args=('#q2', '#q4', '#t76'))
           Action(name='pick', args=('v4', 'v18', 'v19', '#g3', '#q4', '#t6'))
           Action(name='move_base', args=('#q4', '#q12', '#t42'))
           Action(name='place', args=('v4', 'v18', 'p9', '#g3', '#q12', '#t20'))
           Action(name='move_base', args=('#q12', '#q7', '#t38'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g4', '#q7', '#t9'))
           Action(name='move_base', args=('#q7', '#q13', '#t30'))
           Action(name='place', args=('v4', 'v8', 'p5', '#g4', '#q13', '#t24'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v18', 'p9', 'v14', 'p12')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The initial state shows five graspable objects (v8, v12, v14, v16, v18), each currently at a specific pose (v9, v13, v15, v17, v19 respectively) and supported by surface v11. The goal is to place all five objects on surface v20. The robot has two arms (v4, v6), with v4 being the controllable arm. There are several pre-defined poses on surfaces v10 and v20 for each object. The previous plan failed due to a collision between v18 at p9 and v14 at p12. I need to ensure that the placement poses for the objects on v20 are collision-free. I will prioritize placing objects on poses that are not currently occupied by other objects. I will also check for potential collisions between objects after placement.
           
           Let's re-evaluate the target poses for each object on `v20`. The previous plan tried to place `v18` at `p9` and `v14` at `p12`. Both `p9` and `p12` are specified as supported by `v20`.
           `v18`'s AABB: `((-0.06, -0.035), (0.01, 0.035))`
           `v14`'s AABB: `((-0.035, -0.085), (0.035, -0.015))`
           
           The `p9` and `p12` coordinates (relative to the object's origin) are (0.0, -0.05, 0.782) and (0.0, -0.05, 0.782) for `p9` and `p12` respectively. This means the bounding box of `v18` and `v14` will overlap if both are placed at these poses.
           
           I will try to place the objects at different designated poses on `v20` to avoid collisions. I will use `p5`, `p6`, `p8`, `p9`, `p13`, `p15`, `p16`, `p18`, `p19` which are supported by `v20`.
           
           Here's a strategy:
           1. Pick `v16` from `v17` and place it at `p8` on `v20`.
           2. Pick `v12` from `v13` and place it at `p6` on `v20`.
           3. Pick `v14` from `v15` and place it at `p7` on `v20`.
           4. Pick `v18` from `v19` and place it at `p9` on `v20`.
           5. Pick `v8` from `v9` and place it at `p5` on `v20`.
           
           Let's check for collisions with these chosen poses on `v20`.
           `v16` (AABB: `((-0.035, -0.035), (0.035, 0.035))`) at `p8` (0.025, 0.0, 0.782)
           `v12` (AABB: `((0.015, -0.035), (0.085, 0.035))`) at `p6` (0.0, 0.05, 0.782)
           `v14` (AABB: `((-0.035, -0.085), (0.035, -0.015))`) at `p7` (0.0, -0.05, 0.782)
           `v18` (AABB: `((-0.06, -0.035), (0.01, 0.035))`) at `p9` (0.0, -0.05, 0.782)
           `v8` (AABB: `((-0.035, -0.085), (0.035, -0.015))`) at `p5` (0.0, 0.0, 0.782)
           
           The pose coordinates provided are relative to the object's origin. The global coordinates of the objects would be determined by adding the object's center from its AABB to the pose's position. However, since the object AABBs and poses are given, we will rely on the `test-cfree-pose-pose` to confirm that the selected poses are indeed collision-free. The previous failure suggests that `p9` and `p12` might be too close. My new selection for `v18` and `v14` are `p9` and `p7`, both are supported by `v20`. Both `p9` and `p7` have same x,y,z coordinate as `(0.0, -0.05, 0.782)` and `(0.0, -0.05, 0.782)` respectively. This will still result in a collision.
           
           I must choose distinct poses. I will try to use the following poses on `v20`:
           `v16` at `p8` (0.025, 0.0, 0.782)
           `v12` at `p6` (0.0, 0.05, 0.782)
           `v14` at `p13` (0.025, 0.0, 0.782) - This will collide with v16 at p8.
           `v18` at `p14` (-0.025, 0.0, 0.782)
           `v8` at `p19` (0.0, -0.05, 0.782)
           
           Let's try:
           1. `v16` at `p8` (0.025, 0.0, 0.782)
           2. `v12` at `p6` (0.0, 0.05, 0.782)
           3. `v14` at `p17` (-0.05, 0.0, 0.782)
           4. `v18` at `p14` (-0.025, 0.0, 0.782)
           5. `v8` at `p19` (0.0, -0.05, 0.782)
           
           These poses (`p5`, `p6`, `p7`, `p8`, `p9`, `p10`, `p11`, `p12`, `p13`, `p14`, `p15`, `p16`, `p17`, `p18`, `p19`) are defined as supported by both `v10` and `v20`.
           `v20` has AABB `((-0.135, -0.135), (0.135, 0.135))`.
           These poses are all within the bounds of `v20`.
           
           Let's pick the poses that have clear separation for objects:
           `v16` (AABB: `((-0.035, -0.035), (0.035, 0.035))`) to `p8` (0.025, 0.0, 0.782)
           `v12` (AABB: `((0.015, -0.035), (0.085, 0.035))`) to `p6` (0.0, 0.05, 0.782)
           `v14` (AABB: `((-0.035, -0.085), (0.035, -0.015))`) to `p7` (0.0, -0.05, 0.782)
           `v18` (AABB: `((-0.06, -0.035), (0.01, 0.035))`) to `p9` (0.0, -0.05, 0.782) -- Collision with `v14` at `p7`
           `v8` (AABB: `((-0.035, -0.085), (0.035, -0.015))`) to `p5` (0.0, 0.0, 0.782)
           
           It seems `p7` and `p9` are the same position, which caused the previous failure. Let's find distinct poses that are supported by `v20`.
           The available poses for `v20` are:
           `p5`: (0.0, 0.0, 0.782)
           `p6`: (0.0, 0.05, 0.782)
           `p7`: (0.0, -0.05, 0.782)
           `p8`: (0.025, 0.0, 0.782)
           `p9`: (-0.025, 0.0, 0.782)
           `p10`: (0.0, 0.0, 0.782) -- same as `p5`
           `p11`: (0.0, 0.05, 0.782) -- same as `p6`
           `p12`: (0.0, -0.05, 0.782) -- same as `p7`
           `p13`: (0.025, 0.0, 0.782) -- same as `p8`
           `p14`: (-0.025, 0.0, 0.782) -- same as `p9`
           `p15`: (0.0, 0.0, 0.782) -- same as `p5`, `p10`
           `p16`: (0.05, 0.0, 0.782) -- NEW unique
           `p17`: (-0.05, 0.0, 0.782) -- NEW unique
           `p18`: (0.0, 0.05, 0.782) -- same as `p6`, `p11`
           `p19`: (0.0, -0.05, 0.782) -- same as `p7`, `p12`
           
           Unique poses on `v20`:
           `p5`: (0.0, 0.0, 0.782)
           `p6`: (0.0, 0.05, 0.782)
           `p7`: (0.0, -0.05, 0.782)
           `p8`: (0.025, 0.0, 0.782)
           `p9`: (-0.025, 0.0, 0.782)
           `p16`: (0.05, 0.0, 0.782)
           `p17`: (-0.05, 0.0, 0.782)
           
           Now I have 7 distinct poses for 5 objects. This should work.
           Let's assign them:
           1. Pick `v16` from `v17` and place at `p8` on `v20`.
           2. Pick `v12` from `v13` and place at `p6` on `v20`.
           3. Pick `v14` from `v15` and place at `p17` on `v20`.
           4. Pick `v18` from `v19` and place at `p9` on `v20`.
           5. Pick `v8` from `v9` and place at `p5` on `v20`.
           
           This combination ensures that each object is placed at a distinct pose on `v20`. I'll pick the base configurations and trajectories closest to the initial pose `v3` to minimize cost.
           
           --Plan--:
           (move_base v3 #q29 #o0)
           (pick v4 v16 v17 #g7 #q29 #t95)
           (move_base #q29 #q22 #o0)
           (place v4 v16 p8 #g7 #q22 #t79)
           (move_base #q22 #q21 #o0)
           (pick v4 v12 v13 #g6 #q21 #t78)
           (move_base #q21 #q23 #o0)
           (place v4 v12 p6 #g6 #q23 #t80)
           (move_base #q23 #q20 #o0)
           (pick v4 v14 v15 #g5 #q20 #t77)
           (move_base #q20 #o3 #o0)
           (place v4 v14 p17 #g5 #o3 #o4)
           (move_base #o3 #q27 #o0)
           (pick v4 v18 v19 #g9 #q27 #t84)
           (move_base #q27 #q26 #o0)
           (place v4 v18 p9 #g9 #q26 #t83)
           (move_base #q26 #q25 #o0)
           (pick v4 v8 v9 #g8 #q25 #t82)
           (move_base #q25 #q28 #o0)
           (place v4 v8 p5 #g8 #q28 #t85)

