User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v14, v15)
           Atom pose(v8, v9)
           Atom ataconf(v6, v7)
           Atom arm(v4)
           Atom supported(v14, v15, v11)
           Atom aconf(v4, v5)
           Atom pose(v14, v15)
           Atom supported(v12, v13, v11)
           Atom controllable(v4)
           Atom stackable(v12, v10)
           Atom stackable(v12, v16)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom graspable(v12)
           Atom handempty(v6)
           Atom atpose(v8, v9)
           Atom stackable(v14, v16)
           Atom atpose(v12, v13)
           Atom handempty(v4)
           Atom supported(v8, v9, v11)
           Atom pose(v12, v13)
           Atom graspable(v14)
           Atom ataconf(v4, v5)
           Atom bconf(v3)
           Atom stackable(v14, v10)
           Atom stackable(v8, v10)
           Atom stackable(v8, v16)
           Atom canmove()
           Atom graspable(v8)
           Atom atbconf(v3)
           Atom pose(v8, #p2)
           Atom supported(v8, #p2, v16)
           Atom grasp(v8, #g0)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #g1)
           Atom pose(v14, #p0)
           Atom supported(v14, #p0, v16)
           Atom grasp(v12, #g2)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, v15, #g1, #q2, #t2)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, #p2, #g0, #q1, #t1)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v14, #p0, #g1, #q5, #t8)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v12, #p1, #g2, #q3, #t6)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v12, v13, #g2, #q4, #t7)
           Atom basemotion(#q2, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q0, #o0, #q2)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t10)
           Atom basemotion(#q3, #t10, #q2)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, #q3)
           Atom btraj(#t9)
           Atom basemotion(#q4, #t9, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom btraj(#t12)
           Atom basemotion(#q2, #t12, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q2, #o0, #q1)
           Atom btraj(#t13)
           Atom basemotion(#q0, #t13, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t11)
           Atom basemotion(#q1, #t11, #q4)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q3)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, v3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q1 #t13))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q4 #t11))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t12))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q2 #t10))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q3 #t9))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q1 #t4))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 #p1 #g2 #q3 #t6))
           ((place v4 v12 #p1 #g2 #q3 #t6))
           ((pick v4 v12 v13 #g2 #q4 #t7))
           ((place v4 v12 v13 #g2 #q4 #t7))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 #p0 #g1 #q5 #t8))
           ((place v4 v14 #p0 #g1 #q5 #t8))
           ((pick v4 v14 v15 #g1 #q2 #t2))
           ((place v4 v14 v15 #g1 #q2 #t2))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p2 #g0 #q1 #t1))
           ((place v4 v8 #p2 #g0 #q1 #t1))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The robot needs to place three objects (v8, v12, and v14) on the surface v16. Currently, v8, v12, and v14 are at poses v9, v13, and v15 respectively, and are all supported by v11. The robot arm v4 is handempty and at configuration v5, and the base is at configuration v3.
           
           To achieve the goal, the robot must pick up each object and then place it on v16.
           
           1. **Move to v8 and pick it up:**
               - The object v8 is at pose v9. The kin for picking v8 from v9 uses base configuration #q0. So, the robot must first move its base to #q0.
               - Then, it can pick v8.
           
           2. **Move to v16 and place v8:**
               - The target surface is v16. To place v8 on v16, we need to find a pose for v8 on v16. The initial state shows `supported(v8, #p2, v16)` which means #p2 is a valid pose for v8 on v16.
               - The kin for placing v8 at #p2 uses base configuration #q1. So, the robot must move its base to #q1.
               - Then, it can place v8.
           
           3. **Move to v12 and pick it up:**
               - The object v12 is at pose v13. The kin for picking v12 from v13 uses base configuration #q4. So, the robot must move its base to #q4.
               - Then, it can pick v12.
           
           4. **Move to v16 and place v12:**
               - The target surface is v16. `supported(v12, #p1, v16)` means #p1 is a valid pose for v12 on v16.
               - The kin for placing v12 at #p1 uses base configuration #q3. So, the robot must move its base to #q3.
               - Then, it can place v12.
           
           5. **Move to v14 and pick it up:**
               - The object v14 is at pose v15. The kin for picking v14 from v15 uses base configuration #q2. So, the robot must move its base to #q2.
               - Then, it can pick v14.
           
           6. **Move to v16 and place v14:**
               - The target surface is v16. `supported(v14, #p0, v16)` means #p0 is a valid pose for v14 on v16.
               - The kin for placing v14 at #p0 uses base configuration #q5. So, the robot must move its base to #q5.
               - Then, it can place v14.
           
           All objects will then be on v16, satisfying the goal.
           
           --Plan--:
           (move_base v3 #q0 #t3)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q1 #t13)
           (place v4 v8 #p2 #g0 #q1 #t1)
           (move_base #q1 #q4 #t11)
           (pick v4 v12 v13 #g2 #q4 #t7)
           (move_base #q4 #q3 #t9)
           (place v4 v12 #p1 #g2 #q3 #t6)
           (move_base #q3 #q2 #t10)
           (pick v4 v14 v15 #g1 #q2 #t2)
           (move_base #q2 #q5 #t12)
           (place v4 v14 #p0 #g1 #q5 #t8)

