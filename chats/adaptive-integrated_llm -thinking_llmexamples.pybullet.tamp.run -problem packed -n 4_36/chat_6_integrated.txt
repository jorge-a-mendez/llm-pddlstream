User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q8: object
           #q9: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t30: object
           p4: object
           p5: object
           p6: object
           p7: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v44: object
           v45: object
           v46: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v17 is a pose with position (0.044, -0.31, 0.781) and quaternion (0.0, 0.0, 1.0, -0.023).
           Object v15 is a pose with position (0.24, -0.136, 0.781) and quaternion (0.0, 0.0, 0.762, 0.647).
           Object v39 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.5, -0.5, -0.5, 0.5) relative to the target object.
           Object p4 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v13 is a pose with position (-0.197, -0.233, 0.781) and quaternion (0.0, 0.0, -0.788, 0.615).
           Object p5 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v42 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.5, -0.5, -0.5, 0.5) relative to the target object.
           Object p6 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v46 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.0, -0.707, 0.0, 0.707) relative to the target object.
           Object v45 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.5, -0.5, -0.5, 0.5) relative to the target object.
           Object v43 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.0, -0.707, 0.0, 0.707) relative to the target object.
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, 0.015), (-0.015, 0.085)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v44 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.5, -0.5, -0.5, 0.5) relative to the target object.
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.085), (0.085, -0.015)).
           Object v41 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.0, -0.707, 0.0, 0.707) relative to the target object.
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.199, -0.176), (0.28, -0.096)).
           Object v40 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.0, -0.707, 0.0, 0.707) relative to the target object.
           Object v9 is a pose with position (0.186, -0.454, 0.781) and quaternion (0.0, 0.0, -0.539, 0.842).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, 0.015), (0.085, 0.085)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v12)
           Atom aconf(v4, v5)
           Atom ~test-cfree-approach-pose-negative(v12, p5, v42, v8, p4)
           Atom aconf(v6, v7)
           Atom controllable(v4)
           Atom atpose(v8, v9)
           Atom ataconf(v6, v7)
           Atom stackable(v8, v10)
           Atom pose(v16, p7)
           Atom ~test-cfree-approach-pose-negative(v16, p7, v39, v14, p6)
           Atom pose(v8, v9)
           Atom handempty(v4)
           Atom supported(v12, p5, v18)
           Atom atpose(v12, v13)
           Atom pose(v8, p4)
           Atom atpose(v14, v15)
           Atom kin(v31, v37, p6, v33, v34, v35)
           Atom handempty(v6)
           Atom pose(v14, p6)
           Atom kin(v31, v38, p7, v33, v34, v35)
           Atom bconf(v3)
           Atom stackable(v14, v18)
           Atom graspable(v14)
           Atom pose(v12, v13)
           Atom supported(v12, v13, v11)
           Atom supported(v8, v9, v11)
           Atom stackable(v14, v10)
           Atom stackable(v12, v18)
           Atom supported(v14, v15, v11)
           Atom arm(v6)
           Atom graspable(v8)
           Atom graspable(v16)
           Atom supported(v16, v17, v11)
           Atom atpose(v16, v17)
           Atom supported(v8, p4, v18)
           Atom pose(v14, v15)
           Atom kin(v31, v36, p5, v33, v34, v35)
           Atom supported(v16, p7, v18)
           Atom ~test-cfree-approach-pose-negative(v16, p7, v40, v12, p5)
           Atom stackable(v16, v18)
           Atom stackable(v12, v10)
           Atom stackable(v8, v18)
           Atom kin(v31, v32, p4, v33, v34, v35)
           Atom ataconf(v4, v5)
           Atom atbconf(v3)
           Atom pose(v16, v17)
           Atom canmove()
           Atom arm(v4)
           Atom pose(v12, p5)
           Atom stackable(v16, v10)
           Atom supported(v14, p6, v18)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v16, #o2, v18)
           Atom supported(v12, #o2, v18)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v16, v40)
           Atom grasp(v16, v39)
           Atom grasp(v8, v44)
           Atom grasp(v8, v43)
           Atom grasp(v14, v46)
           Atom grasp(v14, v45)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, v17, v40, #o3, #o4)
           Atom bconf(#q9)
           Atom atraj(#t21)
           Atom kin(v4, v16, v17, v39, #q9, #t21)
           Atom kin(v4, v8, v9, v43, #o3, #o4)
           Atom bconf(#q14)
           Atom atraj(#t29)
           Atom kin(v4, v14, v15, v46, #q14, #t29)
           Atom kin(v4, v14, v15, v45, #o3, #o4)
           Atom bconf(#q15)
           Atom atraj(#t30)
           Atom kin(v4, v8, v9, v44, #q15, #t30)
           Atom grasp(v12, v41)
           Atom grasp(v12, v42)
           Atom supported(v14, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#q11)
           Atom atraj(#t26)
           Atom kin(v4, v12, p5, v42, #q11, #t26)
           Atom bconf(#q8)
           Atom atraj(#t20)
           Atom kin(v4, v12, v13, v42, #q8, #t20)
           Atom kin(v4, v12, v13, v41, #o3, #o4)
           Atom kin(v4, v12, p5, v41, #o3, #o4)
           Atom kin(v4, v16, p7, v40, #o3, #o4)
           Atom bconf(#q10)
           Atom atraj(#t22)
           Atom kin(v4, v16, p7, v39, #q10, #t22)
           Atom kin(v4, v14, p6, v45, #o3, #o4)
           Atom bconf(#q13)
           Atom atraj(#t28)
           Atom kin(v4, v14, p6, v46, #q13, #t28)
           Atom supported(v8, #o2, v10)
           Atom kin(v4, v8, p4, v43, #o3, #o4)
           Atom bconf(#q12)
           Atom atraj(#t27)
           Atom kin(v4, v8, p4, v44, #q12, #t27)
           Atom basemotion(#q13, #o0, #q13)
           Atom basemotion(v3, #o0, #q13)
           Atom basemotion(#q13, #o0, v3)
           Atom basemotion(#q13, #o0, #q10)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q10, #o0, #q10)
           Atom btraj(#t25)
           Atom basemotion(v3, #t25, #q10)
           Atom basemotion(#q10, #o0, #q13)
           Atom basemotion(v3, #o0, #q12)
           Atom basemotion(#q10, #o0, #q12)
           Atom basemotion(#q13, #o0, #q12)
           Atom basemotion(#q12, #o0, #q12)
           Atom basemotion(#q12, #o0, #q13)
           Atom basemotion(#q12, #o0, v3)
           Atom basemotion(#q12, #o0, #q10)
           Atom basemotion(#q8, #o0, #q10)
           Atom basemotion(#q10, #o0, #q8)
           Atom basemotion(#q8, #o0, #q12)
           Atom basemotion(#q13, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q12, #o0, #q8)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q13)
           Atom btraj(#t23)
           Atom basemotion(v3, #t23, #q8)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q11, #o0, #q8)
           Atom basemotion(#q11, #o0, #q12)
           Atom basemotion(#q11, #o0, #q13)
           Atom basemotion(#q12, #o0, #q11)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q8, #o0, #q11)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q13, #o0, #q11)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q10, #o0, #q15)
           Atom basemotion(#q11, #o0, #q15)
           Atom basemotion(#q15, #o0, #q13)
           Atom basemotion(#q15, #o0, v3)
           Atom basemotion(v3, #o0, #q15)
           Atom basemotion(#q15, #o0, #q15)
           Atom basemotion(#q15, #o0, #q11)
           Atom basemotion(#q8, #o0, #q15)
           Atom basemotion(#q15, #o0, #q10)
           Atom basemotion(#q13, #o0, #q15)
           Atom basemotion(#q15, #o0, #q8)
           Atom basemotion(#q12, #o0, #q15)
           Atom basemotion(#q15, #o0, #q12)
           Atom basemotion(#q10, #o0, #q14)
           Atom basemotion(#q14, #o0, #q14)
           Atom basemotion(#q15, #o0, #q14)
           Atom basemotion(#q13, #o0, #q14)
           Atom basemotion(#q12, #o0, #q14)
           Atom basemotion(#q14, #o0, #q15)
           Atom basemotion(#q8, #o0, #q14)
           Atom basemotion(#q14, #o0, #q8)
           Atom basemotion(#q11, #o0, #q14)
           Atom basemotion(#q14, #o0, #q11)
           Atom basemotion(#q14, #o0, #q13)
           Atom basemotion(#q14, #o0, #q12)
           Atom basemotion(#q14, #o0, v3)
           Atom basemotion(#q14, #o0, #q10)
           Atom basemotion(v3, #o0, #q14)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q9, #o0, #q12)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q13, #o0, #q9)
           Atom basemotion(#q9, #o0, #q13)
           Atom basemotion(#q9, #o0, #q14)
           Atom basemotion(#q12, #o0, #q9)
           Atom basemotion(#q15, #o0, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q9, #o0, #q10)
           Atom basemotion(#q10, #o0, #q9)
           Atom btraj(#t24)
           Atom basemotion(v3, #t24, #q9)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q9, #o0, #q15)
           Atom basemotion(#q14, #o0, #q9)
           Atom kin(v4, v12, #o2, v41, #o3, #o4)
           Atom kin(v4, v12, #o2, v42, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q15, #o0, #o3)
           Atom basemotion(#q13, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, #q14)
           Atom basemotion(#o3, #o0, #q12)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#q14, #o0, #o3)
           Atom basemotion(#o3, #o0, #q13)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q15)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#q12, #o0, #o3)
           Atom kin(v4, v14, #o2, v46, #o3, #o4)
           Atom kin(v4, v14, #o2, v45, #o3, #o4)
           Atom kin(v4, v16, #o2, v39, #o3, #o4)
           Atom kin(v4, v16, #o2, v40, #o3, #o4)
           Atom kin(v4, v8, #o2, v44, #o3, #o4)
           Atom kin(v4, v8, #o2, v43, #o3, #o4)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q14 #o0))
           ((move_base #o3 #q15 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q14 #o0))
           ((move_base #q10 #q15 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q14 #o0))
           ((move_base #q11 #q15 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q13 #o0))
           ((move_base #q12 #q14 #o0))
           ((move_base #q12 #q15 #o0))
           ((move_base #q12 #q8 #o0))
           ((move_base #q12 #q9 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q11 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q14 #o0))
           ((move_base #q13 #q15 #o0))
           ((move_base #q13 #q8 #o0))
           ((move_base #q13 #q9 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q14 #o3 #o0))
           ((move_base #q14 #q10 #o0))
           ((move_base #q14 #q11 #o0))
           ((move_base #q14 #q12 #o0))
           ((move_base #q14 #q13 #o0))
           ((move_base #q14 #q14 #o0))
           ((move_base #q14 #q15 #o0))
           ((move_base #q14 #q8 #o0))
           ((move_base #q14 #q9 #o0))
           ((move_base #q14 v3 #o0))
           ((move_base #q15 #o3 #o0))
           ((move_base #q15 #q10 #o0))
           ((move_base #q15 #q11 #o0))
           ((move_base #q15 #q12 #o0))
           ((move_base #q15 #q13 #o0))
           ((move_base #q15 #q14 #o0))
           ((move_base #q15 #q15 #o0))
           ((move_base #q15 #q8 #o0))
           ((move_base #q15 #q9 #o0))
           ((move_base #q15 v3 #o0))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q12 #o0))
           ((move_base #q8 #q13 #o0))
           ((move_base #q8 #q14 #o0))
           ((move_base #q8 #q15 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q12 #o0))
           ((move_base #q9 #q13 #o0))
           ((move_base #q9 #q14 #o0))
           ((move_base #q9 #q15 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q12 #o0))
           ((move_base v3 #q13 #o0))
           ((move_base v3 #q14 #o0))
           ((move_base v3 #q15 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q8 #t23))
           ((move_base v3 #q9 #t24))
           ((move_base v3 #q10 #t25))
           ((pick v4 v12 #o2 v41 #o3 #o4))
           ((place v4 v12 #o2 v41 #o3 #o4))
           ((pick v4 v12 #o2 v42 #o3 #o4))
           ((place v4 v12 #o2 v42 #o3 #o4))
           ((pick v4 v12 p5 v41 #o3 #o4))
           ((place v4 v12 p5 v41 #o3 #o4))
           ((pick v4 v12 p5 v42 #q11 #t26))
           ((place v4 v12 p5 v42 #q11 #t26))
           ((pick v4 v12 v13 v41 #o3 #o4))
           ((place v4 v12 v13 v41 #o3 #o4))
           ((pick v4 v12 v13 v42 #q8 #t20))
           ((place v4 v12 v13 v42 #q8 #t20))
           ((pick v4 v14 #o2 v45 #o3 #o4))
           ((place v4 v14 #o2 v45 #o3 #o4))
           ((pick v4 v14 #o2 v46 #o3 #o4))
           ((place v4 v14 #o2 v46 #o3 #o4))
           ((pick v4 v14 p6 v45 #o3 #o4))
           ((place v4 v14 p6 v45 #o3 #o4))
           ((pick v4 v14 p6 v46 #q13 #t28))
           ((place v4 v14 p6 v46 #q13 #t28))
           ((pick v4 v14 v15 v45 #o3 #o4))
           ((place v4 v14 v15 v45 #o3 #o4))
           ((pick v4 v14 v15 v46 #q14 #t29))
           ((place v4 v14 v15 v46 #q14 #t29))
           ((pick v4 v16 #o2 v39 #o3 #o4))
           ((place v4 v16 #o2 v39 #o3 #o4))
           ((pick v4 v16 #o2 v40 #o3 #o4))
           ((place v4 v16 #o2 v40 #o3 #o4))
           ((pick v4 v16 p7 v39 #q10 #t22))
           ((place v4 v16 p7 v39 #q10 #t22))
           ((pick v4 v16 p7 v40 #o3 #o4))
           ((place v4 v16 p7 v40 #o3 #o4))
           ((pick v4 v16 v17 v39 #q9 #t21))
           ((place v4 v16 v17 v39 #q9 #t21))
           ((pick v4 v16 v17 v40 #o3 #o4))
           ((place v4 v16 v17 v40 #o3 #o4))
           ((pick v4 v8 #o2 v43 #o3 #o4))
           ((place v4 v8 #o2 v43 #o3 #o4))
           ((pick v4 v8 #o2 v44 #o3 #o4))
           ((place v4 v8 #o2 v44 #o3 #o4))
           ((pick v4 v8 p4 v43 #o3 #o4))
           ((place v4 v8 p4 v43 #o3 #o4))
           ((pick v4 v8 p4 v44 #q12 #t27))
           ((place v4 v8 p4 v44 #q12 #t27))
           ((pick v4 v8 v9 v43 #o3 #o4))
           ((place v4 v8 v9 v43 #o3 #o4))
           ((pick v4 v8 v9 v44 #q15 #t30))
           ((place v4 v8 v9 v44 #q15 #t30))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Alright, let's get this done!** My mission is to move four objects, v8, v12, v14, and v16, all currently resting on surface v11, onto the target surface v18. The robot arm v4 is empty and ready to go!
           
           Here's the plan I've cooked up, broken down into manageable steps for each object:
           
           *   **Move v8:** This little guy's currently sitting at pose v9. I need to **pick** it up (using a specific grasping configuration and base configuration for the robot) and then **place** it at pose p4 on v18.
           
           *   **Move v12:** This one's hanging out at pose v13. Just like with v8, I'll **pick** it up, and then **place** it on pose p5 on the target.
           
           *   **Move v14:**  v14's in v15. Same drill - **pick** and then **place** at pose p6.
           
           *   **Move v16:** Finally, v16 at v17. **Pick** it and **place** at pose p7.
           
           Each object needs to be picked and placed. To execute this, I'll need to use the available "kin" predicates (which gives me the actions for the arm and the base motion). Also, the surface v18 is described by AABB `((-0.135, -0.135), (0.135, 0.135))`. I've checked that the four target poses (p4, p5, p6, p7) are all safely within the bounds of v18.
           
           So the plan will be to:
           1.  Move the base robot to position required to move v12, and then:
               *   Pick v12
               *   Move the base robot to position required to place v12, and then:
               *   Place v12
           2.  Move the base robot to position required to move v16, and then:
               *   Pick v16
               *   Move the base robot to position required to place v16, and then:
               *   Place v16
           3.  Move the base robot to position required to move v8, and then:
               *   Pick v8
               *   Move the base robot to position required to place v8, and then:
               *   Place v8
           4.  Move the base robot to position required to move v14, and then:
               *   Pick v14
               *   Move the base robot to position required to place v14, and then:
               *   Place v14
           Then, all the objects will be where they need to be, v8, v12, v14, and v16 will be on v18.
           
)

Model:     **Alright, let's get this done!** My mission is to move four objects, v8, v12, v14, and v16, all currently resting on surface v11, onto the target surface v18. The robot arm v4 is empty and ready to go!
           
           Here's the plan I've cooked up, broken down into manageable steps for each object:
           
           *   **Move v8:** This little guy's currently sitting at pose v9. I need to **pick** it up (using a specific grasping configuration and base configuration for the robot) and then **place** it at pose p4 on v18.
           
           *   **Move v12:** This one's hanging out at pose v13. Just like with v8, I'll **pick** it up, and then **place** it on pose p5 on the target.
           
           *   **Move v14:**  v14's in v15. Same drill - **pick** and then **place** at pose p6.
           
           *   **Move v16:** Finally, v16 at v17. **Pick** it and **place** at pose p7.
           
           Each object needs to be picked and placed. To execute this, I'll need to use the available "kin" predicates (which gives me the actions for the arm and the base motion). Also, the surface v18 is described by AABB `((-0.135, -0.135), (0.135, 0.135))`. I've checked that the four target poses (p4, p5, p6, p7) are all safely within the bounds of v18.
           
           So the plan will be to:
           1.  Move the base robot to position required to move v12, and then:
               *   Pick v12
               *   Move the base robot to position required to place v12, and then:
               *   Place v12
           2.  Move the base robot to position required to move v16, and then:
               *   Pick v16
               *   Move the base robot to position required to place v16, and then:
               *   Place v16
           3.  Move the base robot to position required to move v8, and then:
               *   Pick v8
               *   Move the base robot to position required to place v8, and then:
               *   Place v8
           4.  Move the base robot to position required to move v14, and then:
               *   Pick v14
               *   Move the base robot to position required to place v14, and then:
               *   Place v14
           Then, all the objects will be where they need to be, v8, v12, v14, and v16 will be on v18.
           

