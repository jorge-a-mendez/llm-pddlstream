User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom objective(v17)
           Atom lander(v9)
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom rock(v7)
           Atom camera(v10)
           Atom mode(v11)
           Atom type(v4, v2)
           Atom type(v7, v6)
           Atom atconf(v14, v15)
           Atom objective(v20)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom type(v5, v6)
           Atom onboard(v10, v12)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom rock(v8)
           Atom rover(v12)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom onboard(v10, v14)
           Atom objective(v19)
           Atom type(v3, v2)
           Atom atconf(v12, v13)
           Atom rock(v4)
           Atom store(v16)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q4, #y2, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v12, #q2, #y1, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom above(v14, #o5, v3)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom comvisible(v14, #q8, #y5, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #t9, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v14, #q8, #t14, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t0, #q0)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #t3, v13)
           Atom motion(v12, #q5, #t6, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q0, #t1, #q1)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #t11, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, v15, #t17, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q4, #t5, #q1)
           Atom motion(v12, v13, #t8, #q4)
           Atom motion(v12, #q4, #t15, #q5)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, v13, #t7, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #t4, #q1)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #t10, #q6)
           Atom motion(v12, #q5, #t18, #q6)
           Atom motion(v12, #q6, #t12, #q2)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #t2, #q1)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q9, #t16, #q1)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q1, #t13, #q9)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #t0 #q0))
           ((move v12 #q1 #t13 #q9))
           ((move v12 #q1 #t3 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t4 #q1))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t2 #q1))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t15 #q5))
           ((move v12 #q4 #t5 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t18 #q6))
           ((move v12 #q5 #t6 #q1))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q2))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t16 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q6))
           ((move v12 v13 #t7 #q2))
           ((move v12 v13 #t8 #q4))
           ((move v12 v13 #t9 #q5))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t11 #q8))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #t14 v15))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t17 #q7))
           ((calibrate v12 #q2 #y1 v20 v10))
           ((calibrate v12 #q4 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q2 #y1 v20 v10 v11))
           ((take_image v12 #q4 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y5 v9 v1))
           ((send_analysis v14 #q8 #y5 v9 v3))
           ((send_analysis v14 #q8 #y5 v9 v4))
           ((send_analysis v14 #q8 #y5 v9 v7))
           ((send_analysis v14 #q8 #y5 v9 v8))
           ((send_analysis v14 #q8 #y5 v9 v5))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), and a store (v16). There are also several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). The camera v10 is onboard both rovers and supports mode v11. Initially, both rovers are at specific configurations (v12 at v13, v14 at v15) and have a free store v16. Several rock types are defined. The goal `new-axiom@0()` requires that:
           1. Both rovers (v12 and v14) are at their initial configurations (v13 and v15 respectively).
           2. The store v16 for both rovers is free.
           3. Images of all objectives (v17, v18, v19, v20) in mode v11 have been received.
           4. All rocks (v1, v3, v4, v5, v7, v8) have been analyzed and their analysis received, grouped by type (v2 for v1, v3, v4; v6 for v5, v7, v8).
           
           Looking at the initial state and the goal, the rovers are already at their initial configurations, and their stores are free. This means we only need to focus on achieving the `receivedimage` and `receivedanalysis` predicates.
           
           For `receivedimage`:
           We need to take images of objectives v17, v18, v19, v20 with camera v10 in mode v11 and then send them to the lander v9. Both rovers have visibility to all objectives and the lander from various configurations.
           
           For `receivedanalysis`:
           We need to sample and analyze all rocks (v1, v3, v4, v5, v7, v8) and then send the analysis to the lander v9. Both rovers have sampling capabilities.
           
           A possible plan involves:
           1. Calibrating the camera for each rover.
           2. Taking images of all objectives with both rovers.
           3. Sending the images to the lander with both rovers.
           4. Sampling all rocks with both rovers.
           5. Sending the analysis of all sampled rocks to the lander with both rovers.
           
           The current initial state satisfies `atconf(v12, v13)` and `atconf(v14, v15)`, as well as `free(v12, v16)` and `free(v14, v16)`.
           The goal requires `receivedimage` for v17, v18, v19, v20 and `receivedanalysis` for all rocks.
           
           Let's focus on Rover v12 for imaging and analysis tasks, then Rover v14 if needed.
           
           Rover v12 has visibility to all objectives (v17, v18, v19, v20) from different configurations. It also has visibility to the lander v9 from #q1.
           Rover v12 can sample rocks v1, v3, v4, v5, v7, v8 from various configurations.
           
           Let's use rover v12 to perform all imaging and then all sampling.
           Rover v12 can take images of v17, v18, v19, v20.
           - `imagevisible(v12, #q5, #y3, v17)`
           - `imagevisible(v12, #q6, #y4, v18)`
           - `imagevisible(v12, #q4, #y2, v19)`
           - `imagevisible(v12, #q2, #y1, v20)`
           Rover v12 can communicate with the lander from `#q1`.
           
           For rocks:
           - `above(v12, #q0, v1)`
           - `above(v12, #q9, v3)`
           - `above(v12, #o5, v4)`
           - `above(v12, #q3, v5)`
           - `above(v12, #o5, v7)`
           - `above(v12, #o5, v8)`
           
           The plan should sequence movements to required configurations, calibrate, take image, move to communication config, send image, move to sampling config, sample, and then move to communication config and send analysis. Since the goal requires both rovers to be at their initial positions and stores free at the end, the rover doing the work will need to move back to its starting configuration and drop rocks if it sampled any. However, the goal condition `free(v12, v16)` and `free(v14, v16)` means we can't end with full stores.
           
           We can achieve all image and analysis goals using rover v12 primarily, as it has access to all needed actions.
           
           Sequence for imaging with v12:
           1. Move v12 to #q5, calibrate, take image of v17.
           2. Move v12 to #q6, calibrate, take image of v18.
           3. Move v12 to #q4, calibrate, take image of v19.
           4. Move v12 to #q2, calibrate, take image of v20.
           5. Move v12 to #q1 (communication config) and send all images.
           
           Sequence for sampling and analysis with v12:
           1. Move v12 to #o5, sample v4. (store is now full)
           2. Drop v4.
           3. Move v12 to #o5, sample v7. (store is now full)
           4. Drop v7.
           5. Move v12 to #o5, sample v8. (store is now full)
           6. Drop v8.
           7. Move v12 to #q0, sample v1. (store is now full)
           8. Drop v1.
           9. Move v12 to #q3, sample v5. (store is now full)
           10. Drop v5.
           11. Move v12 to #q9, sample v3. (store is now full)
           12. Drop v3.
           13. Move v12 to #q1 (communication config) and send all analyses.
           
           The rover v14 will not be used, and it will remain at its initial state (atconf v15, free v16).
           
           --Plan--:
           (move v12 v13 #t9 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t18 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #o2 #q4)
           (calibrate v12 #q4 #y2 v19 v10)
           (take_image v12 #q4 #y2 v19 v10 v11)
           (move v12 #q4 #o2 #q2)
           (calibrate v12 #q2 #y1 v20 v10)
           (take_image v12 #q2 #y1 v20 v10 v11)
           (move v12 #q2 #t4 #q1)
           (send_image v12 #q1 #y0 v9 v17 v11)
           (send_image v12 #q1 #y0 v9 v18 v11)
           (send_image v12 #q1 #y0 v9 v19 v11)
           (send_image v12 #q1 #y0 v9 v20 v11)
           (move v12 #q1 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v7 v16)
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v8 v16)
           (drop_rock v12 v16)
           (move v12 #o5 #o2 #q0)
           (sample_rock v12 #q0 v1 v16)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #q3)
           (sample_rock v12 #q3 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q3 #o2 #q9)
           (sample_rock v12 #q9 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q9 #t16 #q1)
           (send_analysis v12 #q1 #y0 v9 v4)
           (send_analysis v12 #q1 #y0 v9 v7)
           (send_analysis v12 #q1 #y0 v9 v8)
           (send_analysis v12 #q1 #y0 v9 v1)
           (send_analysis v12 #q1 #y0 v9 v5)
           (send_analysis v12 #q1 #y0 v9 v3)
           (move v12 #q1 #t3 v13)

