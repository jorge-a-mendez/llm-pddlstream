User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom objective(v17)
           Atom lander(v9)
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom rock(v7)
           Atom camera(v10)
           Atom mode(v11)
           Atom type(v4, v2)
           Atom type(v7, v6)
           Atom atconf(v14, v15)
           Atom objective(v20)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom type(v5, v6)
           Atom onboard(v10, v12)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom rock(v8)
           Atom rover(v12)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom onboard(v10, v14)
           Atom objective(v19)
           Atom type(v3, v2)
           Atom atconf(v12, v13)
           Atom rock(v4)
           Atom store(v16)
           Atom above(v12, #q10, v7)
           Atom conf(v12, #q10)
           Atom above(v12, #q11, v4)
           Atom conf(v12, #q11)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom imagevisible(v12, #q4, #y2, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q12, v8)
           Atom conf(v12, #q12)
           Atom imagevisible(v14, #q14, #y7, v19)
           Atom imagerange(v14, #q14, v19)
           Atom conf(v14, #q14)
           Atom ray(#y7)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q13, #y6, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y6)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v1)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom imagevisible(v14, #q16, #y9, v18)
           Atom imagerange(v14, #q16, v18)
           Atom conf(v14, #q16)
           Atom ray(#y9)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q2, #y1, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #q15, #y8, v20)
           Atom imagerange(v14, #q15, v20)
           Atom conf(v14, #q15)
           Atom ray(#y8)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom comvisible(v14, #q8, #y5, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q1, #t3, v13)
           Atom motion(v12, #q9, #t16, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t13, #q9)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, v15, #t33, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v12, #q1, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #t36, #q0)
           Atom motion(v12, #q0, #t1, #q1)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q1, #t34, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q12, #t35, #q1)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, v13, #t7, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t4, #q1)
           Atom motion(v12, v13, #t9, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q5, #t6, #q1)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q1, #t30, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q0, #t24, #q3)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q3, #t25, #q9)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #t2, #q1)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #t12, #q2)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, v13, #t10, #q6)
           Atom motion(v12, #q5, #t18, #q6)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q11, #t21, #q0)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q1, #t23, #q11)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #t37, #q1)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, v15, #t17, #q7)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v12, #q10, #t20, #q0)
           Atom motion(v12, #q10, #t29, #q1)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q1, #t22, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, v15, #t31, #q13)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, v15, #t32, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #t28, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q7, #t11, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q13, #t27, #q8)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, #q8, #t14, v15)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q4, #t15, #q5)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, v13, #t8, #q4)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q4, #t5, #q1)
           Atom motion(v12, #q6, #t19, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #t26, #q2)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q11 v4 v16))
           ((sample_rock v12 #q12 v8 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q1))
           ((move v12 #q0 #t24 #q3))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #t0 #q0))
           ((move v12 #q1 #t13 #q9))
           ((move v12 #q1 #t22 #q10))
           ((move v12 #q1 #t23 #q11))
           ((move v12 #q1 #t3 v13))
           ((move v12 #q1 #t30 #q3))
           ((move v12 #q1 #t34 #q12))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t20 #q0))
           ((move v12 #q10 #t29 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t21 #q0))
           ((move v12 #q11 #t37 #q1))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t35 #q1))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t4 #q1))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t2 #q1))
           ((move v12 #q3 #t25 #q9))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t15 #q5))
           ((move v12 #q4 #t26 #q2))
           ((move v12 #q4 #t5 #q1))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t18 #q6))
           ((move v12 #q5 #t6 #q1))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q2))
           ((move v12 #q6 #t19 #q4))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t16 #q1))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q6))
           ((move v12 v13 #t36 #q0))
           ((move v12 v13 #t7 #q2))
           ((move v12 v13 #t8 #q4))
           ((move v12 v13 #t9 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t27 #q8))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t28 #q8))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t11 #q8))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #t14 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t17 #q7))
           ((move v14 v15 #t31 #q13))
           ((move v14 v15 #t32 #q14))
           ((move v14 v15 #t33 #q15))
           ((calibrate v12 #q2 #y1 v20 v10))
           ((calibrate v12 #q4 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q13 #y6 v17 v10))
           ((calibrate v14 #q14 #y7 v19 v10))
           ((calibrate v14 #q15 #y8 v20 v10))
           ((calibrate v14 #q16 #y9 v18 v10))
           ((take_image v12 #q2 #y1 v20 v10 v11))
           ((take_image v12 #q4 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q13 #y6 v17 v10 v11))
           ((take_image v14 #q14 #y7 v19 v10 v11))
           ((take_image v14 #q15 #y8 v20 v10 v11))
           ((take_image v14 #q16 #y9 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y5 v9 v1))
           ((send_analysis v14 #q8 #y5 v9 v3))
           ((send_analysis v14 #q8 #y5 v9 v4))
           ((send_analysis v14 #q8 #y5 v9 v7))
           ((send_analysis v14 #q8 #y5 v9 v8))
           ((send_analysis v14 #q8 #y5 v9 v5))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v20 v11))
           ((send_image v14 #q8 #y5 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, v12 and v14, each equipped with a camera v10 that supports mode v11. There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There is also a lander v9, which can receive images and analysis data. Both rovers have an onboard store v16, which is initially free. The rovers can move between different configurations and have visibility to various objectives and the lander. Rocks have types v2 (stone) and v6 (soil).
           
           The goal `new-axiom@0()` represents a complex state that requires several sub-goals to be met:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Both rovers must be at their initial configurations. This is already true in the initial state.
           2. `free(v12, v16)` and `free(v14, v16)`: Both rovers' stores must be free. This is already true in the initial state.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: Images of all four objectives (v17, v18, v19, v20) in mode v11 must be received by the lander. This means rovers need to take images and then send them.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: At least one rock of type v2 (stone) needs to be analyzed and its analysis sent to the lander. Rocks v1, v3, and v4 are of type v2.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: At least one rock of type v6 (soil) needs to be analyzed and its analysis sent to the lander. Rocks v5, v7, and v8 are of type v6.
           
           To achieve the goal, I need to:
           1. Calibrate the camera on one of the rovers.
           2. Take images of all four objectives using a calibrated camera.
           3. Send all four images to the lander.
           4. Sample a rock of type v2 (e.g., v1, v3, or v4) using one of the rovers.
           5. Send the analysis of the type v2 rock to the lander.
           6. Sample a rock of type v6 (e.g., v5, v7, or v8) using one of the rovers.
           7. Send the analysis of the type v6 rock to the lander.
           
           I can use rover v12 and v14 to achieve these goals.
           
           **Plan for Images:**
           I will use rover v12 to take images. It is currently at v13.
           - To take an image, the camera needs to be calibrated. I can calibrate v10 with respect to any imagevisible objective. Let's start with v17 at #q5.
           - Then, take images of v17, v18, v19, v20.
           - Move rover v12 to a configuration where it can communicate with the lander (e.g., #q1) and send all the images.
           
           **Plan for Analysis:**
           I can use rover v12 to sample rocks.
           - Rover v12 is currently at v13.
           - Move rover v12 to #q0 to sample rock v1 (type v2).
           - Send the analysis of v1.
           - Move rover v12 to #q3 to sample rock v5 (type v6).
           - Send the analysis of v5.
           
           Alternatively, rover v14 can also be used. Given the initial state, rover v14 is at v15. It can sample rocks v1, v3, v4, v7, v8 at #o5, or v5 at #q7. It can communicate with the lander at #q8.
           
           I'll focus on rover v12 for both image and analysis tasks, as it has access to both image targets and rock samples from its current or nearby configurations, and can reach a communication point.
           
           Detailed steps:
           1. **Calibrate Camera:** `calibrate v12 #q5 #y3 v17 v10` (from v12 at v13, move to #q5 for calibration, then move back or just calibrate and then move to a new location)
           2. **Take Images:**
               - `take_image v12 #q5 #y3 v17 v10 v11`
               - `move v12 #q5 #t18 #q6` (move to #q6 for v18)
               - `calibrate v12 #q6 #y4 v18 v10` (need to recalibrate after taking an image)
               - `take_image v12 #q6 #y4 v18 v10 v11`
               - `move v12 #q6 #t12 #q2` (move to #q2 for v20)
               - `calibrate v12 #q2 #y1 v20 v10`
               - `take_image v12 #q2 #y1 v20 v10 v11`
               - `move v12 #q2 #o2 #q4` (move to #q4 for v19)
               - `calibrate v12 #q4 #y2 v19 v10`
               - `take_image v12 #q4 #y2 v19 v10 v11`
           3. **Send Images:**
               - `move v12 #q4 #t5 #q1` (move to #q1 for communication)
               - `send_image v12 #q1 #y0 v9 v17 v11`
               - `send_image v12 #q1 #y0 v9 v18 v11`
               - `send_image v12 #q1 #y0 v9 v20 v11`
               - `send_image v12 #q1 #y0 v9 v19 v11`
           4. **Sample and Analyze Rocks:**
               - `move v12 #q1 #t0 #q0` (move to #q0 for v1 - type v2)
               - `sample_rock v12 #q0 v1 v16`
               - `move v12 #q0 #t1 #q1` (move to #q1 for communication)
               - `send_analysis v12 #q1 #y0 v9 v1`
               - `move v12 #q1 #t30 #q3` (move to #q3 for v5 - type v6)
               - `sample_rock v12 #q3 v5 v16`
               - `move v12 #q3 #t2 #q1` (move to #q1 for communication)
               - `send_analysis v12 #q1 #y0 v9 v5`
           
           This plan covers all parts of the `new-axiom@0()` goal. The initial state already has both rovers at their initial configs and their stores free.
           
           --Plan--:
           (move v12 v13 #t9 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t18 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t12 #q2)
           (calibrate v12 #q2 #y1 v20 v10)
           (take_image v12 #q2 #y1 v20 v10 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v19 v10)
           (take_image v12 #q4 #y2 v19 v10 v11)
           (move v12 #q4 #t5 #q1)
           (send_image v12 #q1 #y0 v9 v17 v11)
           (send_image v12 #q1 #y0 v9 v18 v11)
           (send_image v12 #q1 #y0 v9 v20 v11)
           (send_image v12 #q1 #y0 v9 v19 v11)
           (move v12 #q1 #t0 #q0)
           (sample_rock v12 #q0 v1 v16)
           (move v12 #q0 #t1 #q1)
           (send_analysis v12 #q1 #y0 v9 v1)
           (move v12 #q1 #t30 #q3)
           (sample_rock v12 #q3 v5 v16)
           (move v12 #q3 #t2 #q1)
           (send_analysis v12 #q1 #y0 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. This means one or more of its conjunctive components were not met. I need to re-evaluate the plan, paying close attention to which rocks are sampled to ensure I cover both `type v2` (stone) and `type v6` (soil), and that all four images are successfully sent. The `atconf` and `free` conditions are met initially and not violated by the plan.
           
           Let's re-verify the goals for `new-axiom@0()`:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: Already true.
           2. `free(v12, v16)` and `free(v14, v16)`: Already true, and the sampling actions only fill *one* store (`full` predicate), which is dropped after analysis, making it `free` again if needed. However, the goal only requires `free`, not `full` then `free`.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: All four objectives must have their images received.
           4. `receivedanalysis(?stone)`: Analysis for a rock of type v2 (stone) must be received.
           5. `receivedanalysis(?soil)`: Analysis for a rock of type v6 (soil) must be received.
           
           In the previous plan, I sampled v1 (type v2) and v5 (type v6), so these conditions for rock analysis should be met. The image capturing and sending logic seems correct, assuming no blocking issues (#y0, #y1, #y2, #y3, #y4, #y5, #y6, #y7, #y8, #y9 are not blocked).
           
           A potential issue might be that I'm sampling the first rock (v1) and sending its analysis, then sampling the second rock (v5) and sending its analysis. The `free(v12, v16)` condition in the axiom refers to the state at the end. When `sample_rock` is called, `free(v12, v16)` becomes `full(v12, v16)`. If I sample another rock without dropping the first, it might be an issue. However, the problem statement states "Any fact that is not explicitly stated in the initial state is *false*". The axiom's `free(v12, v16)` condition is an *existential* `new-axiom@0()` condition, meaning it needs to be true *at the end of the plan*. My previous plan would leave v12's store `full` after sampling v5 if I didn't drop v1.
           
           To address this:
           - Sample v1 (type v2), send analysis.
           - Drop v1 from the store.
           - Sample v5 (type v6), send analysis.
           - Drop v5 from the store. This ensures `free(v12, v16)` is true at the end.
           
           Let's correct the plan with `drop_rock` actions to ensure the `free` predicate is true at the end for the store that was used for sampling.
           
           --Plan--:
           (move v12 v13 #t9 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t18 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t12 #q2)
           (calibrate v12 #q2 #y1 v20 v10)
           (take_image v12 #q2 #y1 v20 v10 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v19 v10)
           (take_image v12 #q4 #y2 v19 v10 v11)
           (move v12 #q4 #t5 #q1)
           (send_image v12 #q1 #y0 v9 v17 v11)
           (send_image v12 #q1 #y0 v9 v18 v11)
           (send_image v12 #q1 #y0 v9 v20 v11)
           (send_image v12 #q1 #y0 v9 v19 v11)
           (move v12 #q1 #t0 #q0)
           (sample_rock v12 #q0 v1 v16)
           (move v12 #q0 #t1 #q1)
           (send_analysis v12 #q1 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q1 #t30 #q3)
           (sample_rock v12 #q3 v5 v16)
           (move v12 #q3 #t2 #q1)
           (send_analysis v12 #q1 #y0 v9 v5)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed again with `Fact is not satisfied: Atom new-axiom@0()`. This indicates that I am still missing some conditions required by the axiom. Let's break down `new-axiom@0()` more thoroughly.
           
           The axiom definition is:
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           Let's check each component:
           1.  `atconf(v12, v13)`: This is true in the initial state. The rover v12 moves, but the goal only requires it to be at `v13` at some point or its initial configuration. *Wait, this is an end state condition. My current plan leaves v12 at `#q1` at the end.* This is a critical error. The plan must ensure v12 ends up at `v13` and v14 at `v15`.
           2.  `atconf(v14, v15)`: This is true in the initial state and rover v14 never moves in my plan, so this remains true.
           3.  `free(v12, v16)`: My last attempt added `drop_rock` actions, so v12's store should be free at the end.
           4.  `free(v14, v16)`: This is true in the initial state and rover v14 never uses its store, so this remains true.
           5.  `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: My plan takes and sends all four images using v12. Assuming no `blocked` rays, this should be satisfied.
           6.  `type(?stone, v2)` and `receivedanalysis(?stone)`: I sampled v1 (type v2) and sent its analysis. This should be satisfied.
           7.  `type(?soil, v6)` and `receivedanalysis(?soil)`: I sampled v5 (type v6) and sent its analysis. This should be satisfied.
           
           The most probable remaining failure point is `atconf(v12, v13)` not being true at the end of the plan. I need to add a final `move` action to bring `v12` back to `v13`.
           
           Let's refine the plan to ensure v12 returns to `v13` at the end.
           
           --Plan--:
           (move v12 v13 #t9 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #t18 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t12 #q2)
           (calibrate v12 #q2 #y1 v20 v10)
           (take_image v12 #q2 #y1 v20 v10 v11)
           (move v12 #q2 #o2 #q4)
           (calibrate v12 #q4 #y2 v19 v10)
           (take_image v12 #q4 #y2 v19 v10 v11)
           (move v12 #q4 #t5 #q1)
           (send_image v12 #q1 #y0 v9 v17 v11)
           (send_image v12 #q1 #y0 v9 v18 v11)
           (send_image v12 #q1 #y0 v9 v20 v11)
           (send_image v12 #q1 #y0 v9 v19 v11)
           (move v12 #q1 #t0 #q0)
           (sample_rock v12 #q0 v1 v16)
           (move v12 #q0 #t1 #q1)
           (send_analysis v12 #q1 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q1 #t30 #q3)
           (sample_rock v12 #q3 v5 v16)
           (move v12 #q3 #t2 #q1)
           (send_analysis v12 #q1 #y0 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q1 #t3 v13)

