User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v3)
           Atom objective(v17)
           Atom lander(v9)
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom rock(v7)
           Atom camera(v10)
           Atom mode(v11)
           Atom type(v4, v2)
           Atom type(v7, v6)
           Atom atconf(v14, v15)
           Atom objective(v20)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom type(v5, v6)
           Atom onboard(v10, v12)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom rock(v8)
           Atom rover(v12)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom onboard(v10, v14)
           Atom objective(v19)
           Atom type(v3, v2)
           Atom atconf(v12, v13)
           Atom rock(v4)
           Atom store(v16)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q11, v4)
           Atom conf(v12, #q11)
           Atom above(v12, #q10, v7)
           Atom conf(v12, #q10)
           Atom imagevisible(v12, #q4, #y2, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom above(v12, #q12, v8)
           Atom conf(v12, #q12)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q14, #y7, v19)
           Atom imagerange(v14, #q14, v19)
           Atom conf(v14, #q14)
           Atom ray(#y7)
           Atom imagevisible(v14, #q13, #y6, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y6)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q16, #y9, v18)
           Atom imagerange(v14, #q16, v18)
           Atom conf(v14, #q16)
           Atom ray(#y9)
           Atom imagevisible(v14, #q15, #y8, v20)
           Atom imagerange(v14, #q15, v20)
           Atom conf(v14, #q15)
           Atom ray(#y8)
           Atom imagevisible(v12, #q2, #y1, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom above(v14, #o5, v3)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom comvisible(v14, #q8, #y5, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #t36, #q0)
           Atom motion(v12, #q0, #t1, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #t3, v13)
           Atom motion(v12, #q1, #t0, #q0)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, v13, #t8, #q4)
           Atom motion(v12, #q4, #t5, #q1)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q12, #t35, #q1)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q1, #t34, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v14, v15, #t33, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v12, #q10, #t20, #q0)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q10, #t29, #q1)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q1, #t22, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, v15, #t31, #q13)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, v15, #t17, #q7)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v12, #q11, #t37, #q1)
           Atom motion(v12, #q11, #t21, #q0)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q1, #t23, #q11)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #t19, #q4)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, v13, #t10, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q4, #t15, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #t18, #q6)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #t9, #q5)
           Atom motion(v12, #q5, #t6, #q1)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q0, #t24, #q3)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q3, #t2, #q1)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q1, #t30, #q3)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q2, #t4, #q1)
           Atom motion(v12, #q2, #t38, #q4)
           Atom motion(v12, v13, #t7, #q2)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q4, #t26, #q2)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q6, #t12, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, v15, #t32, #q14)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v12, #q1, #t13, #q9)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #t16, #q1)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q3, #t25, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q7, #t11, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q13, #t27, #q8)
           Atom motion(v14, #q8, #t14, v15)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, #q14, #t28, #q8)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #q13, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q11 v4 v16))
           ((sample_rock v12 #q12 v8 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q1))
           ((move v12 #q0 #t24 #q3))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #t0 #q0))
           ((move v12 #q1 #t13 #q9))
           ((move v12 #q1 #t22 #q10))
           ((move v12 #q1 #t23 #q11))
           ((move v12 #q1 #t3 v13))
           ((move v12 #q1 #t30 #q3))
           ((move v12 #q1 #t34 #q12))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t20 #q0))
           ((move v12 #q10 #t29 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t21 #q0))
           ((move v12 #q11 #t37 #q1))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t35 #q1))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t38 #q4))
           ((move v12 #q2 #t4 #q1))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t2 #q1))
           ((move v12 #q3 #t25 #q9))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t15 #q5))
           ((move v12 #q4 #t26 #q2))
           ((move v12 #q4 #t5 #q1))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t18 #q6))
           ((move v12 #q5 #t6 #q1))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q2))
           ((move v12 #q6 #t19 #q4))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t16 #q1))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q6))
           ((move v12 v13 #t36 #q0))
           ((move v12 v13 #t7 #q2))
           ((move v12 v13 #t8 #q4))
           ((move v12 v13 #t9 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t27 #q8))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t28 #q8))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t11 #q8))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #t14 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t17 #q7))
           ((move v14 v15 #t31 #q13))
           ((move v14 v15 #t32 #q14))
           ((move v14 v15 #t33 #q15))
           ((calibrate v12 #q2 #y1 v20 v10))
           ((calibrate v12 #q4 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q13 #y6 v17 v10))
           ((calibrate v14 #q14 #y7 v19 v10))
           ((calibrate v14 #q15 #y8 v20 v10))
           ((calibrate v14 #q16 #y9 v18 v10))
           ((take_image v12 #q2 #y1 v20 v10 v11))
           ((take_image v12 #q4 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q13 #y6 v17 v10 v11))
           ((take_image v14 #q14 #y7 v19 v10 v11))
           ((take_image v14 #q15 #y8 v20 v10 v11))
           ((take_image v14 #q16 #y9 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y5 v9 v1))
           ((send_analysis v14 #q8 #y5 v9 v3))
           ((send_analysis v14 #q8 #y5 v9 v4))
           ((send_analysis v14 #q8 #y5 v9 v7))
           ((send_analysis v14 #q8 #y5 v9 v8))
           ((send_analysis v14 #q8 #y5 v9 v5))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v20 v11))
           ((send_image v14 #q8 #y5 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12 and v14), a lander (v9), a camera (v10), and a store (v16). There are also several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). The camera v10 supports mode v11. Rocks v1, v3, v4 are of type v2 (stone), while rocks v5, v7, v8 are of type v6 (soil).
           
           The goal `new-axiom@0()` can be satisfied by a specific combination of states, which includes:
           - Both rovers v12 and v14 being at specific configurations (v13 and v15 respectively), which is already true.
           - Both rovers having a free store (v16), which is already true.
           - Having received images for all objectives (v17, v18, v19, v20) in mode v11.
           - Having received analysis for all rocks (v1, v3, v4, v5, v7, v8).
           
           To achieve the goal, the plan must:
           1.  **Take images of all objectives (v17, v18, v19, v20) with the camera (v10) and then send them to the lander (v9).** This requires the camera to be calibrated and the rover to be at a configuration where the objective and lander are visible and not blocked.
           2.  **Sample all rocks (v1, v3, v4, v5, v7, v8) with either rover (v12 or v14) and then send the analysis to the lander (v9).** This requires the rover to be above the rock, and then to be at a configuration where the lander is visible and not blocked to send the analysis.
           
           Let's break this down further:
           
           **Image Collection and Transmission:**
           *   **Objectives:** v17, v18, v19, v20.
           *   **Rover v12** can see:
               *   v17 at #q5 with ray #y3.
               *   v19 at #q4 with ray #y2.
               *   v18 at #q6 with ray #y4.
               *   v20 at #q2 with ray #y1.
           *   **Rover v14** can see:
               *   v19 at #q14 with ray #y7.
               *   v17 at #q13 with ray #y6.
               *   v18 at #q16 with ray #y9.
               *   v20 at #q15 with ray #y8.
           *   Both rovers can communicate with lander v9:
               *   v12 at #q1 with ray #y0.
               *   v14 at #q8 with ray #y5.
           
           **Rock Sampling and Analysis Transmission:**
           *   **Rocks:** v1, v3, v4, v5, v7, v8.
           *   **Rover v12** can be above:
               *   v4 at #q11.
               *   v7 at #q10.
               *   v1 at #q0.
               *   v8 at #q12.
               *   v5 at #q3.
               *   v3 at #q9.
           *   **Rover v14** can be above:
               *   v1, v3, v4, v7, v8 at #o5.
               *   v5 at #q7.
           
           Since rover v12 has multiple rock sampling locations, and also multiple image collection locations that are different from its communication location, it makes sense to consolidate its movements. The same applies to rover v14.
           
           We need to ensure that the camera v10 is calibrated before taking an image and that the store v16 is free before sampling a rock. The initial state indicates `free(v12, v16)` and `free(v14, v16)`, so both rovers can sample.
           
           Let's try to get all images and then all analyses.
           
           **For images:**
           Rover v12 needs to calibrate and take images at #q5, #q4, #q6, #q2. Then move to #q1 to send.
           Rover v14 needs to calibrate and take images at #q14, #q13, #q16, #q15. Then move to #q8 to send.
           It's more efficient to calibrate, take image, calibrate, take image, etc., and then move to a communication point.
           
           **For analyses:**
           Rover v12 needs to sample all 6 rocks. It can do this from #q0, #q10, #q11, #q12, #q3, #q9. Then move to #q1 to send analyses.
           Rover v14 can sample rocks at #o5 and #q7. Then move to #q8 to send analyses.
           
           A more efficient approach might be to interleave image taking and sampling if they are at the same locations, but given the distinct locations for image capture, sampling and communication for each rover, it's better to complete one set of tasks (all images, then all analyses) to minimize movements between different types of tasks or communication points.
           
           I will attempt to have rover v12 handle all image collection and transmission, and then all rock sampling and transmission for its accessible rocks. Then rover v14 will do the same for its accessible rocks.
           
           Let's prioritize getting all the `receivedimage` predicates true first, then move on to `receivedanalysis`.
           
           **Rover v12 - Images:**
           1.  Calibrate at #q5, take image of v17.
           2.  Calibrate at #q4, take image of v19.
           3.  Calibrate at #q6, take image of v18.
           4.  Calibrate at #q2, take image of v20.
           5.  Move to #q1 to send all images.
           
           **Rover v12 - Analysis:**
           1.  Move to #q0 and sample v1.
           2.  Move to #q10 and sample v7.
           3.  Move to #q11 and sample v4.
           4.  Move to #q12 and sample v8.
           5.  Move to #q3 and sample v5.
           6.  Move to #q9 and sample v3.
           7.  Move to #q1 to send all analyses.
           
           **Rover v14 - Images:**
           (Not strictly necessary if v12 does all, but if v12 can't see all, v14 can assist. In this problem, v12 can see all objectives, but let's assume for general problem solving we need both. However, the goal only requires `receivedimage`, not *who* took it. So if v12 already sent the image for v17, v14 doesn't need to.)
           Looking at the goal again, it only says `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`. All these can be done by v12. So v14 does not need to take any images.
           
           **Rover v14 - Analysis:**
           1.  Move to #o5 and sample v1, v3, v4, v7, v8. (It seems #o5 is a single configuration where it can sample multiple rocks, but `sample_rock` only takes one rock as an argument. I will assume it needs to sample them one by one at #o5, then if store is full, drop it and continue.)
           2.  Move to #q7 and sample v5.
           3.  Move to #q8 to send all analyses.
           
           The rover's store v16 has no explicit capacity limit mentioned. It just has `free` and `full` states. After sampling one rock, the store becomes `full(v, s)`. To sample another rock, `free(v, s)` is required. This means we must `drop_rock` after each `sample_rock` if we want to sample more than one rock with the same rover before sending analyses.
           
           Revised plan:
           **Rover v12 - Images:**
           1.  `calibrate(v12, #q5, #y3, v17, v10)`
           2.  `take_image(v12, #q5, #y3, v17, v10, v11)`
           3.  Move from #q5 to #q4.
           4.  `calibrate(v12, #q4, #y2, v19, v10)`
           5.  `take_image(v12, #q4, #y2, v19, v10, v11)`
           6.  Move from #q4 to #q6.
           7.  `calibrate(v12, #q6, #y4, v18, v10)`
           8.  `take_image(v12, #q6, #y4, v18, v10, v11)`
           9.  Move from #q6 to #q2.
           10. `calibrate(v12, #q2, #y1, v20, v10)`
           11. `take_image(v12, #q2, #y1, v20, v10, v11)`
           12. Move from #q2 to #q1 (communication point).
           13. `send_image(v12, #q1, #y0, v9, v17, v11)`
           14. `send_image(v12, #q1, #y0, v9, v19, v11)`
           15. `send_image(v12, #q1, #y0, v9, v18, v11)`
           16. `send_image(v12, #q1, #y0, v9, v20, v11)`
           
           Now all images are received. Time for analyses.
           **Rover v12 - Analyses:** (Starting from #q1)
           1.  Move from #q1 to #q0.
           2.  `sample_rock(v12, #q0, v1, v16)`
           3.  `drop_rock(v12, v16)`
           4.  Move from #q0 to #q10.
           5.  `sample_rock(v12, #q10, v7, v16)`
           6.  `drop_rock(v12, v16)`
           7.  Move from #q10 to #q11.
           8.  `sample_rock(v12, #q11, v4, v16)`
           9.  `drop_rock(v12, v16)`
           10. Move from #q11 to #q12.
           11. `sample_rock(v12, #q12, v8, v16)`
           12. `drop_rock(v12, v16)`
           13. Move from #q12 to #q3.
           14. `sample_rock(v12, #q3, v5, v16)`
           15. `drop_rock(v12, v16)`
           16. Move from #q3 to #q9.
           17. `sample_rock(v12, #q9, v3, v16)`
           18. `drop_rock(v12, v16)`
           19. Move from #q9 to #q1 (communication point).
           20. `send_analysis(v12, #q1, #y0, v9, v1)`
           21. `send_analysis(v12, #q1, #y0, v9, v7)`
           22. `send_analysis(v12, #q1, #y0, v9, v4)`
           23. `send_analysis(v12, #q1, #y0, v9, v8)`
           24. `send_analysis(v12, #q1, #y0, v9, v5)`
           25. `send_analysis(v12, #q1, #y0, v9, v3)`
           
           This completes all parts of the goal. The rover v14 is not needed for this plan.
           
           Final check of available actions for movements:
           *   `move v12 #q5 #t18 #q6` (from q5 to q6 - no direct q5 to q4 or q4 to q6, q6 to q2, q2 to q1 so I have to chain them)
           *   `move v12 #q5 #o2 #q4`
           *   `move v12 #q4 #o2 #q6`
           *   `move v12 #q6 #t12 #q2`
           *   `move v12 #q2 #t4 #q1`
           This sequence of moves seems valid.
           
           For sampling and analysis:
           *   `move v12 #q1 #t0 #q0`
           *   `move v12 #q0 #o2 #q10`
           *   `move v12 #q10 #o2 #q11`
           *   `move v12 #q11 #o2 #q12`
           *   `move v12 #q12 #o2 #q3`
           *   `move v12 #q3 #t25 #q9`
           *   `move v12 #q9 #o2 #q1`
           
           All steps appear to be covered and available.
           
           ```
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #o2 #q4)
           (calibrate v12 #q4 #y2 v19 v10)
           (take_image v12 #q4 #y2 v19 v10 v11)
           (move v12 #q4 #o2 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t12 #q2)
           (calibrate v12 #q2 #y1 v20 v10)
           (take_image v12 #q2 #y1 v20 v10 v11)
           (move v12 #q2 #t4 #q1)
           (send_image v12 #q1 #y0 v9 v17 v11)
           (send_image v12 #q1 #y0 v9 v19 v11)
           (send_image v12 #q1 #y0 v9 v18 v11)
           (send_image v12 #q1 #y0 v9 v20 v11)
           (move v12 #q1 #t0 #q0)
           (sample_rock v12 #q0 v1 v16)
           (drop_rock v12 v16)
           (move v12 #q0 #o2 #q10)
           (sample_rock v12 #q10 v7 v16)
           (drop_rock v12 v16)
           (move v12 #q10 #o2 #q11)
           (sample_rock v12 #q11 v4 v16)
           (drop_rock v12 v16)
           (move v12 #q11 #o2 #q12)
           (sample_rock v12 #q12 v8 v16)
           (drop_rock v12 v16)
           (move v12 #q12 #o2 #q3)
           (sample_rock v12 #q3 v5 v16)
           (drop_rock v12 v16)
           (move v12 #q3 #t25 #q9)
           (sample_rock v12 #q9 v3 v16)
           (drop_rock v12 v16)
           (move v12 #q9 #o2 #q1)
           (send_analysis v12 #q1 #y0 v9 v1)
           (send_analysis v12 #q1 #y0 v9 v7)
           (send_analysis v12 #q1 #y0 v9 v4)
           (send_analysis v12 #q1 #y0 v9 v8)
           (send_analysis v12 #q1 #y0 v9 v5)
           (send_analysis v12 #q1 #y0 v9 v3)
           ```

