User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom graspable(v8)
           Atom supported(v8, v9, v11)
           Atom ataconf(v4, v5)
           Atom atpose(v14, v15)
           Atom pose(v12, v13)
           Atom canmove()
           Atom arm(v6)
           Atom stackable(v12, v10)
           Atom bconf(v3)
           Atom atpose(v12, v13)
           Atom handempty(v6)
           Atom stackable(v14, v16)
           Atom stackable(v8, v16)
           Atom stackable(v8, v10)
           Atom arm(v4)
           Atom ataconf(v6, v7)
           Atom stackable(v14, v10)
           Atom stackable(v12, v16)
           Atom graspable(v14)
           Atom atpose(v8, v9)
           Atom atbconf(v3)
           Atom pose(v8, v9)
           Atom controllable(v4)
           Atom supported(v14, v15, v11)
           Atom graspable(v12)
           Atom pose(v14, v15)
           Atom supported(v12, v13, v11)
           Atom aconf(v6, v7)
           Atom grasp(v12, #g1)
           Atom grasp(v14, #g2)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #g0)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #p2)
           Atom supported(v14, #p2, v16)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom bconf(#q3)
           Atom atraj(#t5)
           Atom kin(v4, v12, v13, #g1, #q3, #t5)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v14, v15, #g2, #q2, #t4)
           Atom bconf(#q5)
           Atom atraj(#t7)
           Atom kin(v4, v14, #p2, #g2, #q5, #t7)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, #p0, #g1, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q4)
           Atom atraj(#t6)
           Atom kin(v4, v8, #p1, #g0, #q4, #t6)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(v3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q0)
           Atom btraj(#t11)
           Atom basemotion(#q4, #t11, #q3)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom btraj(#t12)
           Atom basemotion(#q0, #t12, #q4)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q4, #o0, #q5)
           Atom btraj(#t9)
           Atom basemotion(#q2, #t9, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom btraj(#t10)
           Atom basemotion(#q3, #t10, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom btraj(#t8)
           Atom basemotion(#q1, #t8, #q2)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q2, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g2, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q1, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q4 #t12))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q2 #t8))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t9))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q1 #t10))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q3 #t11))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p0 #g1 #q1 #t1))
           ((place v4 v12 #p0 #g1 #q1 #t1))
           ((pick v4 v12 v13 #g1 #q3 #t5))
           ((place v4 v12 v13 #g1 #q3 #t5))
           ((pick v4 v14 #o2 #g2 #o3 #o4))
           ((place v4 v14 #o2 #g2 #o3 #o4))
           ((pick v4 v14 #p2 #g2 #q5 #t7))
           ((place v4 v14 #p2 #g2 #q5 #t7))
           ((pick v4 v14 v15 #g2 #q2 #t4))
           ((place v4 v14 v15 #g2 #q2 #t4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p1 #g0 #q4 #t6))
           ((place v4 v8 #p1 #g0 #q4 #t6))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms, `v4` and `v6`, and several objects: `v8`, `v12`, `v14`. There are various poses for these objects, represented by `#p0`, `#p1`, `#p2`, `#o2`, `v9`, `v13`, `v15`. There are also different base configurations (`bconf`) such as `v3`, `#q0` to `#q5`, and `#o3`, and approach/retract trajectories (`atraj`) like `#t0` to `#t12`, and `#o4`. The objects `v8`, `v12`, `v14` are graspable and stackable. They are currently supported on `v11`, with `v8` at `v9`, `v12` at `v13`, and `v14` at `v15`.
           
           The goal is to have all three objects, `v8`, `v12`, and `v14`, on `v16`. Since `v16` is a support and the objects are currently on `v11`, the robot needs to pick each object from `v11` and place it on `v16`.
           
           Let's break down the plan for each object:
           
           1.  **Move `v8` to `v16`**:
               *   The robot arm `v4` needs to pick `v8` from its current pose `v9`. The associated base configuration is `#q0` and trajectory is `#t0`.
               *   Then, the robot needs to place `v8` on `v16`. A possible pose for `v8` on `v16` is `#p1`, with base configuration `#q4` and trajectory `#t6`. This requires a base movement from `#q0` to `#q4`.
           
           2.  **Move `v12` to `v16`**:
               *   The robot arm `v4` needs to pick `v12` from its current pose `v13`. The associated base configuration is `#q3` and trajectory is `#t5`.
               *   Then, the robot needs to place `v12` on `v16`. A possible pose for `v12` on `v16` is `#p0`, with base configuration `#q1` and trajectory `#t1`. This requires a base movement from `#q3` to `#q1`.
           
           3.  **Move `v14` to `v16`**:
               *   The robot arm `v4` needs to pick `v14` from its current pose `v15`. The associated base configuration is `#q2` and trajectory is `#t4`.
               *   Then, the robot needs to place `v14` on `v16`. A possible pose for `v14` on `v16` is `#p2`, with base configuration `#q5` and trajectory `#t7`. This requires a base movement from `#q2` to `#q5`.
           
           The initial base configuration is `v3`. The robot will need to move to the base configuration required for each pick and place operation.
           
           Let's sequence the actions:
           
           1.  **Pick `v8`**:
               *   Move base from `v3` to `#q0`.
               *   Pick `v8` at `v9` with `v4`.
               *   Move base from `#q0` to `#q4`.
               *   Place `v8` at `#p1` with `v4`.
           
           2.  **Pick `v12`**:
               *   Move base from `#q4` to `#q3`.
               *   Pick `v12` at `v13` with `v4`.
               *   Move base from `#q3` to `#q1`.
               *   Place `v12` at `#p0` with `v4`.
           
           3.  **Pick `v14`**:
               *   Move base from `#q1` to `#q2`.
               *   Pick `v14` at `v15` with `v4`.
               *   Move base from `#q2` to `#q5`.
               *   Place `v14` at `#p2` with `v4`.
           
           --Plan--:
           (move_base v3 #q0 #t2)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q4 #t12)
           (place v4 v8 #p1 #g0 #q4 #t6)
           (move_base #q4 #q3 #t11)
           (pick v4 v12 v13 #g1 #q3 #t5)
           (move_base #q3 #q1 #t10)
           (place v4 v12 #p0 #g1 #q1 #t1)
           (move_base #q1 #q2 #t8)
           (pick v4 v14 v15 #g2 #q2 #t4)
           (move_base #q2 #q5 #t9)
           (place v4 v14 #p2 #g2 #q5 #t7)

