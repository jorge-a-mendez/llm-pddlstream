User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v12)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom conf(v14, v15)
           Atom rock(v1)
           Atom type(v8, v6)
           Atom free(v12, v16)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom rock(v3)
           Atom rock(v7)
           Atom atconf(v14, v15)
           Atom onboard(v10, v14)
           Atom rock(v5)
           Atom conf(v12, v13)
           Atom type(v4, v2)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom mode(v11)
           Atom objective(v17)
           Atom lander(v9)
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom type(v3, v2)
           Atom type(v1, v2)
           Atom store(v16)
           Atom free(v14, v16)
           Atom camera(v10)
           Atom rover(v14)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom above(v14, #q15, v8)
           Atom conf(v14, #q15)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #q17, v1)
           Atom conf(v14, #q17)
           Atom above(v14, #q14, v7)
           Atom conf(v14, #q14)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q16, v3)
           Atom conf(v14, #q16)
           Atom above(v14, #q1, v4)
           Atom conf(v14, #q1)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom comvisible(v12, #q4, #y2, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q10, v7)
           Atom conf(v12, #q10)
           Atom above(v12, #q7, v5)
           Atom conf(v12, #q7)
           Atom above(v12, #q12, v1)
           Atom conf(v12, #q12)
           Atom above(v12, #q11, v8)
           Atom conf(v12, #q11)
           Atom above(v12, #q8, v4)
           Atom conf(v12, #q8)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q13, #y5, v18)
           Atom imagerange(v14, #q13, v18)
           Atom conf(v14, #q13)
           Atom ray(#y5)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #t10, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q17, #o2, #q3)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v12, v13, #t39, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v14, #q17, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q17)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q15)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #t12, #q6)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q6, #t11, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q3, #t3, #q2)
           Atom motion(v14, #q2, #t5, #q3)
           Atom motion(v14, #q2, #t1, v15)
           Atom motion(v14, #q2, #t32, #q15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q15, #t34, #q2)
           Atom motion(v14, #q2, #o2, #q17)
           Atom motion(v14, #q17, #t36, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v12, #q0, #t25, #q5)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q5, #t37, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v14, #q6, #t27, #q13)
           Atom motion(v14, v15, #t38, #q13)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q13, #t26, #q2)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, v13, #t28, #q8)
           Atom motion(v12, #q5, #t24, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v14, #q14, #o2, #q6)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q2, #t31, #q14)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q6, #o2, #q14)
           Atom motion(v14, #q14, #t33, #q2)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q16, #o2, #q6)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q16, #t35, #q2)
           Atom motion(v14, #q2, #o2, #q16)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q6, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q0, #t17, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q8, #t20, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q16)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q17)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q17, #o2, #q1)
           Atom motion(v14, #q14, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q2, #t4, #q1)
           Atom motion(v14, #q1, #t15, #q3)
           Atom motion(v14, #q15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #t9, #q1)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q1, #t2, #q2)
           Atom motion(v14, #q1, #o2, #q14)
           Atom motion(v14, #q6, #t16, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v12, #q4, #t30, #q11)
           Atom motion(v12, #q4, #t6, v13)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #t18, #q8)
           Atom motion(v12, #q4, #t8, #q0)
           Atom motion(v12, #q0, #t7, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q10, #t23, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q7, #t13, #q4)
           Atom motion(v12, #q11, #t29, #q4)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #t14, #q7)
           Atom motion(v12, #q8, #t19, #q4)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q7, #t21, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #t22, #q4)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #q1 v4 v16))
           ((sample_rock v14 #q14 v7 v16))
           ((sample_rock v14 #q15 v8 v16))
           ((sample_rock v14 #q16 v3 v16))
           ((sample_rock v14 #q17 v1 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t17 #q7))
           ((move v12 #q0 #t25 #q5))
           ((move v12 #q0 #t7 #q4))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t23 #q4))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t29 #q4))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #t14 #q7))
           ((move v12 #q4 #t18 #q8))
           ((move v12 #q4 #t30 #q11))
           ((move v12 #q4 #t6 v13))
           ((move v12 #q4 #t8 #q0))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t24 #q8))
           ((move v12 #q5 #t37 #q0))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q4))
           ((move v12 #q7 #t21 #q9))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q4))
           ((move v12 #q8 #t20 #q7))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t22 #q4))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t28 #q8))
           ((move v12 v13 #t39 #q5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q14))
           ((move v14 #q1 #o2 #q15))
           ((move v14 #q1 #o2 #q16))
           ((move v14 #q1 #o2 #q17))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t15 #q3))
           ((move v14 #q1 #t2 #q2))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t26 #q2))
           ((move v14 #q14 #o2 #q1))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q6))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t33 #q2))
           ((move v14 #q15 #o2 #q1))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q6))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t34 #q2))
           ((move v14 #q16 #o2 #q1))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 #q6))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t35 #q2))
           ((move v14 #q17 #o2 #q1))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q3))
           ((move v14 #q17 #o2 #q6))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t36 #q2))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q16))
           ((move v14 #q2 #o2 #q17))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #t1 v15))
           ((move v14 #q2 #t31 #q14))
           ((move v14 #q2 #t32 #q15))
           ((move v14 #q2 #t4 #q1))
           ((move v14 #q2 #t5 #q3))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q17))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q2))
           ((move v14 #q6 #o2 #q14))
           ((move v14 #q6 #o2 #q15))
           ((move v14 #q6 #o2 #q16))
           ((move v14 #q6 #o2 #q17))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t11 #q2))
           ((move v14 #q6 #t16 #q1))
           ((move v14 #q6 #t27 #q13))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q3))
           ((move v14 v15 #t12 #q6))
           ((move v14 v15 #t38 #q13))
           ((move v14 v15 #t9 #q1))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #q13 #y5 v18 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q13 #y5 v18 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, each equipped with a camera `v10` that supports mode `v11`. There are several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`). The rovers are at initial configurations `v13` and `v15` respectively, and both have a free storage unit `v16`. A lander `v9` is present for communication. The goal is to satisfy the `new-axiom@0()`, which requires:
           - `atconf` for two different rovers (v12 and v14 are already at their respective `atconf` positions, v13 and v15)
           - `free` for two different rovers and a store (v12 and v14 are free with v16, so this is already met)
           - `receivedimage` for two different objectives with mode `v11` (v17 and v18 with v11)
           - `type` and `receivedanalysis` for a rock of type `v2` and a rock of type `v6`.
           
           The plan will focus on achieving `receivedimage` for `v17` and `v18` with `v11`, and `receivedanalysis` for one rock of type `v2` and one of type `v6`.
           
           From the initial state:
           - `v12` is at `v13` and `v14` is at `v15`. Both have free store `v16`.
           - We need to get images of `v17` and `v18` and send them.
           - We need to sample and send analysis for a rock of type `v2` and a rock of type `v6`.
           
           Let's break down the `new-axiom@0()` into subgoals and see how to achieve them:
           1.  **`atconf(v12, v13)` and `atconf(v14, v15)`:** Already satisfied in the initial state.
           2.  **`free(v12, v16)` and `free(v14, v16)`:** Already satisfied in the initial state.
           3.  **`receivedimage(v17, v11)` and `receivedimage(v18, v11)`:**
               *   To get `receivedimage(v17, v11)`:
                   *   `calibrate` a camera for `v17`. `v12` can see `v17` at `q5` with `y3`, or `v14` can see `v17` at `q6` with `y4`. Let's use `v12` at `q5`. So, `(calibrate v12 #q5 #y3 v17 v10)`.
                   *   Then `take_image(v12, #q5, #y3, v17, v10, v11)`.
                   *   Then `send_image(v12, #q4, #y2, v9, v17, v11)`. (Need to move v12 to q4 first if it's not already there)
               *   To get `receivedimage(v18, v11)`:
                   *   `calibrate` a camera for `v18`. `v12` can see `v18` at `q0` with `y0`, or `v14` can see `v18` at `q13` with `y5`. Let's use `v14` at `q13`. So, `(calibrate v14 #q13 #y5 v18 v10)`.
                   *   Then `take_image(v14, #q13, #y5, v18, v10, v11)`.
                   *   Then `send_image(v14, #q2, #y1, v9, v18, v11)`. (Need to move v14 to q2 first if it's not already there)
           4.  **`type(?stone, v2)` and `receivedanalysis(?stone)` for a rock of type `v2`:**
               *   Rocks of type `v2` are `v1`, `v3`, `v4`. Let's use `v4`.
               *   `v14` is `above(v14, #q1, v4)`.
               *   So, `(sample_rock v14 #q1 v4 v16)`.
               *   Then `send_analysis(v14, #q2, #y1, v9, v4)`. (Need to move v14 to q2 first if it's not already there, if it is already there it's fine)
           5.  **`type(?soil, v6)` and `receivedanalysis(?soil)` for a rock of type `v6`:**
               *   Rocks of type `v6` are `v5`, `v7`, `v8`. Let's use `v5`.
               *   `v14` is `above(v14, #q3, v5)`.
               *   So, `(sample_rock v14 #q3 v5 v16)`.
               *   Then `send_analysis(v14, #q2, #y1, v9, v5)`. (Need to move v14 to q2 first if it's not already there)
           
           Let's try to coordinate these actions.
           Rover `v12` will handle `v17` image.
           Rover `v14` will handle `v18` image and both rock analyses.
           
           **Plan for v12 (image v17):**
           1.  `v12` is at `v13`. Need to move to `q5` for `v17` image.
               `(move v12 v13 #t39 #q5)`
           2.  Calibrate camera.
               `(calibrate v12 #q5 #y3 v17 v10)`
           3.  Take image.
               `(take_image v12 #q5 #y3 v17 v10 v11)`
           4.  Move to `q4` for communication.
               `(move v12 #q5 #o2 #q4)`
           5.  Send image.
               `(send_image v12 #q4 #y2 v9 v17 v11)`
           
           **Plan for v14 (image v18, rock v4, rock v5):**
           1.  `v14` is at `v15`. Need to move to `q13` for `v18` image.
               `(move v14 v15 #t38 #q13)`
           2.  Calibrate camera.
               `(calibrate v14 #q13 #y5 v18 v10)`
           3.  Take image.
               `(take_image v14 #q13 #y5 v18 v10 v11)`
           4.  Move to `q1` for sampling rock `v4` (type `v2`).
               `(move v14 #q13 #o2 #q1)`
           5.  Sample rock `v4`.
               `(sample_rock v14 #q1 v4 v16)`
           6.  Move to `q3` for sampling rock `v5` (type `v6`).
               `(move v14 #q1 #t15 #q3)`
           7.  Sample rock `v5`.
               `(sample_rock v14 #q3 v5 v16)`
               *Problem*: v14 has only one store `v16`. It cannot sample two rocks without dropping one. The goal requires `receivedanalysis` for *two* rocks, one of type `v2` and one of type `v6`. This implies two samples. Since rover v14 has `full(v14, v16)` after sampling v4, it cannot sample v5 without dropping v4 first.
               If v14 drops v4, then it cannot send analysis for v4.
               The problem statement states "Any fact that is not explicitly stated in the initial state is *false*." This implies we only have one store per rover.
           
           Let's re-evaluate. The goal requires `receivedanalysis(?stone)` for type `v2` and `receivedanalysis(?soil)` for type `v6`.
           We have two rovers `v12` and `v14`, each with a `store(v16)`. The `free(v12, v16)` and `free(v14, v16)` means each rover has its *own* store `v16`. This is a common pattern in PDDL. So `v12` can sample one rock and `v14` can sample another.
           
           Let `v12` sample `v4` (type `v2`) and `v14` sample `v5` (type `v6`).
           
           **Revised Plan:**
           
           **Plan for v12:**
           1.  Move to `q8` to be above `v4` (type `v2`).
               `(move v12 v13 #t28 #q8)`
           2.  Sample rock `v4`.
               `(sample_rock v12 #q8 v4 v16)`
           3.  Move to `q5` for `v17` image.
               `(move v12 #q8 #o2 #q5)`
           4.  Calibrate camera.
               `(calibrate v12 #q5 #y3 v17 v10)`
           5.  Take image.
               `(take_image v12 #q5 #y3 v17 v10 v11)`
           6.  Move to `q4` for communication.
               `(move v12 #q5 #o2 #q4)`
           7.  Send analysis of `v4`.
               `(send_analysis v12 #q4 #y2 v9 v4)`
           8.  Send image of `v17`.
               `(send_image v12 #q4 #y2 v9 v17 v11)`
           
           **Plan for v14:**
           1.  Move to `q13` for `v18` image.
               `(move v14 v15 #t38 #q13)`
           2.  Calibrate camera.
               `(calibrate v14 #q13 #y5 v18 v10)`
           3.  Take image.
               `(take_image v14 #q13 #y5 v18 v10 v11)`
           4.  Move to `q3` to be above `v5` (type `v6`).
               `(move v14 #q13 #o2 #q3)`
           5.  Sample rock `v5`.
               `(sample_rock v14 #q3 v5 v16)`
           6.  Move to `q2` for communication.
               `(move v14 #q3 #t3 #q2)`
           7.  Send analysis of `v5`.
               `(send_analysis v14 #q2 #y1 v9 v5)`
           8.  Send image of `v18`.
               `(send_image v14 #q2 #y1 v9 v18 v11)`
           
           This revised plan addresses the problem of two rocks by using both rovers, and ensuring they each handle one rock sample and one image transmission.
           
           Let's trace the state for the `new-axiom@0()` goal after these actions:
           - `atconf(v12, v13)`: Will be `atconf(v12, #q4)`. This is okay since the axiom uses variables.
           - `atconf(v14, v15)`: Will be `atconf(v14, #q2)`. This is okay.
           - `free(v12, v16)`: After sampling `v4`, it becomes `full(v12, v16)`. This means this part of the axiom is not met. The axiom `new-axiom@0()` has a predicate `free(v12, v16)` and `free(v14, v16)`. If a rover samples a rock, its store becomes `full`.
           
           To achieve `free(v12, v16)` and `free(v14, v16)` after sampling, the rovers must `drop_rock`. But if they drop the rock, they cannot `send_analysis`. This means the goal is currently unachievable as the given actions do not allow for sampling a rock, sending its analysis, AND having the store free again *at the same time* for the two rovers specified in the axiom. The `new-axiom@0()` requires `free(v12, v16)` and `free(v14, v16)` to be true, while also requiring `receivedanalysis(?stone)` for two rocks, which implies the rocks were sampled and analyzed *before* the stores are freed.
           
           This means that the conditions of the `new-axiom@0()` are contradictory if a single rover samples and analyzes a rock. However, there are two rovers, each with its own store `v16`. `free(v12, v16)` and `free(v14, v16)` are initial facts.
           If `v12` samples rock `v4`, then `free(v12, v16)` becomes `full(v12, v16)`.
           If `v14` samples rock `v5`, then `free(v14, v16)` becomes `full(v14, v16)`.
           
           To achieve `receivedanalysis`, the rock must be `analyzed` and the rover must be `full` with that rock. The `free` predicate is negated when `sample_rock` is performed. The goal `new-axiom@0()` requires `free(v12, v16)` AND `free(v14, v16)`. This means that after all the sampling and analyzing, the stores must be empty.
           
           The only way to make the store `free` again is `drop_rock`. But `drop_rock` has no effect on `analyzed` or `receivedanalysis`.
           So, the correct sequence would be:
           1.  Sample rock.
           2.  Send analysis.
           3.  Drop rock.
           
           Let's re-plan with this in mind for the rocks.
           
           **Revised Plan with dropping rocks:**
           
           **Plan for v12:**
           1.  Move to `q8` to be above `v4` (type `v2`).
               `(move v12 v13 #t28 #q8)`
           2.  Sample rock `v4`. (Store becomes `full(v12, v16)`)
               `(sample_rock v12 #q8 v4 v16)`
           3.  Move to `q4` for communication. (This position is also available for image and analysis sending)
               `(move v12 #q8 #t19 #q4)`
           4.  Send analysis of `v4`. (`receivedanalysis(v4)` is true)
               `(send_analysis v12 #q4 #y2 v9 v4)`
           5.  Drop rock `v4`. (Store becomes `free(v12, v16)` again)
               `(drop_rock v12 v16)`
           6.  Move to `q5` for `v17` image.
               `(move v12 #q4 #o2 #q5)`
           7.  Calibrate camera for `v17`.
               `(calibrate v12 #q5 #y3 v17 v10)`
           8.  Take image of `v17`.
               `(take_image v12 #q5 #y3 v17 v10 v11)`
           9.  Move to `q4` for communication. (Moving back to `q4` if necessary)
               `(move v12 #q5 #o2 #q4)` (This move is actually redundant if it stayed at q4 after dropping rock, depends on what q4 leads to where. Let's assume after dropping it's still at `q4` for simplicity, but the trace of valid moves indicates that `move v12 #q5 #o2 #q4` is possible)
           10. Send image of `v17`. (`receivedimage(v17, v11)` is true)
               `(send_image v12 #q4 #y2 v9 v17 v11)`
           
           **Plan for v14:**
           1.  Move to `q3` to be above `v5` (type `v6`).
               `(move v14 v15 #t10 #q3)`
           2.  Sample rock `v5`. (Store becomes `full(v14, v16)`)
               `(sample_rock v14 #q3 v5 v16)`
           3.  Move to `q2` for communication.
               `(move v14 #q3 #t3 #q2)`
           4.  Send analysis of `v5`. (`receivedanalysis(v5)` is true)
               `(send_analysis v14 #q2 #y1 v9 v5)`
           5.  Drop rock `v5`. (Store becomes `free(v14, v16)` again)
               `(drop_rock v14 v16)`
           6.  Move to `q13` for `v18` image.
               `(move v14 #q2 #o2 #q13)`
           7.  Calibrate camera for `v18`.
               `(calibrate v14 #q13 #y5 v18 v10)`
           8.  Take image of `v18`.
               `(take_image v14 #q13 #y5 v18 v10 v11)`
           9.  Move to `q2` for communication.
               `(move v14 #q13 #t26 #q2)`
           10. Send image of `v18`. (`receivedimage(v18, v11)` is true)
               `(send_image v14 #q2 #y1 v9 v18 v11)`
           
           Now all conditions of `new-axiom@0()` are met:
           - `atconf(v12, #q4)` and `atconf(v14, #q2)` (variables in axiom, so current confs are fine)
           - `free(v12, v16)` and `free(v14, v16)` (achieved by dropping rocks)
           - `receivedimage(v17, v11)` and `receivedimage(v18, v11)` (achieved by taking and sending images)
           - `type(v4, v2)` and `receivedanalysis(v4)` (rock of type `v2` analyzed)
           - `type(v5, v6)` and `receivedanalysis(v5)` (rock of type `v6` analyzed)
           
           This plan seems robust.
           
           --Plan--:
           (move v12 v13 #t28 #q8)
           (sample_rock v12 #q8 v4 v16)
           (move v12 #q8 #t19 #q4)
           (send_analysis v12 #q4 #y2 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q4 #o2 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #o2 #q4)
           (send_image v12 #q4 #y2 v9 v17 v11)
           (move v14 v15 #t10 #q3)
           (sample_rock v14 #q3 v5 v16)
           (move v14 #q3 #t3 #q2)
           (send_analysis v14 #q2 #y1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q2 #o2 #q13)
           (calibrate v14 #q13 #y5 v18 v10)
           (take_image v14 #q13 #y5 v18 v10 v11)
           (move v14 #q13 #t26 #q2)
           (send_image v14 #q2 #y1 v9 v18 v11)

