User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v12)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom conf(v14, v15)
           Atom rock(v1)
           Atom type(v8, v6)
           Atom free(v12, v16)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom rock(v3)
           Atom rock(v7)
           Atom atconf(v14, v15)
           Atom onboard(v10, v14)
           Atom rock(v5)
           Atom conf(v12, v13)
           Atom type(v4, v2)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom mode(v11)
           Atom objective(v17)
           Atom lander(v9)
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom type(v3, v2)
           Atom type(v1, v2)
           Atom store(v16)
           Atom free(v14, v16)
           Atom camera(v10)
           Atom rover(v14)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v7)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v3)
           Atom above(v14, #q1, v4)
           Atom conf(v14, #q1)
           Atom above(v12, #q7, v5)
           Atom conf(v12, #q7)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q8, v4)
           Atom conf(v12, #q8)
           Atom above(v12, #q10, v7)
           Atom conf(v12, #q10)
           Atom comvisible(v12, #q4, #y2, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q11, v8)
           Atom conf(v12, #q11)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom above(v12, #q12, v1)
           Atom conf(v12, #q12)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q13, #y5, v18)
           Atom imagerange(v14, #q13, v18)
           Atom conf(v14, #q13)
           Atom ray(#y5)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, v15, #t10, #q3)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, v13, #t28, #q8)
           Atom motion(v14, #q3, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q3)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v12, #q5, #t24, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, v15, #t12, #q6)
           Atom motion(v14, #q6, #t27, #q13)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q8, #t20, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q3, #t3, #q2)
           Atom motion(v14, #q2, #t5, #q3)
           Atom motion(v14, #q2, #t1, v15)
           Atom motion(v14, #q6, #t11, #q2)
           Atom motion(v14, #q2, #o2, #q13)
           Atom motion(v14, #q13, #t26, #q2)
           Atom motion(v12, #q0, #t17, #q7)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q0, #t25, #q5)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q7, #t21, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q4, #t30, #q11)
           Atom motion(v12, #q4, #t6, v13)
           Atom motion(v12, #q4, #t14, #q7)
           Atom motion(v12, #q11, #t29, #q4)
           Atom motion(v12, #q9, #t22, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q7, #t13, #q4)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q0, #t7, #q4)
           Atom motion(v12, #q4, #t18, #q8)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q8, #t19, #q4)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #t8, #q0)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q2, #t4, #q1)
           Atom motion(v14, #q1, #t15, #q3)
           Atom motion(v14, v15, #t9, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q13, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q1, #t2, #q2)
           Atom motion(v14, #q1, #o2, #q13)
           Atom motion(v14, #q6, #t16, #q1)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q10, #t23, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q1 v4 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t17 #q7))
           ((move v12 #q0 #t25 #q5))
           ((move v12 #q0 #t7 #q4))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t23 #q4))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t29 #q4))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #t14 #q7))
           ((move v12 #q4 #t18 #q8))
           ((move v12 #q4 #t30 #q11))
           ((move v12 #q4 #t6 v13))
           ((move v12 #q4 #t8 #q0))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t24 #q8))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q4))
           ((move v12 #q7 #t21 #q9))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q4))
           ((move v12 #q8 #t20 #q7))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t22 #q4))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t28 #q8))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t15 #q3))
           ((move v14 #q1 #t2 #q2))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t26 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #t1 v15))
           ((move v14 #q2 #t4 #q1))
           ((move v14 #q2 #t5 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q2))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t11 #q2))
           ((move v14 #q6 #t16 #q1))
           ((move v14 #q6 #t27 #q13))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q3))
           ((move v14 v15 #t12 #q6))
           ((move v14 v15 #t9 #q1))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #q13 #y5 v18 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q13 #y5 v18 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, each with a camera `v10` that supports mode `v11`. There are various rock types (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`). Both rovers have stores `v16` which are initially free. There's a lander `v9` for communication. The goal is `new-axiom@0()`, which means:
           1. Both rovers must be at some configuration. This is already true for both rovers (`atconf(v12, v13)` and `atconf(v14, v15)`).
           2. Both rovers must have free storage. This is already true (`free(v12, v16)` and `free(v14, v16)`).
           3. Images of objectives `v17` and `v18` must be received in mode `v11`.
           4. Rocks of type `v2` (which are `v1`, `v3`, `v4`) and `v6` (which are `v5`, `v7`, `v8`) must be analyzed.
           
           Let's break down the plan:
           
           For the images:
           - Rover `v12` can take an image of `v17` at `#q5` and `v18` at `#q0`.
           - Rover `v14` can take an image of `v17` at `#q6` and `v18` at `#q13`.
           - Both rovers can communicate with the lander `v9`.
           
           For the rock analysis:
           - Rocks `v1`, `v3`, `v4` are type `v2`.
           - Rocks `v5`, `v7`, `v8` are type `v6`.
           - Rover `v12` can sample `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
           - Rover `v14` can sample `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
           
           The goal requires receiving images of both `v17` and `v18` and analyzing rocks of type `v2` and `v6`. We have two rovers. We can distribute tasks or have one rover do most of it.
           Let's try to have `v12` handle the images and `v14` handle the rock analysis. Or, since `v14` is already at a good position to sample multiple rocks and take images, we can utilize `v14` for both.
           
           Let's target the goal conditions:
           - `receivedimage(v17, v11)` and `receivedimage(v18, v11)`:
               - `v14` can take image of `v17` at `#q6` and `v18` at `#q13`. Then `v14` can send images from `#q2`.
           - `receivedanalysis(v1)` (type `v2`), `receivedanalysis(v3)` (type `v2`), `receivedanalysis(v4)` (type `v2`).
               - `v14` can sample `v1`, `v3`, `v4` from `#o5` or `#q1`.
               - `v14` can send analysis from `#q2`.
           - `receivedanalysis(v5)` (type `v6`), `receivedanalysis(v7)` (type `v6`), `receivedanalysis(v8)` (type `v6`).
               - `v14` can sample `v5`, `v7`, `v8` from `#o5` or `#q3`.
               - `v14` can send analysis from `#q2`.
           
           Since `v14` is at `v15` initially and can move to various other configs, we will use `v14`.
           
           Steps for `v14`:
           1. Calibrate camera for `v17`.
           2. Take image of `v17`.
           3. Calibrate camera for `v18`.
           4. Take image of `v18`.
           5. Move to a config where it can send images.
           6. Send images of `v17` and `v18`.
           7. Move to a config where it can sample rocks of type `v2`.
           8. Sample rocks of type `v2` (e.g., `v1`, `v3`, `v4`).
           9. Send analysis of `v1`, `v3`, `v4`.
           10. Move to a config where it can sample rocks of type `v6`.
           11. Sample rocks of type `v6` (e.g., `v5`, `v7`, `v8`).
           12. Send analysis of `v5`, `v7`, `v8`.
           
           Let's refine the plan using specific actions.
           Rover `v14` is initially at `v15`.
           
           Images:
           - `imagevisible(v14, #q6, #y4, v17)`
           - `imagevisible(v14, #q13, #y5, v18)`
           - `comvisible(v14, #q2, #y1, v9)`
           
           Rocks:
           - `above(v14, #o5, v1)` (type v2)
           - `above(v14, #o5, v3)` (type v2)
           - `above(v14, #q1, v4)` (type v2)
           - `above(v14, #o5, v5)` (type v6)
           - `above(v14, #o5, v7)` (type v6)
           - `above(v14, #o5, v8)` (type v6)
           
           Let's simplify. `v14` can sample all required rocks from `#o5` (v1, v3, v5, v7, v8) and `#q1` (v4).
           Also, `v14` has the camera `v10` and store `v16`.
           
           To ensure we collect all rocks and images, we can make `v14` collect all images and analyze all rocks required.
           
           Sequence:
           1. Calibrate for `v17` at `#q6`.
           2. Take image of `v17` at `#q6`.
           3. Calibrate for `v18` at `#q13`. (Note: #q6 can go to #q13 or v15 can go to #q13)
           4. Take image of `v18` at `#q13`.
           5. Move to `#q2` to send images.
           6. Send image of `v17`.
           7. Send image of `v18`.
           8. Move to `#o5` to sample rocks (`v1`, `v3`, `v5`, `v7`, `v8`).
           9. Sample `v1`, `v3`, `v5`, `v7`, `v8` (dropping rocks as needed to free up space).
           10. Move to `#q1` to sample `v4`.
           11. Sample `v4`.
           12. Move to `#q2` to send analyses.
           13. Send analyses for all sampled rocks.
           
           This sequence can be optimized. `v14` is initially at `v15`.
           `motion(v14, v15, #t12, #q6)` means `v14` can move from `v15` to `#q6`.
           `motion(v14, #q6, #t27, #q13)` means `v14` can move from `#q6` to `#q13`.
           `motion(v14, #q13, #t26, #q2)` means `v14` can move from `#q13` to `#q2`.
           `motion(v14, #q2, #o2, #o5)` means `v14` can move from `#q2` to `#o5`.
           `motion(v14, #o5, #o2, #q1)` means `v14` can move from `#o5` to `#q1`.
           `motion(v14, #q1, #t2, #q2)` means `v14` can move from `#q1` to `#q2`.
           
           We also need to consider `free(v14, v16)`. Sampling a rock makes the store `full(v14, v16)`. We only have one store, so we need to `drop_rock` to sample another. This means we must send the analysis after each sample or drop the rock immediately. The goal is `receivedanalysis`, not `analyzed`. So we need to sample and send analysis for each rock or group rocks by type, then send. The prompt asks for `receivedanalysis(?r)`.
           
           Let's group by type and location for efficiency.
           All type `v6` rocks (`v5`, `v7`, `v8`) are above `v14` at `#o5`.
           All type `v2` rocks (`v1`, `v3`, `v4`) are above `v14` at `#o5` (for `v1`, `v3`) or `#q1` (for `v4`).
           
           Plan:
           1. `v14` moves to `#q6` to calibrate and take image of `v17`.
           2. `v14` moves to `#q13` to calibrate and take image of `v18`.
           3. `v14` moves to `#q2` to send images.
           4. `v14` moves to `#o5` to sample rocks of type `v6` and type `v2` (v1, v3, v5, v7, v8). This will require multiple sample/drop or sample/send cycles due to single store. Let's sample and send one by one to keep the plan simple.
           5. `v14` moves to `#q1` to sample rock `v4` (type `v2`).
           6. `v14` moves back to `#q2` to send analyses.
           
           Revised plan with individual rock sampling and sending:
           Rover `v14` is initially at `v15`.
           
           Images first:
           - Calibrate and take image of `v17` at `#q6`.
           - Calibrate and take image of `v18` at `#q13`.
           - Send images from `#q2`.
           
           Rocks (type v2: `v1`, `v3`, `v4`; type v6: `v5`, `v7`, `v8`):
           - Sample `v1` (type v2) at `#o5`, send analysis from `#q2`.
           - Sample `v3` (type v2) at `#o5`, send analysis from `#q2`.
           - Sample `v4` (type v2) at `#q1`, send analysis from `#q2`.
           - Sample `v5` (type v6) at `#o5`, send analysis from `#q2`.
           - Sample `v7` (type v6) at `#o5`, send analysis from `#q2`.
           - Sample `v8` (type v6) at `#o5`, send analysis from `#q2`.
           
           ```
           --Plan--:
           (move v14 v15 #t12 #q6)
           (calibrate v14 #q6 #y4 v17 v10)
           (take_image v14 #q6 #y4 v17 v10 v11)
           (move v14 #q6 #t27 #q13)
           (calibrate v14 #q13 #y5 v18 v10)
           (take_image v14 #q13 #y5 v18 v10 v11)
           (move v14 #q13 #t26 #q2)
           (send_image v14 #q2 #y1 v9 v17 v11)
           (send_image v14 #q2 #y1 v9 v18 v11)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v1)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v3)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v5 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v5)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v7)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v8 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v8)
           (move v14 #q2 #t4 #q1)
           (sample_rock v14 #q1 v4 v16)
           (move v14 #q1 #t2 #q2)
           (send_analysis v14 #q2 #y1 v9 v4)
           ```

User:      The plan you provided contains the following invalid actions: `(sample_rock v14 #o5 v5 v16), ```)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q1 v4 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t17 #q7))
           ((move v12 #q0 #t25 #q5))
           ((move v12 #q0 #t7 #q4))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t23 #q4))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t29 #q4))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #t14 #q7))
           ((move v12 #q4 #t18 #q8))
           ((move v12 #q4 #t30 #q11))
           ((move v12 #q4 #t6 v13))
           ((move v12 #q4 #t8 #q0))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t24 #q8))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q4))
           ((move v12 #q7 #t21 #q9))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q4))
           ((move v12 #q8 #t20 #q7))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t22 #q4))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t28 #q8))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t15 #q3))
           ((move v14 #q1 #t2 #q2))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t26 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #t1 v15))
           ((move v14 #q2 #t4 #q1))
           ((move v14 #q2 #t5 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q2))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t11 #q2))
           ((move v14 #q6 #t16 #q1))
           ((move v14 #q6 #t27 #q13))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q3))
           ((move v14 v15 #t12 #q6))
           ((move v14 v15 #t9 #q1))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #q13 #y5 v18 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q13 #y5 v18 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The scene contains two rovers, `v12` and `v14`, each with a camera `v10` that supports mode `v11`. There are various rock types (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`). Both rovers have stores `v16` which are initially free. There's a lander `v9` for communication. The goal is `new-axiom@0()`, which means:
           1. Both rovers must be at some configuration. This is already true for both rovers (`atconf(v12, v13)` and `atconf(v14, v15)`).
           2. Both rovers must have free storage. This is already true (`free(v12, v16)` and `free(v14, v16)`).
           3. Images of objectives `v17` and `v18` must be received in mode `v11`.
           4. Rocks of type `v2` (which are `v1`, `v3`, `v4`) and `v6` (which are `v5`, `v7`, `v8`) must be analyzed.
           
           The previous plan had an invalid action, specifically `(sample_rock v14 #o5 v5 v16)`. Looking at the provided valid actions, `v14` can sample `v5` at configuration `#q3` using `(sample_rock v14 #q3 v5 v16)`. All other `sample_rock` actions in the previous plan were valid.
           
           Let's re-evaluate the rock sampling for `v14`.
           - Type `v2`: `v1` (at `#o5`), `v3` (at `#o5`), `v4` (at `#q1`).
           - Type `v6`: `v5` (at `#q3`), `v7` (at `#o5`), `v8` (at `#o5`).
           
           Revised plan strategy for `v14`:
           1. Calibrate and take images of `v17` and `v18`.
           2. Move to `#q2` and send the images.
           3. Move to `#o5` to sample `v1`, `v3`, `v7`, `v8`. For each, send analysis from `#q2` (necessitating moves between `#o5` and `#q2`).
           4. Move to `#q3` to sample `v5`. Send analysis from `#q2`.
           5. Move to `#q1` to sample `v4`. Send analysis from `#q2`.
           
           This still means a lot of movement between sampling locations and communication location due to the single storage `v16`.
           
           Let's prioritize the images first, then the analysis.
           
           Images:
           - `v14` at `v15` can move to `#q6`.
           - `v14` at `#q6` can move to `#q13`.
           - `v14` at `#q13` can move to `#q2`.
           
           Rock analysis (all rocks need to be analyzed and sent):
           Type `v2`: `v1`, `v3`, `v4`
           Type `v6`: `v5`, `v7`, `v8`
           
           Let's make sure we use the available sample actions:
           - `(sample_rock v14 #o5 v1 v16)`
           - `(sample_rock v14 #o5 v3 v16)`
           - `(sample_rock v14 #q1 v4 v16)`
           - `(sample_rock v14 #q3 v5 v16)`
           - `(sample_rock v14 #o5 v7 v16)`
           - `(sample_rock v14 #o5 v8 v16)`
           
           It appears that `v14` can perform all sampling. The communication location is `#q2` for `v14`.
           
           ```
           --Plan--:
           (move v14 v15 #t12 #q6)
           (calibrate v14 #q6 #y4 v17 v10)
           (take_image v14 #q6 #y4 v17 v10 v11)
           (move v14 #q6 #t27 #q13)
           (calibrate v14 #q13 #y5 v18 v10)
           (take_image v14 #q13 #y5 v18 v10 v11)
           (move v14 #q13 #t26 #q2)
           (send_image v14 #q2 #y1 v9 v17 v11)
           (send_image v14 #q2 #y1 v9 v18 v11)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v1)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v3)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v7)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v8 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v8)
           (move v14 #q2 #t5 #q3)
           (sample_rock v14 #q3 v5 v16)
           (move v14 #q3 #t3 #q2)
           (send_analysis v14 #q2 #y1 v9 v5)
           (move v14 #q2 #t4 #q1)
           (sample_rock v14 #q1 v4 v16)
           (move v14 #q1 #t2 #q2)
           (send_analysis v14 #q2 #y1 v9 v4)
           ```

User:      The plan you provided contains the following invalid actions: ````)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q1 v4 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t17 #q7))
           ((move v12 #q0 #t25 #q5))
           ((move v12 #q0 #t7 #q4))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t23 #q4))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t29 #q4))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #t14 #q7))
           ((move v12 #q4 #t18 #q8))
           ((move v12 #q4 #t30 #q11))
           ((move v12 #q4 #t6 v13))
           ((move v12 #q4 #t8 #q0))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t24 #q8))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q4))
           ((move v12 #q7 #t21 #q9))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q4))
           ((move v12 #q8 #t20 #q7))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t22 #q4))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t28 #q8))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q13))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t15 #q3))
           ((move v14 #q1 #t2 #q2))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q1))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q3))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t26 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q13))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #t1 v15))
           ((move v14 #q2 #t4 #q1))
           ((move v14 #q2 #t5 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q13))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q2))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t11 #q2))
           ((move v14 #q6 #t16 #q1))
           ((move v14 #q6 #t27 #q13))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q3))
           ((move v14 v15 #t12 #q6))
           ((move v14 v15 #t9 #q1))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #q13 #y5 v18 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q13 #y5 v18 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The scene contains two rovers, `v12` and `v14`, each with a camera `v10` that supports mode `v11`. There are various rock types (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`). Both rovers have stores `v16` which are initially free. There's a lander `v9` for communication. The goal is `new-axiom@0()`, which means:
           1. Both rovers must be at some configuration. This is already true for both rovers (`atconf(v12, v13)` and `atconf(v14, v15)`).
           2. Both rovers must have free storage. This is already true (`free(v12, v16)` and `free(v14, v16)`).
           3. Images of objectives `v17` and `v18` must be received in mode `v11`.
           4. Rocks of type `v2` (which are `v1`, `v3`, `v4`) and `v6` (which are `v5`, `v7`, `v8`) must be analyzed.
           
           The previous response indicated an invalid action, but did not specify which one, only ````)`. Assuming the previous plan's structure was mostly correct and the problem was with a specific action instance (which was fixed in the last response from `(sample_rock v14 #o5 v5 v16)` to `(sample_rock v14 #q3 v5 v16)`), I will re-verify the full plan against the provided list of valid actions.
           
           After careful review of the provided valid actions, all actions in the previous plan appear to be present in the list of valid actions.
           Let's confirm the flow to achieve the goal:
           
           **Objective Images (v17, v18):**
           - Rover `v14` moves to `#q6` to calibrate and take an image of `v17`. (`calibrate v14 #q6 #y4 v17 v10`, `take_image v14 #q6 #y4 v17 v10 v11`)
           - Rover `v14` moves to `#q13` to calibrate and take an image of `v18`. (`calibrate v14 #q13 #y5 v18 v10`, `take_image v14 #q13 #y5 v18 v10 v11`)
           - Rover `v14` moves to `#q2` to send both images to `v9`. (`send_image v14 #q2 #y1 v9 v17 v11`, `send_image v14 #q2 #y1 v9 v18 v11`)
           This covers `receivedimage(v17, v11)` and `receivedimage(v18, v11)`.
           
           **Rock Analysis (type v2: v1, v3, v4; type v6: v5, v7, v8):**
           Rover `v14` has one store `v16`. To analyze all rocks, it must sample one, send its analysis, and then repeat, as `full(v14, v16)` prevents further samples until `drop_rock` or `send_analysis` (which implies analysis completion). `send_analysis` is available after `analyzed`.
           
           - **Rock `v1` (type v2):** `v14` moves to `#o5`, samples `v1`, moves to `#q2`, sends analysis.
           - **Rock `v3` (type v2):** `v14` moves to `#o5`, samples `v3`, moves to `#q2`, sends analysis.
           - **Rock `v7` (type v6):** `v14` moves to `#o5`, samples `v7`, moves to `#q2`, sends analysis.
           - **Rock `v8` (type v6):** `v14` moves to `#o5`, samples `v8`, moves to `#q2`, sends analysis.
           - **Rock `v5` (type v6):** `v14` moves to `#q3`, samples `v5`, moves to `#q2`, sends analysis.
           - **Rock `v4` (type v2):** `v14` moves to `#q1`, samples `v4`, moves to `#q2`, sends analysis.
           
           This strategy ensures all necessary rocks are sampled and their analyses sent, meeting the `receivedanalysis` requirements for both types. The `move` actions between sampling locations and communication locations are all explicitly listed as valid actions.
           
           The plan appears to be sound based on the provided initial state, goal, domain actions, and valid action instances.
           
           --Plan--:
           (move v14 v15 #t12 #q6)
           (calibrate v14 #q6 #y4 v17 v10)
           (take_image v14 #q6 #y4 v17 v10 v11)
           (move v14 #q6 #t27 #q13)
           (calibrate v14 #q13 #y5 v18 v10)
           (take_image v14 #q13 #y5 v18 v10 v11)
           (move v14 #q13 #t26 #q2)
           (send_image v14 #q2 #y1 v9 v17 v11)
           (send_image v14 #q2 #y1 v9 v18 v11)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v1)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v3)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v7)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v8 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v8)
           (move v14 #q2 #t5 #q3)
           (sample_rock v14 #q3 v5 v16)
           (move v14 #q3 #t3 #q2)
           (send_analysis v14 #q2 #y1 v9 v5)
           (move v14 #q2 #t4 #q1)
           (sample_rock v14 #q1 v4 v16)
           (move v14 #q1 #t2 #q2)
           (send_analysis v14 #q2 #y1 v9 v4)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal is `new-axiom@0()`, which translates to the following conditions based on the axioms provided in the problem description:
           1. `atconf(v12, v13)`
           2. `atconf(v14, v15)`
           3. `free(v12, v16)`
           4. `free(v14, v16)`
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `type(?stone, v2)` (where `?stone` refers to `v1`, `v3`, `v4`) and `receivedanalysis(?stone)` for all of them.
           8. `type(?soil, v6)` (where `?soil` refers to `v5`, `v7`, `v8`) and `receivedanalysis(?soil)` for all of them.
           
           Let's re-verify the plan step-by-step, paying close attention to the state changes and the goal requirements, and ensuring all actions are from the valid action list.
           
           Initial State:
           - `atconf(v12, v13)` and `atconf(v14, v15)` are true.
           - `free(v12, v16)` and `free(v14, v16)` are true.
           - `onboard(v10, v12)` and `onboard(v10, v14)` (camera on both rovers).
           - `supports(v10, v11)` (camera supports the mode).
           - `type(v1, v2)`, `type(v3, v2)`, `type(v4, v2)` (type v2 rocks).
           - `type(v5, v6)`, `type(v7, v6)`, `type(v8, v6)` (type v6 rocks).
           - `objective(v17)`, `objective(v18)`.
           - `lander(v9)`.
           
           The provided plan uses only `v14`. Let's ensure `v14` successfully achieves all goals.
           
           1. **Images (`v17`, `v18`):**
              - `(move v14 v15 #t12 #q6)`: `atconf(v14, #q6)` becomes true.
              - `(calibrate v14 #q6 #y4 v17 v10)`: `calibrated(v10, v14)` becomes true.
              - `(take_image v14 #q6 #y4 v17 v10 v11)`: `haveimage(v14, v17, v11)` becomes true. `calibrated(v10, v14)` becomes false.
              - `(move v14 #q6 #t27 #q13)`: `atconf(v14, #q13)` becomes true.
              - `(calibrate v14 #q13 #y5 v18 v10)`: `calibrated(v10, v14)` becomes true.
              - `(take_image v14 #q13 #y5 v18 v10 v11)`: `haveimage(v14, v18, v11)` becomes true. `calibrated(v10, v14)` becomes false.
              - `(move v14 #q13 #t26 #q2)`: `atconf(v14, #q2)` becomes true.
              - `(send_image v14 #q2 #y1 v9 v17 v11)`: `receivedimage(v17, v11)` becomes true. `haveimage(v14, v17, v11)` becomes false.
              - `(send_image v14 #q2 #y1 v9 v18 v11)`: `receivedimage(v18, v11)` becomes true. `haveimage(v14, v18, v11)` becomes false.
              *Image goals achieved.*
           
           2. **Rock Analysis (Type v2: v1, v3, v4; Type v6: v5, v7, v8):**
              `v14` needs to be at the correct configuration to `sample_rock`.
              `store(v16)` is available. `free(v14, v16)` is needed for `sample_rock`. After `sample_rock`, `full(v14, v16)` becomes true and `free(v14, v16)` becomes false. `send_analysis` requires `analyzed` (which is set by `sample_rock`) and makes no change to store. `drop_rock` makes `free` true and `full` false. Since `send_analysis` doesn't free the store, we need to intersperse `drop_rock` or rely on `send_analysis` effectively "consuming" the sample. The domain says `analyzed(?v, ?r)` is set by `sample_rock`. `send_analysis` needs `analyzed(?v, ?r)`. It doesn't remove `analyzed`. However, `full(?v, ?s)` is not removed by `send_analysis`. This means to sample another rock, we MUST `drop_rock`. This was the likely cause of the "not satisfied" goal for `new-axiom@0()`, as not all rocks could have been sampled if the store remained full.
           
           Revised strategy for rock sampling: Sample, Send Analysis, Drop Rock. Repeat for each rock.
           
           Let's re-do the rock sampling section. `v14` is at `#q2`.
           
           - **Rock `v1` (type v2):**
              - `(move v14 #q2 #o2 #o5)`: `atconf(v14, #o5)` becomes true.
              - `(sample_rock v14 #o5 v1 v16)`: `full(v14, v16)` true, `free(v14, v16)` false, `analyzed(v14, v1)` true.
              - `(move v14 #o5 #o2 #q2)`: `atconf(v14, #q2)` becomes true.
              - `(send_analysis v14 #q2 #y1 v9 v1)`: `receivedanalysis(v1)` true.
              - `(drop_rock v14 v16)`: `free(v14, v16)` true, `full(v14, v16)` false.
           
           - **Rock `v3` (type v2):** (v14 is at #q2, free store)
              - `(move v14 #q2 #o2 #o5)`: `atconf(v14, #o5)` true.
              - `(sample_rock v14 #o5 v3 v16)`: `full(v14, v16)` true, `free(v14, v16)` false, `analyzed(v14, v3)` true.
              - `(move v14 #o5 #o2 #q2)`: `atconf(v14, #q2)` true.
              - `(send_analysis v14 #q2 #y1 v9 v3)`: `receivedanalysis(v3)` true.
              - `(drop_rock v14 v16)`: `free(v14, v16)` true, `full(v14, v16)` false.
           
           - **Rock `v7` (type v6):** (v14 is at #q2, free store)
              - `(move v14 #q2 #o2 #o5)`: `atconf(v14, #o5)` true.
              - `(sample_rock v14 #o5 v7 v16)`: `full(v14, v16)` true, `free(v14, v16)` false, `analyzed(v14, v7)` true.
              - `(move v14 #o5 #o2 #q2)`: `atconf(v14, #q2)` true.
              - `(send_analysis v14 #q2 #y1 v9 v7)`: `receivedanalysis(v7)` true.
              - `(drop_rock v14 v16)`: `free(v14, v16)` true, `full(v14, v16)` false.
           
           - **Rock `v8` (type v6):** (v14 is at #q2, free store)
              - `(move v14 #q2 #o2 #o5)`: `atconf(v14, #o5)` true.
              - `(sample_rock v14 #o5 v8 v16)`: `full(v14, v16)` true, `free(v14, v16)` false, `analyzed(v14, v8)` true.
              - `(move v14 #o5 #o2 #q2)`: `atconf(v14, #q2)` true.
              - `(send_analysis v14 #q2 #y1 v9 v8)`: `receivedanalysis(v8)` true.
              - `(drop_rock v14 v16)`: `free(v14, v16)` true, `full(v14, v16)` false.
           
           - **Rock `v5` (type v6):** (v14 is at #q2, free store)
              - `(move v14 #q2 #t5 #q3)`: `atconf(v14, #q3)` true.
              - `(sample_rock v14 #q3 v5 v16)`: `full(v14, v16)` true, `free(v14, v16)` false, `analyzed(v14, v5)` true.
              - `(move v14 #q3 #t3 #q2)`: `atconf(v14, #q2)` true.
              - `(send_analysis v14 #q2 #y1 v9 v5)`: `receivedanalysis(v5)` true.
              - `(drop_rock v14 v16)`: `free(v14, v16)` true, `full(v14, v16)` false.
           
           - **Rock `v4` (type v2):** (v14 is at #q2, free store)
              - `(move v14 #q2 #t4 #q1)`: `atconf(v14, #q1)` true.
              - `(sample_rock v14 #q1 v4 v16)`: `full(v14, v16)` true, `free(v14, v16)` false, `analyzed(v14, v4)` true.
              - `(move v14 #q1 #t2 #q2)`: `atconf(v14, #q2)` true.
              - `(send_analysis v14 #q2 #y1 v9 v4)`: `receivedanalysis(v4)` true.
              - `(drop_rock v14 v16)`: `free(v14, v16)` true, `full(v14, v16)` false.
           
           All conditions of `new-axiom@0()` should now be met:
           - `atconf(v12, v13)`: True initially.
           - `atconf(v14, v15)`: False (it's at #q2), but the axiom is existential for v14's configuration, so `atconf(v14, #q2)` is fine.
           - `free(v12, v16)`: True initially.
           - `free(v14, v16)`: True after the last `drop_rock`.
           - `receivedimage(v17, v11)`: True.
           - `receivedimage(v18, v11)`: True.
           - `receivedanalysis(v1)`, `receivedanalysis(v3)`, `receivedanalysis(v4)`: All true.
           - `receivedanalysis(v5)`, `receivedanalysis(v7)`, `receivedanalysis(v8)`: All true.
           
           This revised plan should work.
           
           --Plan--:
           (move v14 v15 #t12 #q6)
           (calibrate v14 #q6 #y4 v17 v10)
           (take_image v14 #q6 #y4 v17 v10 v11)
           (move v14 #q6 #t27 #q13)
           (calibrate v14 #q13 #y5 v18 v10)
           (take_image v14 #q13 #y5 v18 v10 v11)
           (move v14 #q13 #t26 #q2)
           (send_image v14 #q2 #y1 v9 v17 v11)
           (send_image v14 #q2 #y1 v9 v18 v11)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v8 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q2 #t5 #q3)
           (sample_rock v14 #q3 v5 v16)
           (move v14 #q3 #t3 #q2)
           (send_analysis v14 #q2 #y1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q2 #t4 #q1)
           (sample_rock v14 #q1 v4 v16)
           (move v14 #q1 #t2 #q2)
           (send_analysis v14 #q2 #y1 v9 v4)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal is `new-axiom@0()`. As derived previously, this axiom requires:
           1. `atconf(v12, v13)` and `atconf(v14, <any_config>)`. (initial `atconf(v14, v15)` will become `atconf(v14, #q2)` in the end, satisfying the existential part)
           2. `free(v12, v16)` and `free(v14, v16)`. (The last `drop_rock` for `v14` will ensure this.)
           3. `receivedimage(v17, v11)` and `receivedimage(v18, v11)`.
           4. `receivedanalysis(v1)`, `receivedanalysis(v3)`, `receivedanalysis(v4)` (type `v2` rocks).
           5. `receivedanalysis(v5)`, `receivedanalysis(v7)`, `receivedanalysis(v8)` (type `v6` rocks).
           
           Let's carefully re-trace the plan to see why `new-axiom@0()` is still not satisfied. The `new-axiom@0()` is a big conjunction. If any part of it is false, the whole axiom is false.
           
           The plan looks logically sound with respect to achieving all the `receivedimage` and `receivedanalysis` predicates, and keeping the stores `free` for subsequent samples. The `atconf` and `free` predicates for both rovers are also addressed.
           
           Let's assume the issue isn't in my interpretation of the goal or actions, but a subtle detail in the state or valid actions that I might be overlooking.
           
           One potential issue could be if `new-axiom@0()` is not the correct interpretation of the goal and there are other conditions implicitly required by the problem's evaluation system. However, based on the PDDL definition of `new-axiom@0()`, my interpretation is correct.
           
           Could there be a dependency on `v12` being at `v13` AND `v14` being at `v15` specifically, and not any other configuration? The axiom uses `v14, v15` and `v12, v13` for `atconf` in the axiom definition, which means the goal implies *those specific* configurations for `atconf`. The previous plan moves `v14` from `v15` to other configurations, so `atconf(v14, v15)` would be false at the end. If `v14` needs to end up at `v15` for the axiom to be true, then we need to add a final move.
           
           Let's make that assumption: the goal `atconf(v14, v15)` and `atconf(v12, v13)` must be true at the *end* of the plan. Since `v12` never moves, `atconf(v12, v13)` remains true. For `v14`, it needs to return to `v15`. The last action in the previous plan has `v14` ending at `#q2`. We need to add a final move for `v14` to return to `v15`.
           
           Let's check `motion(v14, #q2, #t1, v15)`. This action exists and allows `v14` to move from `#q2` back to `v15`.
           
           So, the plan would be identical to the last one, with one final action added.
           
           --Plan--:
           (move v14 v15 #t12 #q6)
           (calibrate v14 #q6 #y4 v17 v10)
           (take_image v14 #q6 #y4 v17 v10 v11)
           (move v14 #q6 #t27 #q13)
           (calibrate v14 #q13 #y5 v18 v10)
           (take_image v14 #q13 #y5 v18 v10 v11)
           (move v14 #q13 #t26 #q2)
           (send_image v14 #q2 #y1 v9 v17 v11)
           (send_image v14 #q2 #y1 v9 v18 v11)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v3 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v8 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q2 #t5 #q3)
           (sample_rock v14 #q3 v5 v16)
           (move v14 #q3 #t3 #q2)
           (send_analysis v14 #q2 #y1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q2 #t4 #q1)
           (sample_rock v14 #q1 v4 v16)
           (move v14 #q1 #t2 #q2)
           (send_analysis v14 #q2 #y1 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q2 #t1 v15)

