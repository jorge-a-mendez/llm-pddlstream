User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v12)
           Atom supports(v10, v11)
           Atom rock(v4)
           Atom conf(v14, v15)
           Atom rock(v1)
           Atom type(v8, v6)
           Atom free(v12, v16)
           Atom rover(v12)
           Atom type(v5, v6)
           Atom rock(v3)
           Atom rock(v7)
           Atom atconf(v14, v15)
           Atom onboard(v10, v14)
           Atom rock(v5)
           Atom conf(v12, v13)
           Atom type(v4, v2)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom mode(v11)
           Atom objective(v17)
           Atom lander(v9)
           Atom rock(v8)
           Atom atconf(v12, v13)
           Atom type(v3, v2)
           Atom type(v1, v2)
           Atom store(v16)
           Atom free(v14, v16)
           Atom camera(v10)
           Atom rover(v14)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v7)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v3)
           Atom above(v14, #q1, v4)
           Atom conf(v14, #q1)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #q7, v5)
           Atom conf(v12, #q7)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom comvisible(v12, #q4, #y2, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, v15, #t10, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, v15, #t12, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q3, #t3, #q2)
           Atom motion(v14, #q2, #t5, #q3)
           Atom motion(v14, #q2, #t1, v15)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q6, #t11, #q2)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q4, #t6, v13)
           Atom motion(v12, #q4, #t14, #q7)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q7, #t13, #q4)
           Atom motion(v12, #q4, #t8, #q0)
           Atom motion(v12, #q0, #t7, #q4)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, v15, #t9, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q2, #t4, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #t2, #q2)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #o3, #o2, #q2)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o3)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q1 v4 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t7 #q4))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #t14 #q7))
           ((move v12 #q4 #t6 v13))
           ((move v12 #q4 #t8 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q2))
           ((move v14 #o3 #o2 #q3))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t2 #q2))
           ((move v14 #q2 #o2 #o3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #t1 v15))
           ((move v14 #q2 #t4 #q1))
           ((move v14 #q2 #t5 #q3))
           ((move v14 #q3 #o2 #o3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q2))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t11 #q2))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q3))
           ((move v14 v15 #t12 #q6))
           ((move v14 v15 #t9 #q1))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, each with a camera `v10` that supports mode `v11`. There are multiple rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) of two types (`v2` and `v6`), and two objectives (`v17`, `v18`). There's also a lander `v9` to which data can be sent, and a store `v16` for samples. Both rovers are currently at `v13` and `v15` respectively, and their stores are free.
           
           The goal `new-axiom@0()` represents a complex state that includes:
           1. Both rovers `v12` and `v14` being at specific configurations (which is already true in the initial state).
           2. Both rovers having a free store `v16` (also true).
           3. Receiving images for objectives `v17` and `v18` in mode `v11`.
           4. Receiving analysis for a rock of type `v2` (e.g., `v1`, `v3`, `v4`) and a rock of type `v6` (e.g., `v5`, `v7`, `v8`).
           
           To achieve the goal, we need to:
           - Take images of `v17` and `v18` using `v10` in mode `v11`.
           - Send these images to the lander `v9`.
           - Sample at least one rock of type `v2` and one rock of type `v6`.
           - Send the analysis of these sampled rocks to the lander `v9`.
           
           Let's break it down:
           
           **Image Acquisition and Transmission:**
           *   **Objective `v17`:**
               *   Rover `v12` can see `v17` at `#q5` using `#y3`.
               *   Rover `v14` can see `v17` at `#q6` using `#y4`.
           *   **Objective `v18`:**
               *   Rover `v12` can see `v18` at `#q0` using `#y0`.
               *   Rover `v14` can see `v18` at `#o3` using `#o4`.
           
           We can use `v12` to take and send the image of `v18`, and `v14` to take and send the image of `v17`.
           
           **Rock Analysis and Transmission:**
           *   **Rock of type `v2`:** `v1`, `v3`, `v4` are type `v2`.
               *   `v12` can sample `v1`, `v3`, `v4` at `#o5`.
               *   `v14` can sample `v1`, `v3`, `v4` at `#o5` or `v4` at `#q1`.
           *   **Rock of type `v6`:** `v5`, `v7`, `v8` are type `v6`.
               *   `v12` can sample `v5` at `#q7`, or `v7`, `v8` at `#o5`.
               *   `v14` can sample `v5` at `#q3`, or `v7`, `v8` at `#o5`.
           
           We need to sample two different types of rocks. We can use `v12` to sample `v4` (type `v2`) and `v5` (type `v6`), and then send the analysis.
           
           **Plan Steps:**
           1.  **Calibrate and take image of `v18` with `v12`**: `v12` is at `v13`. It needs to move to `#q0` for `v18`.
           2.  **Send image of `v18` with `v12`**: `v12` needs to move to `#q4` to communicate with `v9`.
           3.  **Calibrate and take image of `v17` with `v14`**: `v14` is at `v15`. It needs to move to `#q6` for `v17`.
           4.  **Send image of `v17` with `v14`**: `v14` needs to move to `#q2` to communicate with `v9`.
           5.  **Sample rock `v4` (type `v2`) with `v14`**: `v14` is at `#q2`. It needs to move to `#q1` to sample `v4`.
           6.  **Sample rock `v5` (type `v6`) with `v14`**: `v14` is at `#q1`. It needs to move to `#q3` to sample `v5`.
           7.  **Send analysis of `v4` and `v5` with `v14`**: `v14` needs to move back to `#q2` to send analysis.
           
           Let's refine the plan to optimize movements and satisfy all preconditions.
           
           Rover `v12` is at `v13`.
           Rover `v14` is at `v15`.
           
           **Rover `v12` tasks:**
           *   Image `v18`: `imagevisible(v12, #q0, #y0, v18)`. Needs to be at `#q0`.
           *   Comms: `comvisible(v12, #q4, #y2, v9)`. Needs to be at `#q4`.
           
           **Rover `v14` tasks:**
           *   Image `v17`: `imagevisible(v14, #q6, #y4, v17)`. Needs to be at `#q6`.
           *   Sample `v4` (type `v2`): `above(v14, #q1, v4)`. Needs to be at `#q1`.
           *   Sample `v5` (type `v6`): `above(v14, #q3, v5)`. Needs to be at `#q3`.
           *   Comms: `comvisible(v14, #q2, #y1, v9)`. Needs to be at `#q2`.
           
           We can use `v12` to take an image of `v18` and send it, and `v14` to take an image of `v17`, sample two rocks, and send all data.
           
           Here's the refined plan:
           
           1.  **Rover `v12` handles `v18` image:**
               *   `move v12 v13 #t0 #q0` (Move to position to see `v18`)
               *   `calibrate v12 #q0 #y0 v18 v10` (Calibrate camera)
               *   `take_image v12 #q0 #y0 v18 v10 v11` (Take image)
               *   `move v12 #q0 #t7 #q4` (Move to position to communicate with `v9`)
               *   `send_image v12 #q4 #y2 v9 v18 v11` (Send image)
           
           2.  **Rover `v14` handles `v17` image and rock sampling/analysis:**
               *   `move v14 v15 #t12 #q6` (Move to position to see `v17`)
               *   `calibrate v14 #q6 #y4 v17 v10` (Calibrate camera)
               *   `take_image v14 #q6 #y4 v17 v10 v11` (Take image)
               *   `move v14 #q6 #o2 #q1` (Move to position to sample `v4`)
               *   `sample_rock v14 #q1 v4 v16` (Sample rock `v4`, type `v2`)
               *   `move v14 #q1 #o2 #q3` (Move to position to sample `v5`)
               *   `sample_rock v14 #q3 v5 v16` (Sample rock `v5`, type `v6`)
               *   `move v14 #q3 #t3 #q2` (Move to position to communicate with `v9`)
               *   `send_image v14 #q2 #y1 v9 v17 v11` (Send image)
               *   `send_analysis v14 #q2 #y1 v9 v4` (Send analysis for `v4`)
               *   `send_analysis v14 #q2 #y1 v9 v5` (Send analysis for `v5`)
           
           This plan ensures both images are taken and sent, and two different types of rocks are analyzed and sent.
           
           --Plan--:
           (move v12 v13 #t0 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #t7 #q4)
           (send_image v12 #q4 #y2 v9 v18 v11)
           (move v14 v15 #t12 #q6)
           (calibrate v14 #q6 #y4 v17 v10)
           (take_image v14 #q6 #y4 v17 v10 v11)
           (move v14 #q6 #o2 #q1)
           (sample_rock v14 #q1 v4 v16)
           (move v14 #q1 #o2 #q3)
           (sample_rock v14 #q3 v5 v16)
           (move v14 #q3 #t3 #q2)
           (send_image v14 #q2 #y1 v9 v17 v11)
           (send_analysis v14 #q2 #y1 v9 v4)
           (send_analysis v14 #q2 #y1 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. The `new-axiom@0()` goal is complex and requires several conditions to be met simultaneously:
           1.  `atconf(v12, v13)`
           2.  `atconf(v14, v15)`
           3.  `free(v12, v16)`
           4.  `free(v14, v16)`
           5.  `receivedimage(v17, v11)`
           6.  `receivedimage(v18, v11)`
           7.  `type(?stone, v2)` and `receivedanalysis(?stone)`
           8.  `type(?soil, v6)` and `receivedanalysis(?soil)`
           
           My previous plan did not ensure that rovers returned to their initial configurations (`v13` and `v15`) or that their stores were free after sampling. When a `sample_rock` action is performed, the `free(?v, ?s)` predicate becomes `full(?v, ?s)`. To satisfy `free(?v, ?s)` in the final state, a `drop_rock` action must be executed.
           
           Let's re-evaluate the plan, making sure all conditions for `new-axiom@0()` are met in the final state.
           
           Initial state:
           *   `atconf(v12, v13)` and `atconf(v14, v15)` are true.
           *   `free(v12, v16)` and `free(v14, v16)` are true.
           
           We need to achieve:
           *   `receivedimage(v17, v11)`
           *   `receivedimage(v18, v11)`
           *   `receivedanalysis(?stone of type v2)`
           *   `receivedanalysis(?soil of type v6)`
           *   And finally, `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)` must all be true.
           
           Revised Plan Strategy:
           
           1.  **Rover `v12` tasks:**
               *   Move to `#q0` to image `v18`.
               *   Calibrate and take image of `v18`.
               *   Move to `#q4` to send image of `v18`.
               *   Send image.
               *   Return to `v13`.
           
           2.  **Rover `v14` tasks:**
               *   Move to `#q6` to image `v17`.
               *   Calibrate and take image of `v17`.
               *   Move to `#q1` to sample `v4` (type `v2`).
               *   Sample `v4`.
               *   Move to `#q3` to sample `v5` (type `v6`).
               *   Sample `v5`. (Now `v14` store `v16` is full).
               *   Move to `#q2` to send image and analysis.
               *   Send image of `v17`.
               *   Send analysis of `v4`.
               *   Send analysis of `v5`.
               *   Drop rocks to free the store `v16`.
               *   Return to `v15`.
           
           This ensures that the rovers are at their original positions and their stores are free at the end, along with all data transmission goals.
           
           --Plan--:
           (move v12 v13 #t0 #q0)
           (calibrate v12 #q0 #y0 v18 v10)
           (take_image v12 #q0 #y0 v18 v10 v11)
           (move v12 #q0 #t7 #q4)
           (send_image v12 #q4 #y2 v9 v18 v11)
           (move v12 #q4 #t6 v13)
           (move v14 v15 #t12 #q6)
           (calibrate v14 #q6 #y4 v17 v10)
           (take_image v14 #q6 #y4 v17 v10 v11)
           (move v14 #q6 #o2 #q1)
           (sample_rock v14 #q1 v4 v16)
           (move v14 #q1 #o2 #q3)
           (sample_rock v14 #q3 v5 v16)
           (move v14 #q3 #t3 #q2)
           (send_image v14 #q2 #y1 v9 v17 v11)
           (send_analysis v14 #q2 #y1 v9 v4)
           (send_analysis v14 #q2 #y1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q2 #t1 v15)

