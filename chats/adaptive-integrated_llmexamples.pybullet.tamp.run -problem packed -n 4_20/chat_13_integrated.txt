User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q20: object
           #q21: object
           #q22: object
           #q23: object
           #q24: object
           #q25: object
           #q26: object
           #q27: object
           #t86: object
           #t87: object
           #t88: object
           #t89: object
           #t90: object
           #t91: object
           #t92: object
           #t93: object
           #t94: object
           #t95: object
           #t96: object
           p10: object
           p11: object
           p16: object
           p17: object
           p18: object
           p19: object
           p20: object
           p21: object
           p22: object
           p23: object
           p24: object
           p25: object
           p26: object
           p27: object
           p32: object
           p33: object
           p34: object
           p35: object
           p36: object
           p37: object
           p38: object
           p39: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v51: object
           v52: object
           v53: object
           v54: object
           v6: object
           v63: object
           v64: object
           v65: object
           v66: object
           v67: object
           v68: object
           v69: object
           v7: object
           v70: object
           v8: object
           v83: object
           v84: object
           v85: object
           v86: object
           v87: object
           v88: object
           v89: object
           v9: object
           v90: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p26 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.085), (-0.015, -0.015)).
           Object p27 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.224, 0.317, 0.781) and quaternion (0.0, 0.0, -0.501, 0.865).
           Object p9 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v64 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.5, -0.5, -0.5, 0.5) relative to the target object.
           Object p10 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p34 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p32 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v65 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.5, -0.5, -0.5, 0.5) relative to the target object.
           Object p35 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p39 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v67 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.0, -0.707, 0.0, 0.707) relative to the target object.
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, 0.015), (-0.015, 0.085)).
           Object v17 is a pose with position (-0.158, -0.412, 0.781) and quaternion (0.0, 0.0, 0.662, 0.749).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p33 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p20 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p17 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p21 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p22 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v68 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.5, -0.5, -0.5, 0.5) relative to the target object.
           Object p23 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v66 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.0, -0.707, 0.0, 0.707) relative to the target object.
           Object v9 is a pose with position (0.027, -0.489, 0.781) and quaternion (0.0, 0.0, 0.998, -0.062).
           Object p38 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p25 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p37 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v63 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.0, -0.707, 0.0, 0.707) relative to the target object.
           Object p18 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p4 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p19 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p36 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, 0.015), (0.085, 0.085)).
           Object p16 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v69 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.5, -0.5, -0.5, 0.5) relative to the target object.
           Object v13 is a pose with position (0.082, 0.534, 0.781) and quaternion (0.0, 0.0, 0.655, 0.756).
           Object p24 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v70 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.0, -0.707, 0.0, 0.707) relative to the target object.
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v14, v15, v11)
           Atom kin(v31, v38, p11, v33, v34, v35)
           Atom pose(v16, p20)
           Atom kin(v31, v38, p18, v53, v34, v35)
           Atom pose(v14, p5)
           Atom stackable(v14, v10)
           Atom pose(v14, p19)
           Atom supported(v12, p17, v18)
           Atom kin(v31, v38, p22, v53, v34, v35)
           Atom pose(v8, p24)
           Atom pose(v14, p38)
           Atom pose(v16, v17)
           Atom stackable(v8, v18)
           Atom kin(v31, v32, p35, v89, v34, v35)
           Atom stackable(v16, v10)
           Atom stackable(v8, v10)
           Atom kin(v31, v32, p8, v33, v34, v35)
           Atom supported(v16, v17, v11)
           Atom pose(v12, v13)
           Atom pose(v16, p8)
           Atom supported(v8, p32, v18)
           Atom kin(v31, v37, p21, v52, v34, v35)
           Atom supported(v14, p26, v18)
           Atom aconf(v6, v7)
           Atom pose(v16, p16)
           Atom kin(v31, v38, p32, v84, v34, v35)
           Atom kin(v31, v36, p9, v33, v34, v35)
           Atom kin(v31, v32, p4, v33, v34, v35)
           Atom supported(v14, p5, v18)
           Atom supported(v12, v13, v11)
           Atom kin(v31, v38, p24, v53, v34, v35)
           Atom pose(v8, p11)
           Atom pose(v14, v15)
           Atom supported(v14, p34, v18)
           Atom pose(v16, p4)
           Atom kin(v31, v37, p37, v86, v34, v35)
           Atom pose(v16, p35)
           Atom pose(v14, p9)
           Atom kin(v31, v38, p7, v33, v34, v35)
           Atom kin(v31, v36, p23, v54, v34, v35)
           Atom pose(v12, p10)
           Atom kin(v31, v32, p27, v51, v34, v35)
           Atom kin(v31, v36, p34, v88, v34, v35)
           Atom arm(v6)
           Atom pose(v8, p36)
           Atom kin(v31, v37, p25, v52, v34, v35)
           Atom kin(v31, v37, p33, v85, v34, v35)
           Atom kin(v31, v36, p38, v88, v34, v35)
           Atom kin(v31, v36, p19, v54, v34, v35)
           Atom supported(v12, p25, v18)
           Atom supported(v8, p7, v18)
           Atom ataconf(v6, v7)
           Atom supported(v16, p27, v18)
           Atom supported(v8, p36, v18)
           Atom pose(v16, p27)
           Atom supported(v12, p37, v18)
           Atom kin(v31, v36, p5, v33, v34, v35)
           Atom pose(v12, p6)
           Atom handempty(v4)
           Atom kin(v31, v32, p16, v51, v34, v35)
           Atom supported(v16, p35, v18)
           Atom graspable(v8)
           Atom graspable(v12)
           Atom supported(v16, p20, v18)
           Atom kin(v31, v37, p33, v86, v34, v35)
           Atom pose(v14, p26)
           Atom ataconf(v4, v5)
           Atom kin(v31, v38, p36, v84, v34, v35)
           Atom supported(v14, p19, v18)
           Atom pose(v16, p39)
           Atom graspable(v14)
           Atom supported(v14, p9, v18)
           Atom kin(v31, v37, p10, v33, v34, v35)
           Atom pose(v12, p17)
           Atom ~test-cfree-approach-pose-negative(v16, p8, v64, v12, p10)
           Atom kin(v31, v38, p32, v83, v34, v35)
           Atom pose(v8, v9)
           Atom supported(v16, p8, v18)
           Atom stackable(v12, v10)
           Atom supported(v14, p38, v18)
           Atom controllable(v4)
           Atom atpose(v8, v9)
           Atom supported(v12, p6, v18)
           Atom ~test-cfree-approach-pose-negative(v12, p10, v67, v8, p11)
           Atom supported(v12, p33, v18)
           Atom supported(v12, p21, v18)
           Atom kin(v31, v37, p17, v52, v34, v35)
           Atom supported(v8, p18, v18)
           Atom stackable(v16, v18)
           Atom stackable(v14, v18)
           Atom arm(v4)
           Atom supported(v8, p24, v18)
           Atom kin(v31, v37, p6, v33, v34, v35)
           Atom ~test-cfree-approach-pose-negative(v14, p9, v65, v8, p11)
           Atom kin(v31, v32, p35, v90, v34, v35)
           Atom pose(v14, p34)
           Atom pose(v12, p21)
           Atom pose(v12, p33)
           Atom kin(v31, v32, p39, v90, v34, v35)
           Atom atpose(v16, v17)
           Atom kin(v31, v32, p39, v89, v34, v35)
           Atom pose(v12, p37)
           Atom pose(v12, p25)
           Atom kin(v31, v36, p38, v87, v34, v35)
           Atom atbconf(v3)
           Atom pose(v8, p22)
           Atom pose(v8, p18)
           Atom kin(v31, v36, p34, v87, v34, v35)
           Atom bconf(v3)
           Atom atpose(v12, v13)
           Atom supported(v16, p4, v18)
           Atom kin(v31, v38, p36, v83, v34, v35)
           Atom handempty(v6)
           Atom pose(v8, p7)
           Atom kin(v31, v32, p20, v51, v34, v35)
           Atom supported(v8, v9, v11)
           Atom aconf(v4, v5)
           Atom supported(v14, p23, v18)
           Atom ~test-cfree-approach-pose-negative(v16, p8, v63, v14, p9)
           Atom pose(v8, p32)
           Atom kin(v31, v37, p37, v85, v34, v35)
           Atom canmove()
           Atom supported(v8, p22, v18)
           Atom atpose(v14, v15)
           Atom supported(v16, p16, v18)
           Atom stackable(v12, v18)
           Atom supported(v16, p39, v18)
           Atom graspable(v16)
           Atom supported(v8, p11, v18)
           Atom pose(v14, p23)
           Atom kin(v31, v36, p26, v54, v34, v35)
           Atom supported(v12, p10, v18)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v16, v63)
           Atom grasp(v16, v64)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v14, #o2, v18)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, p27, v64, #o3, #o4)
           Atom kin(v4, v16, p27, v63, #o3, #o4)
           Atom supported(v12, #o2, v10)
           Atom kin(v4, v16, v17, v64, #o3, #o4)
           Atom bconf(#q24)
           Atom atraj(#t93)
           Atom kin(v4, v16, v17, v63, #q24, #t93)
           Atom kin(v4, v16, p16, v64, #o3, #o4)
           Atom kin(v4, v16, p16, v63, #o3, #o4)
           Atom grasp(v14, v66)
           Atom grasp(v14, v65)
           Atom kin(v4, v16, p39, v64, #o3, #o4)
           Atom bconf(#q22)
           Atom atraj(#t88)
           Atom kin(v4, v16, p39, v63, #q22, #t88)
           Atom kin(v4, v14, p23, v65, #o3, #o4)
           Atom kin(v4, v14, p38, v65, #o3, #o4)
           Atom kin(v4, v14, p5, v65, #o3, #o4)
           Atom kin(v4, v14, p34, v65, #o3, #o4)
           Atom kin(v4, v14, p5, v66, #o3, #o4)
           Atom kin(v4, v14, p23, v66, #o3, #o4)
           Atom kin(v4, v14, p34, v66, #o3, #o4)
           Atom bconf(#q23)
           Atom atraj(#t92)
           Atom kin(v4, v14, p38, v66, #q23, #t92)
           Atom kin(v4, v14, p26, v66, #o3, #o4)
           Atom kin(v4, v14, p26, v65, #o3, #o4)
           Atom kin(v4, v16, p8, v63, #o3, #o4)
           Atom kin(v4, v16, p8, v64, #o3, #o4)
           Atom grasp(v12, v67)
           Atom grasp(v12, v68)
           Atom grasp(v8, v69)
           Atom grasp(v8, v70)
           Atom kin(v4, v12, p33, v67, #o3, #o4)
           Atom bconf(#q25)
           Atom atraj(#t94)
           Atom kin(v4, v12, p37, v67, #q25, #t94)
           Atom kin(v4, v12, p6, v67, #o3, #o4)
           Atom kin(v4, v12, p25, v67, #o3, #o4)
           Atom kin(v4, v12, p17, v67, #o3, #o4)
           Atom kin(v4, v12, p21, v67, #o3, #o4)
           Atom kin(v4, v12, p6, v68, #o3, #o4)
           Atom kin(v4, v12, p17, v68, #o3, #o4)
           Atom kin(v4, v12, p21, v68, #o3, #o4)
           Atom kin(v4, v12, p25, v68, #o3, #o4)
           Atom kin(v4, v12, p37, v68, #o3, #o4)
           Atom kin(v4, v12, p33, v68, #o3, #o4)
           Atom kin(v4, v8, p22, v69, #o3, #o4)
           Atom kin(v4, v8, p18, v69, #o3, #o4)
           Atom kin(v4, v8, p24, v69, #o3, #o4)
           Atom kin(v4, v8, v9, v69, #o3, #o4)
           Atom kin(v4, v8, p32, v69, #o3, #o4)
           Atom kin(v4, v8, p36, v69, #o3, #o4)
           Atom kin(v4, v8, p7, v69, #o3, #o4)
           Atom kin(v4, v8, p24, v70, #o3, #o4)
           Atom kin(v4, v8, p22, v70, #o3, #o4)
           Atom kin(v4, v8, p7, v70, #o3, #o4)
           Atom kin(v4, v8, p32, v70, #o3, #o4)
           Atom bconf(#q26)
           Atom atraj(#t95)
           Atom kin(v4, v8, p36, v70, #q26, #t95)
           Atom bconf(#q20)
           Atom atraj(#t86)
           Atom kin(v4, v8, v9, v70, #q20, #t86)
           Atom kin(v4, v8, p18, v70, #o3, #o4)
           Atom kin(v4, v12, p10, v68, #o3, #o4)
           Atom kin(v4, v12, p10, v67, #o3, #o4)
           Atom bconf(#q21)
           Atom atraj(#t87)
           Atom kin(v4, v12, v13, v67, #q21, #t87)
           Atom kin(v4, v12, v13, v68, #o3, #o4)
           Atom kin(v4, v16, p20, v63, #o3, #o4)
           Atom kin(v4, v16, p20, v64, #o3, #o4)
           Atom kin(v4, v14, p9, v65, #o3, #o4)
           Atom kin(v4, v14, p9, v66, #o3, #o4)
           Atom kin(v4, v16, p35, v64, #o3, #o4)
           Atom kin(v4, v16, p35, v63, #o3, #o4)
           Atom kin(v4, v16, p4, v64, #o3, #o4)
           Atom kin(v4, v16, p4, v63, #o3, #o4)
           Atom kin(v4, v14, p19, v66, #o3, #o4)
           Atom kin(v4, v14, p19, v65, #o3, #o4)
           Atom supported(v8, #o2, v10)
           Atom kin(v4, v14, v15, v65, #o3, #o4)
           Atom bconf(#q27)
           Atom atraj(#t96)
           Atom kin(v4, v14, v15, v66, #q27, #t96)
           Atom supported(v16, #o2, v10)
           Atom kin(v4, v8, p11, v70, #o3, #o4)
           Atom kin(v4, v8, p11, v69, #o3, #o4)
           Atom basemotion(#q24, #o0, #q24)
           Atom basemotion(#q24, #o0, v3)
           Atom basemotion(v3, #o0, #q24)
           Atom basemotion(#q22, #o0, #q24)
           Atom basemotion(#q22, #o0, v3)
           Atom btraj(#t91)
           Atom basemotion(v3, #t91, #q22)
           Atom basemotion(#q24, #o0, #q22)
           Atom basemotion(#q22, #o0, #q22)
           Atom basemotion(#q27, #o0, #q22)
           Atom basemotion(#q27, #o0, #q27)
           Atom basemotion(#q27, #o0, #q24)
           Atom basemotion(#q27, #o0, v3)
           Atom basemotion(#q22, #o0, #q27)
           Atom basemotion(#q24, #o0, #q27)
           Atom basemotion(v3, #o0, #q27)
           Atom basemotion(#q23, #o0, #q22)
           Atom basemotion(#q23, #o0, #q23)
           Atom basemotion(#q23, #o0, v3)
           Atom basemotion(#q23, #o0, #q27)
           Atom basemotion(v3, #o0, #q23)
           Atom basemotion(#q22, #o0, #q23)
           Atom basemotion(#q23, #o0, #q24)
           Atom basemotion(#q24, #o0, #q23)
           Atom basemotion(#q27, #o0, #q23)
           Atom basemotion(#q21, #o0, #q22)
           Atom basemotion(#q21, #o0, #q27)
           Atom btraj(#t90)
           Atom basemotion(v3, #t90, #q21)
           Atom basemotion(#q21, #o0, v3)
           Atom basemotion(#q21, #o0, #q23)
           Atom basemotion(#q24, #o0, #q21)
           Atom basemotion(#q21, #o0, #q24)
           Atom basemotion(#q21, #o0, #q21)
           Atom basemotion(#q23, #o0, #q21)
           Atom basemotion(#q22, #o0, #q21)
           Atom basemotion(#q27, #o0, #q21)
           Atom basemotion(#q22, #o0, #q20)
           Atom basemotion(#q20, #o0, #q24)
           Atom basemotion(#q27, #o0, #q20)
           Atom basemotion(#q21, #o0, #q20)
           Atom basemotion(#q20, #o0, #q21)
           Atom basemotion(#q23, #o0, #q20)
           Atom basemotion(#q24, #o0, #q20)
           Atom basemotion(#q20, #o0, #q20)
           Atom basemotion(#q20, #o0, #q23)
           Atom basemotion(#q20, #o0, #q27)
           Atom basemotion(#q20, #o0, v3)
           Atom basemotion(#q20, #o0, #q22)
           Atom btraj(#t89)
           Atom basemotion(v3, #t89, #q20)
           Atom basemotion(#q26, #o0, #q20)
           Atom basemotion(#q20, #o0, #q26)
           Atom basemotion(#q26, #o0, #q27)
           Atom basemotion(#q26, #o0, #q22)
           Atom basemotion(#q26, #o0, #q26)
           Atom basemotion(#q26, #o0, #q24)
           Atom basemotion(#q26, #o0, v3)
           Atom basemotion(#q22, #o0, #q26)
           Atom basemotion(#q23, #o0, #q26)
           Atom basemotion(#q26, #o0, #q21)
           Atom basemotion(v3, #o0, #q26)
           Atom basemotion(#q21, #o0, #q26)
           Atom basemotion(#q26, #o0, #q23)
           Atom basemotion(#q24, #o0, #q26)
           Atom basemotion(#q27, #o0, #q26)
           Atom basemotion(#q22, #o0, #q25)
           Atom basemotion(#q25, #o0, #q20)
           Atom basemotion(#q25, #o0, #q24)
           Atom basemotion(#q25, #o0, #q22)
           Atom basemotion(#q24, #o0, #q25)
           Atom basemotion(#q25, #o0, v3)
           Atom basemotion(#q27, #o0, #q25)
           Atom basemotion(#q25, #o0, #q27)
           Atom basemotion(#q20, #o0, #q25)
           Atom basemotion(#q25, #o0, #q23)
           Atom basemotion(#q21, #o0, #q25)
           Atom basemotion(#q25, #o0, #q25)
           Atom basemotion(#q23, #o0, #q25)
           Atom basemotion(#q25, #o0, #q21)
           Atom basemotion(#q25, #o0, #q26)
           Atom basemotion(v3, #o0, #q25)
           Atom basemotion(#q26, #o0, #q25)
           Atom kin(v4, v16, #o2, v64, #o3, #o4)
           Atom kin(v4, v16, #o2, v63, #o3, #o4)
           Atom basemotion(#q20, #o0, #o3)
           Atom basemotion(#q25, #o0, #o3)
           Atom basemotion(#o3, #o0, #q23)
           Atom basemotion(#q23, #o0, #o3)
           Atom basemotion(#q27, #o0, #o3)
           Atom basemotion(#q24, #o0, #o3)
           Atom basemotion(#q21, #o0, #o3)
           Atom basemotion(#o3, #o0, #q27)
           Atom basemotion(#q22, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q22)
           Atom basemotion(#o3, #o0, #q25)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q21)
           Atom basemotion(#o3, #o0, #q24)
           Atom basemotion(#q26, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q26)
           Atom basemotion(#o3, #o0, #q20)
           Atom kin(v4, v14, #o2, v65, #o3, #o4)
           Atom kin(v4, v14, #o2, v66, #o3, #o4)
           Atom kin(v4, v8, #o2, v69, #o3, #o4)
           Atom kin(v4, v8, #o2, v70, #o3, #o4)
           Atom kin(v4, v12, #o2, v68, #o3, #o4)
           Atom kin(v4, v12, #o2, v67, #o3, #o4)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q20 #o0))
           ((move_base #o3 #q21 #o0))
           ((move_base #o3 #q22 #o0))
           ((move_base #o3 #q23 #o0))
           ((move_base #o3 #q24 #o0))
           ((move_base #o3 #q25 #o0))
           ((move_base #o3 #q26 #o0))
           ((move_base #o3 #q27 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q20 #o3 #o0))
           ((move_base #q20 #q20 #o0))
           ((move_base #q20 #q21 #o0))
           ((move_base #q20 #q22 #o0))
           ((move_base #q20 #q23 #o0))
           ((move_base #q20 #q24 #o0))
           ((move_base #q20 #q25 #o0))
           ((move_base #q20 #q26 #o0))
           ((move_base #q20 #q27 #o0))
           ((move_base #q20 v3 #o0))
           ((move_base #q21 #o3 #o0))
           ((move_base #q21 #q20 #o0))
           ((move_base #q21 #q21 #o0))
           ((move_base #q21 #q22 #o0))
           ((move_base #q21 #q23 #o0))
           ((move_base #q21 #q24 #o0))
           ((move_base #q21 #q25 #o0))
           ((move_base #q21 #q26 #o0))
           ((move_base #q21 #q27 #o0))
           ((move_base #q21 v3 #o0))
           ((move_base #q22 #o3 #o0))
           ((move_base #q22 #q20 #o0))
           ((move_base #q22 #q21 #o0))
           ((move_base #q22 #q22 #o0))
           ((move_base #q22 #q23 #o0))
           ((move_base #q22 #q24 #o0))
           ((move_base #q22 #q25 #o0))
           ((move_base #q22 #q26 #o0))
           ((move_base #q22 #q27 #o0))
           ((move_base #q22 v3 #o0))
           ((move_base #q23 #o3 #o0))
           ((move_base #q23 #q20 #o0))
           ((move_base #q23 #q21 #o0))
           ((move_base #q23 #q22 #o0))
           ((move_base #q23 #q23 #o0))
           ((move_base #q23 #q24 #o0))
           ((move_base #q23 #q25 #o0))
           ((move_base #q23 #q26 #o0))
           ((move_base #q23 #q27 #o0))
           ((move_base #q23 v3 #o0))
           ((move_base #q24 #o3 #o0))
           ((move_base #q24 #q20 #o0))
           ((move_base #q24 #q21 #o0))
           ((move_base #q24 #q22 #o0))
           ((move_base #q24 #q23 #o0))
           ((move_base #q24 #q24 #o0))
           ((move_base #q24 #q25 #o0))
           ((move_base #q24 #q26 #o0))
           ((move_base #q24 #q27 #o0))
           ((move_base #q24 v3 #o0))
           ((move_base #q25 #o3 #o0))
           ((move_base #q25 #q20 #o0))
           ((move_base #q25 #q21 #o0))
           ((move_base #q25 #q22 #o0))
           ((move_base #q25 #q23 #o0))
           ((move_base #q25 #q24 #o0))
           ((move_base #q25 #q25 #o0))
           ((move_base #q25 #q26 #o0))
           ((move_base #q25 #q27 #o0))
           ((move_base #q25 v3 #o0))
           ((move_base #q26 #o3 #o0))
           ((move_base #q26 #q20 #o0))
           ((move_base #q26 #q21 #o0))
           ((move_base #q26 #q22 #o0))
           ((move_base #q26 #q23 #o0))
           ((move_base #q26 #q24 #o0))
           ((move_base #q26 #q25 #o0))
           ((move_base #q26 #q26 #o0))
           ((move_base #q26 #q27 #o0))
           ((move_base #q26 v3 #o0))
           ((move_base #q27 #o3 #o0))
           ((move_base #q27 #q20 #o0))
           ((move_base #q27 #q21 #o0))
           ((move_base #q27 #q22 #o0))
           ((move_base #q27 #q23 #o0))
           ((move_base #q27 #q24 #o0))
           ((move_base #q27 #q25 #o0))
           ((move_base #q27 #q26 #o0))
           ((move_base #q27 #q27 #o0))
           ((move_base #q27 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q23 #o0))
           ((move_base v3 #q24 #o0))
           ((move_base v3 #q25 #o0))
           ((move_base v3 #q26 #o0))
           ((move_base v3 #q27 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q20 #t89))
           ((move_base v3 #q21 #t90))
           ((move_base v3 #q22 #t91))
           ((pick v4 v12 #o2 v67 #o3 #o4))
           ((place v4 v12 #o2 v67 #o3 #o4))
           ((pick v4 v12 #o2 v68 #o3 #o4))
           ((place v4 v12 #o2 v68 #o3 #o4))
           ((pick v4 v12 p10 v67 #o3 #o4))
           ((place v4 v12 p10 v67 #o3 #o4))
           ((pick v4 v12 p10 v68 #o3 #o4))
           ((place v4 v12 p10 v68 #o3 #o4))
           ((pick v4 v12 p17 v67 #o3 #o4))
           ((place v4 v12 p17 v67 #o3 #o4))
           ((pick v4 v12 p17 v68 #o3 #o4))
           ((place v4 v12 p17 v68 #o3 #o4))
           ((pick v4 v12 p21 v67 #o3 #o4))
           ((place v4 v12 p21 v67 #o3 #o4))
           ((pick v4 v12 p21 v68 #o3 #o4))
           ((place v4 v12 p21 v68 #o3 #o4))
           ((pick v4 v12 p25 v67 #o3 #o4))
           ((place v4 v12 p25 v67 #o3 #o4))
           ((pick v4 v12 p25 v68 #o3 #o4))
           ((place v4 v12 p25 v68 #o3 #o4))
           ((pick v4 v12 p33 v67 #o3 #o4))
           ((place v4 v12 p33 v67 #o3 #o4))
           ((pick v4 v12 p33 v68 #o3 #o4))
           ((place v4 v12 p33 v68 #o3 #o4))
           ((pick v4 v12 p37 v67 #q25 #t94))
           ((place v4 v12 p37 v67 #q25 #t94))
           ((pick v4 v12 p37 v68 #o3 #o4))
           ((place v4 v12 p37 v68 #o3 #o4))
           ((pick v4 v12 p6 v67 #o3 #o4))
           ((place v4 v12 p6 v67 #o3 #o4))
           ((pick v4 v12 p6 v68 #o3 #o4))
           ((place v4 v12 p6 v68 #o3 #o4))
           ((pick v4 v12 v13 v67 #q21 #t87))
           ((place v4 v12 v13 v67 #q21 #t87))
           ((pick v4 v12 v13 v68 #o3 #o4))
           ((place v4 v12 v13 v68 #o3 #o4))
           ((pick v4 v14 #o2 v65 #o3 #o4))
           ((place v4 v14 #o2 v65 #o3 #o4))
           ((pick v4 v14 #o2 v66 #o3 #o4))
           ((place v4 v14 #o2 v66 #o3 #o4))
           ((pick v4 v14 p19 v65 #o3 #o4))
           ((place v4 v14 p19 v65 #o3 #o4))
           ((pick v4 v14 p19 v66 #o3 #o4))
           ((place v4 v14 p19 v66 #o3 #o4))
           ((pick v4 v14 p23 v65 #o3 #o4))
           ((place v4 v14 p23 v65 #o3 #o4))
           ((pick v4 v14 p23 v66 #o3 #o4))
           ((place v4 v14 p23 v66 #o3 #o4))
           ((pick v4 v14 p26 v65 #o3 #o4))
           ((place v4 v14 p26 v65 #o3 #o4))
           ((pick v4 v14 p26 v66 #o3 #o4))
           ((place v4 v14 p26 v66 #o3 #o4))
           ((pick v4 v14 p34 v65 #o3 #o4))
           ((place v4 v14 p34 v65 #o3 #o4))
           ((pick v4 v14 p34 v66 #o3 #o4))
           ((place v4 v14 p34 v66 #o3 #o4))
           ((pick v4 v14 p38 v65 #o3 #o4))
           ((place v4 v14 p38 v65 #o3 #o4))
           ((pick v4 v14 p38 v66 #q23 #t92))
           ((place v4 v14 p38 v66 #q23 #t92))
           ((pick v4 v14 p5 v65 #o3 #o4))
           ((place v4 v14 p5 v65 #o3 #o4))
           ((pick v4 v14 p5 v66 #o3 #o4))
           ((place v4 v14 p5 v66 #o3 #o4))
           ((pick v4 v14 p9 v65 #o3 #o4))
           ((place v4 v14 p9 v65 #o3 #o4))
           ((pick v4 v14 p9 v66 #o3 #o4))
           ((place v4 v14 p9 v66 #o3 #o4))
           ((pick v4 v14 v15 v65 #o3 #o4))
           ((place v4 v14 v15 v65 #o3 #o4))
           ((pick v4 v14 v15 v66 #q27 #t96))
           ((place v4 v14 v15 v66 #q27 #t96))
           ((pick v4 v16 #o2 v63 #o3 #o4))
           ((place v4 v16 #o2 v63 #o3 #o4))
           ((pick v4 v16 #o2 v64 #o3 #o4))
           ((place v4 v16 #o2 v64 #o3 #o4))
           ((pick v4 v16 p16 v63 #o3 #o4))
           ((place v4 v16 p16 v63 #o3 #o4))
           ((pick v4 v16 p16 v64 #o3 #o4))
           ((place v4 v16 p16 v64 #o3 #o4))
           ((pick v4 v16 p20 v63 #o3 #o4))
           ((place v4 v16 p20 v63 #o3 #o4))
           ((pick v4 v16 p20 v64 #o3 #o4))
           ((place v4 v16 p20 v64 #o3 #o4))
           ((pick v4 v16 p27 v63 #o3 #o4))
           ((place v4 v16 p27 v63 #o3 #o4))
           ((pick v4 v16 p27 v64 #o3 #o4))
           ((place v4 v16 p27 v64 #o3 #o4))
           ((pick v4 v16 p35 v63 #o3 #o4))
           ((place v4 v16 p35 v63 #o3 #o4))
           ((pick v4 v16 p35 v64 #o3 #o4))
           ((place v4 v16 p35 v64 #o3 #o4))
           ((pick v4 v16 p39 v63 #q22 #t88))
           ((place v4 v16 p39 v63 #q22 #t88))
           ((pick v4 v16 p39 v64 #o3 #o4))
           ((place v4 v16 p39 v64 #o3 #o4))
           ((pick v4 v16 p4 v63 #o3 #o4))
           ((place v4 v16 p4 v63 #o3 #o4))
           ((pick v4 v16 p4 v64 #o3 #o4))
           ((place v4 v16 p4 v64 #o3 #o4))
           ((pick v4 v16 p8 v63 #o3 #o4))
           ((place v4 v16 p8 v63 #o3 #o4))
           ((pick v4 v16 p8 v64 #o3 #o4))
           ((place v4 v16 p8 v64 #o3 #o4))
           ((pick v4 v16 v17 v63 #q24 #t93))
           ((place v4 v16 v17 v63 #q24 #t93))
           ((pick v4 v16 v17 v64 #o3 #o4))
           ((place v4 v16 v17 v64 #o3 #o4))
           ((pick v4 v8 #o2 v69 #o3 #o4))
           ((place v4 v8 #o2 v69 #o3 #o4))
           ((pick v4 v8 #o2 v70 #o3 #o4))
           ((place v4 v8 #o2 v70 #o3 #o4))
           ((pick v4 v8 p11 v69 #o3 #o4))
           ((place v4 v8 p11 v69 #o3 #o4))
           ((pick v4 v8 p11 v70 #o3 #o4))
           ((place v4 v8 p11 v70 #o3 #o4))
           ((pick v4 v8 p18 v69 #o3 #o4))
           ((place v4 v8 p18 v69 #o3 #o4))
           ((pick v4 v8 p18 v70 #o3 #o4))
           ((place v4 v8 p18 v70 #o3 #o4))
           ((pick v4 v8 p22 v69 #o3 #o4))
           ((place v4 v8 p22 v69 #o3 #o4))
           ((pick v4 v8 p22 v70 #o3 #o4))
           ((place v4 v8 p22 v70 #o3 #o4))
           ((pick v4 v8 p24 v69 #o3 #o4))
           ((place v4 v8 p24 v69 #o3 #o4))
           ((pick v4 v8 p24 v70 #o3 #o4))
           ((place v4 v8 p24 v70 #o3 #o4))
           ((pick v4 v8 p32 v69 #o3 #o4))
           ((place v4 v8 p32 v69 #o3 #o4))
           ((pick v4 v8 p32 v70 #o3 #o4))
           ((place v4 v8 p32 v70 #o3 #o4))
           ((pick v4 v8 p36 v69 #o3 #o4))
           ((place v4 v8 p36 v69 #o3 #o4))
           ((pick v4 v8 p36 v70 #q26 #t95))
           ((place v4 v8 p36 v70 #q26 #t95))
           ((pick v4 v8 p7 v69 #o3 #o4))
           ((place v4 v8 p7 v69 #o3 #o4))
           ((pick v4 v8 p7 v70 #o3 #o4))
           ((place v4 v8 p7 v70 #o3 #o4))
           ((pick v4 v8 v9 v69 #o3 #o4))
           ((place v4 v8 v9 v69 #o3 #o4))
           ((pick v4 v8 v9 v70 #q20 #t86))
           ((place v4 v8 v9 v70 #q20 #t86))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects of type `object` and various continuous parameters for poses, grasps, base configurations, and trajectories. The robot has two arms, `v4` and `v6`, but only `v4` is controllable and `handempty`. The base is at `v3`.
           There are four objects that need to be placed on `v18`: `v8`, `v12`, `v14`, and `v16`. Currently, `v8` is on `v11` at `v9`, `v12` is on `v11` at `v13`, `v14` is on `v11` at `v15`, and `v16` is on `v11` at `v17`. All target poses for these objects are dummy poses represented by `#o2` on `v18`. Since `#o2` is a dummy pose and there are no specific non-'#' poses on `v18` for each object, I must compute collision-free poses for each object on `v18`.
           I will pick each object from its initial location and place it on a new computed pose on `v18`.
           
           --Plan--:
           (pick v4 v8 v9 v70 #q20 #t86)
           (move_base #q20 #o3 #o0)
           (place v4 v8 #o2 v70 #o3 #o4)
           (pick v4 v12 v13 v67 #q21 #t87)
           (move_base #q21 #o3 #o0)
           (place v4 v12 #o2 v67 #o3 #o4)
           (pick v4 v14 v15 v66 #q27 #t96)
           (move_base #q27 #o3 #o0)
           (place v4 v14 #o2 v66 #o3 #o4)
           (pick v4 v16 v17 v63 #q24 #t93)
           (move_base #q24 #o3 #o0)
           (place v4 v16 #o2 v63 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v18): (0.1 0.1 0.782 0.0)
           (#o2 v12 v18): (0.1 -0.1 0.782 0.0)
           (#o2 v14 v18): (-0.1 0.1 0.782 0.0)
           (#o2 v16 v18): (-0.1 -0.1 0.782 0.0)

User:      Pose #o2 = (0.1 0.1 0.782 0.0) for object v8 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(0.06500000149011612, 0.06500000149011612), upper=(0.13500000149011612, 0.13500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.1 -0.1 0.782 0.0) for object v12 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(0.06500000149011612, -0.13500000149011612), upper=(0.13500000149011612, -0.06500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (-0.1 0.1 0.782 0.0) for object v14 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(-0.13500000149011612, 0.06500000149011612), upper=(-0.06500000149011612, 0.13500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (-0.1 -0.1 0.782 0.0) for object v16 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(-0.13500000149011612, -0.13500000149011612), upper=(-0.06500000149011612, -0.06500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The scene contains several objects of type `object` and various continuous parameters for poses, grasps, base configurations, and trajectories. The robot has two arms, `v4` and `v6`, but only `v4` is controllable and `handempty`. The base is at `v3`.
           There are four objects that need to be placed on `v18`: `v8`, `v12`, `v14`, and `v16`. Currently, `v8` is on `v11` at `v9`, `v12` is on `v11` at `v13`, `v14` is on `v11` at `v15`, and `v16` is on `v11` at `v17`. All target poses for these objects are dummy poses represented by `#o2` on `v18`. Since `#o2` is a dummy pose and there are no specific non-'#' poses on `v18` for each object, I must compute collision-free poses for each object on `v18`.
           I will pick each object from its initial location and place it on a new computed pose on `v18`. I will ensure the AABBs of the objects are fully contained within the AABB of the surface `v18`.
           
           --Plan--:
           (pick v4 v8 v9 v70 #q20 #t86)
           (move_base #q20 #o3 #o0)
           (place v4 v8 #o2 v70 #o3 #o4)
           (pick v4 v12 v13 v67 #q21 #t87)
           (move_base #q21 #o3 #o0)
           (place v4 v12 #o2 v67 #o3 #o4)
           (pick v4 v14 v15 v66 #q27 #t96)
           (move_base #q27 #o3 #o0)
           (place v4 v14 #o2 v66 #o3 #o4)
           (pick v4 v16 v17 v63 #q24 #t93)
           (move_base #q24 #o3 #o0)
           (place v4 v16 #o2 v63 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v18): (0.0 0.0 0.782 0.0)
           (#o2 v12 v18): (0.0 0.08 0.782 0.0)
           (#o2 v14 v18): (0.0 -0.08 0.782 0.0)
           (#o2 v16 v18): (0.0 0.0 0.782 1.5708)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q21) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The scene contains several objects of type `object` and various continuous parameters for poses, grasps, base configurations, and trajectories. The robot has two arms, `v4` and `v6`, but only `v4` is controllable and `handempty`. The base is at `v3`.
           There are four objects that need to be placed on `v18`: `v8`, `v12`, `v14`, and `v16`. Currently, `v8` is on `v11` at `v9`, `v12` is on `v11` at `v13`, `v14` is on `v11` at `v15`, and `v16` is on `v11` at `v17`. All target poses for these objects are dummy poses represented by `#o2` on `v18`. Since `#o2` is a dummy pose and there are no specific non-'#' poses on `v18` for each object, I must compute collision-free poses for each object on `v18`.
           I will pick each object from its initial location and place it on a new computed pose on `v18`. I will ensure the AABBs of the objects are fully contained within the AABB of the surface `v18`. I also need to ensure that the `atbconf` precondition is met for each pick and place action by adding `move_base` actions when necessary.
           
           --Plan--:
           (pick v4 v8 v9 v70 #q20 #t86)
           (move_base #q20 #o3 #o0)
           (place v4 v8 #o2 v70 #o3 #o4)
           (move_base #o3 #q21 #o0)
           (pick v4 v12 v13 v67 #q21 #t87)
           (move_base #q21 #o3 #o0)
           (place v4 v12 #o2 v67 #o3 #o4)
           (move_base #o3 #q27 #o0)
           (pick v4 v14 v15 v66 #q27 #t96)
           (move_base #q27 #o3 #o0)
           (place v4 v14 #o2 v66 #o3 #o4)
           (move_base #o3 #q24 #o0)
           (pick v4 v16 v17 v63 #q24 #t93)
           (move_base #q24 #o3 #o0)
           (place v4 v16 #o2 v63 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v18): (0.0 0.0 0.782 0.0)
           (#o2 v12 v18): (0.0 0.08 0.782 0.0)
           (#o2 v14 v18): (0.0 -0.08 0.782 0.0)
           (#o2 v16 v18): (0.0 0.0 0.782 1.5708)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', #q20) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The scene contains several objects of type `object` and various continuous parameters for poses, grasps, base configurations, and trajectories. The robot has two arms, `v4` and `v6`, but only `v4` is controllable and `handempty`. The base is at `v3`.
           There are four objects that need to be placed on `v18`: `v8`, `v12`, `v14`, and `v16`. Currently, `v8` is on `v11` at `v9`, `v12` is on `v11` at `v13`, `v14` is on `v11` at `v15`, and `v16` is on `v11` at `v17`. All target poses for these objects are dummy poses represented by `#o2` on `v18`. Since `#o2` is a dummy pose and there are no specific non-'#' poses on `v18` for each object, I must compute collision-free poses for each object on `v18`.
           I will pick each object from its initial location and place it on a new computed pose on `v18`. I will ensure the AABBs of the objects are fully contained within the AABB of the surface `v18`. I also need to ensure that the `atbconf` precondition is met for each pick and place action by adding `move_base` actions when necessary, starting from the initial base configuration `v3`.
           
           --Plan--:
           (move_base v3 #q20 #t89)
           (pick v4 v8 v9 v70 #q20 #t86)
           (move_base #q20 #o3 #o0)
           (place v4 v8 #o2 v70 #o3 #o4)
           (move_base #o3 #q21 #o0)
           (pick v4 v12 v13 v67 #q21 #t87)
           (move_base #q21 #o3 #o0)
           (place v4 v12 #o2 v67 #o3 #o4)
           (move_base #o3 #q27 #o0)
           (pick v4 v14 v15 v66 #q27 #t96)
           (move_base #q27 #o3 #o0)
           (place v4 v14 #o2 v66 #o3 #o4)
           (move_base #o3 #q24 #o0)
           (pick v4 v16 v17 v63 #q24 #t93)
           (move_base #q24 #o3 #o0)
           (place v4 v16 #o2 v63 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v18): (0.0 0.0 0.782 0.0)
           (#o2 v12 v18): (0.0 0.08 0.782 0.0)
           (#o2 v14 v18): (0.0 -0.08 0.782 0.0)
           (#o2 v16 v18): (0.0 0.0 0.782 1.5708)

