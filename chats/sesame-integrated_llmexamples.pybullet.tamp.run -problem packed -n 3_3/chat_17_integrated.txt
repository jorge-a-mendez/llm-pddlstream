User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g12: object
           #g13: object
           #g14: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p1: object
           #q30: object
           #q31: object
           #q32: object
           #q33: object
           #q34: object
           #q35: object
           #q36: object
           #q37: object
           #q38: object
           #q39: object
           #t100: object
           #t101: object
           #t102: object
           #t103: object
           #t104: object
           #t105: object
           #t106: object
           #t107: object
           #t108: object
           #t109: object
           #t110: object
           #t111: object
           #t112: object
           #t113: object
           #t114: object
           #t115: object
           #t83: object
           #t84: object
           #t85: object
           #t86: object
           #t87: object
           #t88: object
           #t89: object
           #t90: object
           #t91: object
           #t92: object
           #t93: object
           #t94: object
           #t95: object
           #t96: object
           #t97: object
           #t98: object
           #t99: object
           @sink: object
           @stove: object
           p10: object
           p11: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.163, -0.352), (-0.067, -0.256)).
           Object p10 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.115, -0.304, 0.781) and quaternion (0.0, 0.0, -0.275, 0.962).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.085), (-0.015, -0.015)).
           Object v15 is a pose with position (0.232, -0.264, 0.781) and quaternion (0.0, 0.0, -0.21, 0.978).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p7 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (-0.01, -0.557, 0.781) and quaternion (0.0, 0.0, 0.621, 0.784).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p6)
           Atom supported(v8, p6, v16)
           Atom pose(v14, p8)
           Atom supported(v14, p8, v10)
           Atom supported(v14, p8, v16)
           Atom pose(v12, p7)
           Atom supported(v12, p7, v16)
           Atom supported(v12, p7, v10)
           Atom supported(v8, p6, v10)
           Atom kin(v32, v37, p7, v34, v35, v36)
           Atom kin(v32, v38, p8, v34, v35, v36)
           Atom kin(v32, v33, p6, v34, v35, v36)
           Atom pose(v8, p9)
           Atom supported(v8, p9, v16)
           Atom pose(v12, p10)
           Atom supported(v12, p10, v16)
           Atom supported(v8, p9, v10)
           Atom pose(v14, p11)
           Atom supported(v14, p11, v16)
           Atom supported(v14, p11, v10)
           Atom supported(v12, p10, v10)
           Atom kin(v32, v33, p9, v34, v35, v36)
           Atom kin(v32, v37, p10, v34, v35, v36)
           Atom kin(v32, v38, p11, v34, v35, v36)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g12)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g13)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g14)
           Atom bconf(#q30)
           Atom atraj(#t83)
           Atom kin(v4, v14, p8, #g12, #q30, #t83)
           Atom bconf(#q35)
           Atom atraj(#t90)
           Atom kin(v4, v14, v15, #g12, #q35, #t90)
           Atom bconf(#q38)
           Atom atraj(#t95)
           Atom kin(v4, v14, p11, #g12, #q38, #t95)
           Atom bconf(#q34)
           Atom atraj(#t89)
           Atom kin(v4, v8, p6, #g14, #q34, #t89)
           Atom bconf(#q32)
           Atom atraj(#t87)
           Atom kin(v4, v8, v9, #g14, #q32, #t87)
           Atom bconf(#q37)
           Atom atraj(#t94)
           Atom kin(v4, v8, p9, #g14, #q37, #t94)
           Atom bconf(#q39)
           Atom atraj(#t113)
           Atom kin(v4, v8, #p1, #g14, #q39, #t113)
           Atom bconf(#q31)
           Atom atraj(#t84)
           Atom kin(v4, v12, v13, #g13, #q31, #t84)
           Atom bconf(#q33)
           Atom atraj(#t88)
           Atom kin(v4, v12, p7, #g13, #q33, #t88)
           Atom bconf(#q36)
           Atom atraj(#t91)
           Atom kin(v4, v12, p10, #g13, #q36, #t91)
           Atom basemotion(#q30, #o0, v3)
           Atom basemotion(#q30, #o0, #q30)
           Atom btraj(#t85)
           Atom basemotion(v3, #t85, #q30)
           Atom basemotion(#q32, #o0, v3)
           Atom basemotion(#q32, #o0, #q32)
           Atom btraj(#t93)
           Atom basemotion(v3, #t93, #q32)
           Atom basemotion(#q30, #o0, #q32)
           Atom basemotion(#q32, #o0, #q30)
           Atom basemotion(#q37, #o0, #q32)
           Atom basemotion(#q37, #o0, v3)
           Atom basemotion(#q37, #o0, #q37)
           Atom btraj(#t97)
           Atom basemotion(#q32, #t97, #q37)
           Atom basemotion(v3, #o0, #q37)
           Atom basemotion(#q30, #o0, #q37)
           Atom basemotion(#q37, #o0, #q30)
           Atom basemotion(#q34, #o0, v3)
           Atom basemotion(#q34, #o0, #q34)
           Atom basemotion(v3, #o0, #q34)
           Atom btraj(#t110)
           Atom basemotion(#q32, #t110, #q34)
           Atom basemotion(#q34, #o0, #q32)
           Atom basemotion(#q37, #o0, #q34)
           Atom basemotion(#q34, #o0, #q37)
           Atom basemotion(#q30, #o0, #q34)
           Atom basemotion(#q34, #o0, #q30)
           Atom btraj(#t109)
           Atom basemotion(#q35, #t109, #q30)
           Atom basemotion(#q35, #o0, #q32)
           Atom btraj(#t106)
           Atom basemotion(#q35, #t106, #q37)
           Atom basemotion(#q35, #o0, #q34)
           Atom basemotion(#q35, #o0, v3)
           Atom basemotion(#q30, #o0, #q35)
           Atom basemotion(#q32, #o0, #q35)
           Atom btraj(#t103)
           Atom basemotion(#q37, #t103, #q35)
           Atom basemotion(#q35, #o0, #q35)
           Atom basemotion(#q34, #o0, #q35)
           Atom basemotion(v3, #o0, #q35)
           Atom basemotion(#q38, #o0, #q30)
           Atom basemotion(#q38, #o0, #q32)
           Atom basemotion(#q38, #o0, #q37)
           Atom btraj(#t104)
           Atom basemotion(#q38, #t104, #q35)
           Atom basemotion(#q38, #o0, #q34)
           Atom basemotion(#q38, #o0, v3)
           Atom basemotion(#q30, #o0, #q38)
           Atom btraj(#t98)
           Atom basemotion(#q32, #t98, #q38)
           Atom basemotion(#q37, #o0, #q38)
           Atom btraj(#t107)
           Atom basemotion(#q35, #t107, #q38)
           Atom basemotion(#q38, #o0, #q38)
           Atom basemotion(#q34, #o0, #q38)
           Atom basemotion(v3, #o0, #q38)
           Atom basemotion(#q36, #o0, #q32)
           Atom basemotion(#q36, #o0, #q37)
           Atom basemotion(#q36, #o0, #q34)
           Atom basemotion(#q36, #o0, v3)
           Atom btraj(#t96)
           Atom basemotion(#q32, #t96, #q36)
           Atom basemotion(#q37, #o0, #q36)
           Atom basemotion(#q34, #o0, #q36)
           Atom basemotion(#q36, #o0, #q36)
           Atom basemotion(v3, #o0, #q36)
           Atom basemotion(#q30, #o0, #q36)
           Atom basemotion(#q36, #o0, #q30)
           Atom btraj(#t105)
           Atom basemotion(#q35, #t105, #q36)
           Atom btraj(#t102)
           Atom basemotion(#q36, #t102, #q35)
           Atom basemotion(#q38, #o0, #q36)
           Atom basemotion(#q36, #o0, #q38)
           Atom basemotion(#q33, #o0, #q32)
           Atom basemotion(#q33, #o0, #q37)
           Atom basemotion(#q33, #o0, #q34)
           Atom basemotion(#q33, #o0, v3)
           Atom basemotion(#q33, #o0, #q33)
           Atom basemotion(#q32, #o0, #q33)
           Atom basemotion(#q37, #o0, #q33)
           Atom basemotion(#q34, #o0, #q33)
           Atom basemotion(v3, #o0, #q33)
           Atom basemotion(#q36, #o0, #q33)
           Atom basemotion(#q33, #o0, #q36)
           Atom basemotion(#q30, #o0, #q33)
           Atom basemotion(#q33, #o0, #q30)
           Atom basemotion(#q35, #o0, #q33)
           Atom btraj(#t108)
           Atom basemotion(#q33, #t108, #q35)
           Atom basemotion(#q38, #o0, #q33)
           Atom basemotion(#q33, #o0, #q38)
           Atom basemotion(#q31, #o0, #q32)
           Atom basemotion(#q31, #o0, #q37)
           Atom basemotion(#q31, #o0, #q34)
           Atom basemotion(#q31, #o0, v3)
           Atom basemotion(#q31, #o0, #q31)
           Atom basemotion(#q32, #o0, #q31)
           Atom btraj(#t100)
           Atom basemotion(#q37, #t100, #q31)
           Atom btraj(#t112)
           Atom basemotion(#q34, #t112, #q31)
           Atom btraj(#t86)
           Atom basemotion(v3, #t86, #q31)
           Atom basemotion(#q33, #o0, #q31)
           Atom btraj(#t111)
           Atom basemotion(#q31, #t111, #q33)
           Atom btraj(#t99)
           Atom basemotion(#q36, #t99, #q31)
           Atom btraj(#t92)
           Atom basemotion(#q31, #t92, #q36)
           Atom basemotion(#q30, #o0, #q31)
           Atom basemotion(#q31, #o0, #q30)
           Atom basemotion(#q35, #o0, #q31)
           Atom basemotion(#q31, #o0, #q35)
           Atom btraj(#t101)
           Atom basemotion(#q38, #t101, #q31)
           Atom basemotion(#q31, #o0, #q38)
           Atom basemotion(#q39, #o0, #q33)
           Atom basemotion(#q39, #o0, #q30)
           Atom btraj(#t114)
           Atom basemotion(#q39, #t114, #q31)
           Atom basemotion(#q39, #o0, #q32)
           Atom basemotion(#q39, #o0, #q37)
           Atom basemotion(#q39, #o0, #q35)
           Atom basemotion(#q39, #o0, #q38)
           Atom basemotion(#q39, #o0, #q34)
           Atom basemotion(#q39, #o0, #q36)
           Atom basemotion(#q39, #o0, v3)
           Atom basemotion(#q33, #o0, #q39)
           Atom basemotion(#q30, #o0, #q39)
           Atom basemotion(#q31, #o0, #q39)
           Atom btraj(#t115)
           Atom basemotion(#q32, #t115, #q39)
           Atom basemotion(#q37, #o0, #q39)
           Atom basemotion(#q35, #o0, #q39)
           Atom basemotion(#q38, #o0, #q39)
           Atom basemotion(#q39, #o0, #q39)
           Atom basemotion(#q34, #o0, #q39)
           Atom basemotion(#q36, #o0, #q39)
           Atom basemotion(v3, #o0, #q39)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g14, #o3, #o4)
           Atom kin(v4, v12, #o2, #g13, #o3, #o4)
           Atom kin(v4, v14, #o2, #g12, #o3, #o4)
           Atom basemotion(#o3, #o0, #q37)
           Atom basemotion(#o3, #o0, #q34)
           Atom basemotion(#o3, #o0, #q32)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q32, #o0, #o3)
           Atom basemotion(#q37, #o0, #o3)
           Atom basemotion(#q34, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q31, #o0, #o3)
           Atom basemotion(#o3, #o0, #q31)
           Atom basemotion(#q33, #o0, #o3)
           Atom basemotion(#o3, #o0, #q33)
           Atom basemotion(#q36, #o0, #o3)
           Atom basemotion(#o3, #o0, #q36)
           Atom basemotion(#q30, #o0, #o3)
           Atom basemotion(#o3, #o0, #q30)
           Atom basemotion(#q35, #o0, #o3)
           Atom basemotion(#o3, #o0, #q35)
           Atom basemotion(#q38, #o0, #o3)
           Atom basemotion(#o3, #o0, #q38)
           Atom basemotion(#q39, #o0, #o3)
           Atom basemotion(#o3, #o0, #q39)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q30 #o0))
           ((move_base #o3 #q31 #o0))
           ((move_base #o3 #q32 #o0))
           ((move_base #o3 #q33 #o0))
           ((move_base #o3 #q34 #o0))
           ((move_base #o3 #q35 #o0))
           ((move_base #o3 #q36 #o0))
           ((move_base #o3 #q37 #o0))
           ((move_base #o3 #q38 #o0))
           ((move_base #o3 #q39 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q30 #o3 #o0))
           ((move_base #q30 #q30 #o0))
           ((move_base #q30 #q31 #o0))
           ((move_base #q30 #q32 #o0))
           ((move_base #q30 #q33 #o0))
           ((move_base #q30 #q34 #o0))
           ((move_base #q30 #q35 #o0))
           ((move_base #q30 #q36 #o0))
           ((move_base #q30 #q37 #o0))
           ((move_base #q30 #q38 #o0))
           ((move_base #q30 #q39 #o0))
           ((move_base #q30 v3 #o0))
           ((move_base #q31 #o3 #o0))
           ((move_base #q31 #q30 #o0))
           ((move_base #q31 #q31 #o0))
           ((move_base #q31 #q32 #o0))
           ((move_base #q31 #q34 #o0))
           ((move_base #q31 #q35 #o0))
           ((move_base #q31 #q37 #o0))
           ((move_base #q31 #q38 #o0))
           ((move_base #q31 #q39 #o0))
           ((move_base #q31 v3 #o0))
           ((move_base #q31 #q33 #t111))
           ((move_base #q31 #q36 #t92))
           ((move_base #q32 #o3 #o0))
           ((move_base #q32 #q30 #o0))
           ((move_base #q32 #q31 #o0))
           ((move_base #q32 #q32 #o0))
           ((move_base #q32 #q33 #o0))
           ((move_base #q32 #q35 #o0))
           ((move_base #q32 v3 #o0))
           ((move_base #q32 #q34 #t110))
           ((move_base #q32 #q39 #t115))
           ((move_base #q32 #q36 #t96))
           ((move_base #q32 #q37 #t97))
           ((move_base #q32 #q38 #t98))
           ((move_base #q33 #o3 #o0))
           ((move_base #q33 #q30 #o0))
           ((move_base #q33 #q31 #o0))
           ((move_base #q33 #q32 #o0))
           ((move_base #q33 #q33 #o0))
           ((move_base #q33 #q34 #o0))
           ((move_base #q33 #q36 #o0))
           ((move_base #q33 #q37 #o0))
           ((move_base #q33 #q38 #o0))
           ((move_base #q33 #q39 #o0))
           ((move_base #q33 v3 #o0))
           ((move_base #q33 #q35 #t108))
           ((move_base #q34 #o3 #o0))
           ((move_base #q34 #q30 #o0))
           ((move_base #q34 #q32 #o0))
           ((move_base #q34 #q33 #o0))
           ((move_base #q34 #q34 #o0))
           ((move_base #q34 #q35 #o0))
           ((move_base #q34 #q36 #o0))
           ((move_base #q34 #q37 #o0))
           ((move_base #q34 #q38 #o0))
           ((move_base #q34 #q39 #o0))
           ((move_base #q34 v3 #o0))
           ((move_base #q34 #q31 #t112))
           ((move_base #q35 #o3 #o0))
           ((move_base #q35 #q31 #o0))
           ((move_base #q35 #q32 #o0))
           ((move_base #q35 #q33 #o0))
           ((move_base #q35 #q34 #o0))
           ((move_base #q35 #q35 #o0))
           ((move_base #q35 #q39 #o0))
           ((move_base #q35 v3 #o0))
           ((move_base #q35 #q36 #t105))
           ((move_base #q35 #q37 #t106))
           ((move_base #q35 #q38 #t107))
           ((move_base #q35 #q30 #t109))
           ((move_base #q36 #o3 #o0))
           ((move_base #q36 #q30 #o0))
           ((move_base #q36 #q32 #o0))
           ((move_base #q36 #q33 #o0))
           ((move_base #q36 #q34 #o0))
           ((move_base #q36 #q36 #o0))
           ((move_base #q36 #q37 #o0))
           ((move_base #q36 #q38 #o0))
           ((move_base #q36 #q39 #o0))
           ((move_base #q36 v3 #o0))
           ((move_base #q36 #q35 #t102))
           ((move_base #q36 #q31 #t99))
           ((move_base #q37 #o3 #o0))
           ((move_base #q37 #q30 #o0))
           ((move_base #q37 #q32 #o0))
           ((move_base #q37 #q33 #o0))
           ((move_base #q37 #q34 #o0))
           ((move_base #q37 #q36 #o0))
           ((move_base #q37 #q37 #o0))
           ((move_base #q37 #q38 #o0))
           ((move_base #q37 #q39 #o0))
           ((move_base #q37 v3 #o0))
           ((move_base #q37 #q31 #t100))
           ((move_base #q37 #q35 #t103))
           ((move_base #q38 #o3 #o0))
           ((move_base #q38 #q30 #o0))
           ((move_base #q38 #q32 #o0))
           ((move_base #q38 #q33 #o0))
           ((move_base #q38 #q34 #o0))
           ((move_base #q38 #q36 #o0))
           ((move_base #q38 #q37 #o0))
           ((move_base #q38 #q38 #o0))
           ((move_base #q38 #q39 #o0))
           ((move_base #q38 v3 #o0))
           ((move_base #q38 #q31 #t101))
           ((move_base #q38 #q35 #t104))
           ((move_base #q39 #o3 #o0))
           ((move_base #q39 #q30 #o0))
           ((move_base #q39 #q32 #o0))
           ((move_base #q39 #q33 #o0))
           ((move_base #q39 #q34 #o0))
           ((move_base #q39 #q35 #o0))
           ((move_base #q39 #q36 #o0))
           ((move_base #q39 #q37 #o0))
           ((move_base #q39 #q38 #o0))
           ((move_base #q39 #q39 #o0))
           ((move_base #q39 v3 #o0))
           ((move_base #q39 #q31 #t114))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q33 #o0))
           ((move_base v3 #q34 #o0))
           ((move_base v3 #q35 #o0))
           ((move_base v3 #q36 #o0))
           ((move_base v3 #q37 #o0))
           ((move_base v3 #q38 #o0))
           ((move_base v3 #q39 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q30 #t85))
           ((move_base v3 #q31 #t86))
           ((move_base v3 #q32 #t93))
           ((pick v4 v12 #o2 #g13 #o3 #o4))
           ((place v4 v12 #o2 #g13 #o3 #o4))
           ((pick v4 v12 p10 #g13 #q36 #t91))
           ((place v4 v12 p10 #g13 #q36 #t91))
           ((pick v4 v12 p7 #g13 #q33 #t88))
           ((place v4 v12 p7 #g13 #q33 #t88))
           ((pick v4 v12 v13 #g13 #q31 #t84))
           ((place v4 v12 v13 #g13 #q31 #t84))
           ((pick v4 v14 #o2 #g12 #o3 #o4))
           ((place v4 v14 #o2 #g12 #o3 #o4))
           ((pick v4 v14 p11 #g12 #q38 #t95))
           ((place v4 v14 p11 #g12 #q38 #t95))
           ((pick v4 v14 p8 #g12 #q30 #t83))
           ((place v4 v14 p8 #g12 #q30 #t83))
           ((pick v4 v14 v15 #g12 #q35 #t90))
           ((place v4 v14 v15 #g12 #q35 #t90))
           ((pick v4 v8 #o2 #g14 #o3 #o4))
           ((place v4 v8 #o2 #g14 #o3 #o4))
           ((pick v4 v8 #p1 #g14 #q39 #t113))
           ((place v4 v8 #p1 #g14 #q39 #t113))
           ((pick v4 v8 p6 #g14 #q34 #t89))
           ((place v4 v8 p6 #g14 #q34 #t89))
           ((pick v4 v8 p9 #g14 #q37 #t94))
           ((place v4 v8 p9 #g14 #q37 #t94))
           ((pick v4 v8 v9 #g14 #q32 #t87))
           ((place v4 v8 v9 #g14 #q32 #t87))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q28', '#t76'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g10', '#q28', '#t71'))
           Action(name='move_base', args=('#q28', '#q25', '#t81'))
           Action(name='place', args=('v4', 'v8', 'p9', '#g10', '#q25', '#t68'))
           Action(name='move_base', args=('#q25', '#q27', '#t79'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g11', '#q27', '#t70'))
           Action(name='move_base', args=('#q27', '#q26', '#t80'))
           Action(name='place', args=('v4', 'v12', 'p10', '#g11', '#q26', '#t69'))
           Action(name='move_base', args=('#q26', '#q24', '#t82'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g9', '#q24', '#t67'))
           Action(name='move_base', args=('#q24', '#q29', '#t78'))
           Action(name='place', args=('v4', 'v14', 'p11', '#g9', '#q29', '#t77'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v14', 'p11', 'v8', 'p9')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The goal is to place objects v8, v12, and v14 on surface v16. Currently, v8 is at v9 (supported by v11), v12 is at v13 (supported by v11), and v14 is at v15 (supported by v11). The robot starts at base configuration v3 and arm configuration v5 (arm v4) and v7 (arm v6). Arm v4 is handempty.
           
           The previous plan failed because placing v14 at p11 collided with v8 at p9. This means p11 and p9 are too close to each other. I will use the available `supported` predicates to choose suitable collision-free placements on `v16`. Since `p6`, `p7`, `p9`, `p10`, and `p11` are given poses already, and are all on `v16` (except for v14 which is on v10 or v16), I will choose some appropriate ones and use the `#p1` and `#o2` poses to avoid collisions. I will use `#p1` for `v8` on `v16`, `#o2` for `v12` on `v16` and for `v14` on `v16`. I will choose the continuous values for `#p1` and `#o2` such that objects are spaced out to avoid collisions and so that they are placed on `v16`.
           
           --Plan--:
           (move_base v3 #q32 #t93)
           (pick v4 v8 v9 #g14 #q32 #t87)
           (move_base #q32 #q39 #t115)
           (place v4 v8 #p1 #g14 #q39 #t113)
           (move_base #q39 #q31 #t114)
           (pick v4 v12 v13 #g13 #q31 #t84)
           (move_base #q31 #o3 #o0)
           (place v4 v12 #o2 #g13 #o3 #o4)
           (move_base #o3 #q35 #o0)
           (pick v4 v14 v15 #g12 #q35 #t90)
           (move_base #q35 #o3 #o0)
           (place v4 v14 #o2 #g12 #o3 #o4)
           
           --Poses--:
           (#p1 v8 v16): (0.0, 0.0, 0.782, 0.0)
           (#o2 v12 v16): (0.1, 0.0, 0.782, 0.0)
           (#o2 v14 v16): (-0.1, 0.0, 0.782, 0.0)

User:      Pose #p1 = (0.0 for object v8 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #p1 =  0.0 for object v8 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #p1 =  0.782 for object v8 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #p1 =  0.0) for object v8 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.1 for object v12 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0 for object v12 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v12 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v12 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (-0.1 for object v14 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0 for object v14 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v14 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v14 on surface v16 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The goal is to place objects v8, v12, and v14 on surface v16. Currently, v8 is at v9 (supported by v11), v12 is at v13 (supported by v11), and v14 is at v15 (supported by v11). The robot starts at base configuration v3 and arm configuration v5 (arm v4) and v7 (arm v6). Arm v4 is handempty.
           
           The previous plan failed because the pose format was incorrect. I will use the available `supported` predicates to choose suitable collision-free placements on `v16`. Since `p6`, `p7`, `p9`, `p10`, and `p11` are given poses already, and are all on `v16` (except for v14 which is on v10 or v16), I will choose some appropriate ones and use the `#p1` and `#o2` poses to avoid collisions. I will use `#p1` for `v8` on `v16`, `#o2` for `v12` on `v16` and for `v14` on `v16`. I will choose the continuous values for `#p1` and `#o2` such that objects are spaced out to avoid collisions and so that they are placed on `v16`.
           
           --Plan--:
           (move_base v3 #q32 #t93)
           (pick v4 v8 v9 #g14 #q32 #t87)
           (move_base #q32 #q39 #t115)
           (place v4 v8 #p1 #g14 #q39 #t113)
           (move_base #q39 #q31 #t114)
           (pick v4 v12 v13 #g13 #q31 #t84)
           (move_base #q31 #o3 #o0)
           (place v4 v12 #o2 #g13 #o3 #o4)
           (move_base #o3 #q35 #o0)
           (pick v4 v14 v15 #g12 #q35 #t90)
           (move_base #q35 #o3 #o0)
           (place v4 v14 #o2 #g12 #o3 #o4)
           
           --Poses--:
           (#p1 v8 v16): (0.0 0.0 0.782 0.0)
           (#o2 v12 v16): (0.1 0.0 0.782 0.0)
           (#o2 v14 v16): (-0.1 0.0 0.782 0.0)

User:      Pose #o2 = (0.1 0.0 0.782 0.0) for object v12 on surface v16 is not stable, as the 2D AABB of the object (AABB(lower=(0.06500000149011612, -0.035), upper=(0.13500000149011612, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (-0.1 0.0 0.782 0.0) for object v14 on surface v16 is not stable, as the 2D AABB of the object (AABB(lower=(-0.13500000149011612, -0.035), upper=(-0.06500000149011612, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The goal is to place objects v8, v12, and v14 on surface v16. Currently, v8 is at v9 (supported by v11), v12 is at v13 (supported by v11), and v14 is at v15 (supported by v11). The robot starts at base configuration v3 and arm configuration v5 (arm v4) and v7 (arm v6). Arm v4 is handempty.
           
           The previous plan failed because the specified poses for v12 and v14 on v16 were not stable. I need to make sure the AABB of the objects are contained within the AABB of the surface v16 (which is ((-0.135, -0.135), (0.135, 0.135))). The AABB of v12 is ((-0.163, -0.352), (-0.067, -0.256)), and the AABB of v14 is ((-0.085, -0.085), (-0.015, -0.015)). The AABB of v8 is ((-0.035, -0.035), (0.035, 0.035)).
           
           I will choose new continuous values for `#p1` and `#o2` to ensure stability and collision-free placement for all three objects on v16. I'll place them closer to the center of v16 to ensure stability.
           
           --Plan--:
           (move_base v3 #q32 #t93)
           (pick v4 v8 v9 #g14 #q32 #t87)
           (move_base #q32 #q39 #t115)
           (place v4 v8 #p1 #g14 #q39 #t113)
           (move_base #q39 #q31 #t114)
           (pick v4 v12 v13 #g13 #q31 #t84)
           (move_base #q31 #o3 #o0)
           (place v4 v12 #o2 #g13 #o3 #o4)
           (move_base #o3 #q35 #o0)
           (pick v4 v14 v15 #g12 #q35 #t90)
           (move_base #q35 #o3 #o0)
           (place v4 v14 #o2 #g12 #o3 #o4)
           
           --Poses--:
           (#p1 v8 v16): (0.0 0.0 0.782 0.0)
           (#o2 v12 v16): (0.0 0.05 0.782 0.0)
           (#o2 v14 v16): (0.0 -0.05 0.782 0.0)

