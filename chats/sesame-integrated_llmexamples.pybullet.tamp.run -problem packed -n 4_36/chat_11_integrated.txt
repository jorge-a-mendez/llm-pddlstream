User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g12: object
           #g13: object
           #g14: object
           #g15: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p2: object
           #q26: object
           #q27: object
           #q28: object
           #q29: object
           #q30: object
           #q31: object
           #q32: object
           #q33: object
           #t65: object
           #t66: object
           #t67: object
           #t68: object
           #t69: object
           #t70: object
           #t71: object
           #t72: object
           #t73: object
           #t74: object
           #t75: object
           #t76: object
           @sink: object
           @stove: object
           p4: object
           p5: object
           p6: object
           p7: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p5 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.116, 0.25), (-0.022, 0.344)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p7 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (0.002, 0.539, 0.781) and quaternion (0.0, 0.0, -0.166, 0.986).
           Object v17 is a pose with position (0.073, 0.384, 0.781) and quaternion (0.0, 0.0, 0.968, -0.25).
           Object v15 is a pose with position (-0.069, 0.297, 0.781) and quaternion (0.0, 0.0, -0.853, 0.522).
           Object v13 is a pose with position (-0.227, 0.471, 0.781) and quaternion (0.0, 0.0, 0.878, -0.478).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p4 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom graspable(v16)
           Atom pose(v16, v17)
           Atom atpose(v16, v17)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom stackable(v8, v18)
           Atom stackable(v12, v18)
           Atom stackable(v14, v18)
           Atom stackable(v16, v18)
           Atom pose(v14, p6)
           Atom supported(v14, p6, v10)
           Atom pose(v16, p7)
           Atom supported(v16, p7, v18)
           Atom supported(v14, p6, v18)
           Atom pose(v12, p5)
           Atom supported(v12, p5, v18)
           Atom pose(v8, p4)
           Atom supported(v8, p4, v18)
           Atom supported(v12, p5, v10)
           Atom supported(v16, p7, v10)
           Atom supported(v8, p4, v10)
           Atom kin(v36, v37, p4, v38, v39, v40)
           Atom kin(v36, v41, p5, v38, v39, v40)
           Atom kin(v36, v42, p6, v38, v39, v40)
           Atom kin(v36, v43, p7, v38, v39, v40)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #g15)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v16, #p2)
           Atom supported(v16, #p2, v18)
           Atom supported(v14, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v14, #g14)
           Atom supported(v12, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #g12)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g13)
           Atom bconf(#q31)
           Atom atraj(#t74)
           Atom kin(v4, v16, v17, #g15, #q31, #t74)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, p7, #g15, #o3, #o4)
           Atom bconf(#q32)
           Atom atraj(#t75)
           Atom kin(v4, v16, #p2, #g15, #q32, #t75)
           Atom bconf(#q30)
           Atom atraj(#t73)
           Atom kin(v4, v14, p6, #g14, #q30, #t73)
           Atom bconf(#q33)
           Atom atraj(#t76)
           Atom kin(v4, v14, v15, #g14, #q33, #t76)
           Atom bconf(#q26)
           Atom atraj(#t65)
           Atom kin(v4, v12, p5, #g12, #q26, #t65)
           Atom bconf(#q27)
           Atom atraj(#t66)
           Atom kin(v4, v12, v13, #g12, #q27, #t66)
           Atom bconf(#q28)
           Atom atraj(#t67)
           Atom kin(v4, v8, v9, #g13, #q28, #t67)
           Atom bconf(#q29)
           Atom atraj(#t68)
           Atom kin(v4, v8, p4, #g13, #q29, #t68)
           Atom basemotion(#q30, #o0, v3)
           Atom basemotion(v3, #o0, #q30)
           Atom basemotion(#q30, #o0, #q30)
           Atom basemotion(#q33, #o0, v3)
           Atom basemotion(#q33, #o0, #q30)
           Atom basemotion(#q33, #o0, #q33)
           Atom basemotion(v3, #o0, #q33)
           Atom basemotion(#q30, #o0, #q33)
           Atom basemotion(#q26, #o0, v3)
           Atom btraj(#t69)
           Atom basemotion(v3, #t69, #q26)
           Atom basemotion(#q26, #o0, #q26)
           Atom basemotion(#q30, #o0, #q26)
           Atom basemotion(#q26, #o0, #q30)
           Atom basemotion(#q33, #o0, #q26)
           Atom basemotion(#q26, #o0, #q33)
           Atom basemotion(#q31, #o0, #q33)
           Atom basemotion(#q31, #o0, v3)
           Atom basemotion(#q31, #o0, #q26)
           Atom basemotion(#q31, #o0, #q30)
           Atom basemotion(#q33, #o0, #q31)
           Atom basemotion(v3, #o0, #q31)
           Atom basemotion(#q31, #o0, #q31)
           Atom basemotion(#q26, #o0, #q31)
           Atom basemotion(#q30, #o0, #q31)
           Atom basemotion(#q29, #o0, v3)
           Atom basemotion(#q29, #o0, #q29)
           Atom btraj(#t72)
           Atom basemotion(v3, #t72, #q29)
           Atom basemotion(#q26, #o0, #q29)
           Atom basemotion(#q29, #o0, #q26)
           Atom basemotion(#q30, #o0, #q29)
           Atom basemotion(#q29, #o0, #q30)
           Atom basemotion(#q33, #o0, #q29)
           Atom basemotion(#q29, #o0, #q33)
           Atom basemotion(#q31, #o0, #q29)
           Atom basemotion(#q29, #o0, #q31)
           Atom basemotion(#q28, #o0, v3)
           Atom basemotion(#q28, #o0, #q28)
           Atom btraj(#t71)
           Atom basemotion(v3, #t71, #q28)
           Atom basemotion(#q29, #o0, #q28)
           Atom basemotion(#q28, #o0, #q29)
           Atom basemotion(#q26, #o0, #q28)
           Atom basemotion(#q28, #o0, #q26)
           Atom basemotion(#q30, #o0, #q28)
           Atom basemotion(#q28, #o0, #q30)
           Atom basemotion(#q33, #o0, #q28)
           Atom basemotion(#q28, #o0, #q33)
           Atom basemotion(#q31, #o0, #q28)
           Atom basemotion(#q28, #o0, #q31)
           Atom basemotion(#q27, #o0, #q29)
           Atom basemotion(#q27, #o0, v3)
           Atom basemotion(#q27, #o0, #q26)
           Atom basemotion(#q27, #o0, #q28)
           Atom basemotion(#q27, #o0, #q27)
           Atom basemotion(#q29, #o0, #q27)
           Atom btraj(#t70)
           Atom basemotion(v3, #t70, #q27)
           Atom basemotion(#q26, #o0, #q27)
           Atom basemotion(#q28, #o0, #q27)
           Atom basemotion(#q30, #o0, #q27)
           Atom basemotion(#q27, #o0, #q30)
           Atom basemotion(#q33, #o0, #q27)
           Atom basemotion(#q27, #o0, #q33)
           Atom basemotion(#q31, #o0, #q27)
           Atom basemotion(#q27, #o0, #q31)
           Atom basemotion(#q32, #o0, #q27)
           Atom basemotion(#q32, #o0, #q33)
           Atom basemotion(#q32, #o0, #q29)
           Atom basemotion(#q32, #o0, v3)
           Atom basemotion(#q32, #o0, #q31)
           Atom basemotion(#q32, #o0, #q26)
           Atom basemotion(#q32, #o0, #q28)
           Atom basemotion(#q32, #o0, #q30)
           Atom basemotion(#q27, #o0, #q32)
           Atom basemotion(#q33, #o0, #q32)
           Atom basemotion(#q29, #o0, #q32)
           Atom basemotion(v3, #o0, #q32)
           Atom basemotion(#q31, #o0, #q32)
           Atom basemotion(#q26, #o0, #q32)
           Atom basemotion(#q28, #o0, #q32)
           Atom basemotion(#q32, #o0, #q32)
           Atom basemotion(#q30, #o0, #q32)
           Atom kin(v4, v12, #o2, #g12, #o3, #o4)
           Atom kin(v4, v14, #o2, #g14, #o3, #o4)
           Atom kin(v4, v8, #o2, #g13, #o3, #o4)
           Atom kin(v4, v16, #o2, #g15, #o3, #o4)
           Atom basemotion(#o3, #o0, #q28)
           Atom basemotion(#o3, #o0, #q29)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q28, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q29, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q26, #o0, #o3)
           Atom basemotion(#o3, #o0, #q26)
           Atom basemotion(#q27, #o0, #o3)
           Atom basemotion(#o3, #o0, #q27)
           Atom basemotion(#q30, #o0, #o3)
           Atom basemotion(#o3, #o0, #q30)
           Atom basemotion(#q33, #o0, #o3)
           Atom basemotion(#o3, #o0, #q33)
           Atom basemotion(#q31, #o0, #o3)
           Atom basemotion(#o3, #o0, #q31)
           Atom basemotion(#q32, #o0, #o3)
           Atom basemotion(#o3, #o0, #q32)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q26 #o0))
           ((move_base #o3 #q27 #o0))
           ((move_base #o3 #q28 #o0))
           ((move_base #o3 #q29 #o0))
           ((move_base #o3 #q30 #o0))
           ((move_base #o3 #q31 #o0))
           ((move_base #o3 #q32 #o0))
           ((move_base #o3 #q33 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q26 #o3 #o0))
           ((move_base #q26 #q26 #o0))
           ((move_base #q26 #q27 #o0))
           ((move_base #q26 #q28 #o0))
           ((move_base #q26 #q29 #o0))
           ((move_base #q26 #q30 #o0))
           ((move_base #q26 #q31 #o0))
           ((move_base #q26 #q32 #o0))
           ((move_base #q26 #q33 #o0))
           ((move_base #q26 v3 #o0))
           ((move_base #q27 #o3 #o0))
           ((move_base #q27 #q26 #o0))
           ((move_base #q27 #q27 #o0))
           ((move_base #q27 #q28 #o0))
           ((move_base #q27 #q29 #o0))
           ((move_base #q27 #q30 #o0))
           ((move_base #q27 #q31 #o0))
           ((move_base #q27 #q32 #o0))
           ((move_base #q27 #q33 #o0))
           ((move_base #q27 v3 #o0))
           ((move_base #q28 #o3 #o0))
           ((move_base #q28 #q26 #o0))
           ((move_base #q28 #q27 #o0))
           ((move_base #q28 #q28 #o0))
           ((move_base #q28 #q29 #o0))
           ((move_base #q28 #q30 #o0))
           ((move_base #q28 #q31 #o0))
           ((move_base #q28 #q32 #o0))
           ((move_base #q28 #q33 #o0))
           ((move_base #q28 v3 #o0))
           ((move_base #q29 #o3 #o0))
           ((move_base #q29 #q26 #o0))
           ((move_base #q29 #q27 #o0))
           ((move_base #q29 #q28 #o0))
           ((move_base #q29 #q29 #o0))
           ((move_base #q29 #q30 #o0))
           ((move_base #q29 #q31 #o0))
           ((move_base #q29 #q32 #o0))
           ((move_base #q29 #q33 #o0))
           ((move_base #q29 v3 #o0))
           ((move_base #q30 #o3 #o0))
           ((move_base #q30 #q26 #o0))
           ((move_base #q30 #q27 #o0))
           ((move_base #q30 #q28 #o0))
           ((move_base #q30 #q29 #o0))
           ((move_base #q30 #q30 #o0))
           ((move_base #q30 #q31 #o0))
           ((move_base #q30 #q32 #o0))
           ((move_base #q30 #q33 #o0))
           ((move_base #q30 v3 #o0))
           ((move_base #q31 #o3 #o0))
           ((move_base #q31 #q26 #o0))
           ((move_base #q31 #q27 #o0))
           ((move_base #q31 #q28 #o0))
           ((move_base #q31 #q29 #o0))
           ((move_base #q31 #q30 #o0))
           ((move_base #q31 #q31 #o0))
           ((move_base #q31 #q32 #o0))
           ((move_base #q31 #q33 #o0))
           ((move_base #q31 v3 #o0))
           ((move_base #q32 #o3 #o0))
           ((move_base #q32 #q26 #o0))
           ((move_base #q32 #q27 #o0))
           ((move_base #q32 #q28 #o0))
           ((move_base #q32 #q29 #o0))
           ((move_base #q32 #q30 #o0))
           ((move_base #q32 #q31 #o0))
           ((move_base #q32 #q32 #o0))
           ((move_base #q32 #q33 #o0))
           ((move_base #q32 v3 #o0))
           ((move_base #q33 #o3 #o0))
           ((move_base #q33 #q26 #o0))
           ((move_base #q33 #q27 #o0))
           ((move_base #q33 #q28 #o0))
           ((move_base #q33 #q29 #o0))
           ((move_base #q33 #q30 #o0))
           ((move_base #q33 #q31 #o0))
           ((move_base #q33 #q32 #o0))
           ((move_base #q33 #q33 #o0))
           ((move_base #q33 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q30 #o0))
           ((move_base v3 #q31 #o0))
           ((move_base v3 #q32 #o0))
           ((move_base v3 #q33 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q26 #t69))
           ((move_base v3 #q27 #t70))
           ((move_base v3 #q28 #t71))
           ((move_base v3 #q29 #t72))
           ((pick v4 v12 #o2 #g12 #o3 #o4))
           ((place v4 v12 #o2 #g12 #o3 #o4))
           ((pick v4 v12 p5 #g12 #q26 #t65))
           ((place v4 v12 p5 #g12 #q26 #t65))
           ((pick v4 v12 v13 #g12 #q27 #t66))
           ((place v4 v12 v13 #g12 #q27 #t66))
           ((pick v4 v14 #o2 #g14 #o3 #o4))
           ((place v4 v14 #o2 #g14 #o3 #o4))
           ((pick v4 v14 p6 #g14 #q30 #t73))
           ((place v4 v14 p6 #g14 #q30 #t73))
           ((pick v4 v14 v15 #g14 #q33 #t76))
           ((place v4 v14 v15 #g14 #q33 #t76))
           ((pick v4 v16 #o2 #g15 #o3 #o4))
           ((place v4 v16 #o2 #g15 #o3 #o4))
           ((pick v4 v16 #p2 #g15 #q32 #t75))
           ((place v4 v16 #p2 #g15 #q32 #t75))
           ((pick v4 v16 p7 #g15 #o3 #o4))
           ((place v4 v16 p7 #g15 #o3 #o4))
           ((pick v4 v16 v17 #g15 #q31 #t74))
           ((place v4 v16 v17 #g15 #q31 #t74))
           ((pick v4 v8 #o2 #g13 #o3 #o4))
           ((place v4 v8 #o2 #g13 #o3 #o4))
           ((pick v4 v8 p4 #g13 #q29 #t68))
           ((place v4 v8 p4 #g13 #q29 #t68))
           ((pick v4 v8 v9 #g13 #q28 #t67))
           ((place v4 v8 v9 #g13 #q28 #t67))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q20', '#t52'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g10', '#q20', '#t47'))
           Action(name='move_base', args=('#q20', '#q25', '#t58'))
           Action(name='place', args=('v4', 'v8', 'p4', '#g10', '#q25', '#t57'))
           Action(name='move_base', args=('#q25', '#q18', '#t62'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g8', '#q18', '#t45'))
           Action(name='move_base', args=('#q18', '#q17', '#t63'))
           Action(name='place', args=('v4', 'v12', 'p5', '#g8', '#q17', '#t44'))
           Action(name='move_base', args=('#q17', '#q19', '#t59'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g9', '#q19', '#t46'))
           Action(name='move_base', args=('#q19', '#q21', '#t64'))
           Action(name='place', args=('v4', 'v14', 'p6', '#g9', '#q21', '#t48'))
           Action(name='move_base', args=('#q21', '#q22', '#t61'))
           Action(name='pick', args=('v4', 'v16', 'v17', '#g11', '#q22', '#t54'))
           Action(name='move_base', args=('#q22', '#q24', '#t60'))
           Action(name='place', args=('v4', 'v16', 'p7', '#g11', '#q24', '#t56'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v16', 'p7', 'v12', 'p5')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The goal is to place all four objects (v8, v12, v14, and v16) onto the surface v18. Currently, all objects are on surface v11, and some objects are also supported by v10 and v18 at specified poses. I need to find a sequence of pick and place actions, and corresponding base movements, that moves each object from its current location to a new location on v18. I should prioritize using the pre-defined collision-free poses.
           
           The previous plan failed because `test-cfree-pose-pose:('v16', 'p7', 'v12', 'p5')` returned false, indicating that placing v16 at p7 and v12 at p5 simultaneously would result in a collision. This means I need to choose new collision-free poses for the objects, specifically for v16 and v12, or ensure that they are not on the table at the same time if placed at those specific pre-defined poses.
           
           Let's look at the available poses and the supported predicates for v18:
           - `pose(v16, p7)` and `supported(v16, p7, v18)`
           - `pose(v12, p5)` and `supported(v12, p5, v18)`
           - `pose(v14, p6)` and `supported(v14, p6, v18)`
           - `pose(v8, p4)` and `supported(v8, p4, v18)`
           
           The previous failure implies that p7 and p5 are not collision-free for v16 and v12 simultaneously. I will use the free poses starting with '#' for the objects to ensure no collision. I'll use #p2 for v16, and #o2 for v12, v14, and v8, as they are all supported by v18. I will ensure they are spaced out to avoid collision.
           
           --Plan--:
           (move_base v3 #q28 #t71)
           (pick v4 v8 v9 #g13 #q28 #t67)
           (move_base #q28 #o3 #o0)
           (place v4 v8 #o2 #g13 #o3 #o4)
           (move_base #o3 #q27 #o0)
           (pick v4 v12 v13 #g12 #q27 #t66)
           (move_base #q27 #o3 #o0)
           (place v4 v12 #o2 #g12 #o3 #o4)
           (move_base #o3 #q33 #o0)
           (pick v4 v14 v15 #g14 #q33 #t76)
           (move_base #q33 #o3 #o0)
           (place v4 v14 #o2 #g14 #o3 #o4)
           (move_base #o3 #q31 #o0)
           (pick v4 v16 v17 #g15 #q31 #t74)
           (move_base #q31 #q32 #o0)
           (place v4 v16 #p2 #g15 #q32 #t75)
           
           --Poses--:
           (#o2 v8 v18): (0.0 0.2 0.782 0.0)
           (#o2 v12 v18): (0.0 -0.2 0.782 0.0)
           (#o2 v14 v18): (-0.2 0.0 0.782 0.0)
           (#p2 v16 v18): (0.2 0.0 0.782 0.0)

User:      Pose #o2 = (0.0 0.2 0.782 0.0) for object v8 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, 0.16500000298023224), upper=(0.035, 0.23500000298023224))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.0 -0.2 0.782 0.0) for object v12 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, -0.23500000298023224), upper=(0.035, -0.16500000298023224))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (-0.2 0.0 0.782 0.0) for object v14 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(-0.23500000298023224, -0.035), upper=(-0.16500000298023224, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #p2 = (0.2 0.0 0.782 0.0) for object v16 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(0.16500000298023224, -0.035), upper=(0.23500000298023224, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The previous plan failed because the provided continuous poses for objects v8, v12, v14, and v16 on surface v18 were not stable. The bounding boxes of the objects extended beyond the bounding box of the surface v18.
           
           Surface v18 has an AABB of ((-0.135, -0.135), (0.135, 0.135)). The objects v8, v12, and v16 have an AABB of ((-0.035, -0.035), (0.035, 0.035)), and v14 has an AABB of ((-0.116, 0.25), (-0.022, 0.344)). To ensure stability, the object's AABB must be contained within the surface's AABB.
           
           I need to adjust the coordinates for #o2 and #p2 to be within the bounds of v18. For objects v8, v12, v16 (small objects), I will choose positions close to the center of v18. For v14, I will adjust it to also be within the bounds.
           
           Let's recalculate the poses for the objects:
           v8 (AABB: ((-0.035, -0.035), (0.035, 0.035)))
           v12 (AABB: ((-0.035, -0.035), (0.035, 0.035)))
           v14 (AABB: ((-0.116, 0.25), (-0.022, 0.344)))
           v16 (AABB: ((-0.035, -0.035), (0.035, 0.035)))
           Surface v18 (AABB: ((-0.135, -0.135), (0.135, 0.135)))
           
           For the smaller objects (v8, v12, v16), let's try to place them at (0.0, 0.0, 0.782), (0.05, 0.05, 0.782), and (-0.05, -0.05, 0.782).
           For v14, given its larger dimensions, it will be placed at a pose that is within the x and y bounds of v18. I'll need to center the object's AABB within the surface's AABB for stability.
           The center of v18 is (0,0).
           v14's dimensions are roughly 0.094 in x and 0.094 in y.
           To place v14 centered within v18, I'll calculate the center of the object's AABB, which is at `((-0.116 + -0.022)/2, (0.25 + 0.344)/2) = (-0.069, 0.297)`.
           If I want to place v14 at (0,0) of v18, I need to adjust its original position `(-0.069, 0.297)` so that its center lands on the surface's center. This isn't straightforward as the provided poses are relative to the object's origin. Instead, I'll pick a pose such that the *object's AABB* fits within the *surface's AABB*.
           The max X dimension for v14 is 0.116. The max Y dimension for v14 is 0.344 (if aligned with Y-axis of surface). This object is quite large relative to the surface v18.
           The surface v18 max extent from center is 0.135 in x and y.
           For v14 (x-range: 0.094, y-range: 0.094), to be stable, the center needs to be within `(-0.135 + 0.094/2, 0.135 - 0.094/2)` for x and `(-0.135 + 0.094/2, 0.135 - 0.094/2)` for y.
           This gives a center range of `(-0.088, 0.088)` for both x and y.
           I can place v14 at (0.0, 0.0, 0.782, 0.0)
           Let's use the provided pose names, ensuring that they refer to stable positions for each object.
           
           --Plan--:
           (move_base v3 #q28 #t71)
           (pick v4 v8 v9 #g13 #q28 #t67)
           (move_base #q28 #o3 #o0)
           (place v4 v8 #o2 #g13 #o3 #o4)
           (move_base #o3 #q27 #o0)
           (pick v4 v12 v13 #g12 #q27 #t66)
           (move_base #q27 #o3 #o0)
           (place v4 v12 #o2 #g12 #o3 #o4)
           (move_base #o3 #q33 #o0)
           (pick v4 v14 v15 #g14 #q33 #t76)
           (move_base #q33 #o3 #o0)
           (place v4 v14 #o2 #g14 #o3 #o4)
           (move_base #o3 #q31 #o0)
           (pick v4 v16 v17 #g15 #q31 #t74)
           (move_base #q31 #q32 #o0)
           (place v4 v16 #p2 #g15 #q32 #t75)
           
           --Poses--:
           (#o2 v8 v18): (0.0 0.0 0.782 0.0)
           (#o2 v12 v18): (0.05 0.05 0.782 0.0)
           (#o2 v14 v18): (-0.05 -0.05 0.782 0.0)
           (#p2 v16 v18): (0.05 -0.05 0.782 0.0)

