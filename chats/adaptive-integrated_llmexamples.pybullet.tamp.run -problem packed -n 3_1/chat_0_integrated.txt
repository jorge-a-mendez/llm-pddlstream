User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v15 is a pose with position (-0.156, 0.248, 0.781) and quaternion (0.0, 0.0, 0.778, 0.629).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.197, 0.207), (-0.114, 0.29)).
           Object v9 is a pose with position (0.003, -0.369, 0.781) and quaternion (0.0, 0.0, 0.891, -0.455).
           Object v13 is a pose with position (0.209, 0.551, 0.781) and quaternion (0.0, 0.0, 1.0, 0.028).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.045, -0.418), (0.052, -0.32)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.172, 0.514), (0.246, 0.588)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v8, v9, v11)
           Atom stackable(v8, v16)
           Atom aconf(v4, v5)
           Atom stackable(v12, v10)
           Atom handempty(v4)
           Atom atpose(v12, v13)
           Atom canmove()
           Atom graspable(v12)
           Atom ataconf(v6, v7)
           Atom supported(v12, v13, v11)
           Atom stackable(v14, v16)
           Atom controllable(v4)
           Atom pose(v14, v15)
           Atom aconf(v6, v7)
           Atom stackable(v14, v10)
           Atom handempty(v6)
           Atom bconf(v3)
           Atom atpose(v8, v9)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom pose(v8, v9)
           Atom ataconf(v4, v5)
           Atom graspable(v14)
           Atom atpose(v14, v15)
           Atom graspable(v8)
           Atom pose(v12, v13)
           Atom stackable(v12, v16)
           Atom stackable(v8, v10)
           Atom supported(v14, v15, v11)
           Atom arm(v6)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom grasp(v8, #o1)
           Atom grasp(v14, #o1)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v14, #o2, v10)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place objects `v8`, `v12`, and `v14` on `v16`. Currently, `v8` is on `v11` at `v9`, `v12` is on `v11` at `v13`, and `v14` is on `v11` at `v15`. The robot has two arms, `v4` and `v6`, both are handempty. The robot is at base configuration `v3`.
           
           The only provided action instance is `(move_base v3 v3 #o0)`. This action does not change the state of the objects or the robot's ability to pick/place. The goal requires picking and placing operations, for which no valid action instances are provided. Therefore, the goal is not achievable.

