User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #q6: object
           #q7: object
           #q9: object
           #t11: object
           #t12: object
           #t14: object
           #t2: object
           #t22: object
           #t3: object
           #t7: object
           #t8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom ~test-cfree-pose-pose-negative(v18, v25, v16, v37)
           Atom handempty(v4)
           Atom ~test-cfree-pose-pose-negative(v18, v39, v12, v41)
           Atom aconf(v4, v5)
           Atom ~test-cfree-pose-pose-negative(v16, v37, v12, v41)
           Atom ataconf(v6, v7)
           Atom stackable(v16, v20)
           Atom ~test-cfree-pose-pose-negative(v14, v29, v8, v26)
           Atom supported(v14, v15, v11)
           Atom ~test-cfree-pose-pose-negative(v18, v39, v12, v36)
           Atom stackable(v12, v20)
           Atom ~test-cfree-pose-pose-negative(v14, v27, v8, v28)
           Atom stackable(v12, v10)
           Atom atpose(v8, v9)
           Atom graspable(v16)
           Atom graspable(v8)
           Atom ~test-cfree-pose-pose-negative(v18, v38, v16, v37)
           Atom pose(v18, v19)
           Atom supported(v12, v13, v11)
           Atom ~test-cfree-pose-pose-negative(v18, v39, v16, v37)
           Atom bconf(v3)
           Atom stackable(v14, v10)
           Atom stackable(v18, v20)
           Atom atbconf(v3)
           Atom supported(v16, v17, v11)
           Atom ~test-cfree-pose-pose-negative(v18, v25, v12, v41)
           Atom ~test-cfree-pose-pose-negative(v16, v40, v12, v36)
           Atom arm(v4)
           Atom atpose(v18, v19)
           Atom ~test-cfree-pose-pose-negative(v18, v39, v16, v40)
           Atom graspable(v14)
           Atom pose(v16, v17)
           Atom stackable(v16, v10)
           Atom atpose(v12, v13)
           Atom ~test-cfree-pose-pose-negative(v18, v38, v12, v23)
           Atom stackable(v8, v10)
           Atom ~test-cfree-pose-pose-negative(v14, v21, v8, v22)
           Atom ~test-cfree-pose-pose-negative(v16, v24, v12, v36)
           Atom stackable(v8, v20)
           Atom ataconf(v4, v5)
           Atom supported(v18, v19, v11)
           Atom handempty(v6)
           Atom pose(v8, v9)
           Atom graspable(v12)
           Atom pose(v14, v15)
           Atom atpose(v16, v17)
           Atom ~test-cfree-pose-pose-negative(v18, v38, v12, v41)
           Atom aconf(v6, v7)
           Atom ~test-cfree-pose-pose-negative(v14, v27, v8, v26)
           Atom ~test-cfree-pose-pose-negative(v14, v29, v8, v22)
           Atom ~test-cfree-pose-pose-negative(v14, v29, v8, v28)
           Atom supported(v8, v9, v11)
           Atom arm(v6)
           Atom stackable(v18, v10)
           Atom ~test-cfree-pose-pose-negative(v14, v27, v8, v22)
           Atom canmove()
           Atom ~test-cfree-pose-pose-negative(v14, v21, v8, v28)
           Atom controllable(v4)
           Atom atpose(v14, v15)
           Atom ~test-cfree-pose-pose-negative(v18, v39, v16, v24)
           Atom ~test-cfree-pose-pose-negative(v14, v21, v8, v26)
           Atom stackable(v14, v20)
           Atom graspable(v18)
           Atom pose(v12, v13)
           Atom grasp(v18, #g2)
           Atom pose(v14, v27)
           Atom supported(v14, v27, v20)
           Atom pose(v14, v21)
           Atom supported(v14, v21, v20)
           Atom pose(v14, v29)
           Atom supported(v14, v29, v20)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g1)
           Atom pose(v8, v22)
           Atom supported(v8, v22, v20)
           Atom pose(v8, v28)
           Atom supported(v8, v28, v20)
           Atom pose(v8, v26)
           Atom supported(v8, v26, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v14, #g3)
           Atom pose(v12, v41)
           Atom supported(v12, v41, v20)
           Atom pose(v12, v36)
           Atom supported(v12, v36, v20)
           Atom pose(v12, v23)
           Atom supported(v12, v23, v20)
           Atom pose(v18, v38)
           Atom supported(v18, v38, v20)
           Atom pose(v18, v39)
           Atom supported(v18, v39, v20)
           Atom pose(v18, v25)
           Atom supported(v18, v25, v20)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v16, v24)
           Atom supported(v16, v24, v20)
           Atom pose(v16, v40)
           Atom supported(v16, v40, v20)
           Atom pose(v16, v37)
           Atom supported(v16, v37, v20)
           Atom grasp(v8, #g4)
           Atom grasp(v16, #g0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v23, #g1, #o3, #o4)
           Atom bconf(#q7)
           Atom atraj(#t12)
           Atom kin(v4, v12, v13, #g1, #q7, #t12)
           Atom kin(v4, v12, v36, #g1, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v18, v19, #g2, #q2, #t2)
           Atom kin(v4, v18, v25, #g2, #o3, #o4)
           Atom kin(v4, v18, v38, #g2, #o3, #o4)
           Atom kin(v4, v14, v27, #g3, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v14, v15, #g3, #q3, #t3)
           Atom kin(v4, v14, v21, #g3, #o3, #o4)
           Atom kin(v4, v8, v26, #g4, #o3, #o4)
           Atom kin(v4, v8, v22, #g4, #o3, #o4)
           Atom bconf(#q9)
           Atom atraj(#t14)
           Atom kin(v4, v8, v9, #g4, #q9, #t14)
           Atom kin(v4, v16, v37, #g0, #o3, #o4)
           Atom bconf(#q6)
           Atom atraj(#t11)
           Atom kin(v4, v16, v17, #g0, #q6, #t11)
           Atom kin(v4, v16, v24, #g0, #o3, #o4)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q3)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q9)
           Atom btraj(#t22)
           Atom basemotion(v3, #t22, #q9)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q2, #o0, #q6)
           Atom kin(v4, v18, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g3, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g4, #o3, #o4)
           Atom kin(v4, v16, #o2, #g0, #o3, #o4)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q9 #t22))
           ((move_base v3 #q2 #t7))
           ((move_base v3 #q3 #t8))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 v13 #g1 #q7 #t12))
           ((place v4 v12 v13 #g1 #q7 #t12))
           ((pick v4 v12 v23 #g1 #o3 #o4))
           ((place v4 v12 v23 #g1 #o3 #o4))
           ((pick v4 v12 v36 #g1 #o3 #o4))
           ((place v4 v12 v36 #g1 #o3 #o4))
           ((pick v4 v14 #o2 #g3 #o3 #o4))
           ((place v4 v14 #o2 #g3 #o3 #o4))
           ((pick v4 v14 v15 #g3 #q3 #t3))
           ((place v4 v14 v15 #g3 #q3 #t3))
           ((pick v4 v14 v21 #g3 #o3 #o4))
           ((place v4 v14 v21 #g3 #o3 #o4))
           ((pick v4 v14 v27 #g3 #o3 #o4))
           ((place v4 v14 v27 #g3 #o3 #o4))
           ((pick v4 v16 #o2 #g0 #o3 #o4))
           ((place v4 v16 #o2 #g0 #o3 #o4))
           ((pick v4 v16 v17 #g0 #q6 #t11))
           ((place v4 v16 v17 #g0 #q6 #t11))
           ((pick v4 v16 v24 #g0 #o3 #o4))
           ((place v4 v16 v24 #g0 #o3 #o4))
           ((pick v4 v16 v37 #g0 #o3 #o4))
           ((place v4 v16 v37 #g0 #o3 #o4))
           ((pick v4 v18 #o2 #g2 #o3 #o4))
           ((place v4 v18 #o2 #g2 #o3 #o4))
           ((pick v4 v18 v19 #g2 #q2 #t2))
           ((place v4 v18 v19 #g2 #q2 #t2))
           ((pick v4 v18 v25 #g2 #o3 #o4))
           ((place v4 v18 v25 #g2 #o3 #o4))
           ((pick v4 v18 v38 #g2 #o3 #o4))
           ((place v4 v18 v38 #g2 #o3 #o4))
           ((pick v4 v8 #o2 #g4 #o3 #o4))
           ((place v4 v8 #o2 #g4 #o3 #o4))
           ((pick v4 v8 v22 #g4 #o3 #o4))
           ((place v4 v8 v22 #g4 #o3 #o4))
           ((pick v4 v8 v26 #g4 #o3 #o4))
           ((place v4 v8 v26 #g4 #o3 #o4))
           ((pick v4 v8 v9 #g4 #q9 #t14))
           ((place v4 v8 v9 #g4 #q9 #t14))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms, v4 and v6. Both arms are currently empty. The robot is at base configuration v3 and arm v4 is at arm configuration v5, while arm v6 is at arm configuration v7. There are several objects (v8, v12, v14, v16, v18) located at various poses on a surface v11. All these objects are graspable and stackable on surfaces v10 and v20. The goal is to move all five objects (v8, v12, v14, v16, v18) onto the surface v20. This will require picking each object from its initial pose on v11 and placing it on a designated pose on v20. Since object v11 is not explicitly typed, it is not a sink or stove. Also, object v20 is only listed as a stackable surface for objects and does not have a type of sink or stove, so no cleaning or cooking is needed or possible.
           
           The initial state shows that objects v8, v12, v14, v16, and v18 are supported by v11 at their current poses (v9, v13, v15, v17, and v19 respectively). The goal requires these objects to be on v20. We have pre-calculated poses on v20 for each object (e.g., v8 can be placed at v22, v26, or v28 on v20, v12 at v23, v36, or v41 on v20, etc.). We also have pre-calculated kinematic information (kin) for picking these objects from their current poses and placing them on v20, as well as necessary base motions.
           
           The plan will involve a sequence of pick and place actions for each object. For each object, we need to first move the base to the configuration required for the pick, then perform the pick, then potentially move the base to the configuration required for the place, and finally perform the place action. Since all place actions for objects on v20 seem to share the same base configuration (#o3), we will strategically use this to minimize base movements.
           
           Here's the detailed plan:
           
           1.  **Move v8 to v20:**
               *   Move base to #q9 (for picking v8 from v9).
               *   Pick v8 from v9 using arm v4.
               *   Move base to #o3 (for placing v8 on v20).
               *   Place v8 onto v22 on v20 using arm v4.
           2.  **Move v12 to v20:**
               *   Pick v12 from v13 using arm v4 (assuming the base is at #q7, or we need to move it there first). Let's check available `kin` and `basemotion` carefully. `kin(v4, v12, v13, #g1, #q7, #t12)` implies base should be at #q7 for picking.
               *   Move base to #q7 (for picking v12 from v13).
               *   Pick v12 from v13 using arm v4.
               *   Move base to #o3 (for placing v12 on v20).
               *   Place v12 onto v23 on v20 using arm v4.
           3.  **Move v14 to v20:**
               *   Move base to #q3 (for picking v14 from v15).
               *   Pick v14 from v15 using arm v4.
               *   Move base to #o3 (for placing v14 on v20).
               *   Place v14 onto v27 on v20 using arm v4.
           4.  **Move v16 to v20:**
               *   Move base to #q6 (for picking v16 from v17).
               *   Pick v16 from v17 using arm v4.
               *   Move base to #o3 (for placing v16 on v20).
               *   Place v16 onto v37 on v20 using arm v4.
           5.  **Move v18 to v20:**
               *   Move base to #q2 (for picking v18 from v19).
               *   Pick v18 from v19 using arm v4.
               *   Move base to #o3 (for placing v18 on v20).
               *   Place v18 onto v25 on v20 using arm v4.
           
           I'll choose one of the available target poses on v20 for each object. The poses v22, v23, v27, v37, and v25 appear to be valid target poses on v20 for objects v8, v12, v14, v16, and v18 respectively, based on the provided `supported` facts in the initial state and the `kin` actions. I will prioritize `kin` actions that require base configuration #o3 for placing when possible, or pick an available pose if not. In this case, there are specific `kin` actions for placing objects at various poses on v20 all associated with #o3. So I'll move to #o3 for placing each object.
           
           --Plan--:
           (move_base v3 #q9 #t22)
           (pick v4 v8 v9 #g4 #q9 #t14)
           (move_base #q9 #o3 #o0)
           (place v4 v8 v22 #g4 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v12 v13 #g1 #q7 #t12)
           (move_base #q7 #o3 #o0)
           (place v4 v12 v23 #g1 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v14 v15 #g3 #q3 #t3)
           (move_base #q3 #o3 #o0)
           (place v4 v14 v27 #g3 #o3 #o4)
           (move_base #o3 #q6 #o0)
           (pick v4 v16 v17 #g0 #q6 #t11)
           (move_base #q6 #o3 #o0)
           (place v4 v16 v37 #g0 #o3 #o4)
           (move_base #o3 #q2 #o0)
           (pick v4 v18 v19 #g2 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v18 v25 #g2 #o3 #o4)

