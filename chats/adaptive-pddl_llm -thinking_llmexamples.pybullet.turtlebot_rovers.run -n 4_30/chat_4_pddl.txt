User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom rock(v7)
           Atom rock(v4)
           Atom rock(v5)
           Atom type(v8, v6)
           Atom objective(v19)
           Atom supports(v10, v11)
           Atom camera(v10)
           Atom mode(v11)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom rock(v3)
           Atom store(v16)
           Atom rover(v12)
           Atom onboard(v10, v12)
           Atom rock(v8)
           Atom lander(v9)
           Atom rover(v14)
           Atom conf(v12, v13)
           Atom free(v12, v16)
           Atom objective(v20)
           Atom conf(v14, v15)
           Atom rock(v1)
           Atom onboard(v10, v14)
           Atom type(v5, v6)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom atconf(v14, v15)
           Atom type(v1, v2)
           Atom above(v12, #q8, v7)
           Atom conf(v12, #q8)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q7, #y5, v17)
           Atom imagerange(v12, #q7, v17)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom above(v12, #q9, v1)
           Atom conf(v12, #q9)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q3, #y2, v20)
           Atom imagerange(v12, #q3, v20)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v4)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v5)
           Atom above(v14, #q1, v4)
           Atom conf(v14, #q1)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q4, v8)
           Atom conf(v14, #q4)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #t6, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v14, v15, #t11, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v14, #q2, #t12, v15)
           Atom motion(v14, #q4, #t9, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t17, #q4)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v12, v13, #t15, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #t19, #q5)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q0, #t16, #q5)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, #q8, #t22, #q0)
           Atom motion(v12, #q5, #t3, #q0)
           Atom motion(v12, #q7, #t14, #q0)
           Atom motion(v12, #q0, #t21, #q8)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #t23, #q7)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q0, #t13, #q6)
           Atom motion(v12, v13, #t7, #q6)
           Atom motion(v12, #q6, #t4, #q0)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v14, #q2, #t1, #q1)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q1, #t8, #q2)
           Atom motion(v14, v15, #t10, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q3, #t2, #q0)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #t5, #q3)
           Atom motion(v12, #q0, #t18, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q5, #t20, #q3)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #q2, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q2)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q8 v7 v16))
           ((sample_rock v12 #q9 v1 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q1 v4 v16))
           ((sample_rock v14 #q4 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t13 #q6))
           ((move v12 #q0 #t16 #q5))
           ((move v12 #q0 #t18 #q3))
           ((move v12 #q0 #t21 #q8))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t2 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t20 #q3))
           ((move v12 #q5 #t3 #q0))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t23 #q7))
           ((move v12 #q6 #t4 #q0))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t14 #q0))
           ((move v12 #q7 #t19 #q5))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t22 #q0))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q7))
           ((move v12 v13 #t5 #q3))
           ((move v12 v13 #t6 #q5))
           ((move v12 v13 #t7 #q6))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q2))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t8 #q2))
           ((move v14 #q2 #o2 #o3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #t1 #q1))
           ((move v14 #q2 #t12 v15))
           ((move v14 #q2 #t17 #q4))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t9 #q2))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q1))
           ((move v14 v15 #t11 #q4))
           ((calibrate v12 #q3 #y2 v20 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v12 #q7 #y5 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q3 #y2 v20 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v12 #q7 #y5 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v19 v11))
           ((send_image v14 #q2 #y1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, here's the breakdown of the plan to satisfy that axiom. It's a bit involved, but essentially, we need to gather images and analysis data from various locations and send it back. The key is to leverage the capabilities of two rovers, v12 and v14, efficiently.
           
           First, let's look at the images. We need to grab images of objectives v17, v18, v19, and v20.  I'm going to assign the image-taking tasks to rover v12. It has the right camera and mode.
           
           Here's the plan for rover v12:
           
           1.  **Image v17:**
               *   Move v12 to #q7 (location for v17)
               *   Calibrate the camera (it needs to be calibrated before taking each image).
               *   Take the picture of v17.
               *   Move v12 to #q0 (the communication hub).
               *   Send the image of v17.
           
           2.  **Image v18:**
               *   Move to #q5 (location for v18)
               *   Calibrate the camera.
               *   Take the picture of v18.
               *   Move to #q0.
               *   Send the image of v18.
           
           3.  **Image v19:**
               *   Move to #q6.
               *   Calibrate the camera.
               *   Take the picture of v19.
               *   Move to #q0.
               *   Send the image of v19.
           
           4.  **Image v20:**
               *   Move to #q3.
               *   Calibrate the camera.
               *   Take the picture of v20.
               *   Move to #q0.
               *   Send the image of v20.
           
           Now the analysis part, we have the initial configuration that `atconf(v12, v13)` and `atconf(v14, v15)` is True. Both v12 and v14 will be free.
           
           For the analysis:
           
           We also need to get analysis of a soil and a stone. I'll have v12 handle the soil sample (v7) and v14 the stone sample (v4).
           
           Here's the plan for rover v12:
           1.  Move v12 to #q8 (the sampling location for v7)
           2.  Sample rock v7 (soil). This makes the rover full.
           3.  Move v12 to #q0 (the communication hub).
           4.  Send analysis of v7.
           5.  *Drop* v7's rock sample, putting v12 back in the free state.
           
           Here's the plan for rover v14:
           1.  Move v14 to #q1 (the sampling location for v4)
           2.  Sample rock v4 (stone).
           3.  Move v14 to #q2.
           4.  Send analysis of v4.
           5.  *Drop* v4's rock sample, putting v14 back in the free state.
           
           After performing image captures, both rovers are at the communication hub (v12 at #q0 and v14 at #q2). The axiom requires `atconf` to be true in the final state; so, v12 must go back to v13, and v14 must return to v15.
           
           Final steps for the rover movements.
           1. Move v12 back to v13 from #q0
           2. Move v14 back to v15 from #q2.
           
           This complete plan should, according to my calculations, satisfy all the conditions of the axiom `new-axiom@0()`!
           
)

Model:     **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, here's the breakdown of the plan to satisfy that axiom. It's a bit involved, but essentially, we need to gather images and analysis data from various locations and send it back. The key is to leverage the capabilities of two rovers, v12 and v14, efficiently.
           
           First, let's look at the images. We need to grab images of objectives v17, v18, v19, and v20.  I'm going to assign the image-taking tasks to rover v12. It has the right camera and mode.
           
           Here's the plan for rover v12:
           
           1.  **Image v17:**
               *   Move v12 to #q7 (location for v17)
               *   Calibrate the camera (it needs to be calibrated before taking each image).
               *   Take the picture of v17.
               *   Move v12 to #q0 (the communication hub).
               *   Send the image of v17.
           
           2.  **Image v18:**
               *   Move to #q5 (location for v18)
               *   Calibrate the camera.
               *   Take the picture of v18.
               *   Move to #q0.
               *   Send the image of v18.
           
           3.  **Image v19:**
               *   Move to #q6.
               *   Calibrate the camera.
               *   Take the picture of v19.
               *   Move to #q0.
               *   Send the image of v19.
           
           4.  **Image v20:**
               *   Move to #q3.
               *   Calibrate the camera.
               *   Take the picture of v20.
               *   Move to #q0.
               *   Send the image of v20.
           
           Now the analysis part, we have the initial configuration that `atconf(v12, v13)` and `atconf(v14, v15)` is True. Both v12 and v14 will be free.
           
           For the analysis:
           
           We also need to get analysis of a soil and a stone. I'll have v12 handle the soil sample (v7) and v14 the stone sample (v4).
           
           Here's the plan for rover v12:
           1.  Move v12 to #q8 (the sampling location for v7)
           2.  Sample rock v7 (soil). This makes the rover full.
           3.  Move v12 to #q0 (the communication hub).
           4.  Send analysis of v7.
           5.  *Drop* v7's rock sample, putting v12 back in the free state.
           
           Here's the plan for rover v14:
           1.  Move v14 to #q1 (the sampling location for v4)
           2.  Sample rock v4 (stone).
           3.  Move v14 to #q2.
           4.  Send analysis of v4.
           5.  *Drop* v4's rock sample, putting v14 back in the free state.
           
           After performing image captures, both rovers are at the communication hub (v12 at #q0 and v14 at #q2). The axiom requires `atconf` to be true in the final state; so, v12 must go back to v13, and v14 must return to v15.
           
           Final steps for the rover movements.
           1. Move v12 back to v13 from #q0
           2. Move v14 back to v15 from #q2.
           
           This complete plan should, according to my calculations, satisfy all the conditions of the axiom `new-axiom@0()`!
           

