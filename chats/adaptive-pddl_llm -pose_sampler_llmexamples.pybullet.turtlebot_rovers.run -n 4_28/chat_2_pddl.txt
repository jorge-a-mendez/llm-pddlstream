User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v14, v15)
           Atom rock(v1)
           Atom objective(v17)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom objective(v19)
           Atom type(v3, v2)
           Atom free(v12, v16)
           Atom atconf(v12, v13)
           Atom type(v5, v6)
           Atom store(v16)
           Atom free(v14, v16)
           Atom rock(v3)
           Atom onboard(v10, v14)
           Atom rock(v7)
           Atom type(v7, v6)
           Atom atconf(v14, v15)
           Atom objective(v18)
           Atom type(v1, v2)
           Atom objective(v20)
           Atom lander(v9)
           Atom onboard(v10, v12)
           Atom rock(v4)
           Atom rock(v8)
           Atom camera(v10)
           Atom supports(v10, v11)
           Atom conf(v12, v13)
           Atom type(v8, v6)
           Atom rover(v14)
           Atom rock(v5)
           Atom rover(v12)
           Atom above(v14, #o5, v5)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #q3, #y2, v19)
           Atom imagerange(v14, #q3, v19)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom above(v12, #q5, v5)
           Atom conf(v12, #q5)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q9, v3)
           Atom conf(v12, #q9)
           Atom above(v12, #q11, v8)
           Atom conf(v12, #q11)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q8, v4)
           Atom conf(v12, #q8)
           Atom above(v14, #o5, v4)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom imagevisible(v14, #q6, #y3, v20)
           Atom imagerange(v14, #q6, v20)
           Atom conf(v14, #q6)
           Atom ray(#y3)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom imagevisible(v14, #q10, #y5, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y5)
           Atom imagevisible(v14, #q7, #y4, v18)
           Atom imagerange(v14, #q7, v18)
           Atom conf(v14, #q7)
           Atom ray(#y4)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v14, #o5, v7)
           Atom above(v12, #q4, v7)
           Atom conf(v12, #q4)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #t3, #q4)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q1, #t7, #q4)
           Atom motion(v12, #q1, #t5, v13)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q1, #t8, #q5)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #t9, v15)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q1, #t6, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, v13, #t2, #q0)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q3, #t4, #q2)
           Atom motion(v14, v15, #t1, #q3)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v12, #q9, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q0)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #q0, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q8)
           Atom motion(v12, #q4, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q11)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #q5, #o2, #o3)
           Atom motion(v12, #q11, #o2, #o3)
           Atom motion(v12, #q8, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q5)
           Atom motion(v12, #o3, #o2, #q4)
           Atom motion(v12, #o3, #o2, #q9)
           Atom motion(v12, #q1, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q1)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q4 v7 v16))
           ((sample_rock v12 #q5 v5 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v12 #q9 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #q0))
           ((move v12 #o3 #o2 #q1))
           ((move v12 #o3 #o2 #q11))
           ((move v12 #o3 #o2 #q4))
           ((move v12 #o3 #o2 #q5))
           ((move v12 #o3 #o2 #q8))
           ((move v12 #o3 #o2 #q9))
           ((move v12 #o3 #o2 v13))
           ((move v12 #q0 #o2 #o3))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q1 #o2 #o3))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #t5 v13))
           ((move v12 #q1 #t6 #q0))
           ((move v12 #q1 #t7 #q4))
           ((move v12 #q1 #t8 #q5))
           ((move v12 #q11 #o2 #o3))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q4 #o2 #o3))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q5 #o2 #o3))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q8 #o2 #o3))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q9 #o2 #o3))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t2 #q0))
           ((move v12 v13 #t3 #q4))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #t9 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t4 #q2))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q3))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q10 #y5 v17 v10))
           ((calibrate v14 #q3 #y2 v19 v10))
           ((calibrate v14 #q6 #y3 v20 v10))
           ((calibrate v14 #q7 #y4 v18 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q10 #y5 v17 v10 v11))
           ((take_image v14 #q3 #y2 v19 v10 v11))
           ((take_image v14 #q6 #y3 v20 v10 v11))
           ((take_image v14 #q7 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v19 v11))
           ((send_image v14 #q2 #y1 v9 v20 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a lander (v9), a camera (v10), a storage (v16), a mode (v11), several objectives (v17, v18, v19, v20), and several rocks (v1, v3, v4, v5, v7, v8). The rocks are classified by type (v2 for v1, v3, v4 and v6 for v5, v7, v8).
           
           The goal `new-axiom@0()` represents a complex state that requires several conditions to be met:
           1. Both rovers v12 and v14 are at their respective initial configurations v13 and v15 (atconf(v12, v13) and atconf(v14, v15)). These are already true.
           2. Both rovers have free storage (free(v12, v16) and free(v14, v16)). These are already true.
           3. Images of all four objectives (v17, v18, v19, v20) are received at the lander in mode v11 (receivedimage(v17, v11), receivedimage(v18, v11), receivedimage(v19, v11), receivedimage(v20, v11)).
           4. Analysis of two specific types of rocks (v2, v6) have been received (receivedanalysis(?stone) for type v2 and receivedanalysis(?soil) for type v6). This means we need to analyze at least one rock of type v2 and one rock of type v6.
           
           To achieve the goal, the plan needs to:
           - Take images of objectives v17, v18, v19, v20 with one of the rovers and send them to the lander. The camera v10 supports mode v11 and is onboard both rovers.
           - Sample and analyze at least one rock of type v2 (e.g., v1, v3, or v4) and at least one rock of type v6 (e.g., v5, v7, or v8) and send the analysis to the lander.
           
           Let's break down the image and analysis requirements:
           
           **Image Acquisition and Transmission:**
           *   **Objectives:** v17, v18, v19, v20.
           *   **Rover v12:** Can see v19, v20, v17, v18 from configuration #o3 using ray #o4.
           *   **Rover v14:** Can see v19 from #q3 with #y2, v20 from #q6 with #y3, v17 from #q10 with #y5, and v18 from #q7 with #y4.
           *   Rover v12 is currently at v13, not #o3. Rover v14 is at v15, not #q3, #q6, #q10, #q7.
           
           To send images, a rover must first be calibrated, then take the image, and then send it. The lander v9 needs to be visible.
           - Rover v12 can communicate from #q1 using #y0.
           - Rover v14 can communicate from #q2 using #y1.
           
           **Rock Analysis:**
           *   **Rock Type v2:** Rocks v1, v3, v4 are type v2.
           *   **Rock Type v6:** Rocks v5, v7, v8 are type v6.
           *   Both rovers have free storage v16.
           *   **Rover v12:** Can sample v1 (above #q0), v8 (above #q11), v7 (above #q4), v5 (above #q5), v4 (above #q8), v3 (above #q9).
           *   **Rover v14:** Can sample v5, v1, v3, v8, v4, v7 (all above #o5).
           
           To analyze a rock, a rover must be above it, sample it, and then send the analysis.
           
           Considering the current state:
           - atconf(v12, v13)
           - atconf(v14, v15)
           - free(v12, v16)
           - free(v14, v16)
           
           Let's use rover v12 for image transmission and rover v14 for rock sampling and analysis. It might be more efficient to use a single rover for all image tasks. Let's use v12 for images and v14 for rocks.
           
           **Strategy for Images (Rover v12):**
           1. Move v12 to #o3 to see all objectives.
           2. Calibrate the camera (v10) for each objective.
           3. Take images of v17, v18, v19, v20.
           4. Move v12 to #q1 to communicate with the lander.
           5. Send all four images.
           
           **Strategy for Rock Analysis (Rover v14):**
           1. Move v14 to #o5 to be above multiple rocks.
           2. Sample a rock of type v2 (e.g., v1).
           3. Sample a rock of type v6 (e.g., v5).
           4. Move v14 to #q2 to communicate with the lander.
           5. Send analyses for v1 and v5.
           
           Let's check the available actions:
           - `move v12 v13 #o2 #o3`: Possible.
           - `calibrate v12 #o3 #o4 v17 v10`: Possible.
           - `take_image v12 #o3 #o4 v17 v10 v11`: Possible after calibration.
           - `move v12 #o3 #o2 #q1`: Possible.
           - `send_image v12 #q1 #y0 v9 v17 v11`: Possible after haveimage.
           
           - `move v14 v15 #o2 #o5`: Possible.
           - `sample_rock v14 #o5 v1 v16`: Possible.
           - `sample_rock v14 #o5 v5 v16`: Possible (if free).
           - `move v14 #o5 #o2 #q2`: Possible.
           - `send_analysis v14 #q2 #y1 v9 v1`: Possible after analyzed.
           
           Let's execute this strategy.
           
           --Plan--:
           (move v12 v13 #o2 #o3)
           (calibrate v12 #o3 #o4 v19 v10)
           (take_image v12 #o3 #o4 v19 v10 v11)
           (calibrate v12 #o3 #o4 v20 v10)
           (take_image v12 #o3 #o4 v20 v10 v11)
           (calibrate v12 #o3 #o4 v17 v10)
           (take_image v12 #o3 #o4 v17 v10 v11)
           (calibrate v12 #o3 #o4 v18 v10)
           (take_image v12 #o3 #o4 v18 v10 v11)
           (move v12 #o3 #o2 #q1)
           (send_image v12 #q1 #y0 v9 v19 v11)
           (send_image v12 #q1 #y0 v9 v20 v11)
           (send_image v12 #q1 #y0 v9 v17 v11)
           (send_image v12 #q1 #y0 v9 v18 v11)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (sample_rock v14 #o5 v5 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v1)
           (send_analysis v14 #q2 #y1 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. Let's re-examine the goal `new-axiom@0()`, which is an axiom representing a conjunction of several base predicates. The goal states:
             - `atconf(v12, v13)`: Rover v12 at configuration v13. (Initially true)
             - `atconf(v14, v15)`: Rover v14 at configuration v15. (Initially true)
             - `free(v12, v16)`: Rover v12 has free storage v16. (Initially true, but sampling rocks will make it `full`, so if we need to sample more than one rock, we need to `drop_rock` or ensure we have multiple free stores which we don't here. However, `new-axiom@0()` doesn't require `full` to be false, just `free` to be true. The requirement for `free` is effectively a snapshot of the initial state, *unless* the goal implies that `free` must remain true *throughout* the plan, which is usually not the case for goals. Let's assume the final state should have `free(v12, v16)` and `free(v14, v16)`. If we sample, we will make it `full`, so we must `drop_rock` to make it `free` again if we want to satisfy this part of the axiom at the end. )
             - `free(v14, v16)`: Rover v14 has free storage v16. (Initially true, similar consideration as above).
             - `receivedimage(v17, v11)`
             - `receivedimage(v18, v11)`
             - `receivedimage(v19, v11)`
             - `receivedimage(v20, v11)`: All four objectives images received.
             - `type(?stone, v2)` and `receivedanalysis(?stone)`: At least one rock of type v2 analyzed and received.
             - `type(?soil, v6)` and `receivedanalysis(?soil)`: At least one rock of type v6 analyzed and received.
           
           The issue with the previous plan was that I used `sample_rock` for both rocks of type v2 and v6 on `v14` without dropping them. When a rover `sample_rock`, its storage becomes `full` and no longer `free`. To fulfill `free(v14, v16)` in the final state, I need to `drop_rock` after sampling and sending analysis. The same applies to `v12` if it were to sample.
           
           Let's refine the plan to address the `free` predicate.
           
           **Strategy for Images (Rover v12):**
           1. Move v12 to #o3.
           2. Calibrate, take, and send images for v17, v18, v19, v20. (Requires moving to #q1 for communication).
           
           **Strategy for Rock Analysis (Rover v14):**
           1. Move v14 to #o5 (where it is above multiple rocks).
           2. Sample a rock of type v2 (e.g., v1).
           3. Move v14 to #q2 for communication.
           4. Send analysis for v1.
           5. Drop v1 to free storage.
           6. Move v14 back to #o5 (if necessary, though #o5 is a continuous parameter, assuming it means "above the rocks").
           7. Sample a rock of type v6 (e.g., v5).
           8. Move v14 to #q2 (already there).
           9. Send analysis for v5.
           10. Drop v5 to free storage.
           
           Let's check the initial `atconf` states for `v12` and `v14` again. `atconf(v12, v13)` and `atconf(v14, v15)` are true. The axiom requires these to be true at the final state. If the rover moves to a different configuration, it should return to the original configuration if the final state requires it. However, the goal does not require the *initial* configuration, but rather that some configuration exists for the rovers to be at, and that those specific configurations `v13` and `v15` are valid `conf` objects. My bad, `atconf(v12, v13)` and `atconf(v14, v15)` are required *in the final state*. This means after all operations, rovers should return to their initial configurations.
           
           Revised plan considering all points:
           
           **Rover v12 (Images):**
           1. Move v12 from v13 to #o3.
           2. Calibrate camera for v19, take image of v19.
           3. Calibrate camera for v20, take image of v20.
           4. Calibrate camera for v17, take image of v17.
           5. Calibrate camera for v18, take image of v18.
           6. Move v12 from #o3 to #q1 (for communication).
           7. Send all four images.
           8. Move v12 from #q1 back to v13 (original config).
           
           **Rover v14 (Rock Analysis):**
           1. Move v14 from v15 to #o5 (for sampling).
           2. Sample rock v1 (type v2).
           3. Move v14 from #o5 to #q2 (for communication).
           4. Send analysis for v1.
           5. Drop rock v1.
           6. Move v14 from #q2 to #o5 (to sample another rock).
           7. Sample rock v5 (type v6).
           8. Move v14 from #o5 to #q2 (already there, if not, move).
           9. Send analysis for v5.
           10. Drop rock v5.
           11. Move v14 from #q2 back to v15 (original config).
           
           Let's check specific move actions:
           - `(move v12 v13 #o2 #o3)`
           - `(move v12 #o3 #o2 #q1)`
           - `(move v12 #q1 #t5 v13)`
           - `(move v14 v15 #o2 #o5)`
           - `(move v14 #o5 #o2 #q2)`
           - `(move v14 #q2 #t9 v15)`
           
           This detailed path for rovers is critical.
           
           --Plan--:
           (move v12 v13 #o2 #o3)
           (calibrate v12 #o3 #o4 v19 v10)
           (take_image v12 #o3 #o4 v19 v10 v11)
           (calibrate v12 #o3 #o4 v20 v10)
           (take_image v12 #o3 #o4 v20 v10 v11)
           (calibrate v12 #o3 #o4 v17 v10)
           (take_image v12 #o3 #o4 v17 v10 v11)
           (calibrate v12 #o3 #o4 v18 v10)
           (take_image v12 #o3 #o4 v18 v10 v11)
           (move v12 #o3 #o2 #q1)
           (send_image v12 #q1 #y0 v9 v19 v11)
           (send_image v12 #q1 #y0 v9 v20 v11)
           (send_image v12 #q1 #y0 v9 v17 v11)
           (send_image v12 #q1 #y0 v9 v18 v11)
           (move v12 #q1 #t5 v13)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v1 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q2 #o2 #o5)
           (sample_rock v14 #o5 v5 v16)
           (move v14 #o5 #o2 #q2)
           (send_analysis v14 #q2 #y1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q2 #t9 v15)

