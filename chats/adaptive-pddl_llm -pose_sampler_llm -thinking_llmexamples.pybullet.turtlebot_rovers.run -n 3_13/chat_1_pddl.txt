User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v14, v16)
           Atom rock(v8)
           Atom objective(v18)
           Atom rock(v1)
           Atom atconf(v12, v13)
           Atom lander(v9)
           Atom objective(v17)
           Atom store(v16)
           Atom rock(v5)
           Atom rover(v14)
           Atom type(v1, v2)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom type(v8, v6)
           Atom conf(v12, v13)
           Atom objective(v19)
           Atom supports(v10, v11)
           Atom rock(v7)
           Atom rock(v3)
           Atom free(v12, v16)
           Atom conf(v14, v15)
           Atom onboard(v10, v14)
           Atom rock(v4)
           Atom type(v7, v6)
           Atom camera(v10)
           Atom type(v5, v6)
           Atom rover(v12)
           Atom atconf(v14, v15)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v1)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v8)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom above(v14, #o5, v4)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v5)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v12, v13, #o2, #o0)
           Atom motion(v12, #o0, #o2, #o0)
           Atom motion(v12, #o0, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o0)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o0, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o0)
           Atom motion(v14, v15, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o5)
           Atom motion(v14, #o0, #o2, #o0)
           Atom motion(v14, #o3, #o2, #o0)
           Atom motion(v14, #o0, #o2, v15)
           Atom motion(v14, #o0, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o0)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o0, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o0 #o2 #o0))
           ((move v12 #o0 #o2 #o3))
           ((move v12 #o0 #o2 #o5))
           ((move v12 #o0 #o2 v13))
           ((move v12 #o3 #o2 #o0))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o0))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 v13))
           ((move v12 v13 #o2 #o0))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 v13))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #o0 #o1 v9 v1))
           ((send_analysis v12 #o0 #o1 v9 v3))
           ((send_analysis v12 #o0 #o1 v9 v4))
           ((send_analysis v12 #o0 #o1 v9 v5))
           ((send_analysis v12 #o0 #o1 v9 v7))
           ((send_analysis v12 #o0 #o1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #o0 #o1 v9 v17 v11))
           ((send_image v12 #o0 #o1 v9 v18 v11))
           ((send_image v12 #o0 #o1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Finalized Plan for new-axiom@0()**
           
           Alright, let's get this done. I need to achieve `new-axiom@0()` in the `rovers` domain. The initial state gives me a head start: `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` are all already true. My goal boils down to three `receivedimage` goals and two `receivedanalysis` goals. Specifically, I need images of objectives `v17`, `v18`, and `v19` using mode `v11`, and I need to analyze a rock of type `v2` and a rock of type `v6`. I'll designate rock `v1` (type v2) and rock `v8` (type v6) for analysis, which are initially present.
           
           Here's the finalized plan I've meticulously crafted:
           
           **Phase 1: Image Acquisition & Sending** (using rover `v12`):
           
           1.  **Move** `v12` to `#o3` (imaging configuration) to get ready for taking photos: `move v12 v13 #o2 #o3`.
           2.  **Calibrate** camera `v10` on `v12` for `v17`: `calibrate v12 #o3 #o4 v17 v10`.
           3.  **Take image** of `v17`: `take_image v12 #o3 #o4 v17 v10 v11`.
           4.  **Calibrate** camera `v10` again on `v12` (since the camera gets uncalibrated after each `take_image`).
               `calibrate v12 #o3 #o4 v18 v10`.
           5.  **Take image** of `v18`: `take_image v12 #o3 #o4 v18 v10 v11`.
           6.  **Calibrate** camera `v10` yet again: `calibrate v12 #o3 #o4 v19 v10`.
           7.  **Take image** of `v19`: `take_image v12 #o3 #o4 v19 v10 v11`.
           8.  **Move** `v12` to `#o0` (communication configuration): `move v12 #o3 #o2 #o0`.
           9.  **Send image** of `v17` to `v9` (the lander): `send_image v12 #o0 #o1 v9 v17 v11`.
           10. **Send image** of `v18` to `v9`: `send_image v12 #o0 #o1 v9 v18 v11`.
           11. **Send image** of `v19` to `v9`: `send_image v12 #o0 #o1 v9 v19 v11`.
           
           **Phase 2: Rock Sampling & Analysis Sending** (continuing to use `v12`):
           
           1.  **Move** `v12` to `#o5` (rock sampling configuration): `move v12 #o0 #o2 #o5`.
           2.  **Sample** rock `v1`: `sample_rock v12 #o5 v1 v16` (store v16 gets full, now).
           3.  **Move** `v12` back to `#o0`: `move v12 #o5 #o2 #o0`.
           4.  **Send analysis** of `v1` to `v9`: `send_analysis v12 #o0 #o1 v9 v1`.
           5.  **Drop** rock `v1`: `drop_rock v12 v16` (to regain `free` for the store).
           6.  **Move** `v12` back to `#o5`: `move v12 #o0 #o2 #o5`.
           7.  **Sample** rock `v8`: `sample_rock v12 #o5 v8 v16` (store v16 gets full again).
           8.  **Move** `v12` back to `#o0`: `move v12 #o5 #o2 #o0`.
           9.  **Send analysis** of `v8` to `v9`: `send_analysis v12 #o0 #o
)

Model:     **Finalized Plan for new-axiom@0()**
           
           Alright, let's get this done. I need to achieve `new-axiom@0()` in the `rovers` domain. The initial state gives me a head start: `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)` are all already true. My goal boils down to three `receivedimage` goals and two `receivedanalysis` goals. Specifically, I need images of objectives `v17`, `v18`, and `v19` using mode `v11`, and I need to analyze a rock of type `v2` and a rock of type `v6`. I'll designate rock `v1` (type v2) and rock `v8` (type v6) for analysis, which are initially present.
           
           Here's the finalized plan I've meticulously crafted:
           
           **Phase 1: Image Acquisition & Sending** (using rover `v12`):
           
           1.  **Move** `v12` to `#o3` (imaging configuration) to get ready for taking photos: `move v12 v13 #o2 #o3`.
           2.  **Calibrate** camera `v10` on `v12` for `v17`: `calibrate v12 #o3 #o4 v17 v10`.
           3.  **Take image** of `v17`: `take_image v12 #o3 #o4 v17 v10 v11`.
           4.  **Calibrate** camera `v10` again on `v12` (since the camera gets uncalibrated after each `take_image`).
               `calibrate v12 #o3 #o4 v18 v10`.
           5.  **Take image** of `v18`: `take_image v12 #o3 #o4 v18 v10 v11`.
           6.  **Calibrate** camera `v10` yet again: `calibrate v12 #o3 #o4 v19 v10`.
           7.  **Take image** of `v19`: `take_image v12 #o3 #o4 v19 v10 v11`.
           8.  **Move** `v12` to `#o0` (communication configuration): `move v12 #o3 #o2 #o0`.
           9.  **Send image** of `v17` to `v9` (the lander): `send_image v12 #o0 #o1 v9 v17 v11`.
           10. **Send image** of `v18` to `v9`: `send_image v12 #o0 #o1 v9 v18 v11`.
           11. **Send image** of `v19` to `v9`: `send_image v12 #o0 #o1 v9 v19 v11`.
           
           **Phase 2: Rock Sampling & Analysis Sending** (continuing to use `v12`):
           
           1.  **Move** `v12` to `#o5` (rock sampling configuration): `move v12 #o0 #o2 #o5`.
           2.  **Sample** rock `v1`: `sample_rock v12 #o5 v1 v16` (store v16 gets full, now).
           3.  **Move** `v12` back to `#o0`: `move v12 #o5 #o2 #o0`.
           4.  **Send analysis** of `v1` to `v9`: `send_analysis v12 #o0 #o1 v9 v1`.
           5.  **Drop** rock `v1`: `drop_rock v12 v16` (to regain `free` for the store).
           6.  **Move** `v12` back to `#o5`: `move v12 #o0 #o2 #o5`.
           7.  **Sample** rock `v8`: `sample_rock v12 #o5 v8 v16` (store v16 gets full again).
           8.  **Move** `v12` back to `#o0`: `move v12 #o5 #o2 #o0`.
           9.  **Send analysis** of `v8` to `v9`: `send_analysis v12 #o0 #o

