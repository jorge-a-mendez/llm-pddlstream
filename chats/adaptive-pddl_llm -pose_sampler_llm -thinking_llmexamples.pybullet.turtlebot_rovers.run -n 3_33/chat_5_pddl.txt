User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom mode(v11)
           Atom rock(v1)
           Atom camera(v10)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom rock(v4)
           Atom lander(v9)
           Atom type(v4, v2)
           Atom type(v7, v6)
           Atom rock(v5)
           Atom conf(v14, v15)
           Atom objective(v19)
           Atom supports(v10, v11)
           Atom atconf(v14, v15)
           Atom type(v3, v2)
           Atom objective(v17)
           Atom rock(v7)
           Atom rover(v14)
           Atom free(v12, v16)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom onboard(v10, v12)
           Atom atconf(v12, v13)
           Atom type(v5, v6)
           Atom conf(v12, v13)
           Atom rock(v3)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom objective(v18)
           Atom store(v16)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q8, #y6, v18)
           Atom imagerange(v12, #q8, v18)
           Atom conf(v12, #q8)
           Atom ray(#y6)
           Atom above(v12, #q6, v1)
           Atom conf(v12, #q6)
           Atom above(v12, #q11, v8)
           Atom conf(v12, #q11)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom above(v12, #q9, v4)
           Atom conf(v12, #q9)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q4, #y3, v17)
           Atom imagerange(v14, #q4, v17)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom imagevisible(v12, #q7, #y5, v17)
           Atom imagerange(v12, #q7, v17)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q5, #y4, v19)
           Atom imagerange(v14, #q5, v19)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom imagevisible(v12, #q10, #y7, v19)
           Atom imagerange(v12, #q10, v19)
           Atom conf(v12, #q10)
           Atom ray(#y7)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom above(v14, #o5, v5)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom motion(v12, v13, #t22, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #t10, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, v15, #t5, #q0)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t0, v15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q0, #t7, #q1)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q7, #t18, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q2, #t24, #q11)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q9, #t13, #q2)
           Atom motion(v12, #q7, #t14, #q2)
           Atom motion(v12, #q11, #t23, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #t3, v13)
           Atom motion(v12, #q10, #t16, #q2)
           Atom motion(v12, #q2, #t12, #q9)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q2, #t20, #q6)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q5, #t9, #q1)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #t19, #q7)
           Atom motion(v12, v13, #t11, #q8)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #t15, #q2)
           Atom motion(v14, #q4, #t8, #q1)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, v15, #t6, #q4)
           Atom motion(v14, #q4, #t25, #q5)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q0, #t21, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, v13, #t4, #q3)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q9)
           Atom motion(v12, #q2, #t1, #q3)
           Atom motion(v12, #q9, #o2, #q3)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q6, #t17, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q3, #t2, #q2)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q1, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v12 #q6 v1 v16))
           ((sample_rock v12 #q9 v4 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t16 #q2))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t23 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #t1 #q3))
           ((move v12 #q2 #t12 #q9))
           ((move v12 #q2 #t20 #q6))
           ((move v12 #q2 #t24 #q11))
           ((move v12 #q2 #t3 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 #q9))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t2 #q2))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t17 #q3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t14 #q2))
           ((move v12 #q7 #t18 #q10))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t15 #q2))
           ((move v12 #q8 #t19 #q7))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q3))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t13 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q7))
           ((move v12 v13 #t11 #q8))
           ((move v12 v13 #t22 #q9))
           ((move v12 v13 #t4 #q3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t21 #q4))
           ((move v14 #q0 #t7 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #t0 v15))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t25 #q5))
           ((move v14 #q4 #t8 #q1))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t9 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t5 #q0))
           ((move v14 v15 #t6 #q4))
           ((calibrate v12 #q10 #y7 v19 v10))
           ((calibrate v12 #q7 #y5 v17 v10))
           ((calibrate v12 #q8 #y6 v18 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q4 #y3 v17 v10))
           ((calibrate v14 #q5 #y4 v19 v10))
           ((take_image v12 #q10 #y7 v19 v10 v11))
           ((take_image v12 #q7 #y5 v17 v10 v11))
           ((take_image v12 #q8 #y6 v18 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q4 #y3 v17 v10 v11))
           ((take_image v14 #q5 #y4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, here's the plan I've cooked up to get that `new-axiom@0()` axiom to hold true. It's all about coordinating two rovers, `v12` and `v14`, to nail those image and analysis requirements.
           
           First things first, I've got to break down what `new-axiom@0()` wants: a combination of image data, rock analysis, and the rovers in their starting spots. Looking at the axiom's definition, I see a set of conditions that need to be true. I then check the initial state to see which of those conditions are already satisfied and which I'll need to work on. It looks like I need to get images of objects `v17`, `v18`, and `v19`, as well as analyze and send data from a rock of type `v2` and a rock of type `v6`.
           
           I'll use rover `v14` as the imaging specialist and `v12` as the geologist. I can get to work on the action descriptions.
           
           **Imaging with Rover v14:**
           
           My first thought is to use `v14` for imaging, as it's the most straightforward path to success, so I'll put it to work with its camera and get these images.
           
           1.  **Image v18:** First, move `v14` to a spot where `v18` is visible. Then I'll calibrate the camera, take the picture, and then send it back to base.
           2.  **Image v17:** Rover `v14` gets moved to take the photo and sends the image as before.
           3.  **Image v19:** Repeat.
           
           **Analyzing Rocks with Rover v12:**
           
           Then, it's back to rover `v12`. Here's where I need to get some rock samples analyzed. I see there's an action, `sample_rock`.
           
           1.  **Rock Type v2 (e.g., v1):** Move rover `v12` above a rock of type `v2`, in this case rock `v1`, sample it, and send the analysis.
           2.  **Rock Type v6 (e.g., v5):** Move rover `v12` above a rock of type `v6`, in this case rock `v5`, sample it, and send the analysis.
           
           **Finishing Touches:**
           
           Once all the imaging and analysis are complete, both rovers have to return to their initial configurations to fully satisfy the axiom. So, it's just a matter of moving them back to their starting spots. Also, the rover must be free of the material sampled, so a new action is added.
           
           **Detailed Step-by-Step Plan (with reasoning):**
           
           So, with all that in mind, here's my detailed step-by-step plan:
           
           **Rover v14 (Imaging):**
           
           1.  `move(v14, v15, #t5, #q0)`
               *   State: `atconf(v14, #q0)`
           2.  `calibrate(v14, #q0, #y0, v18, v10)`
               *   State: `calibrated(v10, v14)`
           3.  `take_image(v14, #q0, #y0, v18, v10, v11)`
               *   State: `haveimage(v14, v18, v11)`, `~calibrated(v10, v14)`
           4.  `move(v14, #q0, #t7, #q1)`
               *   State: `atconf(v14, #q1)`
           5.  `send_image(v14, #q1, #y1, v9, v18, v11)`
               *   State: `receivedimage(v18, v11)`
           6.  `move(v14, #q1, #o2, #q4)`
               *   State: `atconf(v14, #q4)`
           7.  `calibrate(v14, #q4, #y3, v17, v10)`
               *   State: `calibrated(v10, v14)`
           8.  `take_image(v14, #q4, #y3, v17, v10, v11)`
               *   State: `haveimage(v1
)

Model:     **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, here's the plan I've cooked up to get that `new-axiom@0()` axiom to hold true. It's all about coordinating two rovers, `v12` and `v14`, to nail those image and analysis requirements.
           
           First things first, I've got to break down what `new-axiom@0()` wants: a combination of image data, rock analysis, and the rovers in their starting spots. Looking at the axiom's definition, I see a set of conditions that need to be true. I then check the initial state to see which of those conditions are already satisfied and which I'll need to work on. It looks like I need to get images of objects `v17`, `v18`, and `v19`, as well as analyze and send data from a rock of type `v2` and a rock of type `v6`.
           
           I'll use rover `v14` as the imaging specialist and `v12` as the geologist. I can get to work on the action descriptions.
           
           **Imaging with Rover v14:**
           
           My first thought is to use `v14` for imaging, as it's the most straightforward path to success, so I'll put it to work with its camera and get these images.
           
           1.  **Image v18:** First, move `v14` to a spot where `v18` is visible. Then I'll calibrate the camera, take the picture, and then send it back to base.
           2.  **Image v17:** Rover `v14` gets moved to take the photo and sends the image as before.
           3.  **Image v19:** Repeat.
           
           **Analyzing Rocks with Rover v12:**
           
           Then, it's back to rover `v12`. Here's where I need to get some rock samples analyzed. I see there's an action, `sample_rock`.
           
           1.  **Rock Type v2 (e.g., v1):** Move rover `v12` above a rock of type `v2`, in this case rock `v1`, sample it, and send the analysis.
           2.  **Rock Type v6 (e.g., v5):** Move rover `v12` above a rock of type `v6`, in this case rock `v5`, sample it, and send the analysis.
           
           **Finishing Touches:**
           
           Once all the imaging and analysis are complete, both rovers have to return to their initial configurations to fully satisfy the axiom. So, it's just a matter of moving them back to their starting spots. Also, the rover must be free of the material sampled, so a new action is added.
           
           **Detailed Step-by-Step Plan (with reasoning):**
           
           So, with all that in mind, here's my detailed step-by-step plan:
           
           **Rover v14 (Imaging):**
           
           1.  `move(v14, v15, #t5, #q0)`
               *   State: `atconf(v14, #q0)`
           2.  `calibrate(v14, #q0, #y0, v18, v10)`
               *   State: `calibrated(v10, v14)`
           3.  `take_image(v14, #q0, #y0, v18, v10, v11)`
               *   State: `haveimage(v14, v18, v11)`, `~calibrated(v10, v14)`
           4.  `move(v14, #q0, #t7, #q1)`
               *   State: `atconf(v14, #q1)`
           5.  `send_image(v14, #q1, #y1, v9, v18, v11)`
               *   State: `receivedimage(v18, v11)`
           6.  `move(v14, #q1, #o2, #q4)`
               *   State: `atconf(v14, #q4)`
           7.  `calibrate(v14, #q4, #y3, v17, v10)`
               *   State: `calibrated(v10, v14)`
           8.  `take_image(v14, #q4, #y3, v17, v10, v11)`
               *   State: `haveimage(v1

