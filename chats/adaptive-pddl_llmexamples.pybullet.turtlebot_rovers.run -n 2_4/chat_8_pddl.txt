User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t1: object
           #t10: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t4: object
           #t6: object
           #t7: object
           #y0: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v21: object
           v22: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v7, v6)
           Atom conf(v12, v13)
           Atom onboard(v10, v14)
           Atom rock(v7)
           Atom rock(v8)
           Atom rock(v3)
           Atom rover(v12)
           Atom ~test-cfree-ray-conf-negative(v22, v14, v15)
           Atom type(v8, v6)
           Atom rock(v5)
           Atom free(v12, v16)
           Atom atconf(v14, v15)
           Atom rock(v1)
           Atom rock(v4)
           Atom atconf(v12, v13)
           Atom supports(v10, v11)
           Atom rover(v14)
           Atom conf(v14, v15)
           Atom objective(v17)
           Atom objective(v18)
           Atom lander(v9)
           Atom store(v16)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom type(v1, v2)
           Atom type(v5, v6)
           Atom ~test-cfree-ray-conf-negative(v20, v14, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v1)
           Atom comvisible(v14, #q3, #y3, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y3)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #o5, v8)
           Atom above(v14, #q8, v7)
           Atom conf(v14, #q8)
           Atom above(v14, #o5, v5)
           Atom above(v12, #q5, v7)
           Atom conf(v12, #q5)
           Atom comvisible(v12, v19, v20, v9)
           Atom comrange(v12, v19, v9)
           Atom conf(v12, v19)
           Atom ray(v20)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v5)
           Atom imagevisible(v12, #q7, #y5, v17)
           Atom imagerange(v12, #q7, v17)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v4)
           Atom above(v12, #q4, v3)
           Atom conf(v12, #q4)
           Atom comvisible(v12, v21, v22, v9)
           Atom comrange(v12, v21, v9)
           Atom conf(v12, v21)
           Atom ray(v22)
           Atom motion(v12, v13, #o2, v19)
           Atom motion(v12, v19, #o2, v19)
           Atom motion(v12, v19, #t22, v13)
           Atom motion(v12, #q7, #t17, v19)
           Atom motion(v12, v13, #t20, #q7)
           Atom motion(v12, v19, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #t1, v15)
           Atom motion(v14, v15, #t2, #q0)
           Atom motion(v14, #q0, #t4, #q3)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q3, #t10, #q0)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q4, #t19, v19)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v19, #t15, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q7, #t23, #q4)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, v13, #t7, #q5)
           Atom motion(v12, v19, #t26, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #t13, #q5)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #t24, v19)
           Atom motion(v12, #q5, #t14, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q3, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #t21, #q8)
           Atom motion(v14, #q8, #t18, #q3)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #t16, v19)
           Atom motion(v12, v19, #t25, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #t12, #q6)
           Atom motion(v12, v19, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v19)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q3, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q4 v3 v16))
           ((sample_rock v12 #q5 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q8 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #o5 #o2 v19))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t13 #q5))
           ((move v12 #q4 #t19 v19))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #t14 v13))
           ((move v12 #q5 #t24 v19))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t16 v19))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t17 v19))
           ((move v12 #q7 #t23 #q4))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #o2 v19))
           ((move v12 v13 #t12 #q6))
           ((move v12 v13 #t20 #q7))
           ((move v12 v13 #t6 #q4))
           ((move v12 v13 #t7 #q5))
           ((move v12 v19 #o2 #o5))
           ((move v12 v19 #o2 #q7))
           ((move v12 v19 #o2 v19))
           ((move v12 v19 #t15 #q4))
           ((move v12 v19 #t22 v13))
           ((move v12 v19 #t25 #q6))
           ((move v12 v19 #t26 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t4 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q8))
           ((move v14 #q3 #t1 v15))
           ((move v14 #q3 #t10 #q0))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t18 #q3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t2 #q0))
           ((move v14 v15 #t21 #q8))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v12 #q7 #y5 v17 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v12 #q7 #y5 v17 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 v19 v20 v9 v1))
           ((send_analysis v12 v19 v20 v9 v4))
           ((send_analysis v12 v19 v20 v9 v5))
           ((send_analysis v12 v19 v20 v9 v8))
           ((send_analysis v12 v19 v20 v9 v3))
           ((send_analysis v12 v19 v20 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y3 v9 v1))
           ((send_analysis v14 #q3 #y3 v9 v3))
           ((send_analysis v14 #q3 #y3 v9 v4))
           ((send_analysis v14 #q3 #y3 v9 v5))
           ((send_analysis v14 #q3 #y3 v9 v8))
           ((send_analysis v14 #q3 #y3 v9 v7))
           ((send_image v12 v19 v20 v9 v18 v11))
           ((send_image v12 v19 v20 v9 v17 v11))
           ((send_image v14 #q3 #y3 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The problem requires achieving the goal state represented by `new-axiom@0()`. This axiom is a conjunction of several conditions related to two rovers (v12 and v14), a storage unit (v16), a mode (v11), and various rocks (v1, v3, v4, v5, v7, v8) of types v2 (stone) and v6 (soil).
           
           Specifically, `new-axiom@0()` requires:
           1.  `atconf(v12, v13)`: Rover v12 must be at configuration v13. This is true in the initial state.
           2.  `atconf(v14, v15)`: Rover v14 must be at configuration v15. This is true in the initial state.
           3.  `free(v12, v16)`: Rover v12 must have a free storage unit v16. This is true in the initial state.
           4.  `free(v14, v16)`: Rover v14 must have a free storage unit v16. This is true in the initial state.
           5.  `receivedimage(v17, v11)`: An image of objective v17 in mode v11 must be received.
           6.  `receivedimage(v18, v11)`: An image of objective v18 in mode v11 must be received.
           7.  `type(?stone, v2)`: Some rock of type v2 (stone). This refers to v1, v3, v4.
           8.  `receivedanalysis(?stone)`: This means at least one rock of type v2 (stone) must be analyzed and the analysis received.
           9.  `type(?soil, v6)`: Some rock of type v6 (soil). This refers to v5, v7, v8.
           10. `receivedanalysis(?soil)`: This means at least one rock of type v6 (soil) must be analyzed and the analysis received.
           
           Let's break down the required actions:
           
           **For `receivedimage(v17, v11)`:**
           *   Rover v12 can take an image of v17 with camera v10 in mode v11 at configuration `#q7` using ray `#y5`.
           *   Pre-requisites: `atconf(v12, #q7)`, `calibrated(v10, v12)`.
           *   After taking the image, `haveimage(v12, v17, v11)` will be true.
           *   Then, Rover v12 needs to send this image. It can do so at configuration `v19` using ray `v20` to lander `v9`.
           *   Pre-requisites: `atconf(v12, v19)`, `comvisible(v12, v19, v20, v9)`.
           
           **For `receivedimage(v18, v11)`:**
           *   Rover v12 can take an image of v18 with camera v10 in mode v11 at configuration `#q6` using ray `#y4`.
           *   Pre-requisites: `atconf(v12, #q6)`, `calibrated(v10, v12)`.
           *   Alternatively, Rover v14 can take an image of v18 with camera v10 in mode v11 at configuration `#q0` using ray `#y0`.
           *   Pre-requisites: `atconf(v14, #q0)`, `calibrated(v10, v14)`.
           *   After taking the image, `haveimage(v12, v18, v11)` or `haveimage(v14, v18, v11)` will be true.
           *   Then, the respective rover needs to send this image. Rover v12 can send it at `v19` using `v20` to `v9`. Rover v14 can send it at `#q3` using `#y3` to `v9`.
           
           **For `receivedanalysis(?stone)` and `receivedanalysis(?soil)`:**
           We need to analyze one rock of type v2 (stone) and one rock of type v6 (soil).
           *   Rocks of type v2 (stone): v1, v3, v4.
           *   Rocks of type v6 (soil): v5, v7, v8.
           
           Let's pick v3 (stone) and v7 (soil).
           *   **Analyze v3 (stone):**
               *   Rover v12 can sample v3 at configuration `#q4`.
               *   Pre-requisites: `atconf(v12, #q4)`, `above(v12, #q4, v3)`, `free(v12, v16)`.
               *   After sampling, `analyzed(v12, v3)` will be true and `full(v12, v16)` will be true.
               *   Then, Rover v12 needs to send the analysis. It can do so at configuration `v19` using ray `v20` to lander `v9`.
               *   Pre-requisites: `atconf(v12, v19)`, `comvisible(v12, v19, v20, v9)`.
           *   **Analyze v7 (soil):**
               *   Rover v12 can sample v7 at configuration `#q5`.
               *   Pre-requisites: `atconf(v12, #q5)`, `above(v12, #q5, v7)`, `free(v12, v16)`.
               *   Alternatively, Rover v14 can sample v7 at configuration `#q8`.
               *   Pre-requisites: `atconf(v14, #q8)`, `above(v14, #q8, v7)`, `free(v14, v16)`.
               *   Let's use v12 for now. After sampling, `analyzed(v12, v7)` will be true and `full(v12, v16)` will be true.
               *   Then, Rover v12 needs to send the analysis at configuration `v19` using ray `v20` to lander `v9`.
               *   Pre-requisites: `atconf(v12, v19)`, `comvisible(v12, v19, v20, v9)`.
           
           **Key points:**
           *   Rover v12 has the camera `v10` onboard.
           *   Rover v14 also has camera `v10` onboard. This implies `v10` is a shared resource, or the domain has a mistake, and `onboard` isn't exclusive. We will assume for now that it can be used by both if stated so.
           *   Both rovers have free storage `v16`. If one samples, its storage becomes full. To sample another rock, the current sample must be dropped or the sample must be sent, and the problem implies sending analysis *does not* free up the storage. The `drop_rock` action is available.
           
           Let's outline a plan:
           
           1.  **Calibrate v10 for v12** to take an image of v17.
               *   Move v12 to `#q7`.
               *   Calibrate v12 at `#q7`.
           2.  **Take image of v17.**
               *   Take image of v17 using v12.
           3.  **Move v12 to a communication configuration and send image of v17.**
               *   Move v12 to `v19`.
               *   Send image of v17.
           4.  **Calibrate v10 for v12** to take an image of v18.
               *   Move v12 to `#q6`.
               *   Calibrate v12 at `#q6`.
           5.  **Take image of v18.**
               *   Take image of v18 using v12.
           6.  **Move v12 to a communication configuration and send image of v18.**
               *   Move v12 to `v19`.
               *   Send image of v18.
           7.  **Sample v3 (stone) with v12.**
               *   Move v12 to `#q4`.
               *   Sample v3. (v12 will be full)
           8.  **Send analysis of v3.**
               *   Move v12 to `v19`.
               *   Send analysis of v3.
           9.  **Drop v3 sample.**
               *   Drop rock v3 (frees v16 for v12).
           10. **Sample v7 (soil) with v12.**
               *   Move v12 to `#q5`.
               *   Sample v7. (v12 will be full)
           11. **Send analysis of v7.**
               *   Move v12 to `v19`.
               *   Send analysis of v7.
           
           This plan uses only rover v12 and covers all requirements.
           
           Let's check the initial state again for atconf for v12: `atconf(v12, v13)`.
           And `calibrated(v10, v12)` is not true initially.
           
           So, the plan needs to start with calibrations and movements.
           
           --Plan--:
           (move v12 v13 #t20 #q7)
           (calibrate v12 #q7 #y5 v17 v10)
           (take_image v12 #q7 #y5 v17 v10 v11)
           (move v12 #q7 #t17 v19)
           (send_image v12 v19 v20 v9 v17 v11)
           (move v12 v19 #t25 #q6)
           (calibrate v12 #q6 #y4 v18 v10)
           (take_image v12 #q6 #y4 v18 v10 v11)
           (move v12 #q6 #t16 v19)
           (send_image v12 v19 v20 v9 v18 v11)
           (move v12 v19 #t15 #q4)
           (sample_rock v12 #q4 v3 v16)
           (move v12 #q4 #t19 v19)
           (send_analysis v12 v19 v20 v9 v3)
           (drop_rock v12 v16)
           (move v12 v19 #t26 #q5)
           (sample_rock v12 #q5 v7 v16)
           (move v12 #q5 #t24 v19)
           (send_analysis v12 v19 v20 v9 v7)

