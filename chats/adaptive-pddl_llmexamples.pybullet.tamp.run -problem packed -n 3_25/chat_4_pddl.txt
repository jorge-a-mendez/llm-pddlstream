User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v12, v10)
           Atom ataconf(v6, v7)
           Atom arm(v6)
           Atom graspable(v12)
           Atom stackable(v12, v16)
           Atom stackable(v14, v10)
           Atom arm(v4)
           Atom supported(v14, v15, v11)
           Atom ataconf(v4, v5)
           Atom bconf(v3)
           Atom atpose(v14, v15)
           Atom stackable(v14, v16)
           Atom aconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom handempty(v4)
           Atom pose(v14, v15)
           Atom controllable(v4)
           Atom graspable(v14)
           Atom atbconf(v3)
           Atom aconf(v6, v7)
           Atom graspable(v8)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom handempty(v6)
           Atom canmove()
           Atom supported(v12, v13, v11)
           Atom atpose(v12, v13)
           Atom pose(v8, v9)
           Atom stackable(v8, v16)
           Atom pose(v12, v13)
           Atom grasp(v12, #g0)
           Atom pose(v14, #p1)
           Atom supported(v14, #p1, v16)
           Atom pose(v8, #p2)
           Atom supported(v8, #p2, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g2)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v14, #g1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v16)
           Atom bconf(#q5)
           Atom atraj(#t10)
           Atom kin(v4, v12, v13, #g0, #q5, #t10)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v8, v9, #g2, #q3, #t3)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v8, #p2, #g2, #q2, #t2)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, #p1, #g1, #q1, #t1)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v14, v15, #g1, #q4, #t4)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, #p0, #g0, #q0, #t0)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q5)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q4, #o0, v3)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q4)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q3)
           Atom btraj(#t12)
           Atom basemotion(#q0, #t12, #q4)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q0)
           Atom btraj(#t11)
           Atom basemotion(#q5, #t11, #q0)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom btraj(#t15)
           Atom basemotion(#q4, #t15, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t14)
           Atom basemotion(#q3, #t14, #q2)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t13)
           Atom basemotion(#q2, #t13, #q5)
           Atom basemotion(#q2, #o0, #q0)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g2, #o3, #o4)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q2, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q4 #t12))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t13))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q2 #t14))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q1 #t15))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q0 #t11))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t5))
           ((move_base v3 #q1 #t6))
           ((move_base v3 #q2 #t7))
           ((move_base v3 #q3 #t8))
           ((move_base v3 #q4 #t9))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q0 #t0))
           ((place v4 v12 #p0 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q5 #t10))
           ((place v4 v12 v13 #g0 #q5 #t10))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 #p1 #g1 #q1 #t1))
           ((place v4 v14 #p1 #g1 #q1 #t1))
           ((pick v4 v14 v15 #g1 #q4 #t4))
           ((place v4 v14 v15 #g1 #q4 #t4))
           ((pick v4 v8 #o2 #g2 #o3 #o4))
           ((place v4 v8 #o2 #g2 #o3 #o4))
           ((pick v4 v8 #p2 #g2 #q2 #t2))
           ((place v4 v8 #p2 #g2 #q2 #t2))
           ((pick v4 v8 v9 #g2 #q3 #t3))
           ((place v4 v8 v9 #g2 #q3 #t3))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The robot needs to place three objects (v8, v12, and v14) on the surface v16. Currently, v14 is on v11 at pose v15, v8 is on v11 at pose v9, and v12 is on v11 at pose v13. The robot arm v4 is handempty and at bconf v3.
           
           To achieve the goal, the robot needs to pick up each object from its current location and place it on v16 at a suitable pose. The available actions show specific `pick` and `place` actions for each object to move to various poses, including `stackable` poses on v16. We need to find the sequence of pick and place actions, including base movements, to move all three objects to v16.
           
           Here's a breakdown for each object:
           *   **Object v14**:
               *   Currently at `atpose(v14, v15)`.
               *   Can be placed at `pose(v14, #p1)` on `v16`.
               *   Available actions: `pick v4 v14 v15 #g1 #q4 #t4` and `place v4 v14 #p1 #g1 #q1 #t1`. This implies base movement from `#q4` to `#q1`.
           *   **Object v12**:
               *   Currently at `atpose(v12, v13)`.
               *   Can be placed at `pose(v12, #p0)` on `v16`.
               *   Available actions: `pick v4 v12 v13 #g0 #q5 #t10` and `place v4 v12 #p0 #g0 #q0 #t0`. This implies base movement from `#q5` to `#q0`.
           *   **Object v8**:
               *   Currently at `atpose(v8, v9)`.
               *   Can be placed at `pose(v8, #p2)` on `v16`.
               *   Available actions: `pick v4 v8 v9 #g2 #q3 #t3` and `place v4 v8 #p2 #g2 #q2 #t2`. This implies base movement from `#q3` to `#q2`.
           
           The robot's arm v4 is ataconf v5 and atbconf v3. We need to sequence these pick and place operations, making sure the base moves to the correct configuration before each pick and place action.
           
           1.  **Move v14 to v16**:
               *   Robot is at `v3`. Move to `#q4` to pick v14.
               *   Pick v14.
               *   Move from `#q4` to `#q1` to place v14.
               *   Place v14.
           2.  **Move v12 to v16**:
               *   Robot is at `#q1`. Move to `#q5` to pick v12.
               *   Pick v12.
               *   Move from `#q5` to `#q0` to place v12.
               *   Place v12.
           3.  **Move v8 to v16**:
               *   Robot is at `#q0`. Move to `#q3` to pick v8.
               *   Pick v8.
               *   Move from `#q3` to `#q2` to place v8.
               *   Place v8.
           
           --Plan--:
           (move_base v3 #q4 #t9)
           (pick v4 v14 v15 #g1 #q4 #t4)
           (move_base #q4 #q1 #t15)
           (place v4 v14 #p1 #g1 #q1 #t1)
           (move_base #q1 #q5 #o0)
           (pick v4 v12 v13 #g0 #q5 #t10)
           (move_base #q5 #q0 #t11)
           (place v4 v12 #p0 #g0 #q0 #t0)
           (move_base #q0 #q3 #o0)
           (pick v4 v8 v9 #g2 #q3 #t3)
           (move_base #q3 #q2 #t14)
           (place v4 v8 #p2 #g2 #q2 #t2)

