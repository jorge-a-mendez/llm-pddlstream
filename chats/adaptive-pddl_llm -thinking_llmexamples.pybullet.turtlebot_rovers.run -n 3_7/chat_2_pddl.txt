User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom lander(v9)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom free(v12, v16)
           Atom type(v4, v2)
           Atom type(v8, v6)
           Atom store(v16)
           Atom objective(v19)
           Atom type(v7, v6)
           Atom camera(v10)
           Atom type(v1, v2)
           Atom type(v3, v2)
           Atom rock(v8)
           Atom conf(v12, v13)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom rock(v3)
           Atom objective(v17)
           Atom onboard(v10, v12)
           Atom rover(v12)
           Atom supports(v10, v11)
           Atom rover(v14)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom rock(v7)
           Atom atconf(v12, v13)
           Atom rock(v5)
           Atom type(v5, v6)
           Atom objective(v18)
           Atom rock(v4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q7, #y2, v18)
           Atom imagerange(v14, #q7, v18)
           Atom conf(v14, #q7)
           Atom ray(#y2)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q1, v5)
           Atom conf(v12, #q1)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v12, #q2, v7)
           Atom conf(v12, #q2)
           Atom above(v12, #q9, v4)
           Atom conf(v12, #q9)
           Atom above(v12, #q4, v8)
           Atom conf(v12, #q4)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom imagevisible(v14, #q10, #y4, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y4)
           Atom comvisible(v12, #q8, #y3, v9)
           Atom comrange(v12, #q8, v9)
           Atom conf(v12, #q8)
           Atom ray(#y3)
           Atom comvisible(v14, #q3, #y0, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y0)
           Atom imagevisible(v14, #q6, #y1, v19)
           Atom imagerange(v14, #q6, v19)
           Atom conf(v14, #q6)
           Atom ray(#y1)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #q0, v3)
           Atom conf(v12, #q0)
           Atom above(v14, #o5, v3)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, v13, #t12, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v14, v15, #t9, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, v13, #t11, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #t8, #q7)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q10, #t19, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #t10, v15)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #t18, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q10)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #t17, #q3)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, v15, #t7, #q6)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v12, #q8, #t0, v13)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q0, #t1, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q1, #t2, #q8)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q4, #t4, #q8)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, v13, #t14, #q4)
           Atom motion(v12, #q9, #t6, #q8)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, v13, #t16, #q9)
           Atom motion(v12, #q9, #o2, #q1)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q2, #t3, #q8)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, v13, #t13, #q2)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, v13, #t15, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #t5, #q8)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q4, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q9)
           Atom motion(v12, #o3, #o2, #q2)
           Atom motion(v12, #q9, #o2, #o3)
           Atom motion(v12, #q8, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #q4)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q1)
           Atom motion(v12, #q2, #o2, #o3)
           Atom motion(v12, #q5, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q0)
           Atom motion(v12, #o3, #o2, #q5)
           Atom motion(v12, #q0, #o2, #o3)
           Atom motion(v12, #q1, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q8)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, v15, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v3 v16))
           ((sample_rock v12 #q1 v5 v16))
           ((sample_rock v12 #q2 v7 v16))
           ((sample_rock v12 #q4 v8 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v12 #q9 v4 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #q0))
           ((move v12 #o3 #o2 #q1))
           ((move v12 #o3 #o2 #q2))
           ((move v12 #o3 #o2 #q4))
           ((move v12 #o3 #o2 #q5))
           ((move v12 #o3 #o2 #q8))
           ((move v12 #o3 #o2 #q9))
           ((move v12 #o3 #o2 v13))
           ((move v12 #q0 #o2 #o3))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q8))
           ((move v12 #q1 #o2 #o3))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t2 #q8))
           ((move v12 #q2 #o2 #o3))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t3 #q8))
           ((move v12 #q4 #o2 #o3))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t4 #q8))
           ((move v12 #q5 #o2 #o3))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t5 #q8))
           ((move v12 #q8 #o2 #o3))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #t0 v13))
           ((move v12 #q9 #o2 #o3))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q1))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t6 #q8))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t11 #q0))
           ((move v12 v13 #t12 #q1))
           ((move v12 v13 #t13 #q2))
           ((move v12 v13 #t14 #q4))
           ((move v12 v13 #t15 #q5))
           ((move v12 v13 #t16 #q9))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t19 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q10))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #t10 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t17 #q3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t18 #q3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t7 #q6))
           ((move v14 v15 #t8 #q7))
           ((move v14 v15 #t9 #q10))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v14 #q10 #y4 v17 v10))
           ((calibrate v14 #q6 #y1 v19 v10))
           ((calibrate v14 #q7 #y2 v18 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v14 #q10 #y4 v17 v10 v11))
           ((take_image v14 #q6 #y1 v19 v10 v11))
           ((take_image v14 #q7 #y2 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q8 #y3 v9 v3))
           ((send_analysis v12 #q8 #y3 v9 v5))
           ((send_analysis v12 #q8 #y3 v9 v7))
           ((send_analysis v12 #q8 #y3 v9 v8))
           ((send_analysis v12 #q8 #y3 v9 v1))
           ((send_analysis v12 #q8 #y3 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y0 v9 v1))
           ((send_analysis v14 #q3 #y0 v9 v3))
           ((send_analysis v14 #q3 #y0 v9 v4))
           ((send_analysis v14 #q3 #y0 v9 v5))
           ((send_analysis v14 #q3 #y0 v9 v7))
           ((send_analysis v14 #q3 #y0 v9 v8))
           ((send_image v12 #q8 #y3 v9 v17 v11))
           ((send_image v12 #q8 #y3 v9 v18 v11))
           ((send_image v12 #q8 #y3 v9 v19 v11))
           ((send_image v14 #q3 #y0 v9 v17 v11))
           ((send_image v14 #q3 #y0 v9 v19 v11))
           ((send_image v14 #q3 #y0 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Detailed Plan to Achieve new-axiom@0()**
           
           Okay, here's my plan to achieve the goal `new-axiom@0()`.  The key is to satisfy the conjunction of all those predicates in the axiom simultaneously.  Let's break it down:  I need to get images for three specific objectives (`v17`, `v18`, `v19`) using mode `v11`, get analyses of a rock of type `v2` and a rock of type `v6`, all while making sure that key preconditions remain true.  My strategy is to utilize rover `v12` to handle both the image capturing and the analysis, maximizing efficiency.
           
           First, I'll need to send the images.
           I will begin by moving the rover `v12` to a location from which it has all image sightlines (`#o3`). From there, I'll use `calibrate` and `take_image` actions to take images of the three objectives (`v17`, `v18`, `v19`) using camera `v10` in mode `v11`. Once I have all images, I'll move `v12` to a communications configuration (`#q8`) and send them using `send_image`.
           
           Next, the analysis of rock samples.
           I'll analyze a rock of type `v2` and a rock of type `v6`. I'll again move `v12` to an accessible location and use the actions `sample_rock` and `send_analysis`, specifically, the rock `v3` as the `v2` rock and `v7` as the `v6` rock. Since rover `v12`'s store (`v16`) can only hold one rock at a time, I'll `drop_rock` after each sample to get the next one. This involves moving, sampling, sending the analysis, dropping, moving, sampling and finally sending the second analysis.
           
           I also have to manage the rover's configuration to achieve the goal:
           After taking care of image and analyses actions, I need to restore the state of the initial configuration to meet the goal condition. This means ensuring that `free(v12, v16)` (after dropping the last rock) and `atconf(v12, v13)` are true at the end. After finishing sampling and analysis, the plan must involve moving `v12` back to its initial location `v13` after the analyses have been sent, and also dropping the last rock that was sampled, so that we again have `free(v12, v16)`. The actions required will have already left `atconf(v14, v15)` and `free(v14, v16)` true, so they will be true at the goal state.
           
           This should give a complete plan. This plan combines the image and rock analysis to save steps.
           
)

Model:     **Detailed Plan to Achieve new-axiom@0()**
           
           Okay, here's my plan to achieve the goal `new-axiom@0()`.  The key is to satisfy the conjunction of all those predicates in the axiom simultaneously.  Let's break it down:  I need to get images for three specific objectives (`v17`, `v18`, `v19`) using mode `v11`, get analyses of a rock of type `v2` and a rock of type `v6`, all while making sure that key preconditions remain true.  My strategy is to utilize rover `v12` to handle both the image capturing and the analysis, maximizing efficiency.
           
           First, I'll need to send the images.
           I will begin by moving the rover `v12` to a location from which it has all image sightlines (`#o3`). From there, I'll use `calibrate` and `take_image` actions to take images of the three objectives (`v17`, `v18`, `v19`) using camera `v10` in mode `v11`. Once I have all images, I'll move `v12` to a communications configuration (`#q8`) and send them using `send_image`.
           
           Next, the analysis of rock samples.
           I'll analyze a rock of type `v2` and a rock of type `v6`. I'll again move `v12` to an accessible location and use the actions `sample_rock` and `send_analysis`, specifically, the rock `v3` as the `v2` rock and `v7` as the `v6` rock. Since rover `v12`'s store (`v16`) can only hold one rock at a time, I'll `drop_rock` after each sample to get the next one. This involves moving, sampling, sending the analysis, dropping, moving, sampling and finally sending the second analysis.
           
           I also have to manage the rover's configuration to achieve the goal:
           After taking care of image and analyses actions, I need to restore the state of the initial configuration to meet the goal condition. This means ensuring that `free(v12, v16)` (after dropping the last rock) and `atconf(v12, v13)` are true at the end. After finishing sampling and analysis, the plan must involve moving `v12` back to its initial location `v13` after the analyses have been sent, and also dropping the last rock that was sampled, so that we again have `free(v12, v16)`. The actions required will have already left `atconf(v14, v15)` and `free(v14, v16)` true, so they will be true at the goal state.
           
           This should give a complete plan. This plan combines the image and rock analysis to save steps.
           

