User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v35: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, 0.015), (0.035, 0.085)).
           Object v9 is a pose with position (-0.022, 0.518, 0.781) and quaternion (0.0, 0.0, 0.808, 0.589).
           Object v19 is a pose with position (0.062, 0.292, 0.781) and quaternion (0.0, 0.0, 0.911, 0.411).
           Object p6 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v17 is a pose with position (0.24, 0.278, 0.781) and quaternion (0.0, 0.0, 0.095, 0.995).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p7 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (0.152, -0.39, 0.781) and quaternion (0.0, 0.0, 0.873, -0.487).
           Object p10 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v13 is a pose with position (-0.049, -0.288, 0.781) and quaternion (0.0, 0.0, 0.331, 0.944).
           Object p8 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p11 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object p5 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.085), (0.035, -0.015)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v16, v17)
           Atom arm(v6)
           Atom pose(v18, v19)
           Atom stackable(v16, v20)
           Atom atpose(v14, v15)
           Atom controllable(v4)
           Atom graspable(v8)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom stackable(v8, v10)
           Atom kin(v35, v42, p8, v37, v38, v39)
           Atom pose(v14, p7)
           Atom handempty(v6)
           Atom pose(v16, p8)
           Atom kin(v35, v36, p10, v37, v38, v39)
           Atom pose(v12, p11)
           Atom kin(v35, v42, p13, v37, v38, v39)
           Atom atpose(v18, v19)
           Atom pose(v12, p6)
           Atom supported(v8, p10, v20)
           Atom kin(v35, v41, p12, v37, v38, v39)
           Atom pose(v16, p13)
           Atom atbconf(v3)
           Atom pose(v14, p12)
           Atom ataconf(v6, v7)
           Atom stackable(v18, v20)
           Atom supported(v8, p5, v20)
           Atom kin(v35, v36, p5, v37, v38, v39)
           Atom stackable(v14, v10)
           Atom ataconf(v4, v5)
           Atom kin(v35, v40, p6, v37, v38, v39)
           Atom supported(v16, p13, v20)
           Atom bconf(v3)
           Atom supported(v18, p14, v20)
           Atom stackable(v18, v10)
           Atom stackable(v8, v20)
           Atom supported(v16, p8, v20)
           Atom supported(v14, p7, v20)
           Atom pose(v18, p9)
           Atom supported(v14, v15, v11)
           Atom pose(v8, p5)
           Atom arm(v4)
           Atom graspable(v14)
           Atom supported(v12, p6, v20)
           Atom stackable(v16, v10)
           Atom graspable(v18)
           Atom supported(v18, p9, v20)
           Atom canmove()
           Atom aconf(v4, v5)
           Atom supported(v14, p12, v20)
           Atom supported(v12, p11, v20)
           Atom kin(v35, v41, p7, v37, v38, v39)
           Atom kin(v35, v43, p14, v37, v38, v39)
           Atom graspable(v12)
           Atom pose(v8, p10)
           Atom supported(v8, v9, v11)
           Atom supported(v18, v19, v11)
           Atom kin(v35, v43, p9, v37, v38, v39)
           Atom pose(v16, v17)
           Atom stackable(v14, v20)
           Atom atpose(v8, v9)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom pose(v14, v15)
           Atom supported(v16, v17, v11)
           Atom stackable(v12, v20)
           Atom kin(v35, v40, p11, v37, v38, v39)
           Atom atpose(v12, v13)
           Atom pose(v18, p14)
           Atom aconf(v6, v7)
           Atom graspable(v16)
           Atom grasp(v16, #g4)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v20)
           Atom supported(v14, #o2, v10)
           Atom grasp(v12, #g1)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom grasp(v18, #g2)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v14, #g3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom supported(v18, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v16, #o2, v20)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #g0)
           Atom bconf(#q9)
           Atom atraj(#t15)
           Atom kin(v4, v16, p13, #g4, #q9, #t15)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v16, v17, #g4, #q5, #t5)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, p8, #g4, #o3, #o4)
           Atom bconf(#q8)
           Atom atraj(#t14)
           Atom kin(v4, v12, p11, #g1, #q8, #t14)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g1, #q1, #t1)
           Atom kin(v4, v12, p6, #g1, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v18, p14, #g2, #q2, #t2)
           Atom bconf(#q7)
           Atom atraj(#t13)
           Atom kin(v4, v18, v19, #g2, #q7, #t13)
           Atom kin(v4, v18, p9, #g2, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v14, v15, #g3, #q3, #t3)
           Atom kin(v4, v14, p7, #g3, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v14, p12, #g3, #q4, #t4)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q6)
           Atom atraj(#t12)
           Atom kin(v4, v8, p10, #g0, #q6, #t12)
           Atom kin(v4, v8, p5, #g0, #o3, #o4)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q8, #o0, #q5)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q5)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, #q8)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q0)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q8, #o0, #q4)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q4, #o0, #q9)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q4, #o0, #q8)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q3, #o0, #q0)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q3)
           Atom basemotion(#q3, #o0, #q8)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q9, #o0, #q2)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q2)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q8)
           Atom basemotion(#q9, #o0, #q1)
           Atom basemotion(#q7, #o0, #q1)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q8, #o0, #q1)
           Atom basemotion(#q1, #o0, #q9)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q7)
           Atom kin(v4, v18, #o2, #g2, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v16, #o2, #g4, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g3, #o3, #o4)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q4, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 #q8 #o0))
           ((move_base #q1 #q9 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 #q8 #o0))
           ((move_base #q4 #q9 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q1 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q1 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t10))
           ((move_base v3 #q5 #t11))
           ((move_base v3 #q0 #t6))
           ((move_base v3 #q1 #t7))
           ((move_base v3 #q2 #t8))
           ((move_base v3 #q3 #t9))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p11 #g1 #q8 #t14))
           ((place v4 v12 p11 #g1 #q8 #t14))
           ((pick v4 v12 p6 #g1 #o3 #o4))
           ((place v4 v12 p6 #g1 #o3 #o4))
           ((pick v4 v12 v13 #g1 #q1 #t1))
           ((place v4 v12 v13 #g1 #q1 #t1))
           ((pick v4 v14 #o2 #g3 #o3 #o4))
           ((place v4 v14 #o2 #g3 #o3 #o4))
           ((pick v4 v14 p12 #g3 #q4 #t4))
           ((place v4 v14 p12 #g3 #q4 #t4))
           ((pick v4 v14 p7 #g3 #o3 #o4))
           ((place v4 v14 p7 #g3 #o3 #o4))
           ((pick v4 v14 v15 #g3 #q3 #t3))
           ((place v4 v14 v15 #g3 #q3 #t3))
           ((pick v4 v16 #o2 #g4 #o3 #o4))
           ((place v4 v16 #o2 #g4 #o3 #o4))
           ((pick v4 v16 p13 #g4 #q9 #t15))
           ((place v4 v16 p13 #g4 #q9 #t15))
           ((pick v4 v16 p8 #g4 #o3 #o4))
           ((place v4 v16 p8 #g4 #o3 #o4))
           ((pick v4 v16 v17 #g4 #q5 #t5))
           ((place v4 v16 v17 #g4 #q5 #t5))
           ((pick v4 v18 #o2 #g2 #o3 #o4))
           ((place v4 v18 #o2 #g2 #o3 #o4))
           ((pick v4 v18 p14 #g2 #q2 #t2))
           ((place v4 v18 p14 #g2 #q2 #t2))
           ((pick v4 v18 p9 #g2 #o3 #o4))
           ((place v4 v18 p9 #g2 #o3 #o4))
           ((pick v4 v18 v19 #g2 #q7 #t13))
           ((place v4 v18 v19 #g2 #q7 #t13))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 p10 #g0 #q6 #t12))
           ((place v4 v8 p10 #g0 #q6 #t12))
           ((pick v4 v8 p5 #g0 #o3 #o4))
           ((place v4 v8 p5 #g0 #o3 #o4))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects (v8, v12, v14, v16, v18) that need to be placed on the surface v20. The initial state shows that some objects are on v11 and some are on v20 already (but not necessarily at the target pose #o2). The robot arm `v4` is currently at configuration `v5` and the base is at `v3`. The `handempty(v4)` predicate is true, meaning the robot is not holding anything.
           
           The goal is to have all specified objects (v8, v12, v14, v16, v18) on `v20`. The objects `v12`, `v14`, `v16`, `v18`, `v8` can be placed on `v20` at the pose `#o2`.
           
           The plan will involve picking each object from its current location and placing it at `#o2` on `v20`. The poses on `v20` must be unique for each object. The pose `#o2` in the initial state is associated with different objects (v8, v12, v14, v16, v18) and surfaces (v10, v20), which indicates that `#o2` is a symbolic pose that we must provide a continuous value for each object independently. I'll make sure to choose a distinct and collision-free pose for each object on `v20`.
           
           Since `v3` is the initial base configuration and `#o3` is a base configuration for placing at `#o2`, I will move to `#o3` once for all the placement actions at `#o2`. The objects v16, v18, v14, v12, v8 are currently at `v17`, `v19`, `v15`, `v13`, `v9` respectively on surface `v11` for some, and others on `v20` at different poses. All pick actions will involve moving the base to the appropriate configuration before picking, and similarly for placing.
           
           Let's break down the plan for each object:
           1. **v16**: Currently at `v17` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           2. **v18**: Currently at `v19` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           3. **v14**: Currently at `v15` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           4. **v12**: Currently at `v13` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           5. **v8**: Currently at `v9` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           
           All objects are initially located such that they can be picked up. I will choose `#o3` as the common base configuration for placing all objects on `v20` at the #o2 derived poses.
           
           --Plan--:
           (move_base v3 #q5 #t11)
           (pick v4 v16 v17 #g4 #q5 #t5)
           (move_base #q5 #o3 #o0)
           (place v4 v16 #o2 #g4 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v18 v19 #g2 #q7 #t13)
           (move_base #q7 #o3 #o0)
           (place v4 v18 #o2 #g2 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v14 v15 #g3 #q3 #t3)
           (move_base #q3 #o3 #o0)
           (place v4 v14 #o2 #g3 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v12 #o2 #g1 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 #o2 #g0 #o3 #o4)
           
           --Poses--:
           (#o2 v16 v20): (0.0, 0.0, 0.782, 0.0)
           (#o2 v18 v20): (0.0, 0.1, 0.782, 0.0)
           (#o2 v14 v20): (0.0, -0.1, 0.782, 0.0)
           (#o2 v12 v20): (0.1, 0.0, 0.782, 0.0)
           (#o2 v8 v20): (-0.1, 0.0, 0.782, 0.0)

User:      Pose #o2 = (0.0 for object v16 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0 for object v16 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v16 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v16 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.0 for object v18 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.1 for object v18 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v18 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v18 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.0 for object v14 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  -0.1 for object v14 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v14 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v14 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.1 for object v12 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0 for object v12 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v12 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v12 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (-0.1 for object v8 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0 for object v8 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.782 for object v8 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 =  0.0) for object v8 on surface v20 is not in the correct format. Please provided poses in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The scene contains several objects (v8, v12, v14, v16, v18) that need to be placed on the surface v20. The initial state shows that some objects are on v11 and some are on v20 already (but not necessarily at the target pose #o2). The robot arm `v4` is currently at configuration `v5` and the base is at `v3`. The `handempty(v4)` predicate is true, meaning the robot is not holding anything.
           
           The goal is to have all specified objects (v8, v12, v14, v16, v18) on `v20`. The objects `v12`, `v14`, `v16`, `v18`, `v8` can be placed on `v20` at the pose derived from `#o2`. The pose `#o2` in the initial state is associated with different objects (v8, v12, v14, v16, v18) and surfaces (v10, v20), which indicates that `#o2` is a symbolic pose that we must provide a continuous value for each object independently. I'll make sure to choose a distinct and collision-free pose for each object on `v20`.
           
           Since `v3` is the initial base configuration and `#o3` is a base configuration for placing at `#o2`, I will move to `#o3` once for all the placement actions at `#o2`. The objects v16, v18, v14, v12, v8 are currently at `v17`, `v19`, `v15`, `v13`, `v9` respectively on surface `v11` for some, and others on `v20` at different poses. All pick actions will involve moving the base to the appropriate configuration before picking, and similarly for placing.
           
           Let's break down the plan for each object:
           1. **v16**: Currently at `v17` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           2. **v18**: Currently at `v19` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           3. **v14**: Currently at `v15` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           4. **v12**: Currently at `v13` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           5. **v8**: Currently at `v9` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           
           All objects are initially located such that they can be picked up. I will choose `#o3` as the common base configuration for placing all objects on `v20` at the #o2 derived poses.
           
           --Plan--:
           (move_base v3 #q5 #t11)
           (pick v4 v16 v17 #g4 #q5 #t5)
           (move_base #q5 #o3 #o0)
           (place v4 v16 #o2 #g4 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v18 v19 #g2 #q7 #t13)
           (move_base #q7 #o3 #o0)
           (place v4 v18 #o2 #g2 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v14 v15 #g3 #q3 #t3)
           (move_base #q3 #o3 #o0)
           (place v4 v14 #o2 #g3 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v12 #o2 #g1 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 #o2 #g0 #o3 #o4)
           
           --Poses--:
           (#o2 v16 v20): 0.0 0.0 0.782 0.0
           (#o2 v18 v20): 0.0 0.1 0.782 0.0
           (#o2 v14 v20): 0.0 -0.1 0.782 0.0
           (#o2 v12 v20): 0.1 0.0 0.782 0.0
           (#o2 v8 v20): -0.1 0.0 0.782 0.0

User:      Pose #o2 = 0.0 0.1 0.782 0.0 for object v18 on surface v20 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, 0.06500000149011612), upper=(0.035, 0.13500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = 0.0 -0.1 0.782 0.0 for object v14 on surface v20 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, -0.13500000149011612), upper=(0.035, -0.06500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = 0.1 0.0 0.782 0.0 for object v12 on surface v20 is not stable, as the 2D AABB of the object (AABB(lower=(0.06500000149011612, -0.035), upper=(0.13500000149011612, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = -0.1 0.0 0.782 0.0 for object v8 on surface v20 is not stable, as the 2D AABB of the object (AABB(lower=(-0.13500000149011612, -0.035), upper=(-0.06500000149011612, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The scene contains several objects (v8, v12, v14, v16, v18) that need to be placed on the surface v20. The initial state shows that some objects are on v11 and some are on v20 already (but not necessarily at the target pose #o2). The robot arm `v4` is currently at configuration `v5` and the base is at `v3`. The `handempty(v4)` predicate is true, meaning the robot is not holding anything.
           
           The goal is to have all specified objects (v8, v12, v14, v16, v18) on `v20`. The objects `v12`, `v14`, `v16`, `v18`, `v8` can be placed on `v20` at the pose derived from `#o2`. The pose `#o2` in the initial state is associated with different objects (v8, v12, v14, v16, v18) and surfaces (v10, v20), which indicates that `#o2` is a symbolic pose that we must provide a continuous value for each object independently. I'll make sure to choose a distinct and collision-free pose for each object on `v20`.
           
           Since `v3` is the initial base configuration and `#o3` is a base configuration for placing at `#o2`, I will move to `#o3` once for all the placement actions at `#o2`. The objects v16, v18, v14, v12, v8 are currently at `v17`, `v19`, `v15`, `v13`, `v9` respectively on surface `v11` for some, and others on `v20` at different poses. All pick actions will involve moving the base to the appropriate configuration before picking, and similarly for placing.
           
           Let's break down the plan for each object:
           1. **v16**: Currently at `v17` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           2. **v18**: Currently at `v19` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           3. **v14**: Currently at `v15` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           4. **v12**: Currently at `v13` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           5. **v8**: Currently at `v9` on `v11`. Need to pick it up and place it on `v20` at a pose derived from `#o2`.
           
           All objects are initially located such that they can be picked up. I will choose `#o3` as the common base configuration for placing all objects on `v20` at the #o2 derived poses. I will adjust the x, y coordinates to ensure stability on surface v20 (AABB = ((-0.135, -0.135), (0.135, 0.135))).
           
           --Plan--:
           (move_base v3 #q5 #t11)
           (pick v4 v16 v17 #g4 #q5 #t5)
           (move_base #q5 #o3 #o0)
           (place v4 v16 #o2 #g4 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v18 v19 #g2 #q7 #t13)
           (move_base #q7 #o3 #o0)
           (place v4 v18 #o2 #g2 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v14 v15 #g3 #q3 #t3)
           (move_base #q3 #o3 #o0)
           (place v4 v14 #o2 #g3 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v12 v13 #g1 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v12 #o2 #g1 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 #o2 #g0 #o3 #o4)
           
           --Poses--:
           (#o2 v16 v20): 0.0 0.0 0.782 0.0
           (#o2 v18 v20): 0.0 0.05 0.782 0.0
           (#o2 v14 v20): 0.0 -0.05 0.782 0.0
           (#o2 v12 v20): 0.05 0.0 0.782 0.0
           (#o2 v8 v20): -0.05 0.0 0.782 0.0

