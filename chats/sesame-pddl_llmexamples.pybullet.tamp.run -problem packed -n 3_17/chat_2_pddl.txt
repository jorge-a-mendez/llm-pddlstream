User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           @sink: object
           @stove: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v14, #p2)
           Atom supported(v14, #p2, v16)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v16)
           Atom grasp(v14, #g1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g2)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g0)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v14, v15, #g1, #q1, #t2)
           Atom bconf(#q4)
           Atom atraj(#t5)
           Atom kin(v4, v14, #p2, #g1, #q4, #t5)
           Atom bconf(#q3)
           Atom atraj(#t4)
           Atom kin(v4, v12, v13, #g2, #q3, #t4)
           Atom bconf(#q5)
           Atom atraj(#t6)
           Atom kin(v4, v12, #p1, #g2, #q5, #t6)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q2)
           Atom atraj(#t3)
           Atom kin(v4, v8, #p0, #g0, #q2, #t3)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(v3, #o0, #q1)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q4, #o0, #q4)
           Atom btraj(#t7)
           Atom basemotion(#q1, #t7, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q0)
           Atom btraj(#t8)
           Atom basemotion(#q2, #t8, #q3)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(v3, #o0, #q2)
           Atom btraj(#t11)
           Atom basemotion(#q0, #t11, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom btraj(#t10)
           Atom basemotion(#q5, #t10, #q1)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom btraj(#t9)
           Atom basemotion(#q3, #t9, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q2 #t11))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q4 #t7))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q3 #t8))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q5 #t9))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q1 #t10))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 #p1 #g2 #q5 #t6))
           ((place v4 v12 #p1 #g2 #q5 #t6))
           ((pick v4 v12 v13 #g2 #q3 #t4))
           ((place v4 v12 v13 #g2 #q3 #t4))
           ((pick v4 v14 #o2 #g1 #o3 #o4))
           ((place v4 v14 #o2 #g1 #o3 #o4))
           ((pick v4 v14 #p2 #g1 #q4 #t5))
           ((place v4 v14 #p2 #g1 #q4 #t5))
           ((pick v4 v14 v15 #g1 #q1 #t2))
           ((place v4 v14 v15 #g1 #q1 #t2))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p0 #g0 #q2 #t3))
           ((place v4 v8 #p0 #g0 #q2 #t3))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms (`v4`, `v6`). The robot's right arm (`v4`) is currently empty (`handempty(v4)`). There are three graspable objects: `v8`, `v12`, and `v14`. All three objects are currently located on `v11` at poses `v9`, `v13`, and `v15` respectively, as indicated by `atpose` and `supported` facts. They are also stackable on `v10` and `v16`.
           
           The goal is to place all three objects (`v8`, `v12`, `v14`) on `v16`. This means the robot needs to pick up each object from its current location and place it on a pose supported by `v16`.
           
           Let's break down the steps for each object:
           
           For `v8`:
           1. The robot is at `v3` and `v8` is at `v9` on `v11`. To pick up `v8` with arm `v4`, the robot needs to be at base configuration `#q0` (`kin(v4, v8, v9, #g0, #q0, #t0)`). So, the robot must move from `v3` to `#q0`.
           2. Pick `v8` from `v9` using grasp `#g0` with arm `v4` at base config `#q0` using trajectory `#t0`.
           3. To place `v8` on `v16`, a pose `#p0` is defined for `v8` supported by `v16` (`supported(v8, #p0, v16)`). The robot needs to be at base configuration `#q2` (`kin(v4, v8, #p0, #g0, #q2, #t3)`). The robot must move from `#q0` to `#q2`.
           4. Place `v8` at `#p0` using grasp `#g0` with arm `v4` at base config `#q2` using trajectory `#t3`.
           
           For `v12`:
           1. The robot is at `v3` (after placing `v8`, if we consider the previous plan, the robot is at `#q2` and needs to move to `#q3` for the next pick, or stay at `#q2` if the kin for `v12` is from `#q2` as well). The object `v12` is at `v13` on `v11`. To pick up `v12` with arm `v4`, the robot needs to be at base configuration `#q3` (`kin(v4, v12, v13, #g2, #q3, #t4)`). So, the robot must move to `#q3`.
           2. Pick `v12` from `v13` using grasp `#g2` with arm `v4` at base config `#q3` using trajectory `#t4`.
           3. To place `v12` on `v16`, a pose `#p1` is defined for `v12` supported by `v16` (`supported(v12, #p1, v16)`). The robot needs to be at base configuration `#q5` (`kin(v4, v12, #p1, #g2, #q5, #t6)`). The robot must move from `#q3` to `#q5`.
           4. Place `v12` at `#p1` using grasp `#g2` with arm `v4` at base config `#q5` using trajectory `#t6`.
           
           For `v14`:
           1. The robot is at `#q5`. The object `v14` is at `v15` on `v11`. To pick up `v14` with arm `v4`, the robot needs to be at base configuration `#q1` (`kin(v4, v14, v15, #g1, #q1, #t2)`). So, the robot must move to `#q1`.
           2. Pick `v14` from `v15` using grasp `#g1` with arm `v4` at base config `#q1` using trajectory `#t2`.
           3. To place `v14` on `v16`, a pose `#p2` is defined for `v14` supported by `v16` (`supported(v14, #p2, v16)`). The robot needs to be at base configuration `#q4` (`kin(v4, v14, #p2, #g1, #q4, #t5)`). The robot must move from `#q1` to `#q4`.
           4. Place `v14` at `#p2` using grasp `#g1` with arm `v4` at base config `#q4` using trajectory `#t5`.
           
           Let's verify the movements and actions available.
           Initial state: `atbconf(v3)`, `handempty(v4)`.
           
           Plan:
           1. Move to `#q0` to pick `v8`.
           2. Pick `v8`.
           3. Move to `#q2` to place `v8`.
           4. Place `v8`.
           5. Move to `#q3` to pick `v12`.
           6. Pick `v12`.
           7. Move to `#q5` to place `v12`.
           8. Place `v12`.
           9. Move to `#q1` to pick `v14`.
           10. Pick `v14`.
           11. Move to `#q4` to place `v14`.
           12. Place `v14`.
           
           All `move_base` actions and `pick`/`place` actions are available.
           
           --Plan--:
           (move_base v3 #q0 #t1)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q2 #t11)
           (place v4 v8 #p0 #g0 #q2 #t3)
           (move_base #q2 #q3 #t8)
           (pick v4 v12 v13 #g2 #q3 #t4)
           (move_base #q3 #q5 #t9)
           (place v4 v12 #p1 #g2 #q5 #t6)
           (move_base #q5 #q1 #t10)
           (pick v4 v14 v15 #g1 #q1 #t2)
           (move_base #q1 #q4 #t7)
           (place v4 v14 #p2 #g1 #q4 #t5)

