User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v8, v10)
           Atom graspable(v14)
           Atom supported(v8, v9, v11)
           Atom pose(v12, v13)
           Atom stackable(v8, v16)
           Atom arm(v6)
           Atom ataconf(v6, v7)
           Atom controllable(v4)
           Atom handempty(v6)
           Atom graspable(v8)
           Atom graspable(v12)
           Atom ataconf(v4, v5)
           Atom atbconf(v3)
           Atom stackable(v14, v16)
           Atom pose(v14, v15)
           Atom aconf(v6, v7)
           Atom atpose(v14, v15)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom stackable(v12, v16)
           Atom bconf(v3)
           Atom aconf(v4, v5)
           Atom stackable(v12, v10)
           Atom canmove()
           Atom supported(v14, v15, v11)
           Atom arm(v4)
           Atom pose(v8, v9)
           Atom handempty(v4)
           Atom supported(v12, v13, v11)
           Atom stackable(v14, v10)
           Atom grasp(v14, #g2)
           Atom pose(v14, #p0)
           Atom supported(v14, #p0, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g0)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #p2)
           Atom supported(v12, #p2, v16)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v14, v15, #g2, #q4, #t4)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, v13, #g1, #q2, #t2)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v14, #p0, #g2, #q3, #t3)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, #p1, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q5)
           Atom atraj(#t10)
           Atom kin(v4, v12, #p2, #g1, #q5, #t10)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q0)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q4, #o0, #q5)
           Atom btraj(#t13)
           Atom basemotion(#q2, #t13, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom btraj(#t14)
           Atom basemotion(#q5, #t14, #q4)
           Atom btraj(#t15)
           Atom basemotion(#q4, #t15, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q1, #o0, #q5)
           Atom btraj(#t11)
           Atom basemotion(#q0, #t11, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t12)
           Atom basemotion(#q1, #t12, #q2)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q1)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q5, #o0, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g2, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q1 #t11))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q2 #t12))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q5 #t13))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q3 #t15))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q4 #t14))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t5))
           ((move_base v3 #q1 #t6))
           ((move_base v3 #q2 #t7))
           ((move_base v3 #q3 #t8))
           ((move_base v3 #q4 #t9))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p2 #g1 #q5 #t10))
           ((place v4 v12 #p2 #g1 #q5 #t10))
           ((pick v4 v12 v13 #g1 #q2 #t2))
           ((place v4 v12 v13 #g1 #q2 #t2))
           ((pick v4 v14 #o2 #g2 #o3 #o4))
           ((place v4 v14 #o2 #g2 #o3 #o4))
           ((pick v4 v14 #p0 #g2 #q3 #t3))
           ((place v4 v14 #p0 #g2 #q3 #t3))
           ((pick v4 v14 v15 #g2 #q4 #t4))
           ((place v4 v14 v15 #g2 #q4 #t4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p1 #g0 #q1 #t1))
           ((place v4 v8 #p1 #g0 #q1 #t1))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes three graspable and stackable objects (v8, v12, v14) and their initial poses (v8 at v9, v14 at v15, v12 at v13). All three are currently supported by v11. The robot has two arms (v4, v6) and is initially at base configuration v3. The goal is to place all three objects (v8, v12, v14) on the surface v16.
           
           To achieve this goal, we need to pick up each object and place it on a pose supported by v16. The initial state shows the objects supported by v11, but the goal requires them to be on v16. This means we need to move each object to a new pose on v16.
           
           Looking at the available actions:
           - For v8: it is currently at v9, supported by v11. We have `grasp(v8, #g0)` and a `kin` for picking from `v9` with `q0`. We also have `pose(v8, #p1)` supported by `v16`, with `kin` for placing at `#p1` with `q1`.
           - For v12: it is currently at v13, supported by v11. We have `grasp(v12, #g1)` and a `kin` for picking from `v13` with `q2`. We also have `pose(v12, #p2)` supported by `v16`, with `kin` for placing at `#p2` with `q5`.
           - For v14: it is currently at v15, supported by v11. We have `grasp(v14, #g2)` and a `kin` for picking from `v15` with `q4`. We also have `pose(v14, #p0)` supported by `v16`, with `kin` for placing at `#p0` with `q3`.
           
           The plan will involve:
           1. Moving the base to the appropriate configuration for picking each object.
           2. Picking the object.
           3. Moving the base to the appropriate configuration for placing the object on v16.
           4. Placing the object on v16.
           We need to repeat this for each of the three objects.
           
           Let's start with v8:
           - Current base config: v3. To pick v8 from v9, we need to be at `q0`. Move `v3` to `q0` using `t5`.
           - Pick v8 from v9 using `t0` and `q0`.
           - To place v8 at `#p1` on v16, we need to be at `q1`. Move `q0` to `q1` using `t11`.
           - Place v8 at `#p1` using `t1` and `q1`.
           
           Next, for v12:
           - Current base config: `q1`. To pick v12 from v13, we need to be at `q2`. Move `q1` to `q2` using `t12`.
           - Pick v12 from v13 using `t2` and `q2`.
           - To place v12 at `#p2` on v16, we need to be at `q5`. Move `q2` to `q5` using `t13`.
           - Place v12 at `#p2` using `t10` and `q5`.
           
           Finally, for v14:
           - Current base config: `q5`. To pick v14 from v15, we need to be at `q4`. Move `q5` to `q4` using `t14`.
           - Pick v14 from v15 using `t4` and `q4`.
           - To place v14 at `#p0` on v16, we need to be at `q3`. Move `q4` to `q3` using `t15`.
           - Place v14 at `#p0` using `t3` and `q3`.
           
           All preconditions for each step are satisfied by the current state or the previous action.
           
           --Plan--:
           (move_base v3 #q0 #t5)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q1 #t11)
           (place v4 v8 #p1 #g0 #q1 #t1)
           (move_base #q1 #q2 #t12)
           (pick v4 v12 v13 #g1 #q2 #t2)
           (move_base #q2 #q5 #t13)
           (place v4 v12 #p2 #g1 #q5 #t10)
           (move_base #q5 #q4 #t14)
           (pick v4 v14 v15 #g2 #q4 #t4)
           (move_base #q4 #q3 #t15)
           (place v4 v14 #p0 #g2 #q3 #t3)

