User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v8, v10)
           Atom graspable(v14)
           Atom supported(v8, v9, v11)
           Atom pose(v12, v13)
           Atom stackable(v8, v16)
           Atom arm(v6)
           Atom ataconf(v6, v7)
           Atom controllable(v4)
           Atom handempty(v6)
           Atom graspable(v8)
           Atom graspable(v12)
           Atom ataconf(v4, v5)
           Atom atbconf(v3)
           Atom stackable(v14, v16)
           Atom pose(v14, v15)
           Atom aconf(v6, v7)
           Atom atpose(v14, v15)
           Atom atpose(v8, v9)
           Atom atpose(v12, v13)
           Atom stackable(v12, v16)
           Atom bconf(v3)
           Atom aconf(v4, v5)
           Atom stackable(v12, v10)
           Atom canmove()
           Atom supported(v14, v15, v11)
           Atom arm(v4)
           Atom pose(v8, v9)
           Atom handempty(v4)
           Atom supported(v12, v13, v11)
           Atom stackable(v14, v10)
           Atom grasp(v14, #o1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v16)
           Atom supported(v14, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #o1)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v12, #o2, v16)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v14 #o2 #o1 #o3 #o4))
           ((place v4 v14 #o2 #o1 #o3 #o4))
           ((pick v4 v14 v15 #o1 #o3 #o4))
           ((place v4 v14 v15 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes three graspable and stackable objects (v8, v12, v14) currently located on object v11. The goal is to place all three objects on object v16. There are two arms available (v4 and v6), both are handempty. The robot is at base configuration v3.
           
           The plan involves picking up each object from its current location (v11) and placing it onto v16. Since there are multiple objects to be moved, the `canmove()` predicate will be important to ensure the robot can execute subsequent actions after picking or placing. Also, we must use arm v4, as it is the only one with kinemtaic information provided. We must use the base configuration #o3 for the pick and place actions, so a move_base action will be necessary to reach it.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)
           (pick v4 v12 v13 #o1 #o3 #o4)
           (place v4 v12 #o2 #o1 #o3 #o4)
           (pick v4 v14 v15 #o1 #o3 #o4)
           (place v4 v14 #o2 #o1 #o3 #o4)

