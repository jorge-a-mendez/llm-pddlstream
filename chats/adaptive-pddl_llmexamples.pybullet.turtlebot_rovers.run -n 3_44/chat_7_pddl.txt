User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q19: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom rover(v14)
           Atom lander(v9)
           Atom type(v1, v2)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom conf(v14, v15)
           Atom supports(v10, v11)
           Atom type(v5, v6)
           Atom free(v14, v16)
           Atom rock(v7)
           Atom camera(v10)
           Atom objective(v19)
           Atom rock(v3)
           Atom rock(v4)
           Atom objective(v18)
           Atom rock(v5)
           Atom rock(v1)
           Atom objective(v17)
           Atom onboard(v10, v12)
           Atom rock(v8)
           Atom free(v12, v16)
           Atom store(v16)
           Atom type(v7, v6)
           Atom type(v4, v2)
           Atom conf(v12, v13)
           Atom type(v8, v6)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom type(v3, v2)
           Atom above(v14, #q1, v3)
           Atom conf(v14, #q1)
           Atom above(v12, #q10, v3)
           Atom conf(v12, #q10)
           Atom imagevisible(v12, #q17, #y5, v19)
           Atom imagerange(v12, #q17, v19)
           Atom conf(v12, #q17)
           Atom ray(#y5)
           Atom imagevisible(v14, #q0, #y0, v19)
           Atom imagerange(v14, #q0, v19)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q14, v7)
           Atom conf(v12, #q14)
           Atom above(v14, #q9, v7)
           Atom conf(v14, #q9)
           Atom above(v14, #q8, v8)
           Atom conf(v14, #q8)
           Atom above(v12, #q16, v8)
           Atom conf(v12, #q16)
           Atom imagevisible(v12, #q19, #y7, v17)
           Atom imagerange(v12, #q19, v17)
           Atom conf(v12, #q19)
           Atom ray(#y7)
           Atom imagevisible(v14, #q2, #y1, v17)
           Atom imagerange(v14, #q2, v17)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom comvisible(v12, #q12, #y4, v9)
           Atom comrange(v12, #q12, v9)
           Atom conf(v12, #q12)
           Atom ray(#y4)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v12, #q11, v1)
           Atom conf(v12, #q11)
           Atom above(v14, #q7, v1)
           Atom conf(v14, #q7)
           Atom above(v12, #q15, v5)
           Atom conf(v12, #q15)
           Atom above(v14, #q6, v5)
           Atom conf(v14, #q6)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q18, #y6, v18)
           Atom imagerange(v12, #q18, v18)
           Atom conf(v12, #q18)
           Atom ray(#y6)
           Atom imagevisible(v14, #q5, #y3, v18)
           Atom imagerange(v14, #q5, v18)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v12, #q13, v4)
           Atom conf(v12, #q13)
           Atom above(v14, #q4, v4)
           Atom conf(v14, #q4)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, v13, #t17, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q19)
           Atom motion(v12, #q19, #o2, #q19)
           Atom motion(v12, #q19, #o2, #q10)
           Atom motion(v12, #q19, #o2, v13)
           Atom motion(v12, v13, #t45, #q19)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t31, #q4)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, v15, #t38, #q1)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v12, #q19, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q19)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q5, #t33, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, v15, #t2, #q0)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q4, #t39, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q19)
           Atom motion(v12, #q18, #o2, #q18)
           Atom motion(v12, v13, #t44, #q18)
           Atom motion(v12, #q18, #o2, #q10)
           Atom motion(v12, #q19, #o2, #q18)
           Atom motion(v12, #q13, #o2, #q18)
           Atom motion(v12, #q18, #o2, v13)
           Atom motion(v12, #q18, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, v15, #t29, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v12, #q16, #o2, #q19)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q10)
           Atom motion(v12, #q18, #o2, #q16)
           Atom motion(v12, #q19, #o2, #q16)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q10, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q18)
           Atom motion(v12, #q13, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q13)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q18, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q18)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q16)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q10, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q19, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q19)
           Atom motion(v12, #q15, #o2, #q10)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q18, #o2, #q14)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q18)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q19, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q14, #o2, #q19)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q19)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q11, #o2, #q18)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q19, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q16)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q16, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q18, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q14, #o2, #q17)
           Atom motion(v12, #q16, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, #q11, #o2, #q17)
           Atom motion(v12, #q18, #o2, #q17)
           Atom motion(v12, #q10, #o2, #q17)
           Atom motion(v12, #q15, #o2, #q17)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, #q17, #o2, #q14)
           Atom motion(v12, #q17, #o2, #q18)
           Atom motion(v12, #q17, #o2, #q11)
           Atom motion(v12, #q17, #o2, #q15)
           Atom motion(v12, #q17, #o2, #q19)
           Atom motion(v12, #q17, #o2, #q16)
           Atom motion(v12, #q17, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q17)
           Atom motion(v12, v13, #t43, #q17)
           Atom motion(v12, #q17, #o2, #q10)
           Atom motion(v12, #q19, #o2, #q17)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #t42, #q9)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q4, #t35, #q6)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v12, #q16, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #t19, #q10)
           Atom motion(v12, #q12, #o2, #q16)
           Atom motion(v12, #q12, #o2, #q17)
           Atom motion(v12, #q12, #o2, #q18)
           Atom motion(v12, #q17, #t37, #q12)
           Atom motion(v12, #q11, #t22, #q12)
           Atom motion(v12, #q18, #o2, #q12)
           Atom motion(v12, #q12, #t24, v13)
           Atom motion(v12, #q19, #o2, #q12)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q19)
           Atom motion(v12, #q10, #t21, #q12)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q12, #t20, #q11)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v14, #q8, #o2, #q1)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q4, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q9, #t36, #q8)
           Atom motion(v14, #q8, #o2, #q4)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q8)
           Atom motion(v14, #q8, #t34, #q9)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, v15, #t3, #q2)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q0, #t23, #q2)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q2, #t18, #q5)
           Atom motion(v14, #q1, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q6, #t30, #q7)
           Atom motion(v14, #q0, #t41, #q7)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #t40, #q6)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #t32, #q8)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q3, #t26, #q2)
           Atom motion(v14, #q8, #t15, #q3)
           Atom motion(v14, #q3, #t9, #q8)
           Atom motion(v14, #q3, #t10, #q9)
           Atom motion(v14, #q6, #t13, #q3)
           Atom motion(v14, #q5, #t25, #q3)
           Atom motion(v14, #q3, #t6, #q4)
           Atom motion(v14, #q4, #t12, #q3)
           Atom motion(v14, #q9, #t16, #q3)
           Atom motion(v14, #q0, #t0, #q3)
           Atom motion(v14, #q3, #t8, #q7)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #t7, #q6)
           Atom motion(v14, #q7, #t14, #q3)
           Atom motion(v14, #q2, #t1, #q3)
           Atom motion(v14, #q3, #t28, #q0)
           Atom motion(v14, #q1, #t11, #q3)
           Atom motion(v14, #q3, #t27, #q5)
           Atom motion(v14, #q3, #t4, v15)
           Atom motion(v14, #q3, #t5, #q1)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q11 v1 v16))
           ((sample_rock v12 #q13 v4 v16))
           ((sample_rock v12 #q14 v7 v16))
           ((sample_rock v12 #q15 v5 v16))
           ((sample_rock v12 #q16 v8 v16))
           ((sample_rock v14 #q1 v3 v16))
           ((sample_rock v14 #q4 v4 v16))
           ((sample_rock v14 #q6 v5 v16))
           ((sample_rock v14 #q7 v1 v16))
           ((sample_rock v14 #q8 v8 v16))
           ((sample_rock v14 #q9 v7 v16))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q15))
           ((move v12 #q10 #o2 #q16))
           ((move v12 #q10 #o2 #q17))
           ((move v12 #q10 #o2 #q18))
           ((move v12 #q10 #o2 #q19))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t21 #q12))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q16))
           ((move v12 #q11 #o2 #q17))
           ((move v12 #q11 #o2 #q18))
           ((move v12 #q11 #o2 #q19))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t22 #q12))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q16))
           ((move v12 #q12 #o2 #q17))
           ((move v12 #q12 #o2 #q18))
           ((move v12 #q12 #o2 #q19))
           ((move v12 #q12 #t19 #q10))
           ((move v12 #q12 #t20 #q11))
           ((move v12 #q12 #t24 v13))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q16))
           ((move v12 #q13 #o2 #q17))
           ((move v12 #q13 #o2 #q18))
           ((move v12 #q13 #o2 #q19))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 #q17))
           ((move v12 #q14 #o2 #q18))
           ((move v12 #q14 #o2 #q19))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q15 #o2 #q10))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q16))
           ((move v12 #q15 #o2 #q17))
           ((move v12 #q15 #o2 #q18))
           ((move v12 #q15 #o2 #q19))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q16 #o2 #q10))
           ((move v12 #q16 #o2 #q11))
           ((move v12 #q16 #o2 #q12))
           ((move v12 #q16 #o2 #q13))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q17))
           ((move v12 #q16 #o2 #q18))
           ((move v12 #q16 #o2 #q19))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q17 #o2 #q10))
           ((move v12 #q17 #o2 #q11))
           ((move v12 #q17 #o2 #q13))
           ((move v12 #q17 #o2 #q14))
           ((move v12 #q17 #o2 #q15))
           ((move v12 #q17 #o2 #q16))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q18))
           ((move v12 #q17 #o2 #q19))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q17 #t37 #q12))
           ((move v12 #q18 #o2 #q10))
           ((move v12 #q18 #o2 #q11))
           ((move v12 #q18 #o2 #q12))
           ((move v12 #q18 #o2 #q13))
           ((move v12 #q18 #o2 #q14))
           ((move v12 #q18 #o2 #q15))
           ((move v12 #q18 #o2 #q16))
           ((move v12 #q18 #o2 #q17))
           ((move v12 #q18 #o2 #q18))
           ((move v12 #q18 #o2 #q19))
           ((move v12 #q18 #o2 v13))
           ((move v12 #q19 #o2 #q10))
           ((move v12 #q19 #o2 #q11))
           ((move v12 #q19 #o2 #q12))
           ((move v12 #q19 #o2 #q13))
           ((move v12 #q19 #o2 #q14))
           ((move v12 #q19 #o2 #q15))
           ((move v12 #q19 #o2 #q16))
           ((move v12 #q19 #o2 #q17))
           ((move v12 #q19 #o2 #q18))
           ((move v12 #q19 #o2 #q19))
           ((move v12 #q19 #o2 v13))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q10))
           ((move v12 v13 #t43 #q17))
           ((move v12 v13 #t44 #q18))
           ((move v12 v13 #t45 #q19))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q3))
           ((move v14 #q0 #t23 #q2))
           ((move v14 #q0 #t41 #q7))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q2))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 #q8))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t11 #q3))
           ((move v14 #q1 #t31 #q4))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t1 #q3))
           ((move v14 #q2 #t18 #q5))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #t10 #q9))
           ((move v14 #q3 #t26 #q2))
           ((move v14 #q3 #t27 #q5))
           ((move v14 #q3 #t28 #q0))
           ((move v14 #q3 #t4 v15))
           ((move v14 #q3 #t5 #q1))
           ((move v14 #q3 #t6 #q4))
           ((move v14 #q3 #t7 #q6))
           ((move v14 #q3 #t8 #q7))
           ((move v14 #q3 #t9 #q8))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 #q8))
           ((move v14 #q4 #o2 #q9))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t12 #q3))
           ((move v14 #q4 #t35 #q6))
           ((move v14 #q4 #t39 #q0))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t25 #q3))
           ((move v14 #q5 #t33 #q1))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t13 #q3))
           ((move v14 #q6 #t30 #q7))
           ((move v14 #q6 #t42 #q9))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t14 #q3))
           ((move v14 #q7 #t32 #q8))
           ((move v14 #q7 #t40 #q6))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q1))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q4))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t15 #q3))
           ((move v14 #q8 #t34 #q9))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t16 #q3))
           ((move v14 #q9 #t36 #q8))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t2 #q0))
           ((move v14 v15 #t29 #q9))
           ((move v14 v15 #t3 #q2))
           ((move v14 v15 #t38 #q1))
           ((calibrate v12 #q17 #y5 v19 v10))
           ((calibrate v12 #q18 #y6 v18 v10))
           ((calibrate v12 #q19 #y7 v17 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q2 #y1 v17 v10))
           ((calibrate v14 #q5 #y3 v18 v10))
           ((take_image v12 #q17 #y5 v19 v10 v11))
           ((take_image v12 #q18 #y6 v18 v10 v11))
           ((take_image v12 #q19 #y7 v17 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q2 #y1 v17 v10 v11))
           ((take_image v14 #q5 #y3 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q12 #y4 v9 v3))
           ((send_analysis v12 #q12 #y4 v9 v1))
           ((send_analysis v12 #q12 #y4 v9 v4))
           ((send_analysis v12 #q12 #y4 v9 v7))
           ((send_analysis v12 #q12 #y4 v9 v5))
           ((send_analysis v12 #q12 #y4 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_image v12 #q12 #y4 v9 v19 v11))
           ((send_image v12 #q12 #y4 v9 v18 v11))
           ((send_image v12 #q12 #y4 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, v12 and v14, each with a camera (v10) and a storage unit (v16). There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19). The rovers can move between configurations, take images, calibrate their cameras, send images and analysis to a lander (v9), and sample/drop rocks. The goal `new-axiom@0()` requires that both rovers are at some configuration, that they both have free storage, that three specific images (v17, v18, v19) have been received (implying they must be taken and sent), and that certain types of rocks (a stone type, v2, and a soil type, v6) have been analyzed.
           
           Looking at the initial state:
           - Rover v12 is at v13, v14 is at v15.
           - Both rovers have free storage v16.
           - Camera v10 is onboard both rovers and supports mode v11.
           - Objectives v17, v18, v19 are present.
           - Rocks v1, v3, v4 are of type v2 (stone).
           - Rocks v5, v7, v8 are of type v6 (soil).
           - Both rovers are currently above some rocks, and imagevisible/comvisible predicates are provided for various configurations and objectives/lander.
           
           To achieve the goal, we need to:
           1. Sample at least one rock of type v2 (stone) and one of type v6 (soil).
           2. Analyze these sampled rocks (sampling automatically analyzes).
           3. Send the analysis of these rocks to the lander.
           4. Take images of objectives v17, v18, and v19.
           5. Send these images to the lander.
           
           Let's break down the plan:
           
           **For Rock Analysis:**
           - Rover v14 can sample v3 (type v2, stone) at #q1.
           - Rover v14 can sample v7 (type v6, soil) at #q9.
           - Both rovers can move to configurations where they can communicate with the lander v9. Rover v14 can reach #q3 and v12 can reach #q12 to communicate.
           
           **For Image Capture and Transmission:**
           - Rover v14 can take images of v19 at #q0, v17 at #q2, and v18 at #q5.
           - Rover v12 can take images of v19 at #q17, v17 at #q19, and v18 at #q18.
           - These images need to be calibrated before taking.
           - After taking, they need to be sent to the lander using the communication visible locations.
           
           Let's prioritize Rover v14 for sampling and analysis, and then divide image tasks.
           
           **Plan for Rover v14:**
           1. Move to #q1 to sample rock v3 (type v2 - stone).
           2. Sample rock v3.
           3. Move to #q9 to sample rock v7 (type v6 - soil).
           4. Sample rock v7.
           5. Move to #q3 to send analysis of both v3 and v7.
           6. Calibrate for objective v19 at #q0.
           7. Move to #q0.
           8. Take image of v19.
           9. Move back to #q3 to send the image.
           10. Calibrate for objective v17 at #q2.
           11. Move to #q2.
           12. Take image of v17.
           13. Move back to #q3 to send the image.
           14. Calibrate for objective v18 at #q5.
           15. Move to #q5.
           16. Take image of v18.
           17. Move back to #q3 to send the image.
           
           This plan achieves all the required objectives for rock analysis and image transmission using just rover v14. Since rover v14 is at v15 initially, it has to move to the sampling and image taking locations.
           
           --Plan--:
           (move v14 v15 #t38 #q1)
           (sample_rock v14 #q1 v3 v16)
           (move v14 #q1 #o2 #q9)
           (sample_rock v14 #q9 v7 v16)
           (move v14 #q9 #t16 #q3)
           (send_analysis v14 #q3 #y2 v9 v3)
           (send_analysis v14 #q3 #y2 v9 v7)
           (move v14 #q3 #t28 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #t0 #q3)
           (send_image v14 #q3 #y2 v9 v19 v11)
           (move v14 #q3 #t26 #q2)
           (calibrate v14 #q2 #y1 v17 v10)
           (take_image v14 #q2 #y1 v17 v10 v11)
           (move v14 #q2 #t1 #q3)
           (send_image v14 #q3 #y2 v9 v17 v11)
           (move v14 #q3 #t27 #q5)
           (calibrate v14 #q5 #y3 v18 v10)
           (take_image v14 #q5 #y3 v18 v10 v11)
           (move v14 #q5 #t25 #q3)
           (send_image v14 #q3 #y2 v9 v18 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan attempted to satisfy all conditions of `new-axiom@0()` using only rover v14. The goal `new-axiom@0()` requires:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: These are the initial positions of the rovers. The previous plan moved v14, so this condition was not satisfied at the end.
           2. `free(v12, v16)` and `free(v14, v16)`: This means both rovers must have free storage. My previous plan sampled rocks with v14, which would make its storage `full(v14, v16)`. I need to drop the rocks after analysis if I want to use the same storage unit, or ensure I have multiple storage units (only v16 is mentioned for both).
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`: All three images must be received. The previous plan handled this.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: Analysis of a stone (type v2) rock.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: Analysis of a soil (type v6) rock.
           
           Let's re-evaluate the plan focusing on the rover positions and free storage, which were violated.
           
           The `new-axiom@0()` goal specifies that `atconf(v12, v13)` and `atconf(v14, v15)` must be true *at the same time* at the end of the plan. This means both rovers need to return to their initial configurations after completing their tasks, or not move from them if their tasks can be completed at those initial positions. Also, `free(v12, v16)` and `free(v14, v16)` must be true. This implies that if a rover samples a rock, it must drop it before the plan ends, assuming only one storage slot.
           
           **Revised Strategy:**
           
           1.  **Rock Analysis:**
               *   Rover v14 is at v15. It can move to #q1 to sample v3 (type v2 - stone), then drop it.
               *   Rover v14 can move to #q9 to sample v7 (type v6 - soil), then drop it.
               *   Both analyses need to be sent. Rover v14 can move to #q3 to send the analysis.
               *   After sampling and sending, v14 needs to drop the rocks to free storage and return to v15.
           
           2.  **Image Capture and Transmission:**
               *   Need to get images for v17, v18, v19.
               *   Rover v12 is at v13. It can image v19 at #q17, v17 at #q19, v18 at #q18.
               *   Rover v12 can communicate with lander v9 at #q12.
               *   Rover v14 (at v15 initially) can image v19 at #q0, v17 at #q2, v18 at #q5.
               *   Rover v14 can communicate with lander v9 at #q3.
           
           Let's assign tasks:
           *   **Rover v14:** Sample v3, sample v7, send both analyses.
           *   **Rover v12:** Take and send images for v17, v18, v19.
           *   Ensure both rovers end up at their initial configurations and have free storage.
           
           **Detailed Plan Steps:**
           
           **Rover v14 (initial at v15):**
           1.  Move to #q1 (above v3).
           2.  Sample v3. (Now `full(v14, v16)`, `analyzed(v14, v3)`).
           3.  Move to #q9 (above v7).
           4.  Sample v7. (Now `full(v14, v16)` - assuming one slot, previous rock overwritten/dropped by the robot or it implies there are multiple slots or the same slot is used for analysis). The PDDL states `full(?v, ?s)` when a rock is sampled and `free(?v, ?s)` is removed. It doesn't model multiple slots directly. To maintain `free(v14, v16)` at the end, it must drop the rock.
               *   *Correction*: To get both v3 and v7 analyzed and then sent, v14 must have space for both if they are sampled consecutively. The `sample_rock` action makes the store `full` and `free` false. If `sample_rock` implies the rock is retained for analysis, and we need *both* v3 and v7 analyzed, then a single store `v16` cannot hold both simultaneously. This is a critical point. However, `analyzed(?v, ?r)` is a persistent state, meaning once a rock is analyzed by a rover, it stays analyzed, even if the rock is dropped. So, v14 can sample, send analysis, drop, then sample again.
           5.  Move to #q3 (comms with v9).
           6.  Send analysis of v3.
           7.  Drop v3 (assuming this frees the store for v7 or another rock).
           8.  Move to #q9 (if not already there after dropping, or a different path needed). Re-evaluate this: Since `analyzed` persists, I can sample v3, then drop it. Then sample v7, then drop it. Then send both analyses.
               *   Let's refine v14's rock analysis:
                   *   Move v14 from v15 to #q1.
                   *   Sample v3.
                   *   Drop v3 (so storage is free for the next sample).
                   *   Move v14 from #q1 to #q9.
                   *   Sample v7.
                   *   Drop v7.
                   *   Move v14 from #q9 to #q3 (comms).
                   *   Send analysis of v3.
                   *   Send analysis of v7.
                   *   Move v14 from #q3 back to v15.
           
           **Rover v12 (initial at v13):**
           1.  Move to #q17.
           2.  Calibrate camera for v19.
           3.  Take image of v19.
           4.  Move to #q12 (comms with v9).
           5.  Send image of v19.
           6.  Move to #q19.
           7.  Calibrate camera for v17 (if needed, camera loses calibration after `take_image`).
           8.  Take image of v17.
           9.  Move to #q12.
           10. Send image of v17.
           11. Move to #q18.
           12. Calibrate camera for v18.
           13. Take image of v18.
           14. Move to #q12.
           15. Send image of v18.
           16. Move from #q12 back to v13.
           
           This strategy ensures that both rovers return to their initial positions and have free storage, while achieving all analysis and image transmission goals.
           
           --Plan--:
           (move v14 v15 #t38 #q1)
           (sample_rock v14 #q1 v3 v16)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q9)
           (sample_rock v14 #q9 v7 v16)
           (drop_rock v14 v16)
           (move v14 #q9 #t16 #q3)
           (send_analysis v14 #q3 #y2 v9 v3)
           (send_analysis v14 #q3 #y2 v9 v7)
           (move v14 #q3 #t4 v15)
           (move v12 v13 #t43 #q17)
           (calibrate v12 #q17 #y5 v19 v10)
           (take_image v12 #q17 #y5 v19 v10 v11)
           (move v12 #q17 #t37 #q12)
           (send_image v12 #q12 #y4 v9 v19 v11)
           (move v12 #q12 #o2 #q19)
           (calibrate v12 #q19 #y7 v17 v10)
           (take_image v12 #q19 #y7 v17 v10 v11)
           (move v12 #q19 #o2 #q12)
           (send_image v12 #q12 #y4 v9 v17 v11)
           (move v12 #q12 #o2 #q18)
           (calibrate v12 #q18 #y6 v18 v10)
           (take_image v12 #q18 #y6 v18 v10 v11)
           (move v12 #q18 #o2 #q12)
           (send_image v12 #q12 #y4 v9 v18 v11)
           (move v12 #q12 #t24 v13)

