User:      The robot can only be placed within the following limits for (x, y, theta):
           x: [-2.5, 2.5], y: [-2.5, 2.5], theta: [-inf, inf]
           
           New request:
           
           Target point: {target_point}. Please provide a valid placement for the robot base (x y) within the max distance 4 from the target point. 

Model:     The scene is a square room defined by bounding box 0, with walls defined by bounding boxes 1-4. There's a vertical wall in the middle of the room (bounding box 5). Several small obstacles (bounding boxes 6-20) are scattered around, some in clusters. I will avoid placing the robot within any of these obstacles.
           I will attempt to place the robot in a variety of locations around the target point, {target_point}, at a distance between 0.5 and 4. I will prioritize areas that appear to be open, while also trying some positions that are closer to the obstacles, to gather more information about the scene.
           
           Positions:
           ({target_point[0]} {target_point[1] + 0.6})
           ({target_point[0]} {target_point[1] - 0.6})
           ({target_point[0]} {target_point[1] + 1.2})
           ({target_point[0]} {target_point[1] - 1.2})
           ({target_point[0] + 0.6} {target_point[1]})
           ({target_point[0] - 0.6} {target_point[1]})
           ({target_point[0] + 1.2} {target_point[1]})
           ({target_point[0] - 1.2} {target_point[1]})
           ({target_point[0] + 0.42} {target_point[1] + 0.42})
           ({target_point[0] - 0.42} {target_point[1] + 0.42})
           ({target_point[0] + 0.42} {target_point[1] - 0.42})
           ({target_point[0] - 0.42} {target_point[1] - 0.42})
           ({target_point[0] + 0.84} {target_point[1] + 0.84})
           ({target_point[0] - 0.84} {target_point[1] + 0.84})
           ({target_point[0] + 0.84} {target_point[1] - 0.84})
           ({target_point[0] - 0.84} {target_point[1] - 0.84})
           ({target_point[0]} {target_point[1] + 3.0})
           ({target_point[0]} {target_point[1] - 3.0})
           ({target_point[0] + 3.0} {target_point[1]})
           ({target_point[0] - 3.0} {target_point[1]})
           ({target_point[0] + 2.1} {target_point[1] + 2.1})
           ({target_point[0] - 2.1} {target_point[1] + 2.1})
           ({target_point[0] + 2.1} {target_point[1] - 2.1})
           ({target_point[0] - 2.1} {target_point[1] - 2.1})
           ({target_point[0]} {target_point[1] + 2.5})
           

