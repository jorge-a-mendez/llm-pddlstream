User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v14, v16)
           Atom type(v8, v6)
           Atom rock(v5)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom rock(v7)
           Atom type(v1, v2)
           Atom objective(v17)
           Atom type(v5, v6)
           Atom supports(v10, v11)
           Atom rock(v3)
           Atom rock(v8)
           Atom onboard(v10, v12)
           Atom onboard(v10, v14)
           Atom free(v12, v16)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom objective(v19)
           Atom rock(v1)
           Atom conf(v12, v13)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom rock(v4)
           Atom atconf(v12, v13)
           Atom type(v3, v2)
           Atom lander(v9)
           Atom rover(v14)
           Atom conf(v14, v15)
           Atom camera(v10)
           Atom store(v16)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v3)
           Atom above(v14, #q3, v4)
           Atom conf(v14, #q3)
           Atom imagevisible(v14, #q4, #y2, v18)
           Atom imagerange(v14, #q4, v18)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v1)
           Atom above(v14, #q2, v5)
           Atom conf(v14, #q2)
           Atom imagevisible(v14, #q0, #y0, v17)
           Atom imagerange(v14, #q0, v17)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q5, #y3, v19)
           Atom imagerange(v14, #q5, v19)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #q7, v5)
           Atom conf(v12, #q7)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q6, #y4, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #o5, v4)
           Atom above(v12, #q8, v1)
           Atom conf(v12, #q8)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t1, v15)
           Atom motion(v14, #q5, #t11, #q1)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q1, #t14, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q1, #t8, #q3)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #t3, #q1)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q1, #t5, #q0)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #t0, #q1)
           Atom motion(v14, v15, #t4, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v12, #q6, #t10, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q4, #t18, #q5)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q1, #t6, #q4)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q0, #t19, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #t15, #q1)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #t13, #q6)
           Atom motion(v12, v13, #t17, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, v13, #t16, #q7)
           Atom motion(v12, #q7, #t12, #q6)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q6, #t9, #q7)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v14, #q2, #t2, #q1)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q1, #t7, #q2)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o3)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q7)
           Atom motion(v12, #o3, #o2, #q8)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #q7, #o2, #o3)
           Atom motion(v12, #q6, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #q6)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q7 v5 v16))
           ((sample_rock v12 #q8 v1 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q2 v5 v16))
           ((sample_rock v14 #q3 v4 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q6))
           ((move v12 #o3 #o2 #q7))
           ((move v12 #o3 #o2 #q8))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q6 #o2 #o3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #t10 v13))
           ((move v12 #q6 #t9 #q7))
           ((move v12 #q7 #o2 #o3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t12 #q6))
           ((move v12 #q8 #o2 #o3))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t13 #q6))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t16 #q7))
           ((move v12 v13 #t17 #q8))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t0 #q1))
           ((move v14 #q0 #t19 #q4))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #t1 v15))
           ((move v14 #q1 #t14 #q5))
           ((move v14 #q1 #t5 #q0))
           ((move v14 #q1 #t6 #q4))
           ((move v14 #q1 #t7 #q2))
           ((move v14 #q1 #t8 #q3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t2 #q1))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q1))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t15 #q1))
           ((move v14 #q4 #t18 #q5))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t11 #q1))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t4 #q0))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v14 #q0 #y0 v17 v10))
           ((calibrate v14 #q4 #y2 v18 v10))
           ((calibrate v14 #q5 #y3 v19 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v14 #q0 #y0 v17 v10 v11))
           ((take_image v14 #q4 #y2 v18 v10 v11))
           ((take_image v14 #q5 #y3 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y4 v9 v3))
           ((send_analysis v12 #q6 #y4 v9 v4))
           ((send_analysis v12 #q6 #y4 v9 v7))
           ((send_analysis v12 #q6 #y4 v9 v8))
           ((send_analysis v12 #q6 #y4 v9 v5))
           ((send_analysis v12 #q6 #y4 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_image v12 #q6 #y4 v9 v17 v11))
           ((send_image v12 #q6 #y4 v9 v18 v11))
           ((send_image v12 #q6 #y4 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Alright, let's break down this plan to achieve `new-axiom@0()`.**  The goal's complex, but essentially we need two rovers, some imaging, and some rock analysis.
           
           First, I identified the subgoals: the rovers need to be at certain locations, have free storage, and then there's the imaging and analysis components. I checked the initial state, and the rover positions and store availability are good to go initially.  This means we only need to focus on imaging and analysis.
           
           For the imaging part, I realized we need to *send* images, but to do that, we first need to *take* them. To take an image, we need to calibrate the camera and have the right image visibility.  Based on the problem setup, Rover `v14` has the best distinct observation points to complete the imaging tasks. After taking an image, we can then communicate it back to the lander. The plan involves moving Rover `v14` around to capture images of `v17`, `v18`, and `v19` using camera `v10` in mode `v11`, then sending each one.
           
           Next, I tackled the rock analysis.  We have to analyze one stone (`v1`) and one soil (`v5`).  For this, we need to sample the rocks, and then send the analysis. Both rovers have free storage and can handle this. Since the rocks are above specific configurations, I planned for rover `v14` to analyze soil `v5` and rover `v12` to analyze the stone `v1` to minimize movement.
           
           My final plan is a sequence of actions:
           1. `v14` will complete all the image tasks by moving around, calibrating the camera, taking images, sending images, and ending at its initial configuration.
           2. `v14` will then move to a new location and sample rock v5, send the analysis, and drop the rock to free its store.
           3. Simultaneously, `v12` moves to the location, samples stone `v1`, sends its analysis, and drops the rock to free its store.
           
           I confirmed that all the initial conditions are satisfied at the end and I have successfully addressed all subgoals.
           
)

Model:     **Alright, let's break down this plan to achieve `new-axiom@0()`.**  The goal's complex, but essentially we need two rovers, some imaging, and some rock analysis.
           
           First, I identified the subgoals: the rovers need to be at certain locations, have free storage, and then there's the imaging and analysis components. I checked the initial state, and the rover positions and store availability are good to go initially.  This means we only need to focus on imaging and analysis.
           
           For the imaging part, I realized we need to *send* images, but to do that, we first need to *take* them. To take an image, we need to calibrate the camera and have the right image visibility.  Based on the problem setup, Rover `v14` has the best distinct observation points to complete the imaging tasks. After taking an image, we can then communicate it back to the lander. The plan involves moving Rover `v14` around to capture images of `v17`, `v18`, and `v19` using camera `v10` in mode `v11`, then sending each one.
           
           Next, I tackled the rock analysis.  We have to analyze one stone (`v1`) and one soil (`v5`).  For this, we need to sample the rocks, and then send the analysis. Both rovers have free storage and can handle this. Since the rocks are above specific configurations, I planned for rover `v14` to analyze soil `v5` and rover `v12` to analyze the stone `v1` to minimize movement.
           
           My final plan is a sequence of actions:
           1. `v14` will complete all the image tasks by moving around, calibrating the camera, taking images, sending images, and ending at its initial configuration.
           2. `v14` will then move to a new location and sample rock v5, send the analysis, and drop the rock to free its store.
           3. Simultaneously, `v12` moves to the location, samples stone `v1`, sends its analysis, and drops the rock to free its store.
           
           I confirmed that all the initial conditions are satisfied at the end and I have successfully addressed all subgoals.
           

