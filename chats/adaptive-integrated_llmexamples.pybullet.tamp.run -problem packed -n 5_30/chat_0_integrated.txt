User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.103, -0.563), (-0.015, -0.476)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.107, -0.526), (0.202, -0.432)).
           Object v9 is a pose with position (-0.243, 0.177, 0.781) and quaternion (0.0, 0.0, -0.261, 0.965).
           Object v19 is a pose with position (0.098, -0.263, 0.781) and quaternion (0.0, 0.0, 0.708, 0.706).
           Object v17 is a pose with position (-0.04, 0.399, 0.781) and quaternion (0.0, 0.0, 0.897, -0.442).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v15 is a pose with position (-0.059, -0.519, 0.781) and quaternion (0.0, 0.0, 0.15, 0.989).
           Object v13 is a pose with position (0.155, -0.479, 0.781) and quaternion (0.0, 0.0, 0.519, 0.855).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.291, 0.13), (-0.195, 0.225)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.063, -0.298), (0.133, -0.228)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.089, 0.35), (0.009, 0.448)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom arm(v4)
           Atom graspable(v18)
           Atom atpose(v18, v19)
           Atom handempty(v6)
           Atom pose(v18, v19)
           Atom atbconf(v3)
           Atom supported(v12, v13, v11)
           Atom stackable(v8, v10)
           Atom stackable(v14, v20)
           Atom bconf(v3)
           Atom supported(v14, v15, v11)
           Atom pose(v14, v15)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom controllable(v4)
           Atom pose(v12, v13)
           Atom supported(v18, v19, v11)
           Atom stackable(v12, v10)
           Atom stackable(v16, v10)
           Atom atpose(v16, v17)
           Atom atpose(v12, v13)
           Atom aconf(v6, v7)
           Atom stackable(v18, v20)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v20)
           Atom pose(v16, v17)
           Atom supported(v8, v9, v11)
           Atom atpose(v14, v15)
           Atom graspable(v8)
           Atom supported(v16, v17, v11)
           Atom ataconf(v6, v7)
           Atom aconf(v4, v5)
           Atom stackable(v14, v10)
           Atom graspable(v16)
           Atom stackable(v16, v20)
           Atom arm(v6)
           Atom graspable(v14)
           Atom stackable(v8, v20)
           Atom atpose(v8, v9)
           Atom graspable(v12)
           Atom stackable(v18, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom grasp(v12, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom grasp(v14, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v20)
           Atom grasp(v16, #o1)
           Atom supported(v18, #o2, v20)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v20)
           Atom supported(v16, #o2, v10)
           Atom grasp(v8, #o1)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v18, #o1)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The task requires placing five objects (v8, v12, v14, v16, v18) onto the surface v20.
           The initial state shows that objects v8, v12, v14, v16, and v18 are currently at poses v9, v13, v15, v17, and v19 respectively, and all are supported by v11.
           All of the objects are graspable by the robot. The robot arm v4 is at configuration v5 and arm v6 is at configuration v7. The robot base is at v3.
           There is only one available action instance: `(move_base v3 v3 #o0)`. This action effectively moves the base from v3 to v3, which means the base doesn't move. The continuous parameter #o0 is the base trajectory for this non-movement.
           
           The goal is to have all five objects on surface v20. This requires a series of pick and place actions. However, the initial state *only* lists `move_base` as an available action instance. There are no `pick` or `place` action instances provided, and thus no way to manipulate the objects. Therefore, it is impossible to achieve the goal with the given available actions.

