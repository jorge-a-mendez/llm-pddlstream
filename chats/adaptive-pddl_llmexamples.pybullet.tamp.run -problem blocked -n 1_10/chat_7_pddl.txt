User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v15, v16)
           Atom canmove()
           Atom atpose(v12, v13)
           Atom stackable(v8, v18)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v20, v15, v16)
           Atom arm(v6)
           Atom pose(v12, v13)
           Atom atpose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom type(v8, v17)
           Atom bconf(v3)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom stackable(v12, v10)
           Atom graspable(v8)
           Atom supported(v12, v13, v14)
           Atom handempty(v6)
           Atom arm(v4)
           Atom atpose(v15, v16)
           Atom pose(v8, v9)
           Atom stackable(v8, v10)
           Atom graspable(v15)
           Atom supported(v15, v16, v11)
           Atom stackable(v15, v10)
           Atom controllable(v4)
           Atom aconf(v6, v7)
           Atom ataconf(v4, v5)
           Atom aconf(v4, v5)
           Atom graspable(v12)
           Atom ataconf(v6, v7)
           Atom handempty(v4)
           Atom atbconf(v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #o1)
           Atom supported(v12, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v15, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom grasp(v8, v22)
           Atom grasp(v8, v21)
           Atom grasp(v8, v20)
           Atom grasp(v8, v23)
           Atom bconf(v28)
           Atom atraj(v29)
           Atom kin(v4, v8, v19, v22, v28, v29)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v21, v24, v25)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v8, v19, v20, #q2, #t5)
           Atom bconf(#q3)
           Atom atraj(#t7)
           Atom kin(v4, v8, v9, v20, #q3, #t7)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v23, v26, v27)
           Atom basemotion(v3, #o0, v28)
           Atom basemotion(v28, #o0, v3)
           Atom basemotion(v28, #o0, v28)
           Atom basemotion(v28, #o0, v26)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v26, #o0, v28)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v3, #o0, v26)
           Atom basemotion(v28, #o0, v24)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v24, #o0, v28)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(#q2, #o0, v28)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(v26, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, v24)
           Atom basemotion(v24, #o0, #q2)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(#q2, #o0, v26)
           Atom basemotion(v28, #o0, #q2)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(v28, #o0, #q3)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q3)
           Atom basemotion(#q3, #o0, v24)
           Atom basemotion(v24, #o0, #q3)
           Atom basemotion(#q3, #o0, v26)
           Atom basemotion(v26, #o0, #q3)
           Atom basemotion(#q3, #o0, v28)
           Atom basemotion(#q3, #o0, v3)
           Atom btraj(#t8)
           Atom basemotion(#q3, #t8, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom basemotion(v28, #o0, #o3)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, v28)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v24)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v28 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v28 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v24 #o0))
           ((move_base #q3 v26 #o0))
           ((move_base #q3 v28 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q2 #t8))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q3 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v28 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q3 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v28 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v28 #o3 #o0))
           ((move_base v28 #q2 #o0))
           ((move_base v28 #q3 #o0))
           ((move_base v28 v24 #o0))
           ((move_base v28 v26 #o0))
           ((move_base v28 v28 #o0))
           ((move_base v28 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v28 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t6))
           ((move_base v3 #q3 #t9))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 #q2 #t5))
           ((place v4 v8 v19 v20 #q2 #t5))
           ((pick v4 v8 v19 v21 v24 v25))
           ((place v4 v8 v19 v21 v24 v25))
           ((pick v4 v8 v19 v22 v28 v29))
           ((place v4 v8 v19 v22 v28 v29))
           ((pick v4 v8 v19 v23 v26 v27))
           ((place v4 v8 v19 v23 v26 v27))
           ((pick v4 v8 v9 v20 #q3 #t7))
           ((place v4 v8 v9 v20 #q3 #t7))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `Atom new-axiom@0()`, which, according to the axioms, means `on(?green, v18)` and `type(?green, v17)`. In the initial state, we have `atpose(v8, v9)`, `supported(v8, v9, v11)`, and `type(v8, v17)`. This means `v8` is currently on `v11` and is of type `v17`. To achieve `on(v8, v18)` (assuming `?green` refers to `v8`), we need to pick up `v8` from `v11` and place it on `v18`.
           
           Looking at the initial state, `v8` is at `pose v9`. The robot arm `v4` is `handempty`. We have several kin instances for `v4` and `v8`. We need to find one that picks `v8` from `v9` and allows placing it on `v18`.
           
           We see `kin(v4, v8, v9, v20, #q3, #t7)`. This allows us to pick `v8` from `pose v9` using grasp `v20` when the robot base is at `bconf #q3`.
           
           After picking `v8`, we need to place it on `v18`. The poses where `v8` can be placed on `v18` are implicitly defined by `supported(v8, v19, v18)` and `supported(v8, #o2, v18)`. We'll need a place action that uses one of these poses and has a matching kin.
           
           Let's check the available place actions for `v8` on `v18`:
           `place v4 v8 v19 v20 #q2 #t5` implies placing `v8` at `pose v19` using grasp `v20` when the base is at `bconf #q2`.
           `place v4 v8 #o2 v20 #o3 #o4` implies placing `v8` at `pose #o2` using grasp `v20` when the base is at `bconf #o3`.
           
           If we use `pick v4 v8 v9 v20 #q3 #t7`, then `v4` will be holding `v8` with `grasp v20` and the robot will be at `bconf #q3`.
           To place it on `v18` at `v19` we need `place v4 v8 v19 v20 #q2 #t5`. This requires moving the base from `#q3` to `#q2`. There is a `move_base #q3 #q2 #t8` action.
           
           So the plan would be:
           1. Move base to `#q3`. (If not already there. The initial `atbconf` is `v3`).
           2. Pick `v8` using `v4` from `v9` with `g20` (which requires base at `#q3`).
           3. Move base from `#q3` to `#q2`.
           4. Place `v8` using `v4` onto `v18` at `v19` with `g20` (which requires base at `#q2`).
           
           Let's check `atbconf v3`. So, we need to move from `v3` to `#q3` first. There is `move_base v3 #q3 #t9`.
           
           --Plan--:
           (move_base v3 #q3 #t9)
           (pick v4 v8 v9 v20 #q3 #t7)
           (move_base #q3 #q2 #t8)
           (place v4 v8 v19 v20 #q2 #t5)

