User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v14, v16)
           Atom rock(v4)
           Atom free(v12, v16)
           Atom rock(v5)
           Atom objective(v19)
           Atom type(v8, v6)
           Atom lander(v9)
           Atom supports(v10, v11)
           Atom type(v4, v2)
           Atom atconf(v14, v15)
           Atom onboard(v10, v14)
           Atom objective(v20)
           Atom type(v1, v2)
           Atom onboard(v10, v12)
           Atom type(v5, v6)
           Atom mode(v11)
           Atom objective(v18)
           Atom rock(v7)
           Atom rover(v14)
           Atom rock(v3)
           Atom atconf(v12, v13)
           Atom conf(v12, v13)
           Atom objective(v17)
           Atom camera(v10)
           Atom conf(v14, v15)
           Atom rock(v1)
           Atom store(v16)
           Atom type(v7, v6)
           Atom rover(v12)
           Atom rock(v8)
           Atom type(v3, v2)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #o5, v5)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The task is to achieve the goal `new-axiom@0()`, which is an axiom indicating a complex state involving at least two rovers at their respective configurations, having free stores, having received images for specific objectives, and having received analysis for specific rock types.
           
           Looking at the initial state, we have two rovers: `v12` at `v13` and `v14` at `v15`. Both rovers have a free store `v16`. This satisfies the `atconf` and `free` parts of the axiom.
           
           However, none of the `receivedimage` or `receivedanalysis` predicates are true in the initial state. The available actions are only `move` and `drop_rock`. `drop_rock` can only be performed if a store is full, which is not the case here. `move` actions only change the rover's configuration, which doesn't help in achieving the `receivedimage` or `receivedanalysis` predicates.
           
           The available action instances do not include any actions like `take_image`, `send_image`, `sample_rock`, `calibrate`, or `send_analysis`, which are necessary to achieve the `receivedimage` and `receivedanalysis` predicates. Without these actions, it's impossible to gather images, analyze rocks, or send any data to fulfill the goal's requirements.
           
           Therefore, the goal is unreachable with the given limited set of allowed actions.

