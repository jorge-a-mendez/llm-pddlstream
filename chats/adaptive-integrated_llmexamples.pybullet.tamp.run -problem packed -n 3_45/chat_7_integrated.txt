User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v4: object
           v40: object
           v41: object
           v42: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p3 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p12 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p13 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.086, 0.548, 0.781) and quaternion (0.0, 0.0, 0.919, -0.395).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object p10 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (0.074, 0.405, 0.781) and quaternion (0.0, 0.0, 0.5, 0.866).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           Object p7 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (0.114, -0.448, 0.781) and quaternion (0.0, 0.0, 0.993, -0.114).
           Object p8 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v8, p6)
           Atom handempty(v6)
           Atom pose(v14, p5)
           Atom kin(v27, v32, p9, v41, v30, v31)
           Atom ~test-cfree-pose-pose-negative(v12, p4, v8, p3)
           Atom atpose(v8, v9)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v16)
           Atom pose(v12, p9)
           Atom supported(v14, v15, v11)
           Atom kin(v27, v28, p6, v40, v30, v31)
           Atom supported(v12, p7, v16)
           Atom supported(v14, p5, v16)
           Atom kin(v27, v32, p4, v29, v30, v31)
           Atom atpose(v14, v15)
           Atom stackable(v8, v16)
           Atom pose(v14, p13)
           Atom supported(v8, v9, v11)
           Atom kin(v27, v28, p14, v40, v30, v31)
           Atom aconf(v6, v7)
           Atom graspable(v14)
           Atom atbconf(v3)
           Atom pose(v12, p7)
           Atom kin(v27, v28, p11, v40, v30, v31)
           Atom supported(v14, p10, v16)
           Atom supported(v8, p3, v16)
           Atom controllable(v4)
           Atom kin(v27, v33, p13, v42, v30, v31)
           Atom pose(v14, v15)
           Atom bconf(v3)
           Atom pose(v8, v9)
           Atom supported(v8, p6, v16)
           Atom pose(v14, p10)
           Atom supported(v14, p13, v16)
           Atom arm(v4)
           Atom kin(v27, v32, p12, v41, v30, v31)
           Atom supported(v8, p11, v16)
           Atom pose(v8, p14)
           Atom arm(v6)
           Atom supported(v12, p12, v16)
           Atom stackable(v12, v10)
           Atom pose(v14, p8)
           Atom handempty(v4)
           Atom supported(v12, p9, v16)
           Atom canmove()
           Atom pose(v12, v13)
           Atom aconf(v4, v5)
           Atom supported(v12, v13, v11)
           Atom kin(v27, v33, p8, v42, v30, v31)
           Atom pose(v12, p12)
           Atom pose(v8, p3)
           Atom pose(v12, p4)
           Atom kin(v27, v33, p10, v42, v30, v31)
           Atom atpose(v12, v13)
           Atom supported(v8, p14, v16)
           Atom kin(v27, v28, p3, v29, v30, v31)
           Atom graspable(v8)
           Atom stackable(v14, v16)
           Atom kin(v27, v33, p5, v29, v30, v31)
           Atom graspable(v12)
           Atom supported(v12, p4, v16)
           Atom pose(v8, p11)
           Atom stackable(v14, v10)
           Atom supported(v14, p8, v16)
           Atom kin(v27, v32, p7, v41, v30, v31)
           Atom ataconf(v6, v7)
           Atom stackable(v8, v10)
           Atom grasp(v12, #g2)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom grasp(v8, #g1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v14, #g0)
           Atom supported(v12, #o2, v16)
           Atom supported(v8, #o2, v16)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g1, #q0, #t0)
           Atom bconf(#q7)
           Atom atraj(#t13)
           Atom kin(v4, v8, p6, #g1, #q7, #t13)
           Atom bconf(#q9)
           Atom atraj(#t29)
           Atom kin(v4, v8, p14, #g1, #q9, #t29)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, p11, #g1, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t9)
           Atom kin(v4, v8, p3, #g1, #q5, #t9)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, p4, #g2, #q2, #t2)
           Atom bconf(#q11)
           Atom atraj(#t35)
           Atom kin(v4, v12, p12, #g2, #q11, #t35)
           Atom bconf(#q6)
           Atom atraj(#t10)
           Atom kin(v4, v12, p7, #g2, #q6, #t10)
           Atom kin(v4, v12, p9, #g2, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v12, v13, #g2, #q4, #t8)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, v15, #g0, #q1, #t1)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v14, p5, #g0, #q3, #t3)
           Atom kin(v4, v14, p10, #g0, #o3, #o4)
           Atom bconf(#q10)
           Atom atraj(#t32)
           Atom kin(v4, v14, p13, #g0, #q10, #t32)
           Atom bconf(#q8)
           Atom atraj(#t14)
           Atom kin(v4, v14, p8, #g0, #q8, #t14)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q11, #o0, v3)
           Atom btraj(#t41)
           Atom basemotion(#q11, #t41, #q0)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q0, #o0, #q11)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q11, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q11)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q11)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q11, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, #q5)
           Atom btraj(#t24)
           Atom basemotion(#q0, #t24, #q5)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q8, #o0, #q5)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q8, #o0, #q11)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q11, #o0, #q8)
           Atom basemotion(#q5, #o0, #q8)
           Atom basemotion(#q8, #o0, #q0)
           Atom basemotion(#q0, #o0, #q8)
           Atom btraj(#t39)
           Atom basemotion(#q9, #t39, #q0)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q9, #o0, v3)
           Atom btraj(#t30)
           Atom basemotion(#q0, #t30, #q9)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q10, #o0, #q2)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q2, #o0, #q10)
           Atom basemotion(#q9, #o0, #q10)
           Atom basemotion(#q5, #o0, #q10)
           Atom basemotion(v3, #o0, #q10)
           Atom btraj(#t40)
           Atom basemotion(#q10, #t40, #q0)
           Atom basemotion(#q0, #o0, #q10)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(#q10, #o0, #q8)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q8, #o0, #q10)
           Atom basemotion(#q10, #o0, #q5)
           Atom basemotion(#q10, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q11, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, #q8)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q3, #o0, #q11)
           Atom basemotion(#q3, #o0, #q10)
           Atom basemotion(#q2, #o0, #q3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q8, #o0, #q3)
           Atom btraj(#t43)
           Atom basemotion(#q1, #t43, #q10)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t33)
           Atom basemotion(#q9, #t33, #q1)
           Atom btraj(#t42)
           Atom basemotion(#q1, #t42, #q9)
           Atom btraj(#t23)
           Atom basemotion(#q1, #t23, #q8)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t34)
           Atom basemotion(#q10, #t34, #q1)
           Atom basemotion(#q11, #o0, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t17)
           Atom basemotion(#q8, #t17, #q1)
           Atom btraj(#t25)
           Atom basemotion(#q2, #t25, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom btraj(#t44)
           Atom basemotion(#q1, #t44, #q11)
           Atom btraj(#t26)
           Atom basemotion(#q1, #t26, #q3)
           Atom basemotion(#q8, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q9, #o0, #q4)
           Atom basemotion(#q4, #o0, #q1)
           Atom btraj(#t28)
           Atom basemotion(#q5, #t28, #q4)
           Atom btraj(#t31)
           Atom basemotion(v3, #t31, #q4)
           Atom basemotion(#q11, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom btraj(#t20)
           Atom basemotion(#q4, #t20, #q8)
           Atom btraj(#t38)
           Atom basemotion(#q4, #t38, #q11)
           Atom basemotion(#q10, #o0, #q4)
           Atom btraj(#t36)
           Atom basemotion(#q4, #t36, #q9)
           Atom btraj(#t37)
           Atom basemotion(#q4, #t37, #q10)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q2, #o0, #q4)
           Atom btraj(#t27)
           Atom basemotion(#q4, #t27, #q2)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q10, #o0, #q7)
           Atom basemotion(#q7, #o0, #q5)
           Atom btraj(#t16)
           Atom basemotion(#q7, #t16, #q1)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q7, #o0, #q10)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q11, #o0, #q7)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q7, #o0, #q8)
           Atom btraj(#t19)
           Atom basemotion(#q4, #t19, #q7)
           Atom basemotion(#q7, #o0, #q11)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q7, #o0, #q0)
           Atom btraj(#t22)
           Atom basemotion(#q1, #t22, #q7)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q6, #o0, #q11)
           Atom btraj(#t12)
           Atom basemotion(#q0, #t12, #q6)
           Atom basemotion(#q6, #o0, #q10)
           Atom basemotion(#q2, #o0, #q6)
           Atom btraj(#t15)
           Atom basemotion(#q6, #t15, #q1)
           Atom btraj(#t18)
           Atom basemotion(#q4, #t18, #q6)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q10, #o0, #q6)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q6, #o0, #q2)
           Atom btraj(#t21)
           Atom basemotion(#q1, #t21, #q6)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q3, #o0, #q6)
           Atom btraj(#t11)
           Atom basemotion(#q6, #t11, #q4)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q11, #o0, #q6)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q6, #o0, #q3)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q10 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q6 #t12))
           ((move_base #q0 #q5 #t24))
           ((move_base #q0 #q9 #t30))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q6 #t21))
           ((move_base #q1 #q7 #t22))
           ((move_base #q1 #q8 #t23))
           ((move_base #q1 #q3 #t26))
           ((move_base #q1 #q9 #t42))
           ((move_base #q1 #q10 #t43))
           ((move_base #q1 #q11 #t44))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q2 #o0))
           ((move_base #q10 #q3 #o0))
           ((move_base #q10 #q4 #o0))
           ((move_base #q10 #q5 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q1 #t34))
           ((move_base #q10 #q0 #t40))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q3 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q0 #t41))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q1 #t25))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q10 #o0))
           ((move_base #q3 #q11 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q6 #t18))
           ((move_base #q4 #q7 #t19))
           ((move_base #q4 #q8 #t20))
           ((move_base #q4 #q2 #t27))
           ((move_base #q4 #q9 #t36))
           ((move_base #q4 #q10 #t37))
           ((move_base #q4 #q11 #t38))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q10 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q4 #t28))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q10 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q4 #t11))
           ((move_base #q6 #q1 #t15))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q1 #t16))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q1 #t17))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q1 #t33))
           ((move_base #q9 #q0 #t39))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t31))
           ((move_base v3 #q0 #t4))
           ((move_base v3 #q1 #t5))
           ((move_base v3 #q2 #t6))
           ((move_base v3 #q3 #t7))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p12 #g2 #q11 #t35))
           ((place v4 v12 p12 #g2 #q11 #t35))
           ((pick v4 v12 p4 #g2 #q2 #t2))
           ((place v4 v12 p4 #g2 #q2 #t2))
           ((pick v4 v12 p7 #g2 #q6 #t10))
           ((place v4 v12 p7 #g2 #q6 #t10))
           ((pick v4 v12 p9 #g2 #o3 #o4))
           ((place v4 v12 p9 #g2 #o3 #o4))
           ((pick v4 v12 v13 #g2 #q4 #t8))
           ((place v4 v12 v13 #g2 #q4 #t8))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 p10 #g0 #o3 #o4))
           ((place v4 v14 p10 #g0 #o3 #o4))
           ((pick v4 v14 p13 #g0 #q10 #t32))
           ((place v4 v14 p13 #g0 #q10 #t32))
           ((pick v4 v14 p5 #g0 #q3 #t3))
           ((place v4 v14 p5 #g0 #q3 #t3))
           ((pick v4 v14 p8 #g0 #q8 #t14))
           ((place v4 v14 p8 #g0 #q8 #t14))
           ((pick v4 v14 v15 #g0 #q1 #t1))
           ((place v4 v14 v15 #g0 #q1 #t1))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 p11 #g1 #o3 #o4))
           ((place v4 v8 p11 #g1 #o3 #o4))
           ((pick v4 v8 p14 #g1 #q9 #t29))
           ((place v4 v8 p14 #g1 #q9 #t29))
           ((pick v4 v8 p3 #g1 #q5 #t9))
           ((place v4 v8 p3 #g1 #q5 #t9))
           ((pick v4 v8 p6 #g1 #q7 #t13))
           ((place v4 v8 p6 #g1 #q7 #t13))
           ((pick v4 v8 v9 #g1 #q0 #t0))
           ((place v4 v8 v9 #g1 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains three objects, `v8`, `v12`, and `v14`, and a large surface `v16` (aabb = ((-0.135, -0.135), (0.135, 0.135))). The goal is to place all three objects `v8`, `v12`, and `v14` on the surface `v16`. Currently, `v8` is at `v9` on `v11`, `v12` is at `v13` on `v11`, and `v14` is at `v15` on `v11`. All objects are initially on `v11`, which is not the target surface `v16`. Thus, the robot needs to pick up each object from `v11` and place it onto `v16`.
           
           The robot's current base configuration is `v3`. It has two arms, `v4` and `v6`, both are initially empty. We need to use arm `v4` since all `kin` relations are defined for `v4`.
           There are multiple poses defined for each object on `v16`. We need to select valid and collision-free poses for placement. The `#o2` pose is supported by `v10` and `v16` for all three objects. We will place the objects at the `#o2` pose since it is supported by the target surface `v16` and can be used for all objects.
           
           Let's plan for each object:
           1. **v8**: Currently at `v9`. We need to `pick` it from `v9` and `place` it on `v16` at `#o2`.
           2. **v12**: Currently at `v13`. We need to `pick` it from `v13` and `place` it on `v16` at `#o2`.
           3. **v14**: Currently at `v15`. We need to `pick` it from `v15` and `place` it on `v16` at `#o2`.
           
           We will ensure the base is in the correct configuration for each pick and place operation. Since all pick/place actions for a given object/pose pair use the same base configuration and trajectory, we can use the provided actions directly.
           
           The plan will be:
           1. Pick `v8` from `v9` using `q0` (base configuration for `kin(v4, v8, v9, #g1, #q0, #t0)`).
           2. Move the base from `q0` to `#o3` (base configuration for `kin(v4, v8, #o2, #g1, #o3, #o4)` and `kin(v4, v12, #o2, #g2, #o3, #o4)` and `kin(v4, v14, #o2, #g0, #o3, #o4)`).
           3. Place `v8` onto `v16` at `#o2`.
           4. Pick `v12` from `v13` using `q4` (base configuration for `kin(v4, v12, v13, #g2, #q4, #t8)`).
           5. Move the base from `q4` to `#o3`.
           6. Place `v12` onto `v16` at `#o2`.
           7. Pick `v14` from `v15` using `q1` (base configuration for `kin(v4, v14, v15, #g0, #q1, #t1)`).
           8. Move the base from `q1` to `#o3`.
           9. Place `v14` onto `v16` at `#o2`.
           
           Note that for placing multiple objects at `#o2` on `v16`, we need to provide unique continuous values for each object, even if they share the same pose name in PDDL. Since `#o2` is an arbitrary pose, we can define unique values for each object on `v16`.
           
           The bounding box for `v16` is `((-0.135, -0.135), (0.135, 0.135))`. For `v8` (box `((-0.085, -0.035), (-0.015, 0.035))`), `v12` (box `((-0.035, -0.035), (0.035, 0.035))`), `v14` (box `((0.015, -0.035), (0.085, 0.035))`), the placements must be within the `v16`'s bounds.
           Let's assign specific positions for each object at `#o2` on `v16`. A height of 0.782 is a common table height, so we will use that for z.
           
           --Plan--:
           (move_base v3 #q0 #o0)
           (pick v4 v8 v9 #g1 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 #o2 #g1 #o3 #o4)
           (move_base #o3 #q4 #o0)
           (pick v4 v12 v13 #g2 #q4 #t8)
           (move_base #q4 #o3 #o0)
           (place v4 v12 #o2 #g2 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v14 v15 #g0 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v14 #o2 #g0 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v16): (0.0 0.0 0.782 0.0)
           (#o2 v12 v16): (0.03 0.03 0.782 0.0)
           (#o2 v14 v16): (-0.03 -0.03 0.782 0.0)

User:      The plan you provided contains the following invalid actions: `(move_base v3 #q0 #o0)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q10 #o0))
           ((move_base #q0 #q11 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 #q8 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q6 #t12))
           ((move_base #q0 #q5 #t24))
           ((move_base #q0 #q9 #t30))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q6 #t21))
           ((move_base #q1 #q7 #t22))
           ((move_base #q1 #q8 #t23))
           ((move_base #q1 #q3 #t26))
           ((move_base #q1 #q9 #t42))
           ((move_base #q1 #q10 #t43))
           ((move_base #q1 #q11 #t44))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q2 #o0))
           ((move_base #q10 #q3 #o0))
           ((move_base #q10 #q4 #o0))
           ((move_base #q10 #q5 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q1 #t34))
           ((move_base #q10 #q0 #t40))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q1 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q2 #o0))
           ((move_base #q11 #q3 #o0))
           ((move_base #q11 #q4 #o0))
           ((move_base #q11 #q5 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q0 #t41))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q10 #o0))
           ((move_base #q2 #q11 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q1 #t25))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q10 #o0))
           ((move_base #q3 #q11 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q6 #t18))
           ((move_base #q4 #q7 #t19))
           ((move_base #q4 #q8 #t20))
           ((move_base #q4 #q2 #t27))
           ((move_base #q4 #q9 #t36))
           ((move_base #q4 #q10 #t37))
           ((move_base #q4 #q11 #t38))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q10 #o0))
           ((move_base #q5 #q11 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 #q8 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q4 #t28))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q10 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q4 #t11))
           ((move_base #q6 #q1 #t15))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q1 #t16))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q0 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q11 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q4 #o0))
           ((move_base #q8 #q5 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q1 #t17))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q4 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base #q9 #q1 #t33))
           ((move_base #q9 #q0 #t39))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t31))
           ((move_base v3 #q0 #t4))
           ((move_base v3 #q1 #t5))
           ((move_base v3 #q2 #t6))
           ((move_base v3 #q3 #t7))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p12 #g2 #q11 #t35))
           ((place v4 v12 p12 #g2 #q11 #t35))
           ((pick v4 v12 p4 #g2 #q2 #t2))
           ((place v4 v12 p4 #g2 #q2 #t2))
           ((pick v4 v12 p7 #g2 #q6 #t10))
           ((place v4 v12 p7 #g2 #q6 #t10))
           ((pick v4 v12 p9 #g2 #o3 #o4))
           ((place v4 v12 p9 #g2 #o3 #o4))
           ((pick v4 v12 v13 #g2 #q4 #t8))
           ((place v4 v12 v13 #g2 #q4 #t8))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 p10 #g0 #o3 #o4))
           ((place v4 v14 p10 #g0 #o3 #o4))
           ((pick v4 v14 p13 #g0 #q10 #t32))
           ((place v4 v14 p13 #g0 #q10 #t32))
           ((pick v4 v14 p5 #g0 #q3 #t3))
           ((place v4 v14 p5 #g0 #q3 #t3))
           ((pick v4 v14 p8 #g0 #q8 #t14))
           ((place v4 v14 p8 #g0 #q8 #t14))
           ((pick v4 v14 v15 #g0 #q1 #t1))
           ((place v4 v14 v15 #g0 #q1 #t1))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 p11 #g1 #o3 #o4))
           ((place v4 v8 p11 #g1 #o3 #o4))
           ((pick v4 v8 p14 #g1 #q9 #t29))
           ((place v4 v8 p14 #g1 #q9 #t29))
           ((pick v4 v8 p3 #g1 #q5 #t9))
           ((place v4 v8 p3 #g1 #q5 #t9))
           ((pick v4 v8 p6 #g1 #q7 #t13))
           ((place v4 v8 p6 #g1 #q7 #t13))
           ((pick v4 v8 v9 #g1 #q0 #t0))
           ((place v4 v8 v9 #g1 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The initial base configuration is `v3`. The invalid action was `(move_base v3 #q0 #o0)`. Instead, I should use `(move_base v3 #q0 #t4)` based on the provided list of valid actions. I will correct this and check the other `move_base` actions.
           
           Revised plan:
           1. Move the robot base from `v3` to `q0` (the base configuration for picking `v8` from `v9`).
           2. Pick `v8` from `v9`.
           3. Move the robot base from `q0` to `#o3` (the base configuration for placing objects at `#o2`).
           4. Place `v8` onto `v16` at `#o2`.
           5. Move the robot base from `#o3` to `q4` (the base configuration for picking `v12` from `v13`).
           6. Pick `v12` from `v13`.
           7. Move the robot base from `q4` to `#o3`.
           8. Place `v12` onto `v16` at `#o2`.
           9. Move the robot base from `#o3` to `q1` (the base configuration for picking `v14` from `v15`).
           10. Pick `v14` from `v15`.
           11. Move the robot base from `q1` to `#o3`.
           12. Place `v14` onto `v16` at `#o2`.
           
           All continuous poses for #o2 will be within the bounding box of v16 `((-0.135, -0.135), (0.135, 0.135))`.
           
           --Plan--:
           (move_base v3 #q0 #t4)
           (pick v4 v8 v9 #g1 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v8 #o2 #g1 #o3 #o4)
           (move_base #o3 #q4 #o0)
           (pick v4 v12 v13 #g2 #q4 #t8)
           (move_base #q4 #o3 #o0)
           (place v4 v12 #o2 #g2 #o3 #o4)
           (move_base #o3 #q1 #o0)
           (pick v4 v14 v15 #g0 #q1 #t1)
           (move_base #q1 #o3 #o0)
           (place v4 v14 #o2 #g0 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v16): (0.0 0.0 0.782 0.0)
           (#o2 v12 v16): (0.03 0.03 0.782 0.0)
           (#o2 v14 v16): (-0.03 -0.03 0.782 0.0)

