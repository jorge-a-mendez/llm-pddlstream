User:      The robot can only be placed within the following limits for (x, y, theta):
           x: [-2.5, 2.5], y: [-2.5, 2.5], theta: [-inf, inf]
           
           New request:
           
           Target point: {target_point}. Please provide a valid placement for the robot base (x y) within the max distance 2 from the target point. 

Model:     The scene is enclosed by a large square (obstacles 0-4). There's a vertical wall at x=0 (obstacle 5). Many small obstacles are scattered throughout the scene. I need to find 3 base positions within a distance of 2 from the target point {target_point}, while avoiding collisions with fixed obstacles. I will prioritize positions that are clearly away from the known obstacles.
           
           Positions:
           ({target_point[0]} {target_point[1] + 1.5})
           ({target_point[0]} {target_point[1] - 1.5})
           ({target_point[0] + 1.5} {target_point[1]})

User:      The robot can only be placed within the following limits for (x, y, theta):
           x: [-2.5, 2.5], y: [-2.5, 2.5], theta: [-inf, inf]
           
           New request:
           
           Target point: {target_point}. Please provide a valid placement for the robot base (x y) within the max distance 2 from the target point. 

Model:     The scene is enclosed by a large square (obstacles 0-4). There's a vertical wall at x=0 (obstacle 5). Many small obstacles are scattered throughout the scene. I need to find 3 base positions within a distance of 2 from the target point {target_point}, while avoiding collisions with fixed obstacles. I will prioritize positions that are clearly away from the known obstacles.
           
           Positions:
           ({target_point[0]} {target_point[1] + 1.5})
           ({target_point[0]} {target_point[1] - 1.5})
           ({target_point[0] + 1.5} {target_point[1]})

