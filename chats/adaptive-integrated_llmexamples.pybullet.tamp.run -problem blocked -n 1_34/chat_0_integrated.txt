User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v3 is a base configuration with (x, y, theta) = (2.5, 0.0, 0.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v13 is a pose with position (-4.457, 0.077, 0.801) and quaternion (0.0, 0.0, -0.835, 0.55).
           Object v16 is a pose with position (4.35, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.0)).
           Object v5 is an arm configuration with joint values (0.393, 0.333, 0.0, -1.522, 2.722, -1.219, -2.989).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.465, 0.265), (4.535, 0.335)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.2, -0.6), (4.8, 0.6)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.8, -0.6), (-4.2, 0.6)).
           Object v9 is a pose with position (4.5, 0.3, 0.8) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-4.503, 0.031), (-4.411, 0.123)).
           Object v15 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((4.315, 0.265), (4.385, 0.335)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom bconf(v3)
           Atom arm(v6)
           Atom aconf(v4, v5)
           Atom ataconf(v4, v5)
           Atom stackable(v12, v10)
           Atom graspable(v15)
           Atom ataconf(v6, v7)
           Atom atpose(v12, v13)
           Atom supported(v8, v9, v11)
           Atom aconf(v6, v7)
           Atom controllable(v4)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v18)
           Atom type(v8, v17)
           Atom handempty(v4)
           Atom graspable(v12)
           Atom type(v12, v17)
           Atom pose(v12, v13)
           Atom stackable(v8, v10)
           Atom graspable(v8)
           Atom supported(v12, v13, v14)
           Atom stackable(v15, v10)
           Atom atpose(v15, v16)
           Atom canmove()
           Atom stackable(v12, v18)
           Atom handempty(v6)
           Atom pose(v15, v16)
           Atom arm(v4)
           Atom atbconf(v3)
           Atom supported(v15, v16, v11)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #o1)
           Atom supported(v8, #o2, v18)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `new-axiom@0()`, which is equivalent to `on(green, v18)` and `type(green, v17)`. In the initial state, `type(v8, v17)` and `type(v12, v17)` so `v8` or `v12` could be `green`. We need to achieve `on(v8, v18)` or `on(v12, v18)`. `on(?o, ?r)` is defined as `supported(?o, ?p, ?r)` and `atpose(?o, ?p)`.
           
           Let's try to achieve `on(v8, v18)`. This requires `supported(v8, ?p, v18)` and `atpose(v8, ?p)`. From the initial state, we have `supported(v8, #o2, v18)`. So, the goal becomes `atpose(v8, #o2)`. Currently, `atpose(v8, v9)`. Therefore, we need to pick `v8` from `v9` and place it at `#o2` on `v18`.
           
           However, the only action instance available is `(move_base v3 v3 #o0)`. This action does not allow us to pick or place objects, which are necessary to change the pose of `v8`. Therefore, the goal cannot be achieved with the given available actions.

