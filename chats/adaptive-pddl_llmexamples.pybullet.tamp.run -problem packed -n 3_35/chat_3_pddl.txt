User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom ataconf(v4, v5)
           Atom pose(v14, v15)
           Atom bconf(v3)
           Atom graspable(v14)
           Atom handempty(v4)
           Atom handempty(v6)
           Atom stackable(v14, v16)
           Atom atpose(v12, v13)
           Atom controllable(v4)
           Atom stackable(v14, v10)
           Atom aconf(v4, v5)
           Atom arm(v4)
           Atom stackable(v8, v10)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom aconf(v6, v7)
           Atom supported(v12, v13, v11)
           Atom stackable(v12, v16)
           Atom stackable(v8, v16)
           Atom stackable(v12, v10)
           Atom atpose(v14, v15)
           Atom graspable(v12)
           Atom supported(v8, v9, v11)
           Atom arm(v6)
           Atom ataconf(v6, v7)
           Atom atbconf(v3)
           Atom canmove()
           Atom supported(v14, v15, v11)
           Atom atpose(v8, v9)
           Atom grasp(v8, #g1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #g2)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom pose(v12, #p2)
           Atom supported(v12, #p2, v16)
           Atom grasp(v14, #g0)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v14, #p0)
           Atom supported(v14, #p0, v16)
           Atom bconf(#q4)
           Atom atraj(#t6)
           Atom kin(v4, v8, v9, #g1, #q4, #t6)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, #p1, #g1, #q2, #t4)
           Atom bconf(#q5)
           Atom atraj(#t7)
           Atom kin(v4, v12, v13, #g2, #q5, #t7)
           Atom bconf(#q3)
           Atom atraj(#t5)
           Atom kin(v4, v12, #p2, #g2, #q3, #t5)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v14, v15, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, #p0, #g0, #q0, #t0)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q1, #o0, #q5)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q5, #o0, #q4)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(v3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q5, #o0, #q2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 #p2 #g2 #q3 #t5))
           ((place v4 v12 #p2 #g2 #q3 #t5))
           ((pick v4 v12 v13 #g2 #q5 #t7))
           ((place v4 v12 v13 #g2 #q5 #t7))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 #p0 #g0 #q0 #t0))
           ((place v4 v14 #p0 #g0 #q0 #t0))
           ((pick v4 v14 v15 #g0 #q1 #t1))
           ((place v4 v14 v15 #g0 #q1 #t1))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 #p1 #g1 #q2 #t4))
           ((place v4 v8 #p1 #g1 #q2 #t4))
           ((pick v4 v8 v9 #g1 #q4 #t6))
           ((place v4 v8 v9 #g1 #q4 #t6))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The robot needs to place three objects (v8, v12, and v14) onto the surface v16. Currently, all three objects are supported by v11. The robot has two arms, v4 and v6, but only v4 is relevant as the provided actions are only for arm v4. The robot starts at base configuration v3.
           
           The plan involves picking up each object from its initial pose on v11 and placing it onto a new pose on v16. For each object, the robot needs to move its base to the appropriate configuration, pick up the object, move the base again to the configuration for the target location, and then place the object.
           
           Object v8:
           - Currently at pose v9, supported by v11.
           - Goal: on v16, which means at pose #p1, supported by v16.
           - Pick action: `(pick v4 v8 v9 #g1 #q4 #t6)` requires `atbconf(#q4)`.
           - Place action: `(place v4 v8 #p1 #g1 #q2 #t4)` requires `atbconf(#q2)`.
           
           Object v12:
           - Currently at pose v13, supported by v11.
           - Goal: on v16, which means at pose #p2, supported by v16.
           - Pick action: `(pick v4 v12 v13 #g2 #q5 #t7)` requires `atbconf(#q5)`.
           - Place action: `(place v4 v12 #p2 #g2 #q3 #t5)` requires `atbconf(#q3)`.
           
           Object v14:
           - Currently at pose v15, supported by v11.
           - Goal: on v16, which means at pose #p0, supported by v16.
           - Pick action: `(pick v4 v14 v15 #g0 #q1 #t1)` requires `atbconf(#q1)`.
           - Place action: `(place v4 v14 #p0 #g0 #q0 #t0)` requires `atbconf(#q0)`.
           
           The plan will proceed as follows:
           1. Move to the base configuration for picking v8.
           2. Pick v8.
           3. Move to the base configuration for placing v8.
           4. Place v8.
           5. Move to the base configuration for picking v12.
           6. Pick v12.
           7. Move to the base configuration for placing v12.
           8. Place v12.
           9. Move to the base configuration for picking v14.
           10. Pick v14.
           11. Move to the base configuration for placing v14.
           12. Place v14.
           
           --Plan--:
           (move_base v3 #q4 #o0)
           (pick v4 v8 v9 #g1 #q4 #t6)
           (move_base #q4 #q2 #o0)
           (place v4 v8 #p1 #g1 #q2 #t4)
           (move_base #q2 #q5 #o0)
           (pick v4 v12 v13 #g2 #q5 #t7)
           (move_base #q5 #q3 #o0)
           (place v4 v12 #p2 #g2 #q3 #t5)
           (move_base #q3 #q1 #o0)
           (pick v4 v14 v15 #g0 #q1 #t1)
           (move_base #q1 #q0 #o0)
           (place v4 v14 #p0 #g0 #q0 #t0)

