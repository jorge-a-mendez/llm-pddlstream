User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v7)
           Atom objective(v17)
           Atom atconf(v14, v15)
           Atom free(v12, v16)
           Atom rover(v14)
           Atom mode(v11)
           Atom atconf(v12, v13)
           Atom conf(v14, v15)
           Atom rock(v1)
           Atom store(v16)
           Atom onboard(v10, v12)
           Atom rock(v3)
           Atom type(v7, v6)
           Atom type(v5, v6)
           Atom objective(v19)
           Atom supports(v10, v11)
           Atom rock(v8)
           Atom type(v3, v2)
           Atom free(v14, v16)
           Atom objective(v18)
           Atom lander(v9)
           Atom onboard(v10, v14)
           Atom rock(v4)
           Atom type(v1, v2)
           Atom rover(v12)
           Atom rock(v5)
           Atom type(v4, v2)
           Atom type(v8, v6)
           Atom camera(v10)
           Atom conf(v12, v13)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q4, #y2, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v14, #q7, #y5, v17)
           Atom imagerange(v14, #q7, v17)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v5)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q3, v7)
           Atom conf(v12, #q3)
           Atom above(v14, #o5, v7)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom comvisible(v14, #q6, #y4, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #q10, #y7, v18)
           Atom imagerange(v14, #q10, v18)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom imagevisible(v12, #q5, #y3, v18)
           Atom imagerange(v12, #q5, v18)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #q0, #y0, v19)
           Atom imagerange(v12, #q0, v19)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q9, #y6, v19)
           Atom imagerange(v14, #q9, v19)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom motion(v12, v13, #t10, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v14, v15, #t6, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, v13, #t16, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #t7, #q9)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q9, #t12, #q6)
           Atom motion(v14, #q10, #t13, #q6)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q7, #t11, #q6)
           Atom motion(v14, #q6, #t9, v15)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #t19, #q0)
           Atom motion(v12, #q2, #t3, #q1)
           Atom motion(v12, #q2, #t14, #q5)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q2, #t2, v13)
           Atom motion(v12, #q3, #t5, #q2)
           Atom motion(v12, #q2, #t18, #q8)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q0, #t1, #q2)
           Atom motion(v12, #q4, #t15, #q2)
           Atom motion(v12, #q5, #t17, #q2)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q1, #t4, #q2)
           Atom motion(v12, #q8, #t8, #q2)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q3 v7 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q2))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t4 #q2))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #t14 #q5))
           ((move v12 #q2 #t18 #q8))
           ((move v12 #q2 #t19 #q0))
           ((move v12 #q2 #t2 v13))
           ((move v12 #q2 #t3 #q1))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t5 #q2))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t15 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t17 #q2))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t8 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t10 #q8))
           ((move v12 v13 #t16 #q4))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t13 #q6))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #t9 v15))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t11 #q6))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t12 #q6))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t6 #q7))
           ((move v14 v15 #t7 #q9))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q4 #y2 v17 v10))
           ((calibrate v12 #q5 #y3 v18 v10))
           ((calibrate v14 #q10 #y7 v18 v10))
           ((calibrate v14 #q7 #y5 v17 v10))
           ((calibrate v14 #q9 #y6 v19 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q4 #y2 v17 v10 v11))
           ((take_image v12 #q5 #y3 v18 v10 v11))
           ((take_image v14 #q10 #y7 v18 v10 v11))
           ((take_image v14 #q7 #y5 v17 v10 v11))
           ((take_image v14 #q9 #y6 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y4 v9 v1))
           ((send_analysis v14 #q6 #y4 v9 v3))
           ((send_analysis v14 #q6 #y4 v9 v4))
           ((send_analysis v14 #q6 #y4 v9 v5))
           ((send_analysis v14 #q6 #y4 v9 v7))
           ((send_analysis v14 #q6 #y4 v9 v8))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q6 #y4 v9 v18 v11))
           ((send_image v14 #q6 #y4 v9 v17 v11))
           ((send_image v14 #q6 #y4 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Comprehensive Plan to Achieve new-axiom@0() in the Rovers Domain**
           
           Okay, here's my plan. The goal `new-axiom@0()` is a complex conjunction of conditions regarding rover positions, image reception, rock analysis, and store states. Let's break it down.
           
           First, I need both rovers, `v12` and `v14`, to be at specific configurations: `v12` at `v13` and `v14` at `v15`.  They are initially like this, and `v14` will stay put.  I also need both `v12` and `v14`'s stores to be free.  This is initially true for both.
           
           Next, I must ensure that images of objectives `v17`, `v18`, and `v19` are *received* in mode `v11`.  And finally, I must receive the analyses of at least one rock of type `v2` (stone) and one rock of type `v6` (soil).
           
           The initial state provides these: The rovers' initial configurations, that both stores are initially free, and that mode `v11` is available.  So I only need to plan to receive images and analyses.
           
           **Image Plan:**
           
           Since both rovers have cameras, I will assign the image-gathering to `v12` for efficiency. `v12` is initially at `v13`.
           
           1.  **Move to #q4**: Move `v12` from `v13` to configuration `#q4`.
           2.  **Calibrate for Image v17**: Calibrate camera `v10` on `v12` to take a picture of `v17` in mode `v11`.
           3.  **Take Image v17**: Take the picture of `v17` (we now `haveimage(v12, v17, v11)`)
           4.  **Move to #q5**: Move `v12` from `#q4` to `#q5`.
           5.  **Calibrate for Image v18**: Calibrate camera `v10` again, this time for `v18`.
           6.  **Take Image v18**: Now, image `v18` exists.
           7.  **Move to #q0**:  Move `v12` from `#q5` to `#q0`.
           8.  **Calibrate for Image v19**: Calibrate camera `v10` for objective `v19`.
           9.  **Take Image v19**:  Now `haveimage(v12, v19, v11)`.
           10. **Move to Communication Location**: Move `v12` from `#q0` to `#q2`, the lander's communication location.
           11. **Send v17**: Send the image of `v17` to the lander; this gets the `receivedimage(v17, v11)`.
           12. **Send v18**: Do the same for `v18`.
           13. **Send v19**: And finally, for `v19`.  All image goals are now satisfied.
           
           **Analysis Plan:**
           
           Now for rock analysis. I know there are rocks of both types. `v12` needs to analyze one rock of type `v2` and one of type `v6`, which satisfies all requirements of the axiom. The only challenge is that `v12`'s store is `free` to start and only free after dropping a sample at the end.
           
           1.  **Move to #o5**:  Move `v12` from `#q2` to `#o5`.
           2.  **Sample v4**: Since `v4` is type `v2`, sample it.  `v12` is now `full(v12, v16)`.
           3.  **Move to #q2**:  Move `v12` from `#o5` to `#q2`.
           4.  **Send Analysis of v4**: Send the analysis of `v4`.  Now, `receivedanalysis(v4)` and type are met.
           5.  **Drop Rock to Free Store**: Drop `v4` to make the store free.
           6.  **Move to #q3**: Move `v12` to `#q3`.
           7.  **Sample v7**: Sample the rock `v7`, which is type `v6`.  `v12` is now `full(v12, v16)`.
           8.  **Move to
)

Model:     **Comprehensive Plan to Achieve new-axiom@0() in the Rovers Domain**
           
           Okay, here's my plan. The goal `new-axiom@0()` is a complex conjunction of conditions regarding rover positions, image reception, rock analysis, and store states. Let's break it down.
           
           First, I need both rovers, `v12` and `v14`, to be at specific configurations: `v12` at `v13` and `v14` at `v15`.  They are initially like this, and `v14` will stay put.  I also need both `v12` and `v14`'s stores to be free.  This is initially true for both.
           
           Next, I must ensure that images of objectives `v17`, `v18`, and `v19` are *received* in mode `v11`.  And finally, I must receive the analyses of at least one rock of type `v2` (stone) and one rock of type `v6` (soil).
           
           The initial state provides these: The rovers' initial configurations, that both stores are initially free, and that mode `v11` is available.  So I only need to plan to receive images and analyses.
           
           **Image Plan:**
           
           Since both rovers have cameras, I will assign the image-gathering to `v12` for efficiency. `v12` is initially at `v13`.
           
           1.  **Move to #q4**: Move `v12` from `v13` to configuration `#q4`.
           2.  **Calibrate for Image v17**: Calibrate camera `v10` on `v12` to take a picture of `v17` in mode `v11`.
           3.  **Take Image v17**: Take the picture of `v17` (we now `haveimage(v12, v17, v11)`)
           4.  **Move to #q5**: Move `v12` from `#q4` to `#q5`.
           5.  **Calibrate for Image v18**: Calibrate camera `v10` again, this time for `v18`.
           6.  **Take Image v18**: Now, image `v18` exists.
           7.  **Move to #q0**:  Move `v12` from `#q5` to `#q0`.
           8.  **Calibrate for Image v19**: Calibrate camera `v10` for objective `v19`.
           9.  **Take Image v19**:  Now `haveimage(v12, v19, v11)`.
           10. **Move to Communication Location**: Move `v12` from `#q0` to `#q2`, the lander's communication location.
           11. **Send v17**: Send the image of `v17` to the lander; this gets the `receivedimage(v17, v11)`.
           12. **Send v18**: Do the same for `v18`.
           13. **Send v19**: And finally, for `v19`.  All image goals are now satisfied.
           
           **Analysis Plan:**
           
           Now for rock analysis. I know there are rocks of both types. `v12` needs to analyze one rock of type `v2` and one of type `v6`, which satisfies all requirements of the axiom. The only challenge is that `v12`'s store is `free` to start and only free after dropping a sample at the end.
           
           1.  **Move to #o5**:  Move `v12` from `#q2` to `#o5`.
           2.  **Sample v4**: Since `v4` is type `v2`, sample it.  `v12` is now `full(v12, v16)`.
           3.  **Move to #q2**:  Move `v12` from `#o5` to `#q2`.
           4.  **Send Analysis of v4**: Send the analysis of `v4`.  Now, `receivedanalysis(v4)` and type are met.
           5.  **Drop Rock to Free Store**: Drop `v4` to make the store free.
           6.  **Move to #q3**: Move `v12` to `#q3`.
           7.  **Sample v7**: Sample the rock `v7`, which is type `v6`.  `v12` is now `full(v12, v16)`.
           8.  **Move to

