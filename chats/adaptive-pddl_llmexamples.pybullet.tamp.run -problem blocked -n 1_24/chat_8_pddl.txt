User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v8, v9)
           Atom graspable(v12)
           Atom atpose(v15, v16)
           Atom supported(v15, v16, v11)
           Atom stackable(v8, v18)
           Atom arm(v6)
           Atom type(v8, v17)
           Atom pose(v12, v13)
           Atom atbconf(v3)
           Atom ataconf(v6, v7)
           Atom supported(v8, v9, v11)
           Atom bconf(v3)
           Atom handempty(v6)
           Atom stackable(v12, v18)
           Atom pose(v8, v9)
           Atom type(v12, v17)
           Atom canmove()
           Atom graspable(v15)
           Atom stackable(v15, v10)
           Atom stackable(v8, v10)
           Atom graspable(v8)
           Atom atpose(v12, v13)
           Atom arm(v4)
           Atom handempty(v4)
           Atom aconf(v6, v7)
           Atom supported(v12, v13, v14)
           Atom aconf(v4, v5)
           Atom controllable(v4)
           Atom ataconf(v4, v5)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v21, v15, v16)
           Atom stackable(v12, v10)
           Atom pose(v15, v16)
           Atom grasp(v12, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v8, v35)
           Atom supported(v8, v35, v18)
           Atom pose(v8, v28)
           Atom supported(v8, v28, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v8, v21)
           Atom grasp(v8, v23)
           Atom grasp(v8, v22)
           Atom grasp(v8, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom bconf(v29)
           Atom atraj(v30)
           Atom kin(v4, v8, v28, v20, v29, v30)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v20, v24, v25)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v24, #o0, v3)
           Atom bconf(v31)
           Atom atraj(v32)
           Atom kin(v4, v8, v28, v22, v31, v32)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v23, v26, v27)
           Atom bconf(v33)
           Atom atraj(v34)
           Atom kin(v4, v8, v28, v23, v33, v34)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v28, v21, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v8, v19, v21, #q2, #t5)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v3, #o0, v26)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v8, v9, v21, #q3, #t6)
           Atom supported(v12, #o2, v18)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(v24, #o0, #q2)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q2)
           Atom basemotion(#q2, #o0, v26)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(v26, #o0, #q2)
           Atom basemotion(#q2, #o0, v24)
           Atom basemotion(#q3, #o0, v24)
           Atom basemotion(#q3, #o0, v26)
           Atom basemotion(v24, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(v26, #o0, #q3)
           Atom btraj(#t9)
           Atom basemotion(#q3, #t9, #q2)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, v24)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(#o3, #o0, #q2)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v24 #o0))
           ((move_base #q3 v26 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q2 #t9))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q3 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q3 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t7))
           ((move_base v3 #q3 #t8))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 v24 v25))
           ((place v4 v8 v19 v20 v24 v25))
           ((pick v4 v8 v19 v21 #q2 #t5))
           ((place v4 v8 v19 v21 #q2 #t5))
           ((pick v4 v8 v19 v23 v26 v27))
           ((place v4 v8 v19 v23 v26 v27))
           ((pick v4 v8 v28 v21 #o3 #o4))
           ((place v4 v8 v28 v21 #o3 #o4))
           ((pick v4 v8 v9 v21 #q3 #t6))
           ((place v4 v8 v9 v21 #q3 #t6))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects (`#o0` through `v35`), including objects to be manipulated (`v8`, `v12`, `v15`), robot arms (`v4`, `v6`), base configurations (`v3`, `v24`, `v26`, `v29`, `v31`, `v33`, `#o3`, `#q2`, `#q3`), and various poses, grasps, and trajectories.
           
           The initial state indicates that `v8` is at `v9` and is supported by `v11`. It is also stackable on `v18` and `v10`. `v12` is at `v13` and is supported by `v14`. It is stackable on `v18` and `v10`. `v15` is at `v16` and supported by `v11` and stackable on `v10`. Both `v4` and `v6` are arms and `v4` is controllable. Both arms are handempty. The robot's base is at configuration `v3`.
           
           The goal is `new-axiom@0()`, which, based on the axioms, means `on(?green, v18)` and `type(?green, v17)`. The object `v8` is of `type v17`. Therefore, the goal is to place `v8` on `v18`.
           
           Currently, `v8` is at `v9` supported by `v11`. To achieve the goal, we need to pick up `v8` from `v9` and place it at a pose on `v18`. The available `kin` actions show that `v4` can pick up `v8` from `v9` with `grasp v21` when the base is at `q3` and move with `atraj t6`. After picking, we need to place it on `v18`. There are several poses for `v8` supported by `v18`: `v19`, `v35`, and `v28`. Let's use `v19`. The `kin` action for placing `v8` at `v19` with `grasp v21` requires base at `q2` and `atraj t5`.
           
           Therefore, the plan will involve:
           1. Moving the base to `q3` to pick up `v8` from `v9`.
           2. Picking up `v8`.
           3. Moving the base to `q2` to place `v8` on `v19`.
           4. Placing `v8` on `v19`.
           
           Let's check the available actions for these steps:
           - Move base from `v3` to `#q3`: `(move_base v3 #q3 #t8)`
           - Pick `v8` from `v9`: `(pick v4 v8 v9 v21 #q3 #t6)`
           - Move base from `#q3` to `#q2`: `(move_base #q3 #q2 #t9)`
           - Place `v8` at `v19`: `(place v4 v8 v19 v21 #q2 #t5)`
           
           All these actions are available in the provided list.
           
           --Plan--:
           (move_base v3 #q3 #t8)
           (pick v4 v8 v9 v21 #q3 #t6)
           (move_base #q3 #q2 #t9)
           (place v4 v8 v19 v21 #q2 #t5)

