User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v15, v16, v11)
           Atom arm(v4)
           Atom graspable(v15)
           Atom stackable(v12, v18)
           Atom graspable(v12)
           Atom pose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom pose(v12, v13)
           Atom supported(v12, v13, v14)
           Atom handempty(v6)
           Atom type(v8, v17)
           Atom stackable(v15, v10)
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom stackable(v12, v10)
           Atom ataconf(v6, v7)
           Atom atpose(v8, v9)
           Atom pose(v15, v16)
           Atom aconf(v6, v7)
           Atom stackable(v8, v10)
           Atom controllable(v4)
           Atom aconf(v4, v5)
           Atom atpose(v15, v16)
           Atom type(v12, v17)
           Atom handempty(v4)
           Atom canmove()
           Atom graspable(v8)
           Atom atpose(v12, v13)
           Atom stackable(v8, v18)
           Atom arm(v6)
           Atom ataconf(v4, v5)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v8, #o1)
           Atom grasp(v12, #g0)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom supported(v8, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, v13, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, #p0, #g0, #q1, #t1)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t4)
           Atom basemotion(#q0, #t4, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q1 #t4))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q1 #t1))
           ((place v4 v12 #p0 #g0 #q1 #t1))
           ((pick v4 v12 v13 #g0 #q0 #t0))
           ((place v4 v12 v13 #g0 #q0 #t0))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several objects, including `v12`, `v15`, and `v8`, which are graspable and stackable. There are also two arms, `v4` and `v6`, and various poses and configurations. The goal is `new-axiom@0()`, which, according to the axioms, means `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, we have `type(v12, v17)`. So, to satisfy `type(?green, v17)`, `?green` must be `v12`. Therefore, the goal simplifies to `on(v12, v18)`.
           
           Currently, `v12` is at `atpose(v12, v13)` and `supported(v12, v13, v14)`. To achieve `on(v12, v18)`, `v12` needs to be moved to a pose `p` where `supported(v12, p, v18)` and `atpose(v12, p)`. We have `pose(v12, #p0)` and `supported(v12, #p0, v18)`, so `#p0` is a valid target pose.
           
           The plan will involve the following steps:
           1. Move the robot base to a configuration that allows picking up `v12` from its current pose `v13`.
           2. Pick up `v12` using arm `v4`.
           3. Move the robot base to a configuration that allows placing `v12` on `v18` at pose `#p0`.
           4. Place `v12` on `v18` at pose `#p0`.
           
           From the available actions, we have:
           - `kin(v4, v12, v13, #g0, #q0, #t0)` for picking `v12` from `v13`. This requires the base to be at `atbconf(#q0)`.
           - `kin(v4, v12, #p0, #g0, #q1, #t1)` for placing `v12` at `#p0`. This requires the base to be at `atbconf(#q1)`.
           
           The initial base configuration is `atbconf(v3)`.
           So, the steps are:
           1. `move_base v3 #q0 #t2` to move to the pick configuration.
           2. `pick v4 v12 v13 #g0 #q0 #t0` to pick `v12`.
           3. `move_base #q0 #q1 #t4` to move to the place configuration.
           4. `place v4 v12 #p0 #g0 #q1 #t1` to place `v12`.
           
           --Plan--:
           (move_base v3 #q0 #t2)
           (pick v4 v12 v13 #g0 #q0 #t0)
           (move_base #q0 #q1 #t4)
           (place v4 v12 #p0 #g0 #q1 #t1)

