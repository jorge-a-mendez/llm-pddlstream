User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g4: object
           #g5: object
           #g6: object
           #g7: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q8: object
           #q9: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t30: object
           #t31: object
           @sink: object
           @stove: object
           p4: object
           p5: object
           p6: object
           p7: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, 0.015), (0.035, 0.085)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.085), (0.035, -0.015)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           Object v9 is a pose with position (-0.134, -0.404, 0.781) and quaternion (0.0, 0.0, 0.229, 0.974).
           Object p4 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v17 is a pose with position (0.109, -0.383, 0.781) and quaternion (0.0, 0.0, 0.984, -0.18).
           Object p5 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.009, 0.425, 0.781) and quaternion (0.0, 0.0, -0.116, 0.993).
           Object v13 is a pose with position (-0.176, 0.454, 0.781) and quaternion (0.0, 0.0, 0.948, -0.318).
           Object p6 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p7 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom graspable(v16)
           Atom pose(v16, v17)
           Atom atpose(v16, v17)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom stackable(v8, v18)
           Atom stackable(v12, v18)
           Atom stackable(v14, v18)
           Atom stackable(v16, v18)
           Atom pose(v14, p6)
           Atom supported(v14, p6, v10)
           Atom pose(v16, p7)
           Atom supported(v16, p7, v18)
           Atom supported(v14, p6, v18)
           Atom pose(v12, p5)
           Atom supported(v12, p5, v18)
           Atom pose(v8, p4)
           Atom supported(v8, p4, v18)
           Atom supported(v12, p5, v10)
           Atom supported(v16, p7, v10)
           Atom supported(v8, p4, v10)
           Atom kin(v36, v37, p4, v38, v39, v40)
           Atom kin(v36, v41, p5, v38, v39, v40)
           Atom kin(v36, v42, p6, v38, v39, v40)
           Atom kin(v36, v43, p7, v38, v39, v40)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #g5)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom supported(v14, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v14, #g7)
           Atom supported(v12, #o2, v10)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #g4)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g6)
           Atom bconf(#q11)
           Atom atraj(#t20)
           Atom kin(v4, v16, p7, #g5, #q11, #t20)
           Atom bconf(#q8)
           Atom atraj(#t16)
           Atom kin(v4, v16, v17, #g5, #q8, #t16)
           Atom bconf(#q12)
           Atom atraj(#t21)
           Atom kin(v4, v14, p6, #g7, #q12, #t21)
           Atom bconf(#q14)
           Atom atraj(#t23)
           Atom kin(v4, v14, v15, #g7, #q14, #t23)
           Atom bconf(#q10)
           Atom atraj(#t19)
           Atom kin(v4, v12, v13, #g4, #q10, #t19)
           Atom bconf(#q15)
           Atom atraj(#t24)
           Atom kin(v4, v12, p5, #g4, #q15, #t24)
           Atom bconf(#q9)
           Atom atraj(#t18)
           Atom kin(v4, v8, p4, #g6, #q9, #t18)
           Atom bconf(#q13)
           Atom atraj(#t22)
           Atom kin(v4, v8, v9, #g6, #q13, #t22)
           Atom basemotion(#q15, #o0, v3)
           Atom basemotion(v3, #o0, #q15)
           Atom basemotion(#q15, #o0, #q15)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(v3, #o0, #q10)
           Atom basemotion(#q15, #o0, #q10)
           Atom btraj(#t31)
           Atom basemotion(#q10, #t31, #q15)
           Atom basemotion(#q14, #o0, #q10)
           Atom basemotion(#q14, #o0, v3)
           Atom basemotion(#q14, #o0, #q15)
           Atom basemotion(#q10, #o0, #q14)
           Atom basemotion(v3, #o0, #q14)
           Atom basemotion(#q15, #o0, #q14)
           Atom basemotion(#q14, #o0, #q14)
           Atom btraj(#t26)
           Atom basemotion(#q12, #t26, #q10)
           Atom basemotion(#q12, #o0, v3)
           Atom basemotion(#q12, #o0, #q15)
           Atom basemotion(#q10, #o0, #q12)
           Atom basemotion(v3, #o0, #q12)
           Atom basemotion(#q15, #o0, #q12)
           Atom basemotion(#q12, #o0, #q12)
           Atom btraj(#t29)
           Atom basemotion(#q14, #t29, #q12)
           Atom basemotion(#q12, #o0, #q14)
           Atom basemotion(#q8, #o0, #q10)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(#q8, #o0, #q15)
           Atom basemotion(#q8, #o0, #q14)
           Atom basemotion(#q8, #o0, #q12)
           Atom basemotion(#q10, #o0, #q8)
           Atom btraj(#t17)
           Atom basemotion(v3, #t17, #q8)
           Atom basemotion(#q15, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q14, #o0, #q8)
           Atom basemotion(#q12, #o0, #q8)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q11, #o0, #q15)
           Atom btraj(#t28)
           Atom basemotion(#q11, #t28, #q14)
           Atom basemotion(#q11, #o0, #q12)
           Atom basemotion(#q10, #o0, #q11)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q15, #o0, #q11)
           Atom basemotion(#q14, #o0, #q11)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q12, #o0, #q11)
           Atom btraj(#t30)
           Atom basemotion(#q8, #t30, #q11)
           Atom basemotion(#q11, #o0, #q8)
           Atom basemotion(#q13, #o0, v3)
           Atom basemotion(#q13, #o0, #q13)
           Atom basemotion(v3, #o0, #q13)
           Atom basemotion(#q10, #o0, #q13)
           Atom basemotion(#q13, #o0, #q10)
           Atom btraj(#t27)
           Atom basemotion(#q15, #t27, #q13)
           Atom basemotion(#q13, #o0, #q15)
           Atom basemotion(#q12, #o0, #q13)
           Atom basemotion(#q13, #o0, #q12)
           Atom basemotion(#q14, #o0, #q13)
           Atom basemotion(#q13, #o0, #q14)
           Atom basemotion(#q11, #o0, #q13)
           Atom basemotion(#q13, #o0, #q11)
           Atom basemotion(#q8, #o0, #q13)
           Atom basemotion(#q13, #o0, #q8)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom btraj(#t25)
           Atom basemotion(#q13, #t25, #q9)
           Atom basemotion(#q9, #o0, #q13)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q9, #o0, #q10)
           Atom basemotion(#q15, #o0, #q9)
           Atom basemotion(#q9, #o0, #q15)
           Atom basemotion(#q12, #o0, #q9)
           Atom basemotion(#q9, #o0, #q12)
           Atom basemotion(#q14, #o0, #q9)
           Atom basemotion(#q9, #o0, #q14)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q9, #o0, #q8)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, #o2, #g7, #o3, #o4)
           Atom kin(v4, v16, #o2, #g5, #o3, #o4)
           Atom kin(v4, v12, #o2, #g4, #o3, #o4)
           Atom kin(v4, v8, #o2, #g6, #o3, #o4)
           Atom basemotion(#o3, #o0, #q13)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#q13, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#q15, #o0, #o3)
           Atom basemotion(#o3, #o0, #q15)
           Atom basemotion(#q12, #o0, #o3)
           Atom basemotion(#o3, #o0, #q12)
           Atom basemotion(#q14, #o0, #o3)
           Atom basemotion(#o3, #o0, #q14)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q14 #o0))
           ((move_base #o3 #q15 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q14 #o0))
           ((move_base #q10 #q8 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q15 #t31))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q15 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q14 #t28))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q13 #o0))
           ((move_base #q12 #q14 #o0))
           ((move_base #q12 #q15 #o0))
           ((move_base #q12 #q8 #o0))
           ((move_base #q12 #q9 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q12 #q10 #t26))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q11 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q14 #o0))
           ((move_base #q13 #q15 #o0))
           ((move_base #q13 #q8 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q13 #q9 #t25))
           ((move_base #q14 #o3 #o0))
           ((move_base #q14 #q10 #o0))
           ((move_base #q14 #q11 #o0))
           ((move_base #q14 #q13 #o0))
           ((move_base #q14 #q14 #o0))
           ((move_base #q14 #q15 #o0))
           ((move_base #q14 #q8 #o0))
           ((move_base #q14 #q9 #o0))
           ((move_base #q14 v3 #o0))
           ((move_base #q14 #q12 #t29))
           ((move_base #q15 #o3 #o0))
           ((move_base #q15 #q10 #o0))
           ((move_base #q15 #q11 #o0))
           ((move_base #q15 #q12 #o0))
           ((move_base #q15 #q14 #o0))
           ((move_base #q15 #q15 #o0))
           ((move_base #q15 #q8 #o0))
           ((move_base #q15 #q9 #o0))
           ((move_base #q15 v3 #o0))
           ((move_base #q15 #q13 #t27))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q12 #o0))
           ((move_base #q8 #q13 #o0))
           ((move_base #q8 #q14 #o0))
           ((move_base #q8 #q15 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q11 #t30))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q12 #o0))
           ((move_base #q9 #q13 #o0))
           ((move_base #q9 #q14 #o0))
           ((move_base #q9 #q15 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q10 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q12 #o0))
           ((move_base v3 #q13 #o0))
           ((move_base v3 #q14 #o0))
           ((move_base v3 #q15 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q8 #t17))
           ((pick v4 v12 #o2 #g4 #o3 #o4))
           ((place v4 v12 #o2 #g4 #o3 #o4))
           ((pick v4 v12 p5 #g4 #q15 #t24))
           ((place v4 v12 p5 #g4 #q15 #t24))
           ((pick v4 v12 v13 #g4 #q10 #t19))
           ((place v4 v12 v13 #g4 #q10 #t19))
           ((pick v4 v14 #o2 #g7 #o3 #o4))
           ((place v4 v14 #o2 #g7 #o3 #o4))
           ((pick v4 v14 p6 #g7 #q12 #t21))
           ((place v4 v14 p6 #g7 #q12 #t21))
           ((pick v4 v14 v15 #g7 #q14 #t23))
           ((place v4 v14 v15 #g7 #q14 #t23))
           ((pick v4 v16 #o2 #g5 #o3 #o4))
           ((place v4 v16 #o2 #g5 #o3 #o4))
           ((pick v4 v16 p7 #g5 #q11 #t20))
           ((place v4 v16 p7 #g5 #q11 #t20))
           ((pick v4 v16 v17 #g5 #q8 #t16))
           ((place v4 v16 v17 #g5 #q8 #t16))
           ((pick v4 v8 #o2 #g6 #o3 #o4))
           ((place v4 v8 #o2 #g6 #o3 #o4))
           ((pick v4 v8 p4 #g6 #q9 #t18))
           ((place v4 v8 p4 #g6 #q9 #t18))
           ((pick v4 v8 v9 #g6 #q13 #t22))
           ((place v4 v8 v9 #g6 #q13 #t22))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q0', '#t1'))
           Action(name='pick', args=('v4', 'v16', 'v17', '#g1', '#q0', '#t0'))
           Action(name='move_base', args=('#q0', '#q3', '#t14'))
           Action(name='place', args=('v4', 'v16', 'p7', '#g1', '#q3', '#t4'))
           Action(name='move_base', args=('#q3', '#q6', '#t10'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g3', '#q6', '#t7'))
           Action(name='move_base', args=('#q6', '#q4', '#t9'))
           Action(name='place', args=('v4', 'v14', 'p6', '#g3', '#q4', '#t5'))
           Action(name='move_base', args=('#q4', '#q2', '#t15'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g0', '#q2', '#t3'))
           Action(name='move_base', args=('#q2', '#q7', '#t12'))
           Action(name='place', args=('v4', 'v12', 'p5', '#g0', '#q7', '#t8'))
           Action(name='move_base', args=('#q7', '#q5', '#t13'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g2', '#q5', '#t6'))
           Action(name='move_base', args=('#q5', '#q1', '#t11'))
           Action(name='place', args=('v4', 'v8', 'p4', '#g2', '#q1', '#t2'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v14', 'p6', 'v16', 'p7')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The problem asks to move four objects (v8, v12, v14, v16) onto a surface named v18. Currently, v8 is at v9, v12 at v13, v14 at v15, and v16 at v17. All these initial poses are on surface v11. The goal poses (p4, p5, p6, p7) are on surface v18, which is the desired surface. The robot's current base configuration is v3.
           
           The previous plan failed because placing v14 at p6 and v16 at p7 resulted in a collision. This suggests that the given target poses (p4, p5, p6, p7) are not collision-free when objects are placed on them simultaneously. I will use the free pose #o2 for placing objects.
           
           I will iterate through the objects, pick them up from their current location, and place them on new poses on surface v18. I will use the free pose #o2 for placing objects. Since the goal is to place all objects on v18, I will try to use the single pose #o2 multiple times. However, since the system reported a collision previously, I will use different actual pose values for each object on the surface.
           
           Specifically, I will try placing v16, v14, v12, and v8 in sequence. For each object, I will pick it up from its current location, move to a base configuration that allows placing it, and then place it at a designated pose on v18, making sure that each object gets a unique collision-free location on v18.
           
           --Plan--:
           (move_base v3 #q8 #t17)
           (pick v4 v16 v17 #g5 #q8 #t16)
           (move_base #q8 #o3 #o0)
           (place v4 v16 #o2 #g5 #o3 #o4)
           (move_base #o3 #q14 #o0)
           (pick v4 v14 v15 #g7 #q14 #t23)
           (move_base #q14 #o3 #o0)
           (place v4 v14 #o2 #g7 #o3 #o4)
           (move_base #o3 #q10 #o0)
           (pick v4 v12 v13 #g4 #q10 #t19)
           (move_base #q10 #o3 #o0)
           (place v4 v12 #o2 #g4 #o3 #o4)
           (move_base #o3 #q13 #o0)
           (pick v4 v8 v9 #g6 #q13 #t22)
           (move_base #q13 #o3 #o0)
           (place v4 v8 #o2 #g6 #o3 #o4)
           
           --Poses--:
           (#o2 v16 v18): (0.0 0.0 0.782 0.0)
           (#o2 v14 v18): (0.1 0.0 0.782 0.0)
           (#o2 v12 v18): (-0.1 0.0 0.782 0.0)
           (#o2 v8 v18): (0.0 0.1 0.782 0.0)

User:      Pose #o2 = (0.1 0.0 0.782 0.0) for object v14 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(0.06500000149011612, -0.035), upper=(0.13500000149011612, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (-0.1 0.0 0.782 0.0) for object v12 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(-0.13500000149011612, -0.035), upper=(-0.06500000149011612, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.0 0.1 0.782 0.0) for object v8 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, 0.06500000149011612), upper=(0.035, 0.13500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The previous plan failed because the provided poses for objects v14, v12, and v8 on surface v18 were not stable. The bounding boxes of these objects extended beyond the bounding box of the surface v18. I need to recalculate these poses to ensure they are within the bounds of v18. The AABB of surface v18 is `((-0.135, -0.135), (0.135, 0.135))`.
           
           I will re-evaluate the placement positions for each object. The goal is to place all objects on v18. I will place them closer to the center of v18 and ensure their AABBs are fully contained.
           
           For v16 (AABB: ((-0.035, 0.015), (0.035, 0.085))), a pose like (0.0, 0.0, 0.782, 0.0) is stable.
           For v14 (AABB: ((0.015, -0.035), (0.085, 0.035))), a pose like (0.0, 0.0, 0.782, 0.0) is stable. I will need to adjust to allow space for others.
           For v12 (AABB: ((-0.085, -0.035), (-0.015, 0.035))), a pose like (0.0, 0.0, 0.782, 0.0) is stable.
           For v8 (AABB: ((-0.035, -0.085), (0.035, -0.015))), a pose like (0.0, 0.0, 0.782, 0.0) is stable.
           
           I will attempt to place the objects in a small grid pattern within the surface v18 to prevent collisions and ensure stability.
           Object v16 (AABB: ((-0.035, 0.015), (0.035, 0.085))) at (0.0, 0.05, 0.782, 0.0)
           Object v14 (AABB: ((0.015, -0.035), (0.085, 0.035))) at (0.05, -0.05, 0.782, 0.0)
           Object v12 (AABB: ((-0.085, -0.035), (-0.015, 0.035))) at (-0.05, -0.05, 0.782, 0.0)
           Object v8 (AABB: ((-0.035, -0.085), (0.035, -0.015))) at (0.0, -0.05, 0.782, 0.0)
           
           Wait, the previous plan had v16 at (0.0, 0.0, 0.782, 0.0), v14 at (0.1, 0.0, 0.782, 0.0), v12 at (-0.1, 0.0, 0.782, 0.0), v8 at (0.0, 0.1, 0.782, 0.0). These seem to be trying to center the objects. Let's recalculate them more precisely.
           
           For v16 (AABB: ((-0.035, 0.015), (0.035, 0.085))), if placed at (0.0, 0.05, 0.782, 0.0), its AABB would be ((-0.035, 0.065), (0.035, 0.135)). This is within v18.
           For v14 (AABB: ((0.015, -0.035), (0.085, 0.035))), if placed at (0.05, 0.0, 0.782, 0.0), its AABB would be ((0.065, -0.035), (0.135, 0.035)). This is within v18.
           For v12 (AABB: ((-0.085, -0.035), (-0.015, 0.035))), if placed at (-0.05, 0.0, 0.782, 0.0), its AABB would be ((-0.135, -0.035), (-0.065, 0.035)). This is within v18.
           For v8 (AABB: ((-0.035, -0.085), (0.035, -0.015))), if placed at (0.0, -0.05, 0.782, 0.0), its AABB would be ((-0.035, -0.135), (0.035, -0.065)). This is within v18.
           
           These four placements should be stable and collision-free from each other.
           
           --Plan--:
           (move_base v3 #q8 #t17)
           (pick v4 v16 v17 #g5 #q8 #t16)
           (move_base #q8 #o3 #o0)
           (place v4 v16 #o2 #g5 #o3 #o4)
           (move_base #o3 #q14 #o0)
           (pick v4 v14 v15 #g7 #q14 #t23)
           (move_base #q14 #o3 #o0)
           (place v4 v14 #o2 #g7 #o3 #o4)
           (move_base #o3 #q10 #o0)
           (pick v4 v12 v13 #g4 #q10 #t19)
           (move_base #q10 #o3 #o0)
           (place v4 v12 #o2 #g4 #o3 #o4)
           (move_base #o3 #q13 #o0)
           (pick v4 v8 v9 #g6 #q13 #t22)
           (move_base #q13 #o3 #o0)
           (place v4 v8 #o2 #g6 #o3 #o4)
           
           --Poses--:
           (#o2 v16 v18): (0.0 0.05 0.782 0.0)
           (#o2 v14 v18): (0.05 0.0 0.782 0.0)
           (#o2 v12 v18): (-0.05 0.0 0.782 0.0)
           (#o2 v8 v18): (0.0 -0.05 0.782 0.0)

