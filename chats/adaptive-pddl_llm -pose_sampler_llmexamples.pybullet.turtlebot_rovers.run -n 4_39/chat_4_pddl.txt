User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom lander(v9)
           Atom atconf(v12, v13)
           Atom free(v12, v16)
           Atom type(v1, v2)
           Atom rock(v7)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom rock(v5)
           Atom onboard(v10, v12)
           Atom rock(v3)
           Atom objective(v20)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom type(v7, v6)
           Atom objective(v19)
           Atom mode(v11)
           Atom objective(v17)
           Atom conf(v14, v15)
           Atom type(v4, v2)
           Atom onboard(v10, v14)
           Atom type(v8, v6)
           Atom objective(v18)
           Atom rock(v4)
           Atom rock(v1)
           Atom rover(v14)
           Atom camera(v10)
           Atom type(v5, v6)
           Atom atconf(v14, v15)
           Atom store(v16)
           Atom rover(v12)
           Atom supports(v10, v11)
           Atom above(v12, #q12, v1)
           Atom conf(v12, #q12)
           Atom above(v14, #q3, v1)
           Atom conf(v14, #q3)
           Atom above(v14, #q10, v4)
           Atom conf(v14, #q10)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #q0, #y0, v18)
           Atom imagerange(v12, #q0, v18)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v7)
           Atom above(v14, #q11, v7)
           Atom conf(v14, #q11)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom imagevisible(v12, #q5, #y4, v20)
           Atom imagerange(v12, #q5, v20)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #q9, v3)
           Atom conf(v14, #q9)
           Atom above(v12, #o5, v3)
           Atom above(v12, #q13, v5)
           Atom conf(v12, #q13)
           Atom above(v14, #q6, v5)
           Atom conf(v14, #q6)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v12, #q4, #y3, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v14, #q8, v8)
           Atom conf(v14, #q8)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #q7, #y5, v19)
           Atom imagerange(v12, #q7, v19)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, v15, #t9, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q3, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q3)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v12, v13, #t3, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v14, #q8, #o2, #q3)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q3, #t19, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q3)
           Atom motion(v14, #q3, #t21, #q10)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #t4, #q4)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q0, #t18, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v14, #q10, #t17, #q1)
           Atom motion(v14, #q1, #t22, #q8)
           Atom motion(v14, #q1, #t24, #q10)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q11)
           Atom motion(v14, #q3, #t2, #q1)
           Atom motion(v14, #q11, #o2, #q1)
           Atom motion(v14, #q1, #t1, #q3)
           Atom motion(v14, #q1, #t5, v15)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q8, #t15, #q1)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, v13, #t29, #q12)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q0, #t6, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q4, #t7, #q2)
           Atom motion(v12, #q12, #t27, #q2)
           Atom motion(v12, #q2, #t26, #q4)
           Atom motion(v12, #q2, #t31, #q7)
           Atom motion(v12, #q2, #t0, v13)
           Atom motion(v12, #q2, #t30, #q0)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q2, #t32, #q12)
           Atom motion(v12, #q7, #t12, #q2)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q12)
           Atom motion(v12, #q5, #t8, #q2)
           Atom motion(v12, #q2, #t28, #q5)
           Atom motion(v12, #q12, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q4, #t25, #q5)
           Atom motion(v12, #q5, #t14, #q7)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q1, #t23, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q3, #t20, #q9)
           Atom motion(v14, #q9, #t16, #q1)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q6, #t11, #q1)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #t10, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q1, #t13, #q6)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #q3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #o3, #o2, #q3)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v12 #q13 v5 v16))
           ((sample_rock v14 #q10 v4 v16))
           ((sample_rock v14 #q11 v7 v16))
           ((sample_rock v14 #q3 v1 v16))
           ((sample_rock v14 #q6 v5 v16))
           ((sample_rock v14 #q8 v8 v16))
           ((sample_rock v14 #q9 v3 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t18 #q4))
           ((move v12 #q0 #t6 #q2))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q5))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t27 #q2))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #t0 v13))
           ((move v12 #q2 #t26 #q4))
           ((move v12 #q2 #t28 #q5))
           ((move v12 #q2 #t30 #q0))
           ((move v12 #q2 #t31 #q7))
           ((move v12 #q2 #t32 #q12))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t25 #q5))
           ((move v12 #q4 #t7 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q12))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t14 #q7))
           ((move v12 #q5 #t8 #q2))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t12 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t29 #q12))
           ((move v12 v13 #t3 #q0))
           ((move v12 v13 #t4 #q4))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q3))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q11))
           ((move v14 #q1 #t1 #q3))
           ((move v14 #q1 #t13 #q6))
           ((move v14 #q1 #t22 #q8))
           ((move v14 #q1 #t23 #q9))
           ((move v14 #q1 #t24 #q10))
           ((move v14 #q1 #t5 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q3))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t17 #q1))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #q1))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q3))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q3 #o2 #o3))
           ((move v14 #q3 #o2 #q11))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t19 #q8))
           ((move v14 #q3 #t2 #q1))
           ((move v14 #q3 #t20 #q9))
           ((move v14 #q3 #t21 #q10))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t11 #q1))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q3))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t15 #q1))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t16 #q1))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q6))
           ((move v14 v15 #t9 #q3))
           ((calibrate v12 #q0 #y0 v18 v10))
           ((calibrate v12 #q4 #y3 v17 v10))
           ((calibrate v12 #q5 #y4 v20 v10))
           ((calibrate v12 #q7 #y5 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q0 #y0 v18 v10 v11))
           ((take_image v12 #q4 #y3 v17 v10 v11))
           ((take_image v12 #q5 #y4 v20 v10 v11))
           ((take_image v12 #q7 #y5 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v20 v11))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `(new-axiom@0)`. This axiom implies several conditions must be met:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: These are already true in the initial state.
           2. `free(v12, v16)` and `free(v14, v16)`: These are already true in the initial state.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: This means images of objectives v17, v18, v19, and v20 must be taken and sent to the lander.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: This means an analysis of a rock of type v2 (stone) must be performed and sent. The rocks of type v2 are v1, v3, and v4.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: This means an analysis of a rock of type v6 (soil) must be performed and sent. The rocks of type v6 are v7, v8, and v5.
           
           So, the plan needs to:
           - Take images of all four objectives (v17, v18, v19, v20) using either rover v12 or v14, with camera v10 and mode v11.
           - Send all four images to lander v9.
           - Sample and send analysis for at least one rock of type v2.
           - Sample and send analysis for at least one rock of type v6.
           
           Let's break down the image tasks:
           - Objective v18: visible to v14 at #o3 and v12 at #q0.
           - Objective v20: visible to v14 at #o3 and v12 at #q5.
           - Objective v17: visible to v14 at #o3 and v12 at #q4.
           - Objective v19: visible to v14 at #o3 and v12 at #q7.
           
           Rover v14 can see all four objectives from configuration #o3.
           Rover v12 can see v18 from #q0, v20 from #q5, v17 from #q4, and v19 from #q7.
           
           It's more efficient to use rover v14 to take all images from #o3, since it can see all four objectives from that single configuration, or use rover v12 for each specific objective. Using v14 at #o3 seems more efficient, as it would require fewer move actions.
           
           Let's consider the rock analysis tasks:
           Rocks of type v2: v1, v3, v4.
           Rocks of type v6: v5, v7, v8.
           
           Rover v12 can sample:
           - v1 from #q12
           - v3 from #o5
           - v4 from #o5
           - v5 from #q13
           - v7 from #o5
           - v8 from #o5
           
           Rover v14 can sample:
           - v1 from #q3
           - v3 from #q9
           - v4 from #q10
           - v5 from #q6
           - v7 from #q11
           - v8 from #q8
           
           We need to pick one rock of type v2 and one of type v6.
           Let's choose v1 (type v2) and v7 (type v6).
           v1 can be sampled by v12 from #q12 or v14 from #q3.
           v7 can be sampled by v12 from #o5 or v14 from #q11.
           
           Plan Strategy:
           1. Calibrate camera v10 with rover v14 at #o3 for any objective.
           2. Take all four images with rover v14 from #o3.
           3. Send all four images with rover v14 from #q1 (its communication configuration, it's connected to current position via movement).
           4. Sample rock v1 (type v2) with rover v14 from #q3.
           5. Sample rock v7 (type v6) with rover v14 from #q11.
           6. Send analyses for v1 and v7 with rover v14 from #q1.
           
           Let's refine the plan:
           
           - Rover v14 is at v15 initially.
           - To take images, it needs to be at #o3.
           - To send images, it needs to be at #q1.
           - To sample v1, it needs to be at #q3.
           - To sample v7, it needs to be at #q11.
           
           It seems like v14 can achieve all its tasks (take images, sample two rocks, send images and analyses) by moving to the right locations.
           
           --Plan--:
           (move v14 v15 #o2 #o3)
           (calibrate v14 #o3 #o4 v17 v10)
           (take_image v14 #o3 #o4 v17 v10 v11)
           (take_image v14 #o3 #o4 v18 v10 v11)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (take_image v14 #o3 #o4 v20 v10 v11)
           (move v14 #o3 #o2 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (move v14 #q1 #t1 #q3)
           (sample_rock v14 #q3 v1 v16)
           (move v14 #q3 #o2 #q11)
           (sample_rock v14 #q11 v7 v16)
           (move v14 #q11 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (send_analysis v14 #q1 #y1 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the goal `new-axiom@0()` was not satisfied. Let's re-evaluate the goal and ensure all its components are met.
           
           The goal `new-axiom@0()` requires:
           1. `atconf(v12, v13)` (true initially)
           2. `atconf(v14, v15)` (true initially)
           3. `free(v12, v16)` (true initially)
           4. `free(v14, v16)` (true initially)
           5. `receivedimage(v17, v11)`
           6. `receivedimage(v18, v11)`
           7. `receivedimage(v19, v11)`
           8. `receivedimage(v20, v11)`
           9. `type(?stone, v2)` and `receivedanalysis(?stone)` (where ?stone is a rock of type v2, like v1, v3, or v4)
           10. `type(?soil, v6)` and `receivedanalysis(?soil)` (where ?soil is a rock of type v6, like v5, v7, or v8)
           
           My previous plan did successfully send all images and analyses. The issue might have been subtle, perhaps in the sequence of movements or if a calibration was not correctly applied across all image captures.
           
           Let's carefully construct the plan, ensuring each precondition.
           Rover v14 starts at v15 and has camera v10. Store v16 is free for both rovers.
           
           1.  **Image Capture (all objectives v17, v18, v19, v20 for mode v11)**:
               *   Rover v14 can see all objectives (v17, v18, v19, v20) from config #o3 using ray #o4.
               *   We need to calibrate the camera before taking images.
               *   `take_image` invalidates `calibrated`. So, after taking one image, we need to recalibrate for the next, or ensure we only calibrate once if `calibrated` persists through multiple `take_image` calls. The problem statement says `NegatedAtom calibrated(?c, ?v)` as an effect of `take_image`. This means we need to recalibrate for each image. This is a crucial detail!
           
           2.  **Image Transmission (all objectives v17, v18, v19, v20 for mode v11)**:
               *   Rover v14 can communicate with lander v9 from #q1 via ray #y1.
               *   After taking images, move to #q1 to send them.
           
           3.  **Rock Sampling and Analysis (one type v2, one type v6)**:
               *   Rocks of type v2: v1, v3, v4. Let's use v1.
               *   Rocks of type v6: v5, v7, v8. Let's use v7.
               *   Rover v14 can sample v1 from #q3.
               *   Rover v14 can sample v7 from #q11.
               *   `sample_rock` makes the rock `analyzed`.
               *   `send_analysis` requires the rock to be `analyzed`.
           
           Revised Plan Strategy:
           
           1.  **Move v14 to #o3** for image capture.
           2.  **Calibrate v10 on v14 for each image capture**.
           3.  **Take images** of v17, v18, v19, v20.
           4.  **Move v14 to #q1** for communication.
           5.  **Send all four images**.
           6.  **Move v14 to #q3** to sample rock v1 (type v2).
           7.  **Sample rock v1**.
           8.  **Move v14 to #q11** to sample rock v7 (type v6).
           9.  **Sample rock v7**.
           10. **Move v14 back to #q1** for communication.
           11. **Send analysis for v1 and v7**.
           
           --Plan--:
           (move v14 v15 #o2 #o3)
           (calibrate v14 #o3 #o4 v17 v10)
           (take_image v14 #o3 #o4 v17 v10 v11)
           (calibrate v14 #o3 #o4 v18 v10)
           (take_image v14 #o3 #o4 v18 v10 v11)
           (calibrate v14 #o3 #o4 v19 v10)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (calibrate v14 #o3 #o4 v20 v10)
           (take_image v14 #o3 #o4 v20 v10 v11)
           (move v14 #o3 #o2 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (move v14 #q1 #t1 #q3)
           (sample_rock v14 #q3 v1 v16)
           (move v14 #q3 #o2 #q11)
           (sample_rock v14 #q11 v7 v16)
           (move v14 #q11 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (send_analysis v14 #q1 #y1 v9 v7)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan still resulted in `Fact is not satisfied: Atom new-axiom@0()`, which means one or more of the 10 conditions derived from the axiom were not met. Let's meticulously re-check each condition and the actions:
           
           Goal `new-axiom@0()` conditions:
           1.  `atconf(v12, v13)`: True initially, and no action affects v12's `atconf` if we only use v14.
           2.  `atconf(v14, v15)`: `move` actions change this. The plan ends with `atconf(v14, #q1)`. This is a potential issue. The goal specifically asks for `atconf(v14, v15)`. We must return v14 to `v15` or ensure the axiom allows for any configuration for v14. Looking at the axiom: `Atom atconf(v12, v13)` and `Atom atconf(v14, v15)`. It means these specific configurations must be met at the *end* of the plan.
           3.  `free(v12, v16)`: True initially, and v12 doesn't use v16.
           4.  `free(v14, v16)`: True initially. `sample_rock` makes it `full(v14, v16)`. We then sample another rock, so it remains `full(v14, v16)`. The goal requires `free(v14, v16)`. This is a *major* issue. We must `drop_rock` to make it free again.
           5.  `receivedimage(v17, v11)`
           6.  `receivedimage(v18, v11)`
           7.  `receivedimage(v19, v11)`
           8.  `receivedimage(v20, v11)`
               The `calibrate`, `take_image`, `move`, `send_image` sequence seems correct for these.
           9.  `type(?stone, v2)` and `receivedanalysis(?stone)`: Achieved by sampling v1 and sending analysis.
           10. `type(?soil, v6)` and `receivedanalysis(?soil)`: Achieved by sampling v7 and sending analysis.
           
           The two main issues from the last attempt appear to be:
           *   Rover v14's final configuration: It needs to be at `v15`.
           *   Rover v14's store v16: It needs to be `free`. Since we sample two rocks, it will be `full`, so we need to `drop_rock` at some point.
           
           Let's incorporate these fixes. We need to `drop_rock` at some point, and then move v14 back to `v15`.
           
           Revised Plan Strategy:
           
           1.  **Move v14 to #o3** for image capture.
           2.  **Calibrate v10 on v14 and Take images** for v17, v18, v19, v20 (recalibrating for each).
           3.  **Move v14 to #q1** for communication.
           4.  **Send all four images**.
           5.  **Move v14 to #q3** to sample rock v1 (type v2).
           6.  **Sample rock v1**. The store is now full.
           7.  **Move v14 to #q11** to sample rock v7 (type v6). This will fail if the store is full. So we need to drop rock v1 first.
           8.  **Move v14 back to #q1** for communication.
           9.  **Send analysis for v1**.
           10. **Drop rock v1** to free up the store.
           11. **Move v14 to #q11** to sample rock v7.
           12. **Sample rock v7**. Store is full again.
           13. **Move v14 back to #q1** for communication.
           14. **Send analysis for v7**.
           15. **Drop rock v7** to free up the store.
           16. **Move v14 back to v15** to satisfy the final `atconf` condition.
           
           Let's consider the `drop_rock` action. It doesn't require a specific configuration, but it's good to do it at a communication point or on the way.
           
           Let's refine the sequence for sampling and dropping, to minimize moves.
           The `sample_rock` action requires `free(?v, ?s)`. So, if we sample rock v1, `v16` becomes full. To sample v7, we must drop v1 first.
           
           A more optimal path for sampling and dropping:
           -   Sample v1 (type v2) at #q3.
           -   Move to #q1.
           -   Send analysis for v1.
           -   Drop v1.
           -   Move to #q11.
           -   Sample v7 (type v6).
           -   Move to #q1.
           -   Send analysis for v7.
           -   Drop v7.
           -   Move to v15.
           
           This looks like a complete and correct sequence.
           
           --Plan--:
           (move v14 v15 #o2 #o3)
           (calibrate v14 #o3 #o4 v17 v10)
           (take_image v14 #o3 #o4 v17 v10 v11)
           (calibrate v14 #o3 #o4 v18 v10)
           (take_image v14 #o3 #o4 v18 v10 v11)
           (calibrate v14 #o3 #o4 v19 v10)
           (take_image v14 #o3 #o4 v19 v10 v11)
           (calibrate v14 #o3 #o4 v20 v10)
           (take_image v14 #o3 #o4 v20 v10 v11)
           (move v14 #o3 #o2 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (send_image v14 #q1 #y1 v9 v20 v11)
           (move v14 #q1 #t1 #q3)
           (sample_rock v14 #q3 v1 v16)
           (move v14 #q3 #t2 #q1)
           (send_analysis v14 #q1 #y1 v9 v1)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q11)
           (sample_rock v14 #q11 v7 v16)
           (move v14 #q11 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q1 #t5 v15)

