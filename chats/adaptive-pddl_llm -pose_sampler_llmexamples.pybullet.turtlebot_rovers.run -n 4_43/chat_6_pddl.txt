User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v14, v15)
           Atom onboard(v10, v12)
           Atom rock(v7)
           Atom rover(v12)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom rock(v3)
           Atom camera(v10)
           Atom type(v3, v2)
           Atom onboard(v10, v14)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom atconf(v12, v13)
           Atom free(v14, v16)
           Atom objective(v18)
           Atom type(v4, v2)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom type(v5, v6)
           Atom rock(v4)
           Atom conf(v14, v15)
           Atom rock(v8)
           Atom objective(v20)
           Atom conf(v12, v13)
           Atom mode(v11)
           Atom objective(v19)
           Atom free(v12, v16)
           Atom store(v16)
           Atom objective(v17)
           Atom rock(v1)
           Atom lander(v9)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom above(v14, #q11, v5)
           Atom conf(v14, #q11)
           Atom imagevisible(v14, #q5, #y3, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom imagevisible(v14, #q7, #y5, v19)
           Atom imagerange(v14, #q7, v19)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q0, #y0, v20)
           Atom imagerange(v14, #q0, v20)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q9, v1)
           Atom conf(v14, #q9)
           Atom above(v14, #q10, v4)
           Atom conf(v14, #q10)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom comvisible(v12, #q4, #y2, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #q3, v5)
           Atom conf(v12, #q3)
           Atom above(v12, #o5, v7)
           Atom above(v14, #q8, v7)
           Atom conf(v14, #q8)
           Atom above(v14, #q13, v3)
           Atom conf(v14, #q13)
           Atom above(v12, #q14, v3)
           Atom conf(v12, #q14)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #t33, #q11)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, v13, #t32, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q11)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q13, #t27, #q11)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q2, #t15, #q8)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q8, #t18, #q2)
           Atom motion(v14, #q2, #t1, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q13, #o2, #q2)
           Atom motion(v14, #q10, #t20, #q2)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q2, #t28, #q6)
           Atom motion(v14, #q2, #t26, #q13)
           Atom motion(v14, #q11, #t21, #q2)
           Atom motion(v14, #q6, #t7, #q2)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q12, #t22, #q2)
           Atom motion(v14, #q6, #t17, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q7, #t25, #q2)
           Atom motion(v14, #q2, #t30, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v12, #q4, #t4, v13)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q14, #t29, #q4)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #t19, #q2)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q2, #t16, #q9)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v12, #q3, #t9, #q4)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q4, #t3, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #t11, #q3)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, v15, #t14, #q5)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #t13, #q6)
           Atom motion(v14, #q5, #t6, #q2)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q11, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, #q5, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q13)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, v13, #t10, #q1)
           Atom motion(v12, #q1, #t8, #q4)
           Atom motion(v12, #q4, #t2, #q1)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q8)
           Atom motion(v14, #q0, #t5, #q2)
           Atom motion(v14, #q0, #t34, #q10)
           Atom motion(v14, #q10, #o2, #q0)
           Atom motion(v14, #q5, #t23, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q13, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q13)
           Atom motion(v14, #q7, #t12, #q0)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q2, #t31, #q0)
           Atom motion(v14, #q11, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q12, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q11)
           Atom motion(v14, #q0, #t24, #q6)
           Atom motion(v14, v15, #t0, #q0)
           Atom motion(v14, #q0, #o2, #q12)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #o3, #o2, #q14)
           Atom motion(v12, #q1, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q1)
           Atom motion(v12, #q14, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q4)
           Atom motion(v12, #q4, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q14 v3 v16))
           ((sample_rock v12 #q3 v5 v16))
           ((sample_rock v14 #q10 v4 v16))
           ((sample_rock v14 #q11 v5 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q13 v3 v16))
           ((sample_rock v14 #q8 v7 v16))
           ((sample_rock v14 #q9 v1 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q1))
           ((move v12 #o3 #o2 #q14))
           ((move v12 #o3 #o2 #q3))
           ((move v12 #o3 #o2 #q4))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t8 #q4))
           ((move v12 #q14 #o2 #o3))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t29 #q4))
           ((move v12 #q3 #o2 #o3))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t9 #q4))
           ((move v12 #q4 #o2 #o3))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #t2 #q1))
           ((move v12 #q4 #t3 #q3))
           ((move v12 #q4 #t4 v13))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q1))
           ((move v12 v13 #t11 #q3))
           ((move v12 v13 #t32 #q14))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q11))
           ((move v14 #q0 #o2 #q12))
           ((move v14 #q0 #o2 #q13))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 #q8))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t24 #q6))
           ((move v14 #q0 #t34 #q10))
           ((move v14 #q0 #t5 #q2))
           ((move v14 #q10 #o2 #q0))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q13))
           ((move v14 #q10 #o2 #q5))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t20 #q2))
           ((move v14 #q10 #t33 #q11))
           ((move v14 #q11 #o2 #q0))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q5))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t21 #q2))
           ((move v14 #q12 #o2 #q0))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q5))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t22 #q2))
           ((move v14 #q13 #o2 #q0))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q2))
           ((move v14 #q13 #o2 #q5))
           ((move v14 #q13 #o2 #q6))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t27 #q11))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #t1 v15))
           ((move v14 #q2 #t15 #q8))
           ((move v14 #q2 #t16 #q9))
           ((move v14 #q2 #t26 #q13))
           ((move v14 #q2 #t28 #q6))
           ((move v14 #q2 #t30 #q7))
           ((move v14 #q2 #t31 #q0))
           ((move v14 #q5 #o2 #q10))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q12))
           ((move v14 #q5 #o2 #q13))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 #q8))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t13 #q6))
           ((move v14 #q5 #t23 #q0))
           ((move v14 #q5 #t6 #q2))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q11))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t17 #q7))
           ((move v14 #q6 #t7 #q2))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t12 #q0))
           ((move v14 #q7 #t25 #q2))
           ((move v14 #q8 #o2 #q0))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t18 #q2))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t19 #q2))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((move v14 v15 #t14 #q5))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q0 #y0 v20 v10))
           ((calibrate v14 #q5 #y3 v17 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((calibrate v14 #q7 #y5 v19 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q0 #y0 v20 v10 v11))
           ((take_image v14 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q7 #y5 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v12 #q4 #y2 v9 v19 v11))
           ((send_image v12 #q4 #y2 v9 v20 v11))
           ((send_image v14 #q2 #y1 v9 v20 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers (v12, v14), a lander (v9), a camera (v10), and a store (v16). There are also several objectives (v17, v18, v19, v20) and rocks (v1, v3, v4, v5, v7, v8). The camera v10 supports mode v11. Rocks have types, some being v2 and others v6.
           
           The goal `new-axiom@0()` requires:
           1. `atconf(v12, v13)`: Already true.
           2. `atconf(v14, v15)`: Already true.
           3. `free(v12, v16)`: Already true.
           4. `free(v14, v16)`: Already true.
           5. `receivedimage(v17, v11)`: Need to take and send an image of objective v17 in mode v11.
           6. `receivedimage(v18, v11)`: Need to take and send an image of objective v18 in mode v11.
           7. `receivedimage(v19, v11)`: Need to take and send an image of objective v19 in mode v11.
           8. `receivedimage(v20, v11)`: Need to take and send an image of objective v20 in mode v11.
           9. `type(?stone, v2)`: This is implicitly true as rocks v1, v3, v4 have type v2. We need to analyze one such rock.
           10. `receivedanalysis(?stone)`: Need to sample and send analysis of a rock of type v2.
           11. `type(?soil, v6)`: This is implicitly true as rocks v5, v7, v8 have type v6. We need to analyze one such rock.
           12. `receivedanalysis(?soil)`: Need to sample and send analysis of a rock of type v6.
           
           Let's break down the plan:
           *   **Image Collection and Transmission:**
               *   Rover v12 has `imagevisible` predicates for all four objectives (v17, v18, v19, v20) at config #o3 with ray #o4.
               *   Rover v14 also has `imagevisible` predicates for all four objectives at different configs.
               *   Both rovers have `comvisible` to lander v9.
               *   We need to `calibrate` the camera `v10` first for each rover. Since `calibrated` is reset after `take_image`, we can calibrate, take image, then calibrate for the next objective.
               *   We can use rover v12 to take images of all objectives and send them.
           *   **Rock Analysis and Transmission:**
               *   We need to analyze one rock of type v2 (e.g., v1) and one rock of type v6 (e.g., v5).
               *   Rover v12 can be above v1 at #q1 and above v5 at #q3.
               *   Rover v14 can be above v1 at #q9 and above v5 at #q11.
               *   Both rovers have free store v16.
               *   After sampling, the analysis needs to be sent.
           
           Let's use rover v12 for all image and analysis tasks, as it seems to have all the necessary visibility.
           
           **Plan Steps:**
           1.  Calibrate v10 for v12 at #o3 for v17.
           2.  Take image of v17.
           3.  Send image of v17.
           4.  Calibrate v10 for v12 at #o3 for v18.
           5.  Take image of v18.
           6.  Send image of v18.
           7.  Calibrate v10 for v12 at #o3 for v19.
           8.  Take image of v19.
           9.  Send image of v19.
           10. Calibrate v10 for v12 at #o3 for v20.
           11. Take image of v20.
           12. Send image of v20.
           13. Move v12 to #q1 (above v1, type v2).
           14. Sample rock v1.
           15. Send analysis of v1.
           16. Move v12 to #q3 (above v5, type v6).
           17. Sample rock v5.
           18. Send analysis of v5.
           
           All preconditions seem to be met by these steps.
           
           --Plan--:
           (calibrate v12 #o3 #o4 v17 v10)
           (take_image v12 #o3 #o4 v17 v10 v11)
           (send_image v12 #q4 #y2 v9 v17 v11)
           (calibrate v12 #o3 #o4 v18 v10)
           (take_image v12 #o3 #o4 v18 v10 v11)
           (send_image v12 #q4 #y2 v9 v18 v11)
           (calibrate v12 #o3 #o4 v19 v10)
           (take_image v12 #o3 #o4 v19 v10 v11)
           (send_image v12 #q4 #y2 v9 v19 v11)
           (calibrate v12 #o3 #o4 v20 v10)
           (take_image v12 #o3 #o4 v20 v10 v11)
           (send_image v12 #q4 #y2 v9 v20 v11)
           (move v12 v13 #t10 #q1)
           (sample_rock v12 #q1 v1 v16)
           (send_analysis v12 #q4 #y2 v9 v1)
           (move v12 #q1 #o2 #q3)
           (sample_rock v12 #q3 v5 v16)
           (send_analysis v12 #q4 #y2 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. Let's re-evaluate the goal and ensure all components are met. The goal `new-axiom@0()` is a complex axiom that requires the satisfaction of several atomic predicates:
           
           1.  `atconf(v12, v13)`: This is true in the initial state.
           2.  `atconf(v14, v15)`: This is true in the initial state.
           3.  `free(v12, v16)`: This is true in the initial state.
           4.  `free(v14, v16)`: This is true in the initial state.
           5.  `receivedimage(v17, v11)`: Need to take and send an image of objective v17 in mode v11.
           6.  `receivedimage(v18, v11)`: Need to take and send an image of objective v18 in mode v11.
           7.  `receivedimage(v19, v11)`: Need to take and send an image of objective v19 in mode v11.
           8.  `receivedimage(v20, v11)`: Need to take and send an image of objective v20 in mode v11.
           9.  `type(?stone, v2)`: Implied by the presence of rocks of type v2 (v1, v3, v4).
           10. `receivedanalysis(?stone)`: Need to sample and send analysis of a rock of type v2.
           11. `type(?soil, v6)`: Implied by the presence of rocks of type v6 (v5, v7, v8).
           12. `receivedanalysis(?soil)`: Need to sample and send analysis of a rock of type v6.
           
           My previous plan should have achieved all these. Let me double check if any action in the plan was invalid or if there was a missing step. All actions used in the previous plan are present in the list of valid actions.
           The issue is likely not in the individual actions or their immediate effects, but perhaps in the exact state required by the axiom for `receivedanalysis`. The axiom contains `type(?stone, v2)` and `receivedanalysis(?stone)`, and `type(?soil, v6)` and `receivedanalysis(?soil)`. This implies that *some* rock of type v2 and *some* rock of type v6 must have been analyzed and their analysis sent. My plan samples rock v1 (type v2) and rock v5 (type v6), then sends their analysis.
           
           Let's trace the state changes more carefully.
           Initial state:
           `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)` are all true.
           `type(v1, v2)`, `type(v3, v2)`, `type(v4, v2)`
           `type(v5, v6)`, `type(v7, v6)`, `type(v8, v6)`
           
           Plan:
           1.  `(calibrate v12 #o3 #o4 v17 v10)`: `calibrated(v10, v12)` becomes true.
           2.  `(take_image v12 #o3 #o4 v17 v10 v11)`: `haveimage(v12, v17, v11)` becomes true, `calibrated(v10, v12)` becomes false.
           3.  `(send_image v12 #q4 #y2 v9 v17 v11)`: `receivedimage(v17, v11)` becomes true.
           4.  `(calibrate v12 #o3 #o4 v18 v10)`: `calibrated(v10, v12)` becomes true.
           5.  `(take_image v12 #o3 #o4 v18 v10 v11)`: `haveimage(v12, v18, v11)` becomes true, `calibrated(v10, v12)` becomes false.
           6.  `(send_image v12 #q4 #y2 v9 v18 v11)`: `receivedimage(v18, v11)` becomes true.
           7.  `(calibrate v12 #o3 #o4 v19 v10)`: `calibrated(v10, v12)` becomes true.
           8.  `(take_image v12 #o3 #o4 v19 v10 v11)`: `haveimage(v12, v19, v11)` becomes true, `calibrated(v10, v12)` becomes false.
           9.  `(send_image v12 #q4 #y2 v9 v19 v11)`: `receivedimage(v19, v11)` becomes true.
           10. `(calibrate v12 #o3 #o4 v20 v10)`: `calibrated(v10, v12)` becomes true.
           11. `(take_image v12 #o3 #o4 v20 v10 v11)`: `haveimage(v12, v20, v11)` becomes true, `calibrated(v10, v12)` becomes false.
           12. `(send_image v12 #q4 #y2 v9 v20 v11)`: `receivedimage(v20, v11)` becomes true.
           
           At this point, all `receivedimage` goals are met.
           
           13. `(move v12 v13 #t10 #q1)`: `atconf(v12, #q1)` becomes true, `atconf(v12, v13)` becomes false.
           14. `(sample_rock v12 #q1 v1 v16)`: `full(v12, v16)` becomes true, `analyzed(v12, v1)` becomes true, `free(v12, v16)` becomes false.
           15. `(send_analysis v12 #q4 #y2 v9 v1)`: Precondition `atconf(v12, #q4)` is NOT met. The rover is at #q1. This is the issue! I must move the rover to a configuration where `comvisible(v12, #q4, #y2, v9)` is true to send the analysis. Also, the plan makes `atconf(v12, v13)` false, while the axiom requires `atconf(v12, v13)`. This is a more fundamental problem.
           
           The axiom `new-axiom@0()` requires `atconf(v12, v13)` to be true at the *end* of the plan. My plan moves `v12` from `v13`. This is a critical error. The `move` actions modify `atconf` predicates.
           Since `new-axiom@0` is an axiom and not a regular goal predicate, it is likely that its component predicates are expected to hold simultaneously at the end state.
           
           If both rovers must be at their initial positions `v13` and `v15` respectively for the axiom to hold, then `move` actions will make this impossible unless the rovers move back to their original configurations.
           
           Let's consider the axiom again:
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           The goal requires `atconf(v12, v13)` and `atconf(v14, v15)` to be true in the final state. This means if a rover moves, it must move back.
           
           Also, `free(v12, v16)` and `free(v14, v16)` must be true. This means if we sample a rock, we must drop it.
           
           Let's modify the plan to satisfy these conditions:
           
           **Revised Plan Strategy:**
           1.  **Images (Rover v12):**
               *   Calibrate and take image for v17, then send it from a `comvisible` location.
               *   Repeat for v18, v19, v20.
               *   Rover v12 must return to v13 after any movement. The `comvisible` location for v12 is #q4. The imaging location is #o3.
               *   `motion(v12, v13, #o2, #o3)` to move for images, `motion(v12, #o3, #o2, #q4)` to move for communication, then `motion(v12, #q4, #o2, v13)` to return.
           
           2.  **Analysis (Rover v12):**
               *   Move to a rock of type v2 (e.g., v1 at #q1).
               *   Sample it. This makes `free(v12, v16)` false.
               *   Move to `comvisible` location (#q4).
               *   Send analysis.
               *   Drop the rock. This makes `free(v12, v16)` true again.
               *   Move to a rock of type v6 (e.g., v5 at #q3).
               *   Sample it.
               *   Move to `comvisible` location (#q4).
               *   Send analysis.
               *   Drop the rock.
               *   Finally, ensure `v12` is at `v13`.
           
           This looks like a lot of movement. Let's optimize.
           Rover v12 is at v13.
           Rover v12 has image visibility at #o3 and communication visibility at #q4.
           Rover v12 is above rock v1 at #q1, v3 at #q14, v4 at #o5, v5 at #q3, v7 at #o5, v8 at #o5.
           
           Let's use rover v14 for images, as it has many image locations and a communication location at #q2. Rover v14 is at v15.
           
           **Rover v14 for Images:**
           *   Move to #q0 (visible to v20).
           *   Calibrate, take image, move to #q2, send image, return to #q0 (or continue to next imaging spot).
           *   Let's ensure the rover is at #q2 for sending all images, as it's a single com point.
           
           **Rover v12 for Analysis:**
           *   Stay at v13 initially (or return).
           *   Move to #q1 (above v1, type v2).
           *   Sample v1.
           *   Move to #q4 (comms).
           *   Send analysis of v1.
           *   Drop v1.
           *   Move to #q3 (above v5, type v6).
           *   Sample v5.
           *   Move to #q4 (comms).
           *   Send analysis of v5.
           *   Drop v5.
           *   Return to v13.
           
           The plan should be as follows:
           
           1.  **Rover v14: Take and Send Images** (Objectives v17, v18, v19, v20)
               *   Move v14 from v15 to #q5 (for v17).
               *   Calibrate v10 at #q5 for v17.
               *   Take image of v17.
               *   Move v14 from #q5 to #q2 (for comms).
               *   Send image of v17.
               *   Move v14 from #q2 to #q6 (for v18).
               *   Calibrate v10 at #q6 for v18.
               *   Take image of v18.
               *   Move v14 from #q6 to #q2 (for comms).
               *   Send image of v18.
               *   Move v14 from #q2 to #q7 (for v19).
               *   Calibrate v10 at #q7 for v19.
               *   Take image of v19.
               *   Move v14 from #q7 to #q2 (for comms).
               *   Send image of v19.
               *   Move v14 from #q2 to #q0 (for v20).
               *   Calibrate v10 at #q0 for v20.
               *   Take image of v20.
               *   Move v14 from #q0 to #q2 (for comms).
               *   Send image of v20.
               *   Move v14 from #q2 back to v15.
           
           2.  **Rover v12: Sample and Send Analysis, then drop** (Rocks v1 (type v2) and v5 (type v6))
               *   Move v12 from v13 to #q1 (above v1).
               *   Sample rock v1.
               *   Move v12 from #q1 to #q4 (for comms).
               *   Send analysis of v1.
               *   Drop rock (v1).
               *   Move v12 from #q4 to #q3 (above v5).
               *   Sample rock v5.
               *   Move v12 from #q3 to #q4 (for comms).
               *   Send analysis of v5.
               *   Drop rock (v5).
               *   Move v12 from #q4 back to v13.
           
           This detailed plan ensures all `atconf` and `free` conditions are met at the end, along with all image and analysis transmissions.
           
           --Plan--:
           (move v14 v15 #t14 #q5)
           (calibrate v14 #q5 #y3 v17 v10)
           (take_image v14 #q5 #y3 v17 v10 v11)
           (move v14 #q5 #t6 #q2)
           (send_image v14 #q2 #y1 v9 v17 v11)
           (move v14 #q2 #t28 #q6)
           (calibrate v14 #q6 #y4 v18 v10)
           (take_image v14 #q6 #y4 v18 v10 v11)
           (move v14 #q6 #t7 #q2)
           (send_image v14 #q2 #y1 v9 v18 v11)
           (move v14 #q2 #t30 #q7)
           (calibrate v14 #q7 #y5 v19 v10)
           (take_image v14 #q7 #y5 v19 v10 v11)
           (move v14 #q7 #t25 #q2)
           (send_image v14 #q2 #y1 v9 v19 v11)
           (move v14 #q2 #t31 #q0)
           (calibrate v14 #q0 #y0 v20 v10)
           (take_image v14 #q0 #y0 v20 v10 v11)
           (move v14 #q0 #t5 #q2)
           (send_image v14 #q2 #y1 v9 v20 v11)
           (move v14 #q2 #t1 v15)
           (move v12 v13 #t10 #q1)
           (sample_rock v12 #q1 v1 v16)
           (move v12 #q1 #t8 #q4)
           (send_analysis v12 #q4 #y2 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q4 #t3 #q3)
           (sample_rock v12 #q3 v5 v16)
           (move v12 #q3 #t9 #q4)
           (send_analysis v12 #q4 #y2 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q4 #t4 v13)

