User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g3: object
           #g4: object
           #g5: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q10: object
           #q11: object
           #q12: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t18: object
           #t19: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           @sink: object
           @stove: object
           p3: object
           p4: object
           p5: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p5 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v9 is a pose with position (0.064, -0.288, 0.781) and quaternion (0.0, 0.0, 0.906, -0.423).
           Object v15 is a pose with position (-0.134, -0.556, 0.781) and quaternion (0.0, 0.0, 0.799, 0.601).
           Object v13 is a pose with position (0.165, 0.344, 0.781) and quaternion (0.0, 0.0, -0.629, 0.777).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p3 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p3)
           Atom supported(v8, p3, v16)
           Atom pose(v14, p5)
           Atom supported(v14, p5, v10)
           Atom supported(v14, p5, v16)
           Atom pose(v12, p4)
           Atom supported(v12, p4, v16)
           Atom supported(v12, p4, v10)
           Atom supported(v8, p3, v10)
           Atom kin(v32, v33, p3, v34, v35, v36)
           Atom kin(v32, v37, p4, v34, v35, v36)
           Atom kin(v32, v38, p5, v34, v35, v36)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v14, #p0)
           Atom supported(v14, #p0, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g4)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g3)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g5)
           Atom bconf(#q12)
           Atom atraj(#t29)
           Atom kin(v4, v14, p5, #g4, #q12, #t29)
           Atom bconf(#q7)
           Atom atraj(#t19)
           Atom kin(v4, v14, v15, #g4, #q7, #t19)
           Atom bconf(#q9)
           Atom atraj(#t21)
           Atom kin(v4, v14, #p0, #g4, #q9, #t21)
           Atom bconf(#q8)
           Atom atraj(#t20)
           Atom kin(v4, v8, v9, #g5, #q8, #t20)
           Atom bconf(#q11)
           Atom atraj(#t28)
           Atom kin(v4, v8, p3, #g5, #q11, #t28)
           Atom bconf(#q10)
           Atom atraj(#t22)
           Atom kin(v4, v12, p4, #g3, #q10, #t22)
           Atom bconf(#q6)
           Atom atraj(#t18)
           Atom kin(v4, v12, v13, #g3, #q6, #t18)
           Atom basemotion(#q12, #o0, v3)
           Atom basemotion(v3, #o0, #q12)
           Atom basemotion(#q12, #o0, #q12)
           Atom basemotion(#q6, #o0, v3)
           Atom btraj(#t23)
           Atom basemotion(v3, #t23, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom btraj(#t30)
           Atom basemotion(#q12, #t30, #q6)
           Atom basemotion(#q6, #o0, #q12)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(#q6, #o0, #q11)
           Atom basemotion(#q11, #o0, #q6)
           Atom basemotion(#q12, #o0, #q11)
           Atom basemotion(#q11, #o0, #q12)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q10, #o0, #q11)
           Atom btraj(#t27)
           Atom basemotion(v3, #t27, #q10)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q11, #o0, #q10)
           Atom btraj(#t34)
           Atom basemotion(#q6, #t34, #q10)
           Atom basemotion(#q10, #o0, #q6)
           Atom basemotion(#q12, #o0, #q10)
           Atom basemotion(#q10, #o0, #q12)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q10)
           Atom basemotion(#q7, #o0, #q11)
           Atom basemotion(#q7, #o0, #q6)
           Atom btraj(#t32)
           Atom basemotion(#q7, #t32, #q12)
           Atom btraj(#t24)
           Atom basemotion(v3, #t24, #q7)
           Atom basemotion(#q10, #o0, #q7)
           Atom basemotion(#q11, #o0, #q7)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q12, #o0, #q7)
           Atom basemotion(#q8, #o0, v3)
           Atom btraj(#t25)
           Atom basemotion(v3, #t25, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q11, #o0, #q8)
           Atom btraj(#t33)
           Atom basemotion(#q8, #t33, #q11)
           Atom btraj(#t31)
           Atom basemotion(#q10, #t31, #q8)
           Atom basemotion(#q8, #o0, #q10)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q12, #o0, #q8)
           Atom basemotion(#q8, #o0, #q12)
           Atom basemotion(#q7, #o0, #q8)
           Atom basemotion(#q8, #o0, #q7)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q10)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q9, #o0, #q7)
           Atom basemotion(#q9, #o0, #q12)
           Atom basemotion(#q9, #o0, #q9)
           Atom btraj(#t26)
           Atom basemotion(v3, #t26, #q9)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q6, #o0, #q9)
           Atom basemotion(#q7, #o0, #q9)
           Atom basemotion(#q12, #o0, #q9)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, #o2, #g4, #o3, #o4)
           Atom kin(v4, v12, #o2, #g3, #o3, #o4)
           Atom kin(v4, v8, #o2, #g5, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q12, #o0, #o3)
           Atom basemotion(#o3, #o0, #q12)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q11 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q6 #o0))
           ((move_base #q10 #q7 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q8 #t31))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q6 #o0))
           ((move_base #q11 #q7 #o0))
           ((move_base #q11 #q8 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q7 #o0))
           ((move_base #q12 #q8 #o0))
           ((move_base #q12 #q9 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q12 #q6 #t30))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q11 #o0))
           ((move_base #q6 #q12 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q10 #t34))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q10 #o0))
           ((move_base #q7 #q11 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 #q8 #o0))
           ((move_base #q7 #q9 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q12 #t32))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q10 #o0))
           ((move_base #q8 #q12 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q7 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q8 #q11 #t33))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q12 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q7 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q12 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q6 #t23))
           ((move_base v3 #q7 #t24))
           ((move_base v3 #q8 #t25))
           ((move_base v3 #q9 #t26))
           ((move_base v3 #q10 #t27))
           ((pick v4 v12 #o2 #g3 #o3 #o4))
           ((place v4 v12 #o2 #g3 #o3 #o4))
           ((pick v4 v12 p4 #g3 #q10 #t22))
           ((place v4 v12 p4 #g3 #q10 #t22))
           ((pick v4 v12 v13 #g3 #q6 #t18))
           ((place v4 v12 v13 #g3 #q6 #t18))
           ((pick v4 v14 #o2 #g4 #o3 #o4))
           ((place v4 v14 #o2 #g4 #o3 #o4))
           ((pick v4 v14 #p0 #g4 #q9 #t21))
           ((place v4 v14 #p0 #g4 #q9 #t21))
           ((pick v4 v14 p5 #g4 #q12 #t29))
           ((place v4 v14 p5 #g4 #q12 #t29))
           ((pick v4 v14 v15 #g4 #q7 #t19))
           ((place v4 v14 v15 #g4 #q7 #t19))
           ((pick v4 v8 #o2 #g5 #o3 #o4))
           ((place v4 v8 #o2 #g5 #o3 #o4))
           ((pick v4 v8 p3 #g5 #q11 #t28))
           ((place v4 v8 p3 #g5 #q11 #t28))
           ((pick v4 v8 v9 #g5 #q8 #t20))
           ((place v4 v8 v9 #g5 #q8 #t20))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q1', '#t5'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g0', '#q1', '#t1'))
           Action(name='move_base', args=('#q1', '#q0', '#t11'))
           Action(name='place', args=('v4', 'v14', 'p5', '#g0', '#q0', '#t0'))
           Action(name='move_base', args=('#q0', '#q5', '#t17'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g2', '#q5', '#t9'))
           Action(name='move_base', args=('#q5', '#q3', '#t12'))
           Action(name='place', args=('v4', 'v12', 'p4', '#g2', '#q3', '#t3'))
           Action(name='move_base', args=('#q3', '#q4', '#t16'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g1', '#q4', '#t8'))
           Action(name='move_base', args=('#q4', '#q2', '#t13'))
           Action(name='place', args=('v4', 'v8', 'p3', '#g1', '#q2', '#t2'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v8', 'p3', 'v14', 'p5')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The robot needs to place three objects (v8, v12, v14) on the surface v16. Currently, all three objects are on surface v11. The robot will pick each object from its current pose and place it on a new pose on v16. It will utilize the pre-defined collision-free poses for placement to minimize the risk of failure.
           
           The previous attempt failed because placing 'v8' at 'p3' resulted in a collision with 'v14' at 'p5'. This indicates that 'p3' and 'p5' are too close to each other on the surface 'v16'. To avoid this, I will use a different pose for 'v14' and 'v12'. I will use '#p0' for 'v14' and '#o2' for 'v12', and 'p3' for 'v8'. The object v16 is an object with AABB = ((-0.135, -0.135), (0.135, 0.135)).
           
           --Plan--:
           (move_base v3 #q7 #t24)
           (pick v4 v14 v15 #g4 #q7 #t19)
           (move_base #q7 #q9 #o0)
           (place v4 v14 #p0 #g4 #q9 #t21)
           (move_base #q9 #q6 #o0)
           (pick v4 v12 v13 #g3 #q6 #t18)
           (move_base #q6 #o3 #o0)
           (place v4 v12 #o2 #g3 #o3 #o4)
           (move_base #o3 #q8 #o0)
           (pick v4 v8 v9 #g5 #q8 #t20)
           (move_base #q8 #q11 #t33)
           (place v4 v8 p3 #g5 #q11 #t28)
           
           --Poses--:
           (#p0 v14 v16): (0.0 0.0 0.782 0.0)
           (#o2 v12 v16): (0.05 0.0 0.782 0.0)

