User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q19: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom atconf(v12, v13)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom rover(v14)
           Atom conf(v12, v13)
           Atom type(v4, v2)
           Atom rock(v3)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom camera(v10)
           Atom free(v12, v16)
           Atom objective(v17)
           Atom type(v1, v2)
           Atom lander(v9)
           Atom onboard(v10, v12)
           Atom rock(v5)
           Atom rock(v1)
           Atom rover(v12)
           Atom rock(v7)
           Atom free(v14, v16)
           Atom objective(v19)
           Atom type(v3, v2)
           Atom type(v5, v6)
           Atom type(v7, v6)
           Atom rock(v4)
           Atom type(v8, v6)
           Atom objective(v18)
           Atom rock(v8)
           Atom imagevisible(v14, #q15, #y7, v17)
           Atom imagerange(v14, #q15, v17)
           Atom conf(v14, #q15)
           Atom ray(#y7)
           Atom imagevisible(v14, #q10, #y4, v18)
           Atom imagerange(v14, #q10, v18)
           Atom conf(v14, #q10)
           Atom ray(#y4)
           Atom above(v14, #q17, v8)
           Atom conf(v14, #q17)
           Atom above(v14, #q18, v4)
           Atom conf(v14, #q18)
           Atom imagevisible(v14, #q13, #y6, v19)
           Atom imagerange(v14, #q13, v19)
           Atom conf(v14, #q13)
           Atom ray(#y6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q16, v7)
           Atom conf(v14, #q16)
           Atom above(v14, #q11, v3)
           Atom conf(v14, #q11)
           Atom above(v12, #q2, v8)
           Atom conf(v12, #q2)
           Atom imagevisible(v12, #q9, #y3, v17)
           Atom imagerange(v12, #q9, v17)
           Atom conf(v12, #q9)
           Atom ray(#y3)
           Atom above(v12, #q6, v4)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q5, #y2, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y2)
           Atom above(v12, #q4, v7)
           Atom conf(v12, #q4)
           Atom above(v12, #q0, v3)
           Atom conf(v12, #q0)
           Atom imagevisible(v12, #q3, #y1, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom above(v14, #q19, v1)
           Atom conf(v14, #q19)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom above(v14, #q14, v5)
           Atom conf(v14, #q14)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom comvisible(v14, #q12, #y5, v9)
           Atom comrange(v14, #q12, v9)
           Atom conf(v14, #q12)
           Atom ray(#y5)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, v15, #t33, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q12, #t14, v15)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q2, #t23, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t3, #q2)
           Atom motion(v12, #q1, #t5, v13)
           Atom motion(v14, v15, #t41, #q18)
           Atom motion(v14, #q12, #o2, #q18)
           Atom motion(v14, #q18, #o2, v15)
           Atom motion(v14, #q15, #o2, #q18)
           Atom motion(v14, #q18, #t38, #q12)
           Atom motion(v14, #q18, #o2, #q18)
           Atom motion(v14, #q18, #o2, #q15)
           Atom motion(v14, v15, #t12, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q15, #t31, #q10)
           Atom motion(v14, #q18, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q18)
           Atom motion(v14, #q10, #t10, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q17, #t28, #q12)
           Atom motion(v14, v15, #t30, #q17)
           Atom motion(v14, #q17, #o2, #q18)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q17)
           Atom motion(v14, #q18, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q3, #t6, #q1)
           Atom motion(v12, v13, #t1, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q2, #t19, #q3)
           Atom motion(v12, #q1, #t36, #q3)
           Atom motion(v14, v15, #t13, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q10, #t32, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q18, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #t11, #q12)
           Atom motion(v14, #q13, #o2, #q18)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, v15, #t26, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q10)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q18, #o2, #q16)
           Atom motion(v14, #q10, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q18)
           Atom motion(v14, #q16, #t25, #q12)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q12, #t35, #q16)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q1, #t2, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, v13, #t17, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q0, #t16, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q1, #t4, #q4)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q4, #t34, #q1)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q1, #t37, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #t7, #q1)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q3, #t18, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t24, #q0)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q18)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q11, #t8, #q12)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q12, #t9, #q11)
           Atom motion(v14, #q17, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q18, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q17)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q19, #o2, #q18)
           Atom motion(v14, #q19, #o2, #q13)
           Atom motion(v14, #q19, #o2, #q12)
           Atom motion(v14, #q11, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q17)
           Atom motion(v14, #q10, #o2, #q19)
           Atom motion(v14, #q15, #o2, #q19)
           Atom motion(v14, v15, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q16)
           Atom motion(v14, #q19, #o2, v15)
           Atom motion(v14, #q19, #o2, #q10)
           Atom motion(v14, #q19, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q19)
           Atom motion(v14, #q18, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q19)
           Atom motion(v14, #q17, #o2, #q19)
           Atom motion(v14, #q12, #o2, #q19)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v14, #q19, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q14, #t40, #q12)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q18)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q19)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q18, #o2, #q14)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q12, #t39, #q14)
           Atom motion(v12, #q9, #t29, #q5)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, v13, #t21, #q9)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q5, #t20, #q9)
           Atom motion(v12, #q9, #t22, #q3)
           Atom motion(v12, #q9, #t15, #q1)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q3, #t27, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v3 v16))
           ((sample_rock v12 #q2 v8 v16))
           ((sample_rock v12 #q4 v7 v16))
           ((sample_rock v12 #q6 v4 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v14 #q11 v3 v16))
           ((sample_rock v14 #q14 v5 v16))
           ((sample_rock v14 #q16 v7 v16))
           ((sample_rock v14 #q17 v8 v16))
           ((sample_rock v14 #q18 v4 v16))
           ((sample_rock v14 #q19 v1 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t16 #q2))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #t2 #q0))
           ((move v12 #q1 #t3 #q2))
           ((move v12 #q1 #t36 #q3))
           ((move v12 #q1 #t37 #q5))
           ((move v12 #q1 #t4 #q4))
           ((move v12 #q1 #t5 v13))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t19 #q3))
           ((move v12 #q2 #t23 #q1))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t18 #q5))
           ((move v12 #q3 #t27 #q9))
           ((move v12 #q3 #t6 #q1))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t34 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t20 #q9))
           ((move v12 #q5 #t24 #q0))
           ((move v12 #q5 #t7 #q1))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t15 #q1))
           ((move v12 #q9 #t22 #q3))
           ((move v12 #q9 #t29 #q5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q3))
           ((move v12 v13 #t17 #q0))
           ((move v12 v13 #t21 #q9))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q16))
           ((move v14 #q10 #o2 #q17))
           ((move v14 #q10 #o2 #q18))
           ((move v14 #q10 #o2 #q19))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t10 #q12))
           ((move v14 #q10 #t32 #q13))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q17))
           ((move v14 #q11 #o2 #q18))
           ((move v14 #q11 #o2 #q19))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t8 #q12))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q18))
           ((move v14 #q12 #o2 #q19))
           ((move v14 #q12 #t14 v15))
           ((move v14 #q12 #t35 #q16))
           ((move v14 #q12 #t39 #q14))
           ((move v14 #q12 #t9 #q11))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q18))
           ((move v14 #q13 #o2 #q19))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t11 #q12))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q18))
           ((move v14 #q14 #o2 #q19))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t40 #q12))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q18))
           ((move v14 #q15 #o2 #q19))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t31 #q10))
           ((move v14 #q16 #o2 #q10))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q18))
           ((move v14 #q16 #o2 #q19))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t25 #q12))
           ((move v14 #q17 #o2 #q10))
           ((move v14 #q17 #o2 #q11))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q18))
           ((move v14 #q17 #o2 #q19))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t28 #q12))
           ((move v14 #q18 #o2 #q10))
           ((move v14 #q18 #o2 #q11))
           ((move v14 #q18 #o2 #q13))
           ((move v14 #q18 #o2 #q14))
           ((move v14 #q18 #o2 #q15))
           ((move v14 #q18 #o2 #q16))
           ((move v14 #q18 #o2 #q17))
           ((move v14 #q18 #o2 #q18))
           ((move v14 #q18 #o2 #q19))
           ((move v14 #q18 #o2 v15))
           ((move v14 #q18 #t38 #q12))
           ((move v14 #q19 #o2 #q10))
           ((move v14 #q19 #o2 #q11))
           ((move v14 #q19 #o2 #q12))
           ((move v14 #q19 #o2 #q13))
           ((move v14 #q19 #o2 #q14))
           ((move v14 #q19 #o2 #q15))
           ((move v14 #q19 #o2 #q16))
           ((move v14 #q19 #o2 #q17))
           ((move v14 #q19 #o2 #q18))
           ((move v14 #q19 #o2 #q19))
           ((move v14 #q19 #o2 v15))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q19))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q10))
           ((move v14 v15 #t13 #q13))
           ((move v14 v15 #t26 #q16))
           ((move v14 v15 #t30 #q17))
           ((move v14 v15 #t33 #q15))
           ((move v14 v15 #t41 #q18))
           ((calibrate v12 #q3 #y1 v18 v10))
           ((calibrate v12 #q5 #y2 v19 v10))
           ((calibrate v12 #q9 #y3 v17 v10))
           ((calibrate v14 #q10 #y4 v18 v10))
           ((calibrate v14 #q13 #y6 v19 v10))
           ((calibrate v14 #q15 #y7 v17 v10))
           ((take_image v12 #q3 #y1 v18 v10 v11))
           ((take_image v12 #q5 #y2 v19 v10 v11))
           ((take_image v12 #q9 #y3 v17 v10 v11))
           ((take_image v14 #q10 #y4 v18 v10 v11))
           ((take_image v14 #q13 #y6 v19 v10 v11))
           ((take_image v14 #q15 #y7 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q12 #y5 v9 v3))
           ((send_analysis v14 #q12 #y5 v9 v5))
           ((send_analysis v14 #q12 #y5 v9 v7))
           ((send_analysis v14 #q12 #y5 v9 v8))
           ((send_analysis v14 #q12 #y5 v9 v4))
           ((send_analysis v14 #q12 #y5 v9 v1))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q12 #y5 v9 v18 v11))
           ((send_image v14 #q12 #y5 v9 v19 v11))
           ((send_image v14 #q12 #y5 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each equipped with a camera v10. There are several rock objectives (v1, v3, v4, v5, v7, v8) and image objectives (v17, v18, v19). Both rovers have a storage unit v16. There is also a lander v9 for communication. The goal is `new-axiom@0()`, which is an axiom implying that both rovers are at some configurations, their stores are free, images for v17, v18, and v19 are received in mode v11, and rocks v4 and v7 are analyzed.
           
           To achieve the goal, we need to:
           1. Ensure both rovers are at a configuration (which they are initially).
           2. Ensure both stores are free (which they are initially).
           3. Receive images for objectives v17, v18, and v19 using mode v11. This involves:
               - Calibrating the camera.
               - Taking the image.
               - Sending the image to the lander.
           4. Analyze rocks v4 and v7. This involves:
               - Sampling the rock.
               - Sending the analysis to the lander.
           
           Since rover v12 and v14 both have onboard camera v10 that supports mode v11, and both can communicate with lander v9, we can use either rover to take and send images. Similarly, both rovers can sample and send analysis for rocks. We should prioritize using available actions without unnecessary movement.
           
           Let's break down the plan:
           
           **For Images:**
           *   **v17**: Rover v12 can take an image of v17 at #q9 using #y3 and send it from #q1 using #y0. Rover v14 can also take an image of v17 at #q15 using #y7 and send it from #q12 using #y5. We'll use rover v12 since it can directly calibrate at #q9 and then move to #q1 for sending.
           *   **v18**: Rover v12 can take an image of v18 at #q3 using #y1 and send it from #q1 using #y0. Rover v14 can also take an image of v18 at #q10 using #y4 and send it from #q12 using #y5. We'll use rover v12 for consistency.
           *   **v19**: Rover v12 can take an image of v19 at #q5 using #y2 and send it from #q1 using #y0. Rover v14 can also take an image of v19 at #q13 using #y6 and send it from #q12 using #y5. We'll use rover v12.
           
           **For Rock Analysis:**
           *   **v4**: Rover v12 can sample v4 at #q6 and send the analysis from #q1 using #y0. Rover v14 can sample v4 at #q18 and send the analysis from #q12 using #y5. We'll use rover v12.
           *   **v7**: Rover v12 can sample v7 at #q4 and send the analysis from #q1 using #y0. Rover v14 can sample v7 at #q16 and send the analysis from #q12 using #y5. We'll use rover v12.
           
           We have two rovers and the goal involves both receiving images and analyzing rocks. It makes sense to utilize both rovers to parallelize some tasks if possible.
           
           Let's use Rover v12 to handle image tasks for v17, v18, v19 and rock analysis for v4 and v7. Rover v12 starts at v13 and has a communication configuration at #q1. We will need to move v12 to various configurations for imaging and sampling, and then to #q1 for sending.
           
           Since the goal only requires `receivedimage` and `receivedanalysis`, it implies that we don't need to empty the stores after sampling. The `free` predicate is initially true for both rovers, and `full` is set after sampling. Since there are enough stores and only two rocks need to be sampled, we don't need to drop rocks.
           
           Here's a possible sequence of actions using mainly rover v12 for efficiency, as it has many motion options for different configurations.
           
           **Rover v12 Plan:**
           1.  Calibrate at #q9 for v17.
           2.  Take image of v17.
           3.  Move to #q3.
           4.  Calibrate at #q3 for v18.
           5.  Take image of v18.
           6.  Move to #q5.
           7.  Calibrate at #q5 for v19.
           8.  Take image of v19.
           9.  Move to #q6.
           10. Sample rock v4. (Store v16 becomes full for v12)
           11. Move to #q4.
           12. Sample rock v7. (Rover v12 cannot sample v7 if store is full, but the problem doesn't state that sampling needs multiple free stores. Assuming one store is enough for multiple samples. If not, this plan will fail. Assuming the `full` predicate only means one item is in the store, and multiple items can be sampled if a new store becomes available, or the store can hold multiple items). However, the action `sample_rock` changes `free(?v, ?s)` to `full(?v, ?s)` which implies the store is now full and cannot take more. This is a crucial point. If `full` means no more rocks can be sampled, then we have a problem because we need to sample two rocks (v4 and v7) with only one store.
           
           Let's re-evaluate the `sample_rock` and `store` predicates.
           `sample_rock(?v: object, ?q: object, ?r: object, ?s: object)`
           Effects:
             Atom full(?v, ?s)
             Atom analyzed(?v, ?r)
             NegatedAtom free(?v, ?s)
           
           This means after one `sample_rock` action, the store `s` becomes `full` and `free` becomes false. This implies that rover `v` can only hold one rock at a time.
           Since we need to analyze rock `v4` and rock `v7`, and each rover only has one store `v16`, a rover can only sample one rock, then must `drop_rock` to sample another.
           
           So, one rover samples `v4`, drops it, then samples `v7`, and drops it, then sends analyses, or each rover samples one rock and sends its analysis.
           Let's use both rovers for rock analysis and Rover v12 for all images to streamline movement.
           
           **Rover v12 (for images and rock v4):**
           1. Calibrate camera for v17, take image, move to send location.
           2. Calibrate camera for v18, take image, move to send location.
           3. Calibrate camera for v19, take image, move to send location.
           4. Sample rock v4.
           5. Move to a communication point (e.g., #q1 for v12)
           6. Send images of v17, v18, v19.
           7. Send analysis of v4.
           8. Drop rock v4 (to free the store for other operations, although not strictly needed for this specific goal).
           
           **Rover v14 (for rock v7):**
           1. Sample rock v7.
           2. Move to a communication point (e.g., #q12 for v14).
           3. Send analysis of v7.
           4. Drop rock v7.
           
           This division of labor will satisfy the goal efficiently.
           
           Let's confirm all preconditions are met for each step.
           
           **Rover v12 Path:**
           *   Initial: `atconf(v12, v13)`, `free(v12, v16)`
           *   To calibrate/take image of v17: `imagevisible(v12, #q9, #y3, v17)`. Current `atconf(v12, v13)`. Need to move to `#q9`.
               *   `move v12 v13 #t21 #q9`
               *   `calibrate v12 #q9 #y3 v17 v10`
               *   `take_image v12 #q9 #y3 v17 v10 v11`
           *   To calibrate/take image of v18: `imagevisible(v12, #q3, #y1, v18)`. Current `atconf(v12, #q9)`. Need to move to `#q3`.
               *   `move v12 #q9 #t22 #q3`
               *   `calibrate v12 #q3 #y1 v18 v10`
               *   `take_image v12 #q3 #y1 v18 v10 v11`
           *   To calibrate/take image of v19: `imagevisible(v12, #q5, #y2, v19)`. Current `atconf(v12, #q3)`. Need to move to `#q5`.
               *   `move v12 #q3 #t18 #q5`
               *   `calibrate v12 #q5 #y2 v19 v10`
               *   `take_image v12 #q5 #y2 v19 v10 v11`
           *   To sample v4: `above(v12, #q6, v4)`. Current `atconf(v12, #q5)`. Need to move to `#q6`.
               *   `move v12 #q5 #o2 #q6` (assuming `motion(v12, #q5, #o2, #q6)` is valid, which it is from the long list. If not, we have to find an intermediate path)
               *   `sample_rock v12 #q6 v4 v16`
           *   To send all data: `comvisible(v12, #q1, #y0, v9)`. Current `atconf(v12, #q6)`. Need to move to `#q1`.
               *   `move v12 #q6 #o2 #q1`
               *   `send_image v12 #q1 #y0 v9 v17 v11`
               *   `send_image v12 #q1 #y0 v9 v18 v11`
               *   `send_image v12 #q1 #y0 v9 v19 v11`
               *   `send_analysis v12 #q1 #y0 v9 v4`
           
           **Rover v14 Path:**
           *   Initial: `atconf(v14, v15)`, `free(v14, v16)`
           *   To sample v7: `above(v14, #q16, v7)`. Current `atconf(v14, v15)`. Need to move to `#q16`.
               *   `move v14 v15 #t26 #q16`
               *   `sample_rock v14 #q16 v7 v16`
           *   To send analysis of v7: `comvisible(v14, #q12, #y5, v9)`. Current `atconf(v14, #q16)`. Need to move to `#q12`.
               *   `move v14 #q16 #t25 #q12`
               *   `send_analysis v14 #q12 #y5 v9 v7`
           
           The goal `new-axiom@0()` implies:
           *   `atconf(v12, v13)`: Will be at #q1. This is fine, as `atconf` doesn't strictly need to be v13. The axiom is true if at *any* configuration.
           *   `atconf(v14, v15)`: Will be at #q12. Similar to above.
           *   `free(v12, v16)`: Will be `full(v12, v16)` after sampling v4. So we need a `drop_rock` for v12.
           *   `free(v14, v16)`: Will be `full(v14, v16)` after sampling v7. So we need a `drop_rock` for v14.
           *   `receivedimage(v17, v11)`: Achieved.
           *   `receivedimage(v18, v11)`: Achieved.
           *   `receivedimage(v19, v11)`: Achieved.
           *   `type(?stone, v2)`: This is true initially (`type(v4, v2)`, `type(v1, v2)`, `type(v3, v2)`).
           *   `receivedanalysis(?stone)`: `receivedanalysis(v4)` needs to be achieved.
           *   `type(?soil, v6)`: This is true initially (`type(v5, v6)`, `type(v7, v6)`, `type(v8, v6)`).
           *   `receivedanalysis(?soil)`: `receivedanalysis(v7)` needs to be achieved.
           
           So, the plan needs to include `drop_rock` actions for both rovers to satisfy the `free` predicate in the goal axiom.
           
           Revised Plan:
           
           **Rover v12:**
           1.  Move to #q9.
           2.  Calibrate camera.
           3.  Take image of v17.
           4.  Move to #q3.
           5.  Calibrate camera.
           6.  Take image of v18.
           7.  Move to #q5.
           8.  Calibrate camera.
           9.  Take image of v19.
           10. Move to #q6.
           11. Sample rock v4.
           12. Move to #q1 (communication point).
           13. Send image v17.
           14. Send image v18.
           15. Send image v19.
           16. Send analysis v4.
           17. Drop rock from v12's store.
           
           **Rover v14:**
           1.  Move to #q16.
           2.  Sample rock v7.
           3.  Move to #q12 (communication point).
           4.  Send analysis v7.
           5.  Drop rock from v14's store.
           
           This plan fulfills all parts of the axiom.
           The initial `atconf` states for `v12` and `v14` are `v13` and `v15` respectively. The final `atconf` states for the axiom's `v12` and `v14` are implicitly existential `?q` variables, meaning they can be at any configuration. So ending at #q1 and #q12 is fine.
           
           The objects `v17`, `v18`, `v19` are objectives. The rocks are `v1`, `v3`, `v4`, `v5`, `v7`, `v8`.
           The goal axiom's `receivedanalysis(?stone)` and `receivedanalysis(?soil)` refer to objects of type `v2` (stone) and `v6` (soil).
           From initial state: `type(v4, v2)` and `type(v7, v6)`. So we need `receivedanalysis(v4)` and `receivedanalysis(v7)`. This is correctly handled by sampling v4 and v7.
           
           Final check on available motions:
           `move v12 v13 #t21 #q9` - Valid.
           `move v12 #q9 #t22 #q3` - Valid.
           `move v12 #q3 #t18 #q5` - Valid.
           `move v12 #q5 #o2 #q6` - Valid.
           `move v12 #q6 #o2 #q1` - Valid (indirect via `move v12 #q6 #o2 #q1`).
           `move v14 v15 #t26 #q16` - Valid.
           `move v14 #q16 #t25 #q12` - Valid.
           
           All actions should be valid.
           
           --Plan--:
           (move v12 v13 #t21 #q9)
           (calibrate v12 #q9 #y3 v17 v10)
           (take_image v12 #q9 #y3 v17 v10 v11)
           (move v12 #q9 #t22 #q3)
           (calibrate v12 #q3 #y1 v18 v10)
           (take_image v12 #q3 #y1 v18 v10 v11)
           (move v12 #q3 #t18 #q5)
           (calibrate v12 #q5 #y2 v19 v10)
           (take_image v12 #q5 #y2 v19 v10 v11)
           (move v12 #q5 #o2 #q6)
           (sample_rock v12 #q6 v4 v16)
           (move v12 #q6 #o2 #q1)
           (send_image v12 #q1 #y0 v9 v17 v11)
           (send_image v12 #q1 #y0 v9 v18 v11)
           (send_image v12 #q1 #y0 v9 v19 v11)
           (send_analysis v12 #q1 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v14 v15 #t26 #q16)
           (sample_rock v14 #q16 v7 v16)
           (move v14 #q16 #t25 #q12)
           (send_analysis v14 #q12 #y5 v9 v7)
           (drop_rock v14 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the axiom `new-axiom@0()` was not satisfied. Let's re-examine the `new-axiom@0()` definition:
           
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           My previous interpretation was that `atconf(v12, v13)` and `atconf(v14, v15)` could mean being at *any* configuration, as the goal uses `v13` and `v15` as specific configurations for `v12` and `v14` respectively, and these are their initial configurations. However, the axiom explicitly states `atconf(v12, v13)` and `atconf(v14, v15)`. This means that after all actions, `v12` *must* be at `v13` and `v14` *must* be at `v15`. This is a critical detail I missed.
           
           This means that after performing all the necessary tasks (imaging, sampling, sending), each rover must return to its initial configuration.
           
           Let's re-plan with this constraint:
           
           **Rover v12 Path:**
           *   Initial: `atconf(v12, v13)`, `free(v12, v16)`
           *   Tasks:
               1.  Calibrate/take image of v17 (at #q9).
               2.  Calibrate/take image of v18 (at #q3).
               3.  Calibrate/take image of v19 (at #q5).
               4.  Sample rock v4 (at #q6).
               5.  Send all data (at #q1).
               6.  Drop rock v4.
               7.  Return to v13.
           
           **Rover v14 Path:**
           *   Initial: `atconf(v14, v15)`, `free(v14, v16)`
           *   Tasks:
               1.  Sample rock v7 (at #q16).
               2.  Send analysis of v7 (at #q12).
               3.  Drop rock v7.
               4.  Return to v15.
           
           Let's update the movements to ensure rovers return to their initial configurations.
           
           **Rover v12 Revised Plan:**
           1.  (move v12 v13 #t21 #q9) - from v13 to #q9
           2.  (calibrate v12 #q9 #y3 v17 v10)
           3.  (take_image v12 #q9 #y3 v17 v10 v11)
           4.  (move v12 #q9 #t22 #q3) - from #q9 to #q3
           5.  (calibrate v12 #q3 #y1 v18 v10)
           6.  (take_image v12 #q3 #y1 v18 v10 v11)
           7.  (move v12 #q3 #t18 #q5) - from #q3 to #q5
           8.  (calibrate v12 #q5 #y2 v19 v10)
           9.  (take_image v12 #q5 #y2 v19 v10 v11)
           10. (move v12 #q5 #o2 #q6) - from #q5 to #q6
           11. (sample_rock v12 #q6 v4 v16)
           12. (move v12 #q6 #o2 #q1) - from #q6 to #q1
           13. (send_image v12 #q1 #y0 v9 v17 v11)
           14. (send_image v12 #q1 #y0 v9 v18 v11)
           15. (send_image v12 #q1 #y0 v9 v19 v11)
           16. (send_analysis v12 #q1 #y0 v9 v4)
           17. (drop_rock v12 v16)
           18. (move v12 #q1 #t5 v13) - from #q1 back to v13
           
           **Rover v14 Revised Plan:**
           1.  (move v14 v15 #t26 #q16) - from v15 to #q16
           2.  (sample_rock v14 #q16 v7 v16)
           3.  (move v14 #q16 #t25 #q12) - from #q16 to #q12
           4.  (send_analysis v14 #q12 #y5 v9 v7)
           5.  (drop_rock v14 v16)
           6.  (move v14 #q12 #t14 v15) - from #q12 back to v15
           
           This revised plan addresses the strict `atconf` requirements for the goal axiom and `free` requirements, while still completing all tasks. All `move` actions used above are present in the list of valid action instances.
           
           --Plan--:
           (move v12 v13 #t21 #q9)
           (calibrate v12 #q9 #y3 v17 v10)
           (take_image v12 #q9 #y3 v17 v10 v11)
           (move v12 #q9 #t22 #q3)
           (calibrate v12 #q3 #y1 v18 v10)
           (take_image v12 #q3 #y1 v18 v10 v11)
           (move v12 #q3 #t18 #q5)
           (calibrate v12 #q5 #y2 v19 v10)
           (take_image v12 #q5 #y2 v19 v10 v11)
           (move v12 #q5 #o2 #q6)
           (sample_rock v12 #q6 v4 v16)
           (move v12 #q6 #o2 #q1)
           (send_image v12 #q1 #y0 v9 v17 v11)
           (send_image v12 #q1 #y0 v9 v18 v11)
           (send_image v12 #q1 #y0 v9 v19 v11)
           (send_analysis v12 #q1 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q1 #t5 v13)
           (move v14 v15 #t26 #q16)
           (sample_rock v14 #q16 v7 v16)
           (move v14 #q16 #t25 #q12)
           (send_analysis v14 #q12 #y5 v9 v7)
           (drop_rock v14 v16)
           (move v14 #q12 #t14 v15)

