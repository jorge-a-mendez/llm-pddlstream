User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q19: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom atconf(v12, v13)
           Atom conf(v14, v15)
           Atom store(v16)
           Atom rover(v14)
           Atom conf(v12, v13)
           Atom type(v4, v2)
           Atom rock(v3)
           Atom onboard(v10, v14)
           Atom supports(v10, v11)
           Atom camera(v10)
           Atom free(v12, v16)
           Atom objective(v17)
           Atom type(v1, v2)
           Atom lander(v9)
           Atom onboard(v10, v12)
           Atom rock(v5)
           Atom rock(v1)
           Atom rover(v12)
           Atom rock(v7)
           Atom free(v14, v16)
           Atom objective(v19)
           Atom type(v3, v2)
           Atom type(v5, v6)
           Atom type(v7, v6)
           Atom rock(v4)
           Atom type(v8, v6)
           Atom objective(v18)
           Atom rock(v8)
           Atom imagevisible(v14, #q15, #y7, v17)
           Atom imagerange(v14, #q15, v17)
           Atom conf(v14, #q15)
           Atom ray(#y7)
           Atom imagevisible(v14, #q10, #y4, v18)
           Atom imagerange(v14, #q10, v18)
           Atom conf(v14, #q10)
           Atom ray(#y4)
           Atom above(v14, #q17, v8)
           Atom conf(v14, #q17)
           Atom above(v14, #q18, v4)
           Atom conf(v14, #q18)
           Atom imagevisible(v14, #q13, #y6, v19)
           Atom imagerange(v14, #q13, v19)
           Atom conf(v14, #q13)
           Atom ray(#y6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #q16, v7)
           Atom conf(v14, #q16)
           Atom above(v14, #q11, v3)
           Atom conf(v14, #q11)
           Atom imagevisible(v12, #q3, #y1, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom above(v12, #q0, v3)
           Atom conf(v12, #q0)
           Atom above(v12, #q2, v8)
           Atom conf(v12, #q2)
           Atom above(v12, #q4, v7)
           Atom conf(v12, #q4)
           Atom above(v12, #q6, v4)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q5, #y2, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y2)
           Atom imagevisible(v12, #q9, #y3, v17)
           Atom imagerange(v12, #q9, v17)
           Atom conf(v12, #q9)
           Atom ray(#y3)
           Atom above(v14, #q19, v1)
           Atom conf(v14, #q19)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom above(v14, #q14, v5)
           Atom conf(v14, #q14)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom motion(v12, v13, #o2, v13)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom comvisible(v14, #q12, #y5, v9)
           Atom comrange(v14, #q12, v9)
           Atom conf(v14, #q12)
           Atom ray(#y5)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, v15, #t33, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #t14, v15)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #t5, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v14, v15, #t41, #q18)
           Atom motion(v14, #q12, #o2, #q18)
           Atom motion(v14, #q18, #o2, v15)
           Atom motion(v14, #q18, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q18)
           Atom motion(v14, #q18, #t38, #q12)
           Atom motion(v14, #q18, #o2, #q18)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q18, #o2, #q14)
           Atom motion(v14, #q14, #t40, #q12)
           Atom motion(v14, #q12, #t39, #q14)
           Atom motion(v14, #q14, #o2, #q18)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q10, #t10, #q12)
           Atom motion(v14, #q18, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q18)
           Atom motion(v14, #q10, #o2, #q15)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, v15, #t12, #q10)
           Atom motion(v14, #q15, #t31, #q10)
           Atom motion(v14, #q17, #t28, #q12)
           Atom motion(v14, #q10, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q18)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q17, #o2, #q10)
           Atom motion(v14, v15, #t30, #q17)
           Atom motion(v14, #q18, #o2, #q17)
           Atom motion(v12, #q9, #t15, #q1)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, v13, #t21, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q18, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, v15, #t13, #q13)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #t11, #q12)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q18)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q10, #t32, #q13)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q18)
           Atom motion(v14, v15, #t26, #q16)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q16, #t25, #q12)
           Atom motion(v14, #q16, #o2, #q10)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q12, #t35, #q16)
           Atom motion(v14, #q10, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q18, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q9, #t29, #q5)
           Atom motion(v12, #q5, #t7, #q1)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q1, #t37, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #t20, #q9)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q5, #t43, #q6)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q6, #t42, #q1)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #t8, #q12)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q18, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q18)
           Atom motion(v14, #q12, #t9, #q11)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q17, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q1, #t4, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #t34, #q1)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q2, #t23, #q1)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q1, #t3, #q2)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q5, #t24, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, v13, #t17, #q0)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q0, #t16, #q2)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q1, #t2, #q0)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v14, #q19, #o2, #q12)
           Atom motion(v14, #q13, #o2, #q19)
           Atom motion(v14, v15, #o2, #q19)
           Atom motion(v14, #q10, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q19)
           Atom motion(v14, #q15, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q17)
           Atom motion(v14, #q19, #o2, #q15)
           Atom motion(v14, #q19, #o2, v15)
           Atom motion(v14, #q14, #o2, #q19)
           Atom motion(v14, #q18, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q11)
           Atom motion(v14, #q19, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q19)
           Atom motion(v14, #q16, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q13)
           Atom motion(v14, #q19, #o2, #q18)
           Atom motion(v14, #q11, #o2, #q19)
           Atom motion(v14, #q19, #o2, #q14)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q2, #t19, #q3)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #t6, #q1)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q3, #t18, #q5)
           Atom motion(v12, #q9, #t22, #q3)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q1, #t36, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #t27, #q9)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, v13, #t1, #q3)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q3, #o2, #q6)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v3 v16))
           ((sample_rock v12 #q2 v8 v16))
           ((sample_rock v12 #q4 v7 v16))
           ((sample_rock v12 #q6 v4 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v14 #q11 v3 v16))
           ((sample_rock v14 #q14 v5 v16))
           ((sample_rock v14 #q16 v7 v16))
           ((sample_rock v14 #q17 v8 v16))
           ((sample_rock v14 #q18 v4 v16))
           ((sample_rock v14 #q19 v1 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t16 #q2))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #t2 #q0))
           ((move v12 #q1 #t3 #q2))
           ((move v12 #q1 #t36 #q3))
           ((move v12 #q1 #t37 #q5))
           ((move v12 #q1 #t4 #q4))
           ((move v12 #q1 #t5 v13))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t19 #q3))
           ((move v12 #q2 #t23 #q1))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t18 #q5))
           ((move v12 #q3 #t27 #q9))
           ((move v12 #q3 #t6 #q1))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t34 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t20 #q9))
           ((move v12 #q5 #t24 #q0))
           ((move v12 #q5 #t43 #q6))
           ((move v12 #q5 #t7 #q1))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t42 #q1))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t15 #q1))
           ((move v12 #q9 #t22 #q3))
           ((move v12 #q9 #t29 #q5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q3))
           ((move v12 v13 #t17 #q0))
           ((move v12 v13 #t21 #q9))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q15))
           ((move v14 #q10 #o2 #q16))
           ((move v14 #q10 #o2 #q17))
           ((move v14 #q10 #o2 #q18))
           ((move v14 #q10 #o2 #q19))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t10 #q12))
           ((move v14 #q10 #t32 #q13))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q17))
           ((move v14 #q11 #o2 #q18))
           ((move v14 #q11 #o2 #q19))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t8 #q12))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q18))
           ((move v14 #q12 #o2 #q19))
           ((move v14 #q12 #t14 v15))
           ((move v14 #q12 #t35 #q16))
           ((move v14 #q12 #t39 #q14))
           ((move v14 #q12 #t9 #q11))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q14))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q18))
           ((move v14 #q13 #o2 #q19))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t11 #q12))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q18))
           ((move v14 #q14 #o2 #q19))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t40 #q12))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q18))
           ((move v14 #q15 #o2 #q19))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t31 #q10))
           ((move v14 #q16 #o2 #q10))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q18))
           ((move v14 #q16 #o2 #q19))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t25 #q12))
           ((move v14 #q17 #o2 #q10))
           ((move v14 #q17 #o2 #q11))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q18))
           ((move v14 #q17 #o2 #q19))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t28 #q12))
           ((move v14 #q18 #o2 #q10))
           ((move v14 #q18 #o2 #q11))
           ((move v14 #q18 #o2 #q13))
           ((move v14 #q18 #o2 #q14))
           ((move v14 #q18 #o2 #q15))
           ((move v14 #q18 #o2 #q16))
           ((move v14 #q18 #o2 #q17))
           ((move v14 #q18 #o2 #q18))
           ((move v14 #q18 #o2 #q19))
           ((move v14 #q18 #o2 v15))
           ((move v14 #q18 #t38 #q12))
           ((move v14 #q19 #o2 #q10))
           ((move v14 #q19 #o2 #q11))
           ((move v14 #q19 #o2 #q12))
           ((move v14 #q19 #o2 #q13))
           ((move v14 #q19 #o2 #q14))
           ((move v14 #q19 #o2 #q15))
           ((move v14 #q19 #o2 #q16))
           ((move v14 #q19 #o2 #q17))
           ((move v14 #q19 #o2 #q18))
           ((move v14 #q19 #o2 #q19))
           ((move v14 #q19 #o2 v15))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q19))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q10))
           ((move v14 v15 #t13 #q13))
           ((move v14 v15 #t26 #q16))
           ((move v14 v15 #t30 #q17))
           ((move v14 v15 #t33 #q15))
           ((move v14 v15 #t41 #q18))
           ((calibrate v12 #q3 #y1 v18 v10))
           ((calibrate v12 #q5 #y2 v19 v10))
           ((calibrate v12 #q9 #y3 v17 v10))
           ((calibrate v14 #q10 #y4 v18 v10))
           ((calibrate v14 #q13 #y6 v19 v10))
           ((calibrate v14 #q15 #y7 v17 v10))
           ((take_image v12 #q3 #y1 v18 v10 v11))
           ((take_image v12 #q5 #y2 v19 v10 v11))
           ((take_image v12 #q9 #y3 v17 v10 v11))
           ((take_image v14 #q10 #y4 v18 v10 v11))
           ((take_image v14 #q13 #y6 v19 v10 v11))
           ((take_image v14 #q15 #y7 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q12 #y5 v9 v3))
           ((send_analysis v14 #q12 #y5 v9 v5))
           ((send_analysis v14 #q12 #y5 v9 v7))
           ((send_analysis v14 #q12 #y5 v9 v8))
           ((send_analysis v14 #q12 #y5 v9 v4))
           ((send_analysis v14 #q12 #y5 v9 v1))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v14 #q12 #y5 v9 v18 v11))
           ((send_image v14 #q12 #y5 v9 v19 v11))
           ((send_image v14 #q12 #y5 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, v12 and v14, each equipped with a camera v10 that supports mode v11. Both rovers have access to a store v16 and can communicate with lander v9. There are several objectives (v17, v18, v19) to image and several rocks (v1, v3, v4, v5, v7, v8) to analyze. The rocks are of type v2 or v6.
           
           The goal `(new-axiom@0)` is a complex axiom that requires several conditions to be met, including:
           - Rover v12 and v14 being at some configurations.
           - Both rovers having a free store (which they initially do).
           - Images of objectives v17, v18, and v19 in mode v11 being received.
           - Rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8) being analyzed and received analysis.
           
           To achieve this, the plan will involve:
           1. Calibrating the camera for each rover.
           2. Taking images of all three objectives (v17, v18, v19) using one or both rovers.
           3. Sending the images to the lander.
           4. Sampling all rocks using one or both rovers.
           5. Sending the analysis of all rocks to the lander.
           
           I will attempt to use rover v12 to handle the imaging and analysis tasks, as it is already at a communication configuration (#q1) and has multiple rock sampling and image taking configurations in its vicinity. If its store gets full, it can drop the rock and continue.
           
           Let's break down the plan for rover v12:
           - **Calibrate and Image Objectives**: Rover v12 needs to calibrate its camera and take images of v17, v18, v19.
           - **Sample and Analyze Rocks**: Rover v12 needs to sample all rocks (v1, v3, v4, v5, v7, v8) and send their analysis. Since rocks have types v2 and v6, getting all rocks analyzed satisfies the type requirements of the goal.
           - **Send Images and Analysis**: After imaging and sampling, v12 will move to a communication position (if not already there) and send all collected images and analysis.
           
           Given that `free(v12, v16)` and `free(v14, v16)` are true initially, and we need to analyze 6 rocks, each rover can hold one sample at a time. The goal requires `receivedanalysis` for rocks of type v2 and v6. The rocks v1, v3, v4 are type v2, and v5, v7, v8 are type v6.
           
           I will use rover v12 for most of the tasks, as it is initially at `v13` and can communicate at `#q1`. I will strategically pick sample and image locations that are easily reachable for v12.
           
           Here's a detailed breakdown for rover v12:
           1. **Calibrate Camera**: Calibrate camera v10 for rover v12. I'll pick one of the imagevisible configurations, e.g., `#q3` for `v18`.
           2. **Take Images**: Take images of `v18`, `v19`, `v17`.
           3. **Sample Rocks**: Sample all 6 rocks. This will require sampling, moving to communication, sending analysis, potentially dropping the rock, then moving to another sample location.
               - Sample `v3` (type v2) at `#q0`.
               - Send analysis of `v3`.
               - Drop `v3`.
               - Sample `v4` (type v2) at `#q6`.
               - Send analysis of `v4`.
               - Drop `v4`.
               - Sample `v1` (type v2) at `#q7`.
               - Send analysis of `v1`.
               - Drop `v1`.
               - Sample `v8` (type v6) at `#q2`.
               - Send analysis of `v8`.
               - Drop `v8`.
               - Sample `v7` (type v6) at `#q4`.
               - Send analysis of `v7`.
               - Drop `v7`.
               - Sample `v5` (type v6) at `#q8`.
               - Send analysis of `v5`.
               - Drop `v5`.
           4. **Send Images**: Send all recorded images.
           
           I will focus on using rover v12 because it has multiple motion and sensing capabilities around its current location.
           
           The initial state of `atconf(v12, v13)` and `comvisible(v12, #q1, #y0, v9)` means rover v12 needs to move to `#q1` to send data.
           
           Let's trace the path for v12:
           - Start at v13.
           - Move to #q3 to calibrate and take image of v18.
           - Move to #q5 to take image of v19.
           - Move to #q9 to take image of v17.
           - Move to #q0 to sample v3.
           - Move to #q1 to send analysis for v3.
           - Drop v3.
           - Move to #q2 to sample v8.
           - Move to #q1 to send analysis for v8.
           - Drop v8.
           - Move to #q4 to sample v7.
           - Move to #q1 to send analysis for v7.
           - Drop v7.
           - Move to #q6 to sample v4.
           - Move to #q1 to send analysis for v4.
           - Drop v4.
           - Move to #q7 to sample v1.
           - Move to #q1 to send analysis for v1.
           - Drop v1.
           - Move to #q8 to sample v5.
           - Move to #q1 to send analysis for v5.
           - Drop v5.
           - Send all images from #q1.
           
           This plan aims to satisfy all conditions of the goal axiom by utilizing rover v12's capabilities for both imaging and sampling, with intermittent trips to the communication point to send data and drop samples.
           
           --Plan--:
           (move v12 v13 #t1 #q3)
           (calibrate v12 #q3 #y1 v18 v10)
           (take_image v12 #q3 #y1 v18 v10 v11)
           (move v12 #q3 #t18 #q5)
           (take_image v12 #q5 #y2 v19 v10 v11)
           (move v12 #q5 #t20 #q9)
           (take_image v12 #q9 #y3 v17 v10 v11)
           (move v12 #q9 #t29 #q5)
           (move v12 #q5 #t24 #q0)
           (sample_rock v12 #q0 v3 v16)
           (move v12 #q0 #t0 #q1)
           (send_analysis v12 #q1 #y0 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q1 #t3 #q2)
           (sample_rock v12 #q2 v8 v16)
           (move v12 #q2 #t23 #q1)
           (send_analysis v12 #q1 #y0 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q1 #t4 #q4)
           (sample_rock v12 #q4 v7 v16)
           (move v12 #q4 #t34 #q1)
           (send_analysis v12 #q1 #y0 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q6)
           (sample_rock v12 #q6 v4 v16)
           (move v12 #q6 #t42 #q1)
           (send_analysis v12 #q1 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q7)
           (sample_rock v12 #q7 v1 v16)
           (move v12 #q7 #o2 #q1)
           (send_analysis v12 #q1 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q8)
           (sample_rock v12 #q8 v5 v16)
           (move v12 #q8 #o2 #q1)
           (send_analysis v12 #q1 #y0 v9 v5)
           (drop_rock v12 v16)
           (send_image v12 #q1 #y0 v9 v18 v11)
           (send_image v12 #q1 #y0 v9 v19 v11)
           (send_image v12 #q1 #y0 v9 v17 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. This axiom requires:
           - `atconf(v12, v13)` and `atconf(v14, v15)`
           - `free(v12, v16)` and `free(v14, v16)`
           - `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`
           - `receivedanalysis` for rocks of type `v2` (v1, v3, v4)
           - `receivedanalysis` for rocks of type `v6` (v5, v7, v8)
           
           My previous plan focused solely on rover v12, and at the end of the plan, rover v12 was at `#q1`, not `v13`. Also, I did not ensure that `free(v14, v16)` remained true, although it was initially. The main issue was not bringing rover v12 back to `v13` and ensuring `atconf(v14, v15)` which was true initially.
           
           Let's refine the plan to address these:
           1.  **Ensure Rovers are at their initial configurations**: Both rovers `v12` and `v14` must end up at their initial configurations, `v13` and `v15` respectively, if they move. This means I need to plan moves to return them to these positions.
           2.  **Ensure both stores are free**: `free(v12, v16)` and `free(v14, v16)` must be true at the end. My previous plan correctly `drop_rock` after each sample, ensuring `free(v12, v16)`. Since `v14` is not used for sampling in the proposed plan, `free(v14, v16)` will remain true.
           3.  **Image and Send**: Take and send images for `v17`, `v18`, `v19`.
           4.  **Analyze and Send**: Sample and send analysis for all rocks of type `v2` (`v1`, `v3`, `v4`) and `v6` (`v5`, `v7`, `v8`).
           
           I will modify the plan to ensure `v12` returns to `v13` at the end. Rover `v14` remains at `v15` throughout this plan, so `atconf(v14, v15)` will still hold, and `free(v14, v16)` will also hold.
           
           Revised plan for v12:
           - Move to a configuration for imaging.
           - Calibrate and take images for `v17`, `v18`, `v19`.
           - Move to a configuration for sampling.
           - Sample all rocks, sending analysis and dropping rocks in between.
           - Move to a communication configuration to send all images.
           - Finally, move back to `v13`.
           
           It's crucial to check the available `motion` actions to ensure valid paths exist for returning to `v13`.
           
           Let's trace again, paying attention to the final configuration of v12:
           - Start at v13.
           - Move to #q3 to calibrate and take image of v18.
           - Move to #q5 to take image of v19.
           - Move to #q9 to take image of v17.
           - Move to #q0 to sample v3.
           - Move to #q1 to send analysis for v3.
           - Drop v3.
           - Move to #q2 to sample v8.
           - Move to #q1 to send analysis for v8.
           - Drop v8.
           - Move to #q4 to sample v7.
           - Move to #q1 to send analysis for v7.
           - Drop v7.
           - Move to #q6 to sample v4.
           - Move to #q1 to send analysis for v4.
           - Drop v4.
           - Move to #q1 #o2 #q7 (this is not allowed, no direct motion from #q1 to #q7 with #o2)
               - Need to find a path to #q7 or from #q1 via another point.
               - Path from #q1 to #q7: `(move v12 #q1 #o2 #q7)` is not in the list of valid actions.
               - From #q1, I can move to v13 directly `(move v12 #q1 #t5 v13)`.
               - From v13, I can go to various sampling positions.
           
           Let's re-strategize with the movement constraints:
           It's easier to group sampling actions between communication points.
           
           Revised plan:
           1.  **Calibrate and Image** (Rover v12)
               *   `v13` -> `#q3` (image v18)
               *   `#q3` -> `#q5` (image v19)
               *   `#q5` -> `#q9` (image v17)
           2.  **Sample Type 2 Rocks** (v1, v3, v4) (Rover v12)
               *   `#q9` -> `#q0` (sample v3)
               *   `#q0` -> `#q1` (send analysis v3) -> drop rock
               *   `#q1` -> `#q6` (sample v4)
               *   `#q6` -> `#q1` (send analysis v4) -> drop rock
               *   `#q1` -> `#q7` (sample v1) - Need path `(move v12 #q1 #o2 #q7)` not found.
                   *   Alternative: `#q1` -> `v13` -> `#q7`.
                   *   From #q1: `(move v12 #q1 #t5 v13)`
                   *   From v13: `(move v12 v13 #o2 #q7)`
           3.  **Sample Type 6 Rocks** (v5, v7, v8) (Rover v12)
               *   `#q7` -> `#q1` (send analysis v1) -> drop rock
               *   `#q1` -> `#q2` (sample v8)
               *   `#q2` -> `#q1` (send analysis v8) -> drop rock
               *   `#q1` -> `#q4` (sample v7)
               *   `#q4` -> `#q1` (send analysis v7) -> drop rock
               *   `#q1` -> `#q8` (sample v5)
               *   `#q8` -> `#q1` (send analysis v5) -> drop rock
           4.  **Send Images** (Rover v12)
               *   Send all images from `#q1`.
           5.  **Return to Initial Configuration** (Rover v12)
               *   `#q1` -> `v13`.
           
           This sequence should work, ensuring all preconditions are met and the final state matches the goal.
           
           --Plan--:
           (move v12 v13 #t1 #q3)
           (calibrate v12 #q3 #y1 v18 v10)
           (take_image v12 #q3 #y1 v18 v10 v11)
           (move v12 #q3 #t18 #q5)
           (take_image v12 #q5 #y2 v19 v10 v11)
           (move v12 #q5 #t20 #q9)
           (take_image v12 #q9 #y3 v17 v10 v11)
           (move v12 #q9 #t29 #q5)
           (move v12 #q5 #t24 #q0)
           (sample_rock v12 #q0 v3 v16)
           (move v12 #q0 #t0 #q1)
           (send_analysis v12 #q1 #y0 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q6)
           (sample_rock v12 #q6 v4 v16)
           (move v12 #q6 #t42 #q1)
           (send_analysis v12 #q1 #y0 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q1 #t5 v13)
           (move v12 v13 #o2 #q7)
           (sample_rock v12 #q7 v1 v16)
           (move v12 #q7 #o2 #q1)
           (send_analysis v12 #q1 #y0 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q1 #t3 #q2)
           (sample_rock v12 #q2 v8 v16)
           (move v12 #q2 #t23 #q1)
           (send_analysis v12 #q1 #y0 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q1 #t4 #q4)
           (sample_rock v12 #q4 v7 v16)
           (move v12 #q4 #t34 #q1)
           (send_analysis v12 #q1 #y0 v9 v7)
           (drop_rock v12 v16)
           (move v12 #q1 #o2 #q8)
           (sample_rock v12 #q8 v5 v16)
           (move v12 #q8 #o2 #q1)
           (send_analysis v12 #q1 #y0 v9 v5)
           (drop_rock v12 v16)
           (send_image v12 #q1 #y0 v9 v18 v11)
           (send_image v12 #q1 #y0 v9 v19 v11)
           (send_image v12 #q1 #y0 v9 v17 v11)
           (move v12 #q1 #t5 v13)

