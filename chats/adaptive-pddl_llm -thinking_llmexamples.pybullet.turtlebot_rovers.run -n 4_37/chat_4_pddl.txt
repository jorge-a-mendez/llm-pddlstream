User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v14, v15)
           Atom type(v1, v2)
           Atom free(v12, v16)
           Atom store(v16)
           Atom onboard(v10, v12)
           Atom lander(v9)
           Atom objective(v17)
           Atom type(v5, v6)
           Atom rock(v4)
           Atom type(v3, v2)
           Atom camera(v10)
           Atom rock(v5)
           Atom conf(v12, v13)
           Atom atconf(v12, v13)
           Atom rover(v12)
           Atom type(v8, v6)
           Atom rock(v8)
           Atom rock(v3)
           Atom objective(v19)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom rover(v14)
           Atom objective(v20)
           Atom type(v4, v2)
           Atom rock(v7)
           Atom objective(v18)
           Atom supports(v10, v11)
           Atom type(v7, v6)
           Atom onboard(v10, v14)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom imagevisible(v14, #q5, #y3, v20)
           Atom imagerange(v14, #q5, v20)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q4, #y2, v18)
           Atom imagerange(v14, #q4, v18)
           Atom conf(v14, #q4)
           Atom ray(#y2)
           Atom comvisible(v14, #q2, #y0, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y0)
           Atom above(v14, #q1, v1)
           Atom conf(v14, #q1)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q3, #y1, v19)
           Atom imagerange(v14, #q3, v19)
           Atom conf(v14, #q3)
           Atom ray(#y1)
           Atom above(v14, #o5, v3)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom above(v14, #q7, v4)
           Atom conf(v14, #q7)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #q6, #y4, v17)
           Atom imagerange(v14, #q6, v17)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom above(v12, #q9, v5)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom comvisible(v12, #q8, #y5, v9)
           Atom comrange(v12, #q8, v9)
           Atom conf(v12, #q8)
           Atom ray(#y5)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #q10, v1)
           Atom conf(v12, #q10)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #t7, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q2, #t1, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #t3, #q2)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #t17, #q2)
           Atom motion(v14, v15, #t13, #q6)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v12, v13, #t24, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q6, #t22, #q4)
           Atom motion(v14, v15, #t9, #q4)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q4, #t5, #q2)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q2, #t12, #q4)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q0, #t2, #q2)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q2, #t0, #q0)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v12, #q8, #t18, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v14, #q2, #t15, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, v15, #t10, #q5)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q5, #t6, #q2)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v12, v13, #t23, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #t21, #q8)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q2, #t11, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q7, #t14, #q2)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q3, #t4, #q2)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q2, #t16, #q3)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #t19, #q5)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q4, #t20, #q3)
           Atom motion(v14, v15, #t8, #q3)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o3, #o2, #q8)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #q8, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #q10, #o2, #o3)
           Atom motion(v12, #q9, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q9)
           Atom motion(v12, #o3, #o2, #q10)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q10 v1 v16))
           ((sample_rock v12 #q9 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((sample_rock v14 #q1 v1 v16))
           ((sample_rock v14 #q7 v4 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q10))
           ((move v12 #o3 #o2 #q8))
           ((move v12 #o3 #o2 #q9))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o3))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q8 #o2 #o3))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #t18 v13))
           ((move v12 #q9 #o2 #o3))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t21 #q8))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t23 #q9))
           ((move v12 v13 #t24 #q10))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t2 #q2))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t3 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #t0 #q0))
           ((move v14 #q2 #t1 #q1))
           ((move v14 #q2 #t11 #q7))
           ((move v14 #q2 #t12 #q4))
           ((move v14 #q2 #t15 #q5))
           ((move v14 #q2 #t16 #q3))
           ((move v14 #q2 #t7 v15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t19 #q5))
           ((move v14 #q3 #t4 #q2))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t20 #q3))
           ((move v14 #q4 #t5 #q2))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t6 #q2))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t17 #q2))
           ((move v14 #q6 #t22 #q4))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t14 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q5))
           ((move v14 v15 #t13 #q6))
           ((move v14 v15 #t8 #q3))
           ((move v14 v15 #t9 #q4))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q3 #y1 v19 v10))
           ((calibrate v14 #q4 #y2 v18 v10))
           ((calibrate v14 #q5 #y3 v20 v10))
           ((calibrate v14 #q6 #y4 v17 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q3 #y1 v19 v10 v11))
           ((take_image v14 #q4 #y2 v18 v10 v11))
           ((take_image v14 #q5 #y3 v20 v10 v11))
           ((take_image v14 #q6 #y4 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q8 #y5 v9 v3))
           ((send_analysis v12 #q8 #y5 v9 v4))
           ((send_analysis v12 #q8 #y5 v9 v7))
           ((send_analysis v12 #q8 #y5 v9 v8))
           ((send_analysis v12 #q8 #y5 v9 v1))
           ((send_analysis v12 #q8 #y5 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y0 v9 v3))
           ((send_analysis v14 #q2 #y0 v9 v7))
           ((send_analysis v14 #q2 #y0 v9 v8))
           ((send_analysis v14 #q2 #y0 v9 v5))
           ((send_analysis v14 #q2 #y0 v9 v1))
           ((send_analysis v14 #q2 #y0 v9 v4))
           ((send_image v12 #q8 #y5 v9 v17 v11))
           ((send_image v12 #q8 #y5 v9 v18 v11))
           ((send_image v12 #q8 #y5 v9 v19 v11))
           ((send_image v12 #q8 #y5 v9 v20 v11))
           ((send_image v14 #q2 #y0 v9 v19 v11))
           ((send_image v14 #q2 #y0 v9 v18 v11))
           ((send_image v14 #q2 #y0 v9 v20 v11))
           ((send_image v14 #q2 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Plan Synthesis: Achieving `new-axiom@0()` in the `rovers` Domain**
           
           Okay, so I've been tasked with generating a plan to fulfill the `new-axiom@0()` goal in the `rovers` domain. This looks like a conjunction of conditions.  Breaking it down, it looks like I need to make sure several things are true: the initial configuration is met; a series of images must be received, and several analyses need to have occurred.  Based on the initial state, the first few conditions are already satisfied. That simplifies things, for now.
           
           The tricky part here is achieving those `receivedimage` and `receivedanalysis` conditions. I've noted that `send_image` and `send_analysis` are the key actions here, which means I'll need to figure out how to satisfy their preconditions first.
           
           For `send_image`, I need to use the `take_image` action and move my rovers to visibility locations, calibrate the camera, take the image and then move it to the base. It looks like I have two rovers: `v12` and `v14`.  I will use `v14` for imaging, and `v12` for analysis to run both processes in parallel. The plan is the following:
           
           **Image Plan (using v14):**
           
           1.  **(move v14 v15 #t13 #q6)**
           2.  **(calibrate v14 #q6 #y4 v17 v10)**
           3.  **(take_image v14 #q6 #y4 v17 v10 v11)**
           4.  **(move v14 #q6 #t17 #q2)**
           5.  **(send_image v14 #q2 #y0 v9 v17 v11)**
           6.  **(move v14 #q2 #t12 #q4)**
           7.  **(calibrate v14 #q4 #y2 v18 v10)**
           8.  **(take_image v14 #q4 #y2 v18 v10 v11)**
           9.  **(move v14 #q4 #t5 #q2)**
           10. **(send_image v14 #q2 #y0 v9 v18 v11)**
           11. **(move v14 #q2 #t16 #q3)**
           12. **(calibrate v14 #q3 #y1 v19 v10)**
           13. **(take_image v14 #q3 #y1 v19 v10 v11)**
           14. **(move v14 #q3 #t4 #q2)**
           15. **(send_image v14 #q2 #y0 v9 v19 v11)**
           16. **(move v14 #q2 #t15 #q5)**
           17. **(calibrate v14 #q5 #y3 v20 v10)**
           18. **(take_image v14 #q5 #y3 v20 v10 v11)**
           19. **(move v14 #q5 #t6 #q2)**
           20. **(send_image v14 #q2 #y0 v9 v20 v11)**
           
           Rover `v14` then needs a final move.
           
           21. **(move v14 #q2 #t7 v15)**
           
           Now for the `analysis` plan, which is using rover `v12`. I need to sample, analyze, and communicate the data.
           
           **Analysis Plan (using v12):**
           
           1.  **(move v12 v13 #o2 #o5)**
           2.  **(sample_rock v12 #o5 v3 v16)**
           3.  **(move v12 #o5 #o2 #q8)**
           4.  **(send_analysis v12 #q8 #y5 v9 v3)**
           5.  **(drop_rock v12 v16)**
           6.  **(move v12 #q8 #o2 #q9)**
           7.  **(sample_rock v12 #q9 v5 v16)**
           8.  **(move v12 #q9 #t21 #q8)**
           9.  **(send_analysis v12 #q8 #y5 v9 v5)**
           10. **(drop_rock v12 v16)**
           11. **(move
)

Model:     **Plan Synthesis: Achieving `new-axiom@0()` in the `rovers` Domain**
           
           Okay, so I've been tasked with generating a plan to fulfill the `new-axiom@0()` goal in the `rovers` domain. This looks like a conjunction of conditions.  Breaking it down, it looks like I need to make sure several things are true: the initial configuration is met; a series of images must be received, and several analyses need to have occurred.  Based on the initial state, the first few conditions are already satisfied. That simplifies things, for now.
           
           The tricky part here is achieving those `receivedimage` and `receivedanalysis` conditions. I've noted that `send_image` and `send_analysis` are the key actions here, which means I'll need to figure out how to satisfy their preconditions first.
           
           For `send_image`, I need to use the `take_image` action and move my rovers to visibility locations, calibrate the camera, take the image and then move it to the base. It looks like I have two rovers: `v12` and `v14`.  I will use `v14` for imaging, and `v12` for analysis to run both processes in parallel. The plan is the following:
           
           **Image Plan (using v14):**
           
           1.  **(move v14 v15 #t13 #q6)**
           2.  **(calibrate v14 #q6 #y4 v17 v10)**
           3.  **(take_image v14 #q6 #y4 v17 v10 v11)**
           4.  **(move v14 #q6 #t17 #q2)**
           5.  **(send_image v14 #q2 #y0 v9 v17 v11)**
           6.  **(move v14 #q2 #t12 #q4)**
           7.  **(calibrate v14 #q4 #y2 v18 v10)**
           8.  **(take_image v14 #q4 #y2 v18 v10 v11)**
           9.  **(move v14 #q4 #t5 #q2)**
           10. **(send_image v14 #q2 #y0 v9 v18 v11)**
           11. **(move v14 #q2 #t16 #q3)**
           12. **(calibrate v14 #q3 #y1 v19 v10)**
           13. **(take_image v14 #q3 #y1 v19 v10 v11)**
           14. **(move v14 #q3 #t4 #q2)**
           15. **(send_image v14 #q2 #y0 v9 v19 v11)**
           16. **(move v14 #q2 #t15 #q5)**
           17. **(calibrate v14 #q5 #y3 v20 v10)**
           18. **(take_image v14 #q5 #y3 v20 v10 v11)**
           19. **(move v14 #q5 #t6 #q2)**
           20. **(send_image v14 #q2 #y0 v9 v20 v11)**
           
           Rover `v14` then needs a final move.
           
           21. **(move v14 #q2 #t7 v15)**
           
           Now for the `analysis` plan, which is using rover `v12`. I need to sample, analyze, and communicate the data.
           
           **Analysis Plan (using v12):**
           
           1.  **(move v12 v13 #o2 #o5)**
           2.  **(sample_rock v12 #o5 v3 v16)**
           3.  **(move v12 #o5 #o2 #q8)**
           4.  **(send_analysis v12 #q8 #y5 v9 v3)**
           5.  **(drop_rock v12 v16)**
           6.  **(move v12 #q8 #o2 #q9)**
           7.  **(sample_rock v12 #q9 v5 v16)**
           8.  **(move v12 #q9 #t21 #q8)**
           9.  **(send_analysis v12 #q8 #y5 v9 v5)**
           10. **(drop_rock v12 v16)**
           11. **(move

