User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #q6: object
           #q8: object
           #q9: object
           #t10: object
           #t13: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t6: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v14, v10)
           Atom atpose(v8, v9)
           Atom ~test-cfree-pose-pose-negative(v14, v25, v8, v21)
           Atom stackable(v18, v20)
           Atom supported(v16, v17, v11)
           Atom pose(v16, v17)
           Atom pose(v12, v13)
           Atom supported(v18, v19, v11)
           Atom ataconf(v4, v5)
           Atom atpose(v16, v17)
           Atom graspable(v14)
           Atom arm(v6)
           Atom stackable(v8, v10)
           Atom atbconf(v3)
           Atom atpose(v12, v13)
           Atom graspable(v12)
           Atom graspable(v16)
           Atom arm(v4)
           Atom stackable(v12, v20)
           Atom supported(v8, v9, v11)
           Atom bconf(v3)
           Atom graspable(v8)
           Atom supported(v12, v13, v11)
           Atom pose(v8, v9)
           Atom handempty(v6)
           Atom stackable(v14, v20)
           Atom atpose(v18, v19)
           Atom stackable(v8, v20)
           Atom stackable(v18, v10)
           Atom graspable(v18)
           Atom aconf(v6, v7)
           Atom stackable(v16, v10)
           Atom handempty(v4)
           Atom aconf(v4, v5)
           Atom controllable(v4)
           Atom stackable(v12, v10)
           Atom pose(v14, v15)
           Atom ~test-cfree-pose-pose-negative(v14, v23, v8, v21)
           Atom ~test-cfree-pose-pose-negative(v12, v22, v8, v26)
           Atom atpose(v14, v15)
           Atom stackable(v16, v20)
           Atom ataconf(v6, v7)
           Atom canmove()
           Atom pose(v18, v19)
           Atom supported(v14, v15, v11)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom pose(v16, v24)
           Atom supported(v16, v24, v20)
           Atom pose(v8, v21)
           Atom supported(v8, v21, v20)
           Atom pose(v8, v26)
           Atom supported(v8, v26, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v14, v23)
           Atom supported(v14, v23, v20)
           Atom pose(v14, v25)
           Atom supported(v14, v25, v20)
           Atom grasp(v18, #g1)
           Atom grasp(v14, #g0)
           Atom grasp(v8, #g4)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v18, v27)
           Atom supported(v18, v27, v20)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, v22)
           Atom supported(v12, v22, v20)
           Atom grasp(v16, #g2)
           Atom grasp(v12, #g3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v18, v27, #g1, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v18, v19, #g1, #q3, #t3)
           Atom kin(v4, v8, v21, #g4, #o3, #o4)
           Atom kin(v4, v8, v26, #g4, #o3, #o4)
           Atom bconf(#q6)
           Atom atraj(#t6)
           Atom kin(v4, v8, v9, #g4, #q6, #t6)
           Atom kin(v4, v14, v25, #g0, #o3, #o4)
           Atom kin(v4, v14, v23, #g0, #o3, #o4)
           Atom bconf(#q8)
           Atom atraj(#t15)
           Atom kin(v4, v14, v15, #g0, #q8, #t15)
           Atom kin(v4, v16, v24, #g2, #o3, #o4)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v16, v17, #g2, #q2, #t2)
           Atom bconf(#q9)
           Atom atraj(#t16)
           Atom kin(v4, v12, v13, #g3, #q9, #t16)
           Atom kin(v4, v12, v22, #g3, #o3, #o4)
           Atom basemotion(#q6, #o0, v3)
           Atom btraj(#t13)
           Atom basemotion(v3, #t13, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q6, #o0, #q8)
           Atom basemotion(#q8, #o0, #q8)
           Atom basemotion(#q8, #o0, v3)
           Atom basemotion(v3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q6)
           Atom basemotion(#q2, #o0, #q8)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q8, #o0, #q2)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q6, #o0, #q2)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q3)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q8)
           Atom basemotion(#q8, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q9, #o0, #q6)
           Atom basemotion(#q9, #o0, #q8)
           Atom basemotion(#q8, #o0, #q9)
           Atom basemotion(#q6, #o0, #q9)
           Atom kin(v4, v8, #o2, #g4, #o3, #o4)
           Atom kin(v4, v12, #o2, #g3, #o3, #o4)
           Atom kin(v4, v18, #o2, #g1, #o3, #o4)
           Atom kin(v4, v16, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q8, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q8)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q8 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q8 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q8 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q8 #o0))
           ((move_base #q6 #q9 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q8 #o3 #o0))
           ((move_base #q8 #q2 #o0))
           ((move_base #q8 #q3 #o0))
           ((move_base #q8 #q6 #o0))
           ((move_base #q8 #q8 #o0))
           ((move_base #q8 #q9 #o0))
           ((move_base #q8 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q6 #o0))
           ((move_base #q9 #q8 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q8 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q3 #t10))
           ((move_base v3 #q6 #t13))
           ((move_base v3 #q2 #t9))
           ((pick v4 v12 #o2 #g3 #o3 #o4))
           ((place v4 v12 #o2 #g3 #o3 #o4))
           ((pick v4 v12 v13 #g3 #q9 #t16))
           ((place v4 v12 v13 #g3 #q9 #t16))
           ((pick v4 v12 v22 #g3 #o3 #o4))
           ((place v4 v12 v22 #g3 #o3 #o4))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 v15 #g0 #q8 #t15))
           ((place v4 v14 v15 #g0 #q8 #t15))
           ((pick v4 v14 v23 #g0 #o3 #o4))
           ((place v4 v14 v23 #g0 #o3 #o4))
           ((pick v4 v14 v25 #g0 #o3 #o4))
           ((place v4 v14 v25 #g0 #o3 #o4))
           ((pick v4 v16 #o2 #g2 #o3 #o4))
           ((place v4 v16 #o2 #g2 #o3 #o4))
           ((pick v4 v16 v17 #g2 #q2 #t2))
           ((place v4 v16 v17 #g2 #q2 #t2))
           ((pick v4 v16 v24 #g2 #o3 #o4))
           ((place v4 v16 v24 #g2 #o3 #o4))
           ((pick v4 v18 #o2 #g1 #o3 #o4))
           ((place v4 v18 #o2 #g1 #o3 #o4))
           ((pick v4 v18 v19 #g1 #q3 #t3))
           ((place v4 v18 v19 #g1 #q3 #t3))
           ((pick v4 v18 v27 #g1 #o3 #o4))
           ((place v4 v18 v27 #g1 #o3 #o4))
           ((pick v4 v8 #o2 #g4 #o3 #o4))
           ((place v4 v8 #o2 #g4 #o3 #o4))
           ((pick v4 v8 v21 #g4 #o3 #o4))
           ((place v4 v8 v21 #g4 #o3 #o4))
           ((pick v4 v8 v26 #g4 #o3 #o4))
           ((place v4 v8 v26 #g4 #o3 #o4))
           ((pick v4 v8 v9 #g4 #q6 #t6))
           ((place v4 v8 v9 #g4 #q6 #t6))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The robot needs to move five objects (v8, v12, v14, v16, v18) from their current locations to be supported by object v20. The current state shows that all these objects are initially supported by v11. The robot arm v4 is currently empty.
           
           The plan will involve a sequence of pick and place actions for each object. For each object:
           1. Move the base to the object's current location (if not already there).
           2. Pick up the object using arm v4.
           3. Move the base to a location where it can place the object on v20.
           4. Place the object on v20.
           
           Let's break down the movements for each object:
           
           *   **Object v8:** Currently at `v9` supported by `v11`. Need to move to a pose on `v20`. The available kin for v8 are `kin(v4, v8, v9, #g4, #q6, #t6)`, `kin(v4, v8, v21, #g4, #o3, #o4)`, `kin(v4, v8, v26, #g4, #o3, #o4)`, `kin(v4, v8, #o2, #g4, #o3, #o4)`. We can use `v21`, `v26` or `#o2` as a target pose on `v20`. `pose(v8, v21)` with `supported(v8, v21, v20)` is available. The base configuration for picking v8 at v9 is `q6`. The base configuration for placing v8 at v21 is `o3` (from `kin(v4, v8, v21, #g4, #o3, #o4)`).
           
           *   **Object v12:** Currently at `v13` supported by `v11`. Need to move to a pose on `v20`. The available kin for v12 are `kin(v4, v12, v13, #g3, #q9, #t16)`, `kin(v4, v12, v22, #g3, #o3, #o4)`, `kin(v4, v12, #o2, #g3, #o3, #o4)`. We can use `v22` or `#o2` as a target pose on `v20`. `pose(v12, v22)` with `supported(v12, v22, v20)` is available. The base configuration for picking v12 at v13 is `q9`. The base configuration for placing v12 at v22 is `o3`.
           
           *   **Object v14:** Currently at `v15` supported by `v11`. Need to move to a pose on `v20`. The available kin for v14 are `kin(v4, v14, v15, #g0, #q8, #t15)`, `kin(v4, v14, v23, #g0, #o3, #o4)`, `kin(v4, v14, v25, #g0, #o3, #o4)`, `kin(v4, v14, #o2, #g0, #o3, #o4)`. We can use `v23`, `v25` or `#o2` as a target pose on `v20`. `pose(v14, v23)` with `supported(v14, v23, v20)` is available. The base configuration for picking v14 at v15 is `q8`. The base configuration for placing v14 at v23 is `o3`.
           
           *   **Object v16:** Currently at `v17` supported by `v11`. Need to move to a pose on `v20`. The available kin for v16 are `kin(v4, v16, v17, #g2, #q2, #t2)`, `kin(v4, v16, v24, #g2, #o3, #o4)`, `kin(v4, v16, #o2, #g2, #o3, #o4)`. We can use `v24` or `#o2` as a target pose on `v20`. `pose(v16, v24)` with `supported(v16, v24, v20)` is available. The base configuration for picking v16 at v17 is `q2`. The base configuration for placing v16 at v24 is `o3`.
           
           *   **Object v18:** Currently at `v19` supported by `v11`. Need to move to a pose on `v20`. The available kin for v18 are `kin(v4, v18, v19, #g1, #q3, #t3)`, `kin(v4, v18, v27, #g1, #o3, #o4)`, `kin(v4, v18, #o2, #g1, #o3, #o4)`. We can use `v27` or `#o2` as a target pose on `v20`. `pose(v18, v27)` with `supported(v18, v27, v20)` is available. The base configuration for picking v18 at v19 is `q3`. The base configuration for placing v18 at v27 is `o3`.
           
           The initial base configuration is `v3`. The robot will need to move to the base configuration associated with each pick action, then to `o3` for each place action. Since all place actions share the same base configuration `o3`, we only need to move the base there once and can perform all place actions from that position.
           
           Let's plan the movements:
           
           1.  **Move v8:**
               *   Move base from `v3` to `q6` to pick v8.
               *   Pick v8.
               *   Move base from `q6` to `o3` to place v8.
               *   Place v8 at `v21` on `v20`.
           
           2.  **Move v12:**
               *   Move base from `o3` to `q9` to pick v12.
               *   Pick v12.
               *   Move base from `q9` to `o3` to place v12.
               *   Place v12 at `v22` on `v20`.
           
           3.  **Move v14:**
               *   Move base from `o3` to `q8` to pick v14.
               *   Pick v14.
               *   Move base from `q8` to `o3` to place v14.
               *   Place v14 at `v23` on `v20`.
           
           4.  **Move v16:**
               *   Move base from `o3` to `q2` to pick v16.
               *   Pick v16.
               *   Move base from `q2` to `o3` to place v16.
               *   Place v16 at `v24` on `v20`.
           
           5.  **Move v18:**
               *   Move base from `o3` to `q3` to pick v18.
               *   Pick v18.
               *   Move base from `q3` to `o3` to place v18.
               *   Place v18 at `v27` on `v20`.
           
           This sequence ensures all objects are moved to `v20` while satisfying preconditions.
           
           --Plan--:
           (move_base v3 #q6 #t13)
           (pick v4 v8 v9 #g4 #q6 #t6)
           (move_base #q6 #o3 #o0)
           (place v4 v8 v21 #g4 #o3 #o4)
           (move_base #o3 #q9 #o0)
           (pick v4 v12 v13 #g3 #q9 #t16)
           (move_base #q9 #o3 #o0)
           (place v4 v12 v22 #g3 #o3 #o4)
           (move_base #o3 #q8 #o0)
           (pick v4 v14 v15 #g0 #q8 #t15)
           (move_base #q8 #o3 #o0)
           (place v4 v14 v23 #g0 #o3 #o4)
           (move_base #o3 #q2 #o0)
           (pick v4 v16 v17 #g2 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v16 v24 #g2 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v18 v19 #g1 #q3 #t3)
           (move_base #q3 #o3 #o0)
           (place v4 v18 v27 #g1 #o3 #o4)

