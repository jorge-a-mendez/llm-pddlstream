User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v4, v5)
           Atom aconf(v6, v7)
           Atom atpose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom stackable(v8, v18)
           Atom supported(v15, v16, v11)
           Atom canmove()
           Atom ataconf(v4, v5)
           Atom stackable(v12, v18)
           Atom atpose(v15, v16)
           Atom stackable(v12, v10)
           Atom ataconf(v6, v7)
           Atom graspable(v15)
           Atom arm(v6)
           Atom arm(v4)
           Atom pose(v12, v13)
           Atom handempty(v6)
           Atom atpose(v12, v13)
           Atom controllable(v4)
           Atom graspable(v8)
           Atom atbconf(v3)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom supported(v12, v13, v14)
           Atom type(v8, v17)
           Atom stackable(v15, v10)
           Atom stackable(v8, v10)
           Atom type(v12, v17)
           Atom graspable(v12)
           Atom bconf(v3)
           Atom pose(v15, v16)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v18)
           Atom grasp(v15, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom grasp(v8, #g0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, #p0, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom btraj(#t4)
           Atom basemotion(#q0, #t4, #q1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q1 #t4))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p0 #g0 #q1 #t1))
           ((place v4 v8 #p0 #g0 #q1 #t1))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `new-axiom@0()`, which states that object `green` is on `v18` and is of type `v17`. In the provided initial state, `v8` is of type `v17` (type(v8, v17)), `v12` is also of type `v17` (type(v12, v17)). The goal uses the general term `green` which we can interpret as any object of type `v17`. The initial state has `atpose(v8, v9)` and `supported(v8, v9, v11)`. It also has `atpose(v12, v13)` and `supported(v12, v13, v14)`. The `new-axiom@0()` essentially says `on(?green, v18)`. We need to move either `v8` or `v12` to `v18`.
           Let's choose `v8`. The initial state has `pose(v8, #p0)` and `supported(v8, #p0, v18)`. This means there is a pre-calculated pose `#p0` on `v18` where `v8` can be placed.
           The robot arm `v4` is `handempty(v4)`. `v8` is `graspable(v8)`.
           We need to `pick` `v8` and then `place` it on `v18`.
           There are several pick and place actions available for `v8` with arm `v4`.
           To pick `v8` from its current pose `v9`, we can use `(pick v4 v8 v9 #g0 #q0 #t0)`. This requires the robot to be at `atbconf(#q0)`. Currently, `atbconf(v3)`. So, a `move_base` action is needed. We can move from `v3` to `#q0` using `(move_base v3 #q0 #t2)`.
           After picking `v8`, we need to place it on `v18`. The pose on `v18` is `#p0`. We can use `(place v4 v8 #p0 #g0 #q1 #t1)`. This requires the robot to be at `atbconf(#q1)`. So, another `move_base` action is needed from `#q0` to `#q1`. There is no direct move from `#q0` to `#q1`, but there is `(move_base #q0 #q1 #t4)`.
           
           --Plan--:
           (move_base v3 #q0 #t2)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q1 #t4)
           (place v4 v8 #p0 #g0 #q1 #t1)

