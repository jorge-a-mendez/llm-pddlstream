User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #q4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom aconf(v4, v5)
           Atom aconf(v6, v7)
           Atom atpose(v8, v9)
           Atom supported(v8, v9, v11)
           Atom stackable(v8, v18)
           Atom supported(v15, v16, v11)
           Atom canmove()
           Atom ataconf(v4, v5)
           Atom stackable(v12, v18)
           Atom atpose(v15, v16)
           Atom stackable(v12, v10)
           Atom ataconf(v6, v7)
           Atom graspable(v15)
           Atom arm(v6)
           Atom arm(v4)
           Atom pose(v12, v13)
           Atom handempty(v6)
           Atom atpose(v12, v13)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v23, v15, v16)
           Atom controllable(v4)
           Atom graspable(v8)
           Atom atbconf(v3)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom supported(v12, v13, v14)
           Atom type(v8, v17)
           Atom stackable(v15, v10)
           Atom stackable(v8, v10)
           Atom type(v12, v17)
           Atom graspable(v12)
           Atom bconf(v3)
           Atom pose(v15, v16)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v8, v35)
           Atom supported(v8, v35, v18)
           Atom pose(v8, v28)
           Atom supported(v8, v28, v18)
           Atom grasp(v15, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #o1)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom grasp(v8, v20)
           Atom grasp(v8, v22)
           Atom grasp(v8, v23)
           Atom grasp(v8, v21)
           Atom bconf(v31)
           Atom atraj(v32)
           Atom kin(v4, v8, v28, v22, v31, v32)
           Atom bconf(#q3)
           Atom atraj(#t7)
           Atom kin(v4, v8, v28, v23, #q3, #t7)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v8, v19, v23, #q4, #t8)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v8, v9, v23, #q2, #t5)
           Atom bconf(v33)
           Atom atraj(v34)
           Atom kin(v4, v8, v28, v21, v33, v34)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v21, v26, v27)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v20, v24, v25)
           Atom bconf(v29)
           Atom atraj(v30)
           Atom kin(v4, v8, v28, v20, v29, v30)
           Atom basemotion(v3, #o0, v26)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v26, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, v26)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(v24, #o0, #q4)
           Atom basemotion(#q4, #o0, v24)
           Atom basemotion(v26, #o0, #q2)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(v24, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, v26)
           Atom basemotion(#q2, #o0, v24)
           Atom basemotion(#q2, #o0, v3)
           Atom btraj(#t9)
           Atom basemotion(#q2, #t9, #q4)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(#o3, #o0, v24)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q4 #t9))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 v24 #o0))
           ((move_base #q4 v26 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q4 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q4 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t6))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 v24 v25))
           ((place v4 v8 v19 v20 v24 v25))
           ((pick v4 v8 v19 v21 v26 v27))
           ((place v4 v8 v19 v21 v26 v27))
           ((pick v4 v8 v19 v23 #q4 #t8))
           ((place v4 v8 v19 v23 #q4 #t8))
           ((pick v4 v8 v9 v23 #q2 #t5))
           ((place v4 v8 v9 v23 #q2 #t5))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to achieve `new-axiom@0()`, which states `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, `v8` is of `type(v8, v17)`. So, the `?green` in the axiom refers to `v8`. The goal then simplifies to `on(v8, v18)`.
           From the initial state, `v8` is at `atpose(v8, v9)` and `supported(v8, v9, v11)`. It is also known that `supported(v8, v19, v18)` and `supported(v8, v35, v18)` and `supported(v8, v28, v18)`.
           This means we need to pick up `v8` from `v11` and place it on `v18`. We can achieve this by placing `v8` at pose `v19`, `v35`, or `v28` as these poses are supported by `v18`.
           
           The available `pick` actions for `v8` are:
           - `(pick v4 v8 #o2 v20 #o3 #o4)`
           - `(pick v4 v8 #o2 v21 #o3 #o4)`
           - `(pick v4 v8 #o2 v22 #o3 #o4)`
           - `(pick v4 v8 #o2 v23 #o3 #o4)`
           - `(pick v4 v8 v19 v20 v24 v25)`
           - `(pick v4 v8 v19 v21 v26 v27)`
           - `(pick v4 v8 v19 v23 #q4 #t8)`
           - `(pick v4 v8 v9 v23 #q2 #t5)`
           
           The current pose of `v8` is `v9`. So we need to use the `pick` action that picks `v8` from `v9`.
           `(pick v4 v8 v9 v23 #q2 #t5)` requires `atbconf(#q2)`.
           The initial `atbconf` is `v3`. So we need to move the base from `v3` to `#q2`.
           `(move_base v3 #q2 #t6)` can achieve this.
           
           After picking, `v8` will be held by `v4`. Then we need to place it on `v18`.
           The available `place` actions for `v8` that place it on `v18` (via `supported` predicate) are:
           - `(place v4 v8 v19 v20 v24 v25)` (requires `atbconf(v24)`)
           - `(place v4 v8 v19 v21 v26 v27)` (requires `atbconf(v26)`)
           - `(place v4 v8 v19 v23 #q4 #t8)` (requires `atbconf(#q4)`)
           
           Let's choose to place `v8` at `v19` with grasp `v23`, which requires `atbconf(#q4)`.
           So after picking, we will need to move the base from `#q2` to `#q4`.
           `(move_base #q2 #q4 #t9)` can achieve this.
           
           The plan would be:
           1. Move the base to `#q2`.
           2. Pick `v8` from `v9`.
           3. Move the base to `#q4`.
           4. Place `v8` at `v19`.
           
           --Plan--:
           (move_base v3 #q2 #t6)
           (pick v4 v8 v9 v23 #q2 #t5)
           (move_base #q2 #q4 #t9)
           (place v4 v8 v19 v23 #q4 #t8)

