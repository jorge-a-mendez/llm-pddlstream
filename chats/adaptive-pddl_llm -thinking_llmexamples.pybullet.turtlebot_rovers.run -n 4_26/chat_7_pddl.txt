User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom lander(v9)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom type(v5, v6)
           Atom conf(v12, v13)
           Atom free(v14, v16)
           Atom type(v8, v6)
           Atom objective(v20)
           Atom type(v3, v2)
           Atom supports(v10, v11)
           Atom onboard(v10, v12)
           Atom rock(v5)
           Atom objective(v19)
           Atom camera(v10)
           Atom type(v1, v2)
           Atom atconf(v14, v15)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom rover(v12)
           Atom rock(v3)
           Atom rock(v1)
           Atom free(v12, v16)
           Atom rock(v4)
           Atom rock(v7)
           Atom atconf(v12, v13)
           Atom objective(v17)
           Atom store(v16)
           Atom objective(v18)
           Atom onboard(v10, v14)
           Atom rock(v8)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q1, #y1, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q15, v4)
           Atom conf(v12, #q15)
           Atom above(v12, #q13, v1)
           Atom conf(v12, #q13)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom above(v12, #q5, v3)
           Atom conf(v12, #q5)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #q14, v7)
           Atom conf(v12, #q14)
           Atom imagevisible(v12, #q0, #y0, v19)
           Atom imagerange(v12, #q0, v19)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom above(v14, #q12, v5)
           Atom conf(v14, #q12)
           Atom imagevisible(v14, #q7, #y5, v19)
           Atom imagerange(v14, #q7, v19)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #q10, #y8, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y8)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q8, #y6, v18)
           Atom imagerange(v14, #q8, v18)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom comvisible(v14, #q9, #y7, v9)
           Atom comrange(v14, #q9, v9)
           Atom conf(v14, #q9)
           Atom ray(#y7)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q11, #y9, v20)
           Atom imagerange(v14, #q11, v20)
           Atom conf(v14, #q11)
           Atom ray(#y9)
           Atom imagevisible(v12, #q3, #y3, v20)
           Atom imagerange(v12, #q3, v20)
           Atom conf(v12, #q3)
           Atom ray(#y3)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q13, #t21, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #t2, v13)
           Atom motion(v12, #q2, #t5, #q4)
           Atom motion(v12, #q2, #t24, #q13)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q4, #t3, #q2)
           Atom motion(v12, #q0, #t7, #q2)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q2, #t29, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v12, #q15, #t32, #q4)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, v15, #t17, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, v15, #t16, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v12, #q0, #t33, #q6)
           Atom motion(v12, #q6, #t10, #q2)
           Atom motion(v12, #q6, #t23, #q0)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, v15, #t15, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, v15, #t20, #q12)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q15)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q1, #t8, #q2)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q1, #t34, #q0)
           Atom motion(v12, v13, #t1, #q1)
           Atom motion(v12, #q1, #t18, #q6)
           Atom motion(v12, #q0, #t27, #q1)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #t31, #q15)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #t9, #q2)
           Atom motion(v12, #q6, #t26, #q3)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q0, #t19, #q3)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q1)
           Atom motion(v12, #q14, #t25, #q2)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q3, #t30, #q14)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q2, #t28, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t4, #q2)
           Atom motion(v12, v13, #t13, #q5)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q2, #t6, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q12, #t22, #q9)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q7, #t11, #q9)
           Atom motion(v14, #q9, #t14, v15)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q8, #t12, #q9)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q14, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q15)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q15, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q14)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q13 v1 v16))
           ((sample_rock v12 #q14 v7 v16))
           ((sample_rock v12 #q15 v4 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v12 #q5 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q12 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q14))
           ((move v12 #o5 #o2 #q15))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t19 #q3))
           ((move v12 #q0 #t27 #q1))
           ((move v12 #q0 #t33 #q6))
           ((move v12 #q0 #t7 #q2))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q15))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t18 #q6))
           ((move v12 #q1 #t34 #q0))
           ((move v12 #q1 #t8 #q2))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t21 #q2))
           ((move v12 #q14 #o2 #o5))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q1))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t25 #q2))
           ((move v12 #q15 #o2 #o5))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t32 #q4))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #t2 v13))
           ((move v12 #q2 #t24 #q13))
           ((move v12 #q2 #t28 #q14))
           ((move v12 #q2 #t29 #q15))
           ((move v12 #q2 #t5 #q4))
           ((move v12 #q2 #t6 #q5))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t30 #q14))
           ((move v12 #q3 #t31 #q15))
           ((move v12 #q3 #t9 #q2))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t3 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t4 #q2))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t10 #q2))
           ((move v12 #q6 #t23 #q0))
           ((move v12 #q6 #t26 #q3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t1 #q1))
           ((move v12 v13 #t13 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t22 #q9))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t11 #q9))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t12 #q9))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #t14 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t15 #q7))
           ((move v14 v15 #t16 #q8))
           ((move v14 v15 #t17 #q10))
           ((move v14 v15 #t20 #q12))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q1 #y1 v17 v10))
           ((calibrate v12 #q3 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q10 #y8 v17 v10))
           ((calibrate v14 #q11 #y9 v20 v10))
           ((calibrate v14 #q7 #y5 v19 v10))
           ((calibrate v14 #q8 #y6 v18 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q1 #y1 v17 v10 v11))
           ((take_image v12 #q3 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q10 #y8 v17 v10 v11))
           ((take_image v14 #q11 #y9 v20 v10 v11))
           ((take_image v14 #q7 #y5 v19 v10 v11))
           ((take_image v14 #q8 #y6 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q9 #y7 v9 v1))
           ((send_analysis v14 #q9 #y7 v9 v3))
           ((send_analysis v14 #q9 #y7 v9 v4))
           ((send_analysis v14 #q9 #y7 v9 v7))
           ((send_analysis v14 #q9 #y7 v9 v8))
           ((send_analysis v14 #q9 #y7 v9 v5))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v20 v11))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q9 #y7 v9 v17 v11))
           ((send_image v14 #q9 #y7 v9 v20 v11))
           ((send_image v14 #q9 #y7 v9 v19 v11))
           ((send_image v14 #q9 #y7 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Initial Assessment and Planning for Goal Achievement**
           
           My initial goal is to achieve the state described by `new-axiom@0()`. This involves several image acquisition tasks and rock analysis with two rovers, specifically acquiring images `v17, v18, v19, v20` using mode `v11`, analyzing rock `v4` (stone) and rock `v5` (soil). Both rovers, `v12` and `v14` are capable of these tasks, they are initially at `atconf` and their stores are `free`. We need to take images, then sample rocks for analysis, then send analyses and finally images.  To satisfy `new-axiom@0`,  I need to ensure that the stores of both rovers are also `free` at the end.
           
           **Detailed Planning and Action Breakdown**
           
           I've decided to use rover `v12` for images `v17, v18, v19` and rock `v4` analysis, and `v14` for `v20` image and rock `v5` analysis to avoid potential conflicts with the shared camera.
           
           The actions break down as:
           
           **Rover `v12`:**
           
           1.  **Move** to #q1 (move-to-location for image of v17)
           2.  **Calibrate** the camera (v10) for v17.
           3.  **Take image** of v17 with camera v10 at mode v11.
           4.  **Move** to #q6 (move-to-location for image of v18)
           5.  **Calibrate** the camera (v10) for v18.
           6.  **Take image** of v18 with camera v10 at mode v11.
           7.  **Move** to #q0 (move-to-location for image of v19)
           8.  **Calibrate** the camera (v10) for v19.
           9.  **Take image** of v19 with camera v10 at mode v11.
           10. **Move** to #q15 (location for sampling v4)
           11. **Sample rock** `v4` in v16 store with v12 rover.
           12. **Drop Rock**. After sampling the store is `full`. `free(v12,v16)` is crucial to achieve the goal state.
           13. **Move** to #q2 (for communications).
           14. **Send Image** of v17.
           15. **Send Image** of v18.
           16. **Send Image** of v19.
           17. **Send Analysis** of v4.
           
           **Rover `v14`:**
           
           1.  **Move** to #q11 (location to image v20)
           2.  **Calibrate** camera for v20.
           3.  **Take image** of v20 with camera (v10) at mode v11.
           4.  **Move** to #q12 (location to sample rock v5)
           5.  **Sample Rock** v5, store in v16.
           6.  **Drop Rock**.
           7.  **Move** to #q9 (for comms)
           8.  **Send Image** of v20.
           9.  **Send Analysis** of v5.
           
           **Critical Considerations and Final Plan**
           
           The significant point is that for each rock sample, the rover's store becomes *full*. I have to ensure the rover's store returns to the `free` state to fulfil the conditions for the goal `new-axiom@0()`, hence the 'drop-rock' actions after sampling.
           
           The shared camera does not pose a problem since its *calibration* state is valid for each rover, so no concurrency issues here. The plans are therefore constructed assuming a sequential execution by a system executor. All required preconditions are accounted for (movement to the right locations, calibration, visibility, etc.), and the goal state is correctly achieved.
           
)

Model:     **Initial Assessment and Planning for Goal Achievement**
           
           My initial goal is to achieve the state described by `new-axiom@0()`. This involves several image acquisition tasks and rock analysis with two rovers, specifically acquiring images `v17, v18, v19, v20` using mode `v11`, analyzing rock `v4` (stone) and rock `v5` (soil). Both rovers, `v12` and `v14` are capable of these tasks, they are initially at `atconf` and their stores are `free`. We need to take images, then sample rocks for analysis, then send analyses and finally images.  To satisfy `new-axiom@0`,  I need to ensure that the stores of both rovers are also `free` at the end.
           
           **Detailed Planning and Action Breakdown**
           
           I've decided to use rover `v12` for images `v17, v18, v19` and rock `v4` analysis, and `v14` for `v20` image and rock `v5` analysis to avoid potential conflicts with the shared camera.
           
           The actions break down as:
           
           **Rover `v12`:**
           
           1.  **Move** to #q1 (move-to-location for image of v17)
           2.  **Calibrate** the camera (v10) for v17.
           3.  **Take image** of v17 with camera v10 at mode v11.
           4.  **Move** to #q6 (move-to-location for image of v18)
           5.  **Calibrate** the camera (v10) for v18.
           6.  **Take image** of v18 with camera v10 at mode v11.
           7.  **Move** to #q0 (move-to-location for image of v19)
           8.  **Calibrate** the camera (v10) for v19.
           9.  **Take image** of v19 with camera v10 at mode v11.
           10. **Move** to #q15 (location for sampling v4)
           11. **Sample rock** `v4` in v16 store with v12 rover.
           12. **Drop Rock**. After sampling the store is `full`. `free(v12,v16)` is crucial to achieve the goal state.
           13. **Move** to #q2 (for communications).
           14. **Send Image** of v17.
           15. **Send Image** of v18.
           16. **Send Image** of v19.
           17. **Send Analysis** of v4.
           
           **Rover `v14`:**
           
           1.  **Move** to #q11 (location to image v20)
           2.  **Calibrate** camera for v20.
           3.  **Take image** of v20 with camera (v10) at mode v11.
           4.  **Move** to #q12 (location to sample rock v5)
           5.  **Sample Rock** v5, store in v16.
           6.  **Drop Rock**.
           7.  **Move** to #q9 (for comms)
           8.  **Send Image** of v20.
           9.  **Send Analysis** of v5.
           
           **Critical Considerations and Final Plan**
           
           The significant point is that for each rock sample, the rover's store becomes *full*. I have to ensure the rover's store returns to the `free` state to fulfil the conditions for the goal `new-axiom@0()`, hence the 'drop-rock' actions after sampling.
           
           The shared camera does not pose a problem since its *calibration* state is valid for each rover, so no concurrency issues here. The plans are therefore constructed assuming a sequential execution by a system executor. All required preconditions are accounted for (movement to the right locations, calibration, visibility, etc.), and the goal state is correctly achieved.
           

