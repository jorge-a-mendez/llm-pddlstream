User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom lander(v9)
           Atom type(v4, v2)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom type(v5, v6)
           Atom conf(v12, v13)
           Atom free(v14, v16)
           Atom type(v8, v6)
           Atom objective(v20)
           Atom type(v3, v2)
           Atom supports(v10, v11)
           Atom onboard(v10, v12)
           Atom rock(v5)
           Atom objective(v19)
           Atom camera(v10)
           Atom type(v1, v2)
           Atom atconf(v14, v15)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom rover(v12)
           Atom rock(v3)
           Atom rock(v1)
           Atom free(v12, v16)
           Atom rock(v4)
           Atom rock(v7)
           Atom atconf(v12, v13)
           Atom objective(v17)
           Atom store(v16)
           Atom objective(v18)
           Atom onboard(v10, v14)
           Atom rock(v8)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #q13, v1)
           Atom conf(v12, #q13)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q0, #y0, v19)
           Atom imagerange(v12, #q0, v19)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom above(v12, #q5, v3)
           Atom conf(v12, #q5)
           Atom imagevisible(v12, #q1, #y1, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #q7, #y5, v19)
           Atom imagerange(v14, #q7, v19)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #q12, v5)
           Atom conf(v14, #q12)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q8, #y6, v18)
           Atom imagerange(v14, #q8, v18)
           Atom conf(v14, #q8)
           Atom ray(#y6)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q10, #y8, v17)
           Atom imagerange(v14, #q10, v17)
           Atom conf(v14, #q10)
           Atom ray(#y8)
           Atom comvisible(v12, #q2, #y2, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom comvisible(v14, #q9, #y7, v9)
           Atom comrange(v14, #q9, v9)
           Atom conf(v14, #q9)
           Atom ray(#y7)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q3, #y3, v20)
           Atom imagerange(v12, #q3, v20)
           Atom conf(v12, #q3)
           Atom ray(#y3)
           Atom imagevisible(v14, #q11, #y9, v20)
           Atom imagerange(v14, #q11, v20)
           Atom conf(v14, #q11)
           Atom ray(#y9)
           Atom motion(v12, v13, #t13, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v14, v15, #t17, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q6, #t10, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t2, v13)
           Atom motion(v12, #q3, #t9, #q2)
           Atom motion(v12, #q4, #t3, #q2)
           Atom motion(v12, #q2, #t6, #q5)
           Atom motion(v12, #q2, #t5, #q4)
           Atom motion(v12, #q5, #t4, #q2)
           Atom motion(v12, #q6, #t23, #q0)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q0, #t19, #q3)
           Atom motion(v12, #q0, #t7, #q2)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, v15, #t16, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, v15, #t20, #q12)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q13, #t21, #q2)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q3, #o2, #q13)
           Atom motion(v12, #q2, #t24, #q13)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #t15, #q7)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #t18, #q6)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, v13, #t1, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q1, #t8, #q2)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v14, #q8, #t12, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q7, #t11, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q12, #t22, #q9)
           Atom motion(v14, #q9, #t14, v15)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q13 v1 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v12 #q5 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q12 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t19 #q3))
           ((move v12 #q0 #t7 #q2))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t18 #q6))
           ((move v12 #q1 #t8 #q2))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q3))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t21 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #t2 v13))
           ((move v12 #q2 #t24 #q13))
           ((move v12 #q2 #t5 #q4))
           ((move v12 #q2 #t6 #q5))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q13))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t9 #q2))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t3 #q2))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t4 #q2))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t10 #q2))
           ((move v12 #q6 #t23 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t1 #q1))
           ((move v12 v13 #t13 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t22 #q9))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t11 #q9))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t12 #q9))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #t14 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t15 #q7))
           ((move v14 v15 #t16 #q8))
           ((move v14 v15 #t17 #q10))
           ((move v14 v15 #t20 #q12))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q1 #y1 v17 v10))
           ((calibrate v12 #q3 #y3 v20 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #q10 #y8 v17 v10))
           ((calibrate v14 #q11 #y9 v20 v10))
           ((calibrate v14 #q7 #y5 v19 v10))
           ((calibrate v14 #q8 #y6 v18 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q1 #y1 v17 v10 v11))
           ((take_image v12 #q3 #y3 v20 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q10 #y8 v17 v10 v11))
           ((take_image v14 #q11 #y9 v20 v10 v11))
           ((take_image v14 #q7 #y5 v19 v10 v11))
           ((take_image v14 #q8 #y6 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y2 v9 v4))
           ((send_analysis v12 #q2 #y2 v9 v7))
           ((send_analysis v12 #q2 #y2 v9 v8))
           ((send_analysis v12 #q2 #y2 v9 v1))
           ((send_analysis v12 #q2 #y2 v9 v5))
           ((send_analysis v12 #q2 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q9 #y7 v9 v1))
           ((send_analysis v14 #q9 #y7 v9 v3))
           ((send_analysis v14 #q9 #y7 v9 v4))
           ((send_analysis v14 #q9 #y7 v9 v7))
           ((send_analysis v14 #q9 #y7 v9 v8))
           ((send_analysis v14 #q9 #y7 v9 v5))
           ((send_image v12 #q2 #y2 v9 v19 v11))
           ((send_image v12 #q2 #y2 v9 v17 v11))
           ((send_image v12 #q2 #y2 v9 v20 v11))
           ((send_image v12 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q9 #y7 v9 v17 v11))
           ((send_image v14 #q9 #y7 v9 v20 v11))
           ((send_image v14 #q9 #y7 v9 v19 v11))
           ((send_image v14 #q9 #y7 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Plan to Satisfy the `new-axiom@0()` Goal**
           
           Alright, let's break this down. The core of my goal is to achieve `new-axiom@0()`, which I interpret as a set of conditions that need to be met.  The crux of it is gathering four images, analyzing two specific rock samples, and ensuring things are in a certain state at the very end.
           
           First, I need to ensure four specific images – associated with "objectives" `v17`, `v18`, `v19`, and `v20` – are received in mode `v11`. I've got two rovers, but based on the initial state of affairs, I decided to lean heavily on `v12` for this.
           
           My plan involves `v12` moving to designated locations (`#q0`, `#q1`, `#q6`, `#q3`) to capture the images. I will need to calibrate the onboard camera (`v10`) at each location before taking a picture. The rover can then communicate from location `#q2`.  Once an image is taken, it's a matter of sending it to a receiver, represented by the `send_image` action. The process for each objective is:
           
           1.  Move to a specific location for an objective.
           2.  Calibrate at that location.
           3.  Take the picture.
           4.  Move to communication location at #q2
           5.  Send the photo.
           
           I've also got two analyses to deal with. I have to analyze a `type(v2)` rock, and a `type(v6)` rock. Both `v4` (type v2) and `v7` (type v6) rocks are available for analysis from position `#o5`. I'm going to take a sample, move to communication location, and transmit the analysis. To achieve this:
           
           1.  Drop off images at the communication location.
           2.  Move to rock sample location.
           3.  `Sample` the rock sample.
           4.  Move to communication location.
           5.  Send the analysis.
           
           Finally, I need to finish things by returning the rover to the exact starting state – `atconf(v12, v13)` and `free(v12, v16)`. The whole plan has been optimized for efficiency. The key consideration, based on the initial problem, is to ensure all images and analyses are sent and the final `atconf` and `free` conditions hold.
           
)

Model:     **A Plan to Satisfy the `new-axiom@0()` Goal**
           
           Alright, let's break this down. The core of my goal is to achieve `new-axiom@0()`, which I interpret as a set of conditions that need to be met.  The crux of it is gathering four images, analyzing two specific rock samples, and ensuring things are in a certain state at the very end.
           
           First, I need to ensure four specific images – associated with "objectives" `v17`, `v18`, `v19`, and `v20` – are received in mode `v11`. I've got two rovers, but based on the initial state of affairs, I decided to lean heavily on `v12` for this.
           
           My plan involves `v12` moving to designated locations (`#q0`, `#q1`, `#q6`, `#q3`) to capture the images. I will need to calibrate the onboard camera (`v10`) at each location before taking a picture. The rover can then communicate from location `#q2`.  Once an image is taken, it's a matter of sending it to a receiver, represented by the `send_image` action. The process for each objective is:
           
           1.  Move to a specific location for an objective.
           2.  Calibrate at that location.
           3.  Take the picture.
           4.  Move to communication location at #q2
           5.  Send the photo.
           
           I've also got two analyses to deal with. I have to analyze a `type(v2)` rock, and a `type(v6)` rock. Both `v4` (type v2) and `v7` (type v6) rocks are available for analysis from position `#o5`. I'm going to take a sample, move to communication location, and transmit the analysis. To achieve this:
           
           1.  Drop off images at the communication location.
           2.  Move to rock sample location.
           3.  `Sample` the rock sample.
           4.  Move to communication location.
           5.  Send the analysis.
           
           Finally, I need to finish things by returning the rover to the exact starting state – `atconf(v12, v13)` and `free(v12, v16)`. The whole plan has been optimized for efficiency. The key consideration, based on the initial problem, is to ensure all images and analyses are sent and the final `atconf` and `free` conditions hold.
           

