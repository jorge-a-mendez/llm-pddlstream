User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g5: object
           #g6: object
           #g7: object
           #g8: object
           #g9: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q19: object
           #q20: object
           #q21: object
           #q22: object
           #q23: object
           #q24: object
           #t67: object
           #t68: object
           #t69: object
           #t70: object
           #t71: object
           #t72: object
           #t73: object
           #t74: object
           #t75: object
           #t76: object
           #t77: object
           #t78: object
           #t79: object
           #t80: object
           #t81: object
           #t82: object
           #t83: object
           #t84: object
           #t85: object
           @sink: object
           @stove: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v3: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v44: object
           v45: object
           v46: object
           v47: object
           v48: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.115, 0.015), (-0.045, 0.085)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.156, -0.332), (0.253, -0.235)).
           Object v9 is a pose with position (0.148, 0.302, 0.781) and quaternion (0.0, 0.0, 0.849, 0.528).
           Object v19 is a pose with position (0.204, -0.284, 0.781) and quaternion (0.0, 0.0, 0.886, 0.464).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.148, 0.387), (0.235, 0.473)).
           Object v13 is a pose with position (0.191, 0.43, 0.781) and quaternion (0.0, 0.0, -0.137, 0.991).
           Object p5 is a pose with position (-0.08, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (0.08, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p14 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (-0.08, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (0.08, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.08, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (-0.08, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v21 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.173, -0.38), (0.953, 0.661)).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.08, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (-0.08, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.118, -0.087), (-0.048, -0.017)).
           Object v15 is a pose with position (-0.048, -0.37, 0.781) and quaternion (0.0, 0.0, -0.699, 0.715).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.067, -0.439), (0.166, -0.34)).
           Object v17 is a pose with position (0.116, -0.39, 0.781) and quaternion (0.0, 0.0, 0.399, 0.917).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom graspable(v16)
           Atom pose(v16, v17)
           Atom atpose(v16, v17)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom graspable(v18)
           Atom pose(v18, v19)
           Atom atpose(v18, v19)
           Atom stackable(v18, v10)
           Atom supported(v18, v19, v11)
           Atom stackable(v8, v20)
           Atom stackable(v12, v20)
           Atom stackable(v14, v20)
           Atom stackable(v16, v20)
           Atom stackable(v18, v20)
           Atom pose(v14, p7)
           Atom supported(v14, p7, v10)
           Atom pose(v18, p9)
           Atom supported(v18, p9, v20)
           Atom pose(v16, p8)
           Atom supported(v16, p8, v20)
           Atom supported(v14, p7, v20)
           Atom pose(v12, p6)
           Atom supported(v12, p6, v20)
           Atom pose(v8, p5)
           Atom supported(v8, p5, v20)
           Atom supported(v12, p6, v10)
           Atom supported(v18, p9, v10)
           Atom supported(v16, p8, v10)
           Atom supported(v8, p5, v10)
           Atom kin(v40, v46, p7, v42, v43, v44)
           Atom kin(v40, v45, p6, v42, v43, v44)
           Atom kin(v40, v41, p5, v42, v43, v44)
           Atom kin(v40, v47, p8, v42, v43, v44)
           Atom kin(v40, v48, p9, v42, v43, v44)
           Atom pose(v8, p10)
           Atom supported(v8, p10, v20)
           Atom pose(v16, p13)
           Atom supported(v16, p13, v10)
           Atom pose(v12, p11)
           Atom supported(v12, p11, v10)
           Atom supported(v16, p13, v20)
           Atom pose(v18, p14)
           Atom supported(v18, p14, v10)
           Atom supported(v18, p14, v20)
           Atom supported(v8, p10, v10)
           Atom supported(v12, p11, v20)
           Atom pose(v14, p12)
           Atom supported(v14, p12, v20)
           Atom supported(v14, p12, v10)
           Atom kin(v40, v41, p10, v42, v43, v44)
           Atom kin(v40, v45, p11, v42, v43, v44)
           Atom kin(v40, v46, p12, v42, v43, v44)
           Atom kin(v40, v47, p13, v42, v43, v44)
           Atom kin(v40, v48, p14, v42, v43, v44)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #g5)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v20)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v20)
           Atom supported(v14, #o2, v20)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v20)
           Atom grasp(v14, #g8)
           Atom supported(v12, #o2, v10)
           Atom supported(v18, #o2, v10)
           Atom grasp(v18, #g7)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #g6)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g9)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, p13, #g5, #o3, #o4)
           Atom bconf(#q24)
           Atom atraj(#t85)
           Atom kin(v4, v16, p8, #g5, #q24, #t85)
           Atom bconf(#q15)
           Atom atraj(#t67)
           Atom kin(v4, v16, v17, #g5, #q15, #t67)
           Atom bconf(#q18)
           Atom atraj(#t70)
           Atom kin(v4, v12, v13, #g6, #q18, #t70)
           Atom bconf(#q16)
           Atom atraj(#t68)
           Atom kin(v4, v12, p6, #g6, #q16, #t68)
           Atom kin(v4, v12, p11, #g6, #o3, #o4)
           Atom bconf(#q19)
           Atom atraj(#t71)
           Atom kin(v4, v14, p7, #g8, #q19, #t71)
           Atom bconf(#q20)
           Atom atraj(#t72)
           Atom kin(v4, v14, v15, #g8, #q20, #t72)
           Atom kin(v4, v14, p12, #g8, #o3, #o4)
           Atom bconf(#q23)
           Atom atraj(#t75)
           Atom kin(v4, v18, p9, #g7, #q23, #t75)
           Atom bconf(#q17)
           Atom atraj(#t69)
           Atom kin(v4, v18, v19, #g7, #q17, #t69)
           Atom kin(v4, v18, p14, #g7, #o3, #o4)
           Atom bconf(#q22)
           Atom atraj(#t74)
           Atom kin(v4, v8, p5, #g9, #q22, #t74)
           Atom bconf(#q21)
           Atom atraj(#t73)
           Atom kin(v4, v8, v9, #g9, #q21, #t73)
           Atom kin(v4, v8, p10, #g9, #o3, #o4)
           Atom basemotion(#q15, #o0, v3)
           Atom btraj(#t76)
           Atom basemotion(v3, #t76, #q15)
           Atom basemotion(#q15, #o0, #q15)
           Atom basemotion(#q18, #o0, v3)
           Atom btraj(#t79)
           Atom basemotion(v3, #t79, #q18)
           Atom basemotion(#q18, #o0, #q18)
           Atom basemotion(#q15, #o0, #q18)
           Atom basemotion(#q18, #o0, #q15)
           Atom basemotion(#q24, #o0, v3)
           Atom basemotion(#q24, #o0, #q18)
           Atom basemotion(v3, #o0, #q24)
           Atom basemotion(#q18, #o0, #q24)
           Atom basemotion(#q24, #o0, #q24)
           Atom basemotion(#q15, #o0, #q24)
           Atom basemotion(#q24, #o0, #q15)
           Atom basemotion(#q22, #o0, v3)
           Atom basemotion(#q22, #o0, #q22)
           Atom btraj(#t83)
           Atom basemotion(v3, #t83, #q22)
           Atom basemotion(#q18, #o0, #q22)
           Atom basemotion(#q22, #o0, #q18)
           Atom basemotion(#q24, #o0, #q22)
           Atom basemotion(#q22, #o0, #q24)
           Atom basemotion(#q15, #o0, #q22)
           Atom basemotion(#q22, #o0, #q15)
           Atom basemotion(#q21, #o0, #q22)
           Atom basemotion(#q21, #o0, v3)
           Atom basemotion(#q22, #o0, #q21)
           Atom basemotion(#q21, #o0, #q21)
           Atom btraj(#t82)
           Atom basemotion(v3, #t82, #q21)
           Atom basemotion(#q18, #o0, #q21)
           Atom basemotion(#q21, #o0, #q18)
           Atom basemotion(#q24, #o0, #q21)
           Atom basemotion(#q21, #o0, #q24)
           Atom basemotion(#q15, #o0, #q21)
           Atom basemotion(#q21, #o0, #q15)
           Atom basemotion(#q17, #o0, v3)
           Atom basemotion(#q17, #o0, #q18)
           Atom basemotion(#q17, #o0, #q22)
           Atom basemotion(#q17, #o0, #q21)
           Atom basemotion(#q17, #o0, #q15)
           Atom basemotion(#q17, #o0, #q24)
           Atom btraj(#t78)
           Atom basemotion(v3, #t78, #q17)
           Atom basemotion(#q18, #o0, #q17)
           Atom basemotion(#q22, #o0, #q17)
           Atom basemotion(#q17, #o0, #q17)
           Atom basemotion(#q21, #o0, #q17)
           Atom basemotion(#q15, #o0, #q17)
           Atom basemotion(#q24, #o0, #q17)
           Atom basemotion(#q23, #o0, v3)
           Atom basemotion(#q23, #o0, #q18)
           Atom basemotion(#q23, #o0, #q22)
           Atom basemotion(#q23, #o0, #q21)
           Atom basemotion(#q23, #o0, #q15)
           Atom basemotion(#q23, #o0, #q24)
           Atom btraj(#t84)
           Atom basemotion(v3, #t84, #q23)
           Atom basemotion(#q18, #o0, #q23)
           Atom basemotion(#q23, #o0, #q23)
           Atom basemotion(#q22, #o0, #q23)
           Atom basemotion(#q21, #o0, #q23)
           Atom basemotion(#q15, #o0, #q23)
           Atom basemotion(#q24, #o0, #q23)
           Atom basemotion(#q17, #o0, #q23)
           Atom basemotion(#q23, #o0, #q17)
           Atom basemotion(#q19, #o0, v3)
           Atom basemotion(#q19, #o0, #q18)
           Atom basemotion(#q19, #o0, #q22)
           Atom basemotion(#q19, #o0, #q21)
           Atom basemotion(#q19, #o0, #q19)
           Atom btraj(#t80)
           Atom basemotion(v3, #t80, #q19)
           Atom basemotion(#q18, #o0, #q19)
           Atom basemotion(#q22, #o0, #q19)
           Atom basemotion(#q21, #o0, #q19)
           Atom basemotion(#q24, #o0, #q19)
           Atom basemotion(#q19, #o0, #q24)
           Atom basemotion(#q15, #o0, #q19)
           Atom basemotion(#q19, #o0, #q15)
           Atom basemotion(#q23, #o0, #q19)
           Atom basemotion(#q19, #o0, #q23)
           Atom basemotion(#q17, #o0, #q19)
           Atom basemotion(#q19, #o0, #q17)
           Atom basemotion(#q20, #o0, #q19)
           Atom basemotion(#q20, #o0, v3)
           Atom basemotion(#q20, #o0, #q18)
           Atom basemotion(#q20, #o0, #q22)
           Atom basemotion(#q20, #o0, #q21)
           Atom basemotion(#q20, #o0, #q20)
           Atom basemotion(#q19, #o0, #q20)
           Atom btraj(#t81)
           Atom basemotion(v3, #t81, #q20)
           Atom basemotion(#q18, #o0, #q20)
           Atom basemotion(#q22, #o0, #q20)
           Atom basemotion(#q21, #o0, #q20)
           Atom basemotion(#q24, #o0, #q20)
           Atom basemotion(#q20, #o0, #q24)
           Atom basemotion(#q15, #o0, #q20)
           Atom basemotion(#q20, #o0, #q15)
           Atom basemotion(#q23, #o0, #q20)
           Atom basemotion(#q20, #o0, #q23)
           Atom basemotion(#q17, #o0, #q20)
           Atom basemotion(#q20, #o0, #q17)
           Atom basemotion(#q16, #o0, v3)
           Atom basemotion(#q16, #o0, #q18)
           Atom basemotion(#q16, #o0, #q22)
           Atom basemotion(#q16, #o0, #q21)
           Atom btraj(#t77)
           Atom basemotion(v3, #t77, #q16)
           Atom basemotion(#q18, #o0, #q16)
           Atom basemotion(#q16, #o0, #q16)
           Atom basemotion(#q22, #o0, #q16)
           Atom basemotion(#q21, #o0, #q16)
           Atom basemotion(#q19, #o0, #q16)
           Atom basemotion(#q16, #o0, #q19)
           Atom basemotion(#q20, #o0, #q16)
           Atom basemotion(#q16, #o0, #q20)
           Atom basemotion(#q24, #o0, #q16)
           Atom basemotion(#q16, #o0, #q24)
           Atom basemotion(#q15, #o0, #q16)
           Atom basemotion(#q16, #o0, #q15)
           Atom basemotion(#q23, #o0, #q16)
           Atom basemotion(#q16, #o0, #q23)
           Atom basemotion(#q17, #o0, #q16)
           Atom basemotion(#q16, #o0, #q17)
           Atom kin(v4, v14, #o2, #g8, #o3, #o4)
           Atom kin(v4, v8, #o2, #g9, #o3, #o4)
           Atom kin(v4, v18, #o2, #g7, #o3, #o4)
           Atom kin(v4, v12, #o2, #g6, #o3, #o4)
           Atom kin(v4, v16, #o2, #g5, #o3, #o4)
           Atom basemotion(#o3, #o0, #q22)
           Atom basemotion(#o3, #o0, #q21)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q22, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q21, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q18, #o0, #o3)
           Atom basemotion(#o3, #o0, #q18)
           Atom basemotion(#q16, #o0, #o3)
           Atom basemotion(#o3, #o0, #q16)
           Atom basemotion(#q19, #o0, #o3)
           Atom basemotion(#o3, #o0, #q19)
           Atom basemotion(#q20, #o0, #o3)
           Atom basemotion(#o3, #o0, #q20)
           Atom basemotion(#q24, #o0, #o3)
           Atom basemotion(#o3, #o0, #q24)
           Atom basemotion(#q15, #o0, #o3)
           Atom basemotion(#o3, #o0, #q15)
           Atom basemotion(#q23, #o0, #o3)
           Atom basemotion(#o3, #o0, #q23)
           Atom basemotion(#q17, #o0, #o3)
           Atom basemotion(#o3, #o0, #q17)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q15 #o0))
           ((move_base #o3 #q16 #o0))
           ((move_base #o3 #q17 #o0))
           ((move_base #o3 #q18 #o0))
           ((move_base #o3 #q19 #o0))
           ((move_base #o3 #q20 #o0))
           ((move_base #o3 #q21 #o0))
           ((move_base #o3 #q22 #o0))
           ((move_base #o3 #q23 #o0))
           ((move_base #o3 #q24 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q15 #o3 #o0))
           ((move_base #q15 #q15 #o0))
           ((move_base #q15 #q16 #o0))
           ((move_base #q15 #q17 #o0))
           ((move_base #q15 #q18 #o0))
           ((move_base #q15 #q19 #o0))
           ((move_base #q15 #q20 #o0))
           ((move_base #q15 #q21 #o0))
           ((move_base #q15 #q22 #o0))
           ((move_base #q15 #q23 #o0))
           ((move_base #q15 #q24 #o0))
           ((move_base #q15 v3 #o0))
           ((move_base #q16 #o3 #o0))
           ((move_base #q16 #q15 #o0))
           ((move_base #q16 #q16 #o0))
           ((move_base #q16 #q17 #o0))
           ((move_base #q16 #q18 #o0))
           ((move_base #q16 #q19 #o0))
           ((move_base #q16 #q20 #o0))
           ((move_base #q16 #q21 #o0))
           ((move_base #q16 #q22 #o0))
           ((move_base #q16 #q23 #o0))
           ((move_base #q16 #q24 #o0))
           ((move_base #q16 v3 #o0))
           ((move_base #q17 #o3 #o0))
           ((move_base #q17 #q15 #o0))
           ((move_base #q17 #q16 #o0))
           ((move_base #q17 #q17 #o0))
           ((move_base #q17 #q18 #o0))
           ((move_base #q17 #q19 #o0))
           ((move_base #q17 #q20 #o0))
           ((move_base #q17 #q21 #o0))
           ((move_base #q17 #q22 #o0))
           ((move_base #q17 #q23 #o0))
           ((move_base #q17 #q24 #o0))
           ((move_base #q17 v3 #o0))
           ((move_base #q18 #o3 #o0))
           ((move_base #q18 #q15 #o0))
           ((move_base #q18 #q16 #o0))
           ((move_base #q18 #q17 #o0))
           ((move_base #q18 #q18 #o0))
           ((move_base #q18 #q19 #o0))
           ((move_base #q18 #q20 #o0))
           ((move_base #q18 #q21 #o0))
           ((move_base #q18 #q22 #o0))
           ((move_base #q18 #q23 #o0))
           ((move_base #q18 #q24 #o0))
           ((move_base #q18 v3 #o0))
           ((move_base #q19 #o3 #o0))
           ((move_base #q19 #q15 #o0))
           ((move_base #q19 #q16 #o0))
           ((move_base #q19 #q17 #o0))
           ((move_base #q19 #q18 #o0))
           ((move_base #q19 #q19 #o0))
           ((move_base #q19 #q20 #o0))
           ((move_base #q19 #q21 #o0))
           ((move_base #q19 #q22 #o0))
           ((move_base #q19 #q23 #o0))
           ((move_base #q19 #q24 #o0))
           ((move_base #q19 v3 #o0))
           ((move_base #q20 #o3 #o0))
           ((move_base #q20 #q15 #o0))
           ((move_base #q20 #q16 #o0))
           ((move_base #q20 #q17 #o0))
           ((move_base #q20 #q18 #o0))
           ((move_base #q20 #q19 #o0))
           ((move_base #q20 #q20 #o0))
           ((move_base #q20 #q21 #o0))
           ((move_base #q20 #q22 #o0))
           ((move_base #q20 #q23 #o0))
           ((move_base #q20 #q24 #o0))
           ((move_base #q20 v3 #o0))
           ((move_base #q21 #o3 #o0))
           ((move_base #q21 #q15 #o0))
           ((move_base #q21 #q16 #o0))
           ((move_base #q21 #q17 #o0))
           ((move_base #q21 #q18 #o0))
           ((move_base #q21 #q19 #o0))
           ((move_base #q21 #q20 #o0))
           ((move_base #q21 #q21 #o0))
           ((move_base #q21 #q22 #o0))
           ((move_base #q21 #q23 #o0))
           ((move_base #q21 #q24 #o0))
           ((move_base #q21 v3 #o0))
           ((move_base #q22 #o3 #o0))
           ((move_base #q22 #q15 #o0))
           ((move_base #q22 #q16 #o0))
           ((move_base #q22 #q17 #o0))
           ((move_base #q22 #q18 #o0))
           ((move_base #q22 #q19 #o0))
           ((move_base #q22 #q20 #o0))
           ((move_base #q22 #q21 #o0))
           ((move_base #q22 #q22 #o0))
           ((move_base #q22 #q23 #o0))
           ((move_base #q22 #q24 #o0))
           ((move_base #q22 v3 #o0))
           ((move_base #q23 #o3 #o0))
           ((move_base #q23 #q15 #o0))
           ((move_base #q23 #q16 #o0))
           ((move_base #q23 #q17 #o0))
           ((move_base #q23 #q18 #o0))
           ((move_base #q23 #q19 #o0))
           ((move_base #q23 #q20 #o0))
           ((move_base #q23 #q21 #o0))
           ((move_base #q23 #q22 #o0))
           ((move_base #q23 #q23 #o0))
           ((move_base #q23 #q24 #o0))
           ((move_base #q23 v3 #o0))
           ((move_base #q24 #o3 #o0))
           ((move_base #q24 #q15 #o0))
           ((move_base #q24 #q16 #o0))
           ((move_base #q24 #q17 #o0))
           ((move_base #q24 #q18 #o0))
           ((move_base #q24 #q19 #o0))
           ((move_base #q24 #q20 #o0))
           ((move_base #q24 #q21 #o0))
           ((move_base #q24 #q22 #o0))
           ((move_base #q24 #q23 #o0))
           ((move_base #q24 #q24 #o0))
           ((move_base #q24 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q24 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q15 #t76))
           ((move_base v3 #q16 #t77))
           ((move_base v3 #q17 #t78))
           ((move_base v3 #q18 #t79))
           ((move_base v3 #q19 #t80))
           ((move_base v3 #q20 #t81))
           ((move_base v3 #q21 #t82))
           ((move_base v3 #q22 #t83))
           ((move_base v3 #q23 #t84))
           ((pick v4 v12 #o2 #g6 #o3 #o4))
           ((place v4 v12 #o2 #g6 #o3 #o4))
           ((pick v4 v12 p11 #g6 #o3 #o4))
           ((place v4 v12 p11 #g6 #o3 #o4))
           ((pick v4 v12 p6 #g6 #q16 #t68))
           ((place v4 v12 p6 #g6 #q16 #t68))
           ((pick v4 v12 v13 #g6 #q18 #t70))
           ((place v4 v12 v13 #g6 #q18 #t70))
           ((pick v4 v14 #o2 #g8 #o3 #o4))
           ((place v4 v14 #o2 #g8 #o3 #o4))
           ((pick v4 v14 p12 #g8 #o3 #o4))
           ((place v4 v14 p12 #g8 #o3 #o4))
           ((pick v4 v14 p7 #g8 #q19 #t71))
           ((place v4 v14 p7 #g8 #q19 #t71))
           ((pick v4 v14 v15 #g8 #q20 #t72))
           ((place v4 v14 v15 #g8 #q20 #t72))
           ((pick v4 v16 #o2 #g5 #o3 #o4))
           ((place v4 v16 #o2 #g5 #o3 #o4))
           ((pick v4 v16 p13 #g5 #o3 #o4))
           ((place v4 v16 p13 #g5 #o3 #o4))
           ((pick v4 v16 p8 #g5 #q24 #t85))
           ((place v4 v16 p8 #g5 #q24 #t85))
           ((pick v4 v16 v17 #g5 #q15 #t67))
           ((place v4 v16 v17 #g5 #q15 #t67))
           ((pick v4 v18 #o2 #g7 #o3 #o4))
           ((place v4 v18 #o2 #g7 #o3 #o4))
           ((pick v4 v18 p14 #g7 #o3 #o4))
           ((place v4 v18 p14 #g7 #o3 #o4))
           ((pick v4 v18 p9 #g7 #q23 #t75))
           ((place v4 v18 p9 #g7 #q23 #t75))
           ((pick v4 v18 v19 #g7 #q17 #t69))
           ((place v4 v18 v19 #g7 #q17 #t69))
           ((pick v4 v8 #o2 #g9 #o3 #o4))
           ((place v4 v8 #o2 #g9 #o3 #o4))
           ((pick v4 v8 p10 #g9 #o3 #o4))
           ((place v4 v8 p10 #g9 #o3 #o4))
           ((pick v4 v8 p5 #g9 #q22 #t74))
           ((place v4 v8 p5 #g9 #q22 #t74))
           ((pick v4 v8 v9 #g9 #q21 #t73))
           ((place v4 v8 v9 #g9 #q21 #t73))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q6', '#t16'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g4', '#q6', '#t6'))
           Action(name='move_base', args=('#q6', '#q14', '#t64'))
           Action(name='place', args=('v4', 'v8', 'p5', '#g4', '#q14', '#t48'))
           Action(name='move_base', args=('#q14', '#q3', '#t63'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g2', '#q3', '#t3'))
           Action(name='move_base', args=('#q3', '#q12', '#t66'))
           Action(name='place', args=('v4', 'v12', 'p6', '#g2', '#q12', '#t26'))
           Action(name='move_base', args=('#q12', '#q5', '#t46'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g3', '#q5', '#t5'))
           Action(name='move_base', args=('#q5', '#q13', '#t52'))
           Action(name='place', args=('v4', 'v14', 'p7', '#g3', '#q13', '#t39'))
           Action(name='move_base', args=('#q13', '#q1', '#t65'))
           Action(name='pick', args=('v4', 'v16', 'v17', '#g1', '#q1', '#t1'))
           Action(name='move_base', args=('#q1', '#q10', '#t36'))
           Action(name='place', args=('v4', 'v16', 'p8', '#g1', '#q10', '#t20'))
           Action(name='move_base', args=('#q10', '#q2', '#t22'))
           Action(name='pick', args=('v4', 'v18', 'v19', '#g0', '#q2', '#t2'))
           Action(name='move_base', args=('#q2', '#q11', '#t34'))
           Action(name='place', args=('v4', 'v18', 'p9', '#g0', '#q11', '#t21'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-traj-pose:('#t20', 'v12', 'p6')->()`, which impeded executing the action place('v4', 'v16', 'p8', '#g1', '#q10', '#t20').
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The goal is to place all five objects (v8, v12, v14, v16, v18) on surface v20. All objects are currently on surface v11 or v10, or a combination of them. The robot arm `v4` is initially handempty. We need to pick each object from its initial pose and place it on a valid pose on `v20`. Since some target poses are given (p5, p6, p7, p8, p9) and explicitly stated as supported by v20, we will prioritize these for placing the objects.
           
           The previous plan failed because placing `v16` at `p8` caused a collision with `v12` at `p6`. This indicates that `p6` and `p8` are too close or overlapping. We should adjust the placement of these objects or choose other poses. We also have #o2 as an available pose on v20.
           
           We will iterate through the objects, picking them up and placing them on `v20`. We will use the available `p` poses, but ensure they are collision-free. We should check the AABBs of the objects to estimate suitable placements on `v20`.
           Object `v8` (AABB: ((-0.115, 0.015), (-0.045, 0.085)))
           Object `v12` (AABB: ((0.148, 0.387), (0.235, 0.473)))
           Object `v14` (AABB: ((-0.118, -0.087), (-0.048, -0.017)))
           Object `v16` (AABB: ((0.067, -0.439), (0.166, -0.34)))
           Object `v18` (AABB: ((0.156, -0.332), (0.253, -0.235)))
           Surface `v20` (AABB: ((-0.135, -0.135), (0.135, 0.135)))
           
           The goal poses p5, p6, p7, p8, p9 are all on v20.
           p5: (-0.08, 0.05, 0.782)
           p6: (0.08, 0.05, 0.782)
           p7: (-0.08, -0.05, 0.782)
           p8: (0.08, -0.05, 0.782)
           p9: (0.0, 0.0, 0.782)
           
           The previous failure indicates that placing `v16` at `p8` caused a collision with `v12` at `p6`. These two poses are (0.08, -0.05) and (0.08, 0.05) respectively. This makes sense as they are very close.
           Let's try placing objects at the designated `p` poses but distribute them carefully to avoid collisions, or use the general #o2 if needed.
           
           Let's use p5, p7, p9 for v8, v14, v18 as they are at different corners of v20.
           And use #o2 for v12 and v16, to avoid collisions with other objects when using p6 and p8 which are close to each other.
           
           1. Pick `v8` from `v9` and place it at `p5` on `v20`.
           2. Pick `v12` from `v13` and place it at `#o2` on `v20`.
           3. Pick `v14` from `v15` and place it at `p7` on `v20`.
           4. Pick `v16` from `v17` and place it at `p14` (which is (0.0, 0.0, 0.782) on v20). This is also a shared pose for other objects in the initial state but it can be used for placing a different object.
           5. Pick `v18` from `v19` and place it at `p9` on `v20`.
           
           This strategy attempts to use distinct poses on `v20` to avoid collisions. Note that `p9` and `p14` are identical and are both centered. We will avoid placing two objects at these same coordinates. We will use p9 and use a new #o2 for v16. We need to give a unique value for #o2 for v12 and a unique value for #o2 for v16. Let's use p11, p12, p13 for objects instead of the dynamically generated #o2 to simplify the plan and use pre-defined poses.
           
           Let's try to place them in the following order and target poses:
           - v8 to p5
           - v12 to p6
           - v14 to p7
           - v16 to p8
           - v18 to p9
           
           We know p6 and p8 caused a collision.
           Let's re-evaluate placement on v20 (AABB: ((-0.135, -0.135), (0.135, 0.135))).
           p5 (-0.08, 0.05, 0.782)
           p6 (0.08, 0.05, 0.782)
           p7 (-0.08, -0.05, 0.782)
           p8 (0.08, -0.05, 0.782)
           p9 (0.0, 0.0, 0.782)
           
           These positions are for the center of the base of the objects. We should consider the size of the objects to ensure they don't overlap.
           `v8` (AABB: ((-0.115, 0.015), (-0.045, 0.085))) - about 0.07x0.07
           `v12` (AABB: ((0.148, 0.387), (0.235, 0.473))) - about 0.08x0.08
           `v14` (AABB: ((-0.118, -0.087), (-0.048, -0.017))) - about 0.07x0.07
           `v16` (AABB: ((0.067, -0.439), (0.166, -0.34))) - about 0.09x0.09
           `v18` (AABB: ((0.156, -0.332), (0.253, -0.235))) - about 0.09x0.09
           
           All objects are small enough to fit on `v20`. The previous collision between p6 and p8 indicates that the bounding boxes of the objects at these poses are overlapping.
           
           Let's use `p5`, `p7`, `p10`, `p12`, `p14` for the five objects.
           p5: (-0.08, 0.05, 0.782)
           p7: (-0.08, -0.05, 0.782)
           p10: (-0.08, 0.05, 0.782) - same as p5
           p12: (-0.08, -0.05, 0.782) - same as p7
           p14: (0.0, 0.0, 0.782)
           
           This means we only have 3 unique known poses on v20. We need 5. So, we must use #o2 for two objects.
           Let's place them as follows:
           v8 to p5
           v12 to p6 (new coordinate to avoid collision)
           v14 to p7
           v16 to p8 (new coordinate to avoid collision)
           v18 to p9
           
           The problem states that there are predefined continuous values for p5 through p14, and that if a plan uses some object #<name> (starting with '#') such that `pose(obj, #<name>)` is in the initial state for some `obj`, then we must provide a continuous value for the pose. In this case, #o2 is such a pose.
           
           Since p6 and p8 were problematic when used in close proximity, let's use the unique poses that are given for some objects.
           We know that `supported(v8, p5, v20)`, `supported(v12, p6, v20)`, `supported(v14, p7, v20)`, `supported(v16, p8, v20)`, `supported(v18, p9, v20)` are all true. These are the poses in the goal state. The previous plan tried to use these. Let's see if we can use a different order of placement or ensure trajectories are clear.
           
           The AABBs of objects are small enough that if their center points are spread out enough, they should not collide.
           p5: (-0.08, 0.05, 0.782)
           p6: (0.08, 0.05, 0.782)
           p7: (-0.08, -0.05, 0.782)
           p8: (0.08, -0.05, 0.782)
           p9: (0.0, 0.0, 0.782)
           
           These positions are fairly well spread out on `v20` (AABB: ((-0.135, -0.135), (0.135, 0.135))). The issue from the previous plan likely stems from `test-cfree-traj-pose:('#t20', 'v12', 'p6')`. This means the trajectory for `v16` while placing it at `p8` collided with `v12` *already placed* at `p6`. This implies that the current placement of `v12` at `p6` is blocking the placement of `v16` at `p8`. So, we should place objects in an order that minimizes future collisions.
           
           Let's try placing the objects from the outside in or by minimizing the robot's movement.
           Objects are initially at:
           v8: v9 (0.148, 0.302, 0.781)
           v12: v13 (0.191, 0.43, 0.781)
           v14: v15 (-0.048, -0.37, 0.781)
           v16: v17 (0.116, -0.39, 0.781)
           v18: v19 (0.204, -0.284, 0.781)
           
           Target poses on v20 are:
           p5: (-0.08, 0.05, 0.782)
           p6: (0.08, 0.05, 0.782)
           p7: (-0.08, -0.05, 0.782)
           p8: (0.08, -0.05, 0.782)
           p9: (0.0, 0.0, 0.782)
           
           Let's try placing the objects in an order that makes sense for the robot's base configuration. The robot starts at `v3` (-1.0, 0.0, 0.0). We should also try to use the base configurations (#q values) that are closest to `v3` or each other to minimize movement cost.
           
           Let's choose the base configurations to minimize movement:
           - Pick v8 from v9 with #q21, place at p5 with #q22 (or another #q value).
           - Pick v12 from v13 with #q18, place at p6 with #q16.
           - Pick v14 from v15 with #q20, place at p7 with #q19.
           - Pick v16 from v17 with #q15, place at p8 with #q24.
           - Pick v18 from v19 with #q17, place at p9 with #q23.
           
           Consider the order for placement again, ensuring the placement of one object doesn't block the trajectory for another. It might be better to place objects at the center first, or the ones that require larger trajectories last. Let's try picking and placing the objects one by one using the designated `p` poses, but re-evaluating the placement order to avoid the specific collision that occurred last time. The previous collision was `v16` at `p8` with `v12` at `p6`. This means `v12` should not be at `p6` when `v16` is being placed at `p8`. This is simply a matter of order of placement. So, if we place `v16` first and then `v12`, it should avoid that specific collision.
           
           Let's try this order:
           1. `v16` to `p8`
           2. `v12` to `p6`
           3. `v8` to `p5`
           4. `v14` to `p7`
           5. `v18` to `p9`
           
           This order places the object that previously caused a trajectory collision first, potentially clearing the way for subsequent placements.
           
           --Plan--:
           (move_base v3 #q15 #t76)
           (pick v4 v16 v17 #g5 #q15 #t67)
           (move_base #q15 #q24 #o0)
           (place v4 v16 p8 #g5 #q24 #t85)
           (move_base #q24 #q18 #o0)
           (pick v4 v12 v13 #g6 #q18 #t70)
           (move_base #q18 #q16 #o0)
           (place v4 v12 p6 #g6 #q16 #t68)
           (move_base #q16 #q21 #o0)
           (pick v4 v8 v9 #g9 #q21 #t73)
           (move_base #q21 #q22 #o0)
           (place v4 v8 p5 #g9 #q22 #t74)
           (move_base #q22 #q20 #o0)
           (pick v4 v14 v15 #g8 #q20 #t72)
           (move_base #q20 #q19 #o0)
           (place v4 v14 p7 #g8 #q19 #t71)
           (move_base #q19 #q17 #o0)
           (pick v4 v18 v19 #g7 #q17 #t69)
           (move_base #q17 #q23 #o0)
           (place v4 v18 p9 #g7 #q23 #t75)

