User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g21: object
           #g22: object
           #g23: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q60: object
           #q61: object
           #q62: object
           #q63: object
           #q64: object
           #q65: object
           #t180: object
           #t181: object
           #t182: object
           #t183: object
           #t184: object
           #t185: object
           #t186: object
           #t187: object
           #t188: object
           #t189: object
           #t190: object
           #t191: object
           @sink: object
           @stove: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p15: object
           p16: object
           p17: object
           p18: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v48: object
           v49: object
           v5: object
           v50: object
           v51: object
           v6: object
           v60: object
           v61: object
           v62: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v15 is a pose with position (0.224, 0.235, 0.781) and quaternion (0.0, 0.0, 0.999, 0.047).
           Object p11 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v13 is a pose with position (0.033, 0.266, 0.781) and quaternion (0.0, 0.0, 0.233, 0.972).
           Object p5 is a pose with position (-0.02, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p14 is a pose with position (0.02, 0.0, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (0.04, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (0.0, 0.0, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p12 is a pose with position (0.04, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p16 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.02, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p15 is a pose with position (-0.02, 0.0, 0.781) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p3 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object p17 is a pose with position (0.02, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p4 is a pose with position (0.02, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.186, 0.197), (0.262, 0.273)).
           Object p18 is a pose with position (-0.02, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.015, -0.035), (0.055, 0.035)).
           Object p8 is a pose with position (-0.02, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v9 is a pose with position (-0.16, 0.266, 0.781) and quaternion (0.0, 0.0, 0.934, -0.357).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p3)
           Atom supported(v8, p3, v16)
           Atom pose(v14, p5)
           Atom supported(v14, p5, v10)
           Atom supported(v14, p5, v16)
           Atom pose(v12, p4)
           Atom supported(v12, p4, v16)
           Atom supported(v12, p4, v10)
           Atom supported(v8, p3, v10)
           Atom kin(v32, v38, p5, v34, v35, v36)
           Atom kin(v32, v33, p3, v34, v35, v36)
           Atom kin(v32, v37, p4, v34, v35, v36)
           Atom pose(v12, p7)
           Atom supported(v12, p7, v16)
           Atom supported(v12, p7, v10)
           Atom pose(v14, p8)
           Atom supported(v14, p8, v16)
           Atom pose(v8, p6)
           Atom supported(v8, p6, v16)
           Atom supported(v8, p6, v10)
           Atom supported(v14, p8, v10)
           Atom kin(v32, v33, p6, v34, v35, v36)
           Atom kin(v32, v37, p7, v34, v35, v36)
           Atom kin(v32, v38, p8, v34, v35, v36)
           Atom pose(v8, p9)
           Atom supported(v8, p9, v16)
           Atom pose(v12, p10)
           Atom supported(v12, p10, v16)
           Atom supported(v12, p10, v10)
           Atom kin(v32, v37, p10, v51, v35, v36)
           Atom kin(v32, v33, p9, v48, v49, v50)
           Atom pose(v12, p12)
           Atom supported(v12, p12, v16)
           Atom supported(v12, p12, v10)
           Atom pose(v8, p11)
           Atom supported(v8, p11, v16)
           Atom kin(v32, v33, p11, v48, v49, v50)
           Atom kin(v32, v37, p12, v51, v35, v36)
           Atom pose(v8, p13)
           Atom supported(v8, p13, v16)
           Atom pose(v14, p15)
           Atom supported(v14, p15, v10)
           Atom supported(v14, p15, v16)
           Atom pose(v12, p14)
           Atom supported(v12, p14, v16)
           Atom supported(v12, p14, v10)
           Atom supported(v8, p13, v10)
           Atom supported(v12, p14, v11)
           Atom supported(v8, p13, v11)
           Atom kin(v32, v37, p14, v61, v35, v36)
           Atom supported(v14, p15, v11)
           Atom kin(v32, v38, p15, v62, v35, v36)
           Atom kin(v32, v33, p13, v60, v35, v36)
           Atom pose(v12, p17)
           Atom supported(v12, p17, v16)
           Atom supported(v12, p17, v10)
           Atom pose(v14, p18)
           Atom supported(v14, p18, v16)
           Atom pose(v8, p16)
           Atom supported(v8, p16, v16)
           Atom supported(v8, p16, v10)
           Atom supported(v14, p18, v10)
           Atom kin(v32, v33, p16, v60, v35, v36)
           Atom kin(v32, v37, p17, v61, v35, v36)
           Atom kin(v32, v38, p18, v62, v35, v36)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g22)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g21)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g23)
           Atom bconf(#q65)
           Atom atraj(#t185)
           Atom kin(v4, v14, p18, #g22, #q65, #t185)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p5, #g22, #o3, #o4)
           Atom kin(v4, v14, p15, #g22, #o3, #o4)
           Atom kin(v4, v14, p8, #g22, #o3, #o4)
           Atom bconf(#q62)
           Atom atraj(#t182)
           Atom kin(v4, v14, v15, #g22, #q62, #t182)
           Atom kin(v4, v8, p3, #g23, #o3, #o4)
           Atom kin(v4, v8, p9, #g23, #o3, #o4)
           Atom bconf(#q64)
           Atom atraj(#t184)
           Atom kin(v4, v8, p16, #g23, #q64, #t184)
           Atom bconf(#q63)
           Atom atraj(#t183)
           Atom kin(v4, v8, v9, #g23, #q63, #t183)
           Atom kin(v4, v8, p13, #g23, #o3, #o4)
           Atom kin(v4, v8, p11, #g23, #o3, #o4)
           Atom kin(v4, v8, p6, #g23, #o3, #o4)
           Atom bconf(#q61)
           Atom atraj(#t181)
           Atom kin(v4, v12, v13, #g21, #q61, #t181)
           Atom kin(v4, v12, p4, #g21, #o3, #o4)
           Atom kin(v4, v12, p12, #g21, #o3, #o4)
           Atom kin(v4, v12, p10, #g21, #o3, #o4)
           Atom kin(v4, v12, p7, #g21, #o3, #o4)
           Atom kin(v4, v12, p17, #g21, #o3, #o4)
           Atom bconf(#q60)
           Atom atraj(#t180)
           Atom kin(v4, v12, p14, #g21, #q60, #t180)
           Atom basemotion(#q65, #o0, v3)
           Atom basemotion(#q65, #o0, #q65)
           Atom btraj(#t191)
           Atom basemotion(v3, #t191, #q65)
           Atom basemotion(#q63, #o0, v3)
           Atom basemotion(#q63, #o0, #q63)
           Atom btraj(#t189)
           Atom basemotion(v3, #t189, #q63)
           Atom basemotion(#q65, #o0, #q63)
           Atom basemotion(#q63, #o0, #q65)
           Atom basemotion(#q64, #o0, v3)
           Atom basemotion(#q64, #o0, #q64)
           Atom btraj(#t190)
           Atom basemotion(v3, #t190, #q64)
           Atom basemotion(#q63, #o0, #q64)
           Atom basemotion(#q64, #o0, #q63)
           Atom basemotion(#q65, #o0, #q64)
           Atom basemotion(#q64, #o0, #q65)
           Atom basemotion(#q62, #o0, #q63)
           Atom basemotion(#q62, #o0, #q64)
           Atom basemotion(#q62, #o0, #q65)
           Atom basemotion(#q62, #o0, v3)
           Atom basemotion(#q63, #o0, #q62)
           Atom basemotion(#q64, #o0, #q62)
           Atom basemotion(#q65, #o0, #q62)
           Atom basemotion(#q62, #o0, #q62)
           Atom btraj(#t188)
           Atom basemotion(v3, #t188, #q62)
           Atom basemotion(#q60, #o0, #q63)
           Atom basemotion(#q60, #o0, #q64)
           Atom basemotion(#q60, #o0, v3)
           Atom basemotion(#q63, #o0, #q60)
           Atom basemotion(#q64, #o0, #q60)
           Atom basemotion(#q60, #o0, #q60)
           Atom btraj(#t186)
           Atom basemotion(v3, #t186, #q60)
           Atom basemotion(#q65, #o0, #q60)
           Atom basemotion(#q60, #o0, #q65)
           Atom basemotion(#q62, #o0, #q60)
           Atom basemotion(#q60, #o0, #q62)
           Atom basemotion(#q61, #o0, #q63)
           Atom basemotion(#q61, #o0, #q64)
           Atom basemotion(#q61, #o0, v3)
           Atom basemotion(#q63, #o0, #q61)
           Atom basemotion(#q64, #o0, #q61)
           Atom basemotion(#q61, #o0, #q61)
           Atom btraj(#t187)
           Atom basemotion(v3, #t187, #q61)
           Atom basemotion(#q60, #o0, #q61)
           Atom basemotion(#q61, #o0, #q60)
           Atom basemotion(#q65, #o0, #q61)
           Atom basemotion(#q61, #o0, #q65)
           Atom basemotion(#q62, #o0, #q61)
           Atom basemotion(#q61, #o0, #q62)
           Atom kin(v4, v12, #o2, #g21, #o3, #o4)
           Atom kin(v4, v8, #o2, #g23, #o3, #o4)
           Atom kin(v4, v14, #o2, #g22, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q64, #o0, #o3)
           Atom basemotion(#o3, #o0, #q64)
           Atom basemotion(#q63, #o0, #o3)
           Atom basemotion(#o3, #o0, #q63)
           Atom basemotion(#q61, #o0, #o3)
           Atom basemotion(#o3, #o0, #q61)
           Atom basemotion(#q60, #o0, #o3)
           Atom basemotion(#o3, #o0, #q60)
           Atom basemotion(#q65, #o0, #o3)
           Atom basemotion(#o3, #o0, #q65)
           Atom basemotion(#q62, #o0, #o3)
           Atom basemotion(#o3, #o0, #q62)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q60 #o0))
           ((move_base #o3 #q61 #o0))
           ((move_base #o3 #q62 #o0))
           ((move_base #o3 #q63 #o0))
           ((move_base #o3 #q64 #o0))
           ((move_base #o3 #q65 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q60 #o3 #o0))
           ((move_base #q60 #q60 #o0))
           ((move_base #q60 #q61 #o0))
           ((move_base #q60 #q62 #o0))
           ((move_base #q60 #q63 #o0))
           ((move_base #q60 #q64 #o0))
           ((move_base #q60 #q65 #o0))
           ((move_base #q60 v3 #o0))
           ((move_base #q61 #o3 #o0))
           ((move_base #q61 #q60 #o0))
           ((move_base #q61 #q61 #o0))
           ((move_base #q61 #q62 #o0))
           ((move_base #q61 #q63 #o0))
           ((move_base #q61 #q64 #o0))
           ((move_base #q61 #q65 #o0))
           ((move_base #q61 v3 #o0))
           ((move_base #q62 #o3 #o0))
           ((move_base #q62 #q60 #o0))
           ((move_base #q62 #q61 #o0))
           ((move_base #q62 #q62 #o0))
           ((move_base #q62 #q63 #o0))
           ((move_base #q62 #q64 #o0))
           ((move_base #q62 #q65 #o0))
           ((move_base #q62 v3 #o0))
           ((move_base #q63 #o3 #o0))
           ((move_base #q63 #q60 #o0))
           ((move_base #q63 #q61 #o0))
           ((move_base #q63 #q62 #o0))
           ((move_base #q63 #q63 #o0))
           ((move_base #q63 #q64 #o0))
           ((move_base #q63 #q65 #o0))
           ((move_base #q63 v3 #o0))
           ((move_base #q64 #o3 #o0))
           ((move_base #q64 #q60 #o0))
           ((move_base #q64 #q61 #o0))
           ((move_base #q64 #q62 #o0))
           ((move_base #q64 #q63 #o0))
           ((move_base #q64 #q64 #o0))
           ((move_base #q64 #q65 #o0))
           ((move_base #q64 v3 #o0))
           ((move_base #q65 #o3 #o0))
           ((move_base #q65 #q60 #o0))
           ((move_base #q65 #q61 #o0))
           ((move_base #q65 #q62 #o0))
           ((move_base #q65 #q63 #o0))
           ((move_base #q65 #q64 #o0))
           ((move_base #q65 #q65 #o0))
           ((move_base #q65 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q60 #t186))
           ((move_base v3 #q61 #t187))
           ((move_base v3 #q62 #t188))
           ((move_base v3 #q63 #t189))
           ((move_base v3 #q64 #t190))
           ((move_base v3 #q65 #t191))
           ((pick v4 v12 #o2 #g21 #o3 #o4))
           ((place v4 v12 #o2 #g21 #o3 #o4))
           ((pick v4 v12 p10 #g21 #o3 #o4))
           ((place v4 v12 p10 #g21 #o3 #o4))
           ((pick v4 v12 p12 #g21 #o3 #o4))
           ((place v4 v12 p12 #g21 #o3 #o4))
           ((pick v4 v12 p14 #g21 #q60 #t180))
           ((place v4 v12 p14 #g21 #q60 #t180))
           ((pick v4 v12 p17 #g21 #o3 #o4))
           ((place v4 v12 p17 #g21 #o3 #o4))
           ((pick v4 v12 p4 #g21 #o3 #o4))
           ((place v4 v12 p4 #g21 #o3 #o4))
           ((pick v4 v12 p7 #g21 #o3 #o4))
           ((place v4 v12 p7 #g21 #o3 #o4))
           ((pick v4 v12 v13 #g21 #q61 #t181))
           ((place v4 v12 v13 #g21 #q61 #t181))
           ((pick v4 v14 #o2 #g22 #o3 #o4))
           ((place v4 v14 #o2 #g22 #o3 #o4))
           ((pick v4 v14 p15 #g22 #o3 #o4))
           ((place v4 v14 p15 #g22 #o3 #o4))
           ((pick v4 v14 p18 #g22 #q65 #t185))
           ((place v4 v14 p18 #g22 #q65 #t185))
           ((pick v4 v14 p5 #g22 #o3 #o4))
           ((place v4 v14 p5 #g22 #o3 #o4))
           ((pick v4 v14 p8 #g22 #o3 #o4))
           ((place v4 v14 p8 #g22 #o3 #o4))
           ((pick v4 v14 v15 #g22 #q62 #t182))
           ((place v4 v14 v15 #g22 #q62 #t182))
           ((pick v4 v8 #o2 #g23 #o3 #o4))
           ((place v4 v8 #o2 #g23 #o3 #o4))
           ((pick v4 v8 p11 #g23 #o3 #o4))
           ((place v4 v8 p11 #g23 #o3 #o4))
           ((pick v4 v8 p13 #g23 #o3 #o4))
           ((place v4 v8 p13 #g23 #o3 #o4))
           ((pick v4 v8 p16 #g23 #q64 #t184))
           ((place v4 v8 p16 #g23 #q64 #t184))
           ((pick v4 v8 p3 #g23 #o3 #o4))
           ((place v4 v8 p3 #g23 #o3 #o4))
           ((pick v4 v8 p6 #g23 #o3 #o4))
           ((place v4 v8 p6 #g23 #o3 #o4))
           ((pick v4 v8 p9 #g23 #o3 #o4))
           ((place v4 v8 p9 #g23 #o3 #o4))
           ((pick v4 v8 v9 #g23 #q63 #t183))
           ((place v4 v8 v9 #g23 #q63 #t183))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q57', '#t172'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g20', '#q57', '#t166'))
           Action(name='move_base', args=('#q57', '#q58', '#t177'))
           Action(name='place', args=('v4', 'v8', 'p16', '#g20', '#q58', '#t167'))
           Action(name='move_base', args=('#q58', '#q55', '#t178'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g18', '#q55', '#t164'))
           Action(name='move_base', args=('#q55', '#q54', '#t179'))
           Action(name='place', args=('v4', 'v12', 'p14', '#g18', '#q54', '#t163'))
           Action(name='move_base', args=('#q54', '#q56', '#t175'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g19', '#q56', '#t165'))
           Action(name='move_base', args=('#q56', '#q59', '#t176'))
           Action(name='place', args=('v4', 'v14', 'p18', '#g19', '#q59', '#t168'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v12', 'p14', 'v8', 'p16')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The goal is to place objects v8, v12, and v14 on surface v16.
           Initially, v8 is at v9 (supported by v11), v12 is at v13 (supported by v11), and v14 is at v15 (supported by v11).
           The robot arm v4 is empty, and the base is at v3.
           
           The previous plan failed because placing v12 at p14 created a collision with v8 at p16. Therefore, when placing the objects on v16, we need to choose collision-free poses. We'll use poses on v16 that are currently available and compute new poses with '#' if needed to avoid collisions.
           
           Let's try to place v8 on p16, v12 on p14, and v14 on p18. These are all on v16. We need to ensure that the poses are collision-free with respect to each other.
           
           To avoid the previous collision between v12 at p14 and v8 at p16, we can try to find an alternative pose for one of them or use the provided #o2 pose as a new collision-free pose.
           
           Let's try to place v8 at p16, v12 at p14 and v14 at p18.
           The AABB of v8 is ((-0.035, -0.035), (0.035, 0.035)).
           The AABB of v12 is ((-0.015, -0.035), (0.055, 0.035)).
           The AABB of v14 is ((0.186, 0.197), (0.262, 0.273)).
           The AABB of v16 is ((-0.135, -0.135), (0.135, 0.135)).
           
           The poses p16, p14, p18 are defined relative to the object's origin. The surface v16 is a small surface (0.27x0.27m). It is likely that placing three objects on it simultaneously may cause collisions if the chosen poses are too close.
           We'll try to use p16, p14, and p18 which are already provided and are supported by v16.
           Since the previous plan had a collision placing v12 at p14 while v8 was at p16, we'll try a different order or different poses for placing the objects.
           
           Let's pick v8 from v9 and place it at p16.
           Then pick v12 from v13 and place it at p14.
           Then pick v14 from v15 and place it at p18.
           
           Since placing v12 at p14 and v8 at p16 caused a collision, let's use #o2 for v12 and find a collision-free pose for it on v16.
           We'll place v8 at p16, v14 at p18, and then v12 at #o2, which we will define as a new pose on v16 that does not collide with the previously placed objects.
           
           The coordinates for p16 are (0.0, 0.0, 0.782), p14 are (0.02, 0.0, 0.781), and p18 are (-0.02, 0.0, 0.782). These are all very close and likely to collide. Let's make sure the provided poses are actually on v16. Yes, they are.
           
           Let's analyze the collision reported. `test-cfree-pose-pose:('v12', 'p14', 'v8', 'p16')->()`
           This indicates that v12 at p14 collides with v8 at p16.
           To avoid this, we will use #o2 to define a collision-free pose for v12 on v16, making sure it does not overlap with p16 or p18.
           
           Let's try the plan:
           1. Pick v8 from v9. (Base at q63)
           2. Place v8 at p16. (Base at q64)
           3. Pick v12 from v13. (Base at q61)
           4. Place v12 at #o2 (on v16). (Base at o3)
           5. Pick v14 from v15. (Base at q62)
           6. Place v14 at p18. (Base at q65)
           
           We need to make sure #o2 for v12 is far enough from p16 and p18.
           Since p16 is at (0.0, 0.0, 0.782) and p18 is at (-0.02, 0.0, 0.782), they are close.
           Let's define #o2 for v12 at a slightly different x position, keeping in mind the AABB of v16 (from -0.135 to 0.135 in x and y).
           
           v8 at p16: (0.0, 0.0, 0.782)
           v14 at p18: (-0.02, 0.0, 0.782)
           
           Let's try setting #o2 for v12 at (0.05, 0.05, 0.782) on v16. This should be a distinct enough pose.
           
           --Plan--:
           (move_base v3 #q63 #t189)
           (pick v4 v8 v9 #g23 #q63 #t183)
           (move_base #q63 #q64 #o0)
           (place v4 v8 p16 #g23 #q64 #t184)
           (move_base #q64 #q61 #o0)
           (pick v4 v12 v13 #g21 #q61 #t181)
           (move_base #q61 #o3 #o0)
           (place v4 v12 #o2 #g21 #o3 #o4)
           (move_base #o3 #q62 #o0)
           (pick v4 v14 v15 #g22 #q62 #t182)
           (move_base #q62 #q65 #o0)
           (place v4 v14 p18 #g22 #q65 #t185)
           
           --Poses--:
           (#o2 v12 v16): (0.05 0.05 0.782 0.0)

