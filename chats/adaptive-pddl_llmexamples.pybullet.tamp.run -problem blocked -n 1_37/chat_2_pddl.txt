User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v15, v16)
           Atom atbconf(v3)
           Atom handempty(v6)
           Atom aconf(v6, v7)
           Atom supported(v12, v13, v14)
           Atom pose(v12, v13)
           Atom graspable(v15)
           Atom stackable(v8, v18)
           Atom bconf(v3)
           Atom ataconf(v6, v7)
           Atom supported(v8, v9, v11)
           Atom graspable(v8)
           Atom stackable(v15, v10)
           Atom stackable(v12, v18)
           Atom arm(v6)
           Atom handempty(v4)
           Atom aconf(v4, v5)
           Atom atpose(v15, v16)
           Atom type(v12, v17)
           Atom controllable(v4)
           Atom atpose(v8, v9)
           Atom supported(v15, v16, v11)
           Atom ataconf(v4, v5)
           Atom canmove()
           Atom pose(v8, v9)
           Atom arm(v4)
           Atom graspable(v12)
           Atom stackable(v12, v10)
           Atom atpose(v12, v13)
           Atom type(v8, v17)
           Atom stackable(v8, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom grasp(v8, #o1)
           Atom supported(v12, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v8, #o2, v18)
           Atom grasp(v15, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `new-axiom@0()`, which is an axiom representing the state `on(?green, v18)` and `type(?green, v17)`. In the initial state, we have `atpose(v8, v9)` and `supported(v8, v9, v11)`, which means `on(v8, v11)`. We also have `type(v8, v17)`. To satisfy the goal, we need to move `v8` to `v18`.
           
           Looking at the initial state, `v8` is `atpose(v8, v9)`. `v18` is a `supported` surface for `v8` (from `supported(v8, #o2, v18)`). We also have `type(v8, v17)`. Therefore, we need to pick up `v8` and place it on `v18`.
           
           The robot arm `v4` is `handempty(v4)` and `ataconf(v4, v5)`. The base is `atbconf(v3)`.
           
           To pick up `v8`, we need `kin(v4, v8, v9, #o1, #o3, #o4)`. This is available.
           To place `v8` on `v18`, we need `kin(v4, v8, #o2, #o1, #o3, #o4)` and `supported(v8, #o2, v18)`. These are also available.
           
           The plan will involve picking up `v8` from `v9` and placing it at `#o2` on `v18`. The base configuration `#o3` is used for the pick and place actions, but we are currently at `v3`. The `move_base` actions indicate we can move between `v3` and `#o3`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (place v4 v8 #o2 #o1 #o3 #o4)

