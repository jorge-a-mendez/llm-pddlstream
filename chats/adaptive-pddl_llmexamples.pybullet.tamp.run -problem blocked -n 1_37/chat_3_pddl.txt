User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom pose(v15, v16)
           Atom atbconf(v3)
           Atom handempty(v6)
           Atom aconf(v6, v7)
           Atom supported(v12, v13, v14)
           Atom pose(v12, v13)
           Atom graspable(v15)
           Atom stackable(v8, v18)
           Atom bconf(v3)
           Atom ataconf(v6, v7)
           Atom supported(v8, v9, v11)
           Atom graspable(v8)
           Atom stackable(v15, v10)
           Atom stackable(v12, v18)
           Atom arm(v6)
           Atom handempty(v4)
           Atom aconf(v4, v5)
           Atom atpose(v15, v16)
           Atom type(v12, v17)
           Atom controllable(v4)
           Atom atpose(v8, v9)
           Atom supported(v15, v16, v11)
           Atom ataconf(v4, v5)
           Atom canmove()
           Atom pose(v8, v9)
           Atom arm(v4)
           Atom graspable(v12)
           Atom stackable(v12, v10)
           Atom atpose(v12, v13)
           Atom type(v8, v17)
           Atom stackable(v8, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v12, #o1)
           Atom grasp(v8, #g0)
           Atom supported(v12, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #p0)
           Atom supported(v8, #p0, v18)
           Atom grasp(v15, #o1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t2)
           Atom kin(v4, v8, #p0, #g0, #q1, #t2)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t1)
           Atom basemotion(v3, #t1, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(v3, #o0, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, v3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q1 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t1))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p0 #g0 #q1 #t2))
           ((place v4 v8 #p0 #g0 #q1 #t2))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects: `v15`, `v12`, and `v8`, which are all graspable. `v15` is currently at pose `v16` and supported by `v11`. `v12` is at pose `v13` and supported by `v14`. `v8` is at pose `v9` and supported by `v11`.
           
           The robot has two arms, `v4` and `v6`, both of which are currently empty. The robot's base is at configuration `v3`.
           
           The goal `new-axiom@0()` can be satisfied if `on(?green, v18)` and `type(?green, v17)` are true.
           From the initial state, we have `type(v12, v17)` and `type(v8, v17)`. This suggests that either `v12` or `v8` could be the `?green` object. If `v12` is `?green`, then we need `on(v12, v18)`. If `v8` is `?green`, then we need `on(v8, v18)`.
           
           From the initial state, we have `supported(v12, #o2, v18)` and `supported(v8, #p0, v18)`. These indicate potential placements for `v12` and `v8` on `v18` that would satisfy the `on` predicate if the objects are at those poses.
           
           Let's aim to place `v8` on `v18` at pose `#p0`.
           `v8` is currently at `v9`. We can pick `v8` with arm `v4` from `v9` and then place it on `v18` at `#p0`.
           
           To pick `v8` from `v9`, we need to be at base configuration `q0`. Currently, we are at `v3`. So, we need to `move_base` from `v3` to `q0`.
           Then we can `pick` `v8` from `v9` using arm `v4`.
           After picking, we will be holding `v8`. To place it on `v18` at `#p0`, we need to be at base configuration `q1`. So, we need to `move_base` from `q0` to `q1`.
           Finally, we `place` `v8` at `#p0` using arm `v4`. This will make `on(v8, v18)` true (since `supported(v8, #p0, v18)` is given), and `type(v8, v17)` is also given. Thus, `new-axiom@0()` will be satisfied.
           
           --Plan--:
           (move_base v3 #q0 #t1)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q1 #o0)
           (place v4 v8 #p0 #g0 #q1 #t2)

