User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom mode(v11)
           Atom rover(v12)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom objective(v20)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom camera(v10)
           Atom rock(v4)
           Atom objective(v17)
           Atom rock(v3)
           Atom free(v12, v16)
           Atom atconf(v12, v13)
           Atom rover(v14)
           Atom free(v14, v16)
           Atom type(v7, v6)
           Atom type(v5, v6)
           Atom conf(v14, v15)
           Atom type(v3, v2)
           Atom rock(v8)
           Atom rock(v5)
           Atom conf(v12, v13)
           Atom atconf(v14, v15)
           Atom objective(v19)
           Atom store(v16)
           Atom type(v8, v6)
           Atom objective(v18)
           Atom rock(v7)
           Atom lander(v9)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #o5, v4)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v1)
           Atom above(v12, #o5, v8)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v7)
           Atom above(v14, #o5, v5)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v12, #o3, #o2, #o0)
           Atom motion(v12, #o5, #o2, #o0)
           Atom motion(v12, #o0, #o2, v13)
           Atom motion(v12, #o0, #o2, #o5)
           Atom motion(v12, #o0, #o2, #o0)
           Atom motion(v12, #o0, #o2, #o3)
           Atom motion(v12, v13, #o2, #o0)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o3, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o0)
           Atom motion(v14, v15, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o3)
           Atom motion(v14, #o0, #o2, #o0)
           Atom motion(v14, #o0, #o2, v15)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o0 #o2 #o0))
           ((move v12 #o0 #o2 #o3))
           ((move v12 #o0 #o2 #o5))
           ((move v12 #o0 #o2 v13))
           ((move v12 #o3 #o2 #o0))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o0))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 v13))
           ((move v12 v13 #o2 #o0))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 v13))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #o0 #o1 v9 v1))
           ((send_analysis v12 #o0 #o1 v9 v3))
           ((send_analysis v12 #o0 #o1 v9 v4))
           ((send_analysis v12 #o0 #o1 v9 v5))
           ((send_analysis v12 #o0 #o1 v9 v7))
           ((send_analysis v12 #o0 #o1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #o0 #o1 v9 v17 v11))
           ((send_image v12 #o0 #o1 v9 v18 v11))
           ((send_image v12 #o0 #o1 v9 v19 v11))
           ((send_image v12 #o0 #o1 v9 v20 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, `v12` and `v14`, each with a camera `v10` that supports mode `v11`. There are multiple rock samples (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`, `v19`, `v20`). Both rovers have a free store `v16` for samples and are at initial configurations (`v13` for `v12` and `v15` for `v14`). A lander `v9` is present for communication.
           
           The goal `new-axiom@0()` requires several conditions to be met:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: These are already true in the initial state.
           2. `free(v12, v16)` and `free(v14, v16)`: These are also already true in the initial state.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: This means images of objectives `v17`, `v18`, `v19`, `v20` in mode `v11` must be taken and sent to the lander.
           4. `type(?stone, v2)` and `receivedanalysis(?stone)`: This means at least one rock of type `v2` (which are `v1`, `v3`, `v4`) must be sampled and its analysis sent to the lander.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)`: This means at least one rock of type `v6` (which are `v5`, `v7`, `v8`) must be sampled and its analysis sent to the lander.
           
           To achieve the image transmission goals, we need to calibrate the camera, take images of the objectives, and then send those images. Rover `v12` is at configuration `v13` and can see all objectives at configuration `#o3`. Rover `v14` is at configuration `v15` and can also see all objectives at configuration `#o3`.
           To achieve the analysis goals, we need to sample rocks of type `v2` and `v6`, and then send the analysis. Both rovers `v12` and `v14` are above all rocks at configuration `#o5`. They can communicate with the lander at configuration `#o0`.
           
           Here's a possible plan:
           1. Calibrate rover `v12`'s camera `v10` at configuration `#o3` for objective `v17`.
           2. Take images of all four objectives (`v17`, `v18`, `v19`, `v20`) using rover `v12` at configuration `#o3`.
           3. Move rover `v12` to configuration `#o0` to enable communication.
           4. Send all four images to the lander `v9`.
           5. Move rover `v12` to configuration `#o5` to be above the rocks.
           6. Sample a rock of type `v2`, for example, `v1`, using rover `v12`.
           7. Sample a rock of type `v6`, for example, `v5`, using rover `v12`.
           8. Move rover `v12` to configuration `#o0` to enable communication.
           9. Send analysis of rock `v1` (type `v2`) and rock `v5` (type `v6`) to the lander.
           
           --Plan--:
           (calibrate v12 #o3 #o4 v17 v10)
           (take_image v12 #o3 #o4 v17 v10 v11)
           (calibrate v12 #o3 #o4 v18 v10)
           (take_image v12 #o3 #o4 v18 v10 v11)
           (calibrate v12 #o3 #o4 v19 v10)
           (take_image v12 #o3 #o4 v19 v10 v11)
           (calibrate v12 #o3 #o4 v20 v10)
           (take_image v12 #o3 #o4 v20 v10 v11)
           (move v12 v13 #o2 #o0)
           (send_image v12 #o0 #o1 v9 v17 v11)
           (send_image v12 #o0 #o1 v9 v18 v11)
           (send_image v12 #o0 #o1 v9 v19 v11)
           (send_image v12 #o0 #o1 v9 v20 v11)
           (move v12 #o0 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (sample_rock v12 #o5 v5 v16)
           (move v12 #o5 #o2 #o0)
           (send_analysis v12 #o0 #o1 v9 v1)
           (send_analysis v12 #o0 #o1 v9 v5)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed to achieve the goal `new-axiom@0()`. Let's re-evaluate the components of this axiom and ensure all are met.
           
           The goal `new-axiom@0()` requires:
           1. `atconf(v12, v13)`: Rover `v12` must be at configuration `v13`.
           2. `atconf(v14, v15)`: Rover `v14` must be at configuration `v15`.
           3. `free(v12, v16)`: Rover `v12` must have its store `v16` free.
           4. `free(v14, v16)`: Rover `v14` must have its store `v16` free.
           5. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: All four objectives must have their images taken and transmitted.
           6. `type(?stone, v2)` and `receivedanalysis(?stone)`: At least one rock of type `v2` (e.g., `v1`, `v3`, `v4`) must be sampled and its analysis transmitted.
           7. `type(?soil, v6)` and `receivedanalysis(?soil)`: At least one rock of type `v6` (e.g., `v5`, `v7`, `v8`) must be sampled and its analysis transmitted.
           
           In the initial state, conditions 1, 2, 3, and 4 are already met. The challenge is to ensure that after taking samples, the stores remain free, or are explicitly freed if needed. My previous plan sampled rocks, which made the store `full` and thus not `free`. The goal requires the store to be `free` at the *end* of the plan. This implies that after sampling, the sampled rocks must be dropped.
           
           Revised Plan Strategy:
           1. Calibrate `v12`'s camera for each objective.
           2. Take images of all four objectives (`v17`, `v18`, `v19`, `v20`) using `v12` at `#o3`.
           3. Move `v12` to `#o0` for communication.
           4. Send all four images to `v9`.
           5. Move `v12` to `#o5` for sampling.
           6. Sample a rock of type `v2` (e.g., `v1`).
           7. Drop the sampled rock to free the store `v16`. This needs to happen to satisfy `free(v12, v16)` at the end.
           8. Sample a rock of type `v6` (e.g., `v5`).
           9. Drop the sampled rock to free the store `v16`.
           10. Move `v12` to `#o0` to send analysis.
           11. Send analysis of both sampled rocks (`v1` and `v5`). Note: `analyzed` predicate persists even after dropping.
           12. Ensure both rovers are at their original configurations (`v13` and `v15`) if any movement took them away, and stores `v16` are free. In this plan, `v14` doesn't move and `v12` will end up at `#o0` but the goal specifically says `atconf(v12, v13)`. This means after all other actions, `v12` needs to return to `v13`.
           
           Let's refine the movement of `v12` for the final state of `atconf(v12, v13)`:
           - `v12` starts at `v13`.
           - Moves to `#o3` for imaging. (Implicit, since `imagevisible` is true at `#o3` and `atconf(v12, v13)`). We actually need to move it to `#o3` if it's not there. The initial state is `atconf(v12, v13)`, and `imagevisible` actions for `v12` are at `#o3`. So `v12` needs to move from `v13` to `#o3`.
           - Moves to `#o0` for sending images.
           - Moves to `#o5` for sampling.
           - Moves to `#o0` for sending analysis.
           - Finally, moves back to `v13`.
           
           Given the available `motion` predicates, we need to ensure the movements are valid.
           `motion(v12, v13, #o2, #o3)` exists.
           `motion(v12, #o3, #o2, #o0)` exists.
           `motion(v12, #o0, #o2, #o5)` exists.
           `motion(v12, #o5, #o2, #o0)` exists.
           `motion(v12, #o0, #o2, v13)` exists.
           
           --Plan--:
           (move v12 v13 #o2 #o3)
           (calibrate v12 #o3 #o4 v17 v10)
           (take_image v12 #o3 #o4 v17 v10 v11)
           (calibrate v12 #o3 #o4 v18 v10)
           (take_image v12 #o3 #o4 v18 v10 v11)
           (calibrate v12 #o3 #o4 v19 v10)
           (take_image v12 #o3 #o4 v19 v10 v11)
           (calibrate v12 #o3 #o4 v20 v10)
           (take_image v12 #o3 #o4 v20 v10 v11)
           (move v12 #o3 #o2 #o0)
           (send_image v12 #o0 #o1 v9 v17 v11)
           (send_image v12 #o0 #o1 v9 v18 v11)
           (send_image v12 #o0 #o1 v9 v19 v11)
           (send_image v12 #o0 #o1 v9 v20 v11)
           (move v12 #o0 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (send_analysis v12 #o5 #o1 v9 v1) ; send analysis from #o5
           (drop_rock v12 v16)
           (sample_rock v12 #o5 v5 v16)
           (send_analysis v12 #o5 #o1 v9 v5) ; send analysis from #o5
           (drop_rock v12 v16)
           (move v12 #o5 #o2 v13)

User:      The plan you provided contains the following invalid actions: `(send_analysis v12 #o5 #o1 v9 v1), (send_analysis v12 #o5 #o1 v9 v5)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o0 #o2 #o0))
           ((move v12 #o0 #o2 #o3))
           ((move v12 #o0 #o2 #o5))
           ((move v12 #o0 #o2 v13))
           ((move v12 #o3 #o2 #o0))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o0))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 v13))
           ((move v12 v13 #o2 #o0))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 v13))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #o0 #o1 v9 v1))
           ((send_analysis v12 #o0 #o1 v9 v3))
           ((send_analysis v12 #o0 #o1 v9 v4))
           ((send_analysis v12 #o0 #o1 v9 v5))
           ((send_analysis v12 #o0 #o1 v9 v7))
           ((send_analysis v12 #o0 #o1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #o0 #o1 v9 v17 v11))
           ((send_image v12 #o0 #o1 v9 v18 v11))
           ((send_image v12 #o0 #o1 v9 v19 v11))
           ((send_image v12 #o0 #o1 v9 v20 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The error in the previous plan was using `send_analysis` from configuration `#o5`, which is not a valid action. The `send_analysis` actions are only defined from configuration `#o0`. This means Rover `v12` must move to `#o0` to send analysis, not `#o5`.
           
           Let's correct the plan by ensuring all `send_analysis` actions happen from `#o0`, and then `v12` returns to `v13`.
           
           Revised Plan Strategy:
           1. Move `v12` to `#o3` for imaging.
           2. Calibrate `v12`'s camera for each objective.
           3. Take images of all four objectives (`v17`, `v18`, `v19`, `v20`).
           4. Move `v12` to `#o0` for communication.
           5. Send all four images to `v9`.
           6. Move `v12` to `#o5` for sampling.
           7. Sample a rock of type `v2` (e.g., `v1`).
           8. Sample a rock of type `v6` (e.g., `v5`).
           9. Move `v12` back to `#o0` for sending analysis.
           10. Send analysis of rock `v1` (type `v2`) and rock `v5` (type `v6`).
           11. Drop both sampled rocks to free the store `v16`. This can be done after sending analysis, as `analyzed` predicate persists.
           12. Finally, move `v12` back to its initial configuration `v13`.
           
           --Plan--:
           (move v12 v13 #o2 #o3)
           (calibrate v12 #o3 #o4 v17 v10)
           (take_image v12 #o3 #o4 v17 v10 v11)
           (calibrate v12 #o3 #o4 v18 v10)
           (take_image v12 #o3 #o4 v18 v10 v11)
           (calibrate v12 #o3 #o4 v19 v10)
           (take_image v12 #o3 #o4 v19 v10 v11)
           (calibrate v12 #o3 #o4 v20 v10)
           (take_image v12 #o3 #o4 v20 v10 v11)
           (move v12 #o3 #o2 #o0)
           (send_image v12 #o0 #o1 v9 v17 v11)
           (send_image v12 #o0 #o1 v9 v18 v11)
           (send_image v12 #o0 #o1 v9 v19 v11)
           (send_image v12 #o0 #o1 v9 v20 v11)
           (move v12 #o0 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (sample_rock v12 #o5 v5 v16)
           (move v12 #o5 #o2 #o0)
           (send_analysis v12 #o0 #o1 v9 v1)
           (send_analysis v12 #o0 #o1 v9 v5)
           (drop_rock v12 v16)
           (drop_rock v12 v16)
           (move v12 #o0 #o2 v13)

