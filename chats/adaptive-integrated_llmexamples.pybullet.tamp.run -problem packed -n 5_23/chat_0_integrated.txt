User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v15 is a pose with position (0.125, 0.442, 0.781) and quaternion (0.0, 0.0, 0.998, 0.068).
           Object v13 is a pose with position (-0.201, -0.556, 0.781) and quaternion (0.0, 0.0, -0.119, 0.993).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.179, -0.506), (0.27, -0.415)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.021, 0.506), (0.054, 0.582)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.284, -0.269), (-0.186, -0.171)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.085, 0.403), (0.164, 0.482)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.244, -0.598), (-0.159, -0.514)).
           Object v9 is a pose with position (0.224, -0.46, 0.781) and quaternion (0.0, 0.0, -0.19, 0.982).
           Object v19 is a pose with position (0.016, 0.544, 0.781) and quaternion (0.0, 0.0, 0.043, 0.999).
           Object v17 is a pose with position (-0.235, -0.22, 0.781) and quaternion (0.0, 0.0, -0.313, 0.95).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v16, v17, v11)
           Atom aconf(v6, v7)
           Atom bconf(v3)
           Atom pose(v12, v13)
           Atom supported(v14, v15, v11)
           Atom atpose(v14, v15)
           Atom ataconf(v6, v7)
           Atom canmove()
           Atom pose(v18, v19)
           Atom pose(v14, v15)
           Atom controllable(v4)
           Atom supported(v18, v19, v11)
           Atom graspable(v18)
           Atom stackable(v18, v10)
           Atom supported(v8, v9, v11)
           Atom stackable(v8, v20)
           Atom stackable(v14, v20)
           Atom graspable(v14)
           Atom ataconf(v4, v5)
           Atom arm(v6)
           Atom graspable(v16)
           Atom handempty(v4)
           Atom stackable(v16, v20)
           Atom atpose(v12, v13)
           Atom atpose(v16, v17)
           Atom stackable(v12, v20)
           Atom handempty(v6)
           Atom stackable(v16, v10)
           Atom arm(v4)
           Atom atbconf(v3)
           Atom atpose(v18, v19)
           Atom supported(v12, v13, v11)
           Atom stackable(v14, v10)
           Atom pose(v8, v9)
           Atom stackable(v12, v10)
           Atom graspable(v8)
           Atom atpose(v8, v9)
           Atom stackable(v18, v20)
           Atom graspable(v12)
           Atom pose(v16, v17)
           Atom aconf(v4, v5)
           Atom stackable(v8, v10)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #o1)
           Atom grasp(v18, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom supported(v18, #o2, v20)
           Atom supported(v16, #o2, v20)
           Atom grasp(v8, #o1)
           Atom supported(v12, #o2, v10)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v16, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v14, #o1)
           Atom supported(v14, #o2, v20)
           Atom supported(v8, #o2, v20)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects (v8, v12, v14, v16, v18) currently placed on a surface (v11). The goal is to move all these objects to another surface (v20). There are two arms, v4 and v6. Currently, v4 is ataconf v5 and handempty, and v6 is ataconf v7 and handempty. The robot is atbconf v3. All objects (v8, v12, v14, v16, v18) are graspable and stackable on both v10 and v20. The problem requires placing these objects on v20. There are no pick or place actions listed, except for the move_base action, which implies the objects are already in the goal poses or the problem is unsolvable.
           
           Given that the only available action is `move_base v3 v3 #o0`, and there are no pick or place actions available, it is impossible to move the objects from their current locations to v20. The initial state also does not contain any `on` predicates that are part of the goal. Therefore, the goal is unreachable with the given set of available actions.

