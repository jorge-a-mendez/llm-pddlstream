User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v15 is a base configuration with (x, y, theta) = (-1.0, -1.75, 0.0).
           Object v9 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.405, -2.346), (-1.395, -1.654)).
           Object v3 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.051, 1.434), (-0.951, 1.534)).
           Object v1 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.369, -0.749), (1.475, -0.643)).
           Object v13 is a base configuration with (x, y, theta) = (1.0, -1.75, 3.142).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.758, 1.769), (1.843, 1.853)).
           Object v5 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.593, -1.565), (1.719, -1.44)).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.326, 2.089), (0.424, 2.187)).
           Object v7 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.004, -1.019), (-0.874, -0.889)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.069, 2.085), (-1.991, 2.164)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.187, -1.929), (-0.821, -1.571)).
           Object v4 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.425, 1.529), (-1.336, 1.618)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.821, -1.929), (1.187, -1.571)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.866, 1.241), (-1.725, 1.382)).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.548, 2.138), (-0.465, 2.221)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom store(v16)
           Atom type(v7, v6)
           Atom mode(v11)
           Atom type(v8, v6)
           Atom onboard(v10, v12)
           Atom conf(v12, v13)
           Atom rock(v8)
           Atom camera(v10)
           Atom objective(v18)
           Atom type(v1, v2)
           Atom rock(v1)
           Atom rock(v4)
           Atom conf(v14, v15)
           Atom type(v5, v6)
           Atom rock(v3)
           Atom objective(v20)
           Atom free(v12, v16)
           Atom rock(v5)
           Atom rover(v12)
           Atom objective(v17)
           Atom rock(v7)
           Atom type(v4, v2)
           Atom atconf(v14, v15)
           Atom type(v3, v2)
           Atom objective(v19)
           Atom atconf(v12, v13)
           Atom lander(v9)
           Atom supports(v10, v11)
           Atom free(v14, v16)
           Atom rover(v14)
           Atom onboard(v10, v14)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v4)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #o5, v7)
           Atom above(v14, #o5, v5)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v8)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. Both rovers have a camera `v10` which supports mode `v11`. There are several rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`, `v19`, `v20`). Each rover has a store `v16` which is currently free.
           
           The goal is to satisfy `new-axiom@0()`, which requires:
           1. `atconf(v12, v13)` and `atconf(v14, v15)` (already true in initial state)
           2. `free(v12, v16)` and `free(v14, v16)` (already true in initial state)
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`
           4. `type(?stone, v2)` and `receivedanalysis(?stone)` for some stone.
           5. `type(?soil, v6)` and `receivedanalysis(?soil)` for some soil.
           
           Based on the initial state:
           - Rocks `v1`, `v3`, `v4` are of type `v2` (stone).
           - Rocks `v5`, `v7`, `v8` are of type `v6` (soil).
           
           The available actions are limited. Only `move` and `drop_rock` actions are explicitly provided in the `available action instances` list. However, none of these actions can achieve the `receivedimage` or `receivedanalysis` predicates directly. The `move` actions are no-ops as they move the rover to its current configuration. The `drop_rock` actions are only applicable if `full` is true for the store, which is not the case initially.
           
           This implies that the goal is likely unreachable given the severely restricted set of allowed action instances. The problem statement explicitly states: "Any action instance that is not in the given list is not allowed to be used in the plan." Without actions like `take_image`, `send_image`, `sample_rock`, and `send_analysis`, it's impossible to satisfy the `receivedimage` and `receivedanalysis` parts of the goal.
           
           Therefore, the goal is not achievable from the initial state with the given constraints.

