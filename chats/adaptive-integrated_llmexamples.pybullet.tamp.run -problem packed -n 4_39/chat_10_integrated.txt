User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           p10: object
           p11: object
           p12: object
           p13: object
           p14: object
           p15: object
           p20: object
           p21: object
           p22: object
           p23: object
           p24: object
           p25: object
           p26: object
           p27: object
           p28: object
           p29: object
           p30: object
           p31: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v51: object
           v52: object
           v53: object
           v54: object
           v6: object
           v67: object
           v68: object
           v69: object
           v7: object
           v70: object
           v71: object
           v72: object
           v73: object
           v74: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v69 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.5, -0.5, -0.5, 0.5) relative to the target object.
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.085), (-0.015, -0.015)).
           Object p5 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (-0.251, -0.125, 0.781) and quaternion (0.0, 0.0, 0.985, 0.172).
           Object p14 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p13 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p9 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p21 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p28 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v67 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.0, -0.707, 0.0, 0.707) relative to the target object.
           Object v17 is a pose with position (-0.067, -0.271, 0.781) and quaternion (0.0, 0.0, 1.0, 0.015).
           Object p6 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p24 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.145, 0.548, 0.781) and quaternion (0.0, 0.0, -0.28, 0.96).
           Object p7 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p11 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (0.107, 0.437, 0.781) and quaternion (0.0, 0.0, -0.701, 0.713).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v72 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.0, -0.707, 0.0, 0.707) relative to the target object.
           Object p29 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p12 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v71 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.5, -0.5, -0.5, 0.5) relative to the target object.
           Object p25 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v68 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.5, -0.5, -0.5, 0.5) relative to the target object.
           Object p30 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p23 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p20 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v73 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.0, -0.707, 0.0, 0.707) relative to the target object.
           Object p31 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p26 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p27 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v70 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.0, -0.707, 0.0, 0.707) relative to the target object.
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, 0.015), (-0.015, 0.085)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p22 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p15 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v74 is a grasp with position (0.02, 0.0, 0.0) and quaternion (0.5, -0.5, -0.5, 0.5) relative to the target object.
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.085), (0.085, -0.015)).
           Object p8 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, 0.015), (0.085, 0.085)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom kin(v31, v37, p22, v53, v34, v35)
           Atom ~test-cfree-approach-pose-negative(v16, p11, v72, v14, p10)
           Atom supported(v12, p5, v18)
           Atom kin(v31, v32, p24, v51, v34, v35)
           Atom pose(v12, p29)
           Atom kin(v31, v38, p23, v54, v34, v35)
           Atom arm(v6)
           Atom pose(v12, p13)
           Atom supported(v8, p8, v18)
           Atom pose(v8, p12)
           Atom supported(v8, p20, v18)
           Atom kin(v31, v36, p5, v33, v34, v35)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom pose(v8, p8)
           Atom kin(v31, v38, p7, v33, v34, v35)
           Atom supported(v12, p9, v18)
           Atom kin(v31, v32, p4, v33, v34, v35)
           Atom pose(v16, p7)
           Atom kin(v31, v32, p20, v51, v34, v35)
           Atom kin(v31, v37, p14, v53, v34, v35)
           Atom bconf(v3)
           Atom pose(v16, p27)
           Atom pose(v8, p20)
           Atom pose(v14, p22)
           Atom supported(v14, p14, v18)
           Atom pose(v16, v17)
           Atom supported(v8, p12, v18)
           Atom stackable(v8, v10)
           Atom stackable(v12, v18)
           Atom stackable(v16, v18)
           Atom pose(v12, p21)
           Atom pose(v16, p31)
           Atom kin(v31, v38, p11, v33, v34, v35)
           Atom pose(v8, p24)
           Atom pose(v12, p9)
           Atom supported(v12, p21, v18)
           Atom kin(v31, v37, p6, v33, v34, v35)
           Atom kin(v31, v38, p15, v54, v34, v35)
           Atom supported(v14, p10, v18)
           Atom supported(v16, p7, v18)
           Atom pose(v14, p10)
           Atom pose(v14, p6)
           Atom kin(v31, v37, p10, v33, v34, v35)
           Atom kin(v31, v32, p28, v51, v34, v35)
           Atom pose(v12, p25)
           Atom supported(v16, v17, v11)
           Atom supported(v14, p26, v18)
           Atom kin(v31, v36, p13, v52, v34, v35)
           Atom stackable(v14, v18)
           Atom supported(v16, p31, v18)
           Atom supported(v16, p15, v18)
           Atom supported(v14, p6, v18)
           Atom pose(v14, p26)
           Atom atpose(v16, v17)
           Atom stackable(v16, v10)
           Atom supported(v14, p22, v18)
           Atom supported(v12, p25, v18)
           Atom kin(v31, v37, p26, v53, v34, v35)
           Atom ~test-cfree-approach-pose-negative(v14, p10, v68, v8, p8)
           Atom pose(v16, p23)
           Atom ~test-cfree-approach-pose-negative(v12, p9, v70, v8, p8)
           Atom graspable(v16)
           Atom supported(v12, p13, v18)
           Atom stackable(v14, v10)
           Atom graspable(v8)
           Atom supported(v8, p24, v18)
           Atom supported(v16, p23, v18)
           Atom kin(v31, v32, p12, v51, v34, v35)
           Atom kin(v31, v38, p27, v54, v34, v35)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom kin(v31, v32, p8, v33, v34, v35)
           Atom supported(v14, v15, v11)
           Atom kin(v31, v36, p21, v52, v34, v35)
           Atom controllable(v4)
           Atom supported(v12, v13, v11)
           Atom graspable(v12)
           Atom ataconf(v4, v5)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom pose(v14, p30)
           Atom supported(v8, p4, v18)
           Atom supported(v14, p30, v18)
           Atom kin(v31, v38, p31, v54, v34, v35)
           Atom supported(v8, v9, v11)
           Atom handempty(v6)
           Atom aconf(v4, v5)
           Atom stackable(v8, v18)
           Atom graspable(v14)
           Atom supported(v16, p27, v18)
           Atom handempty(v4)
           Atom atpose(v14, v15)
           Atom pose(v16, p15)
           Atom pose(v16, p11)
           Atom kin(v31, v37, p30, v53, v34, v35)
           Atom stackable(v12, v10)
           Atom ataconf(v6, v7)
           Atom kin(v31, v36, p9, v33, v34, v35)
           Atom kin(v31, v36, p25, v52, v34, v35)
           Atom supported(v16, p11, v18)
           Atom aconf(v6, v7)
           Atom kin(v31, v36, p29, v52, v34, v35)
           Atom pose(v14, p14)
           Atom canmove()
           Atom pose(v8, p28)
           Atom pose(v14, v15)
           Atom pose(v12, p5)
           Atom supported(v8, p28, v18)
           Atom supported(v12, p29, v18)
           Atom ~test-cfree-approach-pose-negative(v16, p11, v71, v12, p9)
           Atom pose(v8, p4)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v14, v67)
           Atom grasp(v14, v68)
           Atom supported(v8, #o2, v18)
           Atom grasp(v12, v70)
           Atom grasp(v12, v69)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p14, v67, #o3, #o4)
           Atom kin(v4, v14, p30, v67, #o3, #o4)
           Atom kin(v4, v14, p14, v68, #o3, #o4)
           Atom kin(v4, v14, p30, v68, #o3, #o4)
           Atom kin(v4, v14, v15, v68, #o3, #o4)
           Atom kin(v4, v14, v15, v67, #o3, #o4)
           Atom kin(v4, v12, p5, v69, #o3, #o4)
           Atom kin(v4, v12, p5, v70, #o3, #o4)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom kin(v4, v12, p29, v69, #o3, #o4)
           Atom kin(v4, v12, p29, v70, #o3, #o4)
           Atom kin(v4, v14, p26, v68, #o3, #o4)
           Atom kin(v4, v14, p26, v67, #o3, #o4)
           Atom kin(v4, v14, p22, v67, #o3, #o4)
           Atom kin(v4, v14, p22, v68, #o3, #o4)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v18)
           Atom kin(v4, v12, v13, v70, #o3, #o4)
           Atom kin(v4, v12, v13, v69, #o3, #o4)
           Atom grasp(v8, v73)
           Atom grasp(v8, v74)
           Atom supported(v14, #o2, v10)
           Atom grasp(v16, v71)
           Atom grasp(v16, v72)
           Atom kin(v4, v8, p20, v74, #o3, #o4)
           Atom kin(v4, v8, v9, v74, #o3, #o4)
           Atom kin(v4, v8, p28, v74, #o3, #o4)
           Atom kin(v4, v8, p4, v74, #o3, #o4)
           Atom kin(v4, v8, p4, v73, #o3, #o4)
           Atom kin(v4, v8, v9, v73, #o3, #o4)
           Atom kin(v4, v8, p20, v73, #o3, #o4)
           Atom kin(v4, v8, p28, v73, #o3, #o4)
           Atom kin(v4, v16, p15, v71, #o3, #o4)
           Atom kin(v4, v16, p23, v71, #o3, #o4)
           Atom kin(v4, v16, v17, v71, #o3, #o4)
           Atom kin(v4, v16, p11, v71, #o3, #o4)
           Atom kin(v4, v16, p27, v71, #o3, #o4)
           Atom kin(v4, v16, p23, v72, #o3, #o4)
           Atom kin(v4, v16, p11, v72, #o3, #o4)
           Atom kin(v4, v16, v17, v72, #o3, #o4)
           Atom kin(v4, v16, p15, v72, #o3, #o4)
           Atom kin(v4, v16, p27, v72, #o3, #o4)
           Atom kin(v4, v8, p12, v74, #o3, #o4)
           Atom kin(v4, v8, p12, v73, #o3, #o4)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom kin(v4, v12, p25, v69, #o3, #o4)
           Atom kin(v4, v12, p25, v70, #o3, #o4)
           Atom kin(v4, v14, p6, v68, #o3, #o4)
           Atom kin(v4, v14, p6, v67, #o3, #o4)
           Atom kin(v4, v14, p10, v68, #o3, #o4)
           Atom kin(v4, v14, p10, v67, #o3, #o4)
           Atom kin(v4, v16, p7, v71, #o3, #o4)
           Atom kin(v4, v16, p7, v72, #o3, #o4)
           Atom kin(v4, v12, p13, v69, #o3, #o4)
           Atom kin(v4, v12, p13, v70, #o3, #o4)
           Atom kin(v4, v12, p9, v69, #o3, #o4)
           Atom kin(v4, v12, p9, v70, #o3, #o4)
           Atom kin(v4, v8, p24, v74, #o3, #o4)
           Atom kin(v4, v8, p24, v73, #o3, #o4)
           Atom kin(v4, v16, p31, v71, #o3, #o4)
           Atom kin(v4, v16, p31, v72, #o3, #o4)
           Atom kin(v4, v8, p8, v73, #o3, #o4)
           Atom kin(v4, v8, p8, v74, #o3, #o4)
           Atom kin(v4, v12, p21, v70, #o3, #o4)
           Atom kin(v4, v12, p21, v69, #o3, #o4)
           Atom supported(v16, #o2, v18)
           Atom kin(v4, v12, #o2, v70, #o3, #o4)
           Atom kin(v4, v12, #o2, v69, #o3, #o4)
           Atom kin(v4, v8, #o2, v74, #o3, #o4)
           Atom kin(v4, v8, #o2, v73, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom kin(v4, v16, #o2, v71, #o3, #o4)
           Atom kin(v4, v16, #o2, v72, #o3, #o4)
           Atom kin(v4, v14, #o2, v68, #o3, #o4)
           Atom kin(v4, v14, #o2, v67, #o3, #o4)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 v69 #o3 #o4))
           ((place v4 v12 #o2 v69 #o3 #o4))
           ((pick v4 v12 #o2 v70 #o3 #o4))
           ((place v4 v12 #o2 v70 #o3 #o4))
           ((pick v4 v12 p13 v69 #o3 #o4))
           ((place v4 v12 p13 v69 #o3 #o4))
           ((pick v4 v12 p13 v70 #o3 #o4))
           ((place v4 v12 p13 v70 #o3 #o4))
           ((pick v4 v12 p21 v69 #o3 #o4))
           ((place v4 v12 p21 v69 #o3 #o4))
           ((pick v4 v12 p21 v70 #o3 #o4))
           ((place v4 v12 p21 v70 #o3 #o4))
           ((pick v4 v12 p25 v69 #o3 #o4))
           ((place v4 v12 p25 v69 #o3 #o4))
           ((pick v4 v12 p25 v70 #o3 #o4))
           ((place v4 v12 p25 v70 #o3 #o4))
           ((pick v4 v12 p29 v69 #o3 #o4))
           ((place v4 v12 p29 v69 #o3 #o4))
           ((pick v4 v12 p29 v70 #o3 #o4))
           ((place v4 v12 p29 v70 #o3 #o4))
           ((pick v4 v12 p5 v69 #o3 #o4))
           ((place v4 v12 p5 v69 #o3 #o4))
           ((pick v4 v12 p5 v70 #o3 #o4))
           ((place v4 v12 p5 v70 #o3 #o4))
           ((pick v4 v12 p9 v69 #o3 #o4))
           ((place v4 v12 p9 v69 #o3 #o4))
           ((pick v4 v12 p9 v70 #o3 #o4))
           ((place v4 v12 p9 v70 #o3 #o4))
           ((pick v4 v12 v13 v69 #o3 #o4))
           ((place v4 v12 v13 v69 #o3 #o4))
           ((pick v4 v12 v13 v70 #o3 #o4))
           ((place v4 v12 v13 v70 #o3 #o4))
           ((pick v4 v14 #o2 v67 #o3 #o4))
           ((place v4 v14 #o2 v67 #o3 #o4))
           ((pick v4 v14 #o2 v68 #o3 #o4))
           ((place v4 v14 #o2 v68 #o3 #o4))
           ((pick v4 v14 p10 v67 #o3 #o4))
           ((place v4 v14 p10 v67 #o3 #o4))
           ((pick v4 v14 p10 v68 #o3 #o4))
           ((place v4 v14 p10 v68 #o3 #o4))
           ((pick v4 v14 p14 v67 #o3 #o4))
           ((place v4 v14 p14 v67 #o3 #o4))
           ((pick v4 v14 p14 v68 #o3 #o4))
           ((place v4 v14 p14 v68 #o3 #o4))
           ((pick v4 v14 p22 v67 #o3 #o4))
           ((place v4 v14 p22 v67 #o3 #o4))
           ((pick v4 v14 p22 v68 #o3 #o4))
           ((place v4 v14 p22 v68 #o3 #o4))
           ((pick v4 v14 p26 v67 #o3 #o4))
           ((place v4 v14 p26 v67 #o3 #o4))
           ((pick v4 v14 p26 v68 #o3 #o4))
           ((place v4 v14 p26 v68 #o3 #o4))
           ((pick v4 v14 p30 v67 #o3 #o4))
           ((place v4 v14 p30 v67 #o3 #o4))
           ((pick v4 v14 p30 v68 #o3 #o4))
           ((place v4 v14 p30 v68 #o3 #o4))
           ((pick v4 v14 p6 v67 #o3 #o4))
           ((place v4 v14 p6 v67 #o3 #o4))
           ((pick v4 v14 p6 v68 #o3 #o4))
           ((place v4 v14 p6 v68 #o3 #o4))
           ((pick v4 v14 v15 v67 #o3 #o4))
           ((place v4 v14 v15 v67 #o3 #o4))
           ((pick v4 v14 v15 v68 #o3 #o4))
           ((place v4 v14 v15 v68 #o3 #o4))
           ((pick v4 v16 #o2 v71 #o3 #o4))
           ((place v4 v16 #o2 v71 #o3 #o4))
           ((pick v4 v16 #o2 v72 #o3 #o4))
           ((place v4 v16 #o2 v72 #o3 #o4))
           ((pick v4 v16 p11 v71 #o3 #o4))
           ((place v4 v16 p11 v71 #o3 #o4))
           ((pick v4 v16 p11 v72 #o3 #o4))
           ((place v4 v16 p11 v72 #o3 #o4))
           ((pick v4 v16 p15 v71 #o3 #o4))
           ((place v4 v16 p15 v71 #o3 #o4))
           ((pick v4 v16 p15 v72 #o3 #o4))
           ((place v4 v16 p15 v72 #o3 #o4))
           ((pick v4 v16 p23 v71 #o3 #o4))
           ((place v4 v16 p23 v71 #o3 #o4))
           ((pick v4 v16 p23 v72 #o3 #o4))
           ((place v4 v16 p23 v72 #o3 #o4))
           ((pick v4 v16 p27 v71 #o3 #o4))
           ((place v4 v16 p27 v71 #o3 #o4))
           ((pick v4 v16 p27 v72 #o3 #o4))
           ((place v4 v16 p27 v72 #o3 #o4))
           ((pick v4 v16 p31 v71 #o3 #o4))
           ((place v4 v16 p31 v71 #o3 #o4))
           ((pick v4 v16 p31 v72 #o3 #o4))
           ((place v4 v16 p31 v72 #o3 #o4))
           ((pick v4 v16 p7 v71 #o3 #o4))
           ((place v4 v16 p7 v71 #o3 #o4))
           ((pick v4 v16 p7 v72 #o3 #o4))
           ((place v4 v16 p7 v72 #o3 #o4))
           ((pick v4 v16 v17 v71 #o3 #o4))
           ((place v4 v16 v17 v71 #o3 #o4))
           ((pick v4 v16 v17 v72 #o3 #o4))
           ((place v4 v16 v17 v72 #o3 #o4))
           ((pick v4 v8 #o2 v73 #o3 #o4))
           ((place v4 v8 #o2 v73 #o3 #o4))
           ((pick v4 v8 #o2 v74 #o3 #o4))
           ((place v4 v8 #o2 v74 #o3 #o4))
           ((pick v4 v8 p12 v73 #o3 #o4))
           ((place v4 v8 p12 v73 #o3 #o4))
           ((pick v4 v8 p12 v74 #o3 #o4))
           ((place v4 v8 p12 v74 #o3 #o4))
           ((pick v4 v8 p20 v73 #o3 #o4))
           ((place v4 v8 p20 v73 #o3 #o4))
           ((pick v4 v8 p20 v74 #o3 #o4))
           ((place v4 v8 p20 v74 #o3 #o4))
           ((pick v4 v8 p24 v73 #o3 #o4))
           ((place v4 v8 p24 v73 #o3 #o4))
           ((pick v4 v8 p24 v74 #o3 #o4))
           ((place v4 v8 p24 v74 #o3 #o4))
           ((pick v4 v8 p28 v73 #o3 #o4))
           ((place v4 v8 p28 v73 #o3 #o4))
           ((pick v4 v8 p28 v74 #o3 #o4))
           ((place v4 v8 p28 v74 #o3 #o4))
           ((pick v4 v8 p4 v73 #o3 #o4))
           ((place v4 v8 p4 v73 #o3 #o4))
           ((pick v4 v8 p4 v74 #o3 #o4))
           ((place v4 v8 p4 v74 #o3 #o4))
           ((pick v4 v8 p8 v73 #o3 #o4))
           ((place v4 v8 p8 v73 #o3 #o4))
           ((pick v4 v8 p8 v74 #o3 #o4))
           ((place v4 v8 p8 v74 #o3 #o4))
           ((pick v4 v8 v9 v73 #o3 #o4))
           ((place v4 v8 v9 v73 #o3 #o4))
           ((pick v4 v8 v9 v74 #o3 #o4))
           ((place v4 v8 v9 v74 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to have objects v8, v12, v14, and v16 on surface v18.
           Currently, v8 is on v11 at pose v9. v12 is on v11 at pose v13. v14 is on v11 at pose v15. v16 is on v11 at pose v17.
           The robot has arm `v4` and base configuration `v3`. It is currently holding nothing.
           
           The plan involves picking each object from its initial location and placing it onto the `v18` surface. The continuous pose for #o2 on v18 will be provided for each object to ensure they are collision-free and stable.
           
           First, pick v8 from v9 and place it at #o2 on v18.
           Then, pick v12 from v13 and place it at a new #o2 on v18.
           Next, pick v14 from v15 and place it at a new #o2 on v18.
           Finally, pick v16 from v17 and place it at a new #o2 on v18.
           
           --Plan--:
           (pick v4 v8 v9 v74 #o3 #o4)
           (place v4 v8 #o2 v74 #o3 #o4)
           (pick v4 v12 v13 v70 #o3 #o4)
           (place v4 v12 #o2 v70 #o3 #o4)
           (pick v4 v14 v15 v68 #o3 #o4)
           (place v4 v14 #o2 v68 #o3 #o4)
           (pick v4 v16 v17 v72 #o3 #o4)
           (place v4 v16 #o2 v72 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v18): (0.0 0.0 0.782 0.0)
           (#o2 v12 v18): (0.1 0.0 0.782 0.0)
           (#o2 v14 v18): (-0.1 0.0 0.782 0.0)
           (#o2 v16 v18): (0.0 0.1 0.782 0.0)

User:      Pose #o2 = (0.1 0.0 0.782 0.0) for object v12 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(0.06500000149011612, -0.035), upper=(0.13500000149011612, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (-0.1 0.0 0.782 0.0) for object v14 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(-0.13500000149011612, -0.035), upper=(-0.06500000149011612, 0.035))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Pose #o2 = (0.0 0.1 0.782 0.0) for object v16 on surface v18 is not stable, as the 2D AABB of the object (AABB(lower=(-0.035, 0.06500000149011612), upper=(0.035, 0.13500000149011612))) is not contained in the 2D AABB of the surface (AABB(lower=(-0.135, -0.135), upper=(0.135, 0.135))). Make sure your poses are in the format `(<x> <y> <z> <theta>)`.
           Please provide a plan and poses that achieves the goal from the initial state, ensuring that all poses are valid and stable.

Model:     The goal is to have objects v8, v12, v14, and v16 on surface v18.
           Currently, v8 is on v11 at pose v9. v12 is on v11 at pose v13. v14 is on v11 at pose v15. v16 is on v11 at pose v17.
           The robot has arm `v4` and base configuration `v3`. It is currently holding nothing.
           
           The plan involves picking each object from its initial location and placing it onto the `v18` surface. The continuous pose for #o2 on v18 will be provided for each object to ensure they are collision-free and stable.
           
           First, pick v8 from v9 and place it at #o2 on v18.
           Then, pick v12 from v13 and place it at a new #o2 on v18.
           Next, pick v14 from v15 and place it at a new #o2 on v18.
           Finally, pick v16 from v17 and place it at a new #o2 on v18.
           
           To ensure stability, the poses for #o2 are adjusted to be within the bounds of v18 (AABB = ((-0.135, -0.135), (0.135, 0.135))). The objects are relatively small, with AABBs generally around 0.07x0.07 centered around their local origin. For the new poses, I will place them closer to the center of v18 to prevent instability.
           
           --Plan--:
           (pick v4 v8 v9 v74 #o3 #o4)
           (place v4 v8 #o2 v74 #o3 #o4)
           (pick v4 v12 v13 v70 #o3 #o4)
           (place v4 v12 #o2 v70 #o3 #o4)
           (pick v4 v14 v15 v68 #o3 #o4)
           (place v4 v14 #o2 v68 #o3 #o4)
           (pick v4 v16 v17 v72 #o3 #o4)
           (place v4 v16 #o2 v72 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v18): (0.04 0.04 0.782 0.0)
           (#o2 v12 v18): (-0.04 0.04 0.782 0.0)
           (#o2 v14 v18): (0.04 -0.04 0.782 0.0)
           (#o2 v16 v18): (-0.04 -0.04 0.782 0.0)

User:      The plan you provided is not valid because: `Precondition fact ('atbconf', v34) is not satisfied!`. This is not a result of a geometric failure, but rather a failure to achieve some action's preconditions in your action sequence. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal is to have objects v8, v12, v14, and v16 on surface v18.
           Currently, v8 is on v11 at pose v9. v12 is on v11 at pose v13. v14 is on v11 at pose v15. v16 is on v11 at pose v17.
           The robot has arm `v4` and base configuration `v3`. It is currently holding nothing.
           
           The plan involves picking each object from its initial location and placing it onto the `v18` surface. The continuous pose for #o2 on v18 will be provided for each object to ensure they are collision-free and stable.
           
           The previous plan failed because `atbconf(v34)` was not satisfied. This means that the robot's base configuration was not `v34` when a pick or place action was attempted. The initial state shows `atbconf(v3)`. The provided `kin` facts for pick/place actions (e.g., `kin(v4, v8, v9, v74, #o3, #o4)`) indicate that the base configuration required for these operations is `#o3`. Therefore, a `move_base` action from `v3` to `#o3` is required before performing any pick or place operations.
           
           First, move the base from `v3` to `#o3`.
           Then, pick v8 from v9 and place it at #o2 on v18.
           Next, pick v12 from v13 and place it at a new #o2 on v18.
           Then, pick v14 from v15 and place it at a new #o2 on v18.
           Finally, pick v16 from v17 and place it at a new #o2 on v18.
           
           The poses for the objects are chosen to be within the bounds of `v18` (AABB: ((-0.135, -0.135), (0.135, 0.135))) to ensure stability.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 v74 #o3 #o4)
           (place v4 v8 #o2 v74 #o3 #o4)
           (pick v4 v12 v13 v70 #o3 #o4)
           (place v4 v12 #o2 v70 #o3 #o4)
           (pick v4 v14 v15 v68 #o3 #o4)
           (place v4 v14 #o2 v68 #o3 #o4)
           (pick v4 v16 v17 v72 #o3 #o4)
           (place v4 v16 #o2 v72 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v18): (0.04 0.04 0.782 0.0)
           (#o2 v12 v18): (-0.04 0.04 0.782 0.0)
           (#o2 v14 v18): (0.04 -0.04 0.782 0.0)
           (#o2 v16 v18): (-0.04 -0.04 0.782 0.0)
           (#o3 v3 v11): (-0.5 0.0 0.0 0.0)

