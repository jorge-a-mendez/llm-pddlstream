User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v17 is a pose with position (0.04, 0.375, 0.781) and quaternion (0.0, 0.0, 0.915, 0.404).
           Object v15 is a pose with position (0.159, 0.234, 0.781) and quaternion (0.0, 0.0, 0.993, 0.114).
           Object v13 is a pose with position (-0.036, -0.542, 0.781) and quaternion (0.0, 0.0, -0.78, 0.626).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.033, -0.47), (0.131, -0.372)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.009, 0.326), (0.09, 0.425)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.117, 0.192), (0.201, 0.276)).
           Object v9 is a pose with position (0.082, -0.421, 0.781) and quaternion (0.0, 0.0, -0.444, 0.896).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.078, -0.584), (0.006, -0.5)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom bconf(v3)
           Atom controllable(v4)
           Atom graspable(v8)
           Atom stackable(v12, v18)
           Atom supported(v16, v17, v11)
           Atom stackable(v16, v18)
           Atom stackable(v8, v10)
           Atom atpose(v12, v13)
           Atom atpose(v8, v9)
           Atom graspable(v16)
           Atom atpose(v16, v17)
           Atom supported(v8, v9, v11)
           Atom handempty(v6)
           Atom pose(v14, v15)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom stackable(v14, v18)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom arm(v4)
           Atom ataconf(v4, v5)
           Atom stackable(v16, v10)
           Atom arm(v6)
           Atom supported(v14, v15, v11)
           Atom aconf(v6, v7)
           Atom graspable(v12)
           Atom stackable(v8, v18)
           Atom stackable(v12, v10)
           Atom canmove()
           Atom pose(v16, v17)
           Atom ataconf(v6, v7)
           Atom pose(v12, v13)
           Atom atbconf(v3)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom aconf(v4, v5)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v12, #o1)
           Atom supported(v16, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom supported(v12, #o2, v18)
           Atom grasp(v16, #o1)
           Atom grasp(v14, #o1)
           Atom grasp(v8, #o1)
           Atom supported(v14, #o2, v18)
           Atom supported(v8, #o2, v10)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects: `v8`, `v12`, `v14`, and `v16` are graspable and stackable. `v18` and `v10` are surfaces on which these objects can be stacked. `v11` is another surface. `v3` is the robot's base configuration. `v4` and `v6` are robot arms.
           
           Currently, `v8`, `v12`, `v14`, and `v16` are all supported by `v11` at their respective poses (`v9`, `v13`, `v15`, `v17`). The goal is to place all these objects on `v18`.
           
           There are no pick or place actions available in the provided action instances. Only a `move_base` action is available, and it moves the base from `v3` to `v3`, effectively doing nothing. Since no picking or placing actions are available, the robot cannot change the `on` predicates of any object, thus the goal is unachievable.
           
           The current initial state has the following relevant facts:
           `atpose(v12, v13)` implies `on(v12, v11)` because `supported(v12, v13, v11)`.
           `atpose(v8, v9)` implies `on(v8, v11)` because `supported(v8, v9, v11)`.
           `atpose(v16, v17)` implies `on(v16, v11)` because `supported(v16, v17, v11)`.
           `atpose(v14, v15)` implies `on(v14, v11)` because `supported(v14, v15, v11)`.
           
           The goal requires:
           `on(v8, v18)`
           `on(v12, v18)`
           `on(v14, v18)`
           `on(v16, v18)`
           
           To achieve this goal, the robot needs to pick up each object from `v11` and place it onto `v18`. However, the provided list of allowed action instances only contains one `move_base` action, and no `pick` or `place` actions. Without these actions, the robot cannot manipulate the objects to change their `on` predicate. Therefore, the goal is not achievable.

