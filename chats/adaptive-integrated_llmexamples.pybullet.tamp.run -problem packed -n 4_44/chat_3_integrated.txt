User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p12: object
           p13: object
           p14: object
           p15: object
           p16: object
           p17: object
           p18: object
           p19: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p13 is a pose with position (0.0, 0.01, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v17 is a pose with position (0.04, 0.375, 0.781) and quaternion (0.0, 0.0, 0.915, 0.404).
           Object p18 is a pose with position (0.0, -0.01, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (0.159, 0.234, 0.781) and quaternion (0.0, 0.0, 0.993, 0.114).
           Object p15 is a pose with position (0.0, 0.02, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.036, -0.542, 0.781) and quaternion (0.0, 0.0, -0.78, 0.626).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p16 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object p14 is a pose with position (0.0, -0.01, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p19 is a pose with position (0.0, 0.02, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p17 is a pose with position (0.0, 0.01, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.025), (0.035, 0.045)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.015), (0.035, 0.055)).
           Object p12 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.045), (0.035, 0.025)).
           Object v9 is a pose with position (0.082, -0.421, 0.781) and quaternion (0.0, 0.0, -0.444, 0.896).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v8, p13, v18)
           Atom bconf(v3)
           Atom controllable(v4)
           Atom graspable(v8)
           Atom stackable(v12, v18)
           Atom supported(v16, v17, v11)
           Atom stackable(v16, v18)
           Atom supported(v12, p16, v18)
           Atom stackable(v8, v10)
           Atom supported(v14, p18, v18)
           Atom atpose(v12, v13)
           Atom supported(v14, p14, v18)
           Atom atpose(v8, v9)
           Atom graspable(v16)
           Atom kin(v31, v38, p15, v33, v34, v35)
           Atom supported(v8, p17, v18)
           Atom pose(v8, p17)
           Atom atpose(v16, v17)
           Atom supported(v8, v9, v11)
           Atom pose(v16, p19)
           Atom supported(v16, p19, v18)
           Atom supported(v12, p12, v18)
           Atom handempty(v6)
           Atom kin(v31, v32, p12, v33, v34, v35)
           Atom pose(v14, v15)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom stackable(v14, v18)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v16, p15)
           Atom pose(v12, p16)
           Atom pose(v14, p18)
           Atom kin(v31, v36, p17, v33, v34, v35)
           Atom arm(v4)
           Atom ataconf(v4, v5)
           Atom stackable(v16, v10)
           Atom arm(v6)
           Atom supported(v14, v15, v11)
           Atom kin(v31, v36, p13, v33, v34, v35)
           Atom aconf(v6, v7)
           Atom kin(v31, v37, p18, v33, v34, v35)
           Atom kin(v31, v38, p19, v33, v34, v35)
           Atom graspable(v12)
           Atom stackable(v8, v18)
           Atom stackable(v12, v10)
           Atom canmove()
           Atom pose(v16, v17)
           Atom supported(v16, p15, v18)
           Atom pose(v14, p14)
           Atom pose(v8, p13)
           Atom ataconf(v6, v7)
           Atom pose(v12, v13)
           Atom kin(v31, v32, p16, v33, v34, v35)
           Atom atbconf(v3)
           Atom atpose(v14, v15)
           Atom pose(v12, p12)
           Atom stackable(v14, v10)
           Atom kin(v31, v37, p14, v33, v34, v35)
           Atom aconf(v4, v5)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #g3)
           Atom grasp(v14, #g0)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom supported(v12, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v12, #g2)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v8, #g1)
           Atom supported(v8, #o2, v10)
           Atom supported(v16, #o2, v18)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, p15, #g3, #o3, #o4)
           Atom bconf(#q6)
           Atom atraj(#t12)
           Atom kin(v4, v16, p19, #g3, #q6, #t12)
           Atom bconf(#q7)
           Atom atraj(#t13)
           Atom kin(v4, v16, v17, #g3, #q7, #t13)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, p18, #g0, #q2, #t2)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v14, v15, #g0, #q0, #t0)
           Atom kin(v4, v14, p14, #g0, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v12, v13, #g2, #q5, #t5)
           Atom kin(v4, v12, p12, #g2, #o3, #o4)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v12, p16, #g2, #q4, #t4)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v8, p17, #g1, #q1, #t1)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v8, v9, #g1, #q3, #t3)
           Atom kin(v4, v8, p13, #g1, #o3, #o4)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q0)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q7)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q2, #o0, #q3)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q3)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, #q2)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q2, #o0, #q4)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q1, #o0, #q3)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q1, #o0, #q0)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g2, #o3, #o4)
           Atom kin(v4, v14, #o2, #g0, #o3, #o4)
           Atom kin(v4, v16, #o2, #g3, #o3, #o4)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t10))
           ((move_base v3 #q5 #t11))
           ((move_base v3 #q0 #t6))
           ((move_base v3 #q1 #t7))
           ((move_base v3 #q2 #t8))
           ((move_base v3 #q3 #t9))
           ((pick v4 v12 #o2 #g2 #o3 #o4))
           ((place v4 v12 #o2 #g2 #o3 #o4))
           ((pick v4 v12 p12 #g2 #o3 #o4))
           ((place v4 v12 p12 #g2 #o3 #o4))
           ((pick v4 v12 p16 #g2 #q4 #t4))
           ((place v4 v12 p16 #g2 #q4 #t4))
           ((pick v4 v12 v13 #g2 #q5 #t5))
           ((place v4 v12 v13 #g2 #q5 #t5))
           ((pick v4 v14 #o2 #g0 #o3 #o4))
           ((place v4 v14 #o2 #g0 #o3 #o4))
           ((pick v4 v14 p14 #g0 #o3 #o4))
           ((place v4 v14 p14 #g0 #o3 #o4))
           ((pick v4 v14 p18 #g0 #q2 #t2))
           ((place v4 v14 p18 #g0 #q2 #t2))
           ((pick v4 v14 v15 #g0 #q0 #t0))
           ((place v4 v14 v15 #g0 #q0 #t0))
           ((pick v4 v16 #o2 #g3 #o3 #o4))
           ((place v4 v16 #o2 #g3 #o3 #o4))
           ((pick v4 v16 p15 #g3 #o3 #o4))
           ((place v4 v16 p15 #g3 #o3 #o4))
           ((pick v4 v16 p19 #g3 #q6 #t12))
           ((place v4 v16 p19 #g3 #q6 #t12))
           ((pick v4 v16 v17 #g3 #q7 #t13))
           ((place v4 v16 v17 #g3 #q7 #t13))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 p13 #g1 #o3 #o4))
           ((place v4 v8 p13 #g1 #o3 #o4))
           ((pick v4 v8 p17 #g1 #q1 #t1))
           ((place v4 v8 p17 #g1 #q1 #t1))
           ((pick v4 v8 v9 #g1 #q3 #t3))
           ((place v4 v8 v9 #g1 #q3 #t3))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is to place all objects (v8, v12, v14, v16) on the surface v18.
           Currently, v8 is on v11, v12 is on v11, v14 is on v11, and v16 is on v11.
           The robot starts at base configuration v3 and arm configuration v5.
           We need to pick each object from its current location and place it on v18.
           We will place them at the #o2 pose on v18, which is a common placement location.
           
           Here's a breakdown of the plan:
           1. Pick v8 from v9 (on v11) and place it at #o2 (on v18).
           2. Pick v12 from v13 (on v11) and place it at #o2 (on v18).
           3. Pick v14 from v15 (on v11) and place it at #o2 (on v18).
           4. Pick v16 from v17 (on v11) and place it at #o2 (on v18).
           
           We will prioritize using the `kin` values that are already provided and correspond to the object's current pose. If an object is not currently at a pose that has a pre-computed `kin` value, we will use the `#o2` pose and the corresponding `#o3` and `#o4` continuous parameters to place it.
           
           For picking v8:
           - v8 is at v9. We have `kin(v4, v8, v9, #g1, #q3, #t3)`. So we will move to #q3, pick v8, and then place it at #o2.
           For picking v12:
           - v12 is at v13. We have `kin(v4, v12, v13, #g2, #q5, #t5)`. So we will move to #q5, pick v12, and then place it at #o2.
           For picking v14:
           - v14 is at v15. We have `kin(v4, v14, v15, #g0, #q0, #t0)`. So we will move to #q0, pick v14, and then place it at #o2.
           For picking v16:
           - v16 is at v17. We have `kin(v4, v16, v17, #g3, #q7, #t13)`. So we will move to #q7, pick v16, and then place it at #o2.
           
           Since multiple objects will be placed on `#o2` for `v18`, each object will require a distinct pose value for `#o2`. The AABB for v18 is `((-0.135, -0.135), (0.135, 0.135))`.
           
           --Plan--:
           (move_base v3 #q3 #t9)
           (pick v4 v8 v9 #g1 #q3 #t3)
           (move_base #q3 #o3 #o0)
           (place v4 v8 #o2 #g1 #o3 #o4)
           (move_base #o3 #q5 #o0)
           (pick v4 v12 v13 #g2 #q5 #t5)
           (move_base #q5 #o3 #o0)
           (place v4 v12 #o2 #g2 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v14 v15 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v14 #o2 #g0 #o3 #o4)
           (move_base #o3 #q7 #o0)
           (pick v4 v16 v17 #g3 #q7 #t13)
           (move_base #q7 #o3 #o0)
           (place v4 v16 #o2 #g3 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v18): (0.0 0.0 0.782 0.0)
           (#o2 v12 v18): (0.0 -0.07 0.782 0.0)
           (#o2 v14 v18): (0.0 0.07 0.782 0.0)
           (#o2 v16 v18): (0.0 0.035 0.782 0.0)

