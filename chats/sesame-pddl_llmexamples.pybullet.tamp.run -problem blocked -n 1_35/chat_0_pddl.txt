User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           @sink: object
           @stove: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v14)
           Atom graspable(v15)
           Atom pose(v15, v16)
           Atom atpose(v15, v16)
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom type(v8, v17)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom stackable(v8, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #o1)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains several objects, `v8`, `v12`, and `v15`, which are `graspable` and `stackable`. The robot has two arms, `v4` and `v6`, both `handempty`. The robot is at base configuration `v3`. There are also continuous parameters for poses, grasps, base configurations, and trajectories, indicated by `#o` prefixes.
           
           The goal is `new-axiom@0()`, which is an axiom representing the conjunction `on(?green, v18)` and `type(?green, v17)`. Looking at the initial state, we have `type(v8, v17)` and `type(v12, v17)`. This means that either `v8` or `v12` could be the `?green` object. Also, we have `stackable(v8, v18)` and `stackable(v12, v18)`. So, the goal translates to having either `v8` or `v12` `on(?, v18)`.
           
           From the initial state:
           - `v8` is `atpose(v8, v9)` and `supported(v8, v9, v11)`.
           - `v12` is `atpose(v12, v13)` and `supported(v12, v13, v14)`.
           - `v15` is `atpose(v15, v16)` and `supported(v15, v16, v11)`.
           
           We have `pose(v8, #o2)`, `supported(v8, #o2, v18)`, `pose(v12, #o2)`, `supported(v12, #o2, v18)`. This means that `#o2` is a pose on `v18` for both `v8` and `v12`. Therefore, if we place either `v8` or `v12` at pose `#o2`, it will be `on` `v18`, satisfying `on(?green, v18)`. Since `v8` and `v12` are already of `type(?, v17)`, placing either of them on `v18` will achieve the goal. Let's choose `v8`.
           
           The plan will be:
           1. Move the base to a configuration `(#o3)` that allows for grasping `v8` at `v9`.
           2. Pick up `v8` from `v9` using arm `v4`.
           3. Move the base to `(#o3)` again. This might be a no-op if the base is already there after the pick, but it's listed as an available action if the configuration might have changed.
           4. Place `v8` at `#o2` (which is a pose on `v18`) using arm `v4`.
           
           --Plan--:
           (move_base v3 #o3 #o0)
           (pick v4 v8 v9 #o1 #o3 #o4)
           (move_base #o3 #o3 #o0)
           (place v4 v8 #o2 #o1 #o3 #o4)

