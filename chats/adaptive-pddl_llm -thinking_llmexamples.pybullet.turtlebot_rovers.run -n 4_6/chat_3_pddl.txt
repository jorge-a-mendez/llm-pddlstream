User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rover(v12)
           Atom store(v16)
           Atom type(v1, v2)
           Atom conf(v12, v13)
           Atom objective(v17)
           Atom free(v14, v16)
           Atom mode(v11)
           Atom conf(v14, v15)
           Atom camera(v10)
           Atom type(v4, v2)
           Atom rock(v4)
           Atom objective(v20)
           Atom type(v7, v6)
           Atom type(v3, v2)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom rock(v3)
           Atom objective(v19)
           Atom free(v12, v16)
           Atom type(v8, v6)
           Atom type(v5, v6)
           Atom lander(v9)
           Atom atconf(v12, v13)
           Atom supports(v10, v11)
           Atom rock(v7)
           Atom rock(v8)
           Atom objective(v18)
           Atom onboard(v10, v14)
           Atom rock(v1)
           Atom atconf(v14, v15)
           Atom rock(v5)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom comvisible(v14, #q2, #y2, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y2)
           Atom above(v14, #q6, v1)
           Atom conf(v14, #q6)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v7)
           Atom imagevisible(v14, #q0, #y0, v19)
           Atom imagerange(v14, #q0, v19)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom imagevisible(v14, #q4, #y3, v18)
           Atom imagerange(v14, #q4, v18)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #q5, #y4, v20)
           Atom imagerange(v14, #q5, v20)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom imagevisible(v14, #q1, #y1, v17)
           Atom imagerange(v14, #q1, v17)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom above(v14, #o5, v4)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom ray(#o1)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v4)
           Atom above(v12, #o5, v3)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t0, #q0)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q0, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q6, #o2, #q0)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q2, #t7, #q0)
           Atom motion(v14, #q2, #t5, #q3)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q6, #t9, #q2)
           Atom motion(v14, #q0, #t2, #q2)
           Atom motion(v14, #q4, #t12, #q2)
           Atom motion(v14, #q2, #t8, #q4)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #t11, #q6)
           Atom motion(v14, #q2, #t6, v15)
           Atom motion(v14, #q3, #t4, #q2)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q1, #t3, #q2)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, v15, #t1, #q1)
           Atom motion(v14, #q2, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q5, #t13, #q2)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q2, #t10, #q5)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o0, #o2, v13)
           Atom motion(v12, #o0, #o2, #o0)
           Atom motion(v12, #o5, #o2, #o0)
           Atom motion(v12, v13, #o2, #o0)
           Atom motion(v12, #o0, #o2, #o5)
           Atom motion(v12, #o3, #o2, #o0)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o0, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((sample_rock v14 #q6 v1 v16))
           ((move v12 #o0 #o2 #o0))
           ((move v12 #o0 #o2 #o3))
           ((move v12 #o0 #o2 #o5))
           ((move v12 #o0 #o2 v13))
           ((move v12 #o3 #o2 #o0))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o0))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 v13))
           ((move v12 v13 #o2 #o0))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 v13))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q6))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t2 #q2))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t3 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q1))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #t10 #q5))
           ((move v14 #q2 #t11 #q6))
           ((move v14 #q2 #t5 #q3))
           ((move v14 #q2 #t6 v15))
           ((move v14 #q2 #t7 #q0))
           ((move v14 #q2 #t8 #q4))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t4 #q2))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t12 #q2))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t13 #q2))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q0))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t9 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((move v14 v15 #t1 #q1))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q1 #y1 v17 v10))
           ((calibrate v14 #q4 #y3 v18 v10))
           ((calibrate v14 #q5 #y4 v20 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q1 #y1 v17 v10 v11))
           ((take_image v14 #q4 #y3 v18 v10 v11))
           ((take_image v14 #q5 #y4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #o0 #o1 v9 v1))
           ((send_analysis v12 #o0 #o1 v9 v3))
           ((send_analysis v12 #o0 #o1 v9 v4))
           ((send_analysis v12 #o0 #o1 v9 v5))
           ((send_analysis v12 #o0 #o1 v9 v7))
           ((send_analysis v12 #o0 #o1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y2 v9 v3))
           ((send_analysis v14 #q2 #y2 v9 v4))
           ((send_analysis v14 #q2 #y2 v9 v7))
           ((send_analysis v14 #q2 #y2 v9 v8))
           ((send_analysis v14 #q2 #y2 v9 v5))
           ((send_analysis v14 #q2 #y2 v9 v1))
           ((send_image v12 #o0 #o1 v9 v17 v11))
           ((send_image v12 #o0 #o1 v9 v18 v11))
           ((send_image v12 #o0 #o1 v9 v19 v11))
           ((send_image v12 #o0 #o1 v9 v20 v11))
           ((send_image v14 #q2 #y2 v9 v19 v11))
           ((send_image v14 #q2 #y2 v9 v17 v11))
           ((send_image v14 #q2 #y2 v9 v18 v11))
           ((send_image v14 #q2 #y2 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Alright, here's my plan to achieve `new-axiom@0()` in the `rovers` domain.**  My primary focus is on efficient imaging, analysis, and communication with the constraints given.
           
           First, the key is to understand the initial state. The problem gives me the starting positions of the rovers (`v12` at `v13`, `v14` at `v15`), and both are equipped with free stores. I need to achieve the reception of images for four objectives (`v17`, `v18`, `v19`, `v20` in mode `v11`), analyses for `v1` (stone) and `v5` (soil), and maintain the initial configurations and free stores.
           
           I've determined that `v14` is the most suitable for the tasks since it has flexible access to the required locations for both imaging and sampling.  `v12` will remain stationary. The initial conditions for imaging are the *receivedimage* conditions, which were initially unset. For both imaging and sampling, there will be the *type* conditions and *receivedanalysis* conditions.
           
           Here's my general approach:
           
           *   **Imaging:** `v14` will move to the appropriate location for each objective (identified using `imagevisible`), calibrate its camera (`v10`), take the image, and move to a communication-ready config (`#q2`) to send the image to the lander. The camera's calibration state will need to be checked and restored with each new image.
           
           *   **Analysis:**  `v14` will move to above the rock or soil, sample it, move to the comm config, send the analysis, and, crucially, *drop* the sample to free the store for later operations.
           
           The final element is ensuring that at the end of the plan, `atconf(v14, v15)` remains satisfied and the `free` store condition is true for both rovers. This has added an additional step to the end of my final plan.
           
           **My detailed, final plan is as follows:**
           
           1.  **Objective `v19` (at `#q0`):**
               *   `move v14 v15 #t0 #q0`
               *   `calibrate v14 #q0 #y0 v19 v10`
               *   `take_image v14 #q0 #y0 v19 v10 v11`
               *   `move v14 #q0 #t2 #q2`
               *   `send_image v14 #q2 #y2 v9 v19 v11`
           
           2.  **Objective `v17` (at `#q1`):**
               *   `move v14 #q2 #o2 #q1`
               *   `calibrate v14 #q1 #y1 v17 v10`
               *   `take_image v14 #q1 #y1 v17 v10 v11`
               *   `move v14 #q1 #t3 #q2`
               *   `send_image v14 #q2 #y2 v9 v17 v11`
           
           3.  **Objective `v18` (at `#q4`):**
               *   `move v14 #q2 #t8 #q4`
               *   `calibrate v14 #q4 #y3 v18 v10`
               *   `take_image v14 #q4 #y3 v18 v10 v11`
               *   `move v14 #q4 #t12 #q2`
               *   `send_image v14 #q2 #y2 v9 v18 v11`
           
           4.  **Objective `v20` (at `#q5`):**
               *   `move v14 #q2 #t10 #q5`
               *   `calibrate v14 #q5 #y4 v20 v10`
               *   `take_image v14 #q5 #y4 v20 v10 v11`
               *   `move v14 #q5 #t13 #q2`
               *   `send_image v14 #q2 #y2 v9 v20 v11`
           
           5.  **Analyze `v1` (stone, at `#q6`):**
               *   `move v14 #q2 #t11 #q6`
               *   `sample_
)

Model:     **Alright, here's my plan to achieve `new-axiom@0()` in the `rovers` domain.**  My primary focus is on efficient imaging, analysis, and communication with the constraints given.
           
           First, the key is to understand the initial state. The problem gives me the starting positions of the rovers (`v12` at `v13`, `v14` at `v15`), and both are equipped with free stores. I need to achieve the reception of images for four objectives (`v17`, `v18`, `v19`, `v20` in mode `v11`), analyses for `v1` (stone) and `v5` (soil), and maintain the initial configurations and free stores.
           
           I've determined that `v14` is the most suitable for the tasks since it has flexible access to the required locations for both imaging and sampling.  `v12` will remain stationary. The initial conditions for imaging are the *receivedimage* conditions, which were initially unset. For both imaging and sampling, there will be the *type* conditions and *receivedanalysis* conditions.
           
           Here's my general approach:
           
           *   **Imaging:** `v14` will move to the appropriate location for each objective (identified using `imagevisible`), calibrate its camera (`v10`), take the image, and move to a communication-ready config (`#q2`) to send the image to the lander. The camera's calibration state will need to be checked and restored with each new image.
           
           *   **Analysis:**  `v14` will move to above the rock or soil, sample it, move to the comm config, send the analysis, and, crucially, *drop* the sample to free the store for later operations.
           
           The final element is ensuring that at the end of the plan, `atconf(v14, v15)` remains satisfied and the `free` store condition is true for both rovers. This has added an additional step to the end of my final plan.
           
           **My detailed, final plan is as follows:**
           
           1.  **Objective `v19` (at `#q0`):**
               *   `move v14 v15 #t0 #q0`
               *   `calibrate v14 #q0 #y0 v19 v10`
               *   `take_image v14 #q0 #y0 v19 v10 v11`
               *   `move v14 #q0 #t2 #q2`
               *   `send_image v14 #q2 #y2 v9 v19 v11`
           
           2.  **Objective `v17` (at `#q1`):**
               *   `move v14 #q2 #o2 #q1`
               *   `calibrate v14 #q1 #y1 v17 v10`
               *   `take_image v14 #q1 #y1 v17 v10 v11`
               *   `move v14 #q1 #t3 #q2`
               *   `send_image v14 #q2 #y2 v9 v17 v11`
           
           3.  **Objective `v18` (at `#q4`):**
               *   `move v14 #q2 #t8 #q4`
               *   `calibrate v14 #q4 #y3 v18 v10`
               *   `take_image v14 #q4 #y3 v18 v10 v11`
               *   `move v14 #q4 #t12 #q2`
               *   `send_image v14 #q2 #y2 v9 v18 v11`
           
           4.  **Objective `v20` (at `#q5`):**
               *   `move v14 #q2 #t10 #q5`
               *   `calibrate v14 #q5 #y4 v20 v10`
               *   `take_image v14 #q5 #y4 v20 v10 v11`
               *   `move v14 #q5 #t13 #q2`
               *   `send_image v14 #q2 #y2 v9 v20 v11`
           
           5.  **Analyze `v1` (stone, at `#q6`):**
               *   `move v14 #q2 #t11 #q6`
               *   `sample_

