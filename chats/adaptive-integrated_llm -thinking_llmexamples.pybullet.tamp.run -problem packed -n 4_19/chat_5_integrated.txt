User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p4: object
           p5: object
           p6: object
           p7: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.085), (-0.015, -0.015)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, 0.015), (0.085, 0.085)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.085), (0.085, -0.015)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, 0.015), (-0.015, 0.085)).
           Object v9 is a pose with position (-0.011, 0.351, 0.781) and quaternion (0.0, 0.0, 0.984, -0.181).
           Object v17 is a pose with position (0.189, 0.333, 0.781) and quaternion (0.0, 0.0, 0.866, 0.5).
           Object v15 is a pose with position (-0.149, 0.481, 0.781) and quaternion (0.0, 0.0, -0.689, 0.725).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v13 is a pose with position (-0.009, -0.417, 0.781) and quaternion (0.0, 0.0, 0.974, -0.227).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object p4 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom ataconf(v6, v7)
           Atom stackable(v8, v18)
           Atom pose(v14, v15)
           Atom handempty(v6)
           Atom canmove()
           Atom bconf(v3)
           Atom atpose(v14, v15)
           Atom stackable(v12, v10)
           Atom pose(v12, p5)
           Atom kin(v31, v36, p5, v33, v34, v35)
           Atom aconf(v6, v7)
           Atom aconf(v4, v5)
           Atom supported(v8, v9, v11)
           Atom pose(v14, p6)
           Atom kin(v31, v38, p7, v33, v34, v35)
           Atom graspable(v8)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom graspable(v12)
           Atom stackable(v14, v10)
           Atom handempty(v4)
           Atom arm(v6)
           Atom atpose(v16, v17)
           Atom graspable(v14)
           Atom pose(v16, v17)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom atbconf(v3)
           Atom supported(v12, v13, v11)
           Atom supported(v8, p4, v18)
           Atom kin(v31, v37, p6, v33, v34, v35)
           Atom stackable(v12, v18)
           Atom stackable(v8, v10)
           Atom supported(v14, p6, v18)
           Atom pose(v8, p4)
           Atom controllable(v4)
           Atom pose(v16, p7)
           Atom stackable(v14, v18)
           Atom graspable(v16)
           Atom supported(v16, p7, v18)
           Atom supported(v12, p5, v18)
           Atom kin(v31, v32, p4, v33, v34, v35)
           Atom ataconf(v4, v5)
           Atom supported(v14, v15, v11)
           Atom atpose(v8, v9)
           Atom arm(v4)
           Atom atpose(v12, v13)
           Atom stackable(v16, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom grasp(v16, #g1)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v18)
           Atom supported(v8, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom grasp(v14, #g2)
           Atom supported(v14, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g0)
           Atom supported(v16, #o2, v10)
           Atom grasp(v8, #g3)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom bconf(#q3)
           Atom atraj(#t5)
           Atom kin(v4, v16, p7, #g1, #q3, #t5)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v16, v17, #g1, #q1, #t1)
           Atom bconf(#q4)
           Atom atraj(#t6)
           Atom kin(v4, v14, p6, #g2, #q4, #t6)
           Atom bconf(#q6)
           Atom atraj(#t8)
           Atom kin(v4, v14, v15, #g2, #q6, #t8)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, p5, #g0, #q0, #t0)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v12, v13, #g0, #q2, #t4)
           Atom bconf(#q7)
           Atom atraj(#t9)
           Atom kin(v4, v8, v9, #g3, #q7, #t9)
           Atom bconf(#q5)
           Atom atraj(#t7)
           Atom kin(v4, v8, p4, #g3, #q5, #t7)
           Atom btraj(#t12)
           Atom basemotion(#q2, #t12, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(v3, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom btraj(#t10)
           Atom basemotion(#q0, #t10, v3)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom btraj(#t18)
           Atom basemotion(#q2, #t18, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom btraj(#t16)
           Atom basemotion(#q6, #t16, v3)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q2, #o0, #q4)
           Atom btraj(#t14)
           Atom basemotion(#q4, #t14, v3)
           Atom btraj(#t22)
           Atom basemotion(#q4, #t22, #q2)
           Atom basemotion(#q4, #o0, #q4)
           Atom btraj(#t24)
           Atom basemotion(#q6, #t24, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q1, #o0, #q6)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, #q0)
           Atom btraj(#t11)
           Atom basemotion(#q1, #t11, v3)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q6, #o0, #q3)
           Atom btraj(#t19)
           Atom basemotion(#q1, #t19, #q3)
           Atom btraj(#t23)
           Atom basemotion(#q3, #t23, #q6)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom btraj(#t13)
           Atom basemotion(#q3, #t13, v3)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q3)
           Atom btraj(#t26)
           Atom basemotion(#q5, #t26, #q2)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q6, #o0, #q5)
           Atom btraj(#t15)
           Atom basemotion(#q5, #t15, v3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q7, #o0, #q1)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q5, #o0, #q7)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q6, #o0, #q7)
           Atom btraj(#t21)
           Atom basemotion(#q0, #t21, #q7)
           Atom btraj(#t17)
           Atom basemotion(#q7, #t17, v3)
           Atom basemotion(#q3, #o0, #q7)
           Atom btraj(#t25)
           Atom basemotion(#q4, #t25, #q7)
           Atom btraj(#t20)
           Atom basemotion(#q7, #t20, #q5)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v14, #o2, #g2, #o3, #o4)
           Atom kin(v4, v16, #o2, #g1, #o3, #o4)
           Atom kin(v4, v8, #o2, #g3, #o3, #o4)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 v3 #t10))
           ((move_base #q0 #q7 #t21))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 v3 #t11))
           ((move_base #q1 #q3 #t19))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 v3 #t12))
           ((move_base #q2 #q0 #t18))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 v3 #t13))
           ((move_base #q3 #q6 #t23))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 v3 #t14))
           ((move_base #q4 #q2 #t22))
           ((move_base #q4 #q7 #t25))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 v3 #t15))
           ((move_base #q5 #q2 #t26))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 v3 #t16))
           ((move_base #q6 #q4 #t24))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #t17))
           ((move_base #q7 #q5 #t20))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q2 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 p5 #g0 #q0 #t0))
           ((place v4 v12 p5 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q2 #t4))
           ((place v4 v12 v13 #g0 #q2 #t4))
           ((pick v4 v14 #o2 #g2 #o3 #o4))
           ((place v4 v14 #o2 #g2 #o3 #o4))
           ((pick v4 v14 p6 #g2 #q4 #t6))
           ((place v4 v14 p6 #g2 #q4 #t6))
           ((pick v4 v14 v15 #g2 #q6 #t8))
           ((place v4 v14 v15 #g2 #q6 #t8))
           ((pick v4 v16 #o2 #g1 #o3 #o4))
           ((place v4 v16 #o2 #g1 #o3 #o4))
           ((pick v4 v16 p7 #g1 #q3 #t5))
           ((place v4 v16 p7 #g1 #q3 #t5))
           ((pick v4 v16 v17 #g1 #q1 #t1))
           ((place v4 v16 v17 #g1 #q1 #t1))
           ((pick v4 v8 #o2 #g3 #o3 #o4))
           ((place v4 v8 #o2 #g3 #o3 #o4))
           ((pick v4 v8 p4 #g3 #q5 #t7))
           ((place v4 v8 p4 #g3 #q5 #t7))
           ((pick v4 v8 v9 #g3 #q7 #t9))
           ((place v4 v8 v9 #g3 #q7 #t9))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains four objects (v8, v12, v14, v16) that need to be placed on the surface v18.
           The initial state shows that:
           - v8 is at pose v9, supported by v11. It can also be placed at #o2 (supported by v18 or v10) or p4 (supported by v18).
           - v12 is at pose v13, supported by v11. It can also be placed at #o2 (supported by v18 or v10) or p5 (supported by v18).
           - v14 is at pose v15, supported by v11. It can also be placed at #o2 (supported by v18 or v10) or p6 (supported by v18).
           - v16 is at pose v17, supported by v11. It can also be placed at #o2 (supported by v18 or v10) or p7 (supported by v18).
           
           The goal is to have all four objects (v8, v12, v14, v16) `on` v18. This means they need to be placed at a pose supported by v18.
           The poses p4, p5, p6, p7 are specified as being supported by v18.
           The pose #o2 is also specified as being supported by v18 for all four objects. Since p4, p5, p6, p7 are distinct and pre-computed collision-free poses for individual objects on v18, they are ideal for this task.
           
           The robot has two arms, v4 and v6. Both are handempty. The robot is currently at base configuration v3. Arm v4 is at configuration v5, and arm v6 is at configuration v7.
           
           The plan will involve picking each object from its initial position and placing it on a designated pose on surface v18.
           I will use arm v4 for all pick and place operations, as the given kinemetic trajectories are for arm v4.
           
           1.  **Place v8 on v18 (at p4):**
               *   v8 is currently at v9.
               *   Pick v8 from v9 using #g3. Base config #q7, arm traj #t9.
               *   Place v8 at p4 using #g3. Base config #q5, arm traj #t7. This satisfies `on(v8, v18)`.
           
           2.  **Place v12 on v18 (at p5):**
               *   v12 is currently at v13.
               *   Pick v12 from v13 using #g0. Base config #q2, arm traj #t4.
               *   Place v12 at p5 using #g0. Base config #q0, arm traj #t0. This satisfies `on(v12, v18)`.
           
           3.  **Place v14 on v18 (at p6):**
               *   v14 is currently at v15.
               *   Pick v14 from v15 using #g2. Base config #q6, arm traj #t8.
               *   Place v14 at p6 using #g2. Base config #q4, arm traj #t6. This satisfies `on(v14, v18)`.
           
           4.  **Place v16 on v18 (at p7):**
               *   v16 is currently at v17.
               *   Pick v16 from v17 using #g1. Base config #q1, arm traj #t1.
               *   Place v16 at p7 using #g1. Base config #q3, arm traj #t5. This satisfies `on(v16, v18)`.
           
           I will need to move the base between pick and place operations if the base configurations are different, or between picking different objects. I will check the `basemotion` facts and `distance` PNE to choose the lowest cost path.
           
           Let's order the operations to minimize base movements if possible.
           Current base config: v3.
           
           *   **Pick v8 from v9 (kin(v4, v8, v9, #g3, #q7, #t9))**
               *   Need to move base from v3 to #q7. `move_base v3 #q7 #o0` is available.
           *   **Place v8 at p4 (kin(v4, v8, p4, #g3, #q5, #t7))**
               *   Need to move base from #q7 to #q5. `move_base #q7 #q5 #t20` is available.
               *   After placing v8, robot is at #q5.
           
           *   **Pick v12 from v13 (kin(v4, v12, v13, #g0, #q2, #t4))**
               *   Need to move base from #q5 to #q2. `move_base #q5 #q2 #t26` is available.
           *   **Place v12 at p5 (kin(v4, v12, p5, #g0, #q0, #t0))**
               *   Need to move base from #q2 to #q0. `move_base #q2 #q0 #t18` is available.
               *   After placing v12, robot is at #q0.
           
           *   **Pick v14 from v15 (kin(v4, v14, v15, #g2, #q6, #t8))**
               *   Need to move base from #q0 to #q6. `move_base #q0 #q6 #o0` is available.
           *   **Place v14 at p6 (kin(v4, v14, p6, #g2, #q4, #t6))**
               *   Need to move base from #q6 to #q4. `move_base #q6 #q4 #t24` is available.
               *   After placing v14, robot is at #q4.
           
           *   **Pick v16 from v17 (kin(v4, v16, v17, #g1, #q1, #t1))**
               *   Need to move base from #q4 to #q1. `move_base #q4 #q1 #o0` is available.
           *   **Place v16 at p7 (kin(v4, v16, p7, #g1, #q3, #t5))**
               *   Need to move base from #q1 to #q3. `move_base #q1 #q3 #t19` is available.
               *   After placing v16, robot is at #q3.
           
           All objects are placed on v18. No '#' poses are used.
           
           --Plan--:
           (move_base v3 #q7 #o0)
           (pick v4 v8 v9 #g3 #q7 #t9)
           (move_base #q7 #q5 #t20)
           (place v4 v8 p4 #g3 #q5 #t7)
           (move_base #q5 #q2 #t26)
           (pick v4 v12 v13 #g0 #q2 #t4)
           (move_base #q2 #q0 #t18)
           (place v4 v12 p5 #g0 #q0 #t0)
           (move_base #q0 #q6 #o0)
           (pick v4 v14 v15 #g2 #q6 #t8)
           (move_base #q6 #q4 #t24)
           (place v4 v14 p6 #g2 #q4 #t6)
           (move_base #q4 #q1 #o0)
           (pick v4 v16 v17 #g1 #q1 #t1)
           (move_base #q1 #q3 #t19)
           (place v4 v16 p7 #g1 #q3 #t5)

