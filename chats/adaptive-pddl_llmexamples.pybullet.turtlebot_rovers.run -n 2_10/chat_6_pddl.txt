User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom free(v12, v16)
           Atom rock(v3)
           Atom type(v3, v2)
           Atom atconf(v12, v13)
           Atom store(v16)
           Atom rover(v12)
           Atom conf(v14, v15)
           Atom type(v1, v2)
           Atom type(v8, v6)
           Atom rover(v14)
           Atom rock(v1)
           Atom rock(v7)
           Atom type(v5, v6)
           Atom onboard(v10, v12)
           Atom type(v4, v2)
           Atom rock(v4)
           Atom mode(v11)
           Atom camera(v10)
           Atom rock(v8)
           Atom rock(v5)
           Atom free(v14, v16)
           Atom supports(v10, v11)
           Atom objective(v17)
           Atom type(v7, v6)
           Atom objective(v18)
           Atom onboard(v10, v14)
           Atom lander(v9)
           Atom atconf(v14, v15)
           Atom imagevisible(v14, #q3, #y2, v17)
           Atom imagerange(v14, #q3, v17)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom comvisible(v14, #q0, #y0, v9)
           Atom comrange(v14, #q0, v9)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom above(v14, #q4, v8)
           Atom conf(v14, #q4)
           Atom above(v14, #o5, v7)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q6, v3)
           Atom conf(v14, #q6)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #o5, v7)
           Atom above(v12, #q1, v3)
           Atom conf(v12, #q1)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v12, v13, #t5, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #t4, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q1, #t1, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q3, #t6, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q6, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q6)
           Atom motion(v14, v15, #t2, #q3)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q0, #t11, #q6)
           Atom motion(v14, #q3, #t13, #q0)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, v15, #o2, #q0)
           Atom motion(v14, #q7, #t10, #q0)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q6, #t9, #q0)
           Atom motion(v14, #q4, #t3, #q0)
           Atom motion(v14, #q0, #t0, v15)
           Atom motion(v14, #q0, #t12, #q7)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q1)
           Atom motion(v12, #q1, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q4 v8 v16))
           ((sample_rock v14 #q6 v3 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q1))
           ((move v12 #o3 #o2 #q2))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q2))
           ((move v12 #q2 #o2 #o3))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #t4 v13))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q1))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #t0 v15))
           ((move v14 #q0 #t11 #q6))
           ((move v14 #q0 #t12 #q7))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q6))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t13 #q0))
           ((move v14 #q3 #t6 #q4))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q6))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t3 #q0))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q3))
           ((move v14 #q6 #o2 #q4))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t9 #q0))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t10 #q0))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q0))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t2 #q3))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v14 #q3 #y2 v17 v10))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v14 #q3 #y2 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q0 #y0 v9 v1))
           ((send_analysis v14 #q0 #y0 v9 v4))
           ((send_analysis v14 #q0 #y0 v9 v7))
           ((send_analysis v14 #q0 #y0 v9 v8))
           ((send_analysis v14 #q0 #y0 v9 v3))
           ((send_analysis v14 #q0 #y0 v9 v5))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q0 #y0 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, both equipped with camera `v10` and store `v16`. There are several rocks: `v1`, `v3`, `v4`, `v5`, `v7`, `v8`, with types `v2` (for `v1`, `v3`, `v4`, `v8`) and `v6` (for `v5`, `v7`). There are also two objectives, `v17` and `v18`, and a lander `v9`.
           
           The goal `new-axiom@0()` can be satisfied if we have received an image for objectives `v17` and `v18` with mode `v11`, and if rocks `v3` and `v5` (which are of type `v2` and `v6` respectively) have been analyzed and their analysis received. Additionally, both rovers `v12` and `v14` must have a free store `v16`, and be at their respective configurations `v13` and `v15`.
           
           Here's a breakdown of how to achieve the goal:
           
           1.  **Receive images for objectives v17 and v18:**
               *   Rover `v14` can image `v17` and rover `v12` can image `v18`.
               *   Both rovers need to calibrate their camera `v10` before taking an image.
               *   After taking the image, they need to send it to the lander `v9`.
           
           2.  **Analyze and receive analysis for rock v3 (type v2):**
               *   Either rover `v12` or `v14` can sample `v3`. Let's use `v12` since it's already at a configuration `v13` and can move to `#q1` to sample `v3`.
               *   After sampling, the analysis needs to be sent to the lander `v9`.
               *   Then, the sampled rock needs to be dropped to free the store.
           
           3.  **Analyze and receive analysis for rock v5 (type v6):**
               *   Either rover `v12` or `v14` can sample `v5`. Let's use `v14` as it's at `v15` and can move to `#q7` to sample `v5`.
               *   After sampling, the analysis needs to be sent to the lander `v9`.
               *   Then, the sampled rock needs to be dropped to free the store.
           
           4.  **Final state checks:** Ensure both rovers are at their specified configurations (`v13` for `v12` and `v15` for `v14`) and have free stores.
           
           Let's plan the actions:
           
           *   **For Rover v12 (handling v18 and v3):**
               1.  Calibrate camera for `v18` at `#o3`.
               2.  Take image of `v18` at `#o3`.
               3.  Move to `#q2` to communicate the image.
               4.  Send image of `v18`.
               5.  Move to `#q1` to sample `v3`.
               6.  Sample `v3`.
               7.  Move to `#q2` to communicate the analysis.
               8.  Send analysis of `v3`.
               9.  Drop `v3` to free the store.
               10. Move back to `v13`.
           
           *   **For Rover v14 (handling v17 and v5):**
               1.  Calibrate camera for `v17` at `#q3`.
               2.  Take image of `v17` at `#q3`.
               3.  Move to `#q0` to communicate the image.
               4.  Send image of `v17`.
               5.  Move to `#q7` to sample `v5`.
               6.  Sample `v5`.
               7.  Move to `#q0` to communicate the analysis.
               8.  Send analysis of `v5`.
               9.  Drop `v5` to free the store.
               10. Move back to `v15`.
           
           The rovers can operate somewhat independently for imaging and sampling, but their final positions and free stores must be achieved.
           
           --Plan--:
           (calibrate v12 #o3 #o4 v18 v10)
           (take_image v12 #o3 #o4 v18 v10 v11)
           (move v12 #o3 #o2 #q2)
           (send_image v12 #q2 #y1 v9 v18 v11)
           (move v12 #q2 #o2 #q1)
           (sample_rock v12 #q1 v3 v16)
           (move v12 #q1 #t1 #q2)
           (send_analysis v12 #q2 #y1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q2 #t4 v13)
           (calibrate v14 #q3 #y2 v17 v10)
           (take_image v14 #q3 #y2 v17 v10 v11)
           (move v14 #q3 #t13 #q0)
           (send_image v14 #q0 #y0 v9 v17 v11)
           (move v14 #q0 #t12 #q7)
           (sample_rock v14 #q7 v5 v16)
           (move v14 #q7 #t10 #q0)
           (send_analysis v14 #q0 #y0 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q0 #t0 v15)

