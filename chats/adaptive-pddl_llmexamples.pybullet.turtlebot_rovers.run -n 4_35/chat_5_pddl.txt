User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v4)
           Atom rock(v1)
           Atom rover(v14)
           Atom rock(v8)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom atconf(v12, v13)
           Atom type(v5, v6)
           Atom lander(v9)
           Atom type(v4, v2)
           Atom rock(v3)
           Atom supports(v10, v11)
           Atom free(v12, v16)
           Atom objective(v20)
           Atom type(v7, v6)
           Atom objective(v19)
           Atom onboard(v10, v12)
           Atom objective(v18)
           Atom onboard(v10, v14)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom mode(v11)
           Atom type(v3, v2)
           Atom camera(v10)
           Atom store(v16)
           Atom conf(v12, v13)
           Atom rock(v7)
           Atom rock(v5)
           Atom type(v1, v2)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q13, v3)
           Atom conf(v12, #q13)
           Atom above(v12, #q8, v7)
           Atom conf(v12, #q8)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom imagevisible(v12, #q10, #y7, v17)
           Atom imagerange(v12, #q10, v17)
           Atom conf(v12, #q10)
           Atom ray(#y7)
           Atom above(v12, #q6, v5)
           Atom conf(v12, #q6)
           Atom imagevisible(v12, #q12, #y8, v18)
           Atom imagerange(v12, #q12, v18)
           Atom conf(v12, #q12)
           Atom ray(#y8)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #q11, v4)
           Atom conf(v12, #q11)
           Atom above(v12, #q14, v8)
           Atom conf(v12, #q14)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom above(v14, #o5, v7)
           Atom above(v14, #q16, v5)
           Atom conf(v14, #q16)
           Atom above(v14, #o5, v8)
           Atom comvisible(v14, #q4, #y3, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #q5, #y4, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y4)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v14, #q2, #y1, v18)
           Atom imagerange(v14, #q2, v18)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #q7, #y5, v19)
           Atom imagerange(v14, #q7, v19)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom imagevisible(v12, #q9, #y6, v19)
           Atom imagerange(v12, #q9, v19)
           Atom conf(v12, #q9)
           Atom ray(#y6)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q3, #y2, v20)
           Atom imagerange(v14, #q3, v20)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom imagevisible(v12, #q15, #y9, v20)
           Atom imagerange(v12, #q15, v20)
           Atom conf(v12, #q15)
           Atom ray(#y9)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #t1, v13)
           Atom motion(v12, #q15, #t27, #q1)
           Atom motion(v12, #q1, #t23, #q15)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v14, v15, #t8, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v12, #q10, #t13, #q1)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q15)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #t19, #q10)
           Atom motion(v12, #q15, #o2, #q10)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q6, #t17, #q1)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #t22, #q1)
           Atom motion(v12, v13, #t20, #q12)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q1, #t26, #q12)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, v15, #t10, #q7)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v12, #q0, #t14, #q6)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q1, #t4, #q0)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #t5, #q1)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q1, #t15, #q8)
           Atom motion(v12, #q8, #t11, #q0)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q6, #t31, #q11)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q1, #t16, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v14, #q3, #t35, #q5)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #t36, #q7)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, v15, #t9, #q5)
           Atom motion(v12, #q13, #t32, #q8)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q6, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q11, #t30, #q13)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q7, #t34, #q4)
           Atom motion(v14, #q4, #t6, v15)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q3, #t3, #q4)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q14, #t28, #q1)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q8, #t33, #q14)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q1, #o2, #q14)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q6, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q6)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q15, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q15)
           Atom motion(v12, v13, #t18, #q9)
           Atom motion(v12, #q1, #t21, #q9)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q9, #t12, #q1)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q16)
           Atom motion(v14, #q5, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q5)
           Atom motion(v14, v15, #t24, #q16)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q16, #t25, #q4)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q2, #t2, #q4)
           Atom motion(v14, v15, #t7, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t29, #q3)
           Atom motion(v14, #q2, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q5, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q11 v4 v16))
           ((sample_rock v12 #q13 v3 v16))
           ((sample_rock v12 #q14 v8 v16))
           ((sample_rock v12 #q6 v5 v16))
           ((sample_rock v12 #q8 v7 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q16 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t14 #q6))
           ((move v12 #q0 #t5 #q1))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q14))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #t1 v13))
           ((move v12 #q1 #t15 #q8))
           ((move v12 #q1 #t16 #q11))
           ((move v12 #q1 #t21 #q9))
           ((move v12 #q1 #t23 #q15))
           ((move v12 #q1 #t26 #q12))
           ((move v12 #q1 #t4 #q0))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q15))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t13 #q1))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t30 #q13))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t22 #q1))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q6))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t32 #q8))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t28 #q1))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q10))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 #q9))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q15 #t27 #q1))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q13))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 #q9))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t17 #q1))
           ((move v12 #q6 #t31 #q11))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t11 #q0))
           ((move v12 #q8 #t33 #q14))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q15))
           ((move v12 #q9 #o2 #q6))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t12 #q1))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t18 #q9))
           ((move v12 v13 #t19 #q10))
           ((move v12 v13 #t20 #q12))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q2))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 #q5))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t25 #q4))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q16))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q7))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t2 #q4))
           ((move v14 #q2 #t29 #q3))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q4))
           ((move v14 #q3 #t35 #q5))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q16))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #t6 v15))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q16))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t36 #q7))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t34 #q4))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q7))
           ((move v14 v15 #t24 #q16))
           ((move v14 v15 #t7 #q2))
           ((move v14 v15 #t8 #q3))
           ((move v14 v15 #t9 #q5))
           ((calibrate v12 #q10 #y7 v17 v10))
           ((calibrate v12 #q12 #y8 v18 v10))
           ((calibrate v12 #q15 #y9 v20 v10))
           ((calibrate v12 #q9 #y6 v19 v10))
           ((calibrate v14 #q2 #y1 v18 v10))
           ((calibrate v14 #q3 #y2 v20 v10))
           ((calibrate v14 #q5 #y4 v17 v10))
           ((calibrate v14 #q7 #y5 v19 v10))
           ((take_image v12 #q10 #y7 v17 v10 v11))
           ((take_image v12 #q12 #y8 v18 v10 v11))
           ((take_image v12 #q15 #y9 v20 v10 v11))
           ((take_image v12 #q9 #y6 v19 v10 v11))
           ((take_image v14 #q2 #y1 v18 v10 v11))
           ((take_image v14 #q3 #y2 v20 v10 v11))
           ((take_image v14 #q5 #y4 v17 v10 v11))
           ((take_image v14 #q7 #y5 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y3 v9 v1))
           ((send_analysis v14 #q4 #y3 v9 v3))
           ((send_analysis v14 #q4 #y3 v9 v4))
           ((send_analysis v14 #q4 #y3 v9 v7))
           ((send_analysis v14 #q4 #y3 v9 v8))
           ((send_analysis v14 #q4 #y3 v9 v5))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q4 #y3 v9 v18 v11))
           ((send_image v14 #q4 #y3 v9 v20 v11))
           ((send_image v14 #q4 #y3 v9 v17 v11))
           ((send_image v14 #q4 #y3 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each with a camera (v10) that supports mode v11. There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). There is also a lander (v9) to which data can be sent, and a storage unit (v16) on both rovers. The goal is to achieve the state described by `new-axiom@0()`, which essentially means that both rovers are at some configurations, their stores are free, all objectives have received images, and two specific types of rocks (v2 and v6) have been analyzed.
           
           Here's a breakdown of the requirements for the `new-axiom@0()` axiom to be true:
           1.  `atconf(v12, v13)`: Rover v12 must be at configuration v13. (Initially true)
           2.  `atconf(v14, v15)`: Rover v14 must be at configuration v15. (Initially true)
           3.  `free(v12, v16)`: Rover v12's store (v16) must be free. (Initially true)
           4.  `free(v14, v16)`: Rover v14's store (v16) must be free. (Initially true)
           5.  `receivedimage(v17, v11)`: Image of objective v17 in mode v11 must be received.
           6.  `receivedimage(v18, v11)`: Image of objective v18 in mode v11 must be received.
           7.  `receivedimage(v19, v11)`: Image of objective v19 in mode v11 must be received.
           8.  `receivedimage(v20, v11)`: Image of objective v20 in mode v11 must be received.
           9.  `type(?stone, v2)`: There is a rock of type v2. (Rocks v1, v3, v4 are of type v2)
           10. `receivedanalysis(?stone)`: This rock of type v2 must have its analysis received.
           11. `type(?soil, v6)`: There is a rock of type v6. (Rocks v5, v7, v8 are of type v6)
           12. `receivedanalysis(?soil)`: This rock of type v6 must have its analysis received.
           
           Given the initial state, v12 is at v13 and v14 is at v15, and both stores are free. So the first four conditions are already met.
           
           To satisfy the `receivedimage` conditions, rovers need to:
           1.  Move to a configuration where the objective is visible.
           2.  Calibrate the camera.
           3.  Take an image.
           4.  Move to a configuration where the lander is visible.
           5.  Send the image.
           
           To satisfy the `receivedanalysis` conditions for both rock types:
           1.  Move to a configuration where the rock is above the rover.
           2.  Sample the rock. (This makes `analyzed` true for that rock and makes the store `full`).
           3.  Move to a configuration where the lander is visible.
           4.  Send the analysis.
           5.  Drop the rock to free up the store for subsequent samples if needed.
           
           Rover v12 has visibility to objectives v17 (at #q10), v18 (at #q12), v19 (at #q9), and v20 (at #q15). It also has communication visibility to the lander v9 at #q1.
           Rover v14 has visibility to objectives v17 (at #q5), v18 (at #q2), v19 (at #q7), and v20 (at #q3). It also has communication visibility to the lander v9 at #q4.
           
           Rocks of type v2 are v1, v3, v4.
           - v12 is above v1 at #q0.
           - v12 is above v3 at #q13.
           - v12 is above v4 at #q11.
           - v14 is above v1, v3, v4 at #o5.
           
           Rocks of type v6 are v5, v7, v8.
           - v12 is above v5 at #q6.
           - v12 is above v7 at #q8.
           - v12 is above v8 at #q14.
           - v14 is above v5 at #q16.
           - v14 is above v7, v8 at #o5.
           
           I will use Rover v12 for one rock analysis and Rover v14 for the other to distribute the tasks. I will make sure each rover samples a rock of the required type.
           For images, I'll divide the objectives between the two rovers.
           
           **Plan for Rover v12:**
           1.  Analyze a rock of type v2 (e.g., v1).
               *   Move to #q0 (above v1).
               *   Sample v1.
               *   Move to #q1 (comms with lander).
               *   Send analysis of v1.
           2.  Take and send images for v17, v18, v19, v20.
               *   Calibrate and take image of v17 at #q10, then move to #q1 to send.
               *   Calibrate and take image of v18 at #q12, then move to #q1 to send.
               *   Calibrate and take image of v19 at #q9, then move to #q1 to send.
               *   Calibrate and take image of v20 at #q15, then move to #q1 to send.
           
           **Plan for Rover v14:**
           1.  Analyze a rock of type v6 (e.g., v5).
               *   Move to #q16 (above v5).
               *   Sample v5.
               *   Move to #q4 (comms with lander).
               *   Send analysis of v5.
           
           Since rover v12 takes images and sends them, and it has to return to v13 at the end of the plan for the `atconf` condition, I'll ensure it does so. However, the goal only requires `atconf(v12, v13)` and `atconf(v14, v15)` at the *end*, not that they stay there throughout. The current plan already satisfies this by not moving the rovers away from their initial positions at the very end. Both rovers are currently at their goal configurations (v13 and v15).
           
           Let's refine the plan to ensure all images are taken and sent and both rock types analyzed. I will primarily use Rover v12 for rock analysis and Rover v14 for image capturing, or vice-versa to balance the load, but since the goal simply requires images and analysis to be *received*, not who sends them, I can optimize based on available actions.
           
           Rover v12 can send analysis from #q1.
           Rover v14 can send analysis from #q4.
           
           Rover v12 can image v17 at #q10, v18 at #q12, v19 at #q9, v20 at #q15.
           Rover v14 can image v17 at #q5, v18 at #q2, v19 at #q7, v20 at #q3.
           
           I'll use v12 for the rock analysis of type v2 (v1), and type v6 (v5). This saves moving v14 for analysis if v12 is already doing that. I will then use Rover v14 to take all images and send them.
           
           **Revised Plan:**
           1.  Rover v12 samples rock v1 (type v2).
           2.  Rover v12 moves to a communication point.
           3.  Rover v12 sends analysis of rock v1.
           4.  Rover v12 samples rock v5 (type v6).
           5.  Rover v12 moves to a communication point (same as before or different).
           6.  Rover v12 sends analysis of rock v5.
           7.  Rover v14 calibrates, takes image, moves to comm, sends image for v17.
           8.  Rover v14 calibrates, takes image, moves to comm, sends image for v18.
           9.  Rover v14 calibrates, takes image, moves to comm, sends image for v19.
           10. Rover v14 calibrates, takes image, moves to comm, sends image for v20.
           
           All rovers are initially at their desired final configurations v13 and v15 respectively. The plan should end with them back at these configurations if they moved.
           
           The goal only needs one rock of type v2 and one of type v6 to be analyzed.
           Let's make sure the store is freed up after each sample for the other if the same rover is used.
           
           **Detailed Plan Steps:**
           
           *   **Analyze rock v1 (type v2) with v12:**
               *   v12 is at v13, moves to #q0 (above v1).
               *   sample v1.
               *   v12 moves from #q0 to #q1 (comms with lander v9).
               *   send analysis v1.
               *   (drop rock not strictly needed for goal, but good practice if more samples needed).
           *   **Analyze rock v5 (type v6) with v12:**
               *   v12 is at #q1, moves to #q6 (above v5).
               *   sample v5.
               *   v12 moves from #q6 to #q1 (comms with lander v9).
               *   send analysis v5.
           *   **Process images with v14:**
               *   v14 is at v15, moves to #q5 (image v17).
               *   calibrate for v17.
               *   take image of v17.
               *   v14 moves from #q5 to #q4 (comms with lander v9).
               *   send image v17.
               *   v14 moves from #q4 to #q2 (image v18).
               *   calibrate for v18.
               *   take image of v18.
               *   v14 moves from #q2 to #q4 (comms with lander v9).
               *   send image v18.
               *   v14 moves from #q4 to #q7 (image v19).
               *   calibrate for v19.
               *   take image of v19.
               *   v14 moves from #q7 to #q4 (comms with lander v9).
               *   send image v19.
               *   v14 moves from #q4 to #q3 (image v20).
               *   calibrate for v20.
               *   take image of v20.
               *   v14 moves from #q3 to #q4 (comms with lander v9).
               *   send image v20.
               *   v14 moves from #q4 to v15 to return to initial conf.
           
           Both `atconf(v12, v13)` and `atconf(v14, v15)` are true initially. The plan should end with these being true.
           Rover v12: `atconf(v12,v13)` -> `move v12 v13 #t0 #q0` -> `atconf(v12,#q0)` -> `move v12 #q0 #t5 #q1` -> `atconf(v12,#q1)`. At the end of v12 tasks, if it's at #q1, it needs to return to v13. `move v12 #q1 #t1 v13`.
           Rover v14: `atconf(v14,v15)` -> `move v14 v15 #t9 #q5` -> `atconf(v14,#q5)` -> `move v14 #q5 #o2 #q4` -> `atconf(v14,#q4)`. At the end of v14 tasks, it will be at #q4, needs to return to v15. `move v14 #q4 #t6 v15`.
           
           I need to make sure the plan doesn't try to sample a rock if the store is full. Since each rover only samples one rock, this should not be an issue. I only need one of each type of rock analyzed, so v1 for type v2 and v5 for type v6 will suffice.
           
           --Plan--:
           (move v12 v13 #t0 #q0)
           (sample_rock v12 #q0 v1 v16)
           (move v12 #q0 #t5 #q1)
           (send_analysis v12 #q1 #y0 v9 v1)
           (move v12 #q1 #o2 #q6)
           (sample_rock v12 #q6 v5 v16)
           (move v12 #q6 #t17 #q1)
           (send_analysis v12 #q1 #y0 v9 v5)
           (move v14 v15 #t9 #q5)
           (calibrate v14 #q5 #y4 v17 v10)
           (take_image v14 #q5 #y4 v17 v10 v11)
           (move v14 #q5 #o2 #q4)
           (send_image v14 #q4 #y3 v9 v17 v11)
           (move v14 #q4 #o2 #q2)
           (calibrate v14 #q2 #y1 v18 v10)
           (take_image v14 #q2 #y1 v18 v10 v11)
           (move v14 #q2 #t2 #q4)
           (send_image v14 #q4 #y3 v9 v18 v11)
           (move v14 #q4 #o2 #q7)
           (calibrate v14 #q7 #y5 v19 v10)
           (take_image v14 #q7 #y5 v19 v10 v11)
           (move v14 #q7 #t34 #q4)
           (send_image v14 #q4 #y3 v9 v19 v11)
           (move v14 #q4 #o2 #q3)
           (calibrate v14 #q3 #y2 v20 v10)
           (take_image v14 #q3 #y2 v20 v10 v11)
           (move v14 #q3 #t3 #q4)
           (send_image v14 #q4 #y3 v9 v20 v11)
           (move v12 #q1 #t1 v13)
           (drop_rock v12 v16)
           (move v14 #q4 #t6 v15)
           (drop_rock v12 v16)

