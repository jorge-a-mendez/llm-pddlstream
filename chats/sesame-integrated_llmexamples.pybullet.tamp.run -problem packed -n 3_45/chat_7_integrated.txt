User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g3: object
           #g4: object
           #g5: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q9: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           @sink: object
           @stove: object
           p10: object
           p11: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.085), (0.035, -0.015)).
           Object p10 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.087, -0.305), (-0.013, -0.23)).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v9 is a pose with position (-0.032, 0.306, 0.781) and quaternion (0.0, 0.0, -0.592, 0.806).
           Object v15 is a pose with position (0.169, -0.404, 0.781) and quaternion (0.0, 0.0, 0.846, 0.533).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.05, -0.268, 0.781) and quaternion (0.0, 0.0, 0.032, 0.999).
           Object p11 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p7 is a pose with position (0.0, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object p8 is a pose with position (0.0, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p6)
           Atom supported(v8, p6, v16)
           Atom pose(v14, p8)
           Atom supported(v14, p8, v10)
           Atom supported(v14, p8, v16)
           Atom pose(v12, p7)
           Atom supported(v12, p7, v16)
           Atom supported(v12, p7, v10)
           Atom supported(v8, p6, v10)
           Atom kin(v32, v33, p6, v34, v35, v36)
           Atom kin(v32, v37, p7, v34, v35, v36)
           Atom kin(v32, v38, p8, v34, v35, v36)
           Atom pose(v8, p9)
           Atom supported(v8, p9, v10)
           Atom pose(v12, p10)
           Atom supported(v12, p10, v10)
           Atom pose(v14, p11)
           Atom supported(v14, p11, v16)
           Atom supported(v14, p11, v10)
           Atom supported(v12, p10, v16)
           Atom supported(v8, p9, v16)
           Atom kin(v32, v33, p9, v34, v35, v36)
           Atom kin(v32, v37, p10, v34, v35, v36)
           Atom kin(v32, v38, p11, v34, v35, v36)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v14, #p0)
           Atom supported(v14, #p0, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g5)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g4)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g3)
           Atom bconf(#q13)
           Atom atraj(#t29)
           Atom kin(v4, v14, v15, #g5, #q13, #t29)
           Atom bconf(#q15)
           Atom atraj(#t31)
           Atom kin(v4, v14, p8, #g5, #q15, #t31)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p11, #g5, #o3, #o4)
           Atom bconf(#q12)
           Atom atraj(#t28)
           Atom kin(v4, v14, #p0, #g5, #q12, #t28)
           Atom bconf(#q9)
           Atom atraj(#t23)
           Atom kin(v4, v8, p6, #g3, #q9, #t23)
           Atom bconf(#q14)
           Atom atraj(#t30)
           Atom kin(v4, v8, v9, #g3, #q14, #t30)
           Atom kin(v4, v8, p9, #g3, #o3, #o4)
           Atom bconf(#q11)
           Atom atraj(#t27)
           Atom kin(v4, v12, p7, #g4, #q11, #t27)
           Atom kin(v4, v12, p10, #g4, #o3, #o4)
           Atom bconf(#q10)
           Atom atraj(#t24)
           Atom kin(v4, v12, v13, #g4, #q10, #t24)
           Atom basemotion(#q13, #o0, v3)
           Atom basemotion(#q13, #o0, #q13)
           Atom btraj(#t36)
           Atom basemotion(v3, #t36, #q13)
           Atom basemotion(#q11, #o0, v3)
           Atom basemotion(#q11, #o0, #q11)
           Atom basemotion(v3, #o0, #q11)
           Atom basemotion(#q13, #o0, #q11)
           Atom basemotion(#q11, #o0, #q13)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(#q9, #o0, #q9)
           Atom btraj(#t25)
           Atom basemotion(v3, #t25, #q9)
           Atom basemotion(#q11, #o0, #q9)
           Atom basemotion(#q9, #o0, #q11)
           Atom basemotion(#q13, #o0, #q9)
           Atom basemotion(#q9, #o0, #q13)
           Atom btraj(#t34)
           Atom basemotion(#q14, #t34, #q9)
           Atom basemotion(#q14, #o0, v3)
           Atom basemotion(#q14, #o0, #q14)
           Atom basemotion(#q9, #o0, #q14)
           Atom basemotion(v3, #o0, #q14)
           Atom btraj(#t37)
           Atom basemotion(#q11, #t37, #q14)
           Atom basemotion(#q14, #o0, #q11)
           Atom basemotion(#q13, #o0, #q14)
           Atom basemotion(#q14, #o0, #q13)
           Atom basemotion(#q15, #o0, #q14)
           Atom basemotion(#q15, #o0, #q11)
           Atom basemotion(#q15, #o0, #q13)
           Atom basemotion(#q15, #o0, #q9)
           Atom basemotion(#q15, #o0, v3)
           Atom basemotion(#q15, #o0, #q15)
           Atom basemotion(#q14, #o0, #q15)
           Atom basemotion(#q11, #o0, #q15)
           Atom btraj(#t32)
           Atom basemotion(#q13, #t32, #q15)
           Atom basemotion(#q9, #o0, #q15)
           Atom basemotion(v3, #o0, #q15)
           Atom basemotion(#q10, #o0, #q14)
           Atom btraj(#t33)
           Atom basemotion(#q10, #t33, #q11)
           Atom basemotion(#q10, #o0, #q9)
           Atom basemotion(#q10, #o0, v3)
           Atom basemotion(#q14, #o0, #q10)
           Atom basemotion(#q11, #o0, #q10)
           Atom basemotion(#q10, #o0, #q10)
           Atom basemotion(#q9, #o0, #q10)
           Atom btraj(#t26)
           Atom basemotion(v3, #t26, #q10)
           Atom basemotion(#q13, #o0, #q10)
           Atom basemotion(#q10, #o0, #q13)
           Atom btraj(#t35)
           Atom basemotion(#q15, #t35, #q10)
           Atom basemotion(#q10, #o0, #q15)
           Atom basemotion(#q12, #o0, #q15)
           Atom basemotion(#q12, #o0, #q14)
           Atom basemotion(#q12, #o0, #q11)
           Atom basemotion(#q12, #o0, #q13)
           Atom basemotion(#q12, #o0, #q10)
           Atom basemotion(#q12, #o0, #q9)
           Atom basemotion(#q12, #o0, v3)
           Atom basemotion(#q15, #o0, #q12)
           Atom basemotion(#q14, #o0, #q12)
           Atom basemotion(#q11, #o0, #q12)
           Atom basemotion(#q12, #o0, #q12)
           Atom basemotion(#q13, #o0, #q12)
           Atom basemotion(#q10, #o0, #q12)
           Atom basemotion(#q9, #o0, #q12)
           Atom basemotion(v3, #o0, #q12)
           Atom kin(v4, v12, #o2, #g4, #o3, #o4)
           Atom kin(v4, v14, #o2, #g5, #o3, #o4)
           Atom kin(v4, v8, #o2, #g3, #o3, #o4)
           Atom basemotion(#o3, #o0, #q14)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q14, #o0, #o3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q11, #o0, #o3)
           Atom basemotion(#o3, #o0, #q11)
           Atom basemotion(#q10, #o0, #o3)
           Atom basemotion(#o3, #o0, #q10)
           Atom basemotion(#q13, #o0, #o3)
           Atom basemotion(#o3, #o0, #q13)
           Atom basemotion(#q15, #o0, #o3)
           Atom basemotion(#o3, #o0, #q15)
           Atom basemotion(#q12, #o0, #o3)
           Atom basemotion(#o3, #o0, #q12)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q10 #o0))
           ((move_base #o3 #q11 #o0))
           ((move_base #o3 #q12 #o0))
           ((move_base #o3 #q13 #o0))
           ((move_base #o3 #q14 #o0))
           ((move_base #o3 #q15 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q10 #o3 #o0))
           ((move_base #q10 #q10 #o0))
           ((move_base #q10 #q12 #o0))
           ((move_base #q10 #q13 #o0))
           ((move_base #q10 #q14 #o0))
           ((move_base #q10 #q15 #o0))
           ((move_base #q10 #q9 #o0))
           ((move_base #q10 v3 #o0))
           ((move_base #q10 #q11 #t33))
           ((move_base #q11 #o3 #o0))
           ((move_base #q11 #q10 #o0))
           ((move_base #q11 #q11 #o0))
           ((move_base #q11 #q12 #o0))
           ((move_base #q11 #q13 #o0))
           ((move_base #q11 #q15 #o0))
           ((move_base #q11 #q9 #o0))
           ((move_base #q11 v3 #o0))
           ((move_base #q11 #q14 #t37))
           ((move_base #q12 #o3 #o0))
           ((move_base #q12 #q10 #o0))
           ((move_base #q12 #q11 #o0))
           ((move_base #q12 #q12 #o0))
           ((move_base #q12 #q13 #o0))
           ((move_base #q12 #q14 #o0))
           ((move_base #q12 #q15 #o0))
           ((move_base #q12 #q9 #o0))
           ((move_base #q12 v3 #o0))
           ((move_base #q13 #o3 #o0))
           ((move_base #q13 #q10 #o0))
           ((move_base #q13 #q11 #o0))
           ((move_base #q13 #q12 #o0))
           ((move_base #q13 #q13 #o0))
           ((move_base #q13 #q14 #o0))
           ((move_base #q13 #q9 #o0))
           ((move_base #q13 v3 #o0))
           ((move_base #q13 #q15 #t32))
           ((move_base #q14 #o3 #o0))
           ((move_base #q14 #q10 #o0))
           ((move_base #q14 #q11 #o0))
           ((move_base #q14 #q12 #o0))
           ((move_base #q14 #q13 #o0))
           ((move_base #q14 #q14 #o0))
           ((move_base #q14 #q15 #o0))
           ((move_base #q14 v3 #o0))
           ((move_base #q14 #q9 #t34))
           ((move_base #q15 #o3 #o0))
           ((move_base #q15 #q11 #o0))
           ((move_base #q15 #q12 #o0))
           ((move_base #q15 #q13 #o0))
           ((move_base #q15 #q14 #o0))
           ((move_base #q15 #q15 #o0))
           ((move_base #q15 #q9 #o0))
           ((move_base #q15 v3 #o0))
           ((move_base #q15 #q10 #t35))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q10 #o0))
           ((move_base #q9 #q11 #o0))
           ((move_base #q9 #q12 #o0))
           ((move_base #q9 #q13 #o0))
           ((move_base #q9 #q14 #o0))
           ((move_base #q9 #q15 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q11 #o0))
           ((move_base v3 #q12 #o0))
           ((move_base v3 #q14 #o0))
           ((move_base v3 #q15 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q9 #t25))
           ((move_base v3 #q10 #t26))
           ((move_base v3 #q13 #t36))
           ((pick v4 v12 #o2 #g4 #o3 #o4))
           ((place v4 v12 #o2 #g4 #o3 #o4))
           ((pick v4 v12 p10 #g4 #o3 #o4))
           ((place v4 v12 p10 #g4 #o3 #o4))
           ((pick v4 v12 p7 #g4 #q11 #t27))
           ((place v4 v12 p7 #g4 #q11 #t27))
           ((pick v4 v12 v13 #g4 #q10 #t24))
           ((place v4 v12 v13 #g4 #q10 #t24))
           ((pick v4 v14 #o2 #g5 #o3 #o4))
           ((place v4 v14 #o2 #g5 #o3 #o4))
           ((pick v4 v14 #p0 #g5 #q12 #t28))
           ((place v4 v14 #p0 #g5 #q12 #t28))
           ((pick v4 v14 p11 #g5 #o3 #o4))
           ((place v4 v14 p11 #g5 #o3 #o4))
           ((pick v4 v14 p8 #g5 #q15 #t31))
           ((place v4 v14 p8 #g5 #q15 #t31))
           ((pick v4 v14 v15 #g5 #q13 #t29))
           ((place v4 v14 v15 #g5 #q13 #t29))
           ((pick v4 v8 #o2 #g3 #o3 #o4))
           ((place v4 v8 #o2 #g3 #o3 #o4))
           ((pick v4 v8 p6 #g3 #q9 #t23))
           ((place v4 v8 p6 #g3 #q9 #t23))
           ((pick v4 v8 p9 #g3 #o3 #o4))
           ((place v4 v8 p9 #g3 #o3 #o4))
           ((pick v4 v8 v9 #g3 #q14 #t30))
           ((place v4 v8 v9 #g3 #q14 #t30))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q0', '#t1'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g1', '#q0', '#t0'))
           Action(name='move_base', args=('#q0', '#q3', '#t10'))
           Action(name='place', args=('v4', 'v14', 'p11', '#g1', '#q3', '#t4'))
           Action(name='move_base', args=('#q3', '#q5', '#t8'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g0', '#q5', '#t6'))
           Action(name='move_base', args=('#q5', '#q2', '#t11'))
           Action(name='place', args=('v4', 'v12', 'p10', '#g0', '#q2', '#t3'))
           Action(name='move_base', args=('#q2', '#q1', '#t9'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g2', '#q1', '#t2'))
           Action(name='move_base', args=('#q1', '#q4', '#t7'))
           Action(name='place', args=('v4', 'v8', 'p9', '#g2', '#q4', '#t5'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v8', 'p9', 'v14', 'p11')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The scene contains three graspable objects, v8, v12, and v14, currently at poses v9, v13, and v15 respectively, all supported by v11. The goal is to move all three objects to be on v16.
           
           The previous plan failed because placing v8 at p9 caused a collision with v14 at p11. This suggests that p9 and p11 are too close to each other on the table to simultaneously hold objects without collision. This also means that we need to select different poses on v16 for the objects, and since the goal specifies that all three objects should be on v16, and there are explicit named poses for each object (p6, p7, p10, p11), we need to ensure that the combination of poses selected on v16 are collision-free.
           
           Looking at the available poses for each object on v16:
           - v8 can be placed at p6 or p9.
           - v12 can be placed at p7 or p10.
           - v14 can be placed at p8 or p11.
           
           Given the previous failure with p9 and p11, we should try a different combination of poses. Let's try placing v8 at p6, v12 at p7, and v14 at p11.
           
           Let's re-evaluate the collision between these:
           - v8 at p6 (0.0, 0.0, 0.782) with AABB ((-0.035, -0.035), (0.035, 0.035))
           - v12 at p7 (0.0, 0.05, 0.782) with AABB ((-0.087, -0.305), (-0.013, -0.23))
           - v14 at p11 (0.0, -0.05, 0.782) with AABB ((-0.035, -0.085), (0.035, -0.015))
           
           If we check for collisions based on AABBs:
           - v8 at p6: x in [-0.035, 0.035], y in [-0.035, 0.035]
           - v12 at p7: x in [-0.087, -0.013], y in [-0.255, -0.18] (relative to object centroid at (0.0, 0.05, 0.782)) -> x in [-0.087, -0.013], y in [-0.205, -0.13] (relative to global coordinate system)
           - v14 at p11: x in [-0.035, 0.035], y in [-0.135, -0.065] (relative to object centroid at (0.0, -0.05, 0.782)) -> x in [-0.035, 0.035], y in [-0.135, -0.065] (relative to global coordinate system)
           
           There seems to be no direct overlap in the x-y projections of these AABBs when placed at p6, p7, and p11 respectively. Let's try this combination.
           
           The plan will involve picking up each object from its initial pose and placing it on a designated pose on v16.
           
           1. Pick v14 from v15 (original pose on v11) and place it on p11 (on v16).
           2. Pick v12 from v13 (original pose on v11) and place it on p7 (on v16).
           3. Pick v8 from v9 (original pose on v11) and place it on p6 (on v16).
           
           This plan seems to address the collision issue from the previous attempt by selecting a different set of target poses.
           
           --Plan--:
           (move_base v3 #q13 #t36)
           (pick v4 v14 v15 #g5 #q13 #t29)
           (move_base #q13 #o3 #o0)
           (place v4 v14 p11 #g5 #o3 #o4)
           (move_base #o3 #q10 #o0)
           (pick v4 v12 v13 #g4 #q10 #t24)
           (move_base #q10 #q11 #t33)
           (place v4 v12 p7 #g4 #q11 #t27)
           (move_base #q11 #q14 #t37)
           (pick v4 v8 v9 #g3 #q14 #t30)
           (move_base #q14 #q9 #t34)
           (place v4 v8 p6 #g3 #q9 #t23)

