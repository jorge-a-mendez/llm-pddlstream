User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom lander(v9)
           Atom type(v5, v6)
           Atom rock(v1)
           Atom camera(v10)
           Atom objective(v17)
           Atom type(v4, v2)
           Atom onboard(v10, v12)
           Atom objective(v18)
           Atom rover(v12)
           Atom free(v12, v16)
           Atom rock(v8)
           Atom type(v1, v2)
           Atom rock(v4)
           Atom store(v16)
           Atom onboard(v10, v14)
           Atom type(v7, v6)
           Atom mode(v11)
           Atom free(v14, v16)
           Atom rover(v14)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom atconf(v12, v13)
           Atom conf(v12, v13)
           Atom rock(v7)
           Atom objective(v19)
           Atom type(v8, v6)
           Atom rock(v5)
           Atom rock(v3)
           Atom supports(v10, v11)
           Atom conf(v14, v15)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q17, v4)
           Atom conf(v14, #q17)
           Atom imagevisible(v14, #q3, #y2, v19)
           Atom imagerange(v14, #q3, v19)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom above(v14, #o5, v3)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v7)
           Atom above(v14, #q7, v5)
           Atom conf(v14, #q7)
           Atom imagevisible(v14, #q4, #y3, v17)
           Atom imagerange(v14, #q4, v17)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom above(v14, #q1, v8)
           Atom conf(v14, #q1)
           Atom comvisible(v14, #q2, #y1, v9)
           Atom comrange(v14, #q2, v9)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom above(v12, #q13, v7)
           Atom conf(v12, #q13)
           Atom above(v12, #q14, v4)
           Atom conf(v12, #q14)
           Atom imagevisible(v12, #q10, #y7, v19)
           Atom imagerange(v12, #q10, v19)
           Atom conf(v12, #q10)
           Atom ray(#y7)
           Atom imagevisible(v12, #q8, #y5, v17)
           Atom imagerange(v12, #q8, v17)
           Atom conf(v12, #q8)
           Atom ray(#y5)
           Atom above(v12, #q15, v5)
           Atom conf(v12, #q15)
           Atom comvisible(v12, #q6, #y4, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q16, v8)
           Atom conf(v12, #q16)
           Atom above(v14, #q5, v1)
           Atom conf(v14, #q5)
           Atom above(v12, #q12, v1)
           Atom conf(v12, #q12)
           Atom imagevisible(v14, #q0, #y0, v18)
           Atom imagerange(v14, #q0, v18)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q9, #y6, v18)
           Atom imagerange(v12, #q9, v18)
           Atom conf(v12, #q9)
           Atom ray(#y6)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, v13, #o2, #q13)
           Atom motion(v12, v13, #t16, #q9)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, v15, #t29, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q7, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, v15, #t0, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, v15, #t9, #q5)
           Atom motion(v12, #q11, #t19, #q6)
           Atom motion(v12, #q6, #t18, #q9)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #t8, v13)
           Atom motion(v12, #q6, #t25, #q13)
           Atom motion(v12, #q6, #t23, #q11)
           Atom motion(v12, #q13, #t21, #q6)
           Atom motion(v12, #q9, #t12, #q6)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q1)
           Atom motion(v14, #q0, #o2, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q4)
           Atom motion(v14, #q1, #o2, #q3)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q11, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q15)
           Atom motion(v12, #q13, #o2, #q15)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q13)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q9)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, #q15, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q15)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q6, #t27, #q8)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q8, #t11, #q6)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #t15, #q8)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v14, #q2, #t31, #q0)
           Atom motion(v14, #q2, #t5, #q1)
           Atom motion(v14, #q0, #t2, #q2)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q4)
           Atom motion(v14, #q7, #t10, #q2)
           Atom motion(v14, #q4, #t30, #q2)
           Atom motion(v14, #q1, #t1, #q2)
           Atom motion(v14, #q3, #t3, #q2)
           Atom motion(v14, #q2, #t6, #q5)
           Atom motion(v14, #q2, #t4, v15)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #t34, #q3)
           Atom motion(v14, #q2, #t14, #q7)
           Atom motion(v14, #q5, #t7, #q2)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q6, #t24, #q12)
           Atom motion(v12, #q12, #o2, #q15)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q12, #t20, #q6)
           Atom motion(v12, #q15, #o2, #q12)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v14, #q1, #o2, #q17)
           Atom motion(v14, #q4, #o2, #q17)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q5)
           Atom motion(v14, #q17, #o2, #q0)
           Atom motion(v14, #q17, #o2, #q3)
           Atom motion(v14, #q2, #t32, #q17)
           Atom motion(v14, #q17, #o2, #q1)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q0, #o2, #q17)
           Atom motion(v14, #q3, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, #q17, #t33, #q2)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q4)
           Atom motion(v14, #q5, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q15)
           Atom motion(v12, #q10, #t13, #q6)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q6, #t28, #q10)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, v13, #t17, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q15, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q16, #o2, #q9)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q16, #o2, #q6)
           Atom motion(v12, #q10, #o2, #q16)
           Atom motion(v12, #q8, #o2, #q16)
           Atom motion(v12, #q6, #o2, #q16)
           Atom motion(v12, #q11, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q11)
           Atom motion(v12, #q9, #o2, #q16)
           Atom motion(v12, #q12, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q12)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q15, #o2, #q16)
           Atom motion(v12, #q13, #o2, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q16, #o2, #q10)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q8)
           Atom motion(v12, #q16, #o2, #q13)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q9, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q14, #o2, #q8)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q10)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q12)
           Atom motion(v12, #q14, #t22, #q6)
           Atom motion(v12, #q11, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q12, #o2, #q14)
           Atom motion(v12, #q10, #o2, #q14)
           Atom motion(v12, #q8, #o2, #q14)
           Atom motion(v12, #q6, #t26, #q14)
           Atom motion(v12, #q14, #o2, #q9)
           Atom motion(v12, #q14, #o2, #q11)
           Atom motion(v12, #q13, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q13)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q17)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q17, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q2, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q12 v1 v16))
           ((sample_rock v12 #q13 v7 v16))
           ((sample_rock v12 #q14 v4 v16))
           ((sample_rock v12 #q15 v5 v16))
           ((sample_rock v12 #q16 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q1 v8 v16))
           ((sample_rock v14 #q17 v4 v16))
           ((sample_rock v14 #q5 v1 v16))
           ((sample_rock v14 #q7 v5 v16))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q14))
           ((move v12 #q10 #o2 #q15))
           ((move v12 #q10 #o2 #q16))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t13 #q6))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q14))
           ((move v12 #q11 #o2 #q15))
           ((move v12 #q11 #o2 #q16))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t19 #q6))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q14))
           ((move v12 #q12 #o2 #q15))
           ((move v12 #q12 #o2 #q16))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t20 #q6))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q14))
           ((move v12 #q13 #o2 #q15))
           ((move v12 #q13 #o2 #q16))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t21 #q6))
           ((move v12 #q14 #o2 #q10))
           ((move v12 #q14 #o2 #q11))
           ((move v12 #q14 #o2 #q12))
           ((move v12 #q14 #o2 #q13))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 #q8))
           ((move v12 #q14 #o2 #q9))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t22 #q6))
           ((move v12 #q15 #o2 #q10))
           ((move v12 #q15 #o2 #q11))
           ((move v12 #q15 #o2 #q12))
           ((move v12 #q15 #o2 #q13))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q16))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q8))
           ((move v12 #q15 #o2 #q9))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q16 #o2 #q10))
           ((move v12 #q16 #o2 #q11))
           ((move v12 #q16 #o2 #q12))
           ((move v12 #q16 #o2 #q13))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q6))
           ((move v12 #q16 #o2 #q8))
           ((move v12 #q16 #o2 #q9))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q16))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #t18 #q9))
           ((move v12 #q6 #t23 #q11))
           ((move v12 #q6 #t24 #q12))
           ((move v12 #q6 #t25 #q13))
           ((move v12 #q6 #t26 #q14))
           ((move v12 #q6 #t27 #q8))
           ((move v12 #q6 #t28 #q10))
           ((move v12 #q6 #t8 v13))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q14))
           ((move v12 #q8 #o2 #q15))
           ((move v12 #q8 #o2 #q16))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t11 #q6))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q14))
           ((move v12 #q9 #o2 #q15))
           ((move v12 #q9 #o2 #q16))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t12 #q6))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q13))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q8))
           ((move v12 v13 #t16 #q9))
           ((move v12 v13 #t17 #q10))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q17))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q1))
           ((move v14 #q0 #o2 #q17))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q7))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t2 #q2))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q17))
           ((move v14 #q1 #o2 #q3))
           ((move v14 #q1 #o2 #q4))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #t1 #q2))
           ((move v14 #q17 #o2 #o5))
           ((move v14 #q17 #o2 #q0))
           ((move v14 #q17 #o2 #q1))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q3))
           ((move v14 #q17 #o2 #q4))
           ((move v14 #q17 #o2 #q5))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t33 #q2))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q4))
           ((move v14 #q2 #t14 #q7))
           ((move v14 #q2 #t31 #q0))
           ((move v14 #q2 #t32 #q17))
           ((move v14 #q2 #t34 #q3))
           ((move v14 #q2 #t4 v15))
           ((move v14 #q2 #t5 #q1))
           ((move v14 #q2 #t6 #q5))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q1))
           ((move v14 #q3 #o2 #q17))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q2))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q17))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t30 #q2))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q17))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t7 #q2))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q0))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t10 #q2))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((move v14 v15 #t29 #q4))
           ((move v14 v15 #t9 #q5))
           ((calibrate v12 #q10 #y7 v19 v10))
           ((calibrate v12 #q8 #y5 v17 v10))
           ((calibrate v12 #q9 #y6 v18 v10))
           ((calibrate v14 #q0 #y0 v18 v10))
           ((calibrate v14 #q3 #y2 v19 v10))
           ((calibrate v14 #q4 #y3 v17 v10))
           ((take_image v12 #q10 #y7 v19 v10 v11))
           ((take_image v12 #q8 #y5 v17 v10 v11))
           ((take_image v12 #q9 #y6 v18 v10 v11))
           ((take_image v14 #q0 #y0 v18 v10 v11))
           ((take_image v14 #q3 #y2 v19 v10 v11))
           ((take_image v14 #q4 #y3 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y4 v9 v3))
           ((send_analysis v12 #q6 #y4 v9 v1))
           ((send_analysis v12 #q6 #y4 v9 v7))
           ((send_analysis v12 #q6 #y4 v9 v4))
           ((send_analysis v12 #q6 #y4 v9 v5))
           ((send_analysis v12 #q6 #y4 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q2 #y1 v9 v3))
           ((send_analysis v14 #q2 #y1 v9 v7))
           ((send_analysis v14 #q2 #y1 v9 v8))
           ((send_analysis v14 #q2 #y1 v9 v4))
           ((send_analysis v14 #q2 #y1 v9 v1))
           ((send_analysis v14 #q2 #y1 v9 v5))
           ((send_image v12 #q6 #y4 v9 v19 v11))
           ((send_image v12 #q6 #y4 v9 v17 v11))
           ((send_image v12 #q6 #y4 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v18 v11))
           ((send_image v14 #q2 #y1 v9 v19 v11))
           ((send_image v14 #q2 #y1 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each with a camera (v10) and a storage unit (v16) for samples. There are various rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19) located at different configurations. A lander (v9) is present for communication. The goal is to satisfy the `new-axiom@0()`, which requires rover v12 and v14 to be at some configurations, their stores (v16) to be free, images of objectives v17, v18, and v19 to be received, and analyses of rocks of type v2 and v6 to be received.
           
           Here's a breakdown to achieve the goal:
           1.  **Image Reception**: We need to capture and send images for objectives v17, v18, and v19. Both rovers have cameras capable of taking these images and communicating with the lander.
               *   Rover v12 can take images of v17, v18, v19 and communicate at #q6.
               *   Rover v14 can take images of v17, v18, v19 and communicate at #q2.
           2.  **Analysis Reception**: We need to analyze rocks of type v2 and v6 and send the analysis.
               *   Rocks of type v2: v1, v3, v4.
               *   Rocks of type v6: v5, v7, v8.
               *   Both rovers can sample these rocks.
           
           The plan will involve both rovers to optimize the process.
           
           **Rover v12**:
           *   Calibrate camera and take images of v17, v18, v19.
           *   Move to a communication point and send the images.
           *   Sample rocks of type v2 (v1, v3, v4) and type v6 (v7, v8).
           *   Send analysis for these rocks.
           
           **Rover v14**:
           *   Calibrate camera and take images of v17, v18, v19.
           *   Move to a communication point and send the images.
           *   Sample rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8).
           *   Send analysis for these rocks.
           
           The `new-axiom@0()` has a condition `free(v12, v16)` and `free(v14, v16)`. This means that after sampling any rock, the rover must drop it to ensure the store is free, assuming the analysis is done *before* dropping. Looking at the `sample_rock` action, `analyzed(?v, ?r)` is an effect. The `send_analysis` action has `analyzed(?v, ?r)` as a precondition. The `drop_rock` action makes `full(?v, ?s)` false and `free(?v, ?s)` true. So we should sample, then send analysis, then drop rock if we need the store to be free again.
           
           Let's ensure the goal condition `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)` and `receivedanalysis(?stone)` where `type(?stone, v2)` and `receivedanalysis(?soil)` where `type(?soil, v6)` are met.
           
           We will have rover v12 handle some image/analysis tasks and rover v14 handle others to achieve all goals.
           
           1.  **Images**:
               *   v12 for v17 (imagevisible at #q8), v19 (imagevisible at #q10).
               *   v14 for v18 (imagevisible at #q0).
               *   Both can see v17, v18, v19, but splitting tasks is efficient.
               *   Both can communicate at their respective comvisible points.
           2.  **Analysis**:
               *   Rocks of type v2: v1, v3, v4.
               *   Rocks of type v6: v5, v7, v8.
               *   Both rovers have free stores (v16) initially. Each rover can sample one rock and send the analysis.
               *   Rover v12 can sample v3 (type v2) and v7 (type v6) or v8 (type v6) or v5 (type v6) or v1 (type v2) and send analysis.
               *   Rover v14 can sample v4 (type v2) and v5 (type v6) or v7 (type v6) or v8 (type v6) or v1 (type v2) or v3 (type v2) and send analysis.
           
           Let's plan for minimal actions.
           
           *   **Rover v12**:
               1.  Calibrate camera for v19 at #q10.
               2.  Take image of v19.
               3.  Calibrate camera for v17 at #q8.
               4.  Take image of v17.
               5.  Move to #q6 for communication.
               6.  Send image v19.
               7.  Send image v17.
               8.  Move to sample v3 (type v2) at #q11.
               9.  Sample v3.
               10. Move back to #q6.
               11. Send analysis v3.
               12. Drop v3.
               13. Move to sample v8 (type v6) at #q16.
               14. Sample v8.
               15. Move back to #q6.
               16. Send analysis v8.
               17. Drop v8.
           
           *   **Rover v14**:
               1.  Calibrate camera for v18 at #q0.
               2.  Take image of v18.
               3.  Move to #q2 for communication.
               4.  Send image v18.
               5.  Move to sample v4 (type v2) at #q17.
               6.  Sample v4.
               7.  Move back to #q2.
               8.  Send analysis v4.
               9.  Drop v4.
               10. The goal needs `receivedanalysis` for *a* rock of type v2 and *a* rock of type v6. We have received v3 (type v2) and v8 (type v6) from v12, and v4 (type v2) from v14. So we only need one of each type. This is already met.
           
           Let's refine the plan to cover all goal states:
           - `receivedimage(v17, v11)`: Rover v12, then send.
           - `receivedimage(v18, v11)`: Rover v14, then send.
           - `receivedimage(v19, v11)`: Rover v12, then send.
           - `receivedanalysis(?stone)` where `type(?stone, v2)`: Rover v12 samples v3 (type v2), then send.
           - `receivedanalysis(?soil)` where `type(?soil, v6)`: Rover v12 samples v8 (type v6), then send.
           - `free(v12, v16)`: After sampling v3 and v8, v12 must drop them.
           - `free(v14, v16)`: v14 does not sample, so its store remains free. (Or, v14 samples v4, sends analysis, then drops to make it free again). Let's have v14 sample v4 and drop it.
           
           The plan will be:
           
           **Rover 12 actions:**
           1.  Calibrate camera `v10` at `v12`'s current location `v13` for objective `v19` at configuration `#q10`.
           2.  Take image of `v19`.
           3.  Calibrate camera `v10` at `v12`'s current location `v13` for objective `v17` at configuration `#q8`.
           4.  Take image of `v17`.
           5.  Move `v12` from `v13` to communication configuration `#q6`.
           6.  Send image of `v19`.
           7.  Send image of `v17`.
           8.  Move `v12` from `#q6` to location `#q11` to sample rock `v3`.
           9.  Sample rock `v3` (type v2).
           10. Move `v12` from `#q11` back to communication configuration `#q6`.
           11. Send analysis of rock `v3`.
           12. Drop rock `v3` to free the store.
           13. Move `v12` from `#q6` to location `#q16` to sample rock `v8`.
           14. Sample rock `v8` (type v6).
           15. Move `v12` from `#q16` back to communication configuration `#q6`.
           16. Send analysis of rock `v8`.
           17. Drop rock `v8` to free the store.
           
           **Rover 14 actions:**
           1.  Calibrate camera `v10` at `v14`'s current location `v15` for objective `v18` at configuration `#q0`.
           2.  Take image of `v18`.
           3.  Move `v14` from `v15` to communication configuration `#q2`.
           4.  Send image of `v18`.
           
           All goal conditions will be met by this plan.
           
           --Plan--:
           (calibrate v12 #q10 #y7 v19 v10)
           (take_image v12 #q10 #y7 v19 v10 v11)
           (move v12 #q10 #o2 #q8)
           (calibrate v12 #q8 #y5 v17 v10)
           (take_image v12 #q8 #y5 v17 v10 v11)
           (move v12 #q8 #t11 #q6)
           (send_image v12 #q6 #y4 v9 v19 v11)
           (send_image v12 #q6 #y4 v9 v17 v11)
           (move v12 #q6 #t23 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #t19 #q6)
           (send_analysis v12 #q6 #y4 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 #q16)
           (sample_rock v12 #q16 v8 v16)
           (move v12 #q16 #o2 #q6)
           (send_analysis v12 #q6 #y4 v9 v8)
           (drop_rock v12 v16)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t2 #q2)
           (send_image v14 #q2 #y1 v9 v18 v11)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v12, #q10) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because `atconf(v12, #q10)` was not satisfied when trying to calibrate at that configuration. Rover v12 starts at `atconf(v12, v13)`. I need to ensure that the rover moves to the desired configuration before executing an action that requires it to be at that configuration.
           
           Let's refine the plan, ensuring the rover moves to the correct configuration before attempting an action.
           
           **Rover v12 actions:**
           1.  Move `v12` from `v13` to `#q10` to calibrate and take an image of `v19`.
           2.  Calibrate camera `v10` at `#q10` for objective `v19`.
           3.  Take image of `v19`.
           4.  Move `v12` from `#q10` to `#q8` to calibrate and take an image of `v17`.
           5.  Calibrate camera `v10` at `#q8` for objective `v17`.
           6.  Take image of `v17`.
           7.  Move `v12` from `#q8` to communication configuration `#q6`.
           8.  Send image of `v19`.
           9.  Send image of `v17`.
           10. Move `v12` from `#q6` to location `#q11` to sample rock `v3`.
           11. Sample rock `v3` (type v2).
           12. Move `v12` from `#q11` back to communication configuration `#q6`.
           13. Send analysis of rock `v3`.
           14. Drop rock `v3` to free the store.
           15. Move `v12` from `#q6` to location `#q16` to sample rock `v8`.
           16. Sample rock `v8` (type v6).
           17. Move `v12` from `#q16` back to communication configuration `#q6`.
           18. Send analysis of rock `v8`.
           19. Drop rock `v8` to free the store.
           
           **Rover v14 actions:**
           1.  Move `v14` from `v15` to `#q0` to calibrate and take an image of `v18`.
           2.  Calibrate camera `v10` at `#q0` for objective `v18`.
           3.  Take image of `v18`.
           4.  Move `v14` from `#q0` to communication configuration `#q2`.
           5.  Send image of `v18`.
           
           This revised plan addresses the `atconf` precondition by explicitly moving the rover to the required configuration.
           
           --Plan--:
           (move v12 v13 #t17 #q10)
           (calibrate v12 #q10 #y7 v19 v10)
           (take_image v12 #q10 #y7 v19 v10 v11)
           (move v12 #q10 #o2 #q8)
           (calibrate v12 #q8 #y5 v17 v10)
           (take_image v12 #q8 #y5 v17 v10 v11)
           (move v12 #q8 #t11 #q6)
           (send_image v12 #q6 #y4 v9 v19 v11)
           (send_image v12 #q6 #y4 v9 v17 v11)
           (move v12 #q6 #t23 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #t19 #q6)
           (send_analysis v12 #q6 #y4 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 #q16)
           (sample_rock v12 #q16 v8 v16)
           (move v12 #q16 #o2 #q6)
           (send_analysis v12 #q6 #y4 v9 v8)
           (drop_rock v12 v16)
           (move v14 v15 #t0 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t2 #q2)
           (send_image v14 #q2 #y1 v9 v18 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed to satisfy the `new-axiom@0()` goal. The axiom has several conditions, and I must ensure *all* are met. Let's re-evaluate the full `new-axiom@0()` condition which is:
           
           ```
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           My previous plan for `v12` ended at `atconf(v12, #q6)` and for `v14` ended at `atconf(v14, #q2)`. The goal explicitly requires `atconf(v12, v13)` and `atconf(v14, v15)`. This means both rovers need to return to their initial configurations at the end of the plan.
           
           Also, I have ensured `free(v12, v16)` and `free(v14, v16)` by dropping rocks after analysis.
           I have ensured `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)` by taking and sending images.
           I have ensured `receivedanalysis(?stone)` for a rock of `type v2` (v3) and `receivedanalysis(?soil)` for a rock of `type v6` (v8).
           
           The only remaining issue is to ensure both rovers return to their initial configurations `v13` and `v15` respectively, at the very end of the plan.
           
           Let's adjust the plan by adding final `move` actions for both rovers to return to their initial positions.
           
           **Rover v12 actions:**
           1.  Move `v12` from `v13` to `#q10`.
           2.  Calibrate camera `v10` at `#q10` for objective `v19`.
           3.  Take image of `v19`.
           4.  Move `v12` from `#q10` to `#q8`.
           5.  Calibrate camera `v10` at `#q8` for objective `v17`.
           6.  Take image of `v17`.
           7.  Move `v12` from `#q8` to communication configuration `#q6`.
           8.  Send image of `v19`.
           9.  Send image of `v17`.
           10. Move `v12` from `#q6` to location `#q11` to sample rock `v3`.
           11. Sample rock `v3` (type v2).
           12. Move `v12` from `#q11` back to communication configuration `#q6`.
           13. Send analysis of rock `v3`.
           14. Drop rock `v3` to free the store.
           15. Move `v12` from `#q6` to location `#q16` to sample rock `v8`.
           16. Sample rock `v8` (type v6).
           17. Move `v12` from `#q16` back to communication configuration `#q6`.
           18. Send analysis of rock `v8`.
           19. Drop rock `v8` to free the store.
           20. Move `v12` from `#q6` back to its initial configuration `v13`.
           
           **Rover v14 actions:**
           1.  Move `v14` from `v15` to `#q0`.
           2.  Calibrate camera `v10` at `#q0` for objective `v18`.
           3.  Take image of `v18`.
           4.  Move `v14` from `#q0` to communication configuration `#q2`.
           5.  Send image of `v18`.
           6.  Move `v14` from `#q2` back to its initial configuration `v15`.
           
           This plan should now meet all the conditions of `new-axiom@0()`.
           
           --Plan--:
           (move v12 v13 #t17 #q10)
           (calibrate v12 #q10 #y7 v19 v10)
           (take_image v12 #q10 #y7 v19 v10 v11)
           (move v12 #q10 #o2 #q8)
           (calibrate v12 #q8 #y5 v17 v10)
           (take_image v12 #q8 #y5 v17 v10 v11)
           (move v12 #q8 #t11 #q6)
           (send_image v12 #q6 #y4 v9 v19 v11)
           (send_image v12 #q6 #y4 v9 v17 v11)
           (move v12 #q6 #t23 #q11)
           (sample_rock v12 #q11 v3 v16)
           (move v12 #q11 #t19 #q6)
           (send_analysis v12 #q6 #y4 v9 v3)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 #q16)
           (sample_rock v12 #q16 v8 v16)
           (move v12 #q16 #o2 #q6)
           (send_analysis v12 #q6 #y4 v9 v8)
           (drop_rock v12 v16)
           (move v12 #q6 #t8 v13)
           (move v14 v15 #t0 #q0)
           (calibrate v14 #q0 #y0 v18 v10)
           (take_image v14 #q0 #y0 v18 v10 v11)
           (move v14 #q0 #t2 #q2)
           (send_image v14 #q2 #y1 v9 v18 v11)
           (move v14 #q2 #t4 v15)

