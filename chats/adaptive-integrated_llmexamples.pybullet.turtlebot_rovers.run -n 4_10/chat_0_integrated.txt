User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.849, 1.764), (-1.766, 1.847)).
           Object v13 is a base configuration with (x, y, theta) = (1.0, -1.75, 3.142).
           Object v7 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.353, 1.749), (-1.227, 1.875)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.636, 1.939), (0.735, 2.038)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.187, -1.929), (-0.821, -1.571)).
           Object v3 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.683, -0.986), (1.785, -0.885)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.821, -1.929), (1.187, -1.571)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.915, 0.682), (2.055, 0.822)).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.437, 1.985), (-0.338, 2.083)).
           Object v4 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.951, -1.548), (2.056, -1.443)).
           Object v15 is a base configuration with (x, y, theta) = (-1.0, -1.75, 0.0).
           Object v9 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.405, -2.346), (-1.395, -1.654)).
           Object v5 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.563, 0.243), (0.7, 0.38)).
           Object v1 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.771, -0.584), (-1.675, -0.489)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((2.116, 1.97), (2.204, 2.058)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v3, v2)
           Atom type(v1, v2)
           Atom rock(v3)
           Atom type(v7, v6)
           Atom rock(v4)
           Atom rover(v14)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom rock(v7)
           Atom lander(v9)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom onboard(v10, v12)
           Atom conf(v12, v13)
           Atom atconf(v14, v15)
           Atom store(v16)
           Atom rock(v5)
           Atom objective(v17)
           Atom conf(v14, v15)
           Atom objective(v19)
           Atom free(v14, v16)
           Atom supports(v10, v11)
           Atom mode(v11)
           Atom type(v4, v2)
           Atom objective(v18)
           Atom type(v8, v6)
           Atom free(v12, v16)
           Atom camera(v10)
           Atom rock(v8)
           Atom type(v5, v6)
           Atom objective(v20)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v8)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom conf(v12, #o3)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #o5, v8)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v1)
           Atom above(v14, #o5, v1)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #o5, v5)
           Atom above(v12, #o5, v5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene includes two rovers, v12 and v14, two stores, v16, and a lander v9. There are also several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18, v19, v20). Both rovers are equipped with camera v10 which supports mode v11. Initially, both rovers are at their respective configurations (v13 for v12, v15 for v14) and their stores are free. The goal is `new-axiom@0()`, which expands to:
           `atconf(v12, v13) AND atconf(v14, v15) AND free(v12, v16) AND free(v14, v16) AND receivedimage(v17, v11) AND receivedimage(v18, v11) AND receivedimage(v19, v11) AND receivedimage(v20, v11) AND type(?stone, v2) AND receivedanalysis(?stone) AND type(?soil, v6) AND receivedanalysis(?soil)`
           
           Let's break down the goal:
           1. `atconf(v12, v13)` and `atconf(v14, v15)`: These are already true in the initial state.
           2. `free(v12, v16)` and `free(v14, v16)`: These are already true in the initial state.
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`: This means images of objectives v17, v18, v19, and v20 need to be taken and sent to the lander. This requires calibrating the camera, taking the image, and sending it.
           4. `type(?stone, v2) AND receivedanalysis(?stone)`: This means for some rock of type v2 (stone), its analysis needs to be received. Rocks of type v2 are v1, v3, v4.
           5. `type(?soil, v6) AND receivedanalysis(?soil)`: This means for some rock of type v6 (soil), its analysis needs to be received. Rocks of type v6 are v5, v7, v8.
           
           Since `new-axiom@0()` is an axiom that only evaluates if a complex set of conditions are met, and some parts of it are already met, we need to focus on the remaining parts of the goal which are related to `receivedimage` and `receivedanalysis`.
           
           Given the available actions, we don't have direct `calibrate`, `take_image`, `send_image`, `sample_rock`, or `send_analysis` actions available in the list of valid action instances. The only available actions are `move` and `drop_rock`. This indicates that the goal `new-axiom@0()` (and its sub-goals that are not already true) cannot be achieved with the limited set of allowed actions. The problem statement explicitly says: "Any action instance that is not in the given list is not allowed to be used in the plan." Therefore, no plan can be generated.
           
           The initial state satisfies `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)`. However, there are no actions provided in the `available action instances` list that would allow the rovers to take images, send images, sample rocks, or send analysis. Therefore, the parts of the goal `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`, `receivedanalysis(?stone)`, and `receivedanalysis(?soil)` cannot be achieved. Thus, the overall goal `new-axiom@0()` is unreachable.

