User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v8, v6)
           Atom lander(v9)
           Atom conf(v14, v15)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom rover(v12)
           Atom type(v4, v2)
           Atom objective(v20)
           Atom rock(v3)
           Atom rock(v5)
           Atom free(v12, v16)
           Atom rock(v7)
           Atom rock(v4)
           Atom objective(v19)
           Atom type(v5, v6)
           Atom type(v1, v2)
           Atom objective(v18)
           Atom store(v16)
           Atom camera(v10)
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom type(v7, v6)
           Atom mode(v11)
           Atom atconf(v14, v15)
           Atom type(v3, v2)
           Atom rock(v8)
           Atom supports(v10, v11)
           Atom onboard(v10, v14)
           Atom objective(v17)
           Atom onboard(v10, v12)
           Atom free(v14, v16)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q5, #y3, v19)
           Atom imagerange(v12, #q5, v19)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q3, #y2, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v12, #q7, v4)
           Atom conf(v12, #q7)
           Atom above(v12, #q1, v1)
           Atom conf(v12, #q1)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #q4, v5)
           Atom conf(v12, #q4)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q9, v1)
           Atom conf(v14, #q9)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v7)
           Atom comvisible(v14, #q8, #y5, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom above(v14, #q11, v5)
           Atom conf(v14, #q11)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #q10, v8)
           Atom conf(v14, #q10)
           Atom above(v14, #o5, v3)
           Atom above(v12, #o5, v3)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q2, #y1, v20)
           Atom imagerange(v12, #q2, v20)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom imagevisible(v12, #q6, #y4, v18)
           Atom imagerange(v12, #q6, v18)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, v13, #t16, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q5, #t23, #q6)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #t28, #q5)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, v13, #t15, #q7)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, v13, #t2, #q2)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q2, #t25, #q3)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q6, #t27, #q1)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v14, v15, #t20, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, v15, #t26, #q11)
           Atom motion(v12, #q0, #t9, #q5)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, #q0, #t7, #q2)
           Atom motion(v12, #q0, #t1, #q1)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q5, #t13, #q0)
           Atom motion(v12, #q0, #t10, #q6)
           Atom motion(v12, #q3, #t4, #q0)
           Atom motion(v12, #q0, #t8, #q3)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q2, #t3, #q0)
           Atom motion(v12, #q6, #t11, #q0)
           Atom motion(v12, #q1, #t5, #q0)
           Atom motion(v12, #q7, #t14, #q0)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v14, #q8, #t18, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q10, #t22, #q8)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q11, #t24, #q8)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v12, #q0, #t12, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q4, #t6, #q0)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v14, #q8, #t17, #q9)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, v15, #t19, #q9)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q9, #t21, #q8)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #q10, #o2, #o3)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q10)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #o3, #o2, #q9)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q1 v1 v16))
           ((sample_rock v12 #q4 v5 v16))
           ((sample_rock v12 #q7 v4 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q10 v8 v16))
           ((sample_rock v14 #q11 v5 v16))
           ((sample_rock v14 #q9 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t1 #q1))
           ((move v12 #q0 #t10 #q6))
           ((move v12 #q0 #t12 #q4))
           ((move v12 #q0 #t7 #q2))
           ((move v12 #q0 #t8 #q3))
           ((move v12 #q0 #t9 #q5))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t5 #q0))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t25 #q3))
           ((move v12 #q2 #t3 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t28 #q5))
           ((move v12 #q3 #t4 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t6 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t13 #q0))
           ((move v12 #q5 #t23 #q6))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t11 #q0))
           ((move v12 #q6 #t27 #q1))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t14 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t15 #q7))
           ((move v12 v13 #t16 #q3))
           ((move v12 v13 #t2 #q2))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q10))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o3))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t22 #q8))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t24 #q8))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #t17 #q9))
           ((move v14 #q8 #t18 v15))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t21 #q8))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t19 #q9))
           ((move v14 v15 #t20 #q10))
           ((move v14 v15 #t26 #q11))
           ((calibrate v12 #q2 #y1 v20 v10))
           ((calibrate v12 #q3 #y2 v17 v10))
           ((calibrate v12 #q5 #y3 v19 v10))
           ((calibrate v12 #q6 #y4 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q2 #y1 v20 v10 v11))
           ((take_image v12 #q3 #y2 v17 v10 v11))
           ((take_image v12 #q5 #y3 v19 v10 v11))
           ((take_image v12 #q6 #y4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y5 v9 v3))
           ((send_analysis v14 #q8 #y5 v9 v4))
           ((send_analysis v14 #q8 #y5 v9 v7))
           ((send_analysis v14 #q8 #y5 v9 v8))
           ((send_analysis v14 #q8 #y5 v9 v5))
           ((send_analysis v14 #q8 #y5 v9 v1))
           ((send_image v12 #q0 #y0 v9 v20 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v17 v11))
           ((send_image v14 #q8 #y5 v9 v18 v11))
           ((send_image v14 #q8 #y5 v9 v19 v11))
           ((send_image v14 #q8 #y5 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, here's my plan to accomplish the goal `Atom new-axiom@0()`:
           
           First, let's break down the `new-axiom@0()` axiom.  It boils down to a conjunction of several conditions, with the core elements involving taking and sending images (`receivedimage`), analyzing rocks and soil, and ensuring both rovers, `v12` and `v14`, are in specific configurations.  The initial conditions already cover the `atconf` and `free` predicates for both rovers, which simplifies things. The key is to achieve all the `receivedimage` and `receivedanalysis` predicates.
           
           To get the images, I need to use the `send_image` action, which requires me to take images via `take_image` first. The preconditions for these actions dictate I need to be in the right `atconf` configuration to use both the camera and the communications.  Luckily, rover `v10` supports both the imaging and communication tasks needed.  The `imagevisible` and `comvisible` predicates give me the specific configurations I need for each objective. 
           
           Looking at the initial state, rover `v12` has access to the image targets `v17`, `v18`, `v19`, and `v20`.  Rover `v14` has access to these targets too. Since `v12`'s current configuration, `v13`, is different from the image/communication configurations, I need to plan movements.  I'll start by having `v12` take and send all the images. I will then utilize rover `v14` to analyze and send analysis for rocks `v1`, `v3`, `v4`, `v5`, `v7`, and `v8`.
           
           The plan to achieve all the `receivedimage` predicates for each target is as follows:
           I'm at `atconf(v12, v13)`.
           
           1.  *Move* `v12` to `#q3` (for `v17`).
           2.  *Calibrate* and *take* image of `v17`.
           3.  *Move* `v12` to `#q0` (communication).
           4.  *Send* the image of `v17`.
           5.  *Move* `v12` to `#q6` (for `v18`).
           6.  *Calibrate* and *take* image of `v18`.
           7.  *Move* `v12` to `#q0`.
           8.  *Send* the image of `v18`.
           9.  *Move* `v12` to `#q5` (for `v19`).
           10. *Calibrate* and *take* image of `v19`.
           11. *Move* `v12` to `#q0`.
           12. *Send* the image of `v19`.
           13. *Move* `v12` to `#q2` (for `v20`).
           14. *Calibrate* and *take* image of `v20`.
           15. *Move* `v12` to `#q0`.
           16. *Send* the image of `v20`.
           17. *Move* `v12` back to its initial configuration `v13`
           
           Rover `v14` needs to analyze and send the analysis.  It's initially `atconf(v14, v15)`.
           First, Rover `v14` will go to `#o5` analyze `v3`, `v4`, and `v7`, since those are at the same config. Then it will go to `#q9`, `#q11`, and `#q10`
           
           1.  *Move* rover `v14` to config `#o5`.
           2.  *Sample* rock `v3`.
           3.  *Move* rover to communication config, `#q8`
           4.  *Send* analysis of `v3`.
           5.  *Drop* sample.
           6.  *Move* rover back to `#o5`.
           7.  *Sample* `v4` and then send analysis.
           8.  *Sample* `v7` and then send analysis.
           9.  *Move* to `#q9`, `#q11` and `#q10` to analyze and send.
           10. Finally, *move* `v14` to its initial configuration, `v15`.
           
           I need to make sure the rovers move
)

Model:     **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, here's my plan to accomplish the goal `Atom new-axiom@0()`:
           
           First, let's break down the `new-axiom@0()` axiom.  It boils down to a conjunction of several conditions, with the core elements involving taking and sending images (`receivedimage`), analyzing rocks and soil, and ensuring both rovers, `v12` and `v14`, are in specific configurations.  The initial conditions already cover the `atconf` and `free` predicates for both rovers, which simplifies things. The key is to achieve all the `receivedimage` and `receivedanalysis` predicates.
           
           To get the images, I need to use the `send_image` action, which requires me to take images via `take_image` first. The preconditions for these actions dictate I need to be in the right `atconf` configuration to use both the camera and the communications.  Luckily, rover `v10` supports both the imaging and communication tasks needed.  The `imagevisible` and `comvisible` predicates give me the specific configurations I need for each objective. 
           
           Looking at the initial state, rover `v12` has access to the image targets `v17`, `v18`, `v19`, and `v20`.  Rover `v14` has access to these targets too. Since `v12`'s current configuration, `v13`, is different from the image/communication configurations, I need to plan movements.  I'll start by having `v12` take and send all the images. I will then utilize rover `v14` to analyze and send analysis for rocks `v1`, `v3`, `v4`, `v5`, `v7`, and `v8`.
           
           The plan to achieve all the `receivedimage` predicates for each target is as follows:
           I'm at `atconf(v12, v13)`.
           
           1.  *Move* `v12` to `#q3` (for `v17`).
           2.  *Calibrate* and *take* image of `v17`.
           3.  *Move* `v12` to `#q0` (communication).
           4.  *Send* the image of `v17`.
           5.  *Move* `v12` to `#q6` (for `v18`).
           6.  *Calibrate* and *take* image of `v18`.
           7.  *Move* `v12` to `#q0`.
           8.  *Send* the image of `v18`.
           9.  *Move* `v12` to `#q5` (for `v19`).
           10. *Calibrate* and *take* image of `v19`.
           11. *Move* `v12` to `#q0`.
           12. *Send* the image of `v19`.
           13. *Move* `v12` to `#q2` (for `v20`).
           14. *Calibrate* and *take* image of `v20`.
           15. *Move* `v12` to `#q0`.
           16. *Send* the image of `v20`.
           17. *Move* `v12` back to its initial configuration `v13`
           
           Rover `v14` needs to analyze and send the analysis.  It's initially `atconf(v14, v15)`.
           First, Rover `v14` will go to `#o5` analyze `v3`, `v4`, and `v7`, since those are at the same config. Then it will go to `#q9`, `#q11`, and `#q10`
           
           1.  *Move* rover `v14` to config `#o5`.
           2.  *Sample* rock `v3`.
           3.  *Move* rover to communication config, `#q8`
           4.  *Send* analysis of `v3`.
           5.  *Drop* sample.
           6.  *Move* rover back to `#o5`.
           7.  *Sample* `v4` and then send analysis.
           8.  *Sample* `v7` and then send analysis.
           9.  *Move* to `#q9`, `#q11` and `#q10` to analyze and send.
           10. Finally, *move* `v14` to its initial configuration, `v15`.
           
           I need to make sure the rovers move

