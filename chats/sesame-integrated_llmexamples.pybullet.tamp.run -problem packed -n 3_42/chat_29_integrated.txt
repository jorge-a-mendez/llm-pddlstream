User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g18: object
           #g19: object
           #g20: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q52: object
           #q53: object
           #q54: object
           #q55: object
           #q56: object
           #q57: object
           #q58: object
           #q59: object
           #q60: object
           #t160: object
           #t161: object
           #t162: object
           #t163: object
           #t164: object
           #t165: object
           #t166: object
           #t167: object
           #t168: object
           #t169: object
           #t170: object
           #t171: object
           #t172: object
           #t173: object
           #t174: object
           #t175: object
           #t176: object
           #t177: object
           #t178: object
           #t179: object
           #t180: object
           #t181: object
           #t182: object
           #t183: object
           #t184: object
           #t185: object
           #t186: object
           @sink: object
           @stove: object
           p3: object
           p4: object
           p43: object
           p44: object
           p5: object
           p6: object
           p7: object
           p8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v74: object
           v75: object
           v76: object
           v77: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v15 is a pose with position (-0.254, -0.214, 0.781) and quaternion (0.0, 0.0, 0.992, 0.127).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object p6 is a pose with position (0.04, 0.04, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.925, -1.926), (-0.107, -0.461)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.005, 0.005), (0.075, 0.075)).
           Object p44 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.04, -0.04, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p43 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v9 is a pose with position (0.059, -0.523, 0.781) and quaternion (0.0, 0.0, 0.804, 0.595).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.291, -0.598), (-0.192, -0.5)).
           Object v13 is a pose with position (-0.241, -0.549, 0.781) and quaternion (0.0, 0.0, 0.947, -0.321).
           Object p3 is a pose with position (0.04, 0.04, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (-0.04, -0.04, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (0.04, -0.04, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (-0.04, -0.04, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.297, -0.257), (-0.211, -0.172)).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p3)
           Atom supported(v8, p3, v16)
           Atom pose(v14, p5)
           Atom supported(v14, p5, v10)
           Atom supported(v14, p5, v16)
           Atom pose(v12, p4)
           Atom supported(v12, p4, v16)
           Atom supported(v12, p4, v10)
           Atom supported(v8, p3, v10)
           Atom kin(v32, v33, p3, v34, v35, v36)
           Atom kin(v32, v37, p4, v34, v35, v36)
           Atom kin(v32, v38, p5, v34, v35, v36)
           Atom pose(v14, p8)
           Atom supported(v14, p8, v10)
           Atom pose(v8, p6)
           Atom supported(v8, p6, v10)
           Atom supported(v8, p6, v16)
           Atom supported(v14, p8, v16)
           Atom pose(v12, p7)
           Atom supported(v12, p7, v16)
           Atom supported(v12, p7, v10)
           Atom kin(v32, v33, p6, v34, v35, v36)
           Atom kin(v32, v37, p7, v34, v35, v36)
           Atom kin(v32, v38, p8, v34, v35, v36)
           Atom pose(v14, p44)
           Atom supported(v14, p44, v16)
           Atom pose(v12, p43)
           Atom supported(v12, p43, v16)
           Atom supported(v12, p43, v10)
           Atom kin(v32, v37, p43, v74, v35, v36)
           Atom kin(v32, v38, p44, v75, v76, v77)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g18)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g20)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g19)
           Atom bconf(#q56)
           Atom atraj(#t167)
           Atom kin(v4, v14, v15, #g18, #q56, #t167)
           Atom bconf(#q60)
           Atom atraj(#t180)
           Atom kin(v4, v14, p44, #g18, #q60, #t180)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p5, #g18, #o3, #o4)
           Atom bconf(#q52)
           Atom atraj(#t160)
           Atom kin(v4, v14, p8, #g18, #q52, #t160)
           Atom bconf(#q53)
           Atom atraj(#t161)
           Atom kin(v4, v8, p6, #g19, #q53, #t161)
           Atom bconf(#q54)
           Atom atraj(#t162)
           Atom kin(v4, v8, v9, #g19, #q54, #t162)
           Atom bconf(#q58)
           Atom atraj(#t175)
           Atom kin(v4, v8, p3, #g19, #q58, #t175)
           Atom bconf(#q55)
           Atom atraj(#t166)
           Atom kin(v4, v12, v13, #g20, #q55, #t166)
           Atom kin(v4, v12, p43, #g20, #o3, #o4)
           Atom bconf(#q59)
           Atom atraj(#t179)
           Atom kin(v4, v12, p4, #g20, #q59, #t179)
           Atom bconf(#q57)
           Atom atraj(#t168)
           Atom kin(v4, v12, p7, #g20, #q57, #t168)
           Atom btraj(#t173)
           Atom basemotion(#q56, #t173, v3)
           Atom basemotion(#q56, #o0, #q56)
           Atom basemotion(v3, #o0, #q56)
           Atom basemotion(#q58, #o0, v3)
           Atom basemotion(#q58, #o0, #q58)
           Atom basemotion(v3, #o0, #q58)
           Atom btraj(#t181)
           Atom basemotion(#q56, #t181, #q58)
           Atom btraj(#t177)
           Atom basemotion(#q58, #t177, #q56)
           Atom btraj(#t171)
           Atom basemotion(#q54, #t171, v3)
           Atom basemotion(#q54, #o0, #q54)
           Atom btraj(#t165)
           Atom basemotion(v3, #t165, #q54)
           Atom basemotion(#q58, #o0, #q54)
           Atom btraj(#t178)
           Atom basemotion(#q54, #t178, #q58)
           Atom basemotion(#q56, #o0, #q54)
           Atom basemotion(#q54, #o0, #q56)
           Atom btraj(#t170)
           Atom basemotion(#q53, #t170, v3)
           Atom basemotion(#q53, #o0, #q53)
           Atom btraj(#t164)
           Atom basemotion(v3, #t164, #q53)
           Atom basemotion(#q54, #o0, #q53)
           Atom basemotion(#q53, #o0, #q54)
           Atom basemotion(#q58, #o0, #q53)
           Atom basemotion(#q53, #o0, #q58)
           Atom basemotion(#q56, #o0, #q53)
           Atom basemotion(#q53, #o0, #q56)
           Atom basemotion(#q52, #o0, #q56)
           Atom basemotion(#q52, #o0, #q53)
           Atom basemotion(#q52, #o0, #q58)
           Atom basemotion(#q52, #o0, #q54)
           Atom btraj(#t169)
           Atom basemotion(#q52, #t169, v3)
           Atom basemotion(#q56, #o0, #q52)
           Atom basemotion(#q53, #o0, #q52)
           Atom basemotion(#q52, #o0, #q52)
           Atom basemotion(#q58, #o0, #q52)
           Atom basemotion(#q54, #o0, #q52)
           Atom btraj(#t163)
           Atom basemotion(v3, #t163, #q52)
           Atom basemotion(#q57, #o0, #q53)
           Atom basemotion(#q57, #o0, #q58)
           Atom basemotion(#q57, #o0, #q54)
           Atom btraj(#t174)
           Atom basemotion(#q57, #t174, v3)
           Atom basemotion(#q53, #o0, #q57)
           Atom basemotion(#q58, #o0, #q57)
           Atom basemotion(#q57, #o0, #q57)
           Atom basemotion(#q54, #o0, #q57)
           Atom basemotion(v3, #o0, #q57)
           Atom basemotion(#q56, #o0, #q57)
           Atom basemotion(#q57, #o0, #q56)
           Atom basemotion(#q52, #o0, #q57)
           Atom basemotion(#q57, #o0, #q52)
           Atom basemotion(#q59, #o0, #q53)
           Atom basemotion(#q59, #o0, #q58)
           Atom basemotion(#q59, #o0, #q54)
           Atom basemotion(#q59, #o0, v3)
           Atom basemotion(#q59, #o0, #q59)
           Atom basemotion(#q53, #o0, #q59)
           Atom basemotion(#q58, #o0, #q59)
           Atom basemotion(#q54, #o0, #q59)
           Atom basemotion(v3, #o0, #q59)
           Atom basemotion(#q57, #o0, #q59)
           Atom basemotion(#q59, #o0, #q57)
           Atom btraj(#t182)
           Atom basemotion(#q56, #t182, #q59)
           Atom basemotion(#q59, #o0, #q56)
           Atom basemotion(#q52, #o0, #q59)
           Atom basemotion(#q59, #o0, #q52)
           Atom basemotion(#q60, #o0, #q56)
           Atom basemotion(#q60, #o0, #q59)
           Atom basemotion(#q60, #o0, #q53)
           Atom basemotion(#q60, #o0, #q58)
           Atom basemotion(#q60, #o0, #q57)
           Atom basemotion(#q60, #o0, #q54)
           Atom basemotion(#q60, #o0, v3)
           Atom btraj(#t183)
           Atom basemotion(#q56, #t183, #q60)
           Atom basemotion(#q59, #o0, #q60)
           Atom basemotion(#q53, #o0, #q60)
           Atom basemotion(#q58, #o0, #q60)
           Atom basemotion(#q57, #o0, #q60)
           Atom basemotion(#q60, #o0, #q60)
           Atom basemotion(#q54, #o0, #q60)
           Atom basemotion(v3, #o0, #q60)
           Atom basemotion(#q52, #o0, #q60)
           Atom basemotion(#q60, #o0, #q52)
           Atom basemotion(#q55, #o0, #q53)
           Atom btraj(#t176)
           Atom basemotion(#q55, #t176, #q58)
           Atom basemotion(#q55, #o0, #q54)
           Atom btraj(#t172)
           Atom basemotion(#q55, #t172, v3)
           Atom basemotion(#q55, #o0, #q55)
           Atom basemotion(#q53, #o0, #q55)
           Atom btraj(#t184)
           Atom basemotion(#q58, #t184, #q55)
           Atom basemotion(#q54, #o0, #q55)
           Atom basemotion(v3, #o0, #q55)
           Atom btraj(#t185)
           Atom basemotion(#q59, #t185, #q55)
           Atom basemotion(#q55, #o0, #q59)
           Atom basemotion(#q57, #o0, #q55)
           Atom basemotion(#q55, #o0, #q57)
           Atom basemotion(#q56, #o0, #q55)
           Atom basemotion(#q55, #o0, #q56)
           Atom btraj(#t186)
           Atom basemotion(#q60, #t186, #q55)
           Atom basemotion(#q55, #o0, #q60)
           Atom basemotion(#q52, #o0, #q55)
           Atom basemotion(#q55, #o0, #q52)
           Atom kin(v4, v8, #o2, #g19, #o3, #o4)
           Atom kin(v4, v12, #o2, #g20, #o3, #o4)
           Atom kin(v4, v14, #o2, #g18, #o3, #o4)
           Atom basemotion(#o3, #o0, #q53)
           Atom basemotion(#o3, #o0, #q58)
           Atom basemotion(#o3, #o0, #q54)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q53, #o0, #o3)
           Atom basemotion(#q58, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q54, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q55, #o0, #o3)
           Atom basemotion(#o3, #o0, #q55)
           Atom basemotion(#q59, #o0, #o3)
           Atom basemotion(#o3, #o0, #q59)
           Atom basemotion(#q57, #o0, #o3)
           Atom basemotion(#o3, #o0, #q57)
           Atom basemotion(#q56, #o0, #o3)
           Atom basemotion(#o3, #o0, #q56)
           Atom basemotion(#q60, #o0, #o3)
           Atom basemotion(#o3, #o0, #q60)
           Atom basemotion(#q52, #o0, #o3)
           Atom basemotion(#o3, #o0, #q52)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q52 #o0))
           ((move_base #o3 #q53 #o0))
           ((move_base #o3 #q54 #o0))
           ((move_base #o3 #q55 #o0))
           ((move_base #o3 #q56 #o0))
           ((move_base #o3 #q57 #o0))
           ((move_base #o3 #q58 #o0))
           ((move_base #o3 #q59 #o0))
           ((move_base #o3 #q60 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q52 #o3 #o0))
           ((move_base #q52 #q52 #o0))
           ((move_base #q52 #q53 #o0))
           ((move_base #q52 #q54 #o0))
           ((move_base #q52 #q55 #o0))
           ((move_base #q52 #q56 #o0))
           ((move_base #q52 #q57 #o0))
           ((move_base #q52 #q58 #o0))
           ((move_base #q52 #q59 #o0))
           ((move_base #q52 #q60 #o0))
           ((move_base #q52 v3 #t169))
           ((move_base #q53 #o3 #o0))
           ((move_base #q53 #q52 #o0))
           ((move_base #q53 #q53 #o0))
           ((move_base #q53 #q54 #o0))
           ((move_base #q53 #q55 #o0))
           ((move_base #q53 #q56 #o0))
           ((move_base #q53 #q57 #o0))
           ((move_base #q53 #q58 #o0))
           ((move_base #q53 #q59 #o0))
           ((move_base #q53 #q60 #o0))
           ((move_base #q53 v3 #t170))
           ((move_base #q54 #o3 #o0))
           ((move_base #q54 #q52 #o0))
           ((move_base #q54 #q53 #o0))
           ((move_base #q54 #q54 #o0))
           ((move_base #q54 #q55 #o0))
           ((move_base #q54 #q56 #o0))
           ((move_base #q54 #q57 #o0))
           ((move_base #q54 #q59 #o0))
           ((move_base #q54 #q60 #o0))
           ((move_base #q54 v3 #t171))
           ((move_base #q54 #q58 #t178))
           ((move_base #q55 #o3 #o0))
           ((move_base #q55 #q52 #o0))
           ((move_base #q55 #q53 #o0))
           ((move_base #q55 #q54 #o0))
           ((move_base #q55 #q55 #o0))
           ((move_base #q55 #q56 #o0))
           ((move_base #q55 #q57 #o0))
           ((move_base #q55 #q59 #o0))
           ((move_base #q55 #q60 #o0))
           ((move_base #q55 v3 #t172))
           ((move_base #q55 #q58 #t176))
           ((move_base #q56 #o3 #o0))
           ((move_base #q56 #q52 #o0))
           ((move_base #q56 #q53 #o0))
           ((move_base #q56 #q54 #o0))
           ((move_base #q56 #q55 #o0))
           ((move_base #q56 #q56 #o0))
           ((move_base #q56 #q57 #o0))
           ((move_base #q56 v3 #t173))
           ((move_base #q56 #q58 #t181))
           ((move_base #q56 #q59 #t182))
           ((move_base #q56 #q60 #t183))
           ((move_base #q57 #o3 #o0))
           ((move_base #q57 #q52 #o0))
           ((move_base #q57 #q53 #o0))
           ((move_base #q57 #q54 #o0))
           ((move_base #q57 #q55 #o0))
           ((move_base #q57 #q56 #o0))
           ((move_base #q57 #q57 #o0))
           ((move_base #q57 #q58 #o0))
           ((move_base #q57 #q59 #o0))
           ((move_base #q57 #q60 #o0))
           ((move_base #q57 v3 #t174))
           ((move_base #q58 #o3 #o0))
           ((move_base #q58 #q52 #o0))
           ((move_base #q58 #q53 #o0))
           ((move_base #q58 #q54 #o0))
           ((move_base #q58 #q57 #o0))
           ((move_base #q58 #q58 #o0))
           ((move_base #q58 #q59 #o0))
           ((move_base #q58 #q60 #o0))
           ((move_base #q58 v3 #o0))
           ((move_base #q58 #q56 #t177))
           ((move_base #q58 #q55 #t184))
           ((move_base #q59 #o3 #o0))
           ((move_base #q59 #q52 #o0))
           ((move_base #q59 #q53 #o0))
           ((move_base #q59 #q54 #o0))
           ((move_base #q59 #q56 #o0))
           ((move_base #q59 #q57 #o0))
           ((move_base #q59 #q58 #o0))
           ((move_base #q59 #q59 #o0))
           ((move_base #q59 #q60 #o0))
           ((move_base #q59 v3 #o0))
           ((move_base #q59 #q55 #t185))
           ((move_base #q60 #o3 #o0))
           ((move_base #q60 #q52 #o0))
           ((move_base #q60 #q53 #o0))
           ((move_base #q60 #q54 #o0))
           ((move_base #q60 #q56 #o0))
           ((move_base #q60 #q57 #o0))
           ((move_base #q60 #q58 #o0))
           ((move_base #q60 #q59 #o0))
           ((move_base #q60 #q60 #o0))
           ((move_base #q60 v3 #o0))
           ((move_base #q60 #q55 #t186))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q55 #o0))
           ((move_base v3 #q56 #o0))
           ((move_base v3 #q57 #o0))
           ((move_base v3 #q58 #o0))
           ((move_base v3 #q59 #o0))
           ((move_base v3 #q60 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q52 #t163))
           ((move_base v3 #q53 #t164))
           ((move_base v3 #q54 #t165))
           ((pick v4 v12 #o2 #g20 #o3 #o4))
           ((place v4 v12 #o2 #g20 #o3 #o4))
           ((pick v4 v12 p4 #g20 #q59 #t179))
           ((place v4 v12 p4 #g20 #q59 #t179))
           ((pick v4 v12 p43 #g20 #o3 #o4))
           ((place v4 v12 p43 #g20 #o3 #o4))
           ((pick v4 v12 p7 #g20 #q57 #t168))
           ((place v4 v12 p7 #g20 #q57 #t168))
           ((pick v4 v12 v13 #g20 #q55 #t166))
           ((place v4 v12 v13 #g20 #q55 #t166))
           ((pick v4 v14 #o2 #g18 #o3 #o4))
           ((place v4 v14 #o2 #g18 #o3 #o4))
           ((pick v4 v14 p44 #g18 #q60 #t180))
           ((place v4 v14 p44 #g18 #q60 #t180))
           ((pick v4 v14 p5 #g18 #o3 #o4))
           ((place v4 v14 p5 #g18 #o3 #o4))
           ((pick v4 v14 p8 #g18 #q52 #t160))
           ((place v4 v14 p8 #g18 #q52 #t160))
           ((pick v4 v14 v15 #g18 #q56 #t167))
           ((place v4 v14 v15 #g18 #q56 #t167))
           ((pick v4 v8 #o2 #g19 #o3 #o4))
           ((place v4 v8 #o2 #g19 #o3 #o4))
           ((pick v4 v8 p3 #g19 #q58 #t175))
           ((place v4 v8 p3 #g19 #q58 #t175))
           ((pick v4 v8 p6 #g19 #q53 #t161))
           ((place v4 v8 p6 #g19 #q53 #t161))
           ((pick v4 v8 v9 #g19 #q54 #t162))
           ((place v4 v8 v9 #g19 #q54 #t162))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q47', '#t142'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g15', '#q47', '#t136'))
           Action(name='move_base', args=('#q47', '#q43', '#t156'))
           Action(name='place', args=('v4', 'v8', 'p3', '#g15', '#q43', '#t132'))
           Action(name='move_base', args=('#q43', '#q45', '#t158'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g17', '#q45', '#t134'))
           Action(name='move_base', args=('#q45', '#q46', '#t157'))
           Action(name='place', args=('v4', 'v12', 'p4', '#g17', '#q46', '#t135'))
           Action(name='move_base', args=('#q46', '#q48', '#t159'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g16', '#q48', '#t137'))
           Action(name='move_base', args=('#q48', '#q51', '#t155'))
           Action(name='place', args=('v4', 'v14', 'p44', '#g16', '#q51', '#t154'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-traj-pose:('#t154', 'v12', 'p4')->()`, which impeded executing the action place('v4', 'v14', 'p44', '#g16', '#q51', '#t154').
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The problem requires moving three objects (v8, v12, v14) to be on surface v16. Currently, v8 is at v9 and supported by v11, v12 is at v13 and supported by v11, and v14 is at v15 and supported by v11. All objects are supported by v11. There are precomputed poses for each object on v16:
           - v8 has poses p3, p6, and #o2 on v16.
           - v12 has poses p4, p43, p7, and #o2 on v16.
           - v14 has poses p5, p8, p44, and #o2 on v16.
           
           The previous plan failed because placing v14 at p44 caused a collision with v12 at p4. This means we need to find a different set of target poses or a different sequence of placements to avoid collisions. The #o2 pose is shared by all three objects, which means we need to provide unique collision-free poses if we were to use it. However, there are enough precomputed poses without '#' for v16. We should try to place objects at distinct poses on v16 to avoid collisions.
           
           Let's try to place:
           - v8 at p3
           - v12 at p43
           - v14 at p44
           
           These poses are all on `v16`. Since `v16` has AABB `((-0.135, -0.135), (0.135, 0.135))`, we need to ensure that p3, p43, and p44 are sufficiently separated. Let's check the coordinates of these poses:
           - p3: (0.04, 0.04, 0.782)
           - p43: (-0.05, -0.05, 0.782)
           - p44: (0.05, -0.05, 0.782)
           
           These positions are distinct. We will pick each object from its initial pose and place it on one of the target poses on v16. We will prioritize placing objects that are further away from the current base configuration v3 first, to reduce potential re-moving.
           
           Initial state has objects v8, v12, v14 at v9, v13, v15 respectively.
           v9: (0.059, -0.523, 0.781)
           v13: (-0.241, -0.549, 0.781)
           v15: (-0.254, -0.214, 0.781)
           
           Base config v3: (-1.0, 0.0, 0.0).
           
           Pick v12 from v13 and place it at p43.
           Pick v14 from v15 and place it at p44.
           Pick v8 from v9 and place it at p3.
           
           --Plan--:
           (move_base v3 #q55 #o0)
           (pick v4 v12 v13 #g20 #q55 #t166)
           (move_base #q55 #o3 #o0)
           (place v4 v12 p43 #g20 #o3 #o4)
           (move_base #o3 #q56 #o0)
           (pick v4 v14 v15 #g18 #q56 #t167)
           (move_base #q56 #q58 #t181)
           (place v4 v14 p3 #g18 #q58 #t175)
           (move_base #q58 #q54 #t178)
           (pick v4 v8 v9 #g19 #q54 #t162)
           (move_base #q54 #o3 #o0)
           (place v4 v8 p43 #g19 #o3 #o4)

User:      The plan you provided contains the following invalid actions: `(place v4 v14 p3 #g18 #q58 #t175) , (move_base #q58 #q54 #t178) , (place v4 v8 p43 #g19 #o3 #o4)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q52 #o0))
           ((move_base #o3 #q53 #o0))
           ((move_base #o3 #q54 #o0))
           ((move_base #o3 #q55 #o0))
           ((move_base #o3 #q56 #o0))
           ((move_base #o3 #q57 #o0))
           ((move_base #o3 #q58 #o0))
           ((move_base #o3 #q59 #o0))
           ((move_base #o3 #q60 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q52 #o3 #o0))
           ((move_base #q52 #q52 #o0))
           ((move_base #q52 #q53 #o0))
           ((move_base #q52 #q54 #o0))
           ((move_base #q52 #q55 #o0))
           ((move_base #q52 #q56 #o0))
           ((move_base #q52 #q57 #o0))
           ((move_base #q52 #q58 #o0))
           ((move_base #q52 #q59 #o0))
           ((move_base #q52 #q60 #o0))
           ((move_base #q52 v3 #t169))
           ((move_base #q53 #o3 #o0))
           ((move_base #q53 #q52 #o0))
           ((move_base #q53 #q53 #o0))
           ((move_base #q53 #q54 #o0))
           ((move_base #q53 #q55 #o0))
           ((move_base #q53 #q56 #o0))
           ((move_base #q53 #q57 #o0))
           ((move_base #q53 #q58 #o0))
           ((move_base #q53 #q59 #o0))
           ((move_base #q53 #q60 #o0))
           ((move_base #q53 v3 #t170))
           ((move_base #q54 #o3 #o0))
           ((move_base #q54 #q52 #o0))
           ((move_base #q54 #q53 #o0))
           ((move_base #q54 #q54 #o0))
           ((move_base #q54 #q55 #o0))
           ((move_base #q54 #q56 #o0))
           ((move_base #q54 #q57 #o0))
           ((move_base #q54 #q59 #o0))
           ((move_base #q54 #q60 #o0))
           ((move_base #q54 v3 #t171))
           ((move_base #q54 #q58 #t178))
           ((move_base #q55 #o3 #o0))
           ((move_base #q55 #q52 #o0))
           ((move_base #q55 #q53 #o0))
           ((move_base #q55 #q54 #o0))
           ((move_base #q55 #q55 #o0))
           ((move_base #q55 #q56 #o0))
           ((move_base #q55 #q57 #o0))
           ((move_base #q55 #q59 #o0))
           ((move_base #q55 #q60 #o0))
           ((move_base #q55 v3 #t172))
           ((move_base #q55 #q58 #t176))
           ((move_base #q56 #o3 #o0))
           ((move_base #q56 #q52 #o0))
           ((move_base #q56 #q53 #o0))
           ((move_base #q56 #q54 #o0))
           ((move_base #q56 #q55 #o0))
           ((move_base #q56 #q56 #o0))
           ((move_base #q56 #q57 #o0))
           ((move_base #q56 v3 #t173))
           ((move_base #q56 #q58 #t181))
           ((move_base #q56 #q59 #t182))
           ((move_base #q56 #q60 #t183))
           ((move_base #q57 #o3 #o0))
           ((move_base #q57 #q52 #o0))
           ((move_base #q57 #q53 #o0))
           ((move_base #q57 #q54 #o0))
           ((move_base #q57 #q55 #o0))
           ((move_base #q57 #q56 #o0))
           ((move_base #q57 #q57 #o0))
           ((move_base #q57 #q58 #o0))
           ((move_base #q57 #q59 #o0))
           ((move_base #q57 #q60 #o0))
           ((move_base #q57 v3 #t174))
           ((move_base #q58 #o3 #o0))
           ((move_base #q58 #q52 #o0))
           ((move_base #q58 #q53 #o0))
           ((move_base #q58 #q54 #o0))
           ((move_base #q58 #q57 #o0))
           ((move_base #q58 #q58 #o0))
           ((move_base #q58 #q59 #o0))
           ((move_base #q58 #q60 #o0))
           ((move_base #q58 v3 #o0))
           ((move_base #q58 #q56 #t177))
           ((move_base #q58 #q55 #t184))
           ((move_base #q59 #o3 #o0))
           ((move_base #q59 #q52 #o0))
           ((move_base #q59 #q53 #o0))
           ((move_base #q59 #q54 #o0))
           ((move_base #q59 #q56 #o0))
           ((move_base #q59 #q57 #o0))
           ((move_base #q59 #q58 #o0))
           ((move_base #q59 #q59 #o0))
           ((move_base #q59 #q60 #o0))
           ((move_base #q59 v3 #o0))
           ((move_base #q59 #q55 #t185))
           ((move_base #q60 #o3 #o0))
           ((move_base #q60 #q52 #o0))
           ((move_base #q60 #q53 #o0))
           ((move_base #q60 #q54 #o0))
           ((move_base #q60 #q56 #o0))
           ((move_base #q60 #q57 #o0))
           ((move_base #q60 #q58 #o0))
           ((move_base #q60 #q59 #o0))
           ((move_base #q60 #q60 #o0))
           ((move_base #q60 v3 #o0))
           ((move_base #q60 #q55 #t186))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q55 #o0))
           ((move_base v3 #q56 #o0))
           ((move_base v3 #q57 #o0))
           ((move_base v3 #q58 #o0))
           ((move_base v3 #q59 #o0))
           ((move_base v3 #q60 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q52 #t163))
           ((move_base v3 #q53 #t164))
           ((move_base v3 #q54 #t165))
           ((pick v4 v12 #o2 #g20 #o3 #o4))
           ((place v4 v12 #o2 #g20 #o3 #o4))
           ((pick v4 v12 p4 #g20 #q59 #t179))
           ((place v4 v12 p4 #g20 #q59 #t179))
           ((pick v4 v12 p43 #g20 #o3 #o4))
           ((place v4 v12 p43 #g20 #o3 #o4))
           ((pick v4 v12 p7 #g20 #q57 #t168))
           ((place v4 v12 p7 #g20 #q57 #t168))
           ((pick v4 v12 v13 #g20 #q55 #t166))
           ((place v4 v12 v13 #g20 #q55 #t166))
           ((pick v4 v14 #o2 #g18 #o3 #o4))
           ((place v4 v14 #o2 #g18 #o3 #o4))
           ((pick v4 v14 p44 #g18 #q60 #t180))
           ((place v4 v14 p44 #g18 #q60 #t180))
           ((pick v4 v14 p5 #g18 #o3 #o4))
           ((place v4 v14 p5 #g18 #o3 #o4))
           ((pick v4 v14 p8 #g18 #q52 #t160))
           ((place v4 v14 p8 #g18 #q52 #t160))
           ((pick v4 v14 v15 #g18 #q56 #t167))
           ((place v4 v14 v15 #g18 #q56 #t167))
           ((pick v4 v8 #o2 #g19 #o3 #o4))
           ((place v4 v8 #o2 #g19 #o3 #o4))
           ((pick v4 v8 p3 #g19 #q58 #t175))
           ((place v4 v8 p3 #g19 #q58 #t175))
           ((pick v4 v8 p6 #g19 #q53 #t161))
           ((place v4 v8 p6 #g19 #q53 #t161))
           ((pick v4 v8 v9 #g19 #q54 #t162))
           ((place v4 v8 v9 #g19 #q54 #t162))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The problem requires moving three objects (v8, v12, v14) to be on surface v16. Currently, v8 is at v9 and supported by v11, v12 is at v13 and supported by v11, and v14 is at v15 and supported by v11. All objects are supported by v11. There are precomputed poses for each object on v16:
           - v8 has poses p3, p6, and #o2 on v16.
           - v12 has poses p4, p43, p7, and #o2 on v16.
           - v14 has poses p5, p8, p44, and #o2 on v16.
           
           The previous plan failed due to invalid actions, specifically placing v14 at p3 when the action `(place v4 v14 p3 #g18 #q58 #t175)` was not in the provided list of valid actions. Also, there was an issue with `(move_base #q58 #q54 #t178)` and `(place v4 v8 p43 #g19 #o3 #o4)`. My mistake was not carefully checking the full list of valid actions.
           
           Let's re-evaluate the target poses for each object on v16 and the available actions.
           The goal is `on(v8, v16)`, `on(v12, v16)`, and `on(v14, v16)`.
           We need to pick each object from its initial pose and place it on a distinct valid pose on `v16`.
           
           Available place actions for v8 on v16 are:
           `(place v4 v8 p3 #g19 #q58 #t175)`
           `(place v4 v8 p6 #g19 #q53 #t161)`
           `(place v4 v8 #o2 #g19 #o3 #o4)`
           
           Available place actions for v12 on v16 are:
           `(place v4 v12 p4 #g20 #q59 #t179)`
           `(place v4 v12 p43 #g20 #o3 #o4)`
           `(place v4 v12 p7 #g20 #q57 #t168)`
           `(place v4 v12 #o2 #g20 #o3 #o4)`
           
           Available place actions for v14 on v16 are:
           `(place v4 v14 p44 #g18 #q60 #t180)`
           `(place v4 v14 p5 #g18 #o3 #o4)`
           `(place v4 v14 p8 #g18 #q52 #t160)`
           `(place v4 v14 #o2 #g18 #o3 #o4)`
           
           The previous plan attempted to place v14 at p3, but p3 is only a supported pose for v8. So, the action was invalid. I should have used `p44` or `p5` or `p8` for `v14` on `v16`.
           
           Let's try to achieve the goal by placing:
           - `v8` at `p3`
           - `v12` at `p4`
           - `v14` at `p44`
           
           These are all distinct poses on `v16`.
           
           The initial object locations are:
           - `v8` at `v9`
           - `v12` at `v13`
           - `v14` at `v15`
           
           The base configuration for picking:
           - For `v8` at `v9` with `g19`: `#q54`
           - For `v12` at `v13` with `g20`: `#q55`
           - For `v14` at `v15` with `g18`: `#q56`
           
           The base configuration for placing:
           - For `v8` at `p3` with `g19`: `#q58`
           - For `v12` at `p4` with `g20`: `#q59`
           - For `v14` at `p44` with `g18`: `#q60`
           
           Let's sequence the actions:
           
           1. Pick `v12` from `v13` (current base `v3`, pick requires `#q55`).
           2. Place `v12` at `p4` (current base `#q55`, place requires `#q59`).
           3. Pick `v14` from `v15` (current base `#q59`, pick requires `#q56`).
           4. Place `v14` at `p44` (current base `#q56`, place requires `#q60`).
           5. Pick `v8` from `v9` (current base `#q60`, pick requires `#q54`).
           6. Place `v8` at `p3` (current base `#q54`, place requires `#q58`).
           
           Let's check the `move_base` actions required for this sequence:
           - `v3` to `#q55` (for picking `v12`): `(move_base v3 #q55 #o0)` is valid.
           - `#q55` to `#q59` (for placing `v12`): `(move_base #q55 #q59 #o0)` is valid.
           - `#q59` to `#q56` (for picking `v14`): `(move_base #q59 #q56 #o0)` is valid.
           - `#q56` to `#q60` (for placing `v14`): `(move_base #q56 #q60 #t183)` is valid.
           - `#q60` to `#q54` (for picking `v8`): `(move_base #q60 #q54 #o0)` is valid.
           - `#q54` to `#q58` (for placing `v8`): `(move_base #q54 #q58 #t178)` is valid.
           
           All these move base actions seem to be available.
           
           --Plan--:
           (move_base v3 #q55 #o0)
           (pick v4 v12 v13 #g20 #q55 #t166)
           (move_base #q55 #q59 #o0)
           (place v4 v12 p4 #g20 #q59 #t179)
           (move_base #q59 #q56 #o0)
           (pick v4 v14 v15 #g18 #q56 #t167)
           (move_base #q56 #q60 #t183)
           (place v4 v14 p44 #g18 #q60 #t180)
           (move_base #q60 #q54 #o0)
           (pick v4 v8 v9 #g19 #q54 #t162)
           (move_base #q54 #q58 #t178)
           (place v4 v8 p3 #g19 #q58 #t175)

