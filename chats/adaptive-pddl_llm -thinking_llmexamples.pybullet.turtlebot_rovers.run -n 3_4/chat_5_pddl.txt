User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom type(v8, v6)
           Atom objective(v17)
           Atom objective(v18)
           Atom rover(v14)
           Atom objective(v19)
           Atom type(v5, v6)
           Atom free(v12, v16)
           Atom rock(v5)
           Atom supports(v10, v11)
           Atom rock(v3)
           Atom atconf(v12, v13)
           Atom rover(v12)
           Atom lander(v9)
           Atom type(v1, v2)
           Atom conf(v14, v15)
           Atom type(v3, v2)
           Atom type(v7, v6)
           Atom type(v4, v2)
           Atom rock(v1)
           Atom free(v14, v16)
           Atom onboard(v10, v12)
           Atom atconf(v14, v15)
           Atom camera(v10)
           Atom rock(v8)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom rock(v4)
           Atom rock(v7)
           Atom conf(v12, v13)
           Atom store(v16)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v4)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #q1, #y1, v17)
           Atom imagerange(v12, #q1, v17)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v12, #q5, v8)
           Atom conf(v12, #q5)
           Atom above(v12, #q3, v1)
           Atom conf(v12, #q3)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v12, #q4, #y3, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #o5, v7)
           Atom above(v12, #o5, v3)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q8, #y5, v19)
           Atom imagerange(v14, #q8, v19)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom comvisible(v14, #q6, #y4, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom above(v14, #q9, v1)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom above(v14, #q7, v8)
           Atom conf(v14, #q7)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom imagevisible(v12, #q2, #y2, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom above(v14, #o5, v5)
           Atom above(v12, #q10, v5)
           Atom conf(v12, #q10)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, v13, #t0, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q1, #t13, #q2)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #t2, #q0)
           Atom motion(v12, #q0, #t3, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q10, #t23, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q1, #t1, #q0)
           Atom motion(v12, #q0, #t19, #q2)
           Atom motion(v12, #q0, #t22, #q10)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #t8, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #t14, #q8)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q3, #t9, #q1)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, v13, #t12, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #t4, #q0)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q0, #t6, #q3)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #t20, #q9)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #t5, #q0)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q0, #t7, #q5)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, v13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q4, #t18, #q0)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q0, #t21, #q4)
           Atom motion(v14, #q7, #t15, #q6)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q8, #t10, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q6, #t11, v15)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q9, #t16, #q6)
           Atom motion(v14, #q6, #t17, #q7)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #q8, #o2, #o3)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q8)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #q10 v5 v16))
           ((sample_rock v12 #q3 v1 v16))
           ((sample_rock v12 #q5 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q7 v8 v16))
           ((sample_rock v14 #q9 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #t19 #q2))
           ((move v12 #q0 #t21 #q4))
           ((move v12 #q0 #t22 #q10))
           ((move v12 #q0 #t3 v13))
           ((move v12 #q0 #t6 #q3))
           ((move v12 #q0 #t7 #q5))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t1 #q0))
           ((move v12 #q1 #t13 #q2))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t23 #q0))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t2 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t4 #q0))
           ((move v12 #q3 #t9 #q1))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t18 #q0))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t5 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q5))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q1))
           ((move v12 v13 #t12 #q3))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 #q8))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #t11 v15))
           ((move v14 #q6 #t17 #q7))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t14 #q8))
           ((move v14 #q7 #t15 #q6))
           ((move v14 #q8 #o2 #o3))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t10 #q6))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t16 #q6))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t20 #q9))
           ((move v14 v15 #t8 #q7))
           ((calibrate v12 #q1 #y1 v17 v10))
           ((calibrate v12 #q2 #y2 v18 v10))
           ((calibrate v12 #q4 #y3 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #q8 #y5 v19 v10))
           ((take_image v12 #q1 #y1 v17 v10 v11))
           ((take_image v12 #q2 #y2 v18 v10 v11))
           ((take_image v12 #q4 #y3 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #q8 #y5 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y4 v9 v3))
           ((send_analysis v14 #q6 #y4 v9 v4))
           ((send_analysis v14 #q6 #y4 v9 v5))
           ((send_analysis v14 #q6 #y4 v9 v7))
           ((send_analysis v14 #q6 #y4 v9 v8))
           ((send_analysis v14 #q6 #y4 v9 v1))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v14 #q6 #y4 v9 v17 v11))
           ((send_image v14 #q6 #y4 v9 v18 v11))
           ((send_image v14 #q6 #y4 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **My Thought Process for Achieving `Atom new-axiom@0()`**
           
           Okay, here's the plan. I've broken down this axiom, `new-axiom@0()`, and I need to come up with a sequence of actions. I'm starting with a few key pieces of information: I know where the rovers are, I know what objectives I have, I have a clear mode of communication, and I can identify the soil and rock samples available. I've got two rovers at specific configurations that need to remain that way, `atconf(v12, v13)` and `atconf(v14, v15)`, so both rovers must remain at their starting configurations at the end of the process.
           
           **Image Acquisition:** The first part is to capture images and send them. I'll need to use rover `v12` with its camera, `v10`, and mode `v11`. It looks like there are three image objectives, `v17`, `v18`, and `v19`. I'll have `v12` move to the necessary locations (`#q1`, `#q2`, `#q4`) to calibrate its camera, take images, and then communicate them back to the lander, `v9`. I'll also move `v12` to `#q0` to get into communication range to ensure the images are sent back to the lander.
           
           **Analysis of Samples:** Now, I've got to analyze rock and soil samples. I have two rock/soil samples with specific analysis types to be considered. I'll move `v12` to the rock location, sample it to determine its type, and then move back to `#q0` to communicate the sample to `v9`. I'll repeat this for the soil sample. I am going to have `v12` get rocks `v1` and `v5`.
           
           **Putting it all Together:** After all the images and analyses are sent to the lander, `v9`, I'm going to send `v12` back to its original location, `v13`, and make sure the rover configuration stays at `atconf(v14, v15)` so that all the conditions of this axiom are properly satisfied. That sequence should do it and satisfy the goal. I have made sure that the store for both rovers is free at the start of the action and at the end so it can be used for new tasks if necessary. Also, I will return the rovers to their initial positions to satisfy all criteria. It makes sense, I'm confident.
           
)

Model:     **My Thought Process for Achieving `Atom new-axiom@0()`**
           
           Okay, here's the plan. I've broken down this axiom, `new-axiom@0()`, and I need to come up with a sequence of actions. I'm starting with a few key pieces of information: I know where the rovers are, I know what objectives I have, I have a clear mode of communication, and I can identify the soil and rock samples available. I've got two rovers at specific configurations that need to remain that way, `atconf(v12, v13)` and `atconf(v14, v15)`, so both rovers must remain at their starting configurations at the end of the process.
           
           **Image Acquisition:** The first part is to capture images and send them. I'll need to use rover `v12` with its camera, `v10`, and mode `v11`. It looks like there are three image objectives, `v17`, `v18`, and `v19`. I'll have `v12` move to the necessary locations (`#q1`, `#q2`, `#q4`) to calibrate its camera, take images, and then communicate them back to the lander, `v9`. I'll also move `v12` to `#q0` to get into communication range to ensure the images are sent back to the lander.
           
           **Analysis of Samples:** Now, I've got to analyze rock and soil samples. I have two rock/soil samples with specific analysis types to be considered. I'll move `v12` to the rock location, sample it to determine its type, and then move back to `#q0` to communicate the sample to `v9`. I'll repeat this for the soil sample. I am going to have `v12` get rocks `v1` and `v5`.
           
           **Putting it all Together:** After all the images and analyses are sent to the lander, `v9`, I'm going to send `v12` back to its original location, `v13`, and make sure the rover configuration stays at `atconf(v14, v15)` so that all the conditions of this axiom are properly satisfied. That sequence should do it and satisfy the goal. I have made sure that the store for both rovers is free at the start of the action and at the end so it can be used for new tasks if necessary. Also, I will return the rovers to their initial positions to satisfy all criteria. It makes sense, I'm confident.
           

