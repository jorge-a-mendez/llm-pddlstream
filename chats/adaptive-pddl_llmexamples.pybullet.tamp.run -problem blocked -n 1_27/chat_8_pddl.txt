User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #q2: object
           #q3: object
           #q4: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v26: object
           v27: object
           v28: object
           v29: object
           v3: object
           v30: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom graspable(v12)
           Atom canmove()
           Atom supported(v8, v9, v11)
           Atom stackable(v8, v18)
           Atom pose(v8, v9)
           Atom stackable(v15, v10)
           Atom arm(v6)
           Atom handempty(v6)
           Atom pose(v15, v16)
           Atom supported(v12, v13, v14)
           Atom aconf(v4, v5)
           Atom arm(v4)
           Atom controllable(v4)
           Atom type(v8, v17)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom stackable(v8, v10)
           Atom atpose(v8, v9)
           Atom handempty(v4)
           Atom graspable(v8)
           Atom atpose(v15, v16)
           Atom pose(v12, v13)
           Atom graspable(v15)
           Atom ~test-cfree-approach-pose-negative(v8, v9, v23, v15, v16)
           Atom ataconf(v6, v7)
           Atom atbconf(v3)
           Atom supported(v15, v16, v11)
           Atom stackable(v12, v18)
           Atom ataconf(v4, v5)
           Atom bconf(v3)
           Atom aconf(v6, v7)
           Atom type(v12, v17)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v15, #o1)
           Atom grasp(v12, #o1)
           Atom pose(v8, v33)
           Atom supported(v8, v33, v18)
           Atom pose(v8, v28)
           Atom supported(v8, v28, v18)
           Atom pose(v8, v19)
           Atom supported(v8, v19, v18)
           Atom pose(v8, v40)
           Atom supported(v8, v40, v18)
           Atom grasp(v8, v23)
           Atom grasp(v8, v20)
           Atom grasp(v8, v22)
           Atom grasp(v8, v21)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom bconf(v34)
           Atom atraj(v35)
           Atom kin(v4, v8, v33, v20, v34, v35)
           Atom bconf(v38)
           Atom atraj(v39)
           Atom kin(v4, v8, v33, v22, v38, v39)
           Atom bconf(v29)
           Atom atraj(v30)
           Atom kin(v4, v8, v28, v20, v29, v30)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v19, v23, #o3, #o4)
           Atom bconf(v36)
           Atom atraj(v37)
           Atom kin(v4, v8, v33, v21, v36, v37)
           Atom bconf(v24)
           Atom atraj(v25)
           Atom kin(v4, v8, v19, v20, v24, v25)
           Atom bconf(#q4)
           Atom atraj(#t7)
           Atom kin(v4, v8, v28, v23, #q4, #t7)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v8, v33, v23, #q3, #t6)
           Atom bconf(v26)
           Atom atraj(v27)
           Atom kin(v4, v8, v19, v21, v26, v27)
           Atom bconf(v31)
           Atom atraj(v32)
           Atom kin(v4, v8, v28, v22, v31, v32)
           Atom bconf(#q2)
           Atom atraj(#t4)
           Atom kin(v4, v8, v9, v23, #q2, #t4)
           Atom basemotion(v24, #o0, v3)
           Atom basemotion(v3, #o0, v24)
           Atom basemotion(v24, #o0, v24)
           Atom basemotion(v3, #o0, v31)
           Atom basemotion(v24, #o0, v31)
           Atom basemotion(v31, #o0, v24)
           Atom basemotion(v31, #o0, v3)
           Atom basemotion(v31, #o0, v31)
           Atom basemotion(v29, #o0, v31)
           Atom basemotion(v29, #o0, v3)
           Atom basemotion(v31, #o0, v29)
           Atom basemotion(v29, #o0, v24)
           Atom basemotion(v3, #o0, v29)
           Atom basemotion(v29, #o0, v29)
           Atom basemotion(v24, #o0, v29)
           Atom basemotion(v26, #o0, v24)
           Atom basemotion(v31, #o0, v26)
           Atom basemotion(v26, #o0, v26)
           Atom basemotion(v26, #o0, v31)
           Atom basemotion(v3, #o0, v26)
           Atom basemotion(v26, #o0, v29)
           Atom basemotion(v29, #o0, v26)
           Atom basemotion(v24, #o0, v26)
           Atom basemotion(v26, #o0, v3)
           Atom basemotion(#q4, #o0, v31)
           Atom basemotion(v24, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(v29, #o0, #q4)
           Atom basemotion(#q4, #o0, v26)
           Atom basemotion(v31, #o0, #q4)
           Atom basemotion(v26, #o0, #q4)
           Atom basemotion(#q4, #o0, v24)
           Atom basemotion(#q4, #o0, v29)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q2, #o0, v26)
           Atom basemotion(#q2, #o0, v24)
           Atom basemotion(v29, #o0, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, v31)
           Atom btraj(#t8)
           Atom basemotion(#q2, #t8, #q4)
           Atom basemotion(v26, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(v31, #o0, #q2)
           Atom basemotion(#q2, #o0, v29)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom basemotion(v24, #o0, #q2)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, v29)
           Atom basemotion(#o3, #o0, v24)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(v26, #o0, #o3)
           Atom basemotion(v31, #o0, #o3)
           Atom basemotion(#o3, #o0, v31)
           Atom basemotion(#o3, #o0, v26)
           Atom basemotion(v24, #o0, #o3)
           Atom basemotion(v29, #o0, #o3)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, v22, #o3, #o4)
           Atom kin(v4, v8, #o2, v23, #o3, #o4)
           Atom kin(v4, v8, #o2, v20, #o3, #o4)
           Atom kin(v4, v8, #o2, v21, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 v24 #o0))
           ((move_base #o3 v26 #o0))
           ((move_base #o3 v29 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #o3 v31 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 v24 #o0))
           ((move_base #q2 v26 #o0))
           ((move_base #q2 v29 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 v31 #o0))
           ((move_base #q2 #q4 #t8))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 v24 #o0))
           ((move_base #q4 v26 #o0))
           ((move_base #q4 v29 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 v31 #o0))
           ((move_base v24 #o3 #o0))
           ((move_base v24 #q2 #o0))
           ((move_base v24 #q4 #o0))
           ((move_base v24 v24 #o0))
           ((move_base v24 v26 #o0))
           ((move_base v24 v29 #o0))
           ((move_base v24 v3 #o0))
           ((move_base v24 v31 #o0))
           ((move_base v26 #o3 #o0))
           ((move_base v26 #q2 #o0))
           ((move_base v26 #q4 #o0))
           ((move_base v26 v24 #o0))
           ((move_base v26 v26 #o0))
           ((move_base v26 v29 #o0))
           ((move_base v26 v3 #o0))
           ((move_base v26 v31 #o0))
           ((move_base v29 #o3 #o0))
           ((move_base v29 #q2 #o0))
           ((move_base v29 #q4 #o0))
           ((move_base v29 v24 #o0))
           ((move_base v29 v26 #o0))
           ((move_base v29 v29 #o0))
           ((move_base v29 v3 #o0))
           ((move_base v29 v31 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 v24 #o0))
           ((move_base v3 v26 #o0))
           ((move_base v3 v29 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 v31 #o0))
           ((move_base v3 #q2 #t5))
           ((move_base v31 #o3 #o0))
           ((move_base v31 #q2 #o0))
           ((move_base v31 #q4 #o0))
           ((move_base v31 v24 #o0))
           ((move_base v31 v26 #o0))
           ((move_base v31 v29 #o0))
           ((move_base v31 v3 #o0))
           ((move_base v31 v31 #o0))
           ((pick v4 v12 #o2 #o1 #o3 #o4))
           ((place v4 v12 #o2 #o1 #o3 #o4))
           ((pick v4 v12 v13 #o1 #o3 #o4))
           ((place v4 v12 v13 #o1 #o3 #o4))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 v20 #o3 #o4))
           ((place v4 v8 #o2 v20 #o3 #o4))
           ((pick v4 v8 #o2 v21 #o3 #o4))
           ((place v4 v8 #o2 v21 #o3 #o4))
           ((pick v4 v8 #o2 v22 #o3 #o4))
           ((place v4 v8 #o2 v22 #o3 #o4))
           ((pick v4 v8 #o2 v23 #o3 #o4))
           ((place v4 v8 #o2 v23 #o3 #o4))
           ((pick v4 v8 v19 v20 v24 v25))
           ((place v4 v8 v19 v20 v24 v25))
           ((pick v4 v8 v19 v21 v26 v27))
           ((place v4 v8 v19 v21 v26 v27))
           ((pick v4 v8 v19 v23 #o3 #o4))
           ((place v4 v8 v19 v23 #o3 #o4))
           ((pick v4 v8 v28 v20 v29 v30))
           ((place v4 v8 v28 v20 v29 v30))
           ((pick v4 v8 v28 v22 v31 v32))
           ((place v4 v8 v28 v22 v31 v32))
           ((pick v4 v8 v28 v23 #q4 #t7))
           ((place v4 v8 v28 v23 #q4 #t7))
           ((pick v4 v8 v9 v23 #q2 #t4))
           ((place v4 v8 v9 v23 #q2 #t4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal is `(new-axiom@0)`. This axiom is defined as `(on ?green v18)` and `(type ?green v17)`. In the initial state, we have `(type v8 v17)` and `(stackable v8 v18)`. We also have `(atpose v8 v9)` and `(supported v8 v9 v11)`. Therefore, `(on v8 v11)` is true. To achieve `(on v8 v18)`, we need to place `v8` onto `v18`.
           
           Currently, `v8` is at `v9` and is supported by `v11`. We need to pick `v8` from `v9` and then place it onto `v18`. The available `kin` facts indicate that `v4` can interact with `v8`.
           
           First, let's identify the action to pick `v8`. We are looking for `(pick v4 v8 v9 ?g ?q ?t)`. From the provided `kin` facts, we have `(kin v4 v8 v9 v23 #q2 #t4)`. So we can use `(pick v4 v8 v9 v23 #q2 #t4)`. Before picking, the robot needs to move to `q2`. The current base configuration is `v3`. We have `(basemotion v3 #t5 #q2)`, so we can move the base.
           
           After picking `v8`, `v4` will be holding `v8`. Then we need to place `v8` onto `v18`. The goal condition `(on v8 v18)` means `(supported v8 ?p v18)` and `(atpose v8 ?p)`. From the initial state, we have multiple poses for `v8` that are supported by `v18`: `v33`, `v28`, `v19`, `v40`. Let's choose `v33`. We need a `kin` fact for placing `v8` at `v33`. We have `(kin v4 v8 v33 v23 v34 v35)` for placing. Before placing, the robot needs to move to `v34`. We have a path `(basemotion #q2 #o0 v34)` if `v34` is reached directly. However, we have `(basemotion v3 #o0 v34)` implies it moves from `v3` to `v34`. After picking, the base is at `#q2`. We need to move from `#q2` to `v34`. No direct path from `#q2` to `v34` is present in the initial state or derived `basemotion` facts.
           
           Let's re-examine `kin` facts to select a pick pose that aligns with a place pose.
           If we use `(kin v4 v8 v9 v23 #q2 #t4)` to pick `v8`, then the base is at `#q2`.
           For placing, we need `(kin v4 v8 ?p ?g ?q ?t)` where `?g` is `v23`.
           We have `(kin v4 v8 v33 v23 #q3 #t6)`, `(kin v4 v8 v28 v23 #q4 #t7)`, `(kin v4 v8 v19 v23 #o3 #o4)`.
           Let's choose `(kin v4 v8 v19 v23 #o3 #o4)` to place `v8` on `v19`. The robot must move to `#o3`.
           So the plan would be:
           1. Move base from `v3` to `#q2`. (`(move_base v3 #q2 #t5)`)
           2. Pick `v8` from `v9` with grasp `v23` at base config `#q2`. (`(pick v4 v8 v9 v23 #q2 #t4)`)
           3. Move base from `#q2` to `#o3`. (`(move_base #q2 #o3 #o0)`) - Note that #o0 is a trajectory object, so we assume it is valid given it's listed.
           4. Place `v8` at `v19` with grasp `v23` at base config `#o3`. (`(place v4 v8 v19 v23 #o3 #o4)`)
           After these actions, `(atpose v8 v19)` will be true. Since `(supported v8 v19 v18)` is true in the initial state, then `(on v8 v18)` will be true, and `(type v8 v17)` is true, so `(new-axiom@0)` is true with `?green = v8`.
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v8 v9 v23 #q2 #t4)
           (move_base #q2 #o3 #o0)
           (place v4 v8 v19 v23 #o3 #o4)

