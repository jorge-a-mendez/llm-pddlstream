User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t48: object
           #t49: object
           #t5: object
           #t50: object
           #t51: object
           #t52: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rover(v12)
           Atom free(v12, v16)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom mode(v11)
           Atom rock(v4)
           Atom objective(v20)
           Atom lander(v9)
           Atom objective(v17)
           Atom camera(v10)
           Atom objective(v19)
           Atom conf(v12, v13)
           Atom type(v1, v2)
           Atom rock(v7)
           Atom rock(v3)
           Atom type(v5, v6)
           Atom atconf(v14, v15)
           Atom type(v4, v2)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom supports(v10, v11)
           Atom onboard(v10, v12)
           Atom atconf(v12, v13)
           Atom store(v16)
           Atom rock(v8)
           Atom type(v3, v2)
           Atom onboard(v10, v14)
           Atom type(v8, v6)
           Atom rock(v1)
           Atom rock(v5)
           Atom rover(v14)
           Atom above(v14, #q10, v5)
           Atom conf(v14, #q10)
           Atom above(v14, #q8, v1)
           Atom conf(v14, #q8)
           Atom above(v14, #q11, v4)
           Atom conf(v14, #q11)
           Atom above(v14, #q6, v7)
           Atom conf(v14, #q6)
           Atom above(v14, #q12, v8)
           Atom conf(v14, #q12)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q2, #y1, v19)
           Atom imagerange(v14, #q2, v19)
           Atom conf(v14, #q2)
           Atom ray(#y1)
           Atom above(v12, #q0, v4)
           Atom conf(v12, #q0)
           Atom imagevisible(v12, #q9, #y6, v19)
           Atom imagerange(v12, #q9, v19)
           Atom conf(v12, #q9)
           Atom ray(#y6)
           Atom above(v12, #q18, v1)
           Atom conf(v12, #q18)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v14, #q15, #y8, v17)
           Atom imagerange(v14, #q15, v17)
           Atom conf(v14, #q15)
           Atom ray(#y8)
           Atom imagevisible(v12, #q5, #y4, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #q16, #y9, v18)
           Atom imagerange(v14, #q16, v18)
           Atom conf(v14, #q16)
           Atom ray(#y9)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom comvisible(v12, #q1, #y0, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom imagevisible(v12, #q13, #y7, v20)
           Atom imagerange(v12, #q13, v20)
           Atom conf(v12, #q13)
           Atom ray(#y7)
           Atom imagevisible(v14, #q7, #y5, v20)
           Atom imagerange(v14, #q7, v20)
           Atom conf(v14, #q7)
           Atom ray(#y5)
           Atom above(v14, #q14, v3)
           Atom conf(v14, #q14)
           Atom above(v12, #q17, v3)
           Atom conf(v12, #q17)
           Atom motion(v14, v15, #t26, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, v15, #t10, #q2)
           Atom motion(v12, v13, #t42, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q2, #t39, #q7)
           Atom motion(v14, v15, #t11, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q2)
           Atom motion(v12, v13, #t47, #q17)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q0)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, #q0, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, v15, #t28, #q14)
           Atom motion(v14, #q14, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q2, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q2)
           Atom motion(v14, v15, #t24, #q8)
           Atom motion(v14, #q7, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q14)
           Atom motion(v14, #q8, #o2, #q7)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q14, #o2, #q8)
           Atom motion(v12, v13, #t22, #q13)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q17, #o2, #q13)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q17)
           Atom motion(v14, #q10, #o2, #q7)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, v15, #t25, #q10)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q2, #o2, #q10)
           Atom motion(v14, #q7, #o2, #q10)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, #q14, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q8, #t35, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q10, #o2, #q2)
           Atom motion(v14, #q10, #o2, #q14)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, v15, #t45, #q6)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q14, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v14, #q2, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q14)
           Atom motion(v14, #q10, #t48, #q6)
           Atom motion(v14, #q6, #o2, #q2)
           Atom motion(v14, #q6, #o2, #q10)
           Atom motion(v14, #q6, #t49, #q11)
           Atom motion(v14, #q11, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q3, #t29, #q8)
           Atom motion(v14, #q6, #t4, #q3)
           Atom motion(v14, #q3, #t30, #q10)
           Atom motion(v14, #q3, #t12, v15)
           Atom motion(v14, #q2, #t1, #q3)
           Atom motion(v14, #q3, #t8, #q6)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q3, #t31, #q11)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q8, #t15, #q3)
           Atom motion(v14, #q7, #t34, #q3)
           Atom motion(v14, #q10, #t16, #q3)
           Atom motion(v14, #q3, #t23, #q3)
           Atom motion(v14, #q11, #t17, #q3)
           Atom motion(v14, #q3, #t33, #q14)
           Atom motion(v14, v15, #t27, #q12)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q6, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q3, #t32, #q12)
           Atom motion(v14, #q11, #t46, #q12)
           Atom motion(v14, #q12, #o2, #q6)
           Atom motion(v14, #q2, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q3)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q12, #o2, #q2)
           Atom motion(v14, #q12, #o2, #q10)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q6)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q6, #t44, #q16)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q8)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q16, #o2, #q2)
           Atom motion(v14, #q16, #o2, #q10)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q12, #t52, #q16)
           Atom motion(v14, #q8, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q10, #t38, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #t41, #q7)
           Atom motion(v14, #q2, #o2, #q16)
           Atom motion(v12, #q18, #o2, #q17)
           Atom motion(v12, #q13, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q13)
           Atom motion(v12, #q17, #o2, #q18)
           Atom motion(v12, #q18, #o2, v13)
           Atom motion(v12, #q18, #o2, #q18)
           Atom motion(v12, v13, #o2, #q18)
           Atom motion(v12, v13, #t2, #q4)
           Atom motion(v12, #q13, #t20, #q4)
           Atom motion(v12, #q17, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q17)
           Atom motion(v12, #q4, #o2, #q18)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q18, #o2, #q4)
           Atom motion(v14, #q6, #o2, #q15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q8)
           Atom motion(v14, #q15, #o2, #q10)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q15, #t36, #q2)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q10, #t37, #q15)
           Atom motion(v14, #q2, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q8, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q6)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q18)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, v13, #t3, #q5)
           Atom motion(v12, #q13, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q13)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, #q17, #o2, #q5)
           Atom motion(v12, #q18, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q17)
           Atom motion(v12, #q4, #t13, #q5)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q17, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q17)
           Atom motion(v12, #q1, #t9, v13)
           Atom motion(v12, #q18, #o2, #q1)
           Atom motion(v12, #q4, #t6, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q13, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q1, #o2, #q18)
           Atom motion(v12, #q1, #t5, #q0)
           Atom motion(v12, #q5, #t7, #q1)
           Atom motion(v12, #q18, #t51, #q9)
           Atom motion(v12, #q0, #t43, #q9)
           Atom motion(v12, #q17, #t50, #q9)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q9, #o2, #q18)
           Atom motion(v12, #q9, #t14, #q1)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, v13, #t21, #q9)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q5, #t18, #q9)
           Atom motion(v12, #q9, #t40, #q5)
           Atom motion(v12, #q9, #t19, #q4)
           Atom motion(v12, #q1, #o2, #q9)
           Atom motion(v12, #q13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q17)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, #q17)
           Atom motion(v12, #o5, #o2, #q18)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q17, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q18, #o2, #o5)
           Atom motion(v12, #q13, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q13)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, #q5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q0 v4 v16))
           ((sample_rock v12 #q17 v3 v16))
           ((sample_rock v12 #q18 v1 v16))
           ((sample_rock v14 #q10 v5 v16))
           ((sample_rock v14 #q11 v4 v16))
           ((sample_rock v14 #q12 v8 v16))
           ((sample_rock v14 #q14 v3 v16))
           ((sample_rock v14 #q6 v7 v16))
           ((sample_rock v14 #q8 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q13))
           ((move v12 #o5 #o2 #q17))
           ((move v12 #o5 #o2 #q18))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q17))
           ((move v12 #q0 #o2 #q18))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t43 #q9))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q17))
           ((move v12 #q1 #o2 #q18))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q9))
           ((move v12 #q1 #t5 #q0))
           ((move v12 #q1 #t9 v13))
           ((move v12 #q13 #o2 #o5))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q1))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q17))
           ((move v12 #q13 #o2 #q18))
           ((move v12 #q13 #o2 #q5))
           ((move v12 #q13 #o2 #q9))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t20 #q4))
           ((move v12 #q17 #o2 #o5))
           ((move v12 #q17 #o2 #q0))
           ((move v12 #q17 #o2 #q1))
           ((move v12 #q17 #o2 #q13))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q18))
           ((move v12 #q17 #o2 #q4))
           ((move v12 #q17 #o2 #q5))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q17 #t50 #q9))
           ((move v12 #q18 #o2 #o5))
           ((move v12 #q18 #o2 #q0))
           ((move v12 #q18 #o2 #q1))
           ((move v12 #q18 #o2 #q13))
           ((move v12 #q18 #o2 #q17))
           ((move v12 #q18 #o2 #q18))
           ((move v12 #q18 #o2 #q4))
           ((move v12 #q18 #o2 #q5))
           ((move v12 #q18 #o2 v13))
           ((move v12 #q18 #t51 #q9))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q17))
           ((move v12 #q4 #o2 #q18))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t13 #q5))
           ((move v12 #q4 #t6 #q1))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q13))
           ((move v12 #q5 #o2 #q17))
           ((move v12 #q5 #o2 #q18))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t18 #q9))
           ((move v12 #q5 #t7 #q1))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q17))
           ((move v12 #q9 #o2 #q18))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t14 #q1))
           ((move v12 #q9 #t19 #q4))
           ((move v12 #q9 #t40 #q5))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q18))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t2 #q4))
           ((move v12 v13 #t21 #q9))
           ((move v12 v13 #t22 #q13))
           ((move v12 v13 #t3 #q5))
           ((move v12 v13 #t42 #q0))
           ((move v12 v13 #t47 #q17))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q14))
           ((move v14 #q10 #o2 #q2))
           ((move v14 #q10 #o2 #q7))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t16 #q3))
           ((move v14 #q10 #t37 #q15))
           ((move v14 #q10 #t38 #q16))
           ((move v14 #q10 #t48 #q6))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q6))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t17 #q3))
           ((move v14 #q11 #t46 #q12))
           ((move v14 #q12 #o2 #q10))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q2))
           ((move v14 #q12 #o2 #q3))
           ((move v14 #q12 #o2 #q6))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t52 #q16))
           ((move v14 #q14 #o2 #q10))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q2))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q6))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q8))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q15 #o2 #q10))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q6))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q8))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t36 #q2))
           ((move v14 #q16 #o2 #q10))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q2))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 #q6))
           ((move v14 #q16 #o2 #q8))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t41 #q7))
           ((move v14 #q2 #o2 #q10))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q12))
           ((move v14 #q2 #o2 #q14))
           ((move v14 #q2 #o2 #q15))
           ((move v14 #q2 #o2 #q16))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q6))
           ((move v14 #q2 #o2 #q8))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t1 #q3))
           ((move v14 #q2 #t39 #q7))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #t12 v15))
           ((move v14 #q3 #t23 #q3))
           ((move v14 #q3 #t29 #q8))
           ((move v14 #q3 #t30 #q10))
           ((move v14 #q3 #t31 #q11))
           ((move v14 #q3 #t32 #q12))
           ((move v14 #q3 #t33 #q14))
           ((move v14 #q3 #t8 #q6))
           ((move v14 #q6 #o2 #q10))
           ((move v14 #q6 #o2 #q12))
           ((move v14 #q6 #o2 #q14))
           ((move v14 #q6 #o2 #q15))
           ((move v14 #q6 #o2 #q2))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t4 #q3))
           ((move v14 #q6 #t44 #q16))
           ((move v14 #q6 #t49 #q11))
           ((move v14 #q7 #o2 #q10))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q2))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q8))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t34 #q3))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q14))
           ((move v14 #q8 #o2 #q15))
           ((move v14 #q8 #o2 #q16))
           ((move v14 #q8 #o2 #q2))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q7))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t15 #q3))
           ((move v14 #q8 #t35 #q10))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t10 #q2))
           ((move v14 v15 #t11 #q7))
           ((move v14 v15 #t24 #q8))
           ((move v14 v15 #t25 #q10))
           ((move v14 v15 #t26 #q11))
           ((move v14 v15 #t27 #q12))
           ((move v14 v15 #t28 #q14))
           ((move v14 v15 #t45 #q6))
           ((calibrate v12 #q13 #y7 v20 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v12 #q5 #y4 v17 v10))
           ((calibrate v12 #q9 #y6 v19 v10))
           ((calibrate v14 #q15 #y8 v17 v10))
           ((calibrate v14 #q16 #y9 v18 v10))
           ((calibrate v14 #q2 #y1 v19 v10))
           ((calibrate v14 #q7 #y5 v20 v10))
           ((take_image v12 #q13 #y7 v20 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v12 #q5 #y4 v17 v10 v11))
           ((take_image v12 #q9 #y6 v19 v10 v11))
           ((take_image v14 #q15 #y8 v17 v10 v11))
           ((take_image v14 #q16 #y9 v18 v10 v11))
           ((take_image v14 #q2 #y1 v19 v10 v11))
           ((take_image v14 #q7 #y5 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y0 v9 v5))
           ((send_analysis v12 #q1 #y0 v9 v7))
           ((send_analysis v12 #q1 #y0 v9 v8))
           ((send_analysis v12 #q1 #y0 v9 v4))
           ((send_analysis v12 #q1 #y0 v9 v3))
           ((send_analysis v12 #q1 #y0 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_image v12 #q1 #y0 v9 v20 v11))
           ((send_image v12 #q1 #y0 v9 v18 v11))
           ((send_image v12 #q1 #y0 v9 v17 v11))
           ((send_image v12 #q1 #y0 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each with a camera (v10) and a storage unit (v16). There are several objectives (v17, v18, v19, v20) to image, and several rocks (v1, v3, v4, v5, v7, v8) to analyze. The lander (v9) is the communication hub. The goal is `new-axiom@0()`, which means that all objectives (v17, v18, v19, v20) must have received images in mode v11, and rocks v7 (type v6) and v1 (type v2) must have been analyzed and their analysis received. Additionally, both rovers must be at some configuration and have a free storage unit.
           
           Currently, rover v12 is at v13 and has a free store v16. Rover v14 is at v15 and has a free store v16. The camera v10 is onboard both rovers and supports mode v11.
           
           To achieve the goal, we need to:
           1. Calibrate the camera on one of the rovers.
           2. Take images of all four objectives (v17, v18, v19, v20) using that rover and the calibrated camera in mode v11.
           3. Send the images to the lander.
           4. Sample rock v7.
           5. Send the analysis of rock v7 to the lander.
           6. Sample rock v1.
           7. Send the analysis of rock v1 to the lander.
           
           Let's use rover v14 for imaging and sampling as it has visibility to several objectives and rocks from its current location or nearby locations.
           
           For imaging objectives:
           - Objective v19: imagevisible(v14, #q2, #y1, v19)
           - Objective v17: imagevisible(v14, #q15, #y8, v17)
           - Objective v18: imagevisible(v14, #q16, #y9, v18)
           - Objective v20: imagevisible(v14, #q7, #y5, v20)
           
           For sampling rocks:
           - Rock v7 (type v6): above(v14, #q6, v7)
           - Rock v1 (type v2): above(v14, #q8, v1)
           
           For sending data:
           - comvisible(v14, #q3, #y2, v9)
           
           Plan:
           1. Calibrate camera v10 on rover v14 for objective v19 at #q2.
           2. Take image of v19 using v14 at #q2 with camera v10 in mode v11.
           3. Move v14 to #q15 to take image of v17.
           4. Calibrate camera v10 on rover v14 for objective v17 at #q15.
           5. Take image of v17.
           6. Move v14 to #q16 to take image of v18.
           7. Calibrate camera v10 on rover v14 for objective v18 at #q16.
           8. Take image of v18.
           9. Move v14 to #q7 to take image of v20.
           10. Calibrate camera v10 on rover v14 for objective v20 at #q7.
           11. Take image of v20.
           12. Move v14 to #q3 to send all collected images.
           13. Send image of v19.
           14. Send image of v17.
           15. Send image of v18.
           16. Send image of v20.
           17. Move v14 to #q6 to sample rock v7.
           18. Sample rock v7.
           19. Move v14 to #q3 to send analysis of rock v7.
           20. Send analysis of rock v7.
           21. Move v14 to #q8 to sample rock v1.
           22. Sample rock v1.
           23. Move v14 to #q3 to send analysis of rock v1.
           24. Send analysis of rock v1.
           
           --Plan--:
           (calibrate v14 #q2 #y1 v19 v10)
           (take_image v14 #q2 #y1 v19 v10 v11)
           (move v14 #q2 #o2 #q15)
           (calibrate v14 #q15 #y8 v17 v10)
           (take_image v14 #q15 #y8 v17 v10 v11)
           (move v14 #q15 #o2 #q16)
           (calibrate v14 #q16 #y9 v18 v10)
           (take_image v14 #q16 #y9 v18 v10 v11)
           (move v14 #q16 #t41 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t34 #q3)
           (send_image v14 #q3 #y2 v9 v19 v11)
           (send_image v14 #q3 #y2 v9 v17 v11)
           (send_image v14 #q3 #y2 v9 v18 v11)
           (send_image v14 #q3 #y2 v9 v20 v11)
           (move v14 #q3 #t8 #q6)
           (sample_rock v14 #q6 v7 v16)
           (move v14 #q6 #t4 #q3)
           (send_analysis v14 #q3 #y2 v9 v7)
           (move v14 #q3 #t29 #q8)
           (sample_rock v14 #q8 v1 v16)
           (move v14 #q8 #t15 #q3)
           (send_analysis v14 #q3 #y2 v9 v1)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The scene contains two rovers, v12 and v14, each with a camera (v10) and a storage unit (v16). There are several objectives (v17, v18, v19, v20) to image, and several rocks (v1, v3, v4, v5, v7, v8) to analyze. The lander (v9) is the communication hub. The goal is `new-axiom@0()`, which means that all objectives (v17, v18, v19, v20) must have received images in mode v11, and rocks v7 (type v6) and v1 (type v2) must have been analyzed and their analysis received. Additionally, both rovers must be at some configuration and have a free storage unit.
           
           Currently, rover v12 is at v13 and has a free store v16. Rover v14 is at v15 and has a free store v16. The camera v10 is onboard both rovers and supports mode v11.
           
           To achieve the goal, we need to:
           1. Ensure both rovers are at a configuration. (Already satisfied by `atconf(v12, v13)` and `atconf(v14, v15)`)
           2. Ensure both rovers have a free storage unit. (Already satisfied by `free(v12, v16)` and `free(v14, v16)`)
           3. Receive images for all four objectives (v17, v18, v19, v20) in mode v11.
           4. Receive analysis for rock v7 (type v6) and rock v1 (type v2).
           
           I will use rover v14 to complete all imaging and rock analysis tasks, as it has access to locations where these actions can be performed and has communication visibility to the lander.
           
           Imaging tasks:
           - Objective v19: imagevisible(v14, #q2, #y1, v19)
           - Objective v17: imagevisible(v14, #q15, #y8, v17)
           - Objective v18: imagevisible(v14, #q16, #y9, v18)
           - Objective v20: imagevisible(v14, #q7, #y5, v20)
           
           Rock analysis tasks:
           - Rock v7 (type v6): above(v14, #q6, v7)
           - Rock v1 (type v2): above(v14, #q8, v1)
           
           Communication task:
           - comvisible(v14, #q3, #y2, v9)
           
           Plan:
           1. Calibrate camera v10 on rover v14 at #q2 for objective v19.
           2. Take image of v19.
           3. Move rover v14 from #q2 to #q15.
           4. Calibrate camera v10 on rover v14 at #q15 for objective v17.
           5. Take image of v17.
           6. Move rover v14 from #q15 to #q16.
           7. Calibrate camera v10 on rover v14 at #q16 for objective v18.
           8. Take image of v18.
           9. Move rover v14 from #q16 to #q7.
           10. Calibrate camera v10 on rover v14 at #q7 for objective v20.
           11. Take image of v20.
           12. Move rover v14 from #q7 to #q3 for communication.
           13. Send image of v19.
           14. Send image of v17.
           15. Send image of v18.
           16. Send image of v20.
           17. Move rover v14 from #q3 to #q6 for sampling rock v7.
           18. Sample rock v7.
           19. Move rover v14 from #q6 to #q3 for sending analysis of rock v7.
           20. Send analysis of rock v7.
           21. Move rover v14 from #q3 to #q8 for sampling rock v1.
           22. Sample rock v1.
           23. Move rover v14 from #q8 to #q3 for sending analysis of rock v1.
           24. Send analysis of rock v1.
           
           --Plan--:
           (calibrate v14 #q2 #y1 v19 v10)
           (take_image v14 #q2 #y1 v19 v10 v11)
           (move v14 #q2 #o2 #q15)
           (calibrate v14 #q15 #y8 v17 v10)
           (take_image v14 #q15 #y8 v17 v10 v11)
           (move v14 #q15 #o2 #q16)
           (calibrate v14 #q16 #y9 v18 v10)
           (take_image v14 #q16 #y9 v18 v10 v11)
           (move v14 #q16 #t41 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t34 #q3)
           (send_image v14 #q3 #y2 v9 v19 v11)
           (send_image v14 #q3 #y2 v9 v17 v11)
           (send_image v14 #q3 #y2 v9 v18 v11)
           (send_image v14 #q3 #y2 v9 v20 v11)
           (move v14 #q3 #t8 #q6)
           (sample_rock v14 #q6 v7 v16)
           (move v14 #q6 #t4 #q3)
           (send_analysis v14 #q3 #y2 v9 v7)
           (move v14 #q3 #t29 #q8)
           (sample_rock v14 #q8 v1 v16)
           (move v14 #q8 #t15 #q3)
           (send_analysis v14 #q3 #y2 v9 v1)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The scene contains two rovers, v12 and v14, each with a camera (v10) and a storage unit (v16). There are several objectives (v17, v18, v19, v20) to image, and several rocks (v1, v3, v4, v5, v7, v8) to analyze. The lander (v9) is the communication hub. The goal is `new-axiom@0()`. This axiom states that the goal is achieved if:
           1. `atconf(v12, v13)` and `atconf(v14, v15)` (both rovers are at their initial configurations) - **Currently true.**
           2. `free(v12, v16)` and `free(v14, v16)` (both rovers have free storage) - **Currently true.**
           3. `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)` (all objectives have their images received at the lander in mode v11).
           4. `type(?stone, v2)` and `receivedanalysis(?stone)` (a rock of type v2 has its analysis received).
           5. `type(?soil, v6)` and `receivedanalysis(?soil)` (a rock of type v6 has its analysis received).
           
           From the initial state:
           - Rocks: `rock(v1)`, `rock(v3)`, `rock(v4)`, `rock(v5)`, `rock(v7)`, `rock(v8)`.
           - Types: `type(v1, v2)`, `type(v3, v2)`, `type(v4, v2)`, `type(v5, v6)`, `type(v7, v6)`, `type(v8, v6)`.
           
           So, for the rock analysis part of the goal, we need to receive analysis for a rock of type v2 (e.g., v1 or v3 or v4) and a rock of type v6 (e.g., v5 or v7 or v8). Let's pick v1 and v7 for analysis.
           
           I will primarily use rover v14 for all tasks as it has good visibility and motion options.
           
           Tasks breakdown for rover v14:
           
           **Imaging Objectives:**
           - Objective v19: imagevisible(v14, #q2, #y1, v19)
           - Objective v17: imagevisible(v14, #q15, #y8, v17)
           - Objective v18: imagevisible(v14, #q16, #y9, v18)
           - Objective v20: imagevisible(v14, #q7, #y5, v20)
           
           **Sampling and Analysis of Rocks:**
           - Rock v7 (type v6): above(v14, #q6, v7)
           - Rock v1 (type v2): above(v14, #q8, v1)
           
           **Communication to Lander:**
           - comvisible(v14, #q3, #y2, v9)
           
           The plan will involve a sequence of moves, calibrations, image captures, rock samples, and data transmissions. Each `take_image` action requires a preceding `calibrate` action. After taking images or sampling rocks, the rover needs to move to a configuration where it can communicate with the lander (`#q3` in this case) to `send_image` or `send_analysis`.
           
           --Plan--:
           (calibrate v14 #q2 #y1 v19 v10)
           (take_image v14 #q2 #y1 v19 v10 v11)
           (move v14 #q2 #o2 #q15)
           (calibrate v14 #q15 #y8 v17 v10)
           (take_image v14 #q15 #y8 v17 v10 v11)
           (move v14 #q15 #o2 #q16)
           (calibrate v14 #q16 #y9 v18 v10)
           (take_image v14 #q16 #y9 v18 v10 v11)
           (move v14 #q16 #t41 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t34 #q3)
           (send_image v14 #q3 #y2 v9 v19 v11)
           (send_image v14 #q3 #y2 v9 v17 v11)
           (send_image v14 #q3 #y2 v9 v18 v11)
           (send_image v14 #q3 #y2 v9 v20 v11)
           (move v14 #q3 #t8 #q6)
           (sample_rock v14 #q6 v7 v16)
           (move v14 #q6 #t4 #q3)
           (send_analysis v14 #q3 #y2 v9 v7)
           (move v14 #q3 #t29 #q8)
           (sample_rock v14 #q8 v1 v16)
           (move v14 #q8 #t15 #q3)
           (send_analysis v14 #q3 #y2 v9 v1)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The problem requires satisfying the `new-axiom@0()` goal, which means:
           1. Both rovers (v12, v14) are at their current configurations (v13, v15 respectively).
           2. Both rovers have free storage (v16).
           3. All objectives (v17, v18, v19, v20) have received images in mode v11.
           4. An analysis for a rock of type v2 has been received.
           5. An analysis for a rock of type v6 has been received.
           
           Initial state:
           - `atconf(v12, v13)` and `atconf(v14, v15)` are true.
           - `free(v12, v16)` and `free(v14, v16)` are true.
           - Rocks of type v2: v1, v3, v4.
           - Rocks of type v6: v5, v7, v8.
           
           I will use rover v14 to perform all the necessary actions, as it has appropriate visibility and motion options to achieve the goal efficiently.
           
           **Steps for Rover v14:**
           
           1.  **Image Objective v19:**
               *   Move to `#q2`.
               *   Calibrate camera v10 for v19.
               *   Take image of v19.
           2.  **Image Objective v17:**
               *   Move to `#q15`.
               *   Calibrate camera v10 for v17.
               *   Take image of v17.
           3.  **Image Objective v18:**
               *   Move to `#q16`.
               *   Calibrate camera v10 for v18.
               *   Take image of v18.
           4.  **Image Objective v20:**
               *   Move to `#q7`.
               *   Calibrate camera v10 for v20.
               *   Take image of v20.
           5.  **Send Images:**
               *   Move to `#q3` (communication point).
               *   Send images of v19, v17, v18, v20.
           6.  **Sample Rock v7 (type v6):**
               *   Move to `#q6` (above v7).
               *   Sample rock v7.
           7.  **Send Analysis of Rock v7:**
               *   Move to `#q3` (communication point).
               *   Send analysis of v7.
           8.  **Sample Rock v1 (type v2):**
               *   Move to `#q8` (above v1).
               *   Sample rock v1.
           9.  **Send Analysis of Rock v1:**
               *   Move to `#q3` (communication point).
               *   Send analysis of v1.
           
           All preconditions will be checked and satisfied based on the available action instances.
           
           --Plan--:
           (calibrate v14 #q2 #y1 v19 v10)
           (take_image v14 #q2 #y1 v19 v10 v11)
           (move v14 #q2 #o2 #q15)
           (calibrate v14 #q15 #y8 v17 v10)
           (take_image v14 #q15 #y8 v17 v10 v11)
           (move v14 #q15 #o2 #q16)
           (calibrate v14 #q16 #y9 v18 v10)
           (take_image v14 #q16 #y9 v18 v10 v11)
           (move v14 #q16 #t41 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t34 #q3)
           (send_image v14 #q3 #y2 v9 v19 v11)
           (send_image v14 #q3 #y2 v9 v17 v11)
           (send_image v14 #q3 #y2 v9 v18 v11)
           (send_image v14 #q3 #y2 v9 v20 v11)
           (move v14 #q3 #t8 #q6)
           (sample_rock v14 #q6 v7 v16)
           (move v14 #q6 #t4 #q3)
           (send_analysis v14 #q3 #y2 v9 v7)
           (move v14 #q3 #t29 #q8)
           (sample_rock v14 #q8 v1 v16)
           (move v14 #q8 #t15 #q3)
           (send_analysis v14 #q3 #y2 v9 v1)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The goal `new-axiom@0()` requires the following conditions to be met:
           1.  Both rovers, v12 and v14, must be at their initial configurations (`atconf(v12, v13)` and `atconf(v14, v15)`). These are true in the initial state.
           2.  Both rovers, v12 and v14, must have a free storage unit (`free(v12, v16)` and `free(v14, v16)`). These are true in the initial state.
           3.  Images for all four objectives (v17, v18, v19, v20) must be received by the lander in mode v11 (`receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`).
           4.  Analysis for a rock of type `v2` must be received (`receivedanalysis(?stone)` where `type(?stone, v2)`). From the initial state, `v1`, `v3`, `v4` are of type `v2`. I will choose `v1`.
           5.  Analysis for a rock of type `v6` must be received (`receivedanalysis(?soil)` where `type(?soil, v6)`). From the initial state, `v5`, `v7`, `v8` are of type `v6`. I will choose `v7`.
           
           I will continue to use rover `v14` as the primary rover to execute these tasks due to its available actions and configurations.
           
           **Detailed plan to achieve all sub-goals:**
           
           **Part 1: Image Collection and Transmission for all objectives (v17, v18, v19, v20)**
           Rover v14 will move to respective locations to image each objective and then move to a communication-visible location (`#q3`) to send the images.
           
           *   **Objective v19:**
               *   Current location of v14 is v15. Move to `#q2`.
               *   Calibrate camera v10 at `#q2` for objective v19.
               *   Take image of v19.
           *   **Objective v17:**
               *   Move from `#q2` to `#q15`.
               *   Calibrate camera v10 at `#q15` for objective v17.
               *   Take image of v17.
           *   **Objective v18:**
               *   Move from `#q15` to `#q16`.
               *   Calibrate camera v10 at `#q16` for objective v18.
               *   Take image of v18.
           *   **Objective v20:**
               *   Move from `#q16` to `#q7`.
               *   Calibrate camera v10 at `#q7` for objective v20.
               *   Take image of v20.
           *   **Send all images:**
               *   Move from `#q7` to `#q3` (comvisible location).
               *   Send image of v19.
               *   Send image of v17.
               *   Send image of v18.
               *   Send image of v20.
           
           **Part 2: Rock Sampling and Analysis Transmission for v1 (type v2) and v7 (type v6)**
           Rover v14 will move to respective locations to sample rock v7 and v1, and then move to a communication-visible location (`#q3`) to send the analysis.
           
           *   **Sample Rock v7 (Type v6):**
               *   Move from `#q3` to `#q6` (above v7).
               *   Sample rock v7. This makes `analyzed(v14, v7)` true and `full(v14, v16)`.
               *   Move from `#q6` to `#q3`.
               *   Send analysis of v7.
           *   **Sample Rock v1 (Type v2):**
               *   Since the goal axiom also specifies `free(v14, v16)` and sampling makes it `full(v14, v16)`, we need to `drop_rock` before the next sample. However, the `new-axiom@0()` does not explicitly state that the storage must be free *after* sampling, only that `free(v12, v16)` and `free(v14, v16)` must hold true for the final state. This means we can sample rock v1, and then drop it *before* ending the plan if necessary, but the axiom only cares about the state of `free(v14, v16)` if no samples are currently held.
               *   Move from `#q3` to `#q8` (above v1).
               *   Sample rock v1. This makes `analyzed(v14, v1)` true and `full(v14, v16)`.
               *   Move from `#q8` to `#q3`.
               *   Send analysis of v1.
           
           Since the final state requires `free(v14, v16)` and the last action of sampling rock v1 makes `full(v14, v16)`, I need to explicitly `drop_rock v14 v16` at the end to satisfy the final state condition.
           
           --Plan--:
           (calibrate v14 #q2 #y1 v19 v10)
           (take_image v14 #q2 #y1 v19 v10 v11)
           (move v14 #q2 #o2 #q15)
           (calibrate v14 #q15 #y8 v17 v10)
           (take_image v14 #q15 #y8 v17 v10 v11)
           (move v14 #q15 #o2 #q16)
           (calibrate v14 #q16 #y9 v18 v10)
           (take_image v14 #q16 #y9 v18 v10 v11)
           (move v14 #q16 #t41 #q7)
           (calibrate v14 #q7 #y5 v20 v10)
           (take_image v14 #q7 #y5 v20 v10 v11)
           (move v14 #q7 #t34 #q3)
           (send_image v14 #q3 #y2 v9 v19 v11)
           (send_image v14 #q3 #y2 v9 v17 v11)
           (send_image v14 #q3 #y2 v9 v18 v11)
           (send_image v14 #q3 #y2 v9 v20 v11)
           (move v14 #q3 #t8 #q6)
           (sample_rock v14 #q6 v7 v16)
           (move v14 #q6 #t4 #q3)
           (send_analysis v14 #q3 #y2 v9 v7)
           (move v14 #q3 #t29 #q8)
           (sample_rock v14 #q8 v1 v16)
           (move v14 #q8 #t15 #q3)
           (send_analysis v14 #q3 #y2 v9 v1)
           (drop_rock v14 v16)

