User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g40: object
           #g41: object
           #g42: object
           #g43: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q100: object
           #q101: object
           #q102: object
           #q103: object
           #q104: object
           #q97: object
           #q98: object
           #q99: object
           #t263: object
           #t264: object
           #t265: object
           #t266: object
           #t267: object
           #t268: object
           #t269: object
           #t270: object
           #t271: object
           #t272: object
           #t273: object
           #t274: object
           #t275: object
           #t276: object
           #t277: object
           #t278: object
           #t279: object
           #t280: object
           #t281: object
           #t282: object
           #t283: object
           #t284: object
           #t285: object
           @sink: object
           @stove: object
           p10: object
           p11: object
           p16: object
           p17: object
           p18: object
           p19: object
           p20: object
           p21: object
           p22: object
           p23: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           p9: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v36: object
           v37: object
           v38: object
           v39: object
           v4: object
           v40: object
           v41: object
           v42: object
           v43: object
           v5: object
           v56: object
           v57: object
           v58: object
           v59: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.175, 0.446), (0.262, 0.533)).
           Object v17 is a pose with position (0.219, 0.49, 0.781) and quaternion (0.0, 0.0, 0.99, 0.143).
           Object p19 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p18 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p17 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p20 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p21 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p22 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.109, -0.52), (0.206, -0.422)).
           Object p23 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v9 is a pose with position (0.157, -0.471, 0.781) and quaternion (0.0, 0.0, 0.305, 0.952).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.219, -0.318), (0.048, 0.528)).
           Object p16 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.085), (0.085, -0.015)).
           Object p11 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p10 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.028, -0.225, 0.781) and quaternion (0.0, 0.0, -0.75, 0.661).
           Object p9 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p8 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p4 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.292, 0.051), (-0.203, 0.14)).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p7 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (-0.247, 0.095, 0.781) and quaternion (0.0, 0.0, -0.175, 0.984).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom graspable(v16)
           Atom pose(v16, v17)
           Atom atpose(v16, v17)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom stackable(v8, v18)
           Atom stackable(v12, v18)
           Atom stackable(v14, v18)
           Atom stackable(v16, v18)
           Atom pose(v14, p6)
           Atom supported(v14, p6, v10)
           Atom pose(v16, p7)
           Atom supported(v16, p7, v18)
           Atom supported(v14, p6, v18)
           Atom pose(v12, p5)
           Atom supported(v12, p5, v18)
           Atom pose(v8, p4)
           Atom supported(v8, p4, v18)
           Atom supported(v12, p5, v10)
           Atom supported(v16, p7, v10)
           Atom supported(v8, p4, v10)
           Atom kin(v36, v43, p7, v38, v39, v40)
           Atom kin(v36, v41, p5, v38, v39, v40)
           Atom kin(v36, v42, p6, v38, v39, v40)
           Atom kin(v36, v37, p4, v38, v39, v40)
           Atom pose(v16, p11)
           Atom supported(v16, p11, v18)
           Atom supported(v16, p11, v10)
           Atom pose(v12, p9)
           Atom supported(v12, p9, v10)
           Atom pose(v8, p8)
           Atom supported(v8, p8, v18)
           Atom supported(v8, p8, v10)
           Atom pose(v14, p10)
           Atom supported(v14, p10, v10)
           Atom supported(v14, p10, v18)
           Atom supported(v12, p9, v18)
           Atom kin(v36, v37, p8, v38, v39, v40)
           Atom kin(v36, v41, p9, v38, v39, v40)
           Atom kin(v36, v42, p10, v38, v39, v40)
           Atom kin(v36, v43, p11, v38, v39, v40)
           Atom pose(v14, p18)
           Atom supported(v14, p18, v10)
           Atom pose(v16, p19)
           Atom supported(v16, p19, v18)
           Atom supported(v14, p18, v18)
           Atom pose(v12, p17)
           Atom supported(v12, p17, v18)
           Atom pose(v8, p16)
           Atom supported(v8, p16, v18)
           Atom supported(v12, p17, v10)
           Atom supported(v16, p19, v10)
           Atom supported(v8, p16, v10)
           Atom kin(v36, v37, p16, v56, v39, v40)
           Atom kin(v36, v43, p19, v59, v39, v40)
           Atom kin(v36, v42, p18, v58, v39, v40)
           Atom kin(v36, v41, p17, v57, v39, v40)
           Atom pose(v16, p23)
           Atom supported(v16, p23, v18)
           Atom supported(v16, p23, v10)
           Atom pose(v12, p21)
           Atom supported(v12, p21, v10)
           Atom pose(v8, p20)
           Atom supported(v8, p20, v18)
           Atom supported(v8, p20, v10)
           Atom pose(v14, p22)
           Atom supported(v14, p22, v10)
           Atom supported(v14, p22, v18)
           Atom supported(v12, p21, v18)
           Atom kin(v36, v37, p20, v56, v39, v40)
           Atom kin(v36, v41, p21, v57, v39, v40)
           Atom kin(v36, v42, p22, v58, v39, v40)
           Atom kin(v36, v43, p23, v59, v39, v40)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v16, #g40)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom supported(v14, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom grasp(v14, #g41)
           Atom supported(v12, #o2, v10)
           Atom supported(v16, #o2, v10)
           Atom grasp(v12, #g43)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g42)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v16, p23, #g40, #o3, #o4)
           Atom kin(v4, v16, p7, #g40, #o3, #o4)
           Atom bconf(#q99)
           Atom atraj(#t265)
           Atom kin(v4, v16, v17, #g40, #q99, #t265)
           Atom bconf(#q97)
           Atom atraj(#t263)
           Atom kin(v4, v16, p19, #g40, #q97, #t263)
           Atom kin(v4, v16, p11, #g40, #o3, #o4)
           Atom bconf(#q98)
           Atom atraj(#t264)
           Atom kin(v4, v14, v15, #g41, #q98, #t264)
           Atom kin(v4, v14, p22, #g41, #o3, #o4)
           Atom kin(v4, v14, p10, #g41, #o3, #o4)
           Atom kin(v4, v14, p6, #g41, #o3, #o4)
           Atom bconf(#q104)
           Atom atraj(#t275)
           Atom kin(v4, v14, p18, #g41, #q104, #t275)
           Atom kin(v4, v12, p5, #g43, #o3, #o4)
           Atom bconf(#q102)
           Atom atraj(#t273)
           Atom kin(v4, v12, v13, #g43, #q102, #t273)
           Atom bconf(#q103)
           Atom atraj(#t274)
           Atom kin(v4, v12, p17, #g43, #q103, #t274)
           Atom kin(v4, v12, p9, #g43, #o3, #o4)
           Atom kin(v4, v12, p21, #g43, #o3, #o4)
           Atom kin(v4, v8, p8, #g42, #o3, #o4)
           Atom kin(v4, v8, p20, #g42, #o3, #o4)
           Atom bconf(#q100)
           Atom atraj(#t266)
           Atom kin(v4, v8, v9, #g42, #q100, #t266)
           Atom bconf(#q101)
           Atom atraj(#t267)
           Atom kin(v4, v8, p16, #g42, #q101, #t267)
           Atom kin(v4, v8, p4, #g42, #o3, #o4)
           Atom basemotion(#q98, #o0, v3)
           Atom btraj(#t269)
           Atom basemotion(v3, #t269, #q98)
           Atom basemotion(#q98, #o0, #q98)
           Atom basemotion(#q97, #o0, v3)
           Atom basemotion(#q97, #o0, #q98)
           Atom basemotion(#q97, #o0, #q97)
           Atom btraj(#t268)
           Atom basemotion(v3, #t268, #q97)
           Atom basemotion(#q98, #o0, #q97)
           Atom basemotion(#q101, #o0, v3)
           Atom btraj(#t272)
           Atom basemotion(v3, #t272, #q101)
           Atom basemotion(#q101, #o0, #q101)
           Atom basemotion(#q98, #o0, #q101)
           Atom btraj(#t284)
           Atom basemotion(#q101, #t284, #q98)
           Atom basemotion(#q97, #o0, #q101)
           Atom basemotion(#q101, #o0, #q97)
           Atom basemotion(#q99, #o0, v3)
           Atom basemotion(#q99, #o0, #q101)
           Atom basemotion(#q99, #o0, #q98)
           Atom basemotion(#q99, #o0, #q99)
           Atom btraj(#t270)
           Atom basemotion(v3, #t270, #q99)
           Atom basemotion(#q101, #o0, #q99)
           Atom basemotion(#q98, #o0, #q99)
           Atom basemotion(#q97, #o0, #q99)
           Atom btraj(#t277)
           Atom basemotion(#q99, #t277, #q97)
           Atom basemotion(#q100, #o0, v3)
           Atom btraj(#t271)
           Atom basemotion(v3, #t271, #q100)
           Atom basemotion(#q100, #o0, #q100)
           Atom basemotion(#q101, #o0, #q100)
           Atom btraj(#t282)
           Atom basemotion(#q100, #t282, #q101)
           Atom basemotion(#q98, #o0, #q100)
           Atom basemotion(#q100, #o0, #q98)
           Atom basemotion(#q99, #o0, #q100)
           Atom basemotion(#q100, #o0, #q99)
           Atom basemotion(#q97, #o0, #q100)
           Atom basemotion(#q100, #o0, #q97)
           Atom basemotion(#q103, #o0, v3)
           Atom basemotion(#q103, #o0, #q101)
           Atom basemotion(#q103, #o0, #q100)
           Atom basemotion(#q103, #o0, #q103)
           Atom basemotion(v3, #o0, #q103)
           Atom basemotion(#q101, #o0, #q103)
           Atom basemotion(#q100, #o0, #q103)
           Atom basemotion(#q98, #o0, #q103)
           Atom btraj(#t276)
           Atom basemotion(#q103, #t276, #q98)
           Atom basemotion(#q99, #o0, #q103)
           Atom btraj(#t285)
           Atom basemotion(#q103, #t285, #q99)
           Atom basemotion(#q97, #o0, #q103)
           Atom basemotion(#q103, #o0, #q97)
           Atom basemotion(#q104, #o0, #q103)
           Atom basemotion(#q104, #o0, v3)
           Atom basemotion(#q104, #o0, #q101)
           Atom basemotion(#q104, #o0, #q98)
           Atom basemotion(#q104, #o0, #q100)
           Atom basemotion(#q103, #o0, #q104)
           Atom basemotion(v3, #o0, #q104)
           Atom basemotion(#q101, #o0, #q104)
           Atom btraj(#t278)
           Atom basemotion(#q98, #t278, #q104)
           Atom basemotion(#q100, #o0, #q104)
           Atom basemotion(#q104, #o0, #q104)
           Atom basemotion(#q99, #o0, #q104)
           Atom btraj(#t280)
           Atom basemotion(#q104, #t280, #q99)
           Atom basemotion(#q97, #o0, #q104)
           Atom basemotion(#q104, #o0, #q97)
           Atom basemotion(#q102, #o0, v3)
           Atom basemotion(#q102, #o0, #q101)
           Atom basemotion(#q102, #o0, #q100)
           Atom basemotion(v3, #o0, #q102)
           Atom btraj(#t281)
           Atom basemotion(#q101, #t281, #q102)
           Atom basemotion(#q102, #o0, #q102)
           Atom basemotion(#q100, #o0, #q102)
           Atom basemotion(#q103, #o0, #q102)
           Atom btraj(#t279)
           Atom basemotion(#q102, #t279, #q103)
           Atom basemotion(#q98, #o0, #q102)
           Atom basemotion(#q102, #o0, #q98)
           Atom btraj(#t283)
           Atom basemotion(#q104, #t283, #q102)
           Atom basemotion(#q102, #o0, #q104)
           Atom basemotion(#q99, #o0, #q102)
           Atom basemotion(#q102, #o0, #q99)
           Atom basemotion(#q97, #o0, #q102)
           Atom basemotion(#q102, #o0, #q97)
           Atom kin(v4, v8, #o2, #g42, #o3, #o4)
           Atom kin(v4, v16, #o2, #g40, #o3, #o4)
           Atom kin(v4, v12, #o2, #g43, #o3, #o4)
           Atom kin(v4, v14, #o2, #g41, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q100, #o0, #o3)
           Atom basemotion(#o3, #o0, #q100)
           Atom basemotion(#q101, #o0, #o3)
           Atom basemotion(#o3, #o0, #q101)
           Atom basemotion(#q102, #o0, #o3)
           Atom basemotion(#o3, #o0, #q102)
           Atom basemotion(#q103, #o0, #o3)
           Atom basemotion(#o3, #o0, #q103)
           Atom basemotion(#q98, #o0, #o3)
           Atom basemotion(#o3, #o0, #q98)
           Atom basemotion(#q104, #o0, #o3)
           Atom basemotion(#o3, #o0, #q104)
           Atom basemotion(#q99, #o0, #o3)
           Atom basemotion(#o3, #o0, #q99)
           Atom basemotion(#q97, #o0, #o3)
           Atom basemotion(#o3, #o0, #q97)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q100 #o0))
           ((move_base #o3 #q101 #o0))
           ((move_base #o3 #q102 #o0))
           ((move_base #o3 #q103 #o0))
           ((move_base #o3 #q104 #o0))
           ((move_base #o3 #q97 #o0))
           ((move_base #o3 #q98 #o0))
           ((move_base #o3 #q99 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q100 #o3 #o0))
           ((move_base #q100 #q100 #o0))
           ((move_base #q100 #q102 #o0))
           ((move_base #q100 #q103 #o0))
           ((move_base #q100 #q104 #o0))
           ((move_base #q100 #q97 #o0))
           ((move_base #q100 #q98 #o0))
           ((move_base #q100 #q99 #o0))
           ((move_base #q100 v3 #o0))
           ((move_base #q100 #q101 #t282))
           ((move_base #q101 #o3 #o0))
           ((move_base #q101 #q100 #o0))
           ((move_base #q101 #q101 #o0))
           ((move_base #q101 #q103 #o0))
           ((move_base #q101 #q104 #o0))
           ((move_base #q101 #q97 #o0))
           ((move_base #q101 #q99 #o0))
           ((move_base #q101 v3 #o0))
           ((move_base #q101 #q102 #t281))
           ((move_base #q101 #q98 #t284))
           ((move_base #q102 #o3 #o0))
           ((move_base #q102 #q100 #o0))
           ((move_base #q102 #q101 #o0))
           ((move_base #q102 #q102 #o0))
           ((move_base #q102 #q104 #o0))
           ((move_base #q102 #q97 #o0))
           ((move_base #q102 #q98 #o0))
           ((move_base #q102 #q99 #o0))
           ((move_base #q102 v3 #o0))
           ((move_base #q102 #q103 #t279))
           ((move_base #q103 #o3 #o0))
           ((move_base #q103 #q100 #o0))
           ((move_base #q103 #q101 #o0))
           ((move_base #q103 #q102 #o0))
           ((move_base #q103 #q103 #o0))
           ((move_base #q103 #q104 #o0))
           ((move_base #q103 #q97 #o0))
           ((move_base #q103 v3 #o0))
           ((move_base #q103 #q98 #t276))
           ((move_base #q103 #q99 #t285))
           ((move_base #q104 #o3 #o0))
           ((move_base #q104 #q100 #o0))
           ((move_base #q104 #q101 #o0))
           ((move_base #q104 #q103 #o0))
           ((move_base #q104 #q104 #o0))
           ((move_base #q104 #q97 #o0))
           ((move_base #q104 #q98 #o0))
           ((move_base #q104 v3 #o0))
           ((move_base #q104 #q99 #t280))
           ((move_base #q104 #q102 #t283))
           ((move_base #q97 #o3 #o0))
           ((move_base #q97 #q100 #o0))
           ((move_base #q97 #q101 #o0))
           ((move_base #q97 #q102 #o0))
           ((move_base #q97 #q103 #o0))
           ((move_base #q97 #q104 #o0))
           ((move_base #q97 #q97 #o0))
           ((move_base #q97 #q98 #o0))
           ((move_base #q97 #q99 #o0))
           ((move_base #q97 v3 #o0))
           ((move_base #q98 #o3 #o0))
           ((move_base #q98 #q100 #o0))
           ((move_base #q98 #q101 #o0))
           ((move_base #q98 #q102 #o0))
           ((move_base #q98 #q103 #o0))
           ((move_base #q98 #q97 #o0))
           ((move_base #q98 #q98 #o0))
           ((move_base #q98 #q99 #o0))
           ((move_base #q98 v3 #o0))
           ((move_base #q98 #q104 #t278))
           ((move_base #q99 #o3 #o0))
           ((move_base #q99 #q100 #o0))
           ((move_base #q99 #q101 #o0))
           ((move_base #q99 #q102 #o0))
           ((move_base #q99 #q103 #o0))
           ((move_base #q99 #q104 #o0))
           ((move_base #q99 #q98 #o0))
           ((move_base #q99 #q99 #o0))
           ((move_base #q99 v3 #o0))
           ((move_base #q99 #q97 #t277))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q102 #o0))
           ((move_base v3 #q103 #o0))
           ((move_base v3 #q104 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q97 #t268))
           ((move_base v3 #q98 #t269))
           ((move_base v3 #q99 #t270))
           ((move_base v3 #q100 #t271))
           ((move_base v3 #q101 #t272))
           ((pick v4 v12 #o2 #g43 #o3 #o4))
           ((place v4 v12 #o2 #g43 #o3 #o4))
           ((pick v4 v12 p17 #g43 #q103 #t274))
           ((place v4 v12 p17 #g43 #q103 #t274))
           ((pick v4 v12 p21 #g43 #o3 #o4))
           ((place v4 v12 p21 #g43 #o3 #o4))
           ((pick v4 v12 p5 #g43 #o3 #o4))
           ((place v4 v12 p5 #g43 #o3 #o4))
           ((pick v4 v12 p9 #g43 #o3 #o4))
           ((place v4 v12 p9 #g43 #o3 #o4))
           ((pick v4 v12 v13 #g43 #q102 #t273))
           ((place v4 v12 v13 #g43 #q102 #t273))
           ((pick v4 v14 #o2 #g41 #o3 #o4))
           ((place v4 v14 #o2 #g41 #o3 #o4))
           ((pick v4 v14 p10 #g41 #o3 #o4))
           ((place v4 v14 p10 #g41 #o3 #o4))
           ((pick v4 v14 p18 #g41 #q104 #t275))
           ((place v4 v14 p18 #g41 #q104 #t275))
           ((pick v4 v14 p22 #g41 #o3 #o4))
           ((place v4 v14 p22 #g41 #o3 #o4))
           ((pick v4 v14 p6 #g41 #o3 #o4))
           ((place v4 v14 p6 #g41 #o3 #o4))
           ((pick v4 v14 v15 #g41 #q98 #t264))
           ((place v4 v14 v15 #g41 #q98 #t264))
           ((pick v4 v16 #o2 #g40 #o3 #o4))
           ((place v4 v16 #o2 #g40 #o3 #o4))
           ((pick v4 v16 p11 #g40 #o3 #o4))
           ((place v4 v16 p11 #g40 #o3 #o4))
           ((pick v4 v16 p19 #g40 #q97 #t263))
           ((place v4 v16 p19 #g40 #q97 #t263))
           ((pick v4 v16 p23 #g40 #o3 #o4))
           ((place v4 v16 p23 #g40 #o3 #o4))
           ((pick v4 v16 p7 #g40 #o3 #o4))
           ((place v4 v16 p7 #g40 #o3 #o4))
           ((pick v4 v16 v17 #g40 #q99 #t265))
           ((place v4 v16 v17 #g40 #q99 #t265))
           ((pick v4 v8 #o2 #g42 #o3 #o4))
           ((place v4 v8 #o2 #g42 #o3 #o4))
           ((pick v4 v8 p16 #g42 #q101 #t267))
           ((place v4 v8 p16 #g42 #q101 #t267))
           ((pick v4 v8 p20 #g42 #o3 #o4))
           ((place v4 v8 p20 #g42 #o3 #o4))
           ((pick v4 v8 p4 #g42 #o3 #o4))
           ((place v4 v8 p4 #g42 #o3 #o4))
           ((pick v4 v8 p8 #g42 #o3 #o4))
           ((place v4 v8 p8 #g42 #o3 #o4))
           ((pick v4 v8 v9 #g42 #q100 #t266))
           ((place v4 v8 v9 #g42 #q100 #t266))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q87', '#t231'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g38', '#q87', '#t227'))
           Action(name='move_base', args=('#q87', '#q94', '#t257'))
           Action(name='place', args=('v4', 'v8', 'p16', '#g38', '#q94', '#t238'))
           Action(name='move_base', args=('#q94', '#q91', '#t242'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g39', '#q91', '#t235'))
           Action(name='move_base', args=('#q91', '#q93', '#t246'))
           Action(name='place', args=('v4', 'v12', 'p17', '#g39', '#q93', '#t237'))
           Action(name='move_base', args=('#q93', '#q85', '#t252'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g36', '#q85', '#t225'))
           Action(name='move_base', args=('#q85', '#q96', '#t260'))
           Action(name='place', args=('v4', 'v14', 'p18', '#g36', '#q96', '#t255'))
           Action(name='move_base', args=('#q96', '#q86', '#t261'))
           Action(name='pick', args=('v4', 'v16', 'v17', '#g37', '#q86', '#t226'))
           Action(name='move_base', args=('#q86', '#q95', '#t262'))
           Action(name='place', args=('v4', 'v16', 'p19', '#g37', '#q95', '#t245'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-approach-pose:('v16', 'p19', '#g37', 'v12', 'p17')->()`, which impeded executing the action pick('v4', 'v16', 'v17', '#g37', '#q86', '#t226').
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The initial state shows four graspable objects (v8, v12, v14, v16) currently supported on surface v11. The goal is to place all four objects on surface v18. The robot's initial base configuration is v3. The robot has two arms, v4 and v6, both empty.
           
           The previous plan failed because `test-cfree-approach-pose:('v16', 'p19', '#g37', 'v12', 'p17')` failed, meaning object v12 at pose p17 was obstructing the approach for object v16 at pose p19. This suggests that the placement of v12 at p17 was too close to where v16 needed to be placed at p19. I need to select different poses for placing the objects or reorder the placement to avoid collisions.
           
           All four objects (v8, v12, v14, v16) are initially on surface v11. The goal is to move them to surface v18.
           
           I will attempt to pick and place each object individually. I will choose target poses on surface v18 that are collision-free. Objects p16, p17, p18, p19 are all on surface v18. I will try to place them in a way that minimizes collisions.
           
           Let's try placing them as follows:
           v8 at p16
           v12 at p17
           v14 at p18
           v16 at p19
           
           Looking at the AABBs of the objects:
           v16: ((0.175, 0.446), (0.262, 0.533))
           v18: ((-0.135, -0.135), (0.135, 0.135)) (This seems like a small surface, maybe it's not the entire surface)
           
           The previous failure indicates a collision between v12 at p17 and v16 at p19 during the approach for v16. Let's try placing the objects in a different order or different poses on v18 to avoid this.
           
           I will try to place them in an order that tries to clear the path for subsequent placements and uses different poses available on v18.
           Let's try placing v8 at p20, v12 at p21, v14 at p22, and v16 at p23. These poses are also defined for being supported by v18. This may help with the collision issue.
           
           1. **Pick v8 from v9 and place at p20 on v18:**
              - `move_base v3 #q100 #t271` (move to configuration to pick v8 from v9)
              - `pick v4 v8 v9 #g42 #q100 #t266`
              - `move_base #q100 #o3 #o0` (move to config to place v8 on p20)
              - `place v4 v8 p20 #g42 #o3 #o4`
              
           2. **Pick v12 from v13 and place at p21 on v18:**
              - `move_base #o3 #q102 #o0` (move to configuration to pick v12 from v13)
              - `pick v4 v12 v13 #g43 #q102 #t273`
              - `move_base #q102 #o3 #o0` (move to config to place v12 on p21)
              - `place v4 v12 p21 #g43 #o3 #o4`
           
           3. **Pick v14 from v15 and place at p22 on v18:**
              - `move_base #o3 #q98 #o0` (move to configuration to pick v14 from v15)
              - `pick v4 v14 v15 #g41 #q98 #t264`
              - `move_base #q98 #o3 #o0` (move to config to place v14 on p22)
              - `place v4 v14 p22 #g41 #o3 #o4`
           
           4. **Pick v16 from v17 and place at p23 on v18:**
              - `move_base #o3 #q99 #o0` (move to configuration to pick v16 from v17)
              - `pick v4 v16 v17 #g40 #q99 #t265`
              - `move_base #q99 #o3 #o0` (move to config to place v16 on p23)
              - `place v4 v16 p23 #g40 #o3 #o4`
           
           This plan uses the poses p20, p21, p22, p23 on v18. Let's verify the initial conditions.
           The poses p20, p21, p22, p23 are provided with quaternion (0.0, 0.0, 0.0, 1.0) and a z-height of 0.782.
           The surface v18 has AABB ((-0.135, -0.135), (0.135, 0.135)).
           The AABBs of the objects are:
           v8: ((0.109, -0.52), (0.206, -0.422))
           v12: ((0.015, -0.085), (0.085, -0.015))
           v14: ((-0.292, 0.051), (-0.203, 0.14))
           v16: ((0.175, 0.446), (0.262, 0.533))
           
           The current poses for p20, p21, p22, p23 (which are (-0.05, 0.05, 0.782), (0.05, -0.05, 0.782), (-0.05, 0.05, 0.782), (-0.05, -0.05, 0.782) respectively) are very close to the center of v18. The objects' AABBs are quite large and their current poses for p20, p21, p22, p23 might cause collisions. The initial pose of the objects (v9, v13, v15, v17) are also off-center with respect to the objects themselves. I need to make sure the placements on v18 (using p20, p21, p22, p23) are collision free. It is likely that these poses are defined to be within the bounds of v18. Let's assume they are indeed collision-free given the problem statement. The continuous value for `o3` is not provided, implying it's a dummy base configuration, so I will select a suitable base configuration when it is needed.
           
           The important thing is to use the *provided* poses. If I were to invent poses, that would be different. Given that these poses are provided in the initial state with `supported(obj, p, v18)`, I must assume they are valid locations for the objects on `v18`.
           
           The sequence of move_base actions followed by pick and place actions aims to move each object sequentially. The 'o3' bconf is also available, so it's probably a good intermediate base config. I will use the `_o3_` bconf as an intermediate general location for the robot to avoid specifying multiple, potentially colliding, base configurations.
           
           The cost will be minimized by only moving the base when necessary. The `basemotion` predicates are used to determine valid base motions between configurations.
           I will try to use the poses p20, p21, p22, p23.
           
           --Plan--:
           (move_base v3 #q100 #t271)
           (pick v4 v8 v9 #g42 #q100 #t266)
           (move_base #q100 #o3 #o0)
           (place v4 v8 p20 #g42 #o3 #o4)
           (move_base #o3 #q102 #o0)
           (pick v4 v12 v13 #g43 #q102 #t273)
           (move_base #q102 #o3 #o0)
           (place v4 v12 p21 #g43 #o3 #o4)
           (move_base #o3 #q98 #o0)
           (pick v4 v14 v15 #g41 #q98 #t264)
           (move_base #q98 #o3 #o0)
           (place v4 v14 p22 #g41 #o3 #o4)
           (move_base #o3 #q99 #o0)
           (pick v4 v16 v17 #g40 #q99 #t265)
           (move_base #q99 #o3 #o0)
           (place v4 v16 p23 #g40 #o3 #o4)

