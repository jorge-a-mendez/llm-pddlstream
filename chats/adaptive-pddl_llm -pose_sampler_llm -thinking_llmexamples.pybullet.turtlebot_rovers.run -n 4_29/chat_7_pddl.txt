User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v4)
           Atom type(v3, v2)
           Atom onboard(v10, v14)
           Atom conf(v14, v15)
           Atom objective(v18)
           Atom rover(v12)
           Atom camera(v10)
           Atom type(v1, v2)
           Atom objective(v20)
           Atom objective(v19)
           Atom rock(v3)
           Atom supports(v10, v11)
           Atom objective(v17)
           Atom atconf(v14, v15)
           Atom free(v12, v16)
           Atom mode(v11)
           Atom lander(v9)
           Atom type(v5, v6)
           Atom rock(v8)
           Atom type(v8, v6)
           Atom type(v7, v6)
           Atom onboard(v10, v12)
           Atom free(v14, v16)
           Atom rock(v5)
           Atom rock(v1)
           Atom atconf(v12, v13)
           Atom rock(v7)
           Atom store(v16)
           Atom type(v4, v2)
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q10, v7)
           Atom conf(v12, #q10)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #q14, #y6, v17)
           Atom imagerange(v14, #q14, v17)
           Atom conf(v14, #q14)
           Atom ray(#y6)
           Atom imagevisible(v12, #q4, #y3, v17)
           Atom imagerange(v12, #q4, v17)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom above(v12, #q8, v1)
           Atom conf(v12, #q8)
           Atom above(v14, #q5, v1)
           Atom conf(v14, #q5)
           Atom above(v14, #q3, v5)
           Atom conf(v14, #q3)
           Atom above(v12, #q9, v5)
           Atom conf(v12, #q9)
           Atom imagevisible(v12, #q2, #y2, v18)
           Atom imagerange(v12, #q2, v18)
           Atom conf(v12, #q2)
           Atom ray(#y2)
           Atom imagevisible(v14, #q17, #y9, v18)
           Atom imagerange(v14, #q17, v18)
           Atom conf(v14, #q17)
           Atom ray(#y9)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q13, v3)
           Atom conf(v12, #q13)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q12, v4)
           Atom conf(v12, #q12)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q0, #y0, v19)
           Atom imagerange(v12, #q0, v19)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q16, #y8, v19)
           Atom imagerange(v14, #q16, v19)
           Atom conf(v14, #q16)
           Atom ray(#y8)
           Atom imagevisible(v12, #q7, #y5, v20)
           Atom imagerange(v12, #q7, v20)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom imagevisible(v14, #q15, #y7, v20)
           Atom imagerange(v14, #q15, v20)
           Atom conf(v14, #q15)
           Atom ray(#y7)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q11, v8)
           Atom conf(v12, #q11)
           Atom comvisible(v14, #q6, #y4, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, v15, #t31, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q6, #t7, v15)
           Atom motion(v14, #q6, #o2, #q14)
           Atom motion(v14, #q15, #t44, #q6)
           Atom motion(v14, #q6, #t46, #q15)
           Atom motion(v14, #q14, #t32, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q17, #t35, #q6)
           Atom motion(v14, #q6, #t41, #q17)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q4, #t22, #q7)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t16, #q4)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q7, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q4)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q0, #t25, #q7)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v14, #q17, #o2, #q5)
           Atom motion(v14, #q6, #t4, #q5)
           Atom motion(v14, #q5, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q14, #o2, #q5)
           Atom motion(v14, #q5, #t6, #q6)
           Atom motion(v14, #q5, #o2, #q17)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, v15, #t2, #q5)
           Atom motion(v14, #q5, #o2, #q14)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q4, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q13)
           Atom motion(v12, #q12, #o2, #q13)
           Atom motion(v12, #q13, #t33, #q9)
           Atom motion(v12, #q13, #o2, #q13)
           Atom motion(v12, #q9, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q0)
           Atom motion(v12, #q13, #o2, #q10)
           Atom motion(v12, #q13, #o2, v13)
           Atom motion(v12, #q4, #o2, #q13)
           Atom motion(v12, #q13, #o2, #q12)
           Atom motion(v12, #q13, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q13)
           Atom motion(v12, v13, #t34, #q13)
           Atom motion(v12, #q1, #t15, #q0)
           Atom motion(v12, #q1, #t12, #q7)
           Atom motion(v12, #q1, #t8, v13)
           Atom motion(v12, #q13, #t36, #q1)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q4, #t11, #q1)
           Atom motion(v12, #q1, #o2, #q13)
           Atom motion(v12, #q0, #t9, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q10, #t39, #q1)
           Atom motion(v12, #q7, #t14, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q9, #t20, #q1)
           Atom motion(v12, #q1, #t24, #q10)
           Atom motion(v12, #q1, #t43, #q12)
           Atom motion(v12, #q1, #t18, #q9)
           Atom motion(v12, #q12, #t38, #q1)
           Atom motion(v12, #q2, #t23, #q4)
           Atom motion(v12, #q4, #t30, #q2)
           Atom motion(v12, #q2, #t10, #q1)
           Atom motion(v12, #q0, #t21, #q2)
           Atom motion(v12, #q2, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q13, #o2, #q2)
           Atom motion(v12, #q1, #t13, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q2, #t29, #q0)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v14, #q16, #o2, #q5)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #t42, #q6)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q5, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q6, #t37, #q16)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q1, #t40, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q9, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v12, #q11, #t45, #q1)
           Atom motion(v12, #q11, #o2, #q9)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q11, #o2, #q13)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q17, #o2, #q3)
           Atom motion(v14, #q16, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q3, #t5, #q6)
           Atom motion(v14, #q3, #o2, #q17)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, v15, #t1, #q3)
           Atom motion(v14, #q6, #t3, #q3)
           Atom motion(v14, #q14, #o2, #q3)
           Atom motion(v14, #q15, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q10, #t27, #q8)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q11, #t28, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q13)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q8, #t19, #q1)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q8, #t26, #q9)
           Atom motion(v12, #q13, #o2, #q8)
           Atom motion(v12, #q1, #t17, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q17)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q17, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #q16, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q10 v7 v16))
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q12 v4 v16))
           ((sample_rock v12 #q13 v3 v16))
           ((sample_rock v12 #q8 v1 v16))
           ((sample_rock v12 #q9 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q3 v5 v16))
           ((sample_rock v14 #q5 v1 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q13))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t21 #q2))
           ((move v12 #q0 #t25 #q7))
           ((move v12 #q0 #t9 #q1))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q13))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #t12 #q7))
           ((move v12 #q1 #t13 #q2))
           ((move v12 #q1 #t15 #q0))
           ((move v12 #q1 #t17 #q8))
           ((move v12 #q1 #t18 #q9))
           ((move v12 #q1 #t24 #q10))
           ((move v12 #q1 #t40 #q11))
           ((move v12 #q1 #t43 #q12))
           ((move v12 #q1 #t8 v13))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q13))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t27 #q8))
           ((move v12 #q10 #t39 #q1))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q13))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 #q9))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t28 #q8))
           ((move v12 #q11 #t45 #q1))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q13))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q4))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 #q9))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t38 #q1))
           ((move v12 #q13 #o2 #q0))
           ((move v12 #q13 #o2 #q10))
           ((move v12 #q13 #o2 #q11))
           ((move v12 #q13 #o2 #q12))
           ((move v12 #q13 #o2 #q13))
           ((move v12 #q13 #o2 #q2))
           ((move v12 #q13 #o2 #q4))
           ((move v12 #q13 #o2 #q7))
           ((move v12 #q13 #o2 #q8))
           ((move v12 #q13 #o2 v13))
           ((move v12 #q13 #t33 #q9))
           ((move v12 #q13 #t36 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q13))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t10 #q1))
           ((move v12 #q2 #t23 #q4))
           ((move v12 #q2 #t29 #q0))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q12))
           ((move v12 #q4 #o2 #q13))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 #q9))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t11 #q1))
           ((move v12 #q4 #t22 #q7))
           ((move v12 #q4 #t30 #q2))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q13))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 #q9))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t14 #q1))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q13))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t19 #q1))
           ((move v12 #q8 #t26 #q9))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q11))
           ((move v12 #q9 #o2 #q12))
           ((move v12 #q9 #o2 #q13))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q4))
           ((move v12 #q9 #o2 #q7))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t20 #q1))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t0 #q0))
           ((move v12 v13 #t16 #q4))
           ((move v12 v13 #t34 #q13))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q17))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q3))
           ((move v14 #q14 #o2 #q5))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t32 #q6))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q3))
           ((move v14 #q15 #o2 #q5))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t44 #q6))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q3))
           ((move v14 #q16 #o2 #q5))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t42 #q6))
           ((move v14 #q17 #o2 #o5))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q3))
           ((move v14 #q17 #o2 #q5))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t35 #q6))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q17))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t5 #q6))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q14))
           ((move v14 #q5 #o2 #q15))
           ((move v14 #q5 #o2 #q16))
           ((move v14 #q5 #o2 #q17))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t6 #q6))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q14))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #t3 #q3))
           ((move v14 #q6 #t37 #q16))
           ((move v14 #q6 #t4 #q5))
           ((move v14 #q6 #t41 #q17))
           ((move v14 #q6 #t46 #q15))
           ((move v14 #q6 #t7 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q3))
           ((move v14 v15 #t2 #q5))
           ((move v14 v15 #t31 #q14))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q2 #y2 v18 v10))
           ((calibrate v12 #q4 #y3 v17 v10))
           ((calibrate v12 #q7 #y5 v20 v10))
           ((calibrate v14 #q14 #y6 v17 v10))
           ((calibrate v14 #q15 #y7 v20 v10))
           ((calibrate v14 #q16 #y8 v19 v10))
           ((calibrate v14 #q17 #y9 v18 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q2 #y2 v18 v10 v11))
           ((take_image v12 #q4 #y3 v17 v10 v11))
           ((take_image v12 #q7 #y5 v20 v10 v11))
           ((take_image v14 #q14 #y6 v17 v10 v11))
           ((take_image v14 #q15 #y7 v20 v10 v11))
           ((take_image v14 #q16 #y8 v19 v10 v11))
           ((take_image v14 #q17 #y9 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y4 v9 v3))
           ((send_analysis v14 #q6 #y4 v9 v4))
           ((send_analysis v14 #q6 #y4 v9 v7))
           ((send_analysis v14 #q6 #y4 v9 v8))
           ((send_analysis v14 #q6 #y4 v9 v5))
           ((send_analysis v14 #q6 #y4 v9 v1))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v20 v11))
           ((send_image v14 #q6 #y4 v9 v17 v11))
           ((send_image v14 #q6 #y4 v9 v20 v11))
           ((send_image v14 #q6 #y4 v9 v19 v11))
           ((send_image v14 #q6 #y4 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Initial Assessment and Problem Decomposition**
           
           Alright, the objective is to achieve `Atom new-axiom@0()` in the `rovers` domain. This looks complex, but let's break it down. `new-axiom@0()` is essentially a conjunction of several conditions. My first task is to examine each of these conditions against the initial state to see what's already true and what needs to be achieved.
           
           **Analysis of Goals and Current State**
           
           After reviewing the initial state, I see that the following are already satisfied: `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)`. Excellent, that's four down!  The remaining tasks involve `receivedimage` predicates for different objectives (v17, v18, v19, and v20) and `receivedanalysis` predicates for a stone and soil.
           
           **Planning Image Acquisition and Transmission**
           
           The `receivedimage` predicates can be achieved by the action `send_image`. This requires a rover to first `take_image` and then `calibrate`. I'll need to strategically move rovers to these respective locations, take the image and then send them via the lander. The camera is onboard both rovers, offering flexibility.  I need to find the specific configurations for each of the objective and the lander. Based on the `imagevisible` predicates, `v12` should handle images from these objectives. `v12` starts at `#q13` and has to travel to images, communicate and return to `v13`.
           
           **Planning Analysis**
           
           For analysis, I'll need to pick one stone and one soil to satisfy the `receivedanalysis` predicates. I'll use `v14` for this because it has access to the store. The `sample_rock` action is key here. I'll need to move `v14` to each target, sample, send the analysis via `send_analysis`. Also, since the `sample_rock` action creates the effect `full` so to prepare for a second rock I need to add `drop_rock`.
           
           **Detailed Action Sequencing**
           
           After planning I have two plans - one for rover `v12` and one for rover `v14`.
           
           **Plan for Rover v12 (Image Acquisition and Transmission)**
           
           1.  `move v12 v13 #t16 #q4` (move to take image)
           2.  `calibrate v12 #q4 #y3 v17 v10` (calibrate)
           3.  `take_image v12 #q4 #y3 v17 v10 v11` (take the image)
           4.  `move v12 #q4 #t11 #q1` (move to comm)
           5.  `send_image v12 #q1 #y1 v9 v17 v11` (send)
           6.  `move v12 #q1 #t13 #q2` (move to next image location)
           7.  `calibrate v12 #q2 #y2 v18 v10`
           8.  `take_image v12 #q2 #y2 v18 v10 v11`
           9.  `move v12 #q2 #t10 #q1`
           10. `send_image v12 #q1 #y1 v9 v18 v11`
           11. `move v12 #q1 #t15 #q0`
           12. `calibrate v12 #q0 #y0 v19 v10`
           13. `take_image v12 #q0 #y0 v19 v10 v11`
           14. `move v12 #q0 #t9 #q1`
           15. `send_image v12 #q1 #y1 v9 v19 v11`
           16. `move v12 #q1 #t12 #q7`
           17. `calibrate v12 #q7 #y5 v20 v10`
           18. `take_image v12 #q7 #y5 v20 v10 v11`
           19. `move v12 #q7 #t14 #q1`
           20. `send_image v12 #q1 #y1 v9 v20 v11`
           21. `move v12 #q1 #t8 v13`
)

Model:     **Initial Assessment and Problem Decomposition**
           
           Alright, the objective is to achieve `Atom new-axiom@0()` in the `rovers` domain. This looks complex, but let's break it down. `new-axiom@0()` is essentially a conjunction of several conditions. My first task is to examine each of these conditions against the initial state to see what's already true and what needs to be achieved.
           
           **Analysis of Goals and Current State**
           
           After reviewing the initial state, I see that the following are already satisfied: `atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, and `free(v14, v16)`. Excellent, that's four down!  The remaining tasks involve `receivedimage` predicates for different objectives (v17, v18, v19, and v20) and `receivedanalysis` predicates for a stone and soil.
           
           **Planning Image Acquisition and Transmission**
           
           The `receivedimage` predicates can be achieved by the action `send_image`. This requires a rover to first `take_image` and then `calibrate`. I'll need to strategically move rovers to these respective locations, take the image and then send them via the lander. The camera is onboard both rovers, offering flexibility.  I need to find the specific configurations for each of the objective and the lander. Based on the `imagevisible` predicates, `v12` should handle images from these objectives. `v12` starts at `#q13` and has to travel to images, communicate and return to `v13`.
           
           **Planning Analysis**
           
           For analysis, I'll need to pick one stone and one soil to satisfy the `receivedanalysis` predicates. I'll use `v14` for this because it has access to the store. The `sample_rock` action is key here. I'll need to move `v14` to each target, sample, send the analysis via `send_analysis`. Also, since the `sample_rock` action creates the effect `full` so to prepare for a second rock I need to add `drop_rock`.
           
           **Detailed Action Sequencing**
           
           After planning I have two plans - one for rover `v12` and one for rover `v14`.
           
           **Plan for Rover v12 (Image Acquisition and Transmission)**
           
           1.  `move v12 v13 #t16 #q4` (move to take image)
           2.  `calibrate v12 #q4 #y3 v17 v10` (calibrate)
           3.  `take_image v12 #q4 #y3 v17 v10 v11` (take the image)
           4.  `move v12 #q4 #t11 #q1` (move to comm)
           5.  `send_image v12 #q1 #y1 v9 v17 v11` (send)
           6.  `move v12 #q1 #t13 #q2` (move to next image location)
           7.  `calibrate v12 #q2 #y2 v18 v10`
           8.  `take_image v12 #q2 #y2 v18 v10 v11`
           9.  `move v12 #q2 #t10 #q1`
           10. `send_image v12 #q1 #y1 v9 v18 v11`
           11. `move v12 #q1 #t15 #q0`
           12. `calibrate v12 #q0 #y0 v19 v10`
           13. `take_image v12 #q0 #y0 v19 v10 v11`
           14. `move v12 #q0 #t9 #q1`
           15. `send_image v12 #q1 #y1 v9 v19 v11`
           16. `move v12 #q1 #t12 #q7`
           17. `calibrate v12 #q7 #y5 v20 v10`
           18. `take_image v12 #q7 #y5 v20 v10 v11`
           19. `move v12 #q7 #t14 #q1`
           20. `send_image v12 #q1 #y1 v9 v20 v11`
           21. `move v12 #q1 #t8 v13`

