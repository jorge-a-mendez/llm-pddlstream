User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g10: object
           #g11: object
           #g9: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q24: object
           #q25: object
           #q26: object
           #q27: object
           #q28: object
           #q29: object
           #t58: object
           #t59: object
           #t60: object
           #t61: object
           #t62: object
           #t63: object
           #t64: object
           @sink: object
           @stove: object
           p3: object
           p4: object
           p5: object
           p6: object
           p7: object
           p8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p7 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v15 is a pose with position (0.026, -0.365, 0.781) and quaternion (0.0, 0.0, 0.583, 0.812).
           Object p5 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v13 is a pose with position (-0.097, -0.261, 0.781) and quaternion (0.0, 0.0, -0.641, 0.768).
           Object p8 is a pose with position (-0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.342, -0.481), (-0.408, 0.618)).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p3 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.035, -0.035), (0.035, 0.035)).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.035), (-0.015, 0.035)).
           Object p4 is a pose with position (0.05, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (0.0, 0.0, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.035), (0.085, 0.035)).
           Object v9 is a pose with position (-0.049, -0.517, 0.781) and quaternion (0.0, 0.0, -0.468, 0.884).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom pose(v8, p3)
           Atom supported(v8, p3, v16)
           Atom pose(v14, p5)
           Atom supported(v14, p5, v10)
           Atom supported(v14, p5, v16)
           Atom pose(v12, p4)
           Atom supported(v12, p4, v16)
           Atom supported(v12, p4, v10)
           Atom supported(v8, p3, v10)
           Atom kin(v32, v33, p3, v34, v35, v36)
           Atom kin(v32, v38, p5, v34, v35, v36)
           Atom kin(v32, v37, p4, v34, v35, v36)
           Atom pose(v12, p7)
           Atom supported(v12, p7, v10)
           Atom pose(v8, p6)
           Atom supported(v8, p6, v16)
           Atom supported(v8, p6, v10)
           Atom pose(v14, p8)
           Atom supported(v14, p8, v16)
           Atom supported(v14, p8, v10)
           Atom supported(v12, p7, v16)
           Atom kin(v32, v33, p6, v34, v35, v36)
           Atom kin(v32, v37, p7, v34, v35, v36)
           Atom kin(v32, v38, p8, v34, v35, v36)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v14, #o2, v16)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v16)
           Atom grasp(v14, #g10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g9)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g11)
           Atom bconf(#q25)
           Atom atraj(#t60)
           Atom kin(v4, v14, p8, #g10, #q25, #t60)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, p5, #g10, #o3, #o4)
           Atom bconf(#q29)
           Atom atraj(#t64)
           Atom kin(v4, v14, v15, #g10, #q29, #t64)
           Atom bconf(#q27)
           Atom atraj(#t62)
           Atom kin(v4, v8, v9, #g11, #q27, #t62)
           Atom bconf(#q26)
           Atom atraj(#t61)
           Atom kin(v4, v8, p6, #g11, #q26, #t61)
           Atom kin(v4, v8, p3, #g11, #o3, #o4)
           Atom kin(v4, v12, p4, #g9, #o3, #o4)
           Atom bconf(#q28)
           Atom atraj(#t63)
           Atom kin(v4, v12, p7, #g9, #q28, #t63)
           Atom bconf(#q24)
           Atom atraj(#t58)
           Atom kin(v4, v12, v13, #g9, #q24, #t58)
           Atom basemotion(#q25, #o0, v3)
           Atom basemotion(v3, #o0, #q25)
           Atom basemotion(#q25, #o0, #q25)
           Atom basemotion(#q28, #o0, v3)
           Atom basemotion(v3, #o0, #q28)
           Atom basemotion(#q28, #o0, #q28)
           Atom basemotion(#q25, #o0, #q28)
           Atom basemotion(#q28, #o0, #q25)
           Atom basemotion(#q26, #o0, v3)
           Atom basemotion(v3, #o0, #q26)
           Atom basemotion(#q26, #o0, #q26)
           Atom basemotion(#q28, #o0, #q26)
           Atom basemotion(#q26, #o0, #q28)
           Atom basemotion(#q25, #o0, #q26)
           Atom basemotion(#q26, #o0, #q25)
           Atom basemotion(#q29, #o0, v3)
           Atom basemotion(#q29, #o0, #q28)
           Atom basemotion(#q29, #o0, #q26)
           Atom basemotion(#q29, #o0, #q25)
           Atom basemotion(#q29, #o0, #q29)
           Atom basemotion(v3, #o0, #q29)
           Atom basemotion(#q28, #o0, #q29)
           Atom basemotion(#q26, #o0, #q29)
           Atom basemotion(#q25, #o0, #q29)
           Atom basemotion(#q27, #o0, v3)
           Atom basemotion(v3, #o0, #q27)
           Atom basemotion(#q27, #o0, #q27)
           Atom basemotion(#q26, #o0, #q27)
           Atom basemotion(#q27, #o0, #q26)
           Atom basemotion(#q28, #o0, #q27)
           Atom basemotion(#q27, #o0, #q28)
           Atom basemotion(#q25, #o0, #q27)
           Atom basemotion(#q27, #o0, #q25)
           Atom basemotion(#q29, #o0, #q27)
           Atom basemotion(#q27, #o0, #q29)
           Atom basemotion(#q24, #o0, v3)
           Atom basemotion(#q24, #o0, #q28)
           Atom basemotion(#q24, #o0, #q26)
           Atom basemotion(#q24, #o0, #q27)
           Atom btraj(#t59)
           Atom basemotion(v3, #t59, #q24)
           Atom basemotion(#q28, #o0, #q24)
           Atom basemotion(#q26, #o0, #q24)
           Atom basemotion(#q27, #o0, #q24)
           Atom basemotion(#q24, #o0, #q24)
           Atom basemotion(#q25, #o0, #q24)
           Atom basemotion(#q24, #o0, #q25)
           Atom basemotion(#q29, #o0, #q24)
           Atom basemotion(#q24, #o0, #q29)
           Atom kin(v4, v12, #o2, #g9, #o3, #o4)
           Atom kin(v4, v8, #o2, #g11, #o3, #o4)
           Atom kin(v4, v14, #o2, #g10, #o3, #o4)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q27)
           Atom basemotion(#o3, #o0, #q26)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q27, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q26, #o0, #o3)
           Atom basemotion(#q28, #o0, #o3)
           Atom basemotion(#o3, #o0, #q28)
           Atom basemotion(#q24, #o0, #o3)
           Atom basemotion(#o3, #o0, #q24)
           Atom basemotion(#q25, #o0, #o3)
           Atom basemotion(#o3, #o0, #q25)
           Atom basemotion(#q29, #o0, #o3)
           Atom basemotion(#o3, #o0, #q29)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q24 #o0))
           ((move_base #o3 #q25 #o0))
           ((move_base #o3 #q26 #o0))
           ((move_base #o3 #q27 #o0))
           ((move_base #o3 #q28 #o0))
           ((move_base #o3 #q29 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q24 #o3 #o0))
           ((move_base #q24 #q24 #o0))
           ((move_base #q24 #q25 #o0))
           ((move_base #q24 #q26 #o0))
           ((move_base #q24 #q27 #o0))
           ((move_base #q24 #q28 #o0))
           ((move_base #q24 #q29 #o0))
           ((move_base #q24 v3 #o0))
           ((move_base #q25 #o3 #o0))
           ((move_base #q25 #q24 #o0))
           ((move_base #q25 #q25 #o0))
           ((move_base #q25 #q26 #o0))
           ((move_base #q25 #q27 #o0))
           ((move_base #q25 #q28 #o0))
           ((move_base #q25 #q29 #o0))
           ((move_base #q25 v3 #o0))
           ((move_base #q26 #o3 #o0))
           ((move_base #q26 #q24 #o0))
           ((move_base #q26 #q25 #o0))
           ((move_base #q26 #q26 #o0))
           ((move_base #q26 #q27 #o0))
           ((move_base #q26 #q28 #o0))
           ((move_base #q26 #q29 #o0))
           ((move_base #q26 v3 #o0))
           ((move_base #q27 #o3 #o0))
           ((move_base #q27 #q24 #o0))
           ((move_base #q27 #q25 #o0))
           ((move_base #q27 #q26 #o0))
           ((move_base #q27 #q27 #o0))
           ((move_base #q27 #q28 #o0))
           ((move_base #q27 #q29 #o0))
           ((move_base #q27 v3 #o0))
           ((move_base #q28 #o3 #o0))
           ((move_base #q28 #q24 #o0))
           ((move_base #q28 #q25 #o0))
           ((move_base #q28 #q26 #o0))
           ((move_base #q28 #q27 #o0))
           ((move_base #q28 #q28 #o0))
           ((move_base #q28 #q29 #o0))
           ((move_base #q28 v3 #o0))
           ((move_base #q29 #o3 #o0))
           ((move_base #q29 #q24 #o0))
           ((move_base #q29 #q25 #o0))
           ((move_base #q29 #q26 #o0))
           ((move_base #q29 #q27 #o0))
           ((move_base #q29 #q28 #o0))
           ((move_base #q29 #q29 #o0))
           ((move_base #q29 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q25 #o0))
           ((move_base v3 #q26 #o0))
           ((move_base v3 #q27 #o0))
           ((move_base v3 #q28 #o0))
           ((move_base v3 #q29 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q24 #t59))
           ((pick v4 v12 #o2 #g9 #o3 #o4))
           ((place v4 v12 #o2 #g9 #o3 #o4))
           ((pick v4 v12 p4 #g9 #o3 #o4))
           ((place v4 v12 p4 #g9 #o3 #o4))
           ((pick v4 v12 p7 #g9 #q28 #t63))
           ((place v4 v12 p7 #g9 #q28 #t63))
           ((pick v4 v12 v13 #g9 #q24 #t58))
           ((place v4 v12 v13 #g9 #q24 #t58))
           ((pick v4 v14 #o2 #g10 #o3 #o4))
           ((place v4 v14 #o2 #g10 #o3 #o4))
           ((pick v4 v14 p5 #g10 #o3 #o4))
           ((place v4 v14 p5 #g10 #o3 #o4))
           ((pick v4 v14 p8 #g10 #q25 #t60))
           ((place v4 v14 p8 #g10 #q25 #t60))
           ((pick v4 v14 v15 #g10 #q29 #t64))
           ((place v4 v14 v15 #g10 #q29 #t64))
           ((pick v4 v8 #o2 #g11 #o3 #o4))
           ((place v4 v8 #o2 #g11 #o3 #o4))
           ((pick v4 v8 p3 #g11 #o3 #o4))
           ((place v4 v8 p3 #g11 #o3 #o4))
           ((pick v4 v8 p6 #g11 #q26 #t61))
           ((place v4 v8 p6 #g11 #q26 #t61))
           ((pick v4 v8 v9 #g11 #q27 #t62))
           ((place v4 v8 v9 #g11 #q27 #t62))
           ```
           
           Please provide a plan that achieves the goal from the initial state.
           
           The system attempted the following plan in the past, but it failed:
           
           ```
           Action(name='move_base', args=('v3', '#q20', '#t53'))
           Action(name='pick', args=('v4', 'v8', 'v9', '#g6', '#q20', '#t44'))
           Action(name='move_base', args=('#q20', '#q16', '#t54'))
           Action(name='place', args=('v4', 'v8', 'p6', '#g6', '#q16', '#t37'))
           Action(name='move_base', args=('#q16', '#q18', '#t55'))
           Action(name='pick', args=('v4', 'v12', 'v13', '#g8', '#q18', '#t39'))
           Action(name='move_base', args=('#q18', '#q21', '#t57'))
           Action(name='place', args=('v4', 'v12', 'p4', '#g8', '#q21', '#t45'))
           Action(name='move_base', args=('#q21', '#q19', '#t56'))
           Action(name='pick', args=('v4', 'v14', 'v15', '#g7', '#q19', '#t43'))
           Action(name='move_base', args=('#q19', '#q17', '#t49'))
           Action(name='place', args=('v4', 'v14', 'p8', '#g7', '#q17', '#t38'))
           ```
           
           This was because the following function call did not succeed: `test-cfree-pose-pose:('v12', 'p4', 'v8', 'p6')->()`
           This means that some details about the scene geometry made it impossible to execute the sequence of actions. If the failure occurs after placing on any pose that does not start with '#', it may be due to using a combination of invalid poses.As the expert, you may decide to choose additional poses, providing their continuous values using any free pose starting with '#'. 

Model:     The problem requires us to place three objects (v8, v12, and v14) onto the surface v16. Currently, all three objects are on surface v11. The robot has two arms, v4 and v6, but only v4 is relevant for the given actions. The robot also has a base, v3, which can move to different configurations. We need to find a sequence of pick, place, and move_base actions to achieve the goal while avoiding collisions.
           
           The initial positions of the objects are:
           - v8 at v9 (supported by v11)
           - v12 at v13 (supported by v11)
           - v14 at v15 (supported by v11)
           
           The target surface is v16. We have pre-defined poses on v16 for each object (p3, p4, p6, p7, p8, #o2). We need to ensure collision-free placements. The previous plan failed because placing v12 at p4 and v8 at p6 resulted in a collision. This indicates that p4 and p6 are too close for these specific objects.
           
           Let's try a different approach, by placing objects on #o2 since it's a shared pose, and for this, we will pick the optimal collision-free continuous value.
           The current objects are on surface v11.
           
           Plan:
           1. Pick v8 from v9.
           2. Place v8 on #o2 (on v16).
           3. Pick v12 from v13.
           4. Place v12 on #o2 (on v16).
           5. Pick v14 from v15.
           6. Place v14 on #o2 (on v16).
           
           To ensure no collision, we must specify unique collision-free placements on #o2 for v8, v12, and v14.
           
           --Plan--:
           (move_base v3 #q27 #o0)
           (pick v4 v8 v9 #g11 #q27 #t62)
           (move_base #q27 #o3 #o0)
           (place v4 v8 #o2 #g11 #o3 #o4)
           (move_base #o3 #q24 #o0)
           (pick v4 v12 v13 #g9 #q24 #t58)
           (move_base #q24 #o3 #o0)
           (place v4 v12 #o2 #g9 #o3 #o4)
           (move_base #o3 #q29 #o0)
           (pick v4 v14 v15 #g10 #q29 #t64)
           (move_base #q29 #o3 #o0)
           (place v4 v14 #o2 #g10 #o3 #o4)
           
           --Poses--:
           (#o2 v8 v16): (0.0 0.0 0.782 0.0)
           (#o2 v12 v16): (0.05 0.0 0.782 0.0)
           (#o2 v14 v16): (-0.05 0.0 0.782 0.0)

