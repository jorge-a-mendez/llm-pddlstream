User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           #t4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atbconf(v3)
           Atom atpose(v8, v9)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom controllable(v4)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom aconf(v6, v7)
           Atom graspable(v12)
           Atom arm(v4)
           Atom pose(v8, v9)
           Atom supported(v12, v13, v14)
           Atom atpose(v15, v16)
           Atom arm(v6)
           Atom supported(v8, v9, v11)
           Atom pose(v12, v13)
           Atom stackable(v12, v18)
           Atom stackable(v12, v10)
           Atom pose(v15, v16)
           Atom type(v12, v17)
           Atom stackable(v8, v18)
           Atom atpose(v12, v13)
           Atom canmove()
           Atom stackable(v8, v10)
           Atom type(v8, v17)
           Atom bconf(v3)
           Atom graspable(v15)
           Atom ataconf(v4, v5)
           Atom handempty(v6)
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v8, #o2, v18)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom grasp(v12, #g0)
           Atom grasp(v8, #o1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, #p0, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g0, #q1, #t1)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t4)
           Atom basemotion(#q1, #t4, #q0)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q0 #t4))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q0 #t0))
           ((place v4 v12 #p0 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q1 #t1))
           ((place v4 v12 v13 #g0 #q1 #t1))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The robot needs to achieve the goal `new-axiom@0()`, which is an axiom representing `on(?green, v18)` and `type(?green, v17)`. In this problem, `v12` is of type `v17` (green object, likely a plate or similar) and `v18` is a table or surface that `v12` can be stacked on. The initial state shows that `v12` is at pose `v13` and is supported by `v14`. It also shows `v12` is supported by `v18` at pose `#p0`. To achieve the goal, we need to place `v12` on `v18`.
           
           The robot's arm `v4` is `handempty`. The current base configuration is `v3`. The object `v12` is currently at `v13`. We need to move `v12` to `v18`, which means we need to place it at a pose on `v18`. The available actions suggest placing `v12` at `#p0` on `v18`.
           
           First, the robot needs to pick up `v12`. It is currently at `v13`. The action `pick v4 v12 v13 #g0 #q1 #t1` allows the robot to pick up `v12` from pose `v13` using arm `v4`, grasp `#g0`, base configuration `#q1`, and arm trajectory `#t1`. For this, the robot must be at base configuration `#q1`. Since the robot is currently at `v3`, it needs to move its base to `#q1`.
           
           After picking up `v12`, the robot needs to place it on `v18` at pose `#p0`. The action `place v4 v12 #p0 #g0 #q0 #t0` is available for this. This action requires the robot to be at base configuration `#q0`. So, after picking up `v12` at `#q1`, the robot needs to move to `#q0` before placing it.
           
           So the plan would be:
           1. Move the base from `v3` to `#q1`.
           2. Pick up `v12` from `v13` using arm `v4`.
           3. Move the base from `#q1` to `#q0`.
           4. Place `v12` at `#p0`.
           
           Let's check the available actions for the base movements:
           - `(move_base v3 #q1 #t3)`: This moves the base from `v3` to `#q1`.
           - `(move_base #q1 #q0 #t4)`: This moves the base from `#q1` to `#q0`.
           
           --Plan--:
           (move_base v3 #q1 #t3)
           (pick v4 v12 v13 #g0 #q1 #t1)
           (move_base #q1 #q0 #t4)
           (place v4 v12 #p0 #g0 #q0 #t0)

