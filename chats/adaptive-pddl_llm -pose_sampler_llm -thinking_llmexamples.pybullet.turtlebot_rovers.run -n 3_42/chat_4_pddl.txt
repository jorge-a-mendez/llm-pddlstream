User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom free(v14, v16)
           Atom type(v1, v2)
           Atom type(v7, v6)
           Atom atconf(v12, v13)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom mode(v11)
           Atom conf(v12, v13)
           Atom camera(v10)
           Atom rock(v3)
           Atom type(v3, v2)
           Atom atconf(v14, v15)
           Atom type(v4, v2)
           Atom rover(v12)
           Atom free(v12, v16)
           Atom onboard(v10, v14)
           Atom rock(v8)
           Atom conf(v14, v15)
           Atom objective(v17)
           Atom rock(v7)
           Atom type(v8, v6)
           Atom rock(v1)
           Atom rock(v4)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom rock(v5)
           Atom objective(v19)
           Atom lander(v9)
           Atom type(v5, v6)
           Atom objective(v18)
           Atom imagevisible(v12, #q3, #y2, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #q8, v5)
           Atom conf(v12, #q8)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom comvisible(v14, #q4, #y3, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v12, #q12, v4)
           Atom conf(v12, #q12)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v12, #q10, v3)
           Atom conf(v12, #q10)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q7, v1)
           Atom conf(v12, #q7)
           Atom above(v14, #q5, v1)
           Atom conf(v14, #q5)
           Atom above(v14, #q2, v7)
           Atom conf(v14, #q2)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v12, #q0, #y0, v17)
           Atom imagerange(v12, #q0, v17)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v8)
           Atom above(v14, #q11, v8)
           Atom conf(v14, #q11)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q1, #t6, v13)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q3, #t7, #q1)
           Atom motion(v12, v13, #t3, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q1, #t12, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q8)
           Atom motion(v12, #q1, #t10, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q3)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #t14, #q1)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, v15, #t23, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q9, #t17, #q4)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #t5, v15)
           Atom motion(v14, #q4, #t15, #q9)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q8, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q8)
           Atom motion(v12, #q7, #t13, #q1)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q1, #t9, #q7)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q4, #t22, #q2)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q2, #t4, #q4)
           Atom motion(v14, v15, #t1, #q2)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q1, #t19, #q10)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, #q10, #t25, #q1)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q7, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q7)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q1, #t20, #q12)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q12)
           Atom motion(v12, #q12, #t26, #q1)
           Atom motion(v14, #q11, #t18, #q4)
           Atom motion(v14, #q2, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q5, #o2, #q11)
           Atom motion(v14, v15, #t24, #q11)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q9)
           Atom motion(v14, #q11, #o2, #q5)
           Atom motion(v14, #q11, #o2, #q2)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q4, #o2, #q11)
           Atom motion(v12, #q0, #t16, #q3)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q0, #t0, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, v13, #t2, #q0)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q3, #t21, #q6)
           Atom motion(v12, #q6, #t11, #q1)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q1, #t8, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q11)
           Atom motion(v14, #o3, #o2, #q9)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q5, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q9, #o2, #o3)
           Atom motion(v14, #q2, #o2, #o3)
           Atom motion(v14, #q11, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q2)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q5)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q12)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q12, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, #o5, #o2, v13)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q10 v3 v16))
           ((sample_rock v12 #q12 v4 v16))
           ((sample_rock v12 #q7 v1 v16))
           ((sample_rock v12 #q8 v5 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #q11 v8 v16))
           ((sample_rock v14 #q2 v7 v16))
           ((sample_rock v14 #q5 v1 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q12))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q1))
           ((move v12 #q0 #t16 #q3))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #t10 #q8))
           ((move v12 #q1 #t12 #q3))
           ((move v12 #q1 #t19 #q10))
           ((move v12 #q1 #t20 #q12))
           ((move v12 #q1 #t6 v13))
           ((move v12 #q1 #t8 #q6))
           ((move v12 #q1 #t9 #q7))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t25 #q1))
           ((move v12 #q12 #o2 #o5))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 #q7))
           ((move v12 #q12 #o2 #q8))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t26 #q1))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 #q8))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t21 #q6))
           ((move v12 #q3 #t7 #q1))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t11 #q1))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q12))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 #q8))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t13 #q1))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q12))
           ((move v12 #q8 #o2 #q3))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q7))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t14 #q1))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t2 #q0))
           ((move v12 v13 #t3 #q3))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q11))
           ((move v14 #o3 #o2 #q2))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 #q5))
           ((move v14 #o3 #o2 #q9))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o3))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q2))
           ((move v14 #q11 #o2 #q5))
           ((move v14 #q11 #o2 #q9))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t18 #q4))
           ((move v14 #q2 #o2 #o3))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q11))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t4 #q4))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #t15 #q9))
           ((move v14 #q4 #t22 #q2))
           ((move v14 #q4 #t5 v15))
           ((move v14 #q5 #o2 #o3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q11))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q9 #o2 #o3))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t17 #q4))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t1 #q2))
           ((move v14 v15 #t23 #q9))
           ((move v14 v15 #t24 #q11))
           ((calibrate v12 #q0 #y0 v17 v10))
           ((calibrate v12 #q3 #y2 v18 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((take_image v12 #q0 #y0 v17 v10 v11))
           ((take_image v12 #q3 #y2 v18 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y3 v9 v3))
           ((send_analysis v14 #q4 #y3 v9 v4))
           ((send_analysis v14 #q4 #y3 v9 v8))
           ((send_analysis v14 #q4 #y3 v9 v7))
           ((send_analysis v14 #q4 #y3 v9 v1))
           ((send_analysis v14 #q4 #y3 v9 v5))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q4 #y3 v9 v17 v11))
           ((send_image v14 #q4 #y3 v9 v18 v11))
           ((send_image v14 #q4 #y3 v9 v19 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Okay, here's my plan to achieve `new-axiom@0()` in the rovers domain, broken down in a structured way:**
           
           My primary goal is to fulfill a set of conditions represented in this axiom. The key actions involve taking images and sending analysis reports. The first thing I'll do is break the plan into key components: obtaining images, analyzing samples, and then returning a rover to its initial configuration. The configuration of the rovers in space appears to be important.
           
           **1.  Obtain Images (`receivedimage` Goals):**
           
           *   I need to obtain images of three specific objectives: `v17`, `v18`, and `v19`. I'll be using rover `v12` and its camera `v10` in mode `v11`, both of which are confirmed to work. This means I'll need to move `v12` to a series of vantage points where I can get line of sight with each objective. I'll need to calibrate the camera and capture the image.
           
           *   To achieve these goals I'll need these steps:
               *   **v17**: move to `#q0`, calibrate, take image, move to `#q1`, and then send.
               *   **v18**: move to `#q3`, calibrate, take image, move to `#q1`, and then send.
               *   **v19**: move to `#q6`, calibrate, take image, move to `#q1`, and then send.
           
           **2.  Analyze Samples (`receivedanalysis` Goals):**
           
           *   I'll need to analyze two types of samples: `v1` (type `v2`) and `v5` (type `v6`).
           *   The process will be: navigate rover to the sampling location, collect the sample, navigate back to a communication point, and send the results. The store of rover `v12` will be important here.
           *   The steps will be:
               *   **v1**: move to `#q7`, sample rock `v1`, move to `#q1`, send analysis, drop sample.
               *   **v5**: move to `#q8`, sample rock `v5`, move to `#q1`, send analysis, drop sample.
           
           **3. Returning to the initial configuration and Final Steps:**
           
           *   After completing the imaging and analysis tasks, rover `v12` will most likely be at a spot from which the data was sent. I need to make sure `v12` returns to its initial configuration, location `v13`.
           
           **Plan Details and Execution:**
           
           *   I'll leverage rover `v12` due to its position and ability to perform the necessary functions.
           *   Crucially, I assume that I'm working with a clear environment. It doesn't look like I'll have to worry about blocked paths.
           
           **Here's the planned sequence of actions, and here are the specific moves I will use to make the plan work. The actions will be carefully ordered to fulfill the preconditions of each step:**
           
           1.  **v12 -> #q0** (`move v12 v13 #t2 #q0`) - move to vantage point for v17 image.
           2.  **Calibrate v10 for v17** (`calibrate v12 #q0 #y0 v17 v10`).
           3.  **Take image v17** (`take_image v12 #q0 #y0 v17 v10 v11`).
           4.  **v12 -> #q3** (`move v12 #q0 #t16 #q3`) - move to vantage point for v18 image.
           5.  **Calibrate v10 for v18** (`calibrate v12 #q3 #y2 v18 v10`).
           6.  **Take image v18** (`take_image v12 #q3 #y2 v18 v10 v11`).
           7.  **v12 -> #q6** (`move v12 #q3 #t21 #q6`) - move to vantage point for v19 image.
           8.  **Calibrate v10 for v19** (`calibrate v12 #q6 #y4 v19 v10`).
           9.  **Take image v19** (`take_image v12 #q6 #y4 v19 v10 v11`).
           10. **v12 -> #q1** (`move v12 #q6 #t11 #q1`) - move to the communication/analysis point.
           1
)

Model:     **Okay, here's my plan to achieve `new-axiom@0()` in the rovers domain, broken down in a structured way:**
           
           My primary goal is to fulfill a set of conditions represented in this axiom. The key actions involve taking images and sending analysis reports. The first thing I'll do is break the plan into key components: obtaining images, analyzing samples, and then returning a rover to its initial configuration. The configuration of the rovers in space appears to be important.
           
           **1.  Obtain Images (`receivedimage` Goals):**
           
           *   I need to obtain images of three specific objectives: `v17`, `v18`, and `v19`. I'll be using rover `v12` and its camera `v10` in mode `v11`, both of which are confirmed to work. This means I'll need to move `v12` to a series of vantage points where I can get line of sight with each objective. I'll need to calibrate the camera and capture the image.
           
           *   To achieve these goals I'll need these steps:
               *   **v17**: move to `#q0`, calibrate, take image, move to `#q1`, and then send.
               *   **v18**: move to `#q3`, calibrate, take image, move to `#q1`, and then send.
               *   **v19**: move to `#q6`, calibrate, take image, move to `#q1`, and then send.
           
           **2.  Analyze Samples (`receivedanalysis` Goals):**
           
           *   I'll need to analyze two types of samples: `v1` (type `v2`) and `v5` (type `v6`).
           *   The process will be: navigate rover to the sampling location, collect the sample, navigate back to a communication point, and send the results. The store of rover `v12` will be important here.
           *   The steps will be:
               *   **v1**: move to `#q7`, sample rock `v1`, move to `#q1`, send analysis, drop sample.
               *   **v5**: move to `#q8`, sample rock `v5`, move to `#q1`, send analysis, drop sample.
           
           **3. Returning to the initial configuration and Final Steps:**
           
           *   After completing the imaging and analysis tasks, rover `v12` will most likely be at a spot from which the data was sent. I need to make sure `v12` returns to its initial configuration, location `v13`.
           
           **Plan Details and Execution:**
           
           *   I'll leverage rover `v12` due to its position and ability to perform the necessary functions.
           *   Crucially, I assume that I'm working with a clear environment. It doesn't look like I'll have to worry about blocked paths.
           
           **Here's the planned sequence of actions, and here are the specific moves I will use to make the plan work. The actions will be carefully ordered to fulfill the preconditions of each step:**
           
           1.  **v12 -> #q0** (`move v12 v13 #t2 #q0`) - move to vantage point for v17 image.
           2.  **Calibrate v10 for v17** (`calibrate v12 #q0 #y0 v17 v10`).
           3.  **Take image v17** (`take_image v12 #q0 #y0 v17 v10 v11`).
           4.  **v12 -> #q3** (`move v12 #q0 #t16 #q3`) - move to vantage point for v18 image.
           5.  **Calibrate v10 for v18** (`calibrate v12 #q3 #y2 v18 v10`).
           6.  **Take image v18** (`take_image v12 #q3 #y2 v18 v10 v11`).
           7.  **v12 -> #q6** (`move v12 #q3 #t21 #q6`) - move to vantage point for v19 image.
           8.  **Calibrate v10 for v19** (`calibrate v12 #q6 #y4 v19 v10`).
           9.  **Take image v19** (`take_image v12 #q6 #y4 v19 v10 v11`).
           10. **v12 -> #q1** (`move v12 #q6 #t11 #q1`) - move to the communication/analysis point.
           1

