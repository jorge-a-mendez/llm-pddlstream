User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q2: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t14: object
           #t15: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t43: object
           #t44: object
           #t45: object
           #t46: object
           #t47: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom lander(v9)
           Atom onboard(v10, v12)
           Atom rover(v14)
           Atom store(v16)
           Atom conf(v12, v13)
           Atom type(v7, v6)
           Atom objective(v18)
           Atom type(v4, v2)
           Atom rock(v4)
           Atom objective(v17)
           Atom rover(v12)
           Atom onboard(v10, v14)
           Atom type(v1, v2)
           Atom supports(v10, v11)
           Atom atconf(v14, v15)
           Atom mode(v11)
           Atom free(v14, v16)
           Atom rock(v8)
           Atom rock(v5)
           Atom camera(v10)
           Atom conf(v14, v15)
           Atom rock(v3)
           Atom rock(v7)
           Atom free(v12, v16)
           Atom type(v5, v6)
           Atom type(v8, v6)
           Atom rock(v1)
           Atom atconf(v12, v13)
           Atom type(v3, v2)
           Atom motion(v14, v15, #o2, v15)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q8, v3)
           Atom conf(v12, #q8)
           Atom above(v12, #q5, v1)
           Atom conf(v12, #q5)
           Atom above(v12, #q10, v5)
           Atom conf(v12, #q10)
           Atom above(v12, #q1, v7)
           Atom conf(v12, #q1)
           Atom above(v12, #q11, v8)
           Atom conf(v12, #q11)
           Atom imagevisible(v12, #q0, #y0, v17)
           Atom imagerange(v12, #q0, v17)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #q4, v4)
           Atom conf(v12, #q4)
           Atom comvisible(v14, #q6, #y3, v9)
           Atom comrange(v14, #q6, v9)
           Atom conf(v14, #q6)
           Atom ray(#y3)
           Atom above(v14, #q9, v5)
           Atom conf(v14, #q9)
           Atom above(v14, #q7, v8)
           Atom conf(v14, #q7)
           Atom imagevisible(v14, #q13, #y4, v17)
           Atom imagerange(v14, #q13, v17)
           Atom conf(v14, #q13)
           Atom ray(#y4)
           Atom above(v14, #q15, v7)
           Atom conf(v14, #q15)
           Atom above(v14, #q16, v1)
           Atom conf(v14, #q16)
           Atom above(v14, #q17, v3)
           Atom conf(v14, #q17)
           Atom above(v14, #q12, v4)
           Atom conf(v14, #q12)
           Atom imagevisible(v14, #q14, #y5, v18)
           Atom imagerange(v14, #q14, v18)
           Atom conf(v14, #q14)
           Atom ray(#y5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, v13, #t10, #q5)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #t23, #q9)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #t11, #q8)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q11)
           Atom motion(v14, #q9, #t26, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v15, #o2, #q6)
           Atom motion(v14, #q6, #t27, #q9)
           Atom motion(v14, #q6, #t14, v15)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t43, #q11)
           Atom motion(v12, #q5, #t8, #q2)
           Atom motion(v12, #q2, #t6, v13)
           Atom motion(v12, #q2, #t19, #q5)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q8, #t9, #q2)
           Atom motion(v12, #q2, #t20, #q8)
           Atom motion(v12, #q11, #t47, #q2)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q12, #t22, #q6)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q6, #t21, #q12)
           Atom motion(v14, v15, #t28, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q9)
           Atom motion(v14, #q14, #t36, #q6)
           Atom motion(v14, #q14, #o2, #q12)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q14, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q14)
           Atom motion(v14, #q6, #t39, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, v15, #t33, #q14)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v12, #q2, #t40, #q0)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #t1, #q2)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, v13, #t2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v14, #q17, #o2, #q17)
           Atom motion(v14, #q17, #t45, #q6)
           Atom motion(v14, #q17, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q17)
           Atom motion(v14, #q6, #o2, #q17)
           Atom motion(v14, #q9, #o2, #q17)
           Atom motion(v14, v15, #o2, #q17)
           Atom motion(v14, #q14, #o2, #q17)
           Atom motion(v14, #q17, #o2, v15)
           Atom motion(v14, #q17, #o2, #q14)
           Atom motion(v14, #q17, #o2, #q9)
           Atom motion(v14, v15, #o2, #q16)
           Atom motion(v14, #q6, #t42, #q16)
           Atom motion(v14, #q9, #o2, #q16)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, #q16, #t44, #q6)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q17)
           Atom motion(v14, #q17, #o2, #q16)
           Atom motion(v14, #q16, #o2, #q9)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q2, #t5, #q4)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, v13, #t31, #q4)
           Atom motion(v12, #q4, #t15, #q2)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, #q17, #o2, #q15)
           Atom motion(v14, #q12, #t35, #q15)
           Atom motion(v14, #q9, #o2, #q15)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q9)
           Atom motion(v14, #q6, #t41, #q15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, #q15, #t34, #q6)
           Atom motion(v14, #q15, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q14)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q15)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, #q1, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q2, #t4, #q1)
           Atom motion(v12, v13, #t38, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q4, #t30, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q8, #o2, #q1)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q16)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q13, #t37, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q17, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q9)
           Atom motion(v14, v15, #t32, #q13)
           Atom motion(v14, #q6, #o2, #q13)
           Atom motion(v14, #q13, #t29, #q6)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q17)
           Atom motion(v14, #q13, #o2, #q15)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q2, #t17, #q10)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, v13, #t46, #q10)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q4, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #t18, #q2)
           Atom motion(v12, #q5, #o2, #q10)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v14, #q17, #o2, #q7)
           Atom motion(v14, v15, #t12, #q7)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #t7, #q6)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, #q9, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q7, #o2, #q17)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q15, #o2, #q7)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q1 v7 v16))
           ((sample_rock v12 #q10 v5 v16))
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q4 v4 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v14 #q12 v4 v16))
           ((sample_rock v14 #q15 v7 v16))
           ((sample_rock v14 #q16 v1 v16))
           ((sample_rock v14 #q17 v3 v16))
           ((sample_rock v14 #q7 v8 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q2))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t18 #q2))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t47 #q2))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #t17 #q10))
           ((move v12 #q2 #t19 #q5))
           ((move v12 #q2 #t20 #q8))
           ((move v12 #q2 #t4 #q1))
           ((move v12 #q2 #t40 #q0))
           ((move v12 #q2 #t43 #q11))
           ((move v12 #q2 #t5 #q4))
           ((move v12 #q2 #t6 v13))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t15 #q2))
           ((move v12 #q4 #t30 #q1))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t8 #q2))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t9 #q2))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q5))
           ((move v12 v13 #t11 #q8))
           ((move v12 v13 #t2 #q0))
           ((move v12 v13 #t31 #q4))
           ((move v12 v13 #t38 #q1))
           ((move v12 v13 #t46 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t22 #q6))
           ((move v14 #q12 #t35 #q15))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t29 #q6))
           ((move v14 #q13 #t37 #q14))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t36 #q6))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t34 #q6))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t44 #q6))
           ((move v14 #q17 #o2 #q12))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t45 #q6))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q17))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #t14 v15))
           ((move v14 #q6 #t21 #q12))
           ((move v14 #q6 #t27 #q9))
           ((move v14 #q6 #t39 #q14))
           ((move v14 #q6 #t41 #q15))
           ((move v14 #q6 #t42 #q16))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t7 #q6))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t26 #q6))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q7))
           ((move v14 v15 #t23 #q9))
           ((move v14 v15 #t28 #q12))
           ((move v14 v15 #t32 #q13))
           ((move v14 v15 #t33 #q14))
           ((calibrate v12 #q0 #y0 v17 v10))
           ((calibrate v14 #q13 #y4 v17 v10))
           ((calibrate v14 #q14 #y5 v18 v10))
           ((take_image v12 #q0 #y0 v17 v10 v11))
           ((take_image v14 #q13 #y4 v17 v10 v11))
           ((take_image v14 #q14 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y3 v9 v4))
           ((send_analysis v14 #q6 #y3 v9 v7))
           ((send_analysis v14 #q6 #y3 v9 v1))
           ((send_analysis v14 #q6 #y3 v9 v3))
           ((send_analysis v14 #q6 #y3 v9 v8))
           ((send_analysis v14 #q6 #y3 v9 v5))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q6 #y3 v9 v17 v11))
           ((send_image v14 #q6 #y3 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each with a camera (v10) and a store (v16). There are multiple rocks (v1, v3, v4, v5, v7, v8) of two types (v2, v6), and two objectives (v17, v18). There is also a lander (v9) for communication.
           
           The goal `new-axiom@0()` can be satisfied by various combinations of conditions. Looking at the provided axioms, a common way to satisfy it is by having both rovers at some configurations, having free storage, receiving images of both objectives (v17, v18), and analyzing rocks of both types (v2, v6).
           
           Let's break down how to achieve these subgoals.
           
           1.  **Received images:** We need `receivedimage(v17, v11)` and `receivedimage(v18, v11)`.
               *   To get `receivedimage(v17, v11)`:
                   *   Rover v12 can take an image of v17 at #q0. This requires calibrating v10 at #q0, which is imagevisible.
                   *   Rover v14 can take an image of v17 at #q13. This requires calibrating v10 at #q13, which is imagevisible.
                   *   After taking the image, the rover needs to move to a configuration where it can communicate with the lander v9 (e.g., #q2 for v12, #q6 for v14) and send the image.
               *   To get `receivedimage(v18, v11)`:
                   *   Rover v14 can take an image of v18 at #q14. This requires calibrating v10 at #q14, which is imagevisible.
                   *   After taking the image, the rover needs to move to a communication configuration and send the image.
           
           2.  **Received analysis:** We need `receivedanalysis(?stone)` (type v2) and `receivedanalysis(?soil)` (type v6).
               *   To get `receivedanalysis` for a rock of type v2 (e.g., v3 or v4):
                   *   A rover needs to be `above` the rock, `sample_rock`, and then `send_analysis` from a communication configuration.
               *   To get `receivedanalysis` for a rock of type v6 (e.g., v5 or v7 or v8):
                   *   A rover needs to be `above` the rock, `sample_rock`, and then `send_analysis` from a communication configuration.
           
           Both rovers (v12 and v14) start at their home configurations (v13 and v15 respectively) and have free stores (v16).
           
           Let's plan for rover v14:
           *   Calibrate camera v10 at #q13 to take image of v17.
           *   Take image of v17 with camera v10.
           *   Move to #q6 to send image of v17.
           *   Send image of v17.
           *   Calibrate camera v10 at #q14 to take image of v18.
           *   Take image of v18 with camera v10.
           *   Move to #q6 to send image of v18.
           *   Send image of v18.
           *   Move to #q12 to sample rock v4 (type v2).
           *   Sample rock v4.
           *   Move to #q6 to send analysis of v4.
           *   Send analysis of v4.
           *   Move to #q7 to sample rock v8 (type v6).
           *   Sample rock v8.
           *   Move to #q6 to send analysis of v8.
           *   Send analysis of v8.
           
           This plan uses rover v14 to achieve all the analysis goals and image goals. Rover v12 can remain at its initial configuration.
           
           --Plan--:
           (calibrate v14 #q13 #y4 v17 v10)
           (take_image v14 #q13 #y4 v17 v10 v11)
           (move v14 #q13 #t29 #q6)
           (send_image v14 #q6 #y3 v9 v17 v11)
           (calibrate v14 #q14 #y5 v18 v10)
           (take_image v14 #q14 #y5 v18 v10 v11)
           (send_image v14 #q6 #y3 v9 v18 v11)
           (move v14 #q6 #t21 #q12)
           (sample_rock v14 #q12 v4 v16)
           (move v14 #q12 #t22 #q6)
           (send_analysis v14 #q6 #y3 v9 v4)
           (move v14 #q6 #t7 #q7)
           (sample_rock v14 #q7 v8 v16)
           (send_analysis v14 #q6 #y3 v9 v8)

User:      The plan you provided contains the following invalid actions: `(move v14 #q6 #t7 #q7)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #q1 v7 v16))
           ((sample_rock v12 #q10 v5 v16))
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q4 v4 v16))
           ((sample_rock v12 #q5 v1 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v14 #q12 v4 v16))
           ((sample_rock v14 #q15 v7 v16))
           ((sample_rock v14 #q16 v1 v16))
           ((sample_rock v14 #q17 v3 v16))
           ((sample_rock v14 #q7 v8 v16))
           ((sample_rock v14 #q9 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t1 #q2))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q8))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q4))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t18 #q2))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q8))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t47 #q2))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #t17 #q10))
           ((move v12 #q2 #t19 #q5))
           ((move v12 #q2 #t20 #q8))
           ((move v12 #q2 #t4 #q1))
           ((move v12 #q2 #t40 #q0))
           ((move v12 #q2 #t43 #q11))
           ((move v12 #q2 #t5 #q4))
           ((move v12 #q2 #t6 v13))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q10))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t15 #q2))
           ((move v12 #q4 #t30 #q1))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q10))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t8 #q2))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q1))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q11))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t9 #q2))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t10 #q5))
           ((move v12 v13 #t11 #q8))
           ((move v12 v13 #t2 #q0))
           ((move v12 v13 #t31 #q4))
           ((move v12 v13 #t38 #q1))
           ((move v12 v13 #t46 #q10))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q17))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 #q9))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t22 #q6))
           ((move v14 #q12 #t35 #q15))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q15))
           ((move v14 #q13 #o2 #q16))
           ((move v14 #q13 #o2 #q17))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 #q9))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t29 #q6))
           ((move v14 #q13 #t37 #q14))
           ((move v14 #q14 #o2 #q12))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q17))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 #q9))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t36 #q6))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q14))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q17))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 #q9))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t34 #q6))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q15))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q17))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 #q9))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t44 #q6))
           ((move v14 #q17 #o2 #q12))
           ((move v14 #q17 #o2 #q13))
           ((move v14 #q17 #o2 #q14))
           ((move v14 #q17 #o2 #q15))
           ((move v14 #q17 #o2 #q16))
           ((move v14 #q17 #o2 #q17))
           ((move v14 #q17 #o2 #q7))
           ((move v14 #q17 #o2 #q9))
           ((move v14 #q17 #o2 v15))
           ((move v14 #q17 #t45 #q6))
           ((move v14 #q6 #o2 #q13))
           ((move v14 #q6 #o2 #q17))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #t14 v15))
           ((move v14 #q6 #t21 #q12))
           ((move v14 #q6 #t27 #q9))
           ((move v14 #q6 #t39 #q14))
           ((move v14 #q6 #t41 #q15))
           ((move v14 #q6 #t42 #q16))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q17))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t7 #q6))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q14))
           ((move v14 #q9 #o2 #q15))
           ((move v14 #q9 #o2 #q16))
           ((move v14 #q9 #o2 #q17))
           ((move v14 #q9 #o2 #q7))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t26 #q6))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q16))
           ((move v14 v15 #o2 #q17))
           ((move v14 v15 #o2 #q6))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t12 #q7))
           ((move v14 v15 #t23 #q9))
           ((move v14 v15 #t28 #q12))
           ((move v14 v15 #t32 #q13))
           ((move v14 v15 #t33 #q14))
           ((calibrate v12 #q0 #y0 v17 v10))
           ((calibrate v14 #q13 #y4 v17 v10))
           ((calibrate v14 #q14 #y5 v18 v10))
           ((take_image v12 #q0 #y0 v17 v10 v11))
           ((take_image v14 #q13 #y4 v17 v10 v11))
           ((take_image v14 #q14 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q6 #y3 v9 v4))
           ((send_analysis v14 #q6 #y3 v9 v7))
           ((send_analysis v14 #q6 #y3 v9 v1))
           ((send_analysis v14 #q6 #y3 v9 v3))
           ((send_analysis v14 #q6 #y3 v9 v8))
           ((send_analysis v14 #q6 #y3 v9 v5))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q6 #y3 v9 v17 v11))
           ((send_image v14 #q6 #y3 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The previous plan included an invalid move action. I will revise the plan for rover v14 to only use valid move actions, while still aiming to achieve the goal of taking images of v17 and v18 and analyzing rocks of type v2 and v6.
           
           Revised plan for rover v14:
           *   Calibrate camera v10 at #q13 to take image of v17.
           *   Take image of v17 with camera v10.
           *   Move from #q13 to #q6 (valid: `(move v14 #q13 #t29 #q6)`).
           *   Send image of v17.
           *   Calibrate camera v10 at #q14 to take image of v18. (It is currently at #q6, and needs to move to #q14, which is valid: `(move v14 #q6 #t39 #q14)`).
           *   Take image of v18 with camera v10.
           *   Move from #q14 to #q6 (valid: `(move v14 #q14 #t36 #q6)`).
           *   Send image of v18.
           *   Move from #q6 to #q12 to sample rock v4 (type v2). (valid: `(move v14 #q6 #t21 #q12)`).
           *   Sample rock v4.
           *   Move from #q12 to #q6 to send analysis of v4. (valid: `(move v14 #q12 #t22 #q6)`).
           *   Send analysis of v4.
           *   Now to sample rock v8 (type v6). Move from #q6 to #q7 (valid: `(move v14 #q6 #o2 #q7)`).
           *   Sample rock v8.
           *   Move from #q7 to #q6 to send analysis of v8 (valid: `(move v14 #q7 #t7 #q6)`).
           *   Send analysis of v8.
           
           --Plan--:
           (calibrate v14 #q13 #y4 v17 v10)
           (take_image v14 #q13 #y4 v17 v10 v11)
           (move v14 #q13 #t29 #q6)
           (send_image v14 #q6 #y3 v9 v17 v11)
           (move v14 #q6 #t39 #q14)
           (calibrate v14 #q14 #y5 v18 v10)
           (take_image v14 #q14 #y5 v18 v10 v11)
           (move v14 #q14 #t36 #q6)
           (send_image v14 #q6 #y3 v9 v18 v11)
           (move v14 #q6 #t21 #q12)
           (sample_rock v14 #q12 v4 v16)
           (move v14 #q12 #t22 #q6)
           (send_analysis v14 #q6 #y3 v9 v4)
           (move v14 #q6 #o2 #q7)
           (sample_rock v14 #q7 v8 v16)
           (move v14 #q7 #t7 #q6)
           (send_analysis v14 #q6 #y3 v9 v8)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The plan previously failed because the final goal `new-axiom@0()` was not satisfied. This axiom requires multiple conditions to be met, including having both rovers at some configurations, having free storage, receiving images of two different objectives, and receiving analysis for two different types of rocks (type v2, 'stone', and type v6, 'soil').
           
           My previous plan successfully gathered images for v17 and v18, and analyzed rocks v4 (type v2) and v8 (type v6). Let's re-verify the conditions for `new-axiom@0()`:
           *   `atconf(v12, v13)`: Rover v12 starts at v13 and we don't move it. So this should be true.
           *   `atconf(v14, v15)`: Rover v14 *does* move. The final state of v14 needs to be considered. After the last action, v14 is at #q6. So this condition would be false. This is a critical oversight.
           *   `free(v12, v16)`: Rover v12's store v16 is free, and we don't use it.
           *   `free(v14, v16)`: Rover v14's store v16 starts free, then becomes full (after `sample_rock v14 #q12 v4 v16`), and then becomes full again (after `sample_rock v14 #q7 v8 v16`). It never gets dropped. Thus, it will not be `free(v14, v16)` at the end. This is another critical oversight.
           *   `receivedimage(v17, v11)`: Achieved.
           *   `receivedimage(v18, v11)`: Achieved.
           *   `type(?stone, v2)`: This is implicit as v4 is type v2.
           *   `receivedanalysis(?stone)`: Achieved for v4.
           *   `type(?soil, v6)`: This is implicit as v8 is type v6.
           *   `receivedanalysis(?soil)`: Achieved for v8.
           
           To fix this, I need to ensure:
           1.  Rover v14 returns to `v15` at the end of the plan *or* `atconf(v14, #q6)` satisfies `new-axiom@0()` (but the axiom states `atconf(v14, v15)` specifically). The axiom given as `new-axiom@0()` is a simplification and the `v15` for v14 is specific. So, v14 *must* end at v15.
           2.  Rover v14's store v16 must be `free(v14, v16)` at the end. This means after sampling two rocks, it must `drop_rock` at least once.
           
           Let's adjust the plan to address these issues. I will have rover v14 drop the rocks it sampled, and ensure it returns to `v15`.
           
           Revised plan for rover v14:
           *   Calibrate camera v10 at #q13 to take image of v17.
           *   Take image of v17 with camera v10.
           *   Move from #q13 to #q6 (valid: `(move v14 #q13 #t29 #q6)`).
           *   Send image of v17.
           *   Move from #q6 to #q14 to calibrate for v18 (valid: `(move v14 #q6 #t39 #q14)`).
           *   Calibrate camera v10 at #q14 to take image of v18.
           *   Take image of v18 with camera v10.
           *   Move from #q14 to #q6 to send image of v18 (valid: `(move v14 #q14 #t36 #q6)`).
           *   Send image of v18.
           *   Move from #q6 to #q12 to sample rock v4 (type v2). (valid: `(move v14 #q6 #t21 #q12)`).
           *   Sample rock v4. Store v16 is now full.
           *   Move from #q12 to #q6 to send analysis of v4. (valid: `(move v14 #q12 #t22 #q6)`).
           *   Send analysis of v4.
           *   **Drop rock** from v14's store v16 to make it free again. (valid: `(drop_rock v14 v16)`). Store v16 is now free.
           *   Move from #q6 to #q7 to sample rock v8 (type v6). (valid: `(move v14 #q6 #o2 #q7)`).
           *   Sample rock v8. Store v16 is now full again.
           *   Move from #q7 to #q6 to send analysis of v8 (valid: `(move v14 #q7 #t7 #q6)`).
           *   Send analysis of v8.
           *   **Drop rock** from v14's store v16 to make it free again. (valid: `(drop_rock v14 v16)`). Store v16 is now free.
           *   Move from #q6 back to v15 (valid: `(move v14 #q6 #t14 v15)`).
           
           --Plan--:
           (calibrate v14 #q13 #y4 v17 v10)
           (take_image v14 #q13 #y4 v17 v10 v11)
           (move v14 #q13 #t29 #q6)
           (send_image v14 #q6 #y3 v9 v17 v11)
           (move v14 #q6 #t39 #q14)
           (calibrate v14 #q14 #y5 v18 v10)
           (take_image v14 #q14 #y5 v18 v10 v11)
           (move v14 #q14 #t36 #q6)
           (send_image v14 #q6 #y3 v9 v18 v11)
           (move v14 #q6 #t21 #q12)
           (sample_rock v14 #q12 v4 v16)
           (move v14 #q12 #t22 #q6)
           (send_analysis v14 #q6 #y3 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q6 #o2 #q7)
           (sample_rock v14 #q7 v8 v16)
           (move v14 #q7 #t7 #q6)
           (send_analysis v14 #q6 #y3 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q6 #t14 v15)

User:      The plan you provided is not valid because: `Precondition fact ('atconf', v14, #q13) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies, I made a mistake in assuming the rover's position after taking an image. The rover `v14` starts at `v15`. The first action `(calibrate v14 #q13 #y4 v17 v10)` requires `atconf(v14, #q13)`, but the rover is at `v15`. Therefore, I need to add a `move` action to get `v14` from `v15` to `#q13` before attempting to calibrate.
           
           Let's revise the plan again, starting with the correct initial move for rover `v14`.
           
           Revised plan for rover v14:
           *   **Move** from `v15` to `#q13` (valid: `(move v14 v15 #t32 #q13)`).
           *   Calibrate camera v10 at #q13 to take image of v17.
           *   Take image of v17 with camera v10.
           *   Move from #q13 to #q6 (valid: `(move v14 #q13 #t29 #q6)`).
           *   Send image of v17.
           *   Move from #q6 to #q14 to calibrate for v18 (valid: `(move v14 #q6 #t39 #q14)`).
           *   Calibrate camera v10 at #q14 to take image of v18.
           *   Take image of v18 with camera v10.
           *   Move from #q14 to #q6 to send image of v18 (valid: `(move v14 #q14 #t36 #q6)`).
           *   Send image of v18.
           *   Move from #q6 to #q12 to sample rock v4 (type v2). (valid: `(move v14 #q6 #t21 #q12)`).
           *   Sample rock v4. Store v16 is now full.
           *   Move from #q12 to #q6 to send analysis of v4. (valid: `(move v14 #q12 #t22 #q6)`).
           *   Send analysis of v4.
           *   **Drop rock** from v14's store v16 to make it free again. (valid: `(drop_rock v14 v16)`). Store v16 is now free.
           *   Move from #q6 to #q7 to sample rock v8 (type v6). (valid: `(move v14 #q6 #o2 #q7)`).
           *   Sample rock v8. Store v16 is now full again.
           *   Move from #q7 to #q6 to send analysis of v8 (valid: `(move v14 #q7 #t7 #q6)`).
           *   Send analysis of v8.
           *   **Drop rock** from v14's store v16 to make it free again. (valid: `(drop_rock v14 v16)`). Store v16 is now free.
           *   Move from #q6 back to v15 (valid: `(move v14 #q6 #t14 v15)`).
           
           This plan should address all identified issues and satisfy the goal `new-axiom@0()`.
           
           --Plan--:
           (move v14 v15 #t32 #q13)
           (calibrate v14 #q13 #y4 v17 v10)
           (take_image v14 #q13 #y4 v17 v10 v11)
           (move v14 #q13 #t29 #q6)
           (send_image v14 #q6 #y3 v9 v17 v11)
           (move v14 #q6 #t39 #q14)
           (calibrate v14 #q14 #y5 v18 v10)
           (take_image v14 #q14 #y5 v18 v10 v11)
           (move v14 #q14 #t36 #q6)
           (send_image v14 #q6 #y3 v9 v18 v11)
           (move v14 #q6 #t21 #q12)
           (sample_rock v14 #q12 v4 v16)
           (move v14 #q12 #t22 #q6)
           (send_analysis v14 #q6 #y3 v9 v4)
           (drop_rock v14 v16)
           (move v14 #q6 #o2 #q7)
           (sample_rock v14 #q7 v8 v16)
           (move v14 #q7 #t7 #q6)
           (send_analysis v14 #q6 #y3 v9 v8)
           (drop_rock v14 v16)
           (move v14 #q6 #t14 v15)

