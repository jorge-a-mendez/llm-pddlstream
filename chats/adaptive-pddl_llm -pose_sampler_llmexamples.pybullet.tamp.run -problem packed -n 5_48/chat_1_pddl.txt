User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v18, v19, v11)
           Atom atpose(v14, v15)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom stackable(v14, v20)
           Atom handempty(v4)
           Atom handempty(v6)
           Atom stackable(v18, v20)
           Atom pose(v8, v9)
           Atom aconf(v4, v5)
           Atom stackable(v14, v10)
           Atom ataconf(v4, v5)
           Atom graspable(v18)
           Atom pose(v16, v17)
           Atom atpose(v8, v9)
           Atom graspable(v16)
           Atom stackable(v8, v20)
           Atom stackable(v16, v20)
           Atom supported(v14, v15, v11)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom graspable(v8)
           Atom arm(v4)
           Atom stackable(v12, v10)
           Atom ataconf(v6, v7)
           Atom atpose(v16, v17)
           Atom pose(v18, v19)
           Atom atbconf(v3)
           Atom stackable(v18, v10)
           Atom canmove()
           Atom aconf(v6, v7)
           Atom stackable(v12, v20)
           Atom controllable(v4)
           Atom bconf(v3)
           Atom arm(v6)
           Atom stackable(v8, v10)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom pose(v14, v15)
           Atom atpose(v18, v19)
           Atom supported(v8, v9, v11)
           Atom grasp(v12, #o1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v20)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v20)
           Atom supported(v14, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #o1)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom grasp(v14, #o1)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom supported(v18, #o2, v20)
           Atom supported(v16, #o2, v20)
           Atom supported(v8, #o2, v20)
           Atom grasp(v16, #o1)
           Atom grasp(v18, #o1)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, v13, #o1, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v18, v19, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, #o2, #o1, #o3, #o4)
           Atom kin(v4, v16, v17, #o1, #o3, #o4)
           Atom kin(v4, v18, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, #o2, #o1, #o3, #o4)
           Atom kin(v4, v14, v15, #o1, #o3, #o4)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base v3 v3 #o0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a PR2 robot with two arms, `v4` and `v6`, and several objects: `v8`, `v12`, `v14`, `v16`, `v18`. These objects are all `graspable` and `stackable` on `v10` and `v20`. Currently, all the objects `v8`, `v12`, `v14`, `v16`, `v18` are supported by and `atpose` on `v11`. The robot is at `atbconf v3` and both arms `v4` and `v6` are `handempty`. The goal is to move all these five objects from `v11` to `v20`. Since `v11` is not a sink or stove, there are no cleaning or cooking tasks involved. The only available `move_base` action instance doesn't change the robot's base configuration, so all pick and place actions must be executable from the current base configuration `v3`.
           
           The initial state indicates that all objects `v8`, `v12`, `v14`, `v16`, `v18` are currently on `v11` because they are `supported` by `v11` at their current `pose` and `atpose` is true for each of them. The goal is to have all these objects `on v20`. This means for each object `o` in `v8`, `v12`, `v14`, `v16`, `v18`, we need to achieve `supported(o, p, v20)` and `atpose(o, p)` for some pose `p`. This requires picking each object from its current location on `v11` and placing it onto `v20`.
           
           Looking at the available `kin` facts, arm `v4` can interact with all the target objects. There are no `kin` facts for arm `v6`, so we can only use arm `v4`.
           
           Since we need to move 5 objects, and the robot has two hands but only `v4` can interact with objects, it will involve a sequence of pick and place actions for each object. Each pick action will remove the object from its current pose on `v11`, and each place action will put it on a new pose on `v20`.
           
           However, the provided list of allowed action instances only contains one `move_base` action: `(move_base v3 v3 #o0)`. This implies that no `pick` or `place` actions are available from the given allowed action instances. Without `pick` and `place` actions, it is impossible to move the objects from `v11` to `v20`. Therefore, the goal is unachievable.

