User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #g4: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q2: object
           #q3: object
           #q5: object
           #q9: object
           #t0: object
           #t12: object
           #t18: object
           #t2: object
           #t3: object
           #t5: object
           #t6: object
           #t8: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v24: object
           v25: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom supported(v18, v19, v11)
           Atom atpose(v14, v15)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom ~test-cfree-pose-pose-negative(v8, v25, v14, v22)
           Atom stackable(v14, v20)
           Atom handempty(v4)
           Atom handempty(v6)
           Atom stackable(v18, v20)
           Atom pose(v8, v9)
           Atom aconf(v4, v5)
           Atom stackable(v14, v10)
           Atom ataconf(v4, v5)
           Atom graspable(v18)
           Atom pose(v16, v17)
           Atom atpose(v8, v9)
           Atom graspable(v16)
           Atom stackable(v8, v20)
           Atom stackable(v16, v20)
           Atom supported(v14, v15, v11)
           Atom stackable(v16, v10)
           Atom supported(v16, v17, v11)
           Atom graspable(v8)
           Atom arm(v4)
           Atom stackable(v12, v10)
           Atom ataconf(v6, v7)
           Atom atpose(v16, v17)
           Atom pose(v18, v19)
           Atom atbconf(v3)
           Atom stackable(v18, v10)
           Atom canmove()
           Atom aconf(v6, v7)
           Atom stackable(v12, v20)
           Atom controllable(v4)
           Atom bconf(v3)
           Atom arm(v6)
           Atom stackable(v8, v10)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom pose(v14, v15)
           Atom atpose(v18, v19)
           Atom supported(v8, v9, v11)
           Atom pose(v14, v22)
           Atom supported(v14, v22, v20)
           Atom grasp(v12, #g3)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, v23)
           Atom supported(v12, v23, v20)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #g1)
           Atom pose(v18, #o2)
           Atom supported(v18, #o2, v10)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom grasp(v14, #g4)
           Atom pose(v18, v24)
           Atom supported(v18, v24, v20)
           Atom pose(v16, v21)
           Atom supported(v16, v21, v20)
           Atom pose(v8, v25)
           Atom supported(v8, v25, v20)
           Atom grasp(v16, #g2)
           Atom grasp(v18, #g0)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v8, v9, #g1, #q2, #t2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v25, #g1, #o3, #o4)
           Atom bconf(#q5)
           Atom atraj(#t8)
           Atom kin(v4, v12, v13, #g3, #q5, #t8)
           Atom kin(v4, v12, v23, #g3, #o3, #o4)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v16, v17, #g2, #q3, #t6)
           Atom kin(v4, v16, v21, #g2, #o3, #o4)
           Atom kin(v4, v14, v22, #g4, #o3, #o4)
           Atom bconf(#q9)
           Atom atraj(#t12)
           Atom kin(v4, v14, v15, #g4, #q9, #t12)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v18, v19, #g0, #q0, #t0)
           Atom kin(v4, v18, v24, #g0, #o3, #o4)
           Atom basemotion(#q9, #o0, v3)
           Atom basemotion(v3, #o0, #q9)
           Atom basemotion(#q9, #o0, #q9)
           Atom basemotion(#q0, #o0, #q9)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q0)
           Atom basemotion(#q9, #o0, #q0)
           Atom basemotion(#q9, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q9)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(v3, #o0, #q3)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q9, #o0, #q5)
           Atom basemotion(#q5, #o0, #q9)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q3, #o0, #q5)
           Atom btraj(#t18)
           Atom basemotion(v3, #t18, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q9)
           Atom basemotion(#q9, #o0, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q5, #o0, #q2)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q2)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g4, #o3, #o4)
           Atom kin(v4, v18, #o2, #g0, #o3, #o4)
           Atom kin(v4, v16, #o2, #g2, #o3, #o4)
           Atom kin(v4, v12, #o2, #g3, #o3, #o4)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q9)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q9, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q2, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v20)
               Atom on(v12, v20)
               Atom on(v14, v20)
               Atom on(v16, v20)
               Atom on(v18, v20)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q9 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q9 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q9 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q9 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q9 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q9 #o3 #o0))
           ((move_base #q9 #q0 #o0))
           ((move_base #q9 #q2 #o0))
           ((move_base #q9 #q3 #o0))
           ((move_base #q9 #q5 #o0))
           ((move_base #q9 #q9 #o0))
           ((move_base #q9 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q3 #o0))
           ((move_base v3 #q9 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q5 #t18))
           ((move_base v3 #q0 #t3))
           ((move_base v3 #q2 #t5))
           ((pick v4 v12 #o2 #g3 #o3 #o4))
           ((place v4 v12 #o2 #g3 #o3 #o4))
           ((pick v4 v12 v13 #g3 #q5 #t8))
           ((place v4 v12 v13 #g3 #q5 #t8))
           ((pick v4 v12 v23 #g3 #o3 #o4))
           ((place v4 v12 v23 #g3 #o3 #o4))
           ((pick v4 v14 #o2 #g4 #o3 #o4))
           ((place v4 v14 #o2 #g4 #o3 #o4))
           ((pick v4 v14 v15 #g4 #q9 #t12))
           ((place v4 v14 v15 #g4 #q9 #t12))
           ((pick v4 v14 v22 #g4 #o3 #o4))
           ((place v4 v14 v22 #g4 #o3 #o4))
           ((pick v4 v16 #o2 #g2 #o3 #o4))
           ((place v4 v16 #o2 #g2 #o3 #o4))
           ((pick v4 v16 v17 #g2 #q3 #t6))
           ((place v4 v16 v17 #g2 #q3 #t6))
           ((pick v4 v16 v21 #g2 #o3 #o4))
           ((place v4 v16 v21 #g2 #o3 #o4))
           ((pick v4 v18 #o2 #g0 #o3 #o4))
           ((place v4 v18 #o2 #g0 #o3 #o4))
           ((pick v4 v18 v19 #g0 #q0 #t0))
           ((place v4 v18 v19 #g0 #q0 #t0))
           ((pick v4 v18 v24 #g0 #o3 #o4))
           ((place v4 v18 v24 #g0 #o3 #o4))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 v25 #g1 #o3 #o4))
           ((place v4 v8 v25 #g1 #o3 #o4))
           ((pick v4 v8 v9 #g1 #q2 #t2))
           ((place v4 v8 v9 #g1 #q2 #t2))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes several graspable objects (v8, v12, v14, v16, v18) currently supported by v11. The goal is to move all these objects onto v20. The robot has two arms, v4 and v6, both are initially empty. The robot is at base configuration v3.
           
           The plan will involve picking up each object from its current pose on v11 and placing it onto a new pose on v20.
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v8 v9 #g1 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v8 v25 #g1 #o3 #o4)
           (move_base #o3 #q5 #o0)
           (pick v4 v12 v23 #g3 #o3 #o4)
           (place v4 v12 v23 #g3 #o3 #o4)
           (move_base #q5 #q9 #o0)
           (pick v4 v14 v15 #g4 #q9 #t12)
           (move_base #q9 #o3 #o0)
           (place v4 v14 v22 #g4 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v16 v21 #g2 #o3 #o4)
           (place v4 v16 v21 #g2 #o3 #o4)
           (move_base #q3 #q0 #o0)
           (pick v4 v18 v19 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v18 v24 #g0 #o3 #o4)

User:      The plan you provided is not valid because: `Precondition fact ('atpose', v12, v23) is not satisfied!`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The scene describes several graspable objects (v8, v12, v14, v16, v18) currently supported by v11. The goal is to move all these objects onto v20. The robot has two arms, v4 and v6, both are initially empty. The robot is at base configuration v3.
           
           The previous plan failed because `atpose(v12, v23)` was not true when trying to pick it. `v12` is initially at `v13`. We need to use the correct initial pose for picking each object and the new pose for placing it on `v20`. The new poses for objects on `v20` are usually denoted by their `_pose_on_v20` counterparts, which can be found in the `supported` facts.
           
           Let's re-examine the `atpose` facts and `supported` facts for each object:
           *   `v8`: `atpose(v8, v9)` initially. Can be placed at `v25` on `v20`.
           *   `v12`: `atpose(v12, v13)` initially. Can be placed at `v23` on `v20`.
           *   `v14`: `atpose(v14, v15)` initially. Can be placed at `v22` on `v20`.
           *   `v16`: `atpose(v16, v17)` initially. Can be placed at `v21` on `v20`.
           *   `v18`: `atpose(v18, v19)` initially. Can be placed at `v24` on `v20`.
           
           The plan will now use these correct poses for picking and placing.
           
           --Plan--:
           (move_base v3 #q2 #t5)
           (pick v4 v8 v9 #g1 #q2 #t2)
           (move_base #q2 #o3 #o0)
           (place v4 v8 v25 #g1 #o3 #o4)
           (move_base #o3 #q5 #o0)
           (pick v4 v12 v13 #g3 #q5 #t8)
           (move_base #q5 #o3 #o0)
           (place v4 v12 v23 #g3 #o3 #o4)
           (move_base #o3 #q9 #o0)
           (pick v4 v14 v15 #g4 #q9 #t12)
           (move_base #q9 #o3 #o0)
           (place v4 v14 v22 #g4 #o3 #o4)
           (move_base #o3 #q3 #o0)
           (pick v4 v16 v17 #g2 #q3 #t6)
           (move_base #q3 #o3 #o0)
           (place v4 v16 v21 #g2 #o3 #o4)
           (move_base #o3 #q0 #o0)
           (pick v4 v18 v19 #g0 #q0 #t0)
           (move_base #q0 #o3 #o0)
           (place v4 v18 v24 #g0 #o3 #o4)

