User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p4: object
           p5: object
           p6: object
           p7: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v13 is a pose with position (0.073, -0.372, 0.781) and quaternion (0.0, 0.0, -0.572, 0.82).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object p4 is a pose with position (0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (-0.05, 0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p6 is a pose with position (0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, 0.015), (0.085, 0.085)).
           Object p7 is a pose with position (-0.05, -0.05, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, -0.085), (-0.015, -0.015)).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.015, -0.085), (0.085, -0.015)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.085, 0.015), (-0.015, 0.085)).
           Object v9 is a pose with position (-0.165, -0.433, 0.781) and quaternion (0.0, 0.0, 0.999, 0.036).
           Object v17 is a pose with position (-0.243, -0.238, 0.781) and quaternion (0.0, 0.0, 0.962, 0.273).
           Object v15 is a pose with position (0.21, 0.272, 0.781) and quaternion (0.0, 0.0, -0.573, 0.82).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v14, v18)
           Atom stackable(v12, v18)
           Atom pose(v14, v15)
           Atom graspable(v16)
           Atom kin(v31, v36, p5, v33, v34, v35)
           Atom kin(v31, v37, p6, v33, v34, v35)
           Atom graspable(v8)
           Atom supported(v16, p7, v18)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom stackable(v12, v10)
           Atom stackable(v14, v10)
           Atom stackable(v16, v10)
           Atom kin(v31, v32, p4, v33, v34, v35)
           Atom handempty(v6)
           Atom pose(v16, p7)
           Atom supported(v8, p4, v18)
           Atom aconf(v6, v7)
           Atom atpose(v8, v9)
           Atom kin(v31, v38, p7, v33, v34, v35)
           Atom graspable(v14)
           Atom pose(v14, p6)
           Atom supported(v12, p5, v18)
           Atom atpose(v14, v15)
           Atom supported(v14, v15, v11)
           Atom ataconf(v6, v7)
           Atom controllable(v4)
           Atom ataconf(v4, v5)
           Atom pose(v12, p5)
           Atom atbconf(v3)
           Atom arm(v6)
           Atom atpose(v16, v17)
           Atom arm(v4)
           Atom supported(v14, p6, v18)
           Atom stackable(v8, v18)
           Atom graspable(v12)
           Atom supported(v8, v9, v11)
           Atom supported(v12, v13, v11)
           Atom pose(v8, p4)
           Atom supported(v16, v17, v11)
           Atom aconf(v4, v5)
           Atom stackable(v16, v18)
           Atom stackable(v8, v10)
           Atom atpose(v12, v13)
           Atom canmove()
           Atom pose(v16, v17)
           Atom handempty(v4)
           Atom bconf(v3)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom supported(v16, #o2, v18)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g1)
           Atom supported(v8, #o2, v18)
           Atom supported(v14, #o2, v18)
           Atom grasp(v16, #g0)
           Atom grasp(v14, #g2)
           Atom grasp(v8, #g3)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, v13, #g1, #q2, #t2)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v12, p5, #g1, #q3, #t3)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v16, p7, #g0, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v16, v17, #g0, #q0, #t0)
           Atom bconf(#q7)
           Atom atraj(#t11)
           Atom kin(v4, v14, v15, #g2, #q7, #t11)
           Atom bconf(#q4)
           Atom atraj(#t8)
           Atom kin(v4, v14, p6, #g2, #q4, #t8)
           Atom bconf(#q5)
           Atom atraj(#t9)
           Atom kin(v4, v8, v9, #g3, #q5, #t9)
           Atom bconf(#q6)
           Atom atraj(#t10)
           Atom kin(v4, v8, p4, #g3, #q6, #t10)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(v3, #o0, #q4)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(v3, #o0, #q7)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q4, #o0, #q7)
           Atom btraj(#t4)
           Atom basemotion(v3, #t4, #q0)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q7, #o0, #q0)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q7, #o0, #q1)
           Atom btraj(#t5)
           Atom basemotion(v3, #t5, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q3, #o0, #q7)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q3, #o0, #q3)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q0)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q2, #o0, #q7)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q6, #o0, #q4)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(v3, #o0, #q6)
           Atom basemotion(#q6, #o0, #q3)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q4, #o0, #q6)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q6, #o0, #q1)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q6, #o0, #q6)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(v3, #o0, #q5)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q5, #o0, #q7)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, #o2, #g3, #o3, #o4)
           Atom kin(v4, v14, #o2, #g2, #o3, #o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v16, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 #q7 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q6 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q3 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q1 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 #q4 #o0))
           ((move_base v3 #q5 #o0))
           ((move_base v3 #q6 #o0))
           ((move_base v3 #q7 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t4))
           ((move_base v3 #q1 #t5))
           ((move_base v3 #q2 #t6))
           ((move_base v3 #q3 #t7))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 p5 #g1 #q3 #t3))
           ((place v4 v12 p5 #g1 #q3 #t3))
           ((pick v4 v12 v13 #g1 #q2 #t2))
           ((place v4 v12 v13 #g1 #q2 #t2))
           ((pick v4 v14 #o2 #g2 #o3 #o4))
           ((place v4 v14 #o2 #g2 #o3 #o4))
           ((pick v4 v14 p6 #g2 #q4 #t8))
           ((place v4 v14 p6 #g2 #q4 #t8))
           ((pick v4 v14 v15 #g2 #q7 #t11))
           ((place v4 v14 v15 #g2 #q7 #t11))
           ((pick v4 v16 #o2 #g0 #o3 #o4))
           ((place v4 v16 #o2 #g0 #o3 #o4))
           ((pick v4 v16 p7 #g0 #q1 #t1))
           ((place v4 v16 p7 #g0 #q1 #t1))
           ((pick v4 v16 v17 #g0 #q0 #t0))
           ((place v4 v16 v17 #g0 #q0 #t0))
           ((pick v4 v8 #o2 #g3 #o3 #o4))
           ((place v4 v8 #o2 #g3 #o3 #o4))
           ((pick v4 v8 p4 #g3 #q6 #t10))
           ((place v4 v8 p4 #g3 #q6 #t10))
           ((pick v4 v8 v9 #g3 #q5 #t9))
           ((place v4 v8 v9 #g3 #q5 #t9))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Finalized Plan: Placing Objects on v18**
           
           Alright, let's craft a plan to move all four objects (v8, v12, v14, v16) onto object v18. Initially, they're all resting on v11. Our goal is to rearrange them such that: v8 is supported on v18 at pose p4, v12 is at p5, v14 is at p6, and v16 is at p7.
           
           Here's my thought process:
           
           1.  **Initial State:** We've got `atpose(v8, v9)`, `atpose(v12, v13)`, `atpose(v14, v15)`, and `atpose(v16, v17)`, all supported on v11.  The robot arm (v4) is empty, ready for action.
           
           2.  **Target State:** The goal requires the objects to be supported on v18 at specified poses (`p4`, `p5`, `p6`, and `p7`).
           
           3.  **Action Strategy:** I'll implement a straightforward pick-and-place strategy, prioritizing efficiency.  For each object, I'll:
               *   Move the robot base to the appropriate configuration for picking.
               *   Pick up the object using the available arm (v4).
               *   Move the robot base to the placing configuration.
               *   Place the object at its target pose on v18.
           
           4.  **Kinematic Considerations:** I need to leverage the provided kin information. Picking and placing involve specific base configurations, grasps, and arm trajectories, all associated with kinematic configurations.
           
           5.  **Detailed Plan:**
               *   **Move v8:**
                   1.  Move base to q5 (where pick trajectory t9 starts).  (`move_base v3 #q5 #o0`)
                   2.  Pick v8 from v9 (kinematic configuration #g3, #q5, #t9).  (`pick v4 v8 v9 #g3 #q5 #t9`)
                   3.  Move base to q6 (where place trajectory t10 starts).  (`move_base #q5 #q6 #o0`)
                   4.  Place v8 at p4 (kinematic configuration #g3, #q6, #t10).  (`place v4 v8 p4 #g3 #q6 #t10`)
               *   **Move v12:**
                   1.  Move base to q2 (where pick trajectory t2 starts).  (`move_base #q6 #q2 #o0`)
                   2.  Pick v12 from v13 (kinematic configuration #g1, #q2, #t2).  (`pick v4 v12 v13 #g1 #q2 #t2`)
                   3.  Move base to q3 (where place trajectory t3 starts).  (`move_base #q2 #q3 #o0`)
                   4.  Place v12 at p5 (kinematic configuration #g1, #q3, #t3).  (`place v4 v12 p5 #g1 #q3 #t3`)
               *   **Move v14:**
                   1.  Move base to q7 (where pick trajectory t11 starts).  (`move_base #q3 #q7 #o0`)
                   2.  Pick v14 from v15 (kinematic configuration #g2, #q7, #t11). (`pick v4 v14 v15 #g2 #q7 #t11`)
                   3.  Move base to q4 (where place trajectory t8 starts).  (`move_base #q7 #q4 #o0`)
                   4.  Place v14 at p6 (kinematic configuration #g2, #q4, #t8).  (`place v4 v14 p6 #g2 #q4 #t8`)
               *   **Move v16:**
                   1.  Move base to q0 (where pick trajectory t0 starts).  (`move_base #q4 #q0 #o0`)
                   2.  Pick v16 from v17 (kinematic configuration #g0, #q0, #t0).  (`pick v4 v16 v17 #g0 #q0 #t0`)
                   3.  Move base to q1 (where place trajectory t1 starts).  (`move_base #q0 #q1 #o0`)
                   4
)

Model:     **Finalized Plan: Placing Objects on v18**
           
           Alright, let's craft a plan to move all four objects (v8, v12, v14, v16) onto object v18. Initially, they're all resting on v11. Our goal is to rearrange them such that: v8 is supported on v18 at pose p4, v12 is at p5, v14 is at p6, and v16 is at p7.
           
           Here's my thought process:
           
           1.  **Initial State:** We've got `atpose(v8, v9)`, `atpose(v12, v13)`, `atpose(v14, v15)`, and `atpose(v16, v17)`, all supported on v11.  The robot arm (v4) is empty, ready for action.
           
           2.  **Target State:** The goal requires the objects to be supported on v18 at specified poses (`p4`, `p5`, `p6`, and `p7`).
           
           3.  **Action Strategy:** I'll implement a straightforward pick-and-place strategy, prioritizing efficiency.  For each object, I'll:
               *   Move the robot base to the appropriate configuration for picking.
               *   Pick up the object using the available arm (v4).
               *   Move the robot base to the placing configuration.
               *   Place the object at its target pose on v18.
           
           4.  **Kinematic Considerations:** I need to leverage the provided kin information. Picking and placing involve specific base configurations, grasps, and arm trajectories, all associated with kinematic configurations.
           
           5.  **Detailed Plan:**
               *   **Move v8:**
                   1.  Move base to q5 (where pick trajectory t9 starts).  (`move_base v3 #q5 #o0`)
                   2.  Pick v8 from v9 (kinematic configuration #g3, #q5, #t9).  (`pick v4 v8 v9 #g3 #q5 #t9`)
                   3.  Move base to q6 (where place trajectory t10 starts).  (`move_base #q5 #q6 #o0`)
                   4.  Place v8 at p4 (kinematic configuration #g3, #q6, #t10).  (`place v4 v8 p4 #g3 #q6 #t10`)
               *   **Move v12:**
                   1.  Move base to q2 (where pick trajectory t2 starts).  (`move_base #q6 #q2 #o0`)
                   2.  Pick v12 from v13 (kinematic configuration #g1, #q2, #t2).  (`pick v4 v12 v13 #g1 #q2 #t2`)
                   3.  Move base to q3 (where place trajectory t3 starts).  (`move_base #q2 #q3 #o0`)
                   4.  Place v12 at p5 (kinematic configuration #g1, #q3, #t3).  (`place v4 v12 p5 #g1 #q3 #t3`)
               *   **Move v14:**
                   1.  Move base to q7 (where pick trajectory t11 starts).  (`move_base #q3 #q7 #o0`)
                   2.  Pick v14 from v15 (kinematic configuration #g2, #q7, #t11). (`pick v4 v14 v15 #g2 #q7 #t11`)
                   3.  Move base to q4 (where place trajectory t8 starts).  (`move_base #q7 #q4 #o0`)
                   4.  Place v14 at p6 (kinematic configuration #g2, #q4, #t8).  (`place v4 v14 p6 #g2 #q4 #t8`)
               *   **Move v16:**
                   1.  Move base to q0 (where pick trajectory t0 starts).  (`move_base #q4 #q0 #o0`)
                   2.  Pick v16 from v17 (kinematic configuration #g0, #q0, #t0).  (`pick v4 v16 v17 #g0 #q0 #t0`)
                   3.  Move base to q1 (where place trajectory t1 starts).  (`move_base #q0 #q1 #o0`)
                   4

