User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t34: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rover(v14)
           Atom objective(v19)
           Atom atconf(v12, v13)
           Atom conf(v14, v15)
           Atom type(v1, v2)
           Atom onboard(v10, v14)
           Atom rock(v3)
           Atom type(v8, v6)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom free(v12, v16)
           Atom atconf(v14, v15)
           Atom onboard(v10, v12)
           Atom rover(v12)
           Atom rock(v8)
           Atom type(v3, v2)
           Atom mode(v11)
           Atom rock(v7)
           Atom lander(v9)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom objective(v20)
           Atom store(v16)
           Atom rock(v5)
           Atom type(v4, v2)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom type(v5, v6)
           Atom conf(v12, v13)
           Atom rock(v4)
           Atom camera(v10)
           Atom imagevisible(v12, #q0, #y0, v19)
           Atom imagerange(v12, #q0, v19)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q2, v4)
           Atom conf(v12, #q2)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q5, #y4, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y4)
           Atom above(v12, #q6, v5)
           Atom conf(v12, #q6)
           Atom imagevisible(v14, #q11, #y7, v19)
           Atom imagerange(v14, #q11, v19)
           Atom conf(v14, #q11)
           Atom ray(#y7)
           Atom imagevisible(v14, #q12, #y8, v17)
           Atom imagerange(v14, #q12, v17)
           Atom conf(v14, #q12)
           Atom ray(#y8)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #q8, v5)
           Atom conf(v14, #q8)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #q10, #y6, v20)
           Atom imagerange(v14, #q10, v20)
           Atom conf(v14, #q10)
           Atom ray(#y6)
           Atom imagevisible(v12, #q3, #y2, v20)
           Atom imagerange(v12, #q3, v20)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom above(v14, #o5, v1)
           Atom above(v12, #q14, v1)
           Atom conf(v12, #q14)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom imagevisible(v14, #q13, #y9, v18)
           Atom imagerange(v14, #q13, v18)
           Atom conf(v14, #q13)
           Atom ray(#y9)
           Atom comvisible(v14, #q9, #y5, v9)
           Atom comrange(v14, #q9, v9)
           Atom conf(v14, #q9)
           Atom ray(#y5)
           Atom comvisible(v12, #q1, #y1, v9)
           Atom comrange(v12, #q1, v9)
           Atom conf(v12, #q1)
           Atom ray(#y1)
           Atom above(v14, #o5, v7)
           Atom above(v12, #q16, v7)
           Atom conf(v12, #q16)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q7, v3)
           Atom conf(v12, #q7)
           Atom above(v14, #o5, v8)
           Atom above(v12, #q15, v8)
           Atom conf(v12, #q15)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #t5, #q0)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, v13, #t24, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q15, #o2, #q2)
           Atom motion(v12, #q0, #o2, #q15)
           Atom motion(v12, #q2, #o2, #q15)
           Atom motion(v12, #q15, #o2, v13)
           Atom motion(v12, v13, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q0)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, v15, #t26, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #t20, v15)
           Atom motion(v14, #q11, #t30, #q9)
           Atom motion(v14, #q9, #o2, #q11)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q15, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q0, #t33, #q5)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q15)
           Atom motion(v12, v13, #t8, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q15, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q15)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q4, #t17, #q5)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q5, #t34, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, v13, #t7, #q4)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v12, #q6, #t28, v13)
           Atom motion(v12, #q6, #o2, #q15)
           Atom motion(v12, #q6, #o2, #q4)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q15, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q4, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q11)
           Atom motion(v14, #q8, #t21, #q9)
           Atom motion(v14, #q11, #o2, #q8)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #t22, #q8)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q7, #o2, #q15)
           Atom motion(v12, #q15, #o2, #q7)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q7, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q2)
           Atom motion(v12, #q14, #o2, #q4)
           Atom motion(v12, #q14, #o2, #q0)
           Atom motion(v12, #q14, #o2, #q7)
           Atom motion(v12, v13, #o2, #q14)
           Atom motion(v12, #q5, #o2, #q14)
           Atom motion(v12, #q15, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q15)
           Atom motion(v12, #q14, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q14)
           Atom motion(v12, #q14, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q14)
           Atom motion(v12, #q6, #o2, #q14)
           Atom motion(v12, #q4, #o2, #q14)
           Atom motion(v12, #q14, #o2, v13)
           Atom motion(v12, #q14, #o2, #q14)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #t35, #q2)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q14, #o2, #q3)
           Atom motion(v12, #q4, #t36, #q3)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q15, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, v13, #t6, #q3)
           Atom motion(v12, #q0, #t16, #q3)
           Atom motion(v12, #q3, #t18, #q4)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q15)
           Atom motion(v12, #q3, #o2, #q14)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q9, #o2, #q10)
           Atom motion(v14, #q10, #o2, v15)
           Atom motion(v14, #q10, #o2, #q11)
           Atom motion(v14, #q10, #t29, #q9)
           Atom motion(v14, #q11, #o2, #q10)
           Atom motion(v14, v15, #t25, #q10)
           Atom motion(v14, #q8, #o2, #q10)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q9, #o2, #q13)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q13, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q13)
           Atom motion(v14, v15, #o2, #q13)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q10, #t42, #q13)
           Atom motion(v14, #q13, #t32, #q9)
           Atom motion(v14, #q13, #o2, #q10)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v12, #q1, #t38, #q14)
           Atom motion(v12, #q4, #t15, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q5, #t13, #q1)
           Atom motion(v12, #q1, #o2, #q0)
           Atom motion(v12, #q14, #t37, #q1)
           Atom motion(v12, #q1, #t11, #q3)
           Atom motion(v12, #q1, #t39, #q15)
           Atom motion(v12, #q2, #t1, #q1)
           Atom motion(v12, #q1, #t23, #q7)
           Atom motion(v12, #q1, #t10, #q4)
           Atom motion(v12, #q7, #t19, #q1)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, #q15, #o2, #q1)
           Atom motion(v12, #q1, #t14, #q6)
           Atom motion(v12, #q1, #t0, #q2)
           Atom motion(v12, #q1, #t9, #q5)
           Atom motion(v12, #q0, #t3, #q1)
           Atom motion(v12, #q3, #t4, #q1)
           Atom motion(v12, #q1, #t2, v13)
           Atom motion(v12, #q6, #t12, #q1)
           Atom motion(v12, #q16, #o2, #q15)
           Atom motion(v12, #q16, #o2, #q14)
           Atom motion(v12, #q16, #o2, #q2)
           Atom motion(v12, #q6, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q0)
           Atom motion(v12, #q16, #o2, #q1)
           Atom motion(v12, #q16, #o2, #q4)
           Atom motion(v12, #q14, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q16)
           Atom motion(v12, v13, #o2, #q16)
           Atom motion(v12, #q16, #o2, v13)
           Atom motion(v12, #q15, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q5)
           Atom motion(v12, #q7, #o2, #q16)
           Atom motion(v12, #q0, #o2, #q16)
           Atom motion(v12, #q1, #o2, #q16)
           Atom motion(v12, #q16, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q16)
           Atom motion(v12, #q5, #o2, #q16)
           Atom motion(v14, #q12, #t31, #q9)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, #q12, #o2, #q8)
           Atom motion(v14, #q12, #t41, #q10)
           Atom motion(v14, v15, #t27, #q12)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v14, #q10, #o2, #q12)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q9, #o2, #q12)
           Atom motion(v14, #q8, #o2, #q12)
           Atom motion(v14, #q11, #t40, #q12)
           Atom motion(v14, #q13, #o2, #q12)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q14 v1 v16))
           ((sample_rock v12 #q15 v8 v16))
           ((sample_rock v12 #q16 v7 v16))
           ((sample_rock v12 #q2 v4 v16))
           ((sample_rock v12 #q6 v5 v16))
           ((sample_rock v12 #q7 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q8 v5 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q14))
           ((move v12 #q0 #o2 #q15))
           ((move v12 #q0 #o2 #q16))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t16 #q3))
           ((move v12 #q0 #t3 #q1))
           ((move v12 #q0 #t33 #q5))
           ((move v12 #q1 #o2 #q0))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q16))
           ((move v12 #q1 #t0 #q2))
           ((move v12 #q1 #t10 #q4))
           ((move v12 #q1 #t11 #q3))
           ((move v12 #q1 #t14 #q6))
           ((move v12 #q1 #t2 v13))
           ((move v12 #q1 #t23 #q7))
           ((move v12 #q1 #t38 #q14))
           ((move v12 #q1 #t39 #q15))
           ((move v12 #q1 #t9 #q5))
           ((move v12 #q14 #o2 #q0))
           ((move v12 #q14 #o2 #q14))
           ((move v12 #q14 #o2 #q15))
           ((move v12 #q14 #o2 #q16))
           ((move v12 #q14 #o2 #q2))
           ((move v12 #q14 #o2 #q3))
           ((move v12 #q14 #o2 #q4))
           ((move v12 #q14 #o2 #q5))
           ((move v12 #q14 #o2 #q6))
           ((move v12 #q14 #o2 #q7))
           ((move v12 #q14 #o2 v13))
           ((move v12 #q14 #t37 #q1))
           ((move v12 #q15 #o2 #q0))
           ((move v12 #q15 #o2 #q1))
           ((move v12 #q15 #o2 #q14))
           ((move v12 #q15 #o2 #q15))
           ((move v12 #q15 #o2 #q16))
           ((move v12 #q15 #o2 #q2))
           ((move v12 #q15 #o2 #q3))
           ((move v12 #q15 #o2 #q4))
           ((move v12 #q15 #o2 #q5))
           ((move v12 #q15 #o2 #q6))
           ((move v12 #q15 #o2 #q7))
           ((move v12 #q15 #o2 v13))
           ((move v12 #q16 #o2 #q0))
           ((move v12 #q16 #o2 #q1))
           ((move v12 #q16 #o2 #q14))
           ((move v12 #q16 #o2 #q15))
           ((move v12 #q16 #o2 #q16))
           ((move v12 #q16 #o2 #q2))
           ((move v12 #q16 #o2 #q3))
           ((move v12 #q16 #o2 #q4))
           ((move v12 #q16 #o2 #q5))
           ((move v12 #q16 #o2 #q6))
           ((move v12 #q16 #o2 #q7))
           ((move v12 #q16 #o2 v13))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q14))
           ((move v12 #q2 #o2 #q15))
           ((move v12 #q2 #o2 #q16))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t1 #q1))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q14))
           ((move v12 #q3 #o2 #q15))
           ((move v12 #q3 #o2 #q16))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t18 #q4))
           ((move v12 #q3 #t35 #q2))
           ((move v12 #q3 #t4 #q1))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q14))
           ((move v12 #q4 #o2 #q15))
           ((move v12 #q4 #o2 #q16))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q6))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t15 #q1))
           ((move v12 #q4 #t17 #q5))
           ((move v12 #q4 #t36 #q3))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q14))
           ((move v12 #q5 #o2 #q15))
           ((move v12 #q5 #o2 #q16))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t13 #q1))
           ((move v12 #q5 #t34 #q4))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q14))
           ((move v12 #q6 #o2 #q15))
           ((move v12 #q6 #o2 #q16))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q4))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #t12 #q1))
           ((move v12 #q6 #t28 v13))
           ((move v12 #q7 #o2 #q0))
           ((move v12 #q7 #o2 #q14))
           ((move v12 #q7 #o2 #q15))
           ((move v12 #q7 #o2 #q16))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t19 #q1))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q14))
           ((move v12 v13 #o2 #q15))
           ((move v12 v13 #o2 #q16))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t24 #q2))
           ((move v12 v13 #t5 #q0))
           ((move v12 v13 #t6 #q3))
           ((move v12 v13 #t7 #q4))
           ((move v12 v13 #t8 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q11))
           ((move v14 #q10 #o2 #q12))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 v15))
           ((move v14 #q10 #t29 #q9))
           ((move v14 #q10 #t42 #q13))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q10))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q8))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t30 #q9))
           ((move v14 #q11 #t40 #q12))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q8))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t31 #q9))
           ((move v14 #q12 #t41 #q10))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q10))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q12))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q8))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t32 #q9))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q10))
           ((move v14 #q8 #o2 #q11))
           ((move v14 #q8 #o2 #q12))
           ((move v14 #q8 #o2 #q13))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t21 #q9))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q10))
           ((move v14 #q9 #o2 #q11))
           ((move v14 #q9 #o2 #q12))
           ((move v14 #q9 #o2 #q13))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #t20 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q13))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t22 #q8))
           ((move v14 v15 #t25 #q10))
           ((move v14 v15 #t26 #q11))
           ((move v14 v15 #t27 #q12))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q3 #y2 v20 v10))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v12 #q5 #y4 v17 v10))
           ((calibrate v14 #q10 #y6 v20 v10))
           ((calibrate v14 #q11 #y7 v19 v10))
           ((calibrate v14 #q12 #y8 v17 v10))
           ((calibrate v14 #q13 #y9 v18 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q3 #y2 v20 v10 v11))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v12 #q5 #y4 v17 v10 v11))
           ((take_image v14 #q10 #y6 v20 v10 v11))
           ((take_image v14 #q11 #y7 v19 v10 v11))
           ((take_image v14 #q12 #y8 v17 v10 v11))
           ((take_image v14 #q13 #y9 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q1 #y1 v9 v1))
           ((send_analysis v12 #q1 #y1 v9 v8))
           ((send_analysis v12 #q1 #y1 v9 v7))
           ((send_analysis v12 #q1 #y1 v9 v4))
           ((send_analysis v12 #q1 #y1 v9 v5))
           ((send_analysis v12 #q1 #y1 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q9 #y5 v9 v1))
           ((send_analysis v14 #q9 #y5 v9 v3))
           ((send_analysis v14 #q9 #y5 v9 v4))
           ((send_analysis v14 #q9 #y5 v9 v7))
           ((send_analysis v14 #q9 #y5 v9 v8))
           ((send_analysis v14 #q9 #y5 v9 v5))
           ((send_image v12 #q1 #y1 v9 v19 v11))
           ((send_image v12 #q1 #y1 v9 v20 v11))
           ((send_image v12 #q1 #y1 v9 v18 v11))
           ((send_image v12 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q9 #y5 v9 v20 v11))
           ((send_image v14 #q9 #y5 v9 v19 v11))
           ((send_image v14 #q9 #y5 v9 v17 v11))
           ((send_image v14 #q9 #y5 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, each equipped with a camera v10. There are several rock objectives (v1, v3, v4, v5, v7, v8) and imaging objectives (v17, v18, v19, v20). There's also a lander v9 to send data to. The rovers have internal storage v16.
           
           The goal `new-axiom@0()` represents several subgoals. Based on the definition of `new-axiom@0()`, the goal requires:
           1. `atconf(v12, v13)`: Rover v12 needs to be at configuration v13. It is already at this configuration.
           2. `atconf(v14, v15)`: Rover v14 needs to be at configuration v15. It is already at this configuration.
           3. `free(v12, v16)`: Rover v12's storage v16 needs to be free. It is currently free.
           4. `free(v14, v16)`: Rover v14's storage v16 needs to be free. It is currently free.
           5. `receivedimage(v17, v11)`: An image of objective v17 needs to be received with mode v11.
           6. `receivedimage(v18, v11)`: An image of objective v18 needs to be received with mode v11.
           7. `receivedimage(v19, v11)`: An image of objective v19 needs to be received with mode v11.
           8. `receivedimage(v20, v11)`: An image of objective v20 needs to be received with mode v11.
           9. `type(?stone, v2)` and `receivedanalysis(?stone)`: This means an analysis of any rock of type v2 (which are v1, v3, v4) needs to be received by the lander.
           10. `type(?soil, v6)` and `receivedanalysis(?soil)`: This means an analysis of any rock of type v6 (which are v5, v7, v8) needs to be received by the lander.
           
           Let's break down how to achieve these:
           
           *   **`atconf` and `free` conditions:** These are already met in the initial state.
           *   **`receivedimage` conditions:** For each objective (v17, v18, v19, v20) and mode v11:
               1.  The rover must be at a configuration where the objective is visible (`imagevisible`).
               2.  The camera (v10) must be calibrated with respect to the rover and the objective.
               3.  The rover must take an image (`take_image`).
               4.  The rover must send the image to the lander (`send_image`).
               Since rover v12 has `comvisible` at `#q1` and rover v14 has `comvisible` at `#q9`, we should use these configurations to send images to the lander. We need to calibrate before taking an image.
           *   **`receivedanalysis` conditions:** For rocks of type v2 (v1, v3, v4) and type v6 (v5, v7, v8):
               1.  The rover must be above the rock (`above`).
               2.  The rover must sample the rock (`sample_rock`). This will fill one of the rover's stores and mark the rock as `analyzed`.
               3.  The rover must send the analysis to the lander (`send_analysis`).
               4.  After sending the analysis, the sample can be dropped to free up storage for other samples (`drop_rock`).
           
           I will use rover v12 for the imaging tasks and one rock analysis, and rover v14 for another rock analysis, leveraging the fact that both rovers are initially at favorable configurations for some tasks and have communication visibility.
           
           **Detailed plan for image objectives:**
           For v19: Rover v12 at `#q0` can see v19.
           For v20: Rover v12 at `#q3` can see v20.
           For v18: Rover v12 at `#q4` can see v18.
           For v17: Rover v12 at `#q5` can see v17.
           
           Rover v12 has a communication configuration at `#q1`. We can calibrate, take image, move to `#q1` and send for each objective. Alternatively, calibrate and take all images, then move to `#q1` and send all images.
           
           **Detailed plan for rock objectives:**
           For type v2 (v1, v3, v4): Rover v12 is above v1 at `#q14`, v3 at `#q7`, v4 at `#q2`. Rover v14 is above v1, v3, v4 at `#o5`.
           For type v6 (v5, v7, v8): Rover v12 is above v5 at `#q6`, v7 at `#q16`, v8 at `#q15`. Rover v14 is above v5 at `#q8`, v7, v8 at `#o5`.
           
           I will choose to sample one rock of type v2 (v4) and one of type v6 (v5) using rover v12.
           Rover v12 is at v13 initially.
           To get rock analysis for type v2: sample v4 at #q2.
           To get rock analysis for type v6: sample v5 at #q6.
           Rover v12 has `comvisible` at `#q1`.
           
           Let's prioritize completing the image goals first, then the rock analysis. Rover v12 is at v13 initially.
           
           1.  **Calibrate and take images for v19, v20, v18, v17 using rover v12.**
               *   Move v12 to `#q0` (for v19), calibrate, take image.
               *   Move v12 to `#q3` (for v20), calibrate, take image.
               *   Move v12 to `#q4` (for v18), calibrate, take image.
               *   Move v12 to `#q5` (for v17), calibrate, take image.
           2.  **Send all images using rover v12.**
               *   Move v12 to `#q1` (communication configuration).
               *   Send images for v19, v20, v18, v17.
           3.  **Sample and analyze a rock of type v2 (v4) and type v6 (v5) using rover v12.**
               *   Move v12 to `#q2` (for v4), sample rock v4.
               *   Move v12 to `#q6` (for v5), sample rock v5.
               *   Move v12 back to `#q1` to send analysis.
               *   Send analysis for v4, drop v4.
               *   Send analysis for v5, drop v5.
           
           All these tasks can be done by Rover v12.
           
           --Plan--:
           (move v12 v13 #t5 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #t16 #q3)
           (calibrate v12 #q3 #y2 v20 v10)
           (take_image v12 #q3 #y2 v20 v10 v11)
           (move v12 #q3 #t18 #q4)
           (calibrate v12 #q4 #y3 v18 v10)
           (take_image v12 #q4 #y3 v18 v10 v11)
           (move v12 #q4 #t17 #q5)
           (calibrate v12 #q5 #y4 v17 v10)
           (take_image v12 #q5 #y4 v17 v10 v11)
           (move v12 #q5 #t13 #q1)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (send_image v12 #q1 #y1 v9 v20 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (move v12 #q1 #t0 #q2)
           (sample_rock v12 #q2 v4 v16)
           (move v12 #q2 #o2 #q6)
           (sample_rock v12 #q6 v5 v16)
           (move v12 #q6 #t12 #q1)
           (send_analysis v12 #q1 #y1 v9 v4)
           (drop_rock v12 v16)
           (send_analysis v12 #q1 #y1 v9 v5)
           (drop_rock v12 v16)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The previous plan failed because the final goal `new-axiom@0()` was not satisfied. This axiom requires multiple conditions to be true simultaneously. My previous plan correctly identified many of these conditions (received images and analysis for type v2 and v6 rocks, and the `atconf` and `free` states). However, it seems the automated checker wasn't able to deduce the full axiom satisfaction.
           
           Let's re-examine the goal `new-axiom@0()` more carefully.
           It requires:
           1.  `atconf(v12, v13)` (is initially true)
           2.  `atconf(v14, v15)` (is initially true)
           3.  `free(v12, v16)` (is initially true, but changes with `sample_rock` and `drop_rock`)
           4.  `free(v14, v16)` (is initially true)
           5.  `receivedimage(v17, v11)`
           6.  `receivedimage(v18, v11)`
           7.  `receivedimage(v19, v11)`
           8.  `receivedimage(v20, v11)`
           9.  `type(?stone, v2)` and `receivedanalysis(?stone)` (Need one rock of type v2, e.g., v1, v3, or v4, to be analyzed)
           10. `type(?soil, v6)` and `receivedanalysis(?soil)` (Need one rock of type v6, e.g., v5, v7, or v8, to be analyzed)
           
           My previous plan sampled two rocks using `v12`, then dropped them. This means `free(v12, v16)` would be true again at the end. All `receivedimage` goals were addressed. All `receivedanalysis` goals were addressed by sampling v4 (type v2) and v5 (type v6).
           
           The issue might be:
           *   Perhaps `atconf(v12, v13)` and `atconf(v14, v15)` must be true at the *very end* of the plan, and my plan moved v12 to `#q1` at the end. This is a common requirement in PDDL.
           *   The `free` condition must be true for *both* rovers at the end. My plan ensured `free(v12, v16)` by dropping samples, and `v14` never sampled anything, so `free(v14, v16)` should remain true.
           
           Let's adjust the plan to ensure both rovers are at their initial configurations (`v13` for `v12` and `v15` for `v14`) and their storage is free at the very end. The previous plan left `v12` at `#q1`.
           
           Revised Strategy:
           1.  Rover v12 will handle all imaging tasks.
           2.  Rover v12 will sample and analyze one rock of type v2 (v4) and one of type v6 (v5).
           3.  Rover v12 will return to its initial configuration `v13` at the end.
           4.  Rover v14 will remain at its initial configuration `v15` and its storage will remain free.
           
           Let's trace `v12`'s position and calibration.
           Initial `atconf(v12, v13)`.
           
           *   **Imaging:**
               *   `v19` at `#q0`: move v12 to `#q0`, calibrate, take image.
               *   `v20` at `#q3`: move v12 to `#q3`, calibrate, take image.
               *   `v18` at `#q4`: move v12 to `#q4`, calibrate, take image.
               *   `v17` at `#q5`: move v12 to `#q5`, calibrate, take image.
           *   **Sending Images:**
               *   Move v12 to `#q1` (comms range). Send all images.
           *   **Sampling & Analysis:**
               *   Move v12 to `#q2` (above v4). Sample v4. Storage now full.
               *   Move v12 to `#q1` (comms range). Send analysis for v4. Drop v4. Storage now free.
               *   Move v12 to `#q6` (above v5). Sample v5. Storage now full.
               *   Move v12 to `#q1` (comms range). Send analysis for v5. Drop v5. Storage now free.
           *   **Final Position:**
               *   Move v12 to `v13`.
           
           This ensures `free(v12, v16)` and `atconf(v12, v13)` are true at the end. `v14` remains untouched, keeping its `atconf` and `free` states true.
           
           The plan should sequence the `calibrate` actions, then the `take_image` actions, then the `move` to the communication point, and `send_image` actions. Then, the `sample_rock`, `move` to comms, `send_analysis`, and `drop_rock` actions. Finally, move back to `v13`.
           
           Let's make sure the sequence of moves and calibration is correct.
           `calibrate` invalidates `calibrated(?c, ?v)`, so for each `take_image`, the camera needs to be calibrated.
           The problem provides actions where camera `v10` is on both `v12` and `v14`. We only use `v10` for `v12`.
           
           Revised plan based on detailed strategy:
           (move v12 v13 #t5 #q0) ; Move to take image of v19
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #t16 #q3) ; Move to take image of v20
           (calibrate v12 #q3 #y2 v20 v10)
           (take_image v12 #q3 #y2 v20 v10 v11)
           (move v12 #q3 #t18 #q4) ; Move to take image of v18
           (calibrate v12 #q4 #y3 v18 v10)
           (take_image v12 #q4 #y3 v18 v10 v11)
           (move v12 #q4 #t17 #q5) ; Move to take image of v17
           (calibrate v12 #q5 #y4 v17 v10)
           (take_image v12 #q5 #y4 v17 v10 v11)
           (move v12 #q5 #t13 #q1) ; Move to communication point
           (send_image v12 #q1 #y1 v9 v19 v11)
           (send_image v12 #q1 #y1 v9 v20 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (move v12 #q1 #t0 #q2) ; Move to sample rock v4 (type v2)
           (sample_rock v12 #q2 v4 v16)
           (move v12 #q2 #t1 #q1) ; Move to communication point to send analysis for v4
           (send_analysis v12 #q1 #y1 v9 v4)
           (drop_rock v12 v16) ; Free up storage
           (move v12 #q1 #t14 #q6) ; Move to sample rock v5 (type v6)
           (sample_rock v12 #q6 v5 v16)
           (move v12 #q6 #t12 #q1) ; Move to communication point to send analysis for v5
           (send_analysis v12 #q1 #y1 v9 v5)
           (drop_rock v12 v16) ; Free up storage
           (move v12 #q1 #t2 v13) ; Return to initial configuration v13
           
           This sequence ensures all required predicates are eventually met, and the `atconf` and `free` conditions of the axiom are true at the end.
           
           --Plan--:
           (move v12 v13 #t5 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #t16 #q3)
           (calibrate v12 #q3 #y2 v20 v10)
           (take_image v12 #q3 #y2 v20 v10 v11)
           (move v12 #q3 #t18 #q4)
           (calibrate v12 #q4 #y3 v18 v10)
           (take_image v12 #q4 #y3 v18 v10 v11)
           (move v12 #q4 #t17 #q5)
           (calibrate v12 #q5 #y4 v17 v10)
           (take_image v12 #q5 #y4 v17 v10 v11)
           (move v12 #q5 #t13 #q1)
           (send_image v12 #q1 #y1 v9 v19 v11)
           (send_image v12 #q1 #y1 v9 v20 v11)
           (send_image v12 #q1 #y1 v9 v18 v11)
           (send_image v12 #q1 #y1 v9 v17 v11)
           (move v12 #q1 #t0 #q2)
           (sample_rock v12 #q2 v4 v16)
           (move v12 #q2 #t1 #q1)
           (send_analysis v12 #q1 #y1 v9 v4)
           (drop_rock v12 v16)
           (move v12 #q1 #t14 #q6)
           (sample_rock v12 #q6 v5 v16)
           (move v12 #q6 #t12 #q1)
           (send_analysis v12 #q1 #y1 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q1 #t2 v13)

