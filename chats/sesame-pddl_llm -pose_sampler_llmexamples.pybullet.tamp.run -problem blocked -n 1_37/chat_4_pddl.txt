User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g1: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p1: object
           #q2: object
           #q3: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           @sink: object
           @stove: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v22: object
           v23: object
           v3: object
           v4: object
           v6: object
           v7: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom handempty(v4)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v14)
           Atom graspable(v15)
           Atom pose(v15, v16)
           Atom atpose(v15, v16)
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom type(v12, v17)
           Atom stackable(v12, v18)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #g1)
           Atom pose(v12, #p1)
           Atom supported(v12, #p1, v18)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom bconf(#q3)
           Atom atraj(#t6)
           Atom kin(v4, v12, v13, #g1, #q3, #t6)
           Atom bconf(#q2)
           Atom atraj(#t5)
           Atom kin(v4, v12, #p1, #g1, #q2, #t5)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q3)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q3, #o0, #q2)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q2)
           Atom basemotion(#q2, #o0, #q2)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t7))
           ((move_base v3 #q3 #t8))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p1 #g1 #q2 #t5))
           ((place v4 v12 #p1 #g1 #q2 #t5))
           ((pick v4 v12 v13 #g1 #q3 #t6))
           ((place v4 v12 v13 #g1 #q3 #t6))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two stackable objects, `v12` and `v15`, and several continuous parameters representing poses, grasps, and trajectories. The robot has two arms, `v4` and `v6`, with `v4` being controllable.
           
           The initial state places `v12` at `v13` supported by `v14`, and `v15` at `v16` supported by `v11`. The goal `new-axiom@0()` can be achieved by satisfying `on(?green, v18)` and `type(?green, v17)`. From the initial state, we know `type(v12, v17)` and `stackable(v12, v18)`. This means if we can place `v12` on `v18`, the goal will be achieved.
           
           To achieve `on(v12, v18)`, we need `supported(v12, #p1, v18)` and `atpose(v12, #p1)`. `supported(v12, #p1, v18)` is already given in the initial state. Therefore, the plan needs to pick `v12` from its current pose `v13` and place it at pose `#p1`.
           
           The available actions provide `pick v4 v12 v13 #g1 #q3 #t6` to pick `v12` from `v13` and `place v4 v12 #p1 #g1 #q2 #t5` to place `v12` at `#p1`.
           
           The preconditions for `pick v4 v12 v13 #g1 #q3 #t6` are:
           1. `kin(v4, v12, v13, #g1, #q3, #t6)` - True
           2. `atpose(v12, v13)` - True
           3. `handempty(v4)` - True
           4. `atbconf(#q3)` - False (Currently `atbconf(v3)`)
           5. `NegatedAtom unsafeapproach(v12, v13, #g1)` - Assumed True as no `unsafeapproach` is given.
           6. `NegatedAtom unsafeatraj(#t6)` - Assumed True as no `unsafeatraj` is given.
           
           To satisfy `atbconf(#q3)`, we need to move the base from `v3` to `#q3`. The action `move_base v3 #q3 #t8` is available and has preconditions:
           1. `basemotion(v3, #t8, #q3)` - True
           2. `atbconf(v3)` - True
           3. `canmove()` - True
           
           After the pick action, the robot will be holding `v12`. Then, the `place` action needs to be executed.
           The preconditions for `place v4 v12 #p1 #g1 #q2 #t5` are:
           1. `kin(v4, v12, #p1, #g1, #q2, #t5)` - True
           2. `atgrasp(v4, v12, #g1)` - Will be true after pick.
           3. `atbconf(#q2)` - False (After pick, base will be at `#q3`)
           4. `NegatedAtom unsafepose(v12, #p1)` - Assumed True.
           5. `NegatedAtom unsafeapproach(v12, #p1, #g1)` - Assumed True.
           6. `NegatedAtom unsafeatraj(#t5)` - Assumed True.
           
           To satisfy `atbconf(#q2)`, we need to move the base from `#q3` to `#q2`. The action `move_base #q3 #q2 #o0` is available.
           
           Therefore, the plan should be:
           1. Move base to `#q3` for the pick.
           2. Pick `v12`.
           3. Move base to `#q2` for the place.
           4. Place `v12` at `#p1`.
           
           --Plan--:
           (move_base v3 #q3 #t8)
           (pick v4 v12 v13 #g1 #q3 #t6)
           (move_base #q3 #q2 #o0)
           (place v4 v12 #p1 #g1 #q2 #t5)

