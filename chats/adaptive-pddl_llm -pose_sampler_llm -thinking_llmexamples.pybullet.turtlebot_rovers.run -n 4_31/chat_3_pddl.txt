User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rock(v1)
           Atom rock(v8)
           Atom type(v5, v6)
           Atom conf(v12, v13)
           Atom objective(v19)
           Atom camera(v10)
           Atom supports(v10, v11)
           Atom free(v12, v16)
           Atom onboard(v10, v12)
           Atom objective(v18)
           Atom type(v7, v6)
           Atom atconf(v12, v13)
           Atom onboard(v10, v14)
           Atom rock(v4)
           Atom store(v16)
           Atom atconf(v14, v15)
           Atom type(v4, v2)
           Atom objective(v20)
           Atom rock(v7)
           Atom free(v14, v16)
           Atom type(v8, v6)
           Atom rover(v14)
           Atom conf(v14, v15)
           Atom rock(v5)
           Atom rock(v3)
           Atom lander(v9)
           Atom type(v1, v2)
           Atom objective(v17)
           Atom type(v3, v2)
           Atom mode(v11)
           Atom rover(v12)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q7, #y5, v17)
           Atom imagerange(v12, #q7, v17)
           Atom conf(v12, #q7)
           Atom ray(#y5)
           Atom comvisible(v12, #q2, #y1, v9)
           Atom comrange(v12, #q2, v9)
           Atom conf(v12, #q2)
           Atom ray(#y1)
           Atom above(v12, #o5, v3)
           Atom imagevisible(v12, #q6, #y4, v19)
           Atom imagerange(v12, #q6, v19)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom above(v12, #o5, v5)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v1)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v12, #q1, #y0, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v14, #q0, v5)
           Atom conf(v14, #q0)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #q5, v1)
           Atom conf(v14, #q5)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom comvisible(v14, #q4, #y3, v9)
           Atom comrange(v14, #q4, v9)
           Atom conf(v14, #q4)
           Atom ray(#y3)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v8)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v7)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom imagevisible(v12, #q3, #y2, v20)
           Atom imagerange(v12, #q3, v20)
           Atom conf(v12, #q3)
           Atom ray(#y2)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, v13, #t10, #q7)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q7, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q7)
           Atom motion(v14, #q4, #t9, v15)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v12, #q7, #t14, #q2)
           Atom motion(v12, #q2, #t8, v13)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q6, #t13, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #t16, #q6)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, v15, #t11, #q5)
           Atom motion(v14, #q4, #t5, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #t7, #q4)
           Atom motion(v14, #q0, #t6, #q4)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q4, #t4, #q0)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, v15, #t0, #q0)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q6)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q2, #t12, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, v13, #o2, #q3)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q3, #t15, #q2)
           Atom motion(v12, #q1, #t2, #q2)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, v13, #t1, #q1)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q2, #t3, #q1)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q1, #o2, #q6)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o3)
           Atom motion(v14, #q4, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q5)
           Atom motion(v14, #o3, #o2, #q0)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q4)
           Atom motion(v14, #q5, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q0, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q0 v5 v16))
           ((sample_rock v14 #q5 v1 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q6))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t2 #q2))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #t12 #q3))
           ((move v12 #q2 #t16 #q6))
           ((move v12 #q2 #t3 #q1))
           ((move v12 #q2 #t8 v13))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q6))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t15 #q2))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q7))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t13 #q2))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q6))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t14 #q2))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q3))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t1 #q1))
           ((move v12 v13 #t10 #q7))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q0))
           ((move v14 #o3 #o2 #q4))
           ((move v14 #o3 #o2 #q5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o3))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t6 #q4))
           ((move v14 #q4 #o2 #o3))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #t4 #q0))
           ((move v14 #q4 #t5 #q5))
           ((move v14 #q4 #t9 v15))
           ((move v14 #q5 #o2 #o3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t7 #q4))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t0 #q0))
           ((move v14 v15 #t11 #q5))
           ((calibrate v12 #q1 #y0 v18 v10))
           ((calibrate v12 #q3 #y2 v20 v10))
           ((calibrate v12 #q6 #y4 v19 v10))
           ((calibrate v12 #q7 #y5 v17 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #q1 #y0 v18 v10 v11))
           ((take_image v12 #q3 #y2 v20 v10 v11))
           ((take_image v12 #q6 #y4 v19 v10 v11))
           ((take_image v12 #q7 #y5 v17 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q2 #y1 v9 v1))
           ((send_analysis v12 #q2 #y1 v9 v3))
           ((send_analysis v12 #q2 #y1 v9 v4))
           ((send_analysis v12 #q2 #y1 v9 v5))
           ((send_analysis v12 #q2 #y1 v9 v7))
           ((send_analysis v12 #q2 #y1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q4 #y3 v9 v3))
           ((send_analysis v14 #q4 #y3 v9 v4))
           ((send_analysis v14 #q4 #y3 v9 v7))
           ((send_analysis v14 #q4 #y3 v9 v8))
           ((send_analysis v14 #q4 #y3 v9 v5))
           ((send_analysis v14 #q4 #y3 v9 v1))
           ((send_image v12 #q2 #y1 v9 v18 v11))
           ((send_image v12 #q2 #y1 v9 v20 v11))
           ((send_image v12 #q2 #y1 v9 v19 v11))
           ((send_image v12 #q2 #y1 v9 v17 v11))
           ((send_image v14 #q4 #y3 v9 v17 v11))
           ((send_image v14 #q4 #y3 v9 v18 v11))
           ((send_image v14 #q4 #y3 v9 v19 v11))
           ((send_image v14 #q4 #y3 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Strategic Plan for `new-axiom@0()` Achievement**
           
           Alright, let's break this down. The ultimate objective is `new-axiom@0()`, but this is a *conjunction* of several conditions. My primary focus is to ensure the conditions are satisfied. Here's my thought process:
           
           **1. Analyze the Goal:**
           
           The target goal, `new-axiom@0()`, hinges on these core components:
           -   **Configuration Stability:** Both rovers, `v12` and `v14`, must end in their initial configurations, `v13` and `v15`, respectively. Also, both rovers must have a free store, `v16`.
           -   **Image Acquisition & Transmission:**  The system *must* receive images of `v17`, `v18`, `v19`, and `v20`, transmitted in mode `v11`.
           -   **Rock Analysis:**  Analyses of rocks with the types `v2` (stone) and `v6` (soil) *must* be received.
           
           I've confirmed the initial `atconf` and `free` conditions are true.
           
           **2. Develop a Strategy**
           
           The immediate task is to secure images and analyses. Two rovers are available: `v12` and `v14`. I'm going to optimize the process by making one rover responsible for image acquisition and transmission, and the other for rock analysis. I've considered that `v14` can gather all the images from one configuration and that using `v12` to handle analyses is best.
           
           **Phase 1: Image Acquisition & Transmission**
           
           Rover `v14` will tackle the image collection/transmission.
           
           The optimal strategy will be as follows:
           1.  **Move & Calibrate:** `v14` moves to `#o3` and calibrates its camera `v10` for `v17`.
           2.  **Image Capture:** The rover will then take images of the targets (`v17` through `v20`) *in order*.
           3.  **Communication Configuration:** It navigates to configuration `#q4`.
           4.  **Send Images:** Finally, `v14` will transmit the images of all the image targets.
           5.  **Return to Starting Point:** Rover `v14` will then return to `v15`.
           
           **Phase 2: Rock Analysis**
           
           Rover `v12` is tasked with rock analysis.
           
           Here's the plan:
           1.  **Move to Sampling Point:** `v12` moves to `#o5`.
           2.  **Rock Sampling, Move & Send:** It samples each rock (v1, v3, v4, v5, v7, v8) one at a time. After sampling, it moves to `#q2`, sends the analysis, then *drops* the rock to free up the storage space `v16`.
           3.  **Return to Initial Point:** Rover `v12` then returns to `v13` to comply with the objective's conditions.
           
           **Revisiting the Plan for Configuration Compliance**
           
           Originally, both rovers were staying in a sub-optimal location. To fix this, I have updated `v14` to return to its initial point `v15` after transmitting images and have updated `v12` to return to `v13` after the final rock analysis.
           
           **Action Sequence**
           
           **Phase 1**
           1.  `move v14 v15 #o2 #o3`
           2.  `calibrate v14 #o3 #o4 v17 v10`
           3.  `take_image v14 #o3 #o4 v17 v10 v11`
           4.  `calibrate v14 #o3 #o4 v18 v10`
           5.  `take_image v14 #o3 #o4 v18 v10 v11`
           6.  `calibrate v14 #o3 #o4 v19 v10`
           7.  `take_image v14 #o3 #o4 v19 v10 v11`
           8.  `calibrate v14 #o3 #o4 v20 v10`
           9.  `take_image v14 #o3 #o4 v20 v10 v11`
           10. `move v14 #o3 #o2 #q4`
           11. `send_image v14 #q4 #y3 v9 v17 v11`
           12. `send_image
)

Model:     **Strategic Plan for `new-axiom@0()` Achievement**
           
           Alright, let's break this down. The ultimate objective is `new-axiom@0()`, but this is a *conjunction* of several conditions. My primary focus is to ensure the conditions are satisfied. Here's my thought process:
           
           **1. Analyze the Goal:**
           
           The target goal, `new-axiom@0()`, hinges on these core components:
           -   **Configuration Stability:** Both rovers, `v12` and `v14`, must end in their initial configurations, `v13` and `v15`, respectively. Also, both rovers must have a free store, `v16`.
           -   **Image Acquisition & Transmission:**  The system *must* receive images of `v17`, `v18`, `v19`, and `v20`, transmitted in mode `v11`.
           -   **Rock Analysis:**  Analyses of rocks with the types `v2` (stone) and `v6` (soil) *must* be received.
           
           I've confirmed the initial `atconf` and `free` conditions are true.
           
           **2. Develop a Strategy**
           
           The immediate task is to secure images and analyses. Two rovers are available: `v12` and `v14`. I'm going to optimize the process by making one rover responsible for image acquisition and transmission, and the other for rock analysis. I've considered that `v14` can gather all the images from one configuration and that using `v12` to handle analyses is best.
           
           **Phase 1: Image Acquisition & Transmission**
           
           Rover `v14` will tackle the image collection/transmission.
           
           The optimal strategy will be as follows:
           1.  **Move & Calibrate:** `v14` moves to `#o3` and calibrates its camera `v10` for `v17`.
           2.  **Image Capture:** The rover will then take images of the targets (`v17` through `v20`) *in order*.
           3.  **Communication Configuration:** It navigates to configuration `#q4`.
           4.  **Send Images:** Finally, `v14` will transmit the images of all the image targets.
           5.  **Return to Starting Point:** Rover `v14` will then return to `v15`.
           
           **Phase 2: Rock Analysis**
           
           Rover `v12` is tasked with rock analysis.
           
           Here's the plan:
           1.  **Move to Sampling Point:** `v12` moves to `#o5`.
           2.  **Rock Sampling, Move & Send:** It samples each rock (v1, v3, v4, v5, v7, v8) one at a time. After sampling, it moves to `#q2`, sends the analysis, then *drops* the rock to free up the storage space `v16`.
           3.  **Return to Initial Point:** Rover `v12` then returns to `v13` to comply with the objective's conditions.
           
           **Revisiting the Plan for Configuration Compliance**
           
           Originally, both rovers were staying in a sub-optimal location. To fix this, I have updated `v14` to return to its initial point `v15` after transmitting images and have updated `v12` to return to `v13` after the final rock analysis.
           
           **Action Sequence**
           
           **Phase 1**
           1.  `move v14 v15 #o2 #o3`
           2.  `calibrate v14 #o3 #o4 v17 v10`
           3.  `take_image v14 #o3 #o4 v17 v10 v11`
           4.  `calibrate v14 #o3 #o4 v18 v10`
           5.  `take_image v14 #o3 #o4 v18 v10 v11`
           6.  `calibrate v14 #o3 #o4 v19 v10`
           7.  `take_image v14 #o3 #o4 v19 v10 v11`
           8.  `calibrate v14 #o3 #o4 v20 v10`
           9.  `take_image v14 #o3 #o4 v20 v10 v11`
           10. `move v14 #o3 #o2 #q4`
           11. `send_image v14 #q4 #y3 v9 v17 v11`
           12. `send_image

