User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rover(v12)
           Atom objective(v17)
           Atom rock(v7)
           Atom objective(v18)
           Atom type(v8, v6)
           Atom rock(v8)
           Atom type(v1, v2)
           Atom conf(v12, v13)
           Atom rover(v14)
           Atom type(v3, v2)
           Atom supports(v10, v11)
           Atom atconf(v14, v15)
           Atom free(v14, v16)
           Atom rock(v3)
           Atom rock(v4)
           Atom free(v12, v16)
           Atom type(v4, v2)
           Atom camera(v10)
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom rock(v1)
           Atom objective(v19)
           Atom conf(v14, v15)
           Atom lander(v9)
           Atom mode(v11)
           Atom onboard(v10, v14)
           Atom type(v7, v6)
           Atom atconf(v12, v13)
           Atom rock(v5)
           Atom type(v5, v6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v14, #q9, #y6, v17)
           Atom imagerange(v14, #q9, v17)
           Atom conf(v14, #q9)
           Atom ray(#y6)
           Atom comvisible(v14, #q10, #y7, v9)
           Atom comrange(v14, #q10, v9)
           Atom conf(v14, #q10)
           Atom ray(#y7)
           Atom imagevisible(v14, #q8, #y5, v19)
           Atom imagerange(v14, #q8, v19)
           Atom conf(v14, #q8)
           Atom ray(#y5)
           Atom above(v14, #o5, v8)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #q11, v3)
           Atom conf(v12, #q11)
           Atom above(v12, #o5, v5)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom imagevisible(v12, #q4, #y2, v19)
           Atom imagerange(v12, #q4, v19)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom above(v12, #q2, v1)
           Atom conf(v12, #q2)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #q7, v8)
           Atom conf(v12, #q7)
           Atom imagevisible(v14, #q6, #y4, v18)
           Atom imagerange(v14, #q6, v18)
           Atom conf(v14, #q6)
           Atom ray(#y4)
           Atom imagevisible(v12, #q3, #y1, v18)
           Atom imagerange(v12, #q3, v18)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom above(v12, #q1, v7)
           Atom conf(v12, #q1)
           Atom above(v14, #o5, v7)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, v15, #t16, #q9)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, v13, #t7, #q5)
           Atom motion(v12, #q11, #o2, #q5)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q5, #o2, #q11)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q5, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q5)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, v13, #o2, #q1)
           Atom motion(v12, v13, #t5, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v12, #q1, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q5, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v14, #q8, #o2, v15)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, v15, #t15, #q8)
           Atom motion(v14, #q9, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q9)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q5, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q5)
           Atom motion(v12, #q3, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q3)
           Atom motion(v12, v13, #t8, #q7)
           Atom motion(v12, #q7, #o2, #q1)
           Atom motion(v12, #q7, #o2, v13)
           Atom motion(v12, #q11, #o2, #q7)
           Atom motion(v12, #q1, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q11)
           Atom motion(v14, v15, #t14, #q6)
           Atom motion(v14, #q6, #o2, #q8)
           Atom motion(v14, #q6, #o2, #q9)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, #q9, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, #q8, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q0, #o2, #q7)
           Atom motion(v12, #q0, #t1, #q1)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q0, #t0, v13)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q1, #t2, #q0)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q3, #t4, #q0)
           Atom motion(v12, #q7, #t10, #q0)
           Atom motion(v14, #q10, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q9)
           Atom motion(v14, #q6, #t11, #q10)
           Atom motion(v14, #q9, #t13, #q10)
           Atom motion(v14, #q8, #t12, #q10)
           Atom motion(v14, #q10, #o2, #q6)
           Atom motion(v14, v15, #o2, #q10)
           Atom motion(v14, #q10, #o2, #q8)
           Atom motion(v14, #q10, #t9, v15)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #t3, #q0)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q1, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q7, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q7)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q4, #o2, #q2)
           Atom motion(v12, #q4, #o2, #q5)
           Atom motion(v12, #q11, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q1)
           Atom motion(v12, #q2, #o2, #q4)
           Atom motion(v12, #q3, #o2, #q4)
           Atom motion(v12, #q5, #o2, #q4)
           Atom motion(v12, v13, #t6, #q4)
           Atom motion(v12, #q4, #o2, #q11)
           Atom motion(v12, #q7, #o2, #q4)
           Atom motion(v12, #q1, #o2, #q4)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q7)
           Atom motion(v12, #q4, #o2, #q0)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, #q11, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q1)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #q1, #o2, #o5)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #q3, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q3)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #q11)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v14, #q10, #o2, #o5)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q10)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #q6)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #q1 v7 v16))
           ((sample_rock v12 #q11 v3 v16))
           ((sample_rock v12 #q2 v1 v16))
           ((sample_rock v12 #q7 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q1))
           ((move v12 #o5 #o2 #q11))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q3))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q7))
           ((move v12 #q0 #t0 v13))
           ((move v12 #q0 #t1 #q1))
           ((move v12 #q1 #o2 #o5))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q2))
           ((move v12 #q1 #o2 #q3))
           ((move v12 #q1 #o2 #q4))
           ((move v12 #q1 #o2 #q5))
           ((move v12 #q1 #o2 #q7))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t2 #q0))
           ((move v12 #q11 #o2 #o5))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q4))
           ((move v12 #q11 #o2 #q5))
           ((move v12 #q11 #o2 #q7))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q4))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q7))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t3 #q0))
           ((move v12 #q3 #o2 #o5))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 #q4))
           ((move v12 #q3 #o2 #q5))
           ((move v12 #q3 #o2 #q7))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t4 #q0))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q0))
           ((move v12 #q4 #o2 #q1))
           ((move v12 #q4 #o2 #q11))
           ((move v12 #q4 #o2 #q2))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q5))
           ((move v12 #q4 #o2 #q7))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q1))
           ((move v12 #q5 #o2 #q11))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q3))
           ((move v12 #q5 #o2 #q4))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q7))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q1))
           ((move v12 #q7 #o2 #q11))
           ((move v12 #q7 #o2 #q2))
           ((move v12 #q7 #o2 #q3))
           ((move v12 #q7 #o2 #q4))
           ((move v12 #q7 #o2 #q5))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #o2 v13))
           ((move v12 #q7 #t10 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q1))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t5 #q3))
           ((move v12 v13 #t6 #q4))
           ((move v12 v13 #t7 #q5))
           ((move v12 v13 #t8 #q7))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q10))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q10 #o2 #o5))
           ((move v14 #q10 #o2 #q10))
           ((move v14 #q10 #o2 #q6))
           ((move v14 #q10 #o2 #q8))
           ((move v14 #q10 #o2 #q9))
           ((move v14 #q10 #t9 v15))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q8))
           ((move v14 #q6 #o2 #q9))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #t11 #q10))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q6))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #o2 #q9))
           ((move v14 #q8 #o2 v15))
           ((move v14 #q8 #t12 #q10))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q6))
           ((move v14 #q9 #o2 #q8))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t13 #q10))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q10))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q6))
           ((move v14 v15 #t15 #q8))
           ((move v14 v15 #t16 #q9))
           ((calibrate v12 #q3 #y1 v18 v10))
           ((calibrate v12 #q4 #y2 v19 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #q6 #y4 v18 v10))
           ((calibrate v14 #q8 #y5 v19 v10))
           ((calibrate v14 #q9 #y6 v17 v10))
           ((take_image v12 #q3 #y1 v18 v10 v11))
           ((take_image v12 #q4 #y2 v19 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q6 #y4 v18 v10 v11))
           ((take_image v14 #q8 #y5 v19 v10 v11))
           ((take_image v14 #q9 #y6 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q10 #y7 v9 v1))
           ((send_analysis v14 #q10 #y7 v9 v3))
           ((send_analysis v14 #q10 #y7 v9 v4))
           ((send_analysis v14 #q10 #y7 v9 v5))
           ((send_analysis v14 #q10 #y7 v9 v7))
           ((send_analysis v14 #q10 #y7 v9 v8))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v12 #q0 #y0 v9 v19 v11))
           ((send_image v12 #q0 #y0 v9 v17 v11))
           ((send_image v14 #q10 #y7 v9 v18 v11))
           ((send_image v14 #q10 #y7 v9 v19 v11))
           ((send_image v14 #q10 #y7 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Alright, let's break this down.** My goal is to achieve `new-axiom@0()`, a conjunction of several conditions.  I've assessed the initial state and see that several sub-goals need attention: I need to get three images ( `v17`, `v18`, `v19` ), and analyze a stone and soil sample. I'm going to split the work between two rovers, `v12` and `v14`, to optimize efficiency.
           
           *   **Rover `v12` (Imaging):**  `v12` will handle all image-related tasks. It will need to move to the locations where it can see the objects for imaging: `#q5`, `#q3`, and `#q4`. At each of these locations, I need to have it first calibrate its camera `v10`, take an image, then move to a communication-friendly location (`#q0`) to send the image to the lander. The camera needs to be recalibrated before each picture since `take_image` uncalibrates it. Once all images are sent, `v12` will move back to its initial config, `v13`.
           
           *   **Rover `v14` (Analysis):** `v14` will focus on rock analysis. I'll have it move to the sample location `#o5` to sample a stone (`v4`) and soil (`v5`). Then it will move to a communication friendly location (`#q10`) to send the analysis to the lander. I will be sure to have rover `v14` return to its initial config `v15` after completing its tasks.
           
           This plan, I believe, will effectively satisfy all the required preconditions and achieve my final goal. I am confident because I've double-checked all conditions and account for the effects of each action in the plan. I believe this fulfills my requirements in the most effective manner.
           
)

Model:     **Alright, let's break this down.** My goal is to achieve `new-axiom@0()`, a conjunction of several conditions.  I've assessed the initial state and see that several sub-goals need attention: I need to get three images ( `v17`, `v18`, `v19` ), and analyze a stone and soil sample. I'm going to split the work between two rovers, `v12` and `v14`, to optimize efficiency.
           
           *   **Rover `v12` (Imaging):**  `v12` will handle all image-related tasks. It will need to move to the locations where it can see the objects for imaging: `#q5`, `#q3`, and `#q4`. At each of these locations, I need to have it first calibrate its camera `v10`, take an image, then move to a communication-friendly location (`#q0`) to send the image to the lander. The camera needs to be recalibrated before each picture since `take_image` uncalibrates it. Once all images are sent, `v12` will move back to its initial config, `v13`.
           
           *   **Rover `v14` (Analysis):** `v14` will focus on rock analysis. I'll have it move to the sample location `#o5` to sample a stone (`v4`) and soil (`v5`). Then it will move to a communication friendly location (`#q10`) to send the analysis to the lander. I will be sure to have rover `v14` return to its initial config `v15` after completing its tasks.
           
           This plan, I believe, will effectively satisfy all the required preconditions and achieve my final goal. I am confident because I've double-checked all conditions and account for the effects of each action in the plan. I believe this fulfills my requirements in the most effective manner.
           

