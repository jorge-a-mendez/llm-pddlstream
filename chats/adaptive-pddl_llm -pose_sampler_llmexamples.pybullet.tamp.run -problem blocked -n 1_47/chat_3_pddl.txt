User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #q0: object
           #q1: object
           #t0: object
           #t1: object
           #t2: object
           #t3: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom stackable(v15, v10)
           Atom supported(v15, v16, v11)
           Atom graspable(v8)
           Atom graspable(v15)
           Atom aconf(v6, v7)
           Atom atpose(v15, v16)
           Atom pose(v15, v16)
           Atom handempty(v6)
           Atom supported(v12, v13, v14)
           Atom arm(v4)
           Atom graspable(v12)
           Atom ataconf(v6, v7)
           Atom atpose(v8, v9)
           Atom controllable(v4)
           Atom arm(v6)
           Atom type(v8, v17)
           Atom stackable(v8, v18)
           Atom supported(v8, v9, v11)
           Atom stackable(v12, v10)
           Atom ataconf(v4, v5)
           Atom aconf(v4, v5)
           Atom atbconf(v3)
           Atom handempty(v4)
           Atom pose(v8, v9)
           Atom atpose(v12, v13)
           Atom stackable(v12, v18)
           Atom canmove()
           Atom type(v12, v17)
           Atom bconf(v3)
           Atom pose(v12, v13)
           Atom stackable(v8, v10)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v18)
           Atom grasp(v12, #g0)
           Atom pose(v15, #o2)
           Atom supported(v15, #o2, v10)
           Atom grasp(v15, #o1)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v8, #o1)
           Atom supported(v8, #o2, v18)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, #p0, #g0, #q0, #t0)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, v13, #g0, #q1, #t1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q1)
           Atom btraj(#t3)
           Atom basemotion(v3, #t3, #q1)
           Atom btraj(#t2)
           Atom basemotion(v3, #t2, #q0)
           Atom basemotion(#q0, #o0, #q1)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q1, #o0, #q0)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v8, v9, #o1, #o3, #o4)
           Atom kin(v4, v15, v16, #o1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom kin(v4, v8, #o2, #o1, #o3, #o4)
           Atom kin(v4, v15, #o2, #o1, #o3, #o4)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(v3, #o0, #o3)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q0 #t2))
           ((move_base v3 #q1 #t3))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 #p0 #g0 #q0 #t0))
           ((place v4 v12 #p0 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q1 #t1))
           ((place v4 v12 v13 #g0 #q1 #t1))
           ((pick v4 v15 #o2 #o1 #o3 #o4))
           ((place v4 v15 #o2 #o1 #o3 #o4))
           ((pick v4 v15 v16 #o1 #o3 #o4))
           ((place v4 v15 v16 #o1 #o3 #o4))
           ((pick v4 v8 #o2 #o1 #o3 #o4))
           ((place v4 v8 #o2 #o1 #o3 #o4))
           ((pick v4 v8 v9 #o1 #o3 #o4))
           ((place v4 v8 v9 #o1 #o3 #o4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` is achieved if `on(?green, v18)` and `type(?green, v17)` are true. The object `v12` has type `v17`. The object `v8` also has type `v17`. The object `v15` does not have type `v17`. Therefore, to satisfy the goal, we need to make either `on(v12, v18)` or `on(v8, v18)` true.
           
           Currently, `v12` is at `v13` and supported by `v14`. `v8` is at `v9` and supported by `v11`. `v15` is at `v16` and supported by `v11`.
           
           To achieve `on(v12, v18)`, we need to place `v12` on `v18`. There's a pose `#p0` that is supported by `v18` for `v12`. So we need to pick `v12` from `v13` (or `#o2`) and place it at `#p0` on `v18`.
           
           To achieve `on(v8, v18)`, we need to place `v8` on `v18`. There's a pose `#o2` that is supported by `v18` for `v8`. So we need to pick `v8` from `v9` (or `#o2`) and place it at `#o2` on `v18`.
           
           Let's choose to place `v12` on `v18`.
           Initial state has `atbconf(v3)` and `handempty(v4)`.
           To pick `v12` from `v13`, the robot needs to be at `bconf` `q1`. So we move the base to `q1`.
           Then, we pick `v12`.
           After picking, `v4` is no longer `handempty` and `v12` is no longer `atpose(v12, v13)`.
           To place `v12` at `#p0`, the robot needs to be at `bconf` `q0`. So we move the base to `q0`.
           Then we place `v12` at `#p0`. This will satisfy `on(v12, v18)` and `type(v12, v17)`.
           
           --Plan--:
           (move_base v3 #q1 #t3)
           (pick v4 v12 v13 #g0 #q1 #t1)
           (move_base #q1 #q0 #o0)
           (place v4 v12 #p0 #g0 #q0 #t0)

