User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object v3 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.193, -0.274), (1.288, -0.179)).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.883, 1.114), (-0.748, 1.248)).
           Object v19 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.322, 1.875), (0.417, 1.97)).
           Object v7 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.891, -0.339), (2.002, -0.229)).
           Object v20 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.107, 1.979), (-2.01, 2.076)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.187, -1.929), (-0.821, -1.571)).
           Object v5 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-1.317, -0.839), (-1.176, -0.699)).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.821, -1.929), (1.187, -1.571)).
           Object v4 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((1.834, -1.139), (1.94, -1.033)).
           Object v17 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.533, 2.089), (-0.44, 2.183)).
           Object v1 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((2.086, -1.922), (2.166, -1.842)).
           Object v15 is a base configuration with (x, y, theta) = (-1.0, -1.75, 0.0).
           Object v9 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-2.405, -2.346), (-1.395, -1.654)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((2.036, 1.954), (2.122, 2.04)).
           Object v13 is a base configuration with (x, y, theta) = (1.0, -1.75, 3.142).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom objective(v18)
           Atom free(v14, v16)
           Atom type(v7, v6)
           Atom rock(v3)
           Atom store(v16)
           Atom type(v8, v6)
           Atom supports(v10, v11)
           Atom rock(v1)
           Atom type(v1, v2)
           Atom mode(v11)
           Atom conf(v12, v13)
           Atom rock(v5)
           Atom type(v3, v2)
           Atom rock(v7)
           Atom free(v12, v16)
           Atom rover(v12)
           Atom type(v4, v2)
           Atom camera(v10)
           Atom onboard(v10, v12)
           Atom objective(v19)
           Atom rock(v4)
           Atom onboard(v10, v14)
           Atom atconf(v12, v13)
           Atom rock(v8)
           Atom rover(v14)
           Atom conf(v14, v15)
           Atom lander(v9)
           Atom atconf(v14, v15)
           Atom type(v5, v6)
           Atom objective(v20)
           Atom objective(v17)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v5)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom above(v14, #o5, v3)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom above(v14, #o5, v1)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom above(v12, #o5, v7)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom above(v12, #o5, v3)
           Atom above(v12, #o5, v5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v4)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((move v12 v13 #o2 v13))
           ((move v14 v15 #o2 v15))
           ((drop_rock v12 v16))
           ((drop_rock v14 v16))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, v12 and v14, two stores, v16, several rocks (v1, v3, v4, v5, v7, v8), and several objectives (v17, v18, v19, v20). There is a lander v9. Rover v12 is at configuration v13 and rover v14 is at configuration v15. Both rovers have a camera v10 onboard which supports mode v11.
           
           The goal `new-axiom@0()` represents several subgoals, some of which are already true in the initial state. Let's break it down:
           `atconf(v12, v13)`: True initially.
           `atconf(v14, v15)`: True initially.
           `free(v12, v16)`: True initially.
           `free(v14, v16)`: True initially.
           `receivedimage(v17, v11)`
           `receivedimage(v18, v11)`
           `receivedimage(v19, v11)`
           `receivedimage(v20, v11)`
           `type(?stone, v2)`: `type(v1, v2)`, `type(v3, v2)`, `type(v4, v2)` are true.
           `receivedanalysis(?stone)`: Needs to be achieved for `v1`, `v3`, `v4`.
           `type(?soil, v6)`: `type(v7, v6)`, `type(v8, v6)`, `type(v5, v6)` are true.
           `receivedanalysis(?soil)`: Needs to be achieved for `v7`, `v8`, `v5`.
           
           From the available action instances, we only have `move` and `drop_rock` actions. We don't have `take_image`, `calibrate`, `send_image`, `sample_rock`, or `send_analysis` actions in the provided allowed action instances. This means we cannot achieve `receivedimage` or `receivedanalysis` goals, as these require the corresponding actions. Therefore, the goal `new-axiom@0()` is not achievable with the given set of allowed actions.
           
           Since the goal cannot be achieved given the allowed actions, no plan can be generated.

