User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom onboard(v10, v12)
           Atom store(v16)
           Atom rock(v4)
           Atom rock(v8)
           Atom atconf(v14, v15)
           Atom rover(v14)
           Atom free(v12, v16)
           Atom supports(v10, v11)
           Atom free(v14, v16)
           Atom type(v1, v2)
           Atom onboard(v10, v14)
           Atom objective(v19)
           Atom type(v8, v6)
           Atom lander(v9)
           Atom rock(v7)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom camera(v10)
           Atom atconf(v12, v13)
           Atom rock(v1)
           Atom rover(v12)
           Atom mode(v11)
           Atom type(v4, v2)
           Atom rock(v5)
           Atom type(v3, v2)
           Atom conf(v12, v13)
           Atom objective(v17)
           Atom rock(v3)
           Atom objective(v18)
           Atom type(v5, v6)
           Atom comvisible(v14, #q1, #y1, v9)
           Atom comrange(v14, #q1, v9)
           Atom conf(v14, #q1)
           Atom ray(#y1)
           Atom imagevisible(v14, #q5, #y3, v18)
           Atom imagerange(v14, #q5, v18)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom above(v14, #q2, v3)
           Atom conf(v14, #q2)
           Atom imagevisible(v14, #q3, #y2, v17)
           Atom imagerange(v14, #q3, v17)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom imagevisible(v14, #q0, #y0, v19)
           Atom imagerange(v14, #q0, v19)
           Atom conf(v14, #q0)
           Atom ray(#y0)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #q4, v5)
           Atom conf(v14, #q4)
           Atom above(v14, #q9, v8)
           Atom conf(v14, #q9)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom conf(v12, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom comvisible(v12, #q7, #y4, v9)
           Atom comrange(v12, #q7, v9)
           Atom conf(v12, #q7)
           Atom ray(#y4)
           Atom above(v12, #o5, v3)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v5)
           Atom above(v12, #q10, v1)
           Atom conf(v12, #q10)
           Atom above(v14, #o5, v1)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v4)
           Atom above(v12, #q8, v4)
           Atom conf(v12, #q8)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q6, v7)
           Atom conf(v12, #q6)
           Atom above(v14, #o5, v7)
           Atom motion(v14, #q1, #t0, v15)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, v15, #o2, #q1)
           Atom motion(v14, v15, #t9, #q5)
           Atom motion(v14, #q5, #t4, #q1)
           Atom motion(v14, #q1, #t10, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q5)
           Atom motion(v14, #q1, #t5, #q2)
           Atom motion(v14, #q2, #t1, #q1)
           Atom motion(v14, v15, #o2, #q2)
           Atom motion(v14, #q2, #o2, v15)
           Atom motion(v14, #q3, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q3)
           Atom motion(v14, #q3, #o2, v15)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q2)
           Atom motion(v14, #q2, #o2, #q3)
           Atom motion(v14, #q3, #t3, #q1)
           Atom motion(v14, #q1, #t14, #q3)
           Atom motion(v14, v15, #t8, #q3)
           Atom motion(v14, #q0, #t2, #q1)
           Atom motion(v14, #q0, #o2, v15)
           Atom motion(v14, #q1, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q3)
           Atom motion(v14, #q0, #o2, #q5)
           Atom motion(v14, #q0, #o2, #q2)
           Atom motion(v14, v15, #t7, #q0)
           Atom motion(v14, #q3, #o2, #q0)
           Atom motion(v14, #q0, #o2, #q0)
           Atom motion(v14, #q5, #o2, #q0)
           Atom motion(v14, #q2, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, v13, #t17, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v14, #q4, #o2, #q3)
           Atom motion(v14, v15, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q1)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q2, #t19, #q4)
           Atom motion(v14, #q5, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q5)
           Atom motion(v14, #q4, #o2, #q2)
           Atom motion(v14, #q0, #o2, #q4)
           Atom motion(v14, #q1, #t6, #q4)
           Atom motion(v14, #q3, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q0)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q6, #t12, #q7)
           Atom motion(v12, #q7, #o2, #q10)
           Atom motion(v12, v13, #o2, #q7)
           Atom motion(v12, #q7, #o2, #q7)
           Atom motion(v12, #q10, #o2, #q7)
           Atom motion(v12, #q7, #t15, #q6)
           Atom motion(v12, #q7, #t11, v13)
           Atom motion(v14, v15, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v14, #q4, #t20, #q9)
           Atom motion(v14, #q0, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q1)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q3, #o2, #q9)
           Atom motion(v14, #q2, #o2, #q9)
           Atom motion(v14, #q1, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q4)
           Atom motion(v14, #q9, #o2, #q3)
           Atom motion(v14, #q9, #o2, #q2)
           Atom motion(v14, #q9, #o2, #q0)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v12, v13, #t18, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q7, #t16, #q8)
           Atom motion(v12, #q6, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q6)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q8, #t13, #q7)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #q7, #o2, #o5)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q7)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o3, #o2, #q10)
           Atom motion(v12, #o3, #o2, #q7)
           Atom motion(v12, #q6, #o2, #o3)
           Atom motion(v12, #q7, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #q10, #o2, #o3)
           Atom motion(v12, #o3, #o2, #q6)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #q8, #o2, #o3)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, #o3, #o2, #q8)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #q2, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q0)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #q0, #o2, #o5)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q4)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q10 v1 v16))
           ((sample_rock v12 #q6 v7 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q2 v3 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((sample_rock v14 #q9 v8 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q10))
           ((move v12 #o3 #o2 #q6))
           ((move v12 #o3 #o2 #q7))
           ((move v12 #o3 #o2 #q8))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o3))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q6 #o2 #o3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q7))
           ((move v12 #q7 #o2 #o3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #t11 v13))
           ((move v12 #q7 #t15 #q6))
           ((move v12 #q7 #t16 #q8))
           ((move v12 #q8 #o2 #o3))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t13 #q7))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q6))
           ((move v12 v13 #t18 #q8))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t2 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t0 v15))
           ((move v14 #q1 #t10 #q5))
           ((move v14 #q1 #t14 #q3))
           ((move v14 #q1 #t5 #q2))
           ((move v14 #q1 #t6 #q4))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t1 #q1))
           ((move v14 #q2 #t19 #q4))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q1))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t20 #q9))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t4 #q1))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t7 #q0))
           ((move v14 v15 #t8 #q3))
           ((move v14 v15 #t9 #q5))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q3 #y2 v17 v10))
           ((calibrate v14 #q5 #y3 v18 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q3 #y2 v17 v10 v11))
           ((take_image v14 #q5 #y3 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q7 #y4 v9 v3))
           ((send_analysis v12 #q7 #y4 v9 v5))
           ((send_analysis v12 #q7 #y4 v9 v8))
           ((send_analysis v12 #q7 #y4 v9 v1))
           ((send_analysis v12 #q7 #y4 v9 v7))
           ((send_analysis v12 #q7 #y4 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_image v12 #q7 #y4 v9 v17 v11))
           ((send_image v12 #q7 #y4 v9 v18 v11))
           ((send_image v12 #q7 #y4 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. Both rovers are equipped with a camera `v10` that supports mode `v11`. There are multiple rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`, `v19`). Rover `v12` is at configuration `v13` and rover `v14` is at configuration `v15`. Both rovers have an empty store `v16`.
           
           The goal `new-axiom@0()` is a complex logical expression, which simplifies to the following:
           1. Both rovers `v12` and `v14` must be at their initial configurations `v13` and `v15` respectively. This is already true in the initial state.
           2. Both rovers `v12` and `v14` must have their store `v16` free. This is already true in the initial state.
           3. Three specific images must be received: `v17` in mode `v11`, `v18` in mode `v11`, and `v19` in mode `v11`.
           4. Two types of rocks (`v2` and `v6`) must have their analyses received. This means at least one rock of type `v2` and at least one rock of type `v6` must be analyzed and sent.
           
           Let's break down how to achieve the goal:
           - **Received Images**:
               - We need `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, and `receivedimage(v19, v11)`.
               - Rover `v14` can image `v19` from `#q0`, `v17` from `#q3`, and `v18` from `#q5`.
               - Rover `v12` can image `v17`, `v18`, `v19` from `#o3`.
               - To take an image, the camera needs to be calibrated.
               - After taking images, they need to be sent using `send_image`. Rover `v14` can communicate from `#q1` and Rover `v12` can communicate from `#q7`.
           
           - **Received Analyses**:
               - We need to analyze a rock of type `v2` and a rock of type `v6`.
               - Rocks of type `v2` are `v1`, `v3`, `v4`.
               - Rocks of type `v6` are `v5`, `v7`, `v8`.
               - To analyze a rock, a rover needs to sample it using `sample_rock`.
               - After sampling and analyzing, the analysis needs to be sent using `send_analysis`.
           
           **Plan Strategy:**
           1. **Analyze Rocks:** Rover `v14` is at `v15` and has various `above` predicates. It can sample `v3` (type `v2`) at `#q2` and `v5` (type `v6`) at `#q4`. After sampling, move `v14` to a communication configuration and send the analyses.
           2. **Take and Send Images:** Rover `v14` can take all three required images. It can calibrate, take the image, and then send it from a communication configuration.
           
           Let's pick rover `v14` for both tasks as it has more direct `imagevisible` and `above` predicates from its initial location or nearby.
           
           **Detailed Plan for Rover v14:**
           
           *   **Analyze rocks:**
               1.  Move to `#q2` to sample `v3` (type `v2`).
               2.  Sample `v3`.
               3.  Move to `#q4` to sample `v5` (type `v6`).
               4.  Sample `v5`.
               5.  Move to `#q1` for communication.
               6.  Send analysis for `v3`.
               7.  Send analysis for `v5`.
           
           *   **Take and send images:**
               8.  Move to `#q0` to image `v19`.
               9.  Calibrate camera `v10` for `v19`.
               10. Take image of `v19`.
               11. Move to `#q1` for communication.
               12. Send image of `v19`.
               13. Move to `#q3` to image `v17`.
               14. Calibrate camera `v10` for `v17`.
               15. Take image of `v17`.
               16. Move to `#q1` for communication.
               17. Send image of `v17`.
               18. Move to `#q5` to image `v18`.
               19. Calibrate camera `v10` for `v18`.
               20. Take image of `v18`.
               21. Move to `#q1` for communication.
               22. Send image of `v18`.
           
           The current position of `v14` is `v15`. We need to move to the required positions.
           
           --Plan--:
           (move v14 v15 #o2 #q2)
           (sample_rock v14 #q2 v3 v16)
           (move v14 #q2 #o2 #q4)
           (sample_rock v14 #q4 v5 v16)
           (move v14 #q4 #t6 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (send_analysis v14 #q1 #y1 v9 v5)
           (move v14 #q1 #o2 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #t2 #q1)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (move v14 #q1 #t14 #q3)
           (calibrate v14 #q3 #y2 v17 v10)
           (take_image v14 #q3 #y2 v17 v10 v11)
           (move v14 #q3 #t3 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (move v14 #q1 #t10 #q5)
           (calibrate v14 #q5 #y3 v18 v10)
           (take_image v14 #q5 #y3 v18 v10 v11)
           (move v14 #q5 #t4 #q1)
           (send_image v14 #q1 #y1 v9 v18 v11)

User:      The plan you provided contains the following invalid actions: `(move v14 #q2 #o2 #q4), (move v14 #q4 #t6 #q1)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q10 v1 v16))
           ((sample_rock v12 #q6 v7 v16))
           ((sample_rock v12 #q8 v4 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q2 v3 v16))
           ((sample_rock v14 #q4 v5 v16))
           ((sample_rock v14 #q9 v8 v16))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 #q10))
           ((move v12 #o3 #o2 #q6))
           ((move v12 #o3 #o2 #q7))
           ((move v12 #o3 #o2 #q8))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q7))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q10 #o2 #o3))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q7))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q6 #o2 #o3))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 #q8))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t12 #q7))
           ((move v12 #q7 #o2 #o3))
           ((move v12 #q7 #o2 #o5))
           ((move v12 #q7 #o2 #q10))
           ((move v12 #q7 #o2 #q7))
           ((move v12 #q7 #t11 v13))
           ((move v12 #q7 #t15 #q6))
           ((move v12 #q7 #t16 #q8))
           ((move v12 #q8 #o2 #o3))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q6))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t13 #q7))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q7))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t17 #q6))
           ((move v12 v13 #t18 #q8))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q0))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q2))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q0 #o2 #o5))
           ((move v14 #q0 #o2 #q0))
           ((move v14 #q0 #o2 #q2))
           ((move v14 #q0 #o2 #q3))
           ((move v14 #q0 #o2 #q4))
           ((move v14 #q0 #o2 #q5))
           ((move v14 #q0 #o2 #q9))
           ((move v14 #q0 #o2 v15))
           ((move v14 #q0 #t2 #q1))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q0))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q9))
           ((move v14 #q1 #t0 v15))
           ((move v14 #q1 #t10 #q5))
           ((move v14 #q1 #t14 #q3))
           ((move v14 #q1 #t5 #q2))
           ((move v14 #q1 #t6 #q4))
           ((move v14 #q2 #o2 #o5))
           ((move v14 #q2 #o2 #q0))
           ((move v14 #q2 #o2 #q2))
           ((move v14 #q2 #o2 #q3))
           ((move v14 #q2 #o2 #q5))
           ((move v14 #q2 #o2 #q9))
           ((move v14 #q2 #o2 v15))
           ((move v14 #q2 #t1 #q1))
           ((move v14 #q2 #t19 #q4))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q0))
           ((move v14 #q3 #o2 #q2))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q4))
           ((move v14 #q3 #o2 #q5))
           ((move v14 #q3 #o2 #q9))
           ((move v14 #q3 #o2 v15))
           ((move v14 #q3 #t3 #q1))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q0))
           ((move v14 #q4 #o2 #q1))
           ((move v14 #q4 #o2 #q2))
           ((move v14 #q4 #o2 #q3))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q5))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t20 #q9))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q0))
           ((move v14 #q5 #o2 #q2))
           ((move v14 #q5 #o2 #q3))
           ((move v14 #q5 #o2 #q4))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t4 #q1))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q0))
           ((move v14 #q9 #o2 #q1))
           ((move v14 #q9 #o2 #q2))
           ((move v14 #q9 #o2 #q3))
           ((move v14 #q9 #o2 #q4))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q1))
           ((move v14 v15 #o2 #q2))
           ((move v14 v15 #o2 #q4))
           ((move v14 v15 #o2 #q9))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t7 #q0))
           ((move v14 v15 #t8 #q3))
           ((move v14 v15 #t9 #q5))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v14 #q0 #y0 v19 v10))
           ((calibrate v14 #q3 #y2 v17 v10))
           ((calibrate v14 #q5 #y3 v18 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v14 #q0 #y0 v19 v10 v11))
           ((take_image v14 #q3 #y2 v17 v10 v11))
           ((take_image v14 #q5 #y3 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q7 #y4 v9 v3))
           ((send_analysis v12 #q7 #y4 v9 v5))
           ((send_analysis v12 #q7 #y4 v9 v8))
           ((send_analysis v12 #q7 #y4 v9 v1))
           ((send_analysis v12 #q7 #y4 v9 v7))
           ((send_analysis v12 #q7 #y4 v9 v4))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q1 #y1 v9 v1))
           ((send_analysis v14 #q1 #y1 v9 v4))
           ((send_analysis v14 #q1 #y1 v9 v7))
           ((send_analysis v14 #q1 #y1 v9 v3))
           ((send_analysis v14 #q1 #y1 v9 v5))
           ((send_analysis v14 #q1 #y1 v9 v8))
           ((send_image v12 #q7 #y4 v9 v17 v11))
           ((send_image v12 #q7 #y4 v9 v18 v11))
           ((send_image v12 #q7 #y4 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v19 v11))
           ((send_image v14 #q1 #y1 v9 v17 v11))
           ((send_image v14 #q1 #y1 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. Both rovers are equipped with a camera `v10` that supports mode `v11`. There are multiple rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`, `v19`). Rover `v12` is at configuration `v13` and rover `v14` is at configuration `v15`. Both rovers have an empty store `v16`.
           
           The goal `new-axiom@0()` is a complex logical expression, which simplifies to the following:
           1. Both rovers `v12` and `v14` must be at their initial configurations `v13` and `v15` respectively. This is already true in the initial state.
           2. Both rovers `v12` and `v14` must have their store `v16` free. This is already true in the initial state.
           3. Three specific images must be received: `v17` in mode `v11`, `v18` in mode `v11`, and `v19` in mode `v11`.
           4. Two types of rocks (`v2` and `v6`) must have their analyses received. This means at least one rock of type `v2` and at least one rock of type `v6` must be analyzed and sent.
           
           Let's break down how to achieve the goal:
           - **Received Images**:
               - We need `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, and `receivedimage(v19, v11)`.
               - Rover `v14` can image `v19` from `#q0`, `v17` from `#q3`, and `v18` from `#q5`.
               - Rover `v12` can image `v17`, `v18`, `v19` from `#o3`.
               - To take an image, the camera needs to be calibrated.
               - After taking images, they need to be sent using `send_image`. Rover `v14` can communicate from `#q1` and Rover `v12` can communicate from `#q7`.
           
           - **Received Analyses**:
               - We need to analyze a rock of type `v2` and a rock of type `v6`.
               - Rocks of type `v2` are `v1`, `v3`, `v4`.
               - Rocks of type `v6` are `v5`, `v7`, `v8`.
               - To analyze a rock, a rover needs to sample it using `sample_rock`.
               - After sampling and analyzing, the analysis needs to be sent using `send_analysis`.
           
           **Plan Strategy:**
           1. **Analyze Rocks:** Rover `v14` is at `v15` and has various `above` predicates. It can sample `v3` (type `v2`) at `#q2` and `v5` (type `v6`) at `#q4`. After sampling, move `v14` to a communication configuration and send the analyses.
           2. **Take and Send Images:** Rover `v14` can take all three required images. It can calibrate, take the image, and then send it from a communication configuration.
           
           We need to be careful with the exact moves allowed. I will check the allowed `motion` predicates for each step.
           
           **Revised Detailed Plan for Rover v14:**
           
           *   **Analyze rocks:**
               1.  Move from `v15` to `#q2` to sample `v3` (type `v2`). (Action: `(move v14 v15 #o2 #q2)`)
               2.  Sample `v3`. (Action: `(sample_rock v14 #q2 v3 v16)`)
               3.  Move from `#q2` to `#q4` to sample `v5` (type `v6`). (Action: `(move v14 #q2 #t19 #q4)`) - This is a valid move.
               4.  Sample `v5`. (Action: `(sample_rock v14 #q4 v5 v16)`)
               5.  Move from `#q4` to `#q1` for communication. (Action: `(move v14 #q4 #o2 #q1)`) - This is a valid move.
               6.  Send analysis for `v3`. (Action: `(send_analysis v14 #q1 #y1 v9 v3)`)
               7.  Send analysis for `v5`. (Action: `(send_analysis v14 #q1 #y1 v9 v5)`)
           
           *   **Take and send images:**
               8.  Move from `#q1` to `#q0` to image `v19`. (Action: `(move v14 #q1 #o2 #q0)`)
               9.  Calibrate camera `v10` for `v19`. (Action: `(calibrate v14 #q0 #y0 v19 v10)`)
               10. Take image of `v19`. (Action: `(take_image v14 #q0 #y0 v19 v10 v11)`)
               11. Move from `#q0` to `#q1` for communication. (Action: `(move v14 #q0 #t2 #q1)`)
               12. Send image of `v19`. (Action: `(send_image v14 #q1 #y1 v9 v19 v11)`)
               13. Move from `#q1` to `#q3` to image `v17`. (Action: `(move v14 #q1 #t14 #q3)`)
               14. Calibrate camera `v10` for `v17`. (Action: `(calibrate v14 #q3 #y2 v17 v10)`)
               15. Take image of `v17`. (Action: `(take_image v14 #q3 #y2 v17 v10 v11)`)
               16. Move from `#q3` to `#q1` for communication. (Action: `(move v14 #q3 #t3 #q1)`)
               17. Send image of `v17`. (Action: `(send_image v14 #q1 #y1 v9 v17 v11)`)
               18. Move from `#q1` to `#q5` to image `v18`. (Action: `(move v14 #q1 #t10 #q5)`)
               19. Calibrate camera `v10` for `v18`. (Action: `(calibrate v14 #q5 #y3 v18 v10)`)
               20. Take image of `v18`. (Action: `(take_image v14 #q5 #y3 v18 v10 v11)`)
               21. Move from `#q5` to `#q1` for communication. (Action: `(move v14 #q5 #t4 #q1)`)
               22. Send image of `v18`. (Action: `(send_image v14 #q1 #y1 v9 v18 v11)`)
           
           --Plan--:
           (move v14 v15 #o2 #q2)
           (sample_rock v14 #q2 v3 v16)
           (move v14 #q2 #t19 #q4)
           (sample_rock v14 #q4 v5 v16)
           (move v14 #q4 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (send_analysis v14 #q1 #y1 v9 v5)
           (move v14 #q1 #o2 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #t2 #q1)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (move v14 #q1 #t14 #q3)
           (calibrate v14 #q3 #y2 v17 v10)
           (take_image v14 #q3 #y2 v17 v10 v11)
           (move v14 #q3 #t3 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (move v14 #q1 #t10 #q5)
           (calibrate v14 #q5 #y3 v18 v10)
           (take_image v14 #q5 #y3 v18 v10 v11)
           (move v14 #q5 #t4 #q1)
           (send_image v14 #q1 #y1 v9 v18 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     The scene contains two rovers, `v12` and `v14`, and a lander `v9`. Both rovers are equipped with a camera `v10` that supports mode `v11`. There are multiple rocks (`v1`, `v3`, `v4`, `v5`, `v7`, `v8`) and objectives (`v17`, `v18`, `v19`). Rover `v12` is at configuration `v13` and rover `v14` is at configuration `v15`. Both rovers have an empty store `v16`.
           
           The goal `new-axiom@0()` is a complex logical expression, which simplifies to the following:
           1. Both rovers `v12` and `v14` must be at their initial configurations `v13` and `v15` respectively. This is already true in the initial state.
           2. Both rovers `v12` and `v14` must have their store `v16` free. This is already true in the initial state.
           3. Three specific images must be received: `v17` in mode `v11`, `v18` in mode `v11`, and `v19` in mode `v11`.
           4. Two types of rocks (`v2` and `v6`) must have their analyses received. This means at least one rock of type `v2` and at least one rock of type `v6` must be analyzed and sent.
           
           The previous plan failed because the goal `new-axiom@0()` was not satisfied. This axiom has many sub-goals. The previous plan correctly identified and addressed the following:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedanalysis(?stone)` where `type(?stone, v2)` (addressed by sampling `v3`)
           - `receivedanalysis(?soil)` where `type(?soil, v6)` (addressed by sampling `v5`)
           
           The parts of `new-axiom@0()` that are static and already true in the initial state are:
           - `atconf(v12, v13)`
           - `atconf(v14, v15)`
           - `free(v12, v16)`
           - `free(v14, v16)`
           
           Let's re-verify the full goal condition to ensure no part was missed or implicitly assumed. The axiom `new-axiom@0()` is defined as a conjunction of many atoms. The crucial ones for this problem instance are:
           - `atconf(v12, v13)`: true initially
           - `atconf(v14, v15)`: true initially
           - `free(v12, v16)`: true initially, must remain true
           - `free(v14, v16)`: true initially, must remain true
           - `receivedimage(v17, v11)`: needs to be achieved
           - `receivedimage(v18, v11)`: needs to be achieved
           - `receivedimage(v19, v11)`: needs to be achieved
           - `type(?stone, v2)` and `receivedanalysis(?stone)`: needs to be achieved for some rock of type `v2`.
           - `type(?soil, v6)` and `receivedanalysis(?soil)`: needs to be achieved for some rock of type `v6`.
           
           The plan correctly identifies sampling `v3` (type `v2`) and `v5` (type `v6`) and sending their analyses. It also correctly identifies taking images of `v17`, `v18`, `v19` and sending them. The issue must be in the `free` condition for the stores.
           
           When a rover `sample_rock`s, its store `s` becomes `full`. To satisfy `free(v, s)` at the end, the rover must `drop_rock` after sending the analysis.
           
           **Revised Plan Strategy:**
           1.  **Analyze rocks:**
               1.  Move `v14` to `#q2`.
               2.  Sample `v3` (type `v2`). (Now `v14`'s store `v16` is `full`)
               3.  Move `v14` to `#q1` for communication.
               4.  Send analysis for `v3`.
               5.  **Drop rock** from `v14`'s store `v16` to make it `free` again.
               6.  Move `v14` to `#q4`.
               7.  Sample `v5` (type `v6`). (Now `v14`'s store `v16` is `full` again)
               8.  Move `v14` to `#q1` for communication.
               9.  Send analysis for `v5`.
               10. **Drop rock** from `v14`'s store `v16` to make it `free` again.
           
           2.  **Take and send images:** (This part of the plan should be mostly correct, as it doesn't involve the store)
               11. Move `v14` to `#q0`.
               12. Calibrate camera `v10` for `v19`.
               13. Take image of `v19`.
               14. Move `v14` to `#q1`.
               15. Send image of `v19`.
               16. Move `v14` to `#q3`.
               17. Calibrate camera `v10` for `v17`.
               18. Take image of `v17`.
               19. Move `v14` to `#q1`.
               20. Send image of `v17`.
               21. Move `v14` to `#q5`.
               22. Calibrate camera `v10` for `v18`.
               23. Take image of `v18`.
               24. Move `v14` to `#q1`.
               25. Send image of `v18`.
           
           Let's carefully check the `motion` predicates for rover `v14` to ensure valid moves between configurations.
           
           **Plan Construction based on Revised Strategy:**
           
           Start at `atconf(v14, v15)`.
           
           1.  Move to `#q2` for sampling `v3`: `(move v14 v15 #o2 #q2)`
           2.  Sample `v3`: `(sample_rock v14 #q2 v3 v16)`
           3.  Move to `#q1` for communication: `(move v14 #q2 #t1 #q1)`
           4.  Send analysis for `v3`: `(send_analysis v14 #q1 #y1 v9 v3)`
           5.  Drop rock to free store: `(drop_rock v14 v16)`
           6.  Move to `#q4` for sampling `v5`: `(move v14 #q1 #t6 #q4)`
           7.  Sample `v5`: `(sample_rock v14 #q4 v5 v16)`
           8.  Move to `#q1` for communication: `(move v14 #q4 #o2 #q1)`
           9.  Send analysis for `v5`: `(send_analysis v14 #q1 #y1 v9 v5)`
           10. Drop rock to free store: `(drop_rock v14 v16)`
           
           Now, `v14` is at `#q1`, and its store `v16` is `free`. Proceed with image collection.
           
           11. Move to `#q0` for imaging `v19`: `(move v14 #q1 #o2 #q0)`
           12. Calibrate for `v19`: `(calibrate v14 #q0 #y0 v19 v10)`
           13. Take image of `v19`: `(take_image v14 #q0 #y0 v19 v10 v11)`
           14. Move back to `#q1` for communication: `(move v14 #q0 #t2 #q1)`
           15. Send image of `v19`: `(send_image v14 #q1 #y1 v9 v19 v11)`
           
           16. Move to `#q3` for imaging `v17`: `(move v14 #q1 #t14 #q3)`
           17. Calibrate for `v17`: `(calibrate v14 #q3 #y2 v17 v10)`
           18. Take image of `v17`: `(take_image v14 #q3 #y2 v17 v10 v11)`
           19. Move back to `#q1` for communication: `(move v14 #q3 #t3 #q1)`
           20. Send image of `v17`: `(send_image v14 #q1 #y1 v9 v17 v11)`
           
           21. Move to `#q5` for imaging `v18`: `(move v14 #q1 #t10 #q5)`
           22. Calibrate for `v18`: `(calibrate v14 #q5 #y3 v18 v10)`
           23. Take image of `v18`: `(take_image v14 #q5 #y3 v18 v10 v11)`
           24. Move back to `#q1` for communication: `(move v14 #q5 #t4 #q1)`
           25. Send image of `v18`: `(send_image v14 #q1 #y1 v9 v18 v11)`
           
           At the end of this plan, `v14` is at `#q1`, which is not `v15`. However, the goal `atconf(v14, v15)` is part of the axiom, and it's already true in the initial state. The axiom `new-axiom@0()` is a big conjunction where many things are already true. It does not require the rover to be at `v15` at the *end* of the plan, only that `atconf(v14, v15)` is a true proposition in the overall context of the goal being satisfied. Since the goal is expressed as `Atom new-axiom@0()`, it means that the entire conjunction must hold *at the final state*. This means `atconf(v14, v15)` must be true. This implies that after all actions, `v14` must return to `v15`.
           
           Let's re-evaluate the interpretation of `Atom new-axiom@0()`. If the goal implies all listed conditions must be true at the *final state*, then `atconf(v14, v15)` must be true. This means after all operations, `v14` needs to move back to `v15`.
           
           **Final Revised Plan Strategy (with return to original config):**
           
           1.  **Analyze rocks, dropping them to keep store free:**
               1.  Move `v14` from `v15` to `#q2`.
               2.  Sample `v3`.
               3.  Move `v14` from `#q2` to `#q1`.
               4.  Send analysis for `v3`.
               5.  Drop rock.
               6.  Move `v14` from `#q1` to `#q4`.
               7.  Sample `v5`.
               8.  Move `v14` from `#q4` to `#q1`.
               9.  Send analysis for `v5`.
               10. Drop rock.
           
           2.  **Take and send images:**
               11. Move `v14` from `#q1` to `#q0`.
               12. Calibrate for `v19`.
               13. Take image of `v19`.
               14. Move `v14` from `#q0` to `#q1`.
               15. Send image of `v19`.
               16. Move `v14` from `#q1` to `#q3`.
               17. Calibrate for `v17`.
               18. Take image of `v17`.
               19. Move `v14` from `#q3` to `#q1`.
               20. Send image of `v17`.
               21. Move `v14` from `#q1` to `#q5`.
               22. Calibrate for `v18`.
               23. Take image of `v18`.
               24. Move `v14` from `#q5` to `#q1`.
               25. Send image of `v18`.
           
           3.  **Return `v14` to initial configuration:**
               26. Move `v14` from `#q1` to `v15`.
           
           Let's check the moves.
           
           Start at `atconf(v14, v15)`.
           
           --Plan--:
           (move v14 v15 #o2 #q2)
           (sample_rock v14 #q2 v3 v16)
           (move v14 #q2 #t1 #q1)
           (send_analysis v14 #q1 #y1 v9 v3)
           (drop_rock v14 v16)
           (move v14 #q1 #t6 #q4)
           (sample_rock v14 #q4 v5 v16)
           (move v14 #q4 #o2 #q1)
           (send_analysis v14 #q1 #y1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #q1 #o2 #q0)
           (calibrate v14 #q0 #y0 v19 v10)
           (take_image v14 #q0 #y0 v19 v10 v11)
           (move v14 #q0 #t2 #q1)
           (send_image v14 #q1 #y1 v9 v19 v11)
           (move v14 #q1 #t14 #q3)
           (calibrate v14 #q3 #y2 v17 v10)
           (take_image v14 #q3 #y2 v17 v10 v11)
           (move v14 #q3 #t3 #q1)
           (send_image v14 #q1 #y1 v9 v17 v11)
           (move v14 #q1 #t10 #q5)
           (calibrate v14 #q5 #y3 v18 v10)
           (take_image v14 #q5 #y3 v18 v10 v11)
           (move v14 #q5 #t4 #q1)
           (send_image v14 #q1 #y1 v9 v18 v11)
           (move v14 #q1 #t0 v15)

