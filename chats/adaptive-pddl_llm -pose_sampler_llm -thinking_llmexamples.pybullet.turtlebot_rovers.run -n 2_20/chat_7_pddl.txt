User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q1: object
           #q10: object
           #q11: object
           #q12: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t33: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y1: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v2: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom rover(v14)
           Atom type(v3, v2)
           Atom rock(v3)
           Atom rock(v8)
           Atom mode(v11)
           Atom rock(v7)
           Atom atconf(v14, v15)
           Atom store(v16)
           Atom conf(v12, v13)
           Atom rover(v12)
           Atom rock(v5)
           Atom onboard(v10, v12)
           Atom atconf(v12, v13)
           Atom camera(v10)
           Atom objective(v17)
           Atom rock(v1)
           Atom lander(v9)
           Atom type(v8, v6)
           Atom type(v4, v2)
           Atom objective(v18)
           Atom supports(v10, v11)
           Atom type(v5, v6)
           Atom conf(v14, v15)
           Atom onboard(v10, v14)
           Atom free(v12, v16)
           Atom type(v7, v6)
           Atom free(v14, v16)
           Atom type(v1, v2)
           Atom rock(v4)
           Atom motion(v14, v15, #o2, v15)
           Atom imagevisible(v12, #q1, #y0, v18)
           Atom imagerange(v12, #q1, v18)
           Atom conf(v12, #q1)
           Atom ray(#y0)
           Atom above(v12, #q0, v1)
           Atom conf(v12, #q0)
           Atom above(v12, #q12, v7)
           Atom conf(v12, #q12)
           Atom above(v12, #q2, v5)
           Atom conf(v12, #q2)
           Atom above(v12, #q10, v4)
           Atom conf(v12, #q10)
           Atom imagevisible(v12, #q3, #y1, v17)
           Atom imagerange(v12, #q3, v17)
           Atom conf(v12, #q3)
           Atom ray(#y1)
           Atom comvisible(v12, #q4, #y2, v9)
           Atom comrange(v12, #q4, v9)
           Atom conf(v12, #q4)
           Atom ray(#y2)
           Atom motion(v12, v13, #o2, v13)
           Atom imagevisible(v14, #q5, #y3, v17)
           Atom imagerange(v14, #q5, v17)
           Atom conf(v14, #q5)
           Atom ray(#y3)
           Atom comvisible(v14, #q8, #y4, v9)
           Atom comrange(v14, #q8, v9)
           Atom conf(v14, #q8)
           Atom ray(#y4)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom above(v14, #o5, v5)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #q9, #y5, v18)
           Atom imagerange(v14, #q9, v18)
           Atom conf(v14, #q9)
           Atom ray(#y5)
           Atom above(v12, #q11, v8)
           Atom conf(v12, #q11)
           Atom above(v14, #q7, v8)
           Atom conf(v14, #q7)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q6, v3)
           Atom conf(v12, #q6)
           Atom motion(v12, v13, #o2, #q12)
           Atom motion(v12, #q12, #o2, v13)
           Atom motion(v12, #q12, #o2, #q12)
           Atom motion(v14, #q8, #t9, v15)
           Atom motion(v14, v15, #o2, #q8)
           Atom motion(v14, #q8, #o2, #q8)
           Atom motion(v14, #q7, #t11, #q8)
           Atom motion(v14, #q8, #t18, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, v15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q6, #o2, v13)
           Atom motion(v12, #q12, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q12)
           Atom motion(v12, #q12, #t30, #q4)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, #q4, #t25, #q0)
           Atom motion(v12, #q4, #t31, #q6)
           Atom motion(v12, #q6, #t10, #q4)
           Atom motion(v12, #q0, #t5, #q4)
           Atom motion(v12, #q4, #t4, v13)
           Atom motion(v12, #q4, #t28, #q12)
           Atom motion(v12, v13, #o2, #q4)
           Atom motion(v14, #q8, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, v15, #t7, #q5)
           Atom motion(v14, #q5, #t13, #q8)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, #q5, #t8, #q7)
           Atom motion(v12, #q3, #o2, #q0)
           Atom motion(v12, #q3, #o2, #q12)
           Atom motion(v12, #q3, #t20, #q6)
           Atom motion(v12, #q3, #t23, #q4)
           Atom motion(v12, #q12, #o2, #q3)
           Atom motion(v12, #q6, #o2, #q3)
           Atom motion(v12, #q3, #o2, #q3)
           Atom motion(v12, #q3, #o2, v13)
           Atom motion(v12, #q0, #o2, #q3)
           Atom motion(v12, #q4, #o2, #q3)
           Atom motion(v12, v13, #t3, #q3)
           Atom motion(v12, #q3, #o2, #q1)
           Atom motion(v12, v13, #t2, #q1)
           Atom motion(v12, #q1, #t33, #q3)
           Atom motion(v12, #q1, #o2, v13)
           Atom motion(v12, #q6, #o2, #q1)
           Atom motion(v12, #q1, #o2, #q12)
           Atom motion(v12, #q1, #t22, #q4)
           Atom motion(v12, #q4, #t24, #q1)
           Atom motion(v12, #q1, #o2, #q1)
           Atom motion(v12, #q1, #t12, #q6)
           Atom motion(v12, #q12, #o2, #q1)
           Atom motion(v12, #q1, #t0, #q0)
           Atom motion(v12, #q0, #o2, #q1)
           Atom motion(v12, #q0, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q12)
           Atom motion(v12, #q12, #o2, #q11)
           Atom motion(v12, #q1, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q0)
           Atom motion(v12, #q11, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q11)
           Atom motion(v12, #q3, #o2, #q11)
           Atom motion(v12, #q11, #o2, v13)
           Atom motion(v12, #q11, #t29, #q4)
           Atom motion(v12, v13, #o2, #q11)
           Atom motion(v12, #q4, #t27, #q11)
           Atom motion(v12, #q6, #o2, #q11)
           Atom motion(v12, #q11, #o2, #q3)
           Atom motion(v14, #q9, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q9)
           Atom motion(v14, #q9, #o2, #q9)
           Atom motion(v14, #q8, #t14, #q9)
           Atom motion(v14, #q9, #t21, #q7)
           Atom motion(v14, #q9, #t17, #q8)
           Atom motion(v14, v15, #t19, #q9)
           Atom motion(v14, #q7, #o2, #q9)
           Atom motion(v14, #q9, #o2, v15)
           Atom motion(v12, #q1, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q0)
           Atom motion(v12, #q10, #o2, #q3)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q10, #t15, #q4)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q12, #o2, #q10)
           Atom motion(v12, v13, #t16, #q10)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q4, #t32, #q10)
           Atom motion(v12, #q10, #o2, #q1)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q11, #o2, #q10)
           Atom motion(v12, #q3, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q11)
           Atom motion(v12, #q2, #o2, #q1)
           Atom motion(v12, #q11, #o2, #q2)
           Atom motion(v12, #q4, #t26, #q2)
           Atom motion(v12, #q2, #o2, #q6)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q12, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q3)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q1, #t1, #q2)
           Atom motion(v12, #q2, #t6, #q4)
           Atom motion(v12, #q3, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q12)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q11)
           Atom motion(v12, #q0, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q6, #o2, #q2)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #q9, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #q8, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q9)
           Atom motion(v14, #o5, #o2, #q8)
           Atom motion(v14, #o5, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #q0 v1 v16))
           ((sample_rock v12 #q10 v4 v16))
           ((sample_rock v12 #q11 v8 v16))
           ((sample_rock v12 #q12 v7 v16))
           ((sample_rock v12 #q2 v5 v16))
           ((sample_rock v12 #q6 v3 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #q7 v8 v16))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q1))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q11))
           ((move v12 #q0 #o2 #q12))
           ((move v12 #q0 #o2 #q2))
           ((move v12 #q0 #o2 #q3))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t5 #q4))
           ((move v12 #q1 #o2 #q1))
           ((move v12 #q1 #o2 #q10))
           ((move v12 #q1 #o2 #q11))
           ((move v12 #q1 #o2 #q12))
           ((move v12 #q1 #o2 v13))
           ((move v12 #q1 #t0 #q0))
           ((move v12 #q1 #t1 #q2))
           ((move v12 #q1 #t12 #q6))
           ((move v12 #q1 #t22 #q4))
           ((move v12 #q1 #t33 #q3))
           ((move v12 #q10 #o2 #q0))
           ((move v12 #q10 #o2 #q1))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q11))
           ((move v12 #q10 #o2 #q12))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q3))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t15 #q4))
           ((move v12 #q11 #o2 #q0))
           ((move v12 #q11 #o2 #q1))
           ((move v12 #q11 #o2 #q10))
           ((move v12 #q11 #o2 #q11))
           ((move v12 #q11 #o2 #q12))
           ((move v12 #q11 #o2 #q2))
           ((move v12 #q11 #o2 #q3))
           ((move v12 #q11 #o2 #q6))
           ((move v12 #q11 #o2 v13))
           ((move v12 #q11 #t29 #q4))
           ((move v12 #q12 #o2 #q0))
           ((move v12 #q12 #o2 #q1))
           ((move v12 #q12 #o2 #q10))
           ((move v12 #q12 #o2 #q11))
           ((move v12 #q12 #o2 #q12))
           ((move v12 #q12 #o2 #q2))
           ((move v12 #q12 #o2 #q3))
           ((move v12 #q12 #o2 #q6))
           ((move v12 #q12 #o2 v13))
           ((move v12 #q12 #t30 #q4))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q1))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q11))
           ((move v12 #q2 #o2 #q12))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q3))
           ((move v12 #q2 #o2 #q6))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t6 #q4))
           ((move v12 #q3 #o2 #q0))
           ((move v12 #q3 #o2 #q1))
           ((move v12 #q3 #o2 #q10))
           ((move v12 #q3 #o2 #q11))
           ((move v12 #q3 #o2 #q12))
           ((move v12 #q3 #o2 #q2))
           ((move v12 #q3 #o2 #q3))
           ((move v12 #q3 #o2 v13))
           ((move v12 #q3 #t20 #q6))
           ((move v12 #q3 #t23 #q4))
           ((move v12 #q4 #o2 #q3))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #t24 #q1))
           ((move v12 #q4 #t25 #q0))
           ((move v12 #q4 #t26 #q2))
           ((move v12 #q4 #t27 #q11))
           ((move v12 #q4 #t28 #q12))
           ((move v12 #q4 #t31 #q6))
           ((move v12 #q4 #t32 #q10))
           ((move v12 #q4 #t4 v13))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q1))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q11))
           ((move v12 #q6 #o2 #q12))
           ((move v12 #q6 #o2 #q2))
           ((move v12 #q6 #o2 #q3))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #o2 v13))
           ((move v12 #q6 #t10 #q4))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q11))
           ((move v12 v13 #o2 #q12))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q4))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t16 #q10))
           ((move v12 v13 #t2 #q1))
           ((move v12 v13 #t3 #q3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 #q8))
           ((move v14 #o5 #o2 #q9))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q9))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #t13 #q8))
           ((move v14 #q5 #t8 #q7))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 #q9))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #t11 #q8))
           ((move v14 #q8 #o2 #o5))
           ((move v14 #q8 #o2 #q5))
           ((move v14 #q8 #o2 #q8))
           ((move v14 #q8 #t14 #q9))
           ((move v14 #q8 #t18 #q7))
           ((move v14 #q8 #t9 v15))
           ((move v14 #q9 #o2 #o5))
           ((move v14 #q9 #o2 #q5))
           ((move v14 #q9 #o2 #q9))
           ((move v14 #q9 #o2 v15))
           ((move v14 #q9 #t17 #q8))
           ((move v14 #q9 #t21 #q7))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q7))
           ((move v14 v15 #o2 #q8))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t19 #q9))
           ((move v14 v15 #t7 #q5))
           ((calibrate v12 #q1 #y0 v18 v10))
           ((calibrate v12 #q3 #y1 v17 v10))
           ((calibrate v14 #q5 #y3 v17 v10))
           ((calibrate v14 #q9 #y5 v18 v10))
           ((take_image v12 #q1 #y0 v18 v10 v11))
           ((take_image v12 #q3 #y1 v17 v10 v11))
           ((take_image v14 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q9 #y5 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q4 #y2 v9 v1))
           ((send_analysis v12 #q4 #y2 v9 v4))
           ((send_analysis v12 #q4 #y2 v9 v8))
           ((send_analysis v12 #q4 #y2 v9 v7))
           ((send_analysis v12 #q4 #y2 v9 v5))
           ((send_analysis v12 #q4 #y2 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q8 #y4 v9 v1))
           ((send_analysis v14 #q8 #y4 v9 v3))
           ((send_analysis v14 #q8 #y4 v9 v4))
           ((send_analysis v14 #q8 #y4 v9 v5))
           ((send_analysis v14 #q8 #y4 v9 v7))
           ((send_analysis v14 #q8 #y4 v9 v8))
           ((send_image v12 #q4 #y2 v9 v18 v11))
           ((send_image v12 #q4 #y2 v9 v17 v11))
           ((send_image v14 #q8 #y4 v9 v17 v11))
           ((send_image v14 #q8 #y4 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, here's my understanding of how we'll tackle this.  We've got to satisfy a bunch of conditions that boil down to getting some images, analyzing some samples, and making sure the rovers are back where they belong with storage free. The key here is parallel execution, but we'll outline the steps sequentially for clarity.
           
           **Initial Situation:**  Two rovers, `v12` and `v14`, are at specific configurations (`v13` and `v15` respectively), and both have free storage containers (`v16`).  We've also got images that can be taken and samples we can analyze.
           
           **Rover V14's Plan:**
           
           1.  **Preparation:**  `v14` needs to travel to `#q5` (move from `v15`).
           2.  **Calibration:** Calibrate the camera (`v10`) on `v14`.
           3.  **Image Acquisition:** Take an image of `v17`.
           4.  **Image Transmission:** Move to `#q8` and transmit the image of `v17`.
           5.  **Sampling:** Move to `#q7` and take a sample of `v8` (rock).
           6.  **Analysis and Transmission:**  Move back to `#q8`, transmit the analysis of `v8`.
           7. **Storage Management:** `v14` will drop its sampled rock to free its storage.
           8.  **Return Home:** Move back to the starting point, `v15`.
           
           **Rover V12's Plan:**
           
           1.  **Preparation:**  `v12` travels to `#q1`.
           2.  **Calibration:** Calibrate the camera (`v10`) on `v12`.
           3.  **Image Acquisition:** Take an image of `v18`.
           4.  **Image Transmission:** Move to `#q4` and transmit the image of `v18`.
           5.  **Sampling:** Move to `#q6` and take a sample of `v3` (rock).
           6.  **Analysis and Transmission:** Move back to `#q4`, transmit the analysis of `v3`.
           7. **Storage Management:** `v12` will drop its sampled rock to free its storage.
           8.  **Return Home:** Move back to the starting point, `v13`.
           
           **Important Considerations:**
           
           *   **Parallelism:** Both rovers can execute their tasks concurrently (in parallel). The order doesn't *absolutely* matter, but we can structure actions to reduce travel.
           *   **Storage Independence:** The rovers are working with *independent* storage containers.
           *   **Final State:** At the end, both rovers *must* be back in their initial locations, and the storage containers must be empty. This means post-sampling, we *must* have `drop_rock` actions in place.
           *  **Calibration Pre-take** The final plan now includes calibration steps just *before* image taking.
           *   This plan is now complete.
           
)

Model:     **A Comprehensive Plan to Achieve `new-axiom@0()`**
           
           Okay, here's my understanding of how we'll tackle this.  We've got to satisfy a bunch of conditions that boil down to getting some images, analyzing some samples, and making sure the rovers are back where they belong with storage free. The key here is parallel execution, but we'll outline the steps sequentially for clarity.
           
           **Initial Situation:**  Two rovers, `v12` and `v14`, are at specific configurations (`v13` and `v15` respectively), and both have free storage containers (`v16`).  We've also got images that can be taken and samples we can analyze.
           
           **Rover V14's Plan:**
           
           1.  **Preparation:**  `v14` needs to travel to `#q5` (move from `v15`).
           2.  **Calibration:** Calibrate the camera (`v10`) on `v14`.
           3.  **Image Acquisition:** Take an image of `v17`.
           4.  **Image Transmission:** Move to `#q8` and transmit the image of `v17`.
           5.  **Sampling:** Move to `#q7` and take a sample of `v8` (rock).
           6.  **Analysis and Transmission:**  Move back to `#q8`, transmit the analysis of `v8`.
           7. **Storage Management:** `v14` will drop its sampled rock to free its storage.
           8.  **Return Home:** Move back to the starting point, `v15`.
           
           **Rover V12's Plan:**
           
           1.  **Preparation:**  `v12` travels to `#q1`.
           2.  **Calibration:** Calibrate the camera (`v10`) on `v12`.
           3.  **Image Acquisition:** Take an image of `v18`.
           4.  **Image Transmission:** Move to `#q4` and transmit the image of `v18`.
           5.  **Sampling:** Move to `#q6` and take a sample of `v3` (rock).
           6.  **Analysis and Transmission:** Move back to `#q4`, transmit the analysis of `v3`.
           7. **Storage Management:** `v12` will drop its sampled rock to free its storage.
           8.  **Return Home:** Move back to the starting point, `v13`.
           
           **Important Considerations:**
           
           *   **Parallelism:** Both rovers can execute their tasks concurrently (in parallel). The order doesn't *absolutely* matter, but we can structure actions to reduce travel.
           *   **Storage Independence:** The rovers are working with *independent* storage containers.
           *   **Final State:** At the end, both rovers *must* be back in their initial locations, and the storage containers must be empty. This means post-sampling, we *must* have `drop_rock` actions in place.
           *  **Calibration Pre-take** The final plan now includes calibration steps just *before* image taking.
           *   This plan is now complete.
           

