User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #g3: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           p4: object
           p5: object
           p6: object
           p7: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v3: object
           v31: object
           v32: object
           v33: object
           v34: object
           v35: object
           v36: object
           v37: object
           v38: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           Some of the objects represent continuous values that have already been computed. In particular:
           Object p6 is a pose with position (-0.07, -0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v3 is a base configuration with (x, y, theta) = (-1.0, 0.0, 0.0).
           Object v11 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.3, -0.6), (0.3, 0.6)).
           Object p7 is a pose with position (0.07, 0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object v8 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.105, -0.105), (-0.035, -0.035)).
           Object v18 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.135, -0.135), (0.135, 0.135)).
           Object v16 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.035, 0.035), (0.105, 0.105)).
           Object v14 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((-0.105, 0.035), (-0.035, 0.105)).
           Object v9 is a pose with position (0.166, -0.354, 0.781) and quaternion (0.0, 0.0, -0.017, 1.0).
           Object v12 is an object with axis aligned bounding box (AABB = ((minx, miny), (maxx, maxy))): ((0.035, -0.105), (0.105, -0.035)).
           Object v17 is a pose with position (0.206, -0.528, 0.781) and quaternion (0.0, 0.0, 0.969, -0.247).
           Object v15 is a pose with position (0.051, -0.51, 0.781) and quaternion (0.0, 0.0, 0.984, 0.176).
           Object v5 is an arm configuration with joint values (0.677, -0.343, 1.2, -1.467, 1.242, -1.954, 2.223).
           Object v7 is an arm configuration with joint values (-2.135, 1.296, -3.75, -0.15, -10000.0, -0.1, -10000.0).
           Object v13 is a pose with position (-0.152, 0.236, 0.781) and quaternion (0.0, 0.0, 0.622, 0.783).
           Object p4 is a pose with position (0.07, -0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           Object p5 is a pose with position (-0.07, 0.07, 0.782) and quaternion (0.0, 0.0, 0.0, 1.0).
           
           You *must* use these values to select actions that are more likely to be executable (e.g., objects that are not obstructed by others) and that will have the least cost (e.g., objects that are closer to the robot or to the target region).
           
           The initial state is given by the following facts: 
           
           ```
           Atom atpose(v14, v15)
           Atom supported(v14, v15, v11)
           Atom stackable(v14, v18)
           Atom pose(v8, p6)
           Atom handempty(v6)
           Atom aconf(v6, v7)
           Atom arm(v6)
           Atom supported(v8, p6, v18)
           Atom kin(v31, v38, p7, v33, v34, v35)
           Atom atpose(v16, v17)
           Atom supported(v16, p7, v18)
           Atom pose(v14, v15)
           Atom atbconf(v3)
           Atom atpose(v8, v9)
           Atom controllable(v4)
           Atom atpose(v12, v13)
           Atom supported(v8, v9, v11)
           Atom kin(v31, v36, p5, v33, v34, v35)
           Atom stackable(v16, v10)
           Atom graspable(v8)
           Atom pose(v12, p4)
           Atom pose(v16, v17)
           Atom bconf(v3)
           Atom canmove()
           Atom ataconf(v6, v7)
           Atom graspable(v14)
           Atom stackable(v14, v10)
           Atom aconf(v4, v5)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom supported(v16, v17, v11)
           Atom supported(v12, p4, v18)
           Atom arm(v4)
           Atom kin(v31, v37, p6, v33, v34, v35)
           Atom stackable(v8, v10)
           Atom kin(v31, v32, p4, v33, v34, v35)
           Atom graspable(v12)
           Atom pose(v16, p7)
           Atom ataconf(v4, v5)
           Atom pose(v8, v9)
           Atom pose(v12, v13)
           Atom stackable(v8, v18)
           Atom supported(v14, p5, v18)
           Atom stackable(v12, v18)
           Atom pose(v14, p5)
           Atom graspable(v16)
           Atom handempty(v4)
           Atom stackable(v16, v18)
           Atom pose(v16, #o2)
           Atom supported(v16, #o2, v18)
           Atom grasp(v16, #g2)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom supported(v12, #o2, v18)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v18)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom grasp(v14, #g3)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom grasp(v12, #g0)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g1)
           Atom supported(v16, #o2, v10)
           Atom supported(v14, #o2, v18)
           Atom bconf(#q7)
           Atom atraj(#t7)
           Atom kin(v4, v16, v17, #g2, #q7, #t7)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v16, p7, #g2, #q1, #t1)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v14, v15, #g3, #q5, #t5)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v14, p5, #g3, #q2, #t2)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v12, p4, #g0, #q0, #t0)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v12, v13, #g0, #q3, #t3)
           Atom bconf(#q6)
           Atom atraj(#t6)
           Atom kin(v4, v8, p6, #g1, #q6, #t6)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v8, v9, #g1, #q4, #t4)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q3)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q3)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q0)
           Atom basemotion(#q0, #o0, v3)
           Atom btraj(#t20)
           Atom basemotion(#q3, #t20, #q0)
           Atom basemotion(#q0, #o0, #q3)
           Atom basemotion(#q0, #o0, #q0)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q2, #o0, #q3)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q2)
           Atom basemotion(#q3, #o0, #q2)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q0, #o0, #q2)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q5, #o0, #q0)
           Atom btraj(#t22)
           Atom basemotion(#q5, #t22, #q2)
           Atom btraj(#t21)
           Atom basemotion(#q0, #t21, #q5)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q5, #o0, #q3)
           Atom basemotion(#q5, #o0, #q5)
           Atom btraj(#t13)
           Atom basemotion(v3, #t13, #q5)
           Atom basemotion(#q5, #o0, v3)
           Atom basemotion(#q1, #o0, #q5)
           Atom basemotion(#q1, #o0, #q2)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q1)
           Atom basemotion(#q1, #o0, v3)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q2, #o0, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q3, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t16)
           Atom basemotion(#q7, #t16, #q1)
           Atom basemotion(#q7, #o0, #q5)
           Atom basemotion(#q7, #o0, v3)
           Atom basemotion(#q7, #o0, #q3)
           Atom basemotion(#q7, #o0, #q2)
           Atom basemotion(#q7, #o0, #q0)
           Atom btraj(#t17)
           Atom basemotion(#q2, #t17, #q7)
           Atom basemotion(#q7, #o0, #q7)
           Atom basemotion(#q5, #o0, #q7)
           Atom btraj(#t15)
           Atom basemotion(v3, #t15, #q7)
           Atom basemotion(#q3, #o0, #q7)
           Atom basemotion(#q1, #o0, #q7)
           Atom basemotion(#q0, #o0, #q7)
           Atom basemotion(#q4, #o0, #q2)
           Atom basemotion(#q4, #o0, #q7)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q7, #o0, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q5, #o0, #q4)
           Atom btraj(#t12)
           Atom basemotion(v3, #t12, #q4)
           Atom basemotion(#q6, #o0, v3)
           Atom basemotion(#q2, #o0, #q6)
           Atom basemotion(#q6, #o0, #q2)
           Atom basemotion(#q7, #o0, #q6)
           Atom basemotion(#q6, #o0, #q5)
           Atom basemotion(#q5, #o0, #q6)
           Atom basemotion(#q6, #o0, #q7)
           Atom basemotion(#q6, #o0, #q0)
           Atom basemotion(#q3, #o0, #q6)
           Atom basemotion(#q0, #o0, #q6)
           Atom basemotion(#q1, #o0, #q6)
           Atom basemotion(#q6, #o0, #q4)
           Atom btraj(#t19)
           Atom basemotion(#q6, #t19, #q3)
           Atom basemotion(#q6, #o0, #q6)
           Atom btraj(#t14)
           Atom basemotion(v3, #t14, #q6)
           Atom basemotion(#q6, #o0, #q1)
           Atom btraj(#t18)
           Atom basemotion(#q4, #t18, #q6)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v14, #o2, #g3, #o3, #o4)
           Atom kin(v4, v16, #o2, #g2, #o3, #o4)
           Atom kin(v4, v8, #o2, #g1, #o3, #o4)
           Atom kin(v4, v12, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q4)
           Atom basemotion(#o3, #o0, #q7)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #q6)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#q7, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#q6, #o0, #o3)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v18)
               Atom on(v12, v18)
               Atom on(v14, v18)
               Atom on(v16, v18)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 #q6 #o0))
           ((move_base #o3 #q7 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q3 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q6 #o0))
           ((move_base #q0 #q7 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q5 #t21))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 #q5 #o0))
           ((move_base #q1 #q6 #o0))
           ((move_base #q1 #q7 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q1 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 #q6 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q7 #t17))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q2 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 #q6 #o0))
           ((move_base #q3 #q7 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q0 #t20))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 #q7 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q4 #q6 #t18))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q4 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 #q6 #o0))
           ((move_base #q5 #q7 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q2 #t22))
           ((move_base #q6 #o3 #o0))
           ((move_base #q6 #q0 #o0))
           ((move_base #q6 #q1 #o0))
           ((move_base #q6 #q2 #o0))
           ((move_base #q6 #q4 #o0))
           ((move_base #q6 #q5 #o0))
           ((move_base #q6 #q6 #o0))
           ((move_base #q6 #q7 #o0))
           ((move_base #q6 v3 #o0))
           ((move_base #q6 #q3 #t19))
           ((move_base #q7 #o3 #o0))
           ((move_base #q7 #q0 #o0))
           ((move_base #q7 #q2 #o0))
           ((move_base #q7 #q3 #o0))
           ((move_base #q7 #q4 #o0))
           ((move_base #q7 #q5 #o0))
           ((move_base #q7 #q6 #o0))
           ((move_base #q7 #q7 #o0))
           ((move_base #q7 v3 #o0))
           ((move_base #q7 #q1 #t16))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q2 #t10))
           ((move_base v3 #q3 #t11))
           ((move_base v3 #q4 #t12))
           ((move_base v3 #q5 #t13))
           ((move_base v3 #q6 #t14))
           ((move_base v3 #q7 #t15))
           ((move_base v3 #q0 #t8))
           ((move_base v3 #q1 #t9))
           ((pick v4 v12 #o2 #g0 #o3 #o4))
           ((place v4 v12 #o2 #g0 #o3 #o4))
           ((pick v4 v12 p4 #g0 #q0 #t0))
           ((place v4 v12 p4 #g0 #q0 #t0))
           ((pick v4 v12 v13 #g0 #q3 #t3))
           ((place v4 v12 v13 #g0 #q3 #t3))
           ((pick v4 v14 #o2 #g3 #o3 #o4))
           ((place v4 v14 #o2 #g3 #o3 #o4))
           ((pick v4 v14 p5 #g3 #q2 #t2))
           ((place v4 v14 p5 #g3 #q2 #t2))
           ((pick v4 v14 v15 #g3 #q5 #t5))
           ((place v4 v14 v15 #g3 #q5 #t5))
           ((pick v4 v16 #o2 #g2 #o3 #o4))
           ((place v4 v16 #o2 #g2 #o3 #o4))
           ((pick v4 v16 p7 #g2 #q1 #t1))
           ((place v4 v16 p7 #g2 #q1 #t1))
           ((pick v4 v16 v17 #g2 #q7 #t7))
           ((place v4 v16 v17 #g2 #q7 #t7))
           ((pick v4 v8 #o2 #g1 #o3 #o4))
           ((place v4 v8 #o2 #g1 #o3 #o4))
           ((pick v4 v8 p6 #g1 #q6 #t6))
           ((place v4 v8 p6 #g1 #q6 #t6))
           ((pick v4 v8 v9 #g1 #q4 #t4))
           ((place v4 v8 v9 #g1 #q4 #t4))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

(Thoughts: **Finalized Plan for Object Placement**
           
           Okay, so the goal is to get these four objects, `v8`, `v12`, `v14`, and `v16`, all onto `v18`. They're currently on `v11`, a large surface, and we need to move them to `v18`, which, based on its AABB (bounding box), looks like a smaller table or cabinet top. Given the sizes of the objects and the available space on `v18`, it should be straightforward. I'm going to leverage the existing fixed poses, `p4`, `p5`, `p6`, and `p7` supported by `v18` for `v12`, `v14`, `v8`, and `v16` respectively, to simplify things. No need to calculate new poses here.
           
           The plan is going to be a straightforward pick-and-place sequence, using the robot arm `v4`. The `handempty(v4)` precondition is satisfied to start.
           
           Here's the sequence I've decided on:
           
           1.  **Move Base to `q7`:** Get the base to `q7`, the base configuration associated with `v16`'s pick.
           2.  **Pick `v16` from `v17`:**  The `kin` predicates indicate this is possible with the given base config.
           3.  **Move Base to `q1`:** Get the base to `q1`, the base configuration for placing `v16`.
           4.  **Place `v16` at `p7`:**  `p7` is a fixed pose supported by `v18`.
           5.  **Move Base to `q5`:** Get the base to `q5`, the base configuration for picking `v14`.
           6.  **Pick `v14` from `v15`:**
           7.  **Move Base to `q2`:** Get the base to `q2`, the base config for `v14`'s place.
           8.  **Place `v14` at `p5`:** `p5` is a fixed pose on `v18`.
           9.  **Move Base to `q4`:** Get the base to `q4` for picking `v8`.
           10. **Pick `v8` from `v9`:**
           11. **Move Base to `q6`:** Get the base to `q6` for `v8`'s place.
           12. **Place `v8` at `p6`:** `p6` is a fixed pose on `v18`.
           13. **Move Base to `q3`:** Get the base to `q3` for `v12`'s pick.
           14. **Pick `v12` from `v13`:**
           15. **Move Base to `q0`:** Get the base to `q0` for `v12`'s place.
           16. **Place `v12` at `p4`:** `p4` is a fixed pose on `v18`.
           
           This order minimizes base movement.  We're going from the initial base position `v3` to `q7`. We do `v3->q7->q1->q5->q2->q4->q6->q3->q0` or something very similar to minimize trajectory paths. It is just a sequential pick-place of each object without continuous parameters since we are using only fixed poses. No `#o2` poses are used. The `basemotion` facts provided indicate that these base movements are achievable. With these actions the `on(vX,v18)` is set for all of our objects.
           
)

Model:     **Finalized Plan for Object Placement**
           
           Okay, so the goal is to get these four objects, `v8`, `v12`, `v14`, and `v16`, all onto `v18`. They're currently on `v11`, a large surface, and we need to move them to `v18`, which, based on its AABB (bounding box), looks like a smaller table or cabinet top. Given the sizes of the objects and the available space on `v18`, it should be straightforward. I'm going to leverage the existing fixed poses, `p4`, `p5`, `p6`, and `p7` supported by `v18` for `v12`, `v14`, `v8`, and `v16` respectively, to simplify things. No need to calculate new poses here.
           
           The plan is going to be a straightforward pick-and-place sequence, using the robot arm `v4`. The `handempty(v4)` precondition is satisfied to start.
           
           Here's the sequence I've decided on:
           
           1.  **Move Base to `q7`:** Get the base to `q7`, the base configuration associated with `v16`'s pick.
           2.  **Pick `v16` from `v17`:**  The `kin` predicates indicate this is possible with the given base config.
           3.  **Move Base to `q1`:** Get the base to `q1`, the base configuration for placing `v16`.
           4.  **Place `v16` at `p7`:**  `p7` is a fixed pose supported by `v18`.
           5.  **Move Base to `q5`:** Get the base to `q5`, the base configuration for picking `v14`.
           6.  **Pick `v14` from `v15`:**
           7.  **Move Base to `q2`:** Get the base to `q2`, the base config for `v14`'s place.
           8.  **Place `v14` at `p5`:** `p5` is a fixed pose on `v18`.
           9.  **Move Base to `q4`:** Get the base to `q4` for picking `v8`.
           10. **Pick `v8` from `v9`:**
           11. **Move Base to `q6`:** Get the base to `q6` for `v8`'s place.
           12. **Place `v8` at `p6`:** `p6` is a fixed pose on `v18`.
           13. **Move Base to `q3`:** Get the base to `q3` for `v12`'s pick.
           14. **Pick `v12` from `v13`:**
           15. **Move Base to `q0`:** Get the base to `q0` for `v12`'s place.
           16. **Place `v12` at `p4`:** `p4` is a fixed pose on `v18`.
           
           This order minimizes base movement.  We're going from the initial base position `v3` to `q7`. We do `v3->q7->q1->q5->q2->q4->q6->q3->q0` or something very similar to minimize trajectory paths. It is just a sequential pick-place of each object without continuous parameters since we are using only fixed poses. No `#o2` poses are used. The `basemotion` facts provided indicate that these base movements are achievable. With these actions the `on(vX,v18)` is set for all of our objects.
           

