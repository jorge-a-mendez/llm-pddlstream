User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #g0: object
           #g1: object
           #g2: object
           #o0: object
           #o2: object
           #o3: object
           #o4: object
           #p0: object
           #p1: object
           #p2: object
           #q0: object
           #q1: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #t0: object
           #t1: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t2: object
           #t3: object
           #t4: object
           #t5: object
           #t6: object
           #t7: object
           #t8: object
           #t9: object
           @sink: object
           @stove: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v20: object
           v21: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom canmove()
           Atom bconf(v3)
           Atom atbconf(v3)
           Atom arm(v4)
           Atom aconf(v4, v5)
           Atom handempty(v4)
           Atom ataconf(v4, v5)
           Atom controllable(v4)
           Atom arm(v6)
           Atom aconf(v6, v7)
           Atom handempty(v6)
           Atom ataconf(v6, v7)
           Atom graspable(v8)
           Atom pose(v8, v9)
           Atom atpose(v8, v9)
           Atom stackable(v8, v10)
           Atom supported(v8, v9, v11)
           Atom graspable(v12)
           Atom pose(v12, v13)
           Atom atpose(v12, v13)
           Atom stackable(v12, v10)
           Atom supported(v12, v13, v11)
           Atom graspable(v14)
           Atom pose(v14, v15)
           Atom atpose(v14, v15)
           Atom stackable(v14, v10)
           Atom supported(v14, v15, v11)
           Atom stackable(v8, v16)
           Atom stackable(v12, v16)
           Atom stackable(v14, v16)
           Atom btraj(#o0)
           Atom basemotion(v3, #o0, v3)
           Atom pose(v8, #p1)
           Atom supported(v8, #p1, v16)
           Atom pose(v14, #o2)
           Atom supported(v14, #o2, v10)
           Atom pose(v14, #p2)
           Atom supported(v14, #p2, v16)
           Atom pose(v12, #p0)
           Atom supported(v12, #p0, v16)
           Atom grasp(v14, #g2)
           Atom pose(v12, #o2)
           Atom supported(v12, #o2, v10)
           Atom grasp(v12, #g1)
           Atom pose(v8, #o2)
           Atom supported(v8, #o2, v10)
           Atom grasp(v8, #g0)
           Atom bconf(#q5)
           Atom atraj(#t5)
           Atom kin(v4, v14, v15, #g2, #q5, #t5)
           Atom bconf(#q4)
           Atom atraj(#t4)
           Atom kin(v4, v14, #p2, #g2, #q4, #t4)
           Atom bconf(#q2)
           Atom atraj(#t2)
           Atom kin(v4, v12, v13, #g1, #q2, #t2)
           Atom bconf(#q1)
           Atom atraj(#t1)
           Atom kin(v4, v12, #p0, #g1, #q1, #t1)
           Atom bconf(#q0)
           Atom atraj(#t0)
           Atom kin(v4, v8, v9, #g0, #q0, #t0)
           Atom bconf(#q3)
           Atom atraj(#t3)
           Atom kin(v4, v8, #p1, #g0, #q3, #t3)
           Atom basemotion(#q5, #o0, v3)
           Atom btraj(#t11)
           Atom basemotion(v3, #t11, #q5)
           Atom basemotion(#q5, #o0, #q5)
           Atom basemotion(#q0, #o0, v3)
           Atom basemotion(#q0, #o0, #q0)
           Atom btraj(#t6)
           Atom basemotion(v3, #t6, #q0)
           Atom basemotion(#q5, #o0, #q0)
           Atom basemotion(#q0, #o0, #q5)
           Atom basemotion(#q2, #o0, #q0)
           Atom basemotion(#q2, #o0, v3)
           Atom basemotion(#q2, #o0, #q2)
           Atom basemotion(#q0, #o0, #q2)
           Atom btraj(#t8)
           Atom basemotion(v3, #t8, #q2)
           Atom basemotion(#q5, #o0, #q2)
           Atom basemotion(#q2, #o0, #q5)
           Atom basemotion(#q4, #o0, v3)
           Atom basemotion(#q4, #o0, #q5)
           Atom basemotion(#q4, #o0, #q0)
           Atom basemotion(#q4, #o0, #q2)
           Atom btraj(#t10)
           Atom basemotion(v3, #t10, #q4)
           Atom basemotion(#q4, #o0, #q4)
           Atom btraj(#t15)
           Atom basemotion(#q5, #t15, #q4)
           Atom basemotion(#q0, #o0, #q4)
           Atom basemotion(#q2, #o0, #q4)
           Atom basemotion(#q3, #o0, v3)
           Atom basemotion(#q3, #o0, #q5)
           Atom basemotion(#q3, #o0, #q0)
           Atom btraj(#t12)
           Atom basemotion(#q3, #t12, #q2)
           Atom basemotion(#q3, #o0, #q3)
           Atom btraj(#t9)
           Atom basemotion(v3, #t9, #q3)
           Atom basemotion(#q5, #o0, #q3)
           Atom btraj(#t16)
           Atom basemotion(#q0, #t16, #q3)
           Atom basemotion(#q2, #o0, #q3)
           Atom basemotion(#q4, #o0, #q3)
           Atom basemotion(#q3, #o0, #q4)
           Atom basemotion(#q1, #o0, #q3)
           Atom basemotion(#q1, #o0, v3)
           Atom btraj(#t13)
           Atom basemotion(#q1, #t13, #q5)
           Atom basemotion(#q1, #o0, #q0)
           Atom basemotion(#q1, #o0, #q2)
           Atom basemotion(#q3, #o0, #q1)
           Atom btraj(#t7)
           Atom basemotion(v3, #t7, #q1)
           Atom basemotion(#q5, #o0, #q1)
           Atom basemotion(#q0, #o0, #q1)
           Atom btraj(#t14)
           Atom basemotion(#q2, #t14, #q1)
           Atom basemotion(#q1, #o0, #q1)
           Atom basemotion(#q4, #o0, #q1)
           Atom basemotion(#q1, #o0, #q4)
           Atom bconf(#o3)
           Atom atraj(#o4)
           Atom kin(v4, v12, #o2, #g1, #o3, #o4)
           Atom kin(v4, v14, #o2, #g2, #o3, #o4)
           Atom kin(v4, v8, #o2, #g0, #o3, #o4)
           Atom basemotion(#o3, #o0, #q0)
           Atom basemotion(#o3, #o0, v3)
           Atom basemotion(#q0, #o0, #o3)
           Atom basemotion(#o3, #o0, #o3)
           Atom basemotion(v3, #o0, #o3)
           Atom basemotion(#q2, #o0, #o3)
           Atom basemotion(#o3, #o0, #q2)
           Atom basemotion(#q5, #o0, #o3)
           Atom basemotion(#o3, #o0, #q5)
           Atom basemotion(#q3, #o0, #o3)
           Atom basemotion(#o3, #o0, #q3)
           Atom basemotion(#q1, #o0, #o3)
           Atom basemotion(#o3, #o0, #q1)
           Atom basemotion(#q4, #o0, #o3)
           Atom basemotion(#o3, #o0, #q4)
           ```
           
           The goal expression is `Conjunction
               Atom on(v8, v16)
               Atom on(v12, v16)
               Atom on(v14, v16)`. Given these elements, the list of available action instances is:
           
           ```
           ((move_base #o3 #o3 #o0))
           ((move_base #o3 #q0 #o0))
           ((move_base #o3 #q1 #o0))
           ((move_base #o3 #q2 #o0))
           ((move_base #o3 #q3 #o0))
           ((move_base #o3 #q4 #o0))
           ((move_base #o3 #q5 #o0))
           ((move_base #o3 v3 #o0))
           ((move_base #q0 #o3 #o0))
           ((move_base #q0 #q0 #o0))
           ((move_base #q0 #q1 #o0))
           ((move_base #q0 #q2 #o0))
           ((move_base #q0 #q4 #o0))
           ((move_base #q0 #q5 #o0))
           ((move_base #q0 v3 #o0))
           ((move_base #q0 #q3 #t16))
           ((move_base #q1 #o3 #o0))
           ((move_base #q1 #q0 #o0))
           ((move_base #q1 #q1 #o0))
           ((move_base #q1 #q2 #o0))
           ((move_base #q1 #q3 #o0))
           ((move_base #q1 #q4 #o0))
           ((move_base #q1 v3 #o0))
           ((move_base #q1 #q5 #t13))
           ((move_base #q2 #o3 #o0))
           ((move_base #q2 #q0 #o0))
           ((move_base #q2 #q2 #o0))
           ((move_base #q2 #q3 #o0))
           ((move_base #q2 #q4 #o0))
           ((move_base #q2 #q5 #o0))
           ((move_base #q2 v3 #o0))
           ((move_base #q2 #q1 #t14))
           ((move_base #q3 #o3 #o0))
           ((move_base #q3 #q0 #o0))
           ((move_base #q3 #q1 #o0))
           ((move_base #q3 #q3 #o0))
           ((move_base #q3 #q4 #o0))
           ((move_base #q3 #q5 #o0))
           ((move_base #q3 v3 #o0))
           ((move_base #q3 #q2 #t12))
           ((move_base #q4 #o3 #o0))
           ((move_base #q4 #q0 #o0))
           ((move_base #q4 #q1 #o0))
           ((move_base #q4 #q2 #o0))
           ((move_base #q4 #q3 #o0))
           ((move_base #q4 #q4 #o0))
           ((move_base #q4 #q5 #o0))
           ((move_base #q4 v3 #o0))
           ((move_base #q5 #o3 #o0))
           ((move_base #q5 #q0 #o0))
           ((move_base #q5 #q1 #o0))
           ((move_base #q5 #q2 #o0))
           ((move_base #q5 #q3 #o0))
           ((move_base #q5 #q5 #o0))
           ((move_base #q5 v3 #o0))
           ((move_base #q5 #q4 #t15))
           ((move_base v3 #o3 #o0))
           ((move_base v3 v3 #o0))
           ((move_base v3 #q4 #t10))
           ((move_base v3 #q5 #t11))
           ((move_base v3 #q0 #t6))
           ((move_base v3 #q1 #t7))
           ((move_base v3 #q2 #t8))
           ((move_base v3 #q3 #t9))
           ((pick v4 v12 #o2 #g1 #o3 #o4))
           ((place v4 v12 #o2 #g1 #o3 #o4))
           ((pick v4 v12 #p0 #g1 #q1 #t1))
           ((place v4 v12 #p0 #g1 #q1 #t1))
           ((pick v4 v12 v13 #g1 #q2 #t2))
           ((place v4 v12 v13 #g1 #q2 #t2))
           ((pick v4 v14 #o2 #g2 #o3 #o4))
           ((place v4 v14 #o2 #g2 #o3 #o4))
           ((pick v4 v14 #p2 #g2 #q4 #t4))
           ((place v4 v14 #p2 #g2 #q4 #t4))
           ((pick v4 v14 v15 #g2 #q5 #t5))
           ((place v4 v14 v15 #g2 #q5 #t5))
           ((pick v4 v8 #o2 #g0 #o3 #o4))
           ((place v4 v8 #o2 #g0 #o3 #o4))
           ((pick v4 v8 #p1 #g0 #q3 #t3))
           ((place v4 v8 #p1 #g0 #q3 #t3))
           ((pick v4 v8 v9 #g0 #q0 #t0))
           ((place v4 v8 v9 #g0 #q0 #t0))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes a robot with two arms, v4 and v6. Currently, both arms are empty. There are three graspable objects: v8, v12, and v14. They are all initially on v11, supported by their respective poses v9, v13, and v15. The goal is to move all three objects (v8, v12, v14) onto the surface v16. We can see various kinematic configurations (kin) for arm v4 to pick and place these objects at different poses. The 'on' predicate is an axiom, meaning it is true if the object is supported by a pose on a surface and is at that pose.
           
           To achieve the goal `on(v8, v16)`, `on(v12, v16)`, and `on(v14, v16)`, we need to pick up each object from its current location and place it onto a pose supported by v16.
           
           Let's break down the plan for each object:
           
           1.  **For v8:**
               *   Currently atpose(v8, v9).
               *   Goal: atpose(v8, #p1) (since supported(v8, #p1, v16)).
               *   First, move the base to a configuration where v4 can pick v8 from v9. From the kin facts, `kin(v4, v8, v9, #g0, #q0, #t0)` indicates we need to be at `atbconf(#q0)`. The current base config is `v3`. So, `move_base v3 #q0 #t6`.
               *   Then, pick v8: `pick v4 v8 v9 #g0 #q0 #t0`.
               *   Next, move the base to a configuration where v4 can place v8 at #p1. From the kin facts, `kin(v4, v8, #p1, #g0, #q3, #t3)` indicates we need to be at `atbconf(#q3)`. So, `move_base #q0 #q3 #t16`.
               *   Finally, place v8: `place v4 v8 #p1 #g0 #q3 #t3`.
           
           2.  **For v12:**
               *   Currently atpose(v12, v13).
               *   Goal: atpose(v12, #p0) (since supported(v12, #p0, v16)).
               *   First, move the base to a configuration where v4 can pick v12 from v13. From the kin facts, `kin(v4, v12, v13, #g1, #q2, #t2)` indicates we need to be at `atbconf(#q2)`. The current base config is `#q3`. So, `move_base #q3 #q2 #t12`.
               *   Then, pick v12: `pick v4 v12 v13 #g1 #q2 #t2`.
               *   Next, move the base to a configuration where v4 can place v12 at #p0. From the kin facts, `kin(v4, v12, #p0, #g1, #q1, #t1)` indicates we need to be at `atbconf(#q1)`. So, `move_base #q2 #q1 #t14`.
               *   Finally, place v12: `place v4 v12 #p0 #g1 #q1 #t1`.
           
           3.  **For v14:**
               *   Currently atpose(v14, v15).
               *   Goal: atpose(v14, #p2) (since supported(v14, #p2, v16)).
               *   First, move the base to a configuration where v4 can pick v14 from v15. From the kin facts, `kin(v4, v14, v15, #g2, #q5, #t5)` indicates we need to be at `atbconf(#q5)`. The current base config is `#q1`. So, `move_base #q1 #q5 #t13`.
               *   Then, pick v14: `pick v4 v14 v15 #g2 #q5 #t5`.
               *   Next, move the base to a configuration where v4 can place v14 at #p2. From the kin facts, `kin(v4, v14, #p2, #g2, #q4, #t4)` indicates we need to be at `atbconf(#q4)`. So, `move_base #q5 #q4 #t15`.
               *   Finally, place v14: `place v4 v14 #p2 #g2 #q4 #t4`.
           
           The `canmove()` predicate is set to true after each pick/place action and set to false before a move_base action. This allows for movement between object manipulations.
           
           --Plan--:
           (move_base v3 #q0 #t6)
           (pick v4 v8 v9 #g0 #q0 #t0)
           (move_base #q0 #q3 #t16)
           (place v4 v8 #p1 #g0 #q3 #t3)
           (move_base #q3 #q2 #t12)
           (pick v4 v12 v13 #g1 #q2 #t2)
           (move_base #q2 #q1 #t14)
           (place v4 v12 #p0 #g1 #q1 #t1)
           (move_base #q1 #q5 #t13)
           (pick v4 v14 v15 #g2 #q5 #t5)
           (move_base #q5 #q4 #t15)
           (place v4 v14 #p2 #g2 #q4 #t4)

