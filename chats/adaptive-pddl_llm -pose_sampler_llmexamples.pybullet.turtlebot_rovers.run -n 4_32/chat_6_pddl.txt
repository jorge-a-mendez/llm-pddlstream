User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o5: object
           #q0: object
           #q10: object
           #q11: object
           #q12: object
           #q13: object
           #q14: object
           #q15: object
           #q16: object
           #q17: object
           #q18: object
           #q2: object
           #q3: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #q9: object
           #t0: object
           #t10: object
           #t11: object
           #t12: object
           #t13: object
           #t14: object
           #t15: object
           #t16: object
           #t17: object
           #t18: object
           #t19: object
           #t2: object
           #t20: object
           #t21: object
           #t22: object
           #t23: object
           #t24: object
           #t25: object
           #t26: object
           #t27: object
           #t28: object
           #t29: object
           #t3: object
           #t30: object
           #t31: object
           #t32: object
           #t35: object
           #t36: object
           #t37: object
           #t38: object
           #t39: object
           #t4: object
           #t40: object
           #t41: object
           #t42: object
           #t5: object
           #t7: object
           #t8: object
           #t9: object
           #y0: object
           #y2: object
           #y3: object
           #y4: object
           #y5: object
           #y6: object
           #y7: object
           #y8: object
           #y9: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom free(v12, v16)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom rock(v3)
           Atom rock(v4)
           Atom objective(v20)
           Atom objective(v19)
           Atom rock(v8)
           Atom rover(v14)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom objective(v18)
           Atom free(v14, v16)
           Atom type(v7, v6)
           Atom rock(v5)
           Atom conf(v12, v13)
           Atom lander(v9)
           Atom onboard(v10, v14)
           Atom rock(v1)
           Atom objective(v17)
           Atom onboard(v10, v12)
           Atom mode(v11)
           Atom camera(v10)
           Atom type(v5, v6)
           Atom rock(v7)
           Atom type(v1, v2)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #q17, v7)
           Atom conf(v12, #q17)
           Atom above(v14, #q7, v7)
           Atom conf(v14, #q7)
           Atom imagevisible(v14, #q16, #y9, v17)
           Atom imagerange(v14, #q16, v17)
           Atom conf(v14, #q16)
           Atom ray(#y9)
           Atom imagevisible(v12, #q5, #y3, v17)
           Atom imagerange(v12, #q5, v17)
           Atom conf(v12, #q5)
           Atom ray(#y3)
           Atom above(v12, #q9, v1)
           Atom conf(v12, #q9)
           Atom above(v14, #q13, v1)
           Atom conf(v14, #q13)
           Atom above(v12, #o5, v8)
           Atom conf(v12, #o5)
           Atom above(v14, #q4, v8)
           Atom conf(v14, #q4)
           Atom imagevisible(v14, #q14, #y7, v19)
           Atom imagerange(v14, #q14, v19)
           Atom conf(v14, #q14)
           Atom ray(#y7)
           Atom imagevisible(v12, #q0, #y0, v19)
           Atom imagerange(v12, #q0, v19)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom imagevisible(v14, #q12, #y6, v20)
           Atom imagerange(v14, #q12, v20)
           Atom conf(v14, #q12)
           Atom ray(#y6)
           Atom comvisible(v12, #q6, #y4, v9)
           Atom comrange(v12, #q6, v9)
           Atom conf(v12, #q6)
           Atom ray(#y4)
           Atom comvisible(v14, #q3, #y2, v9)
           Atom comrange(v14, #q3, v9)
           Atom conf(v14, #q3)
           Atom ray(#y2)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v14, #o5, v4)
           Atom conf(v14, #o5)
           Atom above(v12, #q2, v4)
           Atom conf(v12, #q2)
           Atom above(v12, #q18, v5)
           Atom conf(v12, #q18)
           Atom above(v14, #q11, v5)
           Atom conf(v14, #q11)
           Atom above(v14, #o5, v3)
           Atom above(v12, #q8, v3)
           Atom conf(v12, #q8)
           Atom imagevisible(v12, #q10, #y5, v18)
           Atom imagerange(v12, #q10, v18)
           Atom conf(v12, #q10)
           Atom ray(#y5)
           Atom imagevisible(v14, #q15, #y8, v18)
           Atom imagerange(v14, #q15, v18)
           Atom conf(v14, #q15)
           Atom ray(#y8)
           Atom motion(v12, v13, #o2, #q17)
           Atom motion(v12, #q17, #o2, #q17)
           Atom motion(v12, #q17, #o2, v13)
           Atom motion(v12, #q17, #o2, #q9)
           Atom motion(v12, v13, #o2, #q9)
           Atom motion(v12, #q9, #o2, v13)
           Atom motion(v12, #q9, #o2, #q17)
           Atom motion(v12, #q9, #o2, #q9)
           Atom motion(v14, #q15, #o2, v15)
           Atom motion(v14, #q15, #o2, #q15)
           Atom motion(v14, v15, #o2, #q15)
           Atom motion(v12, v13, #t7, #q5)
           Atom motion(v12, #q5, #o2, v13)
           Atom motion(v12, #q5, #o2, #q5)
           Atom motion(v12, #q17, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q5)
           Atom motion(v12, #q5, #o2, #q17)
           Atom motion(v12, v13, #o2, #q10)
           Atom motion(v12, #q9, #o2, #q10)
           Atom motion(v12, #q17, #o2, #q10)
           Atom motion(v12, #q10, #o2, #q5)
           Atom motion(v12, #q10, #o2, v13)
           Atom motion(v12, #q10, #o2, #q9)
           Atom motion(v12, #q10, #o2, #q10)
           Atom motion(v12, #q5, #t32, #q10)
           Atom motion(v12, #q10, #o2, #q17)
           Atom motion(v14, #q15, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q15)
           Atom motion(v14, v15, #t15, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v12, #q18, #o2, #q18)
           Atom motion(v12, v13, #o2, #q18)
           Atom motion(v12, #q17, #o2, #q18)
           Atom motion(v12, #q5, #o2, #q18)
           Atom motion(v12, #q18, #o2, v13)
           Atom motion(v12, #q18, #o2, #q10)
           Atom motion(v12, #q18, #o2, #q9)
           Atom motion(v12, #q9, #o2, #q18)
           Atom motion(v12, #q18, #o2, #q5)
           Atom motion(v12, #q18, #o2, #q17)
           Atom motion(v12, #q10, #o2, #q18)
           Atom motion(v14, #q15, #o2, #q16)
           Atom motion(v14, v15, #t36, #q16)
           Atom motion(v14, #q16, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q16)
           Atom motion(v14, #q16, #t38, #q15)
           Atom motion(v14, #q16, #o2, v15)
           Atom motion(v14, #q16, #o2, #q7)
           Atom motion(v14, #q13, #o2, #q7)
           Atom motion(v14, v15, #t18, #q13)
           Atom motion(v14, #q13, #t28, #q15)
           Atom motion(v14, #q16, #o2, #q13)
           Atom motion(v14, #q13, #o2, v15)
           Atom motion(v14, #q13, #o2, #q13)
           Atom motion(v14, #q15, #o2, #q13)
           Atom motion(v14, #q7, #o2, #q13)
           Atom motion(v14, #q13, #t29, #q16)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v12, #q8, #o2, #q5)
           Atom motion(v12, #q17, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q17)
           Atom motion(v12, #q8, #o2, #q9)
           Atom motion(v12, v13, #t40, #q8)
           Atom motion(v12, #q9, #o2, #q8)
           Atom motion(v12, #q8, #o2, #q10)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, #q5, #o2, #q8)
           Atom motion(v12, #q10, #o2, #q8)
           Atom motion(v12, #q18, #o2, #q8)
           Atom motion(v12, #q8, #t39, #q18)
           Atom motion(v12, #q6, #t13, #q9)
           Atom motion(v12, #q10, #o2, #q6)
           Atom motion(v12, #q8, #t9, #q6)
           Atom motion(v12, #q6, #t35, #q17)
           Atom motion(v12, #q6, #o2, #q18)
           Atom motion(v12, #q6, #o2, #q5)
           Atom motion(v12, #q17, #t30, #q6)
           Atom motion(v12, #q5, #o2, #q6)
           Atom motion(v12, #q18, #t41, #q6)
           Atom motion(v12, v13, #o2, #q6)
           Atom motion(v12, #q6, #t4, v13)
           Atom motion(v12, #q6, #t12, #q8)
           Atom motion(v12, #q6, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q6)
           Atom motion(v12, #q9, #t10, #q6)
           Atom motion(v14, #q4, #o2, #q16)
           Atom motion(v14, #q4, #o2, #q13)
           Atom motion(v14, #q16, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q4)
           Atom motion(v14, #q13, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q4)
           Atom motion(v14, #q15, #o2, #q4)
           Atom motion(v14, v15, #t14, #q4)
           Atom motion(v14, #q4, #o2, v15)
           Atom motion(v14, #q12, #o2, #q15)
           Atom motion(v14, v15, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q12)
           Atom motion(v14, #q15, #o2, #q12)
           Atom motion(v14, #q13, #t26, #q12)
           Atom motion(v14, #q12, #o2, #q7)
           Atom motion(v14, #q4, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q4)
           Atom motion(v14, #q12, #o2, v15)
           Atom motion(v14, #q12, #o2, #q16)
           Atom motion(v14, #q7, #o2, #q12)
           Atom motion(v14, #q12, #o2, #q13)
           Atom motion(v14, #q12, #o2, #q12)
           Atom motion(v12, #q0, #o2, #q8)
           Atom motion(v12, #q17, #o2, #q0)
           Atom motion(v12, #q9, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q18)
           Atom motion(v12, #q0, #o2, #q10)
           Atom motion(v12, #q6, #o2, #q0)
           Atom motion(v12, #q0, #o2, #q9)
           Atom motion(v12, #q0, #o2, #q6)
           Atom motion(v12, #q0, #o2, #q17)
           Atom motion(v12, #q0, #o2, v13)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, #q10, #t31, #q0)
           Atom motion(v12, #q0, #o2, #q5)
           Atom motion(v12, #q18, #o2, #q0)
           Atom motion(v12, #q5, #o2, #q0)
           Atom motion(v12, v13, #t5, #q0)
           Atom motion(v12, #q8, #o2, #q0)
           Atom motion(v14, #q13, #t19, #q3)
           Atom motion(v14, #q15, #t23, #q3)
           Atom motion(v14, v15, #o2, #q3)
           Atom motion(v14, #q3, #t2, #q4)
           Atom motion(v14, #q3, #t16, v15)
           Atom motion(v14, #q16, #t24, #q3)
           Atom motion(v14, #q3, #o2, #q16)
           Atom motion(v14, #q3, #o2, #q7)
           Atom motion(v14, #q4, #t3, #q3)
           Atom motion(v14, #q3, #t20, #q13)
           Atom motion(v14, #q3, #o2, #q15)
           Atom motion(v14, #q7, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q3)
           Atom motion(v14, #q3, #o2, #q12)
           Atom motion(v14, #q12, #t21, #q3)
           Atom motion(v14, #q12, #o2, #q11)
           Atom motion(v14, v15, #o2, #q11)
           Atom motion(v14, #q4, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q7)
           Atom motion(v14, #q11, #o2, #q12)
           Atom motion(v14, #q16, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q15)
           Atom motion(v14, #q11, #o2, #q13)
           Atom motion(v14, #q3, #t25, #q11)
           Atom motion(v14, #q7, #o2, #q11)
           Atom motion(v14, #q11, #o2, v15)
           Atom motion(v14, #q11, #o2, #q11)
           Atom motion(v14, #q15, #o2, #q11)
           Atom motion(v14, #q11, #o2, #q16)
           Atom motion(v14, #q11, #o2, #q4)
           Atom motion(v14, #q13, #o2, #q11)
           Atom motion(v14, #q11, #t17, #q3)
           Atom motion(v14, #q14, #o2, #q16)
           Atom motion(v14, v15, #o2, #q14)
           Atom motion(v14, #q14, #t22, #q3)
           Atom motion(v14, #q12, #o2, #q14)
           Atom motion(v14, #q14, #o2, v15)
           Atom motion(v14, #q3, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q11)
           Atom motion(v14, #q14, #o2, #q15)
           Atom motion(v14, #q14, #t42, #q12)
           Atom motion(v14, #q7, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q14)
           Atom motion(v14, #q11, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q13)
           Atom motion(v14, #q15, #t37, #q14)
           Atom motion(v14, #q14, #o2, #q4)
           Atom motion(v14, #q4, #o2, #q14)
           Atom motion(v14, #q13, #t27, #q14)
           Atom motion(v14, #q16, #o2, #q14)
           Atom motion(v14, #q14, #o2, #q7)
           Atom motion(v12, #q2, #o2, #q5)
           Atom motion(v12, #q8, #o2, #q2)
           Atom motion(v12, v13, #o2, #q2)
           Atom motion(v12, #q5, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q9)
           Atom motion(v12, #q18, #o2, #q2)
           Atom motion(v12, #q17, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q8)
           Atom motion(v12, #q9, #o2, #q2)
           Atom motion(v12, #q2, #o2, #q10)
           Atom motion(v12, #q6, #t11, #q2)
           Atom motion(v12, #q2, #o2, #q0)
           Atom motion(v12, #q2, #o2, #q2)
           Atom motion(v12, #q2, #o2, v13)
           Atom motion(v12, #q2, #t8, #q6)
           Atom motion(v12, #q2, #o2, #q18)
           Atom motion(v12, #q2, #o2, #q17)
           Atom motion(v12, #q0, #t0, #q2)
           Atom motion(v12, #q10, #o2, #q2)
           Atom motion(v14, #o5, #o2, #q14)
           Atom motion(v14, #o5, #o2, #q4)
           Atom motion(v14, #o5, #o2, #q12)
           Atom motion(v14, #q13, #o2, #o5)
           Atom motion(v14, #q3, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #q12, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #q4, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q13)
           Atom motion(v14, #q16, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q11)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #q15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q16)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, #q15)
           Atom motion(v14, #q14, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q3)
           Atom motion(v14, #q11, #o2, #o5)
           Atom motion(v12, #q9, #o2, #o5)
           Atom motion(v12, #q6, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q6)
           Atom motion(v12, #o5, #o2, #q9)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q5)
           Atom motion(v12, #o5, #o2, #q2)
           Atom motion(v12, #q17, #o2, #o5)
           Atom motion(v12, #q18, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q18)
           Atom motion(v12, #q10, #o2, #o5)
           Atom motion(v12, #q2, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q17)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q10)
           Atom motion(v12, #q5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #q0, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q17 v7 v16))
           ((sample_rock v12 #q18 v5 v16))
           ((sample_rock v12 #q2 v4 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v12 #q9 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #q11 v5 v16))
           ((sample_rock v14 #q13 v1 v16))
           ((sample_rock v14 #q4 v8 v16))
           ((sample_rock v14 #q7 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q17))
           ((move v12 #o5 #o2 #q18))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q17))
           ((move v12 #q0 #o2 #q18))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q2))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q17))
           ((move v12 #q10 #o2 #q18))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t31 #q0))
           ((move v12 #q17 #o2 #o5))
           ((move v12 #q17 #o2 #q0))
           ((move v12 #q17 #o2 #q10))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q18))
           ((move v12 #q17 #o2 #q2))
           ((move v12 #q17 #o2 #q5))
           ((move v12 #q17 #o2 #q8))
           ((move v12 #q17 #o2 #q9))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q17 #t30 #q6))
           ((move v12 #q18 #o2 #o5))
           ((move v12 #q18 #o2 #q0))
           ((move v12 #q18 #o2 #q10))
           ((move v12 #q18 #o2 #q17))
           ((move v12 #q18 #o2 #q18))
           ((move v12 #q18 #o2 #q2))
           ((move v12 #q18 #o2 #q5))
           ((move v12 #q18 #o2 #q8))
           ((move v12 #q18 #o2 #q9))
           ((move v12 #q18 #o2 v13))
           ((move v12 #q18 #t41 #q6))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q17))
           ((move v12 #q2 #o2 #q18))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t8 #q6))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q17))
           ((move v12 #q5 #o2 #q18))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t32 #q10))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q18))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #t11 #q2))
           ((move v12 #q6 #t12 #q8))
           ((move v12 #q6 #t13 #q9))
           ((move v12 #q6 #t35 #q17))
           ((move v12 #q6 #t4 v13))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q17))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t39 #q18))
           ((move v12 #q8 #t9 #q6))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q17))
           ((move v12 #q9 #o2 #q18))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t10 #q6))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q18))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t40 #q8))
           ((move v12 v13 #t5 #q0))
           ((move v12 v13 #t7 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q4))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t17 #q3))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t21 #q3))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t19 #q3))
           ((move v14 #q13 #t26 #q12))
           ((move v14 #q13 #t27 #q14))
           ((move v14 #q13 #t28 #q15))
           ((move v14 #q13 #t29 #q16))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t22 #q3))
           ((move v14 #q14 #t42 #q12))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t23 #q3))
           ((move v14 #q15 #t37 #q14))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q4))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t24 #q3))
           ((move v14 #q16 #t38 #q15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #t16 v15))
           ((move v14 #q3 #t2 #q4))
           ((move v14 #q3 #t20 #q13))
           ((move v14 #q3 #t25 #q11))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q16))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t3 #q3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q4))
           ((move v14 v15 #t15 #q7))
           ((move v14 v15 #t18 #q13))
           ((move v14 v15 #t36 #q16))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q10 #y5 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #q12 #y6 v20 v10))
           ((calibrate v14 #q14 #y7 v19 v10))
           ((calibrate v14 #q15 #y8 v18 v10))
           ((calibrate v14 #q16 #y9 v17 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q10 #y5 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q12 #y6 v20 v10 v11))
           ((take_image v14 #q14 #y7 v19 v10 v11))
           ((take_image v14 #q15 #y8 v18 v10 v11))
           ((take_image v14 #q16 #y9 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y4 v9 v8))
           ((send_analysis v12 #q6 #y4 v9 v7))
           ((send_analysis v12 #q6 #y4 v9 v5))
           ((send_analysis v12 #q6 #y4 v9 v4))
           ((send_analysis v12 #q6 #y4 v9 v3))
           ((send_analysis v12 #q6 #y4 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_image v12 #q6 #y4 v9 v19 v11))
           ((send_image v12 #q6 #y4 v9 v18 v11))
           ((send_image v12 #q6 #y4 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v20 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` requires that:
           1. Both rovers (v12 and v14) are at some configuration. This is already true in the initial state.
           2. Both rovers have a free store. This is true for v16 for both rovers.
           3. Several images are received for objectives v17, v18, v19, v20 in mode v11.
           4. Several rocks (type v2 and type v6) have their analysis received.
           
           To achieve the goal, the rovers need to:
           - Take images of the objectives v17, v18, v19, v20.
           - Send these images to the lander.
           - Sample and analyze rocks v1, v3 (type v2, stone) and v5, v7, v8 (type v6, soil).
           - Send the analysis of these rocks to the lander.
           
           Let's break down the plan:
           
           **Rover v12:**
           - Can sample rocks v1, v3, v4, v5, v7, v8.
           - Can take images of v17, v18, v19.
           - Can communicate with the lander from #q6.
           
           **Rover v14:**
           - Can sample rocks v1, v3, v4, v5, v7, v8.
           - Can take images of v17, v18, v19, v20.
           - Can communicate with the lander from #q3.
           
           We need to ensure `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)`.
           And `receivedanalysis(v1)`, `receivedanalysis(v3)`, `receivedanalysis(v4)` (type v2) and `receivedanalysis(v5)`, `receivedanalysis(v7)`, `receivedanalysis(v8)` (type v6).
           
           Let's use rover v12 to handle v17, v18, v19 and some rocks, and rover v14 to handle v20 and other rocks.
           
           **Rover v12 Plan:**
           1. Calibrate camera for v17 (at #q5).
           2. Take image of v17.
           3. Move to #q6 for communication.
           4. Send image of v17.
           5. Calibrate camera for v19 (at #q0).
           6. Take image of v19.
           7. Send image of v19.
           8. Calibrate camera for v18 (at #q10).
           9. Take image of v18.
           10. Send image of v18.
           11. Move to a rock location (e.g., #q9 for v1).
           12. Sample rock v1.
           13. Move to #q6 to send analysis.
           14. Send analysis of v1.
           15. Move to another rock location (e.g., #q8 for v3).
           16. Sample rock v3.
           17. Move to #q6.
           18. Send analysis of v3.
           19. Move to another rock location (e.g., #q2 for v4).
           20. Sample rock v4.
           21. Move to #q6.
           22. Send analysis of v4.
           23. Move to #q18 for rock v5.
           24. Sample rock v5.
           25. Move to #q6.
           26. Send analysis of v5.
           27. Move to #q17 for rock v7.
           28. Sample rock v7.
           29. Move to #q6.
           30. Send analysis of v7.
           31. Move to #o5 for rock v8.
           32. Sample rock v8.
           33. Move to #q6.
           34. Send analysis of v8.
           
           **Rover v14 Plan (just for v20 for now):**
           1. Calibrate camera for v20 (at #q12).
           2. Take image of v20.
           3. Move to #q3 for communication.
           4. Send image of v20.
           
           The goal `new-axiom@0()` only requires at least one analysis of `type(?stone, v2)` (which is `v1`, `v3`, `v4`) and `type(?soil, v6)` (which is `v5`, `v7`, `v8`). So we don't need to sample *all* of them.
           Let's simplify.
           
           We need:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `receivedanalysis(?stone)` where `type(?stone, v2)` (e.g., `v1`)
           - `receivedanalysis(?soil)` where `type(?soil, v6)` (e.g., `v5`)
           
           Rover v12 is at `v13`. Rover v14 is at `v15`.
           
           **Revised Plan:**
           
           **Rover v12:**
           1. Move to `#q5` (to view `v17`).
           2. Calibrate camera `v10` for `v17`.
           3. Take image of `v17`.
           4. Move to `#q0` (to view `v19`).
           5. Calibrate camera `v10` for `v19`.
           6. Take image of `v19`.
           7. Move to `#q10` (to view `v18`).
           8. Calibrate camera `v10` for `v18`.
           9. Take image of `v18`.
           10. Move to `#q6` (to communicate).
           11. Send image of `v17`.
           12. Send image of `v19`.
           13. Send image of `v18`.
           14. Move to `#q9` (to sample `v1`, a type `v2` rock).
           15. Sample rock `v1`.
           16. Move to `#q6` (to communicate).
           17. Send analysis of `v1`.
           18. Move to `#q18` (to sample `v5`, a type `v6` rock).
           19. Sample rock `v5`.
           20. Move to `#q6` (to communicate).
           21. Send analysis of `v5`.
           
           **Rover v14:**
           1. Move to `#q12` (to view `v20`).
           2. Calibrate camera `v10` for `v20`.
           3. Take image of `v20`.
           4. Move to `#q3` (to communicate).
           5. Send image of `v20`.
           
           This plan achieves all the required `receivedimage` and `receivedanalysis` predicates for the `new-axiom@0()` goal.
           
           --Plan--:
           (move v12 v13 #t7 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #o2 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #t31 #q10)
           (calibrate v12 #q10 #y5 v18 v10)
           (take_image v12 #q10 #y5 v18 v10 v11)
           (move v12 #q10 #o2 #q6)
           (send_image v12 #q6 #y4 v9 v17 v11)
           (send_image v12 #q6 #y4 v9 v19 v11)
           (send_image v12 #q6 #y4 v9 v18 v11)
           (move v12 #q6 #t13 #q9)
           (sample_rock v12 #q9 v1 v16)
           (move v12 #q9 #t10 #q6)
           (send_analysis v12 #q6 #y4 v9 v1)
           (move v12 #q6 #o2 #q18)
           (sample_rock v12 #q18 v5 v16)
           (move v12 #q18 #t41 #q6)
           (send_analysis v12 #q6 #y4 v9 v5)
           (move v14 v15 #o2 #q12)
           (calibrate v14 #q12 #y6 v20 v10)
           (take_image v14 #q12 #y6 v20 v10 v11)
           (move v14 #q12 #t21 #q3)
           (send_image v14 #q3 #y2 v9 v20 v11)

User:      The plan you provided contains the following invalid actions: `(move v12 #q0 #t31 #q10)`. Recall that you are only allowed to use valid actions from the following list: 
           
           ```
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q17 v7 v16))
           ((sample_rock v12 #q18 v5 v16))
           ((sample_rock v12 #q2 v4 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v12 #q9 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #q11 v5 v16))
           ((sample_rock v14 #q13 v1 v16))
           ((sample_rock v14 #q4 v8 v16))
           ((sample_rock v14 #q7 v7 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q10))
           ((move v12 #o5 #o2 #q17))
           ((move v12 #o5 #o2 #q18))
           ((move v12 #o5 #o2 #q2))
           ((move v12 #o5 #o2 #q5))
           ((move v12 #o5 #o2 #q6))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 #q9))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q10))
           ((move v12 #q0 #o2 #q17))
           ((move v12 #q0 #o2 #q18))
           ((move v12 #q0 #o2 #q5))
           ((move v12 #q0 #o2 #q6))
           ((move v12 #q0 #o2 #q8))
           ((move v12 #q0 #o2 #q9))
           ((move v12 #q0 #o2 v13))
           ((move v12 #q0 #t0 #q2))
           ((move v12 #q10 #o2 #o5))
           ((move v12 #q10 #o2 #q10))
           ((move v12 #q10 #o2 #q17))
           ((move v12 #q10 #o2 #q18))
           ((move v12 #q10 #o2 #q2))
           ((move v12 #q10 #o2 #q5))
           ((move v12 #q10 #o2 #q6))
           ((move v12 #q10 #o2 #q8))
           ((move v12 #q10 #o2 #q9))
           ((move v12 #q10 #o2 v13))
           ((move v12 #q10 #t31 #q0))
           ((move v12 #q17 #o2 #o5))
           ((move v12 #q17 #o2 #q0))
           ((move v12 #q17 #o2 #q10))
           ((move v12 #q17 #o2 #q17))
           ((move v12 #q17 #o2 #q18))
           ((move v12 #q17 #o2 #q2))
           ((move v12 #q17 #o2 #q5))
           ((move v12 #q17 #o2 #q8))
           ((move v12 #q17 #o2 #q9))
           ((move v12 #q17 #o2 v13))
           ((move v12 #q17 #t30 #q6))
           ((move v12 #q18 #o2 #o5))
           ((move v12 #q18 #o2 #q0))
           ((move v12 #q18 #o2 #q10))
           ((move v12 #q18 #o2 #q17))
           ((move v12 #q18 #o2 #q18))
           ((move v12 #q18 #o2 #q2))
           ((move v12 #q18 #o2 #q5))
           ((move v12 #q18 #o2 #q8))
           ((move v12 #q18 #o2 #q9))
           ((move v12 #q18 #o2 v13))
           ((move v12 #q18 #t41 #q6))
           ((move v12 #q2 #o2 #o5))
           ((move v12 #q2 #o2 #q0))
           ((move v12 #q2 #o2 #q10))
           ((move v12 #q2 #o2 #q17))
           ((move v12 #q2 #o2 #q18))
           ((move v12 #q2 #o2 #q2))
           ((move v12 #q2 #o2 #q5))
           ((move v12 #q2 #o2 #q8))
           ((move v12 #q2 #o2 #q9))
           ((move v12 #q2 #o2 v13))
           ((move v12 #q2 #t8 #q6))
           ((move v12 #q5 #o2 #o5))
           ((move v12 #q5 #o2 #q0))
           ((move v12 #q5 #o2 #q17))
           ((move v12 #q5 #o2 #q18))
           ((move v12 #q5 #o2 #q2))
           ((move v12 #q5 #o2 #q5))
           ((move v12 #q5 #o2 #q6))
           ((move v12 #q5 #o2 #q8))
           ((move v12 #q5 #o2 #q9))
           ((move v12 #q5 #o2 v13))
           ((move v12 #q5 #t32 #q10))
           ((move v12 #q6 #o2 #o5))
           ((move v12 #q6 #o2 #q0))
           ((move v12 #q6 #o2 #q10))
           ((move v12 #q6 #o2 #q18))
           ((move v12 #q6 #o2 #q5))
           ((move v12 #q6 #o2 #q6))
           ((move v12 #q6 #t11 #q2))
           ((move v12 #q6 #t12 #q8))
           ((move v12 #q6 #t13 #q9))
           ((move v12 #q6 #t35 #q17))
           ((move v12 #q6 #t4 v13))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q0))
           ((move v12 #q8 #o2 #q10))
           ((move v12 #q8 #o2 #q17))
           ((move v12 #q8 #o2 #q2))
           ((move v12 #q8 #o2 #q5))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 #q9))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t39 #q18))
           ((move v12 #q8 #t9 #q6))
           ((move v12 #q9 #o2 #o5))
           ((move v12 #q9 #o2 #q0))
           ((move v12 #q9 #o2 #q10))
           ((move v12 #q9 #o2 #q17))
           ((move v12 #q9 #o2 #q18))
           ((move v12 #q9 #o2 #q2))
           ((move v12 #q9 #o2 #q5))
           ((move v12 #q9 #o2 #q8))
           ((move v12 #q9 #o2 #q9))
           ((move v12 #q9 #o2 v13))
           ((move v12 #q9 #t10 #q6))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q10))
           ((move v12 v13 #o2 #q17))
           ((move v12 v13 #o2 #q18))
           ((move v12 v13 #o2 #q2))
           ((move v12 v13 #o2 #q6))
           ((move v12 v13 #o2 #q9))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t40 #q8))
           ((move v12 v13 #t5 #q0))
           ((move v12 v13 #t7 #q5))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q11))
           ((move v14 #o5 #o2 #q12))
           ((move v14 #o5 #o2 #q13))
           ((move v14 #o5 #o2 #q14))
           ((move v14 #o5 #o2 #q15))
           ((move v14 #o5 #o2 #q16))
           ((move v14 #o5 #o2 #q3))
           ((move v14 #o5 #o2 #q4))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #q11 #o2 #o5))
           ((move v14 #q11 #o2 #q11))
           ((move v14 #q11 #o2 #q12))
           ((move v14 #q11 #o2 #q13))
           ((move v14 #q11 #o2 #q14))
           ((move v14 #q11 #o2 #q15))
           ((move v14 #q11 #o2 #q16))
           ((move v14 #q11 #o2 #q4))
           ((move v14 #q11 #o2 #q7))
           ((move v14 #q11 #o2 v15))
           ((move v14 #q11 #t17 #q3))
           ((move v14 #q12 #o2 #o5))
           ((move v14 #q12 #o2 #q11))
           ((move v14 #q12 #o2 #q12))
           ((move v14 #q12 #o2 #q13))
           ((move v14 #q12 #o2 #q14))
           ((move v14 #q12 #o2 #q15))
           ((move v14 #q12 #o2 #q16))
           ((move v14 #q12 #o2 #q4))
           ((move v14 #q12 #o2 #q7))
           ((move v14 #q12 #o2 v15))
           ((move v14 #q12 #t21 #q3))
           ((move v14 #q13 #o2 #o5))
           ((move v14 #q13 #o2 #q11))
           ((move v14 #q13 #o2 #q13))
           ((move v14 #q13 #o2 #q4))
           ((move v14 #q13 #o2 #q7))
           ((move v14 #q13 #o2 v15))
           ((move v14 #q13 #t19 #q3))
           ((move v14 #q13 #t26 #q12))
           ((move v14 #q13 #t27 #q14))
           ((move v14 #q13 #t28 #q15))
           ((move v14 #q13 #t29 #q16))
           ((move v14 #q14 #o2 #o5))
           ((move v14 #q14 #o2 #q11))
           ((move v14 #q14 #o2 #q13))
           ((move v14 #q14 #o2 #q14))
           ((move v14 #q14 #o2 #q15))
           ((move v14 #q14 #o2 #q16))
           ((move v14 #q14 #o2 #q4))
           ((move v14 #q14 #o2 #q7))
           ((move v14 #q14 #o2 v15))
           ((move v14 #q14 #t22 #q3))
           ((move v14 #q14 #t42 #q12))
           ((move v14 #q15 #o2 #o5))
           ((move v14 #q15 #o2 #q11))
           ((move v14 #q15 #o2 #q12))
           ((move v14 #q15 #o2 #q13))
           ((move v14 #q15 #o2 #q15))
           ((move v14 #q15 #o2 #q16))
           ((move v14 #q15 #o2 #q4))
           ((move v14 #q15 #o2 #q7))
           ((move v14 #q15 #o2 v15))
           ((move v14 #q15 #t23 #q3))
           ((move v14 #q15 #t37 #q14))
           ((move v14 #q16 #o2 #o5))
           ((move v14 #q16 #o2 #q11))
           ((move v14 #q16 #o2 #q12))
           ((move v14 #q16 #o2 #q13))
           ((move v14 #q16 #o2 #q14))
           ((move v14 #q16 #o2 #q16))
           ((move v14 #q16 #o2 #q4))
           ((move v14 #q16 #o2 #q7))
           ((move v14 #q16 #o2 v15))
           ((move v14 #q16 #t24 #q3))
           ((move v14 #q16 #t38 #q15))
           ((move v14 #q3 #o2 #o5))
           ((move v14 #q3 #o2 #q12))
           ((move v14 #q3 #o2 #q14))
           ((move v14 #q3 #o2 #q15))
           ((move v14 #q3 #o2 #q16))
           ((move v14 #q3 #o2 #q3))
           ((move v14 #q3 #o2 #q7))
           ((move v14 #q3 #t16 v15))
           ((move v14 #q3 #t2 #q4))
           ((move v14 #q3 #t20 #q13))
           ((move v14 #q3 #t25 #q11))
           ((move v14 #q4 #o2 #o5))
           ((move v14 #q4 #o2 #q11))
           ((move v14 #q4 #o2 #q12))
           ((move v14 #q4 #o2 #q13))
           ((move v14 #q4 #o2 #q14))
           ((move v14 #q4 #o2 #q15))
           ((move v14 #q4 #o2 #q16))
           ((move v14 #q4 #o2 #q4))
           ((move v14 #q4 #o2 #q7))
           ((move v14 #q4 #o2 v15))
           ((move v14 #q4 #t3 #q3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q11))
           ((move v14 #q7 #o2 #q12))
           ((move v14 #q7 #o2 #q13))
           ((move v14 #q7 #o2 #q14))
           ((move v14 #q7 #o2 #q15))
           ((move v14 #q7 #o2 #q16))
           ((move v14 #q7 #o2 #q3))
           ((move v14 #q7 #o2 #q4))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q11))
           ((move v14 v15 #o2 #q12))
           ((move v14 v15 #o2 #q14))
           ((move v14 v15 #o2 #q15))
           ((move v14 v15 #o2 #q3))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #t14 #q4))
           ((move v14 v15 #t15 #q7))
           ((move v14 v15 #t18 #q13))
           ((move v14 v15 #t36 #q16))
           ((calibrate v12 #q0 #y0 v19 v10))
           ((calibrate v12 #q10 #y5 v18 v10))
           ((calibrate v12 #q5 #y3 v17 v10))
           ((calibrate v14 #q12 #y6 v20 v10))
           ((calibrate v14 #q14 #y7 v19 v10))
           ((calibrate v14 #q15 #y8 v18 v10))
           ((calibrate v14 #q16 #y9 v17 v10))
           ((take_image v12 #q0 #y0 v19 v10 v11))
           ((take_image v12 #q10 #y5 v18 v10 v11))
           ((take_image v12 #q5 #y3 v17 v10 v11))
           ((take_image v14 #q12 #y6 v20 v10 v11))
           ((take_image v14 #q14 #y7 v19 v10 v11))
           ((take_image v14 #q15 #y8 v18 v10 v11))
           ((take_image v14 #q16 #y9 v17 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q6 #y4 v9 v8))
           ((send_analysis v12 #q6 #y4 v9 v7))
           ((send_analysis v12 #q6 #y4 v9 v5))
           ((send_analysis v12 #q6 #y4 v9 v4))
           ((send_analysis v12 #q6 #y4 v9 v3))
           ((send_analysis v12 #q6 #y4 v9 v1))
           ((drop_rock v14 v16))
           ((send_analysis v14 #q3 #y2 v9 v3))
           ((send_analysis v14 #q3 #y2 v9 v4))
           ((send_analysis v14 #q3 #y2 v9 v5))
           ((send_analysis v14 #q3 #y2 v9 v1))
           ((send_analysis v14 #q3 #y2 v9 v8))
           ((send_analysis v14 #q3 #y2 v9 v7))
           ((send_image v12 #q6 #y4 v9 v19 v11))
           ((send_image v12 #q6 #y4 v9 v18 v11))
           ((send_image v12 #q6 #y4 v9 v17 v11))
           ((send_image v14 #q3 #y2 v9 v20 v11))
           ((send_image v14 #q3 #y2 v9 v19 v11))
           ((send_image v14 #q3 #y2 v9 v18 v11))
           ((send_image v14 #q3 #y2 v9 v17 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state using only the valid actions and adhering to the response format.

Model:     My apologies for the invalid action in the previous plan. I will correct it by only using actions from the provided list.
           
           Looking at the available `move` actions for `v12` from `#q0`, I see `(move v12 #q0 #o2 #q10)`. This is a valid action to get to `#q10`.
           
           Here's the revised plan:
           
           --Plan--:
           (move v12 v13 #t7 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #o2 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #o2 #q10)
           (calibrate v12 #q10 #y5 v18 v10)
           (take_image v12 #q10 #y5 v18 v10 v11)
           (move v12 #q10 #o2 #q6)
           (send_image v12 #q6 #y4 v9 v17 v11)
           (send_image v12 #q6 #y4 v9 v19 v11)
           (send_image v12 #q6 #y4 v9 v18 v11)
           (move v12 #q6 #t13 #q9)
           (sample_rock v12 #q9 v1 v16)
           (move v12 #q9 #t10 #q6)
           (send_analysis v12 #q6 #y4 v9 v1)
           (move v12 #q6 #o2 #q18)
           (sample_rock v12 #q18 v5 v16)
           (move v12 #q18 #t41 #q6)
           (send_analysis v12 #q6 #y4 v9 v5)
           (move v14 v15 #o2 #q12)
           (calibrate v14 #q12 #y6 v20 v10)
           (take_image v14 #q12 #y6 v20 v10 v11)
           (move v14 #q12 #t21 #q3)
           (send_image v14 #q3 #y2 v9 v20 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies, it seems I made a mistake by not fully checking the `new-axiom@0()` goal condition. The `new-axiom@0()` goal requires that `receivedanalysis(?stone)` and `receivedanalysis(?soil)` are true for at least one stone and one soil type. My previous plan only ensured `receivedanalysis(v1)` (stone) and `receivedanalysis(v5)` (soil).
           
           The previous plan should have successfully achieved all the `receivedimage` predicates and the two `receivedanalysis` predicates required by `new-axiom@0()`. Let me re-evaluate the full conditions of `new-axiom@0()`.
           
           The `new-axiom@0()` axiom is defined as a conjunction of many atoms. The crucial part for the goal is:
           `receivedimage(v17, v11)`
           `receivedimage(v18, v11)`
           `receivedimage(v19, v11)`
           `receivedimage(v20, v11)`
           `type(?stone, v2)`
           `receivedanalysis(?stone)`
           `type(?soil, v6)`
           `receivedanalysis(?soil)`
           
           My previous plan covers all the `receivedimage` goals.
           For `receivedanalysis(?stone)` where `type(?stone, v2)`, the plan samples `v1` (type `v2`) and sends its analysis, thus `receivedanalysis(v1)` becomes true.
           For `receivedanalysis(?soil)` where `type(?soil, v6)`, the plan samples `v5` (type `v6`) and sends its analysis, thus `receivedanalysis(v5)` becomes true.
           
           The rover configuration (`atconf`) and free store (`free`) predicates within `new-axiom@0()` are initially true (`atconf(v12, v13)`, `atconf(v14, v15)`, `free(v12, v16)`, `free(v14, v16)`) and are not negated by any actions in the plan. Sampling rocks makes the store `full` and negates `free`, but the axiom implies an existential quantifier, so it means *some* free store and *some* atconf for each rover, which is implicitly satisfied. Even if it requires *the* `v16` store to be free for both, the final state of the previous plan would have rover v12's store full (after sampling v1 and v5). This means `free(v12, v16)` would be false. If this is the issue, then the rover would need to drop the rock.
           
           Let's assume the issue is that `free(v12, v16)` is not true at the end of the plan due to `sample_rock`. The axiom `new-axiom@0()` has multiple lines for `free(v12, v16)` and `free(v14, v16)`, which suggests that the exact state of `v16` needs to be `free` for both rovers in the final state. This requires dropping the sampled rocks.
           
           **Revised Plan focusing on `free(v12, v16)` and `free(v14, v16)`:**
           
           **Rover v12:**
           1. Move to `#q5` (to view `v17`).
           2. Calibrate camera `v10` for `v17`.
           3. Take image of `v17`.
           4. Move to `#q0` (to view `v19`).
           5. Calibrate camera `v10` for `v19`.
           6. Take image of `v19`.
           7. Move to `#q10` (to view `v18`).
           8. Calibrate camera `v10` for `v18`.
           9. Take image of `v18`.
           10. Move to `#q6` (to communicate).
           11. Send image of `v17`.
           12. Send image of `v19`.
           13. Send image of `v18`.
           14. Move to `#q9` (to sample `v1`, a type `v2` rock).
           15. Sample rock `v1`.
           16. Move to `#q6` (to communicate).
           17. Send analysis of `v1`.
           18. Drop rock `v1` from store `v16` to make it free again.
           19. Move to `#q18` (to sample `v5`, a type `v6` rock).
           20. Sample rock `v5`.
           21. Move to `#q6` (to communicate).
           22. Send analysis of `v5`.
           23. Drop rock `v5` from store `v16` to make it free again.
           
           **Rover v14:**
           1. Move to `#q12` (to view `v20`).
           2. Calibrate camera `v10` for `v20`.
           3. Take image of `v20`.
           4. Move to `#q3` (to communicate).
           5. Send image of `v20`.
           6. (Rover v14 does not sample, so its store v16 remains free, satisfying `free(v14, v16)`).
           
           This updated plan ensures all `receivedimage` and `receivedanalysis` conditions are met, and also ensures that `free(v12, v16)` and `free(v14, v16)` are true at the end of the plan.
           
           --Plan--:
           (move v12 v13 #t7 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #o2 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #o2 #q10)
           (calibrate v12 #q10 #y5 v18 v10)
           (take_image v12 #q10 #y5 v18 v10 v11)
           (move v12 #q10 #o2 #q6)
           (send_image v12 #q6 #y4 v9 v17 v11)
           (send_image v12 #q6 #y4 v9 v19 v11)
           (send_image v12 #q6 #y4 v9 v18 v11)
           (move v12 #q6 #t13 #q9)
           (sample_rock v12 #q9 v1 v16)
           (move v12 #q9 #t10 #q6)
           (send_analysis v12 #q6 #y4 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 #q18)
           (sample_rock v12 #q18 v5 v16)
           (move v12 #q18 #t41 #q6)
           (send_analysis v12 #q6 #y4 v9 v5)
           (drop_rock v12 v16)
           (move v14 v15 #o2 #q12)
           (calibrate v14 #q12 #y6 v20 v10)
           (take_image v14 #q12 #y6 v20 v10 v11)
           (move v14 #q12 #t21 #q3)
           (send_image v14 #q3 #y2 v9 v20 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     My apologies again. It appears my interpretation of `new-axiom@0()` regarding `free(v12, v16)` and `free(v14, v16)` is still not entirely correct, or there's another subtle aspect of the axiom that I'm missing. The problem statement includes 32 instances of `new-axiom@0()`, which suggests that it's a complex conjunction involving many facts, and I am only seeing a subset of its full definition.
           
           Let's re-examine the goal `new-axiom@0()`. Given that it's repeatedly showing up as not satisfied, and the previous plan satisfied the core `receivedimage` and `receivedanalysis` conditions as well as ensuring the `free` predicate, the issue might lie in how these complex axioms are evaluated, or perhaps there are other unstated conditions within `new-axiom@0()` that are not immediately obvious from the simplified representation.
           
           Let's assume the problem is simpler and that the multiple instances of `new-axiom@0()` in the goal are just redundant ways of stating the same composite goal that I have been working with. The key is to fulfill:
           - `receivedimage(v17, v11)`
           - `receivedimage(v18, v11)`
           - `receivedimage(v19, v11)`
           - `receivedimage(v20, v11)`
           - `receivedanalysis(R_stone)` for some rock R_stone of type v2 (stone)
           - `receivedanalysis(R_soil)` for some rock R_soil of type v6 (soil)
           - `atconf(v12, ?q_v12)` for some configuration `?q_v12`
           - `atconf(v14, ?q_v14)` for some configuration `?q_v14`
           - `free(v12, v16)`
           - `free(v14, v16)`
           
           All `atconf` are inherently satisfied as the rovers are always at some configuration, and the plan ensures they don't get stuck in an invalid one. The `free(v12, v16)` and `free(v14, v16)` are critical. My last plan ensured this by dropping rocks.
           
           One possibility is that one of the `receivedimage` or `receivedanalysis` actions is failing due to a `blocked(?y)` precondition that I haven't explicitly checked. However, the problem statement only gives the *valid* action instances, so if an action is in the list, its primitive preconditions (like `blocked(?y)`) should be satisfied when chosen.
           
           Let's consider the initial state more carefully for `type` facts:
           `type(v4, v2)` (stone)
           `type(v3, v2)` (stone)
           `type(v7, v6)` (soil)
           `type(v5, v6)` (soil)
           `type(v1, v2)` (stone)
           `type(v8, v6)` (soil)
           
           So we have:
           Stones (type v2): v1, v3, v4
           Soils (type v6): v5, v7, v8
           
           We need *at least one* `receivedanalysis` for a stone and *at least one* for a soil.
           My previous plan used `v1` (stone) and `v5` (soil). This should be sufficient.
           
           Let me try to re-structure the plan slightly, ensuring that rovers are moving efficiently and all communication happens. Perhaps the sequence matters, or there's a calibration issue. All calibrations are explicitly added before `take_image`.
           
           Let's ensure that all `receivedimage` and `receivedanalysis` are done before any `drop_rock` to avoid accidentally dropping an unanalyzed sample.
           No, that's not it. `drop_rock` only changes `full` to `free`, it doesn't affect `analyzed` or `receivedanalysis`.
           
           Given the persistent `new-axiom@0()` failure, I need to rethink the interpretation of the goal. The axiom format `new-axiom@0()` with multiple instances usually means a complex set of conditions. Since the problem states "The following axioms are derived from the predicates:", and then lists `new-axiom@0()` multiple times, this means *all* the conditions within *each* of those `new-axiom@0()` blocks must be true. However, the *content* of those `new-axiom@0()` blocks is identical in the prompt. This points to the listed predicates being what `new-axiom@0()` means.
           
           Let's assume the issue is indeed related to the `free` predicate, and my assumption that dropping a rock immediately makes it `free` again is correct.
           
           Perhaps the issue is that one of the available actions, although listed, has an implicit continuous parameter that makes it actually invalid, or the order of operations causes an issue.
           
           Let's consider a plan with minimal sampling. We just need one of type v2 and one of type v6.
           
           **Rover v12 Plan:**
           1. Move to `#q5` (view `v17`). Calibrate and take image.
           2. Move to `#q0` (view `v19`). Calibrate and take image.
           3. Move to `#q10` (view `v18`). Calibrate and take image.
           4. Move to `#q6` (communicate). Send `v17`, `v19`, `v18` images.
           5. Move to `#q9` (sample `v1` - stone). Sample `v1`.
           6. Move to `#q6` (communicate). Send analysis of `v1`.
           7. Drop `v1` to free store.
           8. Move to `#q18` (sample `v5` - soil). Sample `v5`.
           9. Move to `#q6` (communicate). Send analysis of `v5`.
           10. Drop `v5` to free store.
           
           **Rover v14 Plan:**
           1. Move to `#q12` (view `v20`). Calibrate and take image.
           2. Move to `#q3` (communicate). Send `v20` image.
           
           This is essentially the same as my last attempt, which failed. The only other possible interpretation of the repeated `new-axiom@0()` definition is that it literally needs to be triggered multiple times, which doesn't make sense for a goal state.
           
           Could it be that the *variables* in the axiom definition are specific objects and not existentially quantified? No, the prompt says "If any of the axioms contains an object that starts with '?', that object is a variable and there is an implicit existential quantifier over that variable." So `?stone` and `?soil` are existentially quantified.
           
           Let's re-confirm that all object types are correctly identified and available for actions:
           `rover(v12)`, `rover(v14)`
           `objective(v17)`, `objective(v18)`, `objective(v19)`, `objective(v20)`
           `mode(v11)`
           `rock(v1)`, `rock(v3)`, `rock(v4)`, `rock(v5)`, `rock(v7)`, `rock(v8)`
           `store(v16)`
           `lander(v9)`
           `type(v1, v2)`, `type(v3, v2)`, `type(v4, v2)` (stone)
           `type(v5, v6)`, `type(v7, v6)`, `type(v8, v6)` (soil)
           `onboard(v10, v12)`, `onboard(v10, v14)`
           `supports(v10, v11)`
           `camera(v10)`
           
           All these objects match what's used.
           
           Let's try *only* the minimum necessary to meet the goal condition for analysis, and see if that passes. We only need one rock of type v2 and one of type v6.
           
           Let's simplify. Rover v12 will do all images and both samples.
           
           --Plan--:
           (move v12 v13 #t7 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #o2 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #o2 #q10)
           (calibrate v12 #q10 #y5 v18 v10)
           (take_image v12 #q10 #y5 v18 v10 v11)
           (move v12 #q10 #o2 #q6)
           (send_image v12 #q6 #y4 v9 v17 v11)
           (send_image v12 #q6 #y4 v9 v19 v11)
           (send_image v12 #q6 #y4 v9 v18 v11)
           (move v12 #q6 #t13 #q9)
           (sample_rock v12 #q9 v1 v16)
           (move v12 #q9 #t10 #q6)
           (send_analysis v12 #q6 #y4 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 #q18)
           (sample_rock v12 #q18 v5 v16)
           (move v12 #q18 #t41 #q6)
           (send_analysis v12 #q6 #y4 v9 v5)
           (drop_rock v12 v16)
           (move v14 v15 #o2 #q12)
           (calibrate v14 #q12 #y6 v20 v10)
           (take_image v14 #q12 #y6 v20 v10 v11)
           (move v14 #q12 #t21 #q3)
           (send_image v14 #q3 #y2 v9 v20 v11)

User:      The plan you provided is not valid because: `Fact is not satisfied: Atom new-axiom@0()`. Recall that the action preconditions and the goal *must* be satisfied.
           
           Please provide a plan that achieves the goal from the initial state ensuring that action preconditions are satisfied and adhering to the response format.

Model:     I am clearly missing a critical detail about the `new-axiom@0()` goal or how the state is evaluated. The goal definition provided in the prompt explicitly lists `new-axiom@0()` as a conjunction of several predicates. My plans have been targeting these specific predicates: `receivedimage` for all four objectives, `receivedanalysis` for one rock of type `v2` (stone) and one of type `v6` (soil), and ensuring `atconf` and `free` for both rovers are true. Since the plan is repeatedly failing on `Atom new-axiom@0()`, it strongly suggests either:
           
           1.  There's a hidden condition within `new-axiom@0()` not explicitly shown in the problem description, or
           2.  My understanding of a listed condition is flawed.
           3.  The repeated `new-axiom@0()` definitions imply *more* than one of each type of rock analysis, or perhaps multiple `free` stores. However, the definition clearly uses variables `?stone` and `?soil` for the analysis, which should imply an existential quantifier (i.e., "at least one").
           
           Let's re-evaluate every single part of the `new-axiom@0()` definition provided:
           
           ```
           Axiom new-axiom@0()
             Conjunction
               Atom atconf(v12, v13)
               Atom atconf(v14, v15)
               Atom free(v12, v16)
               Atom free(v14, v16)
               Atom receivedimage(v17, v11)
               Atom receivedimage(v18, v11)
               Atom receivedimage(v19, v11)
               Atom receivedimage(v20, v11)
               Atom type(?stone, v2)
               Atom receivedanalysis(?stone)
               Atom type(?soil, v6)
               Atom receivedanalysis(?soil)
           ```
           
           **Checking each predicate in the final state of the previous plan:**
           
           *   `Atom atconf(v12, v13)`: At the end of the previous plan, `v12` is at `#q6`. So this condition *would not be met*. This is a crucial mistake! The axiom specifies `v13` directly, not just "any" configuration. The same applies to `v14`.
           *   `Atom atconf(v14, v15)`: At the end of the previous plan, `v14` is at `#q3`. This condition *would not be met*.
           
           This explains the repeated failures. The rovers need to return to their *initial configurations* or specific configurations (`v13` for `v12` and `v15` for `v14`) at the end of the plan for the goal to be satisfied.
           
           Now I understand the exact target for `atconf`. The `free` conditions are also specific to `v16`.
           
           **Revised Plan with correct `atconf` and `free` conditions:**
           
           **Rover v12 Plan:**
           1.  Move to `#q5` (view `v17`). Calibrate and take image.
           2.  Move to `#q0` (view `v19`). Calibrate and take image.
           3.  Move to `#q10` (view `v18`). Calibrate and take image.
           4.  Move to `#q6` (communicate). Send `v17`, `v19`, `v18` images.
           5.  Move to `#q9` (sample `v1` - stone). Sample `v1`.
           6.  Move to `#q6` (communicate). Send analysis of `v1`.
           7.  Drop `v1` to free store `v16`.
           8.  Move to `#q18` (sample `v5` - soil). Sample `v5`.
           9.  Move to `#q6` (communicate). Send analysis of `v5`.
           10. Drop `v5` to free store `v16`.
           11. **Crucially: Move `v12` back to `v13`.**
           
           **Rover v14 Plan:**
           1.  Move to `#q12` (view `v20`). Calibrate and take image.
           2.  Move to `#q3` (communicate). Send `v20` image.
           3.  **Crucially: Move `v14` back to `v15`.**
           
           This plan should finally meet all conditions of `new-axiom@0()`.
           
           --Plan--:
           (move v12 v13 #t7 #q5)
           (calibrate v12 #q5 #y3 v17 v10)
           (take_image v12 #q5 #y3 v17 v10 v11)
           (move v12 #q5 #o2 #q0)
           (calibrate v12 #q0 #y0 v19 v10)
           (take_image v12 #q0 #y0 v19 v10 v11)
           (move v12 #q0 #o2 #q10)
           (calibrate v12 #q10 #y5 v18 v10)
           (take_image v12 #q10 #y5 v18 v10 v11)
           (move v12 #q10 #o2 #q6)
           (send_image v12 #q6 #y4 v9 v17 v11)
           (send_image v12 #q6 #y4 v9 v19 v11)
           (send_image v12 #q6 #y4 v9 v18 v11)
           (move v12 #q6 #t13 #q9)
           (sample_rock v12 #q9 v1 v16)
           (move v12 #q9 #t10 #q6)
           (send_analysis v12 #q6 #y4 v9 v1)
           (drop_rock v12 v16)
           (move v12 #q6 #o2 #q18)
           (sample_rock v12 #q18 v5 v16)
           (move v12 #q18 #t41 #q6)
           (send_analysis v12 #q6 #y4 v9 v5)
           (drop_rock v12 v16)
           (move v12 #q6 #t4 v13)
           (move v14 v15 #o2 #q12)
           (calibrate v14 #q12 #y6 v20 v10)
           (take_image v14 #q12 #y6 v20 v10 v11)
           (move v14 #q12 #t21 #q3)
           (send_image v14 #q3 #y2 v9 v20 v11)
           (move v14 #q3 #t16 v15)

