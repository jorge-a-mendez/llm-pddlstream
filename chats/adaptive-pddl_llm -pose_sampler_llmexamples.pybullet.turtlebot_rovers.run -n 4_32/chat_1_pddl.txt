User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o0: object
           #o1: object
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom atconf(v12, v13)
           Atom supports(v10, v11)
           Atom store(v16)
           Atom free(v12, v16)
           Atom atconf(v14, v15)
           Atom rover(v12)
           Atom rock(v3)
           Atom rock(v4)
           Atom objective(v20)
           Atom objective(v19)
           Atom rock(v8)
           Atom rover(v14)
           Atom type(v4, v2)
           Atom type(v3, v2)
           Atom objective(v18)
           Atom free(v14, v16)
           Atom type(v7, v6)
           Atom rock(v5)
           Atom conf(v12, v13)
           Atom lander(v9)
           Atom onboard(v10, v14)
           Atom rock(v1)
           Atom objective(v17)
           Atom onboard(v10, v12)
           Atom mode(v11)
           Atom camera(v10)
           Atom type(v5, v6)
           Atom rock(v7)
           Atom type(v1, v2)
           Atom conf(v14, v15)
           Atom type(v8, v6)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v12, #o5, v7)
           Atom conf(v12, #o5)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom imagevisible(v12, #o3, #o4, v17)
           Atom imagerange(v12, #o3, v17)
           Atom conf(v12, #o3)
           Atom above(v12, #o5, v1)
           Atom above(v14, #o5, v1)
           Atom above(v14, #o5, v8)
           Atom above(v12, #o5, v8)
           Atom imagevisible(v14, #o3, #o4, v19)
           Atom imagerange(v14, #o3, v19)
           Atom imagevisible(v12, #o3, #o4, v19)
           Atom imagerange(v12, #o3, v19)
           Atom imagevisible(v12, #o3, #o4, v20)
           Atom imagerange(v12, #o3, v20)
           Atom imagevisible(v14, #o3, #o4, v20)
           Atom imagerange(v14, #o3, v20)
           Atom comvisible(v14, #o0, #o1, v9)
           Atom comrange(v14, #o0, v9)
           Atom conf(v14, #o0)
           Atom ray(#o1)
           Atom comvisible(v12, #o0, #o1, v9)
           Atom comrange(v12, #o0, v9)
           Atom conf(v12, #o0)
           Atom motion(v12, v13, #o2, v13)
           Atom above(v12, #o5, v4)
           Atom above(v14, #o5, v4)
           Atom above(v12, #o5, v5)
           Atom above(v14, #o5, v5)
           Atom above(v12, #o5, v3)
           Atom above(v14, #o5, v3)
           Atom imagevisible(v12, #o3, #o4, v18)
           Atom imagerange(v12, #o3, v18)
           Atom imagevisible(v14, #o3, #o4, v18)
           Atom imagerange(v14, #o3, v18)
           Atom motion(v12, v13, #o2, #o0)
           Atom motion(v12, #o0, #o2, #o0)
           Atom motion(v12, #o0, #o2, v13)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #o0)
           Atom motion(v12, #o0, #o2, #o5)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o5)
           Atom motion(v12, #o3, #o2, v13)
           Atom motion(v12, v13, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o0)
           Atom motion(v12, #o5, #o2, #o3)
           Atom motion(v12, #o3, #o2, #o3)
           Atom motion(v12, #o0, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o5)
           Atom motion(v14, v15, #o2, #o0)
           Atom motion(v14, #o5, #o2, #o0)
           Atom motion(v14, #o0, #o2, #o3)
           Atom motion(v14, #o0, #o2, v15)
           Atom motion(v14, #o0, #o2, #o0)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v3 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v14 #o5 v1 v16))
           ((sample_rock v14 #o5 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v5 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((move v12 #o0 #o2 #o0))
           ((move v12 #o0 #o2 #o3))
           ((move v12 #o0 #o2 #o5))
           ((move v12 #o0 #o2 v13))
           ((move v12 #o3 #o2 #o0))
           ((move v12 #o3 #o2 #o3))
           ((move v12 #o3 #o2 #o5))
           ((move v12 #o3 #o2 v13))
           ((move v12 #o5 #o2 #o0))
           ((move v12 #o5 #o2 #o3))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 v13))
           ((move v12 v13 #o2 #o0))
           ((move v12 v13 #o2 #o3))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 v13))
           ((move v14 #o0 #o2 #o0))
           ((move v14 #o0 #o2 #o3))
           ((move v14 #o0 #o2 #o5))
           ((move v14 #o0 #o2 v15))
           ((move v14 #o3 #o2 #o0))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o5 #o2 #o0))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 v15))
           ((move v14 v15 #o2 #o0))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 v15))
           ((calibrate v12 #o3 #o4 v17 v10))
           ((calibrate v12 #o3 #o4 v18 v10))
           ((calibrate v12 #o3 #o4 v19 v10))
           ((calibrate v12 #o3 #o4 v20 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #o3 #o4 v18 v10))
           ((calibrate v14 #o3 #o4 v19 v10))
           ((calibrate v14 #o3 #o4 v20 v10))
           ((take_image v12 #o3 #o4 v17 v10 v11))
           ((take_image v12 #o3 #o4 v18 v10 v11))
           ((take_image v12 #o3 #o4 v19 v10 v11))
           ((take_image v12 #o3 #o4 v20 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #o3 #o4 v18 v10 v11))
           ((take_image v14 #o3 #o4 v19 v10 v11))
           ((take_image v14 #o3 #o4 v20 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #o0 #o1 v9 v1))
           ((send_analysis v12 #o0 #o1 v9 v3))
           ((send_analysis v12 #o0 #o1 v9 v4))
           ((send_analysis v12 #o0 #o1 v9 v5))
           ((send_analysis v12 #o0 #o1 v9 v7))
           ((send_analysis v12 #o0 #o1 v9 v8))
           ((drop_rock v14 v16))
           ((send_analysis v14 #o0 #o1 v9 v1))
           ((send_analysis v14 #o0 #o1 v9 v3))
           ((send_analysis v14 #o0 #o1 v9 v4))
           ((send_analysis v14 #o0 #o1 v9 v5))
           ((send_analysis v14 #o0 #o1 v9 v7))
           ((send_analysis v14 #o0 #o1 v9 v8))
           ((send_image v12 #o0 #o1 v9 v17 v11))
           ((send_image v12 #o0 #o1 v9 v18 v11))
           ((send_image v12 #o0 #o1 v9 v19 v11))
           ((send_image v12 #o0 #o1 v9 v20 v11))
           ((send_image v14 #o0 #o1 v9 v17 v11))
           ((send_image v14 #o0 #o1 v9 v18 v11))
           ((send_image v14 #o0 #o1 v9 v19 v11))
           ((send_image v14 #o0 #o1 v9 v20 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The goal `new-axiom@0()` can be broken down into several sub-goals related to `atconf`, `free`, `receivedimage`, and `receivedanalysis`.
           
           First, let's analyze the `receivedimage` and `receivedanalysis` parts of the goal.
           `receivedimage(v17, v11)`, `receivedimage(v18, v11)`, `receivedimage(v19, v11)`, `receivedimage(v20, v11)` means that images of objectives v17, v18, v19, v20 need to be taken by a rover and then sent to the lander. The camera `v10` supports mode `v11`.
           
           `receivedanalysis(?stone)` implies `receivedanalysis(v1)`, `receivedanalysis(v3)`, `receivedanalysis(v4)` since `v1`, `v3`, `v4` are type `v2` (stone).
           `receivedanalysis(?soil)` implies `receivedanalysis(v5)`, `receivedanalysis(v7)`, `receivedanalysis(v8)` since `v5`, `v7`, `v8` are type `v6` (soil).
           This means rocks v1, v3, v4, v5, v7, v8 need to be sampled by a rover and then the analysis needs to be sent to the lander.
           
           Let's use `v12` to handle the image goals and some analysis goals. And `v14` for some other analysis goals.
           
           For `receivedimage` goals:
           1. Calibrate camera `v10` on rover `v12` for objectives `v17`, `v18`, `v19`, `v20`. The rover `v12` needs to be at a configuration where it can image these objectives, which is `#o3`.
           2. Take images of `v17`, `v18`, `v19`, `v20` using `v12`, `v10`, `v11`.
           3. Send images of `v17`, `v18`, `v19`, `v20` from `v12` to `v9` (lander). The rover `v12` needs to be at a configuration where it can communicate, which is `#o0`.
           
           For `receivedanalysis` goals (stone types: v1, v3, v4):
           1. Rover `v12` needs to be above the rocks `v1`, `v3`, `v4`. The initial state shows `v12` is above these rocks at `#o5`.
           2. Sample rocks `v1`, `v3`, `v4` using `v12` and store `v16`. `v12` has free store `v16`.
           3. Send analysis of `v1`, `v3`, `v4` from `v12` to `v9`. The rover `v12` needs to be at a configuration where it can communicate, which is `#o0`.
           
           For `receivedanalysis` goals (soil types: v5, v7, v8):
           1. Rover `v14` needs to be above the rocks `v5`, `v7`, `v8`. The initial state shows `v14` is above these rocks at `#o5`.
           2. Sample rocks `v5`, `v7`, `v8` using `v14` and store `v16`. `v14` has free store `v16`.
           3. Send analysis of `v5`, `v7`, `v8` from `v14` to `v9`. The rover `v14` needs to be at a configuration where it can communicate, which is `#o0`.
           
           The `atconf` and `free` parts of the goal:
           `atconf(v12, v13)`, `atconf(v14, v15)` are already true initially.
           `free(v12, v16)`, `free(v14, v16)` are also initially true. However, sampling rocks will make `full(v12, v16)` and `full(v14, v16)`. If the goal needs `free(v12, v16)` and `free(v14, v16)` to be true at the end, then the sampled rocks need to be dropped. Let's assume the problem statement means "receivedanalysis" is the final goal, and the "free" state is a pre-condition for sampling, not necessarily a post-condition for the entire plan. However, the axiom includes `free(v12, v16)` and `free(v14, v16)` as part of `new-axiom@0()`, so we will need to drop the rocks after analysis.
           
           Plan:
           1. Rover `v12` moves to `#o3` to calibrate and take images.
           2. Calibrate camera `v10` on `v12`.
           3. Take images of all objectives `v17, v18, v19, v20`.
           4. Rover `v12` moves to `#o5` to sample rocks.
           5. Sample rocks `v1, v3, v4, v5, v7, v8` using `v12`. Since `v12` has only one store `v16`, it can only sample one rock at a time before needing to send analysis or drop.
           Let's try to do all the sampling with one rover if possible.
           Rover `v12` has `free(v12, v16)`.
           - Sample `v1`. Store `v16` becomes full.
           - Move `v12` to `#o0` to send analysis.
           - Send analysis for `v1`.
           - Drop rock `v1`. Store `v16` becomes free.
           Repeat for `v3`, `v4`, `v5`, `v7`, `v8`.
           
           Let's use both rovers to speed up.
           Rover `v12` will take images and analyze rocks of type `v2` (stones: v1, v3, v4).
           Rover `v14` will analyze rocks of type `v6` (soils: v5, v7, v8).
           
           Rover `v12` will first move to `#o3` for imaging, then to `#o5` for sampling, then to `#o0` for sending image and analysis, then back to initial `v13` position.
           Rover `v14` will first move to `#o5` for sampling, then to `#o0` for sending analysis, then back to initial `v15` position.
           
           Initial `atconf(v12, v13)`
           Initial `atconf(v14, v15)`
           
           **Rover v12 plan (images + stone analysis):**
           1. Move v12 from `v13` to `#o3` (image configuration).
           2. Calibrate v10 for v17, v18, v19, v20.
           3. Take images of v17, v18, v19, v20.
           4. Move v12 from `#o3` to `#o5` (sampling configuration).
           5. Sample `v1`. `v16` is full.
           6. Move v12 from `#o5` to `#o0` (communication configuration).
           7. Send image of v17, v18, v19, v20.
           8. Send analysis of v1.
           9. Drop rock v1. `v16` is free.
           10. Move v12 from `#o0` to `#o5`.
           11. Sample `v3`. `v16` is full.
           12. Move v12 from `#o5` to `#o0`.
           13. Send analysis of v3.
           14. Drop rock v3. `v16` is free.
           15. Move v12 from `#o0` to `#o5`.
           16. Sample `v4`. `v16` is full.
           17. Move v12 from `#o5` to `#o0`.
           18. Send analysis of v4.
           19. Drop rock v4. `v16` is free.
           20. Move v12 from `#o0` to `v13` (original position).
           
           **Rover v14 plan (soil analysis):**
           1. Move v14 from `v15` to `#o5` (sampling configuration).
           2. Sample `v5`. `v16` is full.
           3. Move v14 from `#o5` to `#o0` (communication configuration).
           4. Send analysis of v5.
           5. Drop rock v5. `v16` is free.
           6. Move v14 from `#o0` to `#o5`.
           7. Sample `v7`. `v16` is full.
           8. Move v14 from `#o5` to `#o0`.
           9. Send analysis of v7.
           10. Drop rock v7. `v16` is free.
           11. Move v14 from `#o0` to `#o5`.
           12. Sample `v8`. `v16` is full.
           13. Move v14 from `#o5` to `#o0`.
           14. Send analysis of v8.
           15. Drop rock v8. `v16` is free.
           16. Move v14 from `#o0` to `v15` (original position).
           
           Let's interleave these to fulfill the goal. Order doesn't matter for independent actions. We need `atconf(v12,v13)` and `atconf(v14,v15)` at the end as well as `free(v12,v16)` and `free(v14,v16)`.
           
           --Plan--:
           (move v12 v13 #o2 #o3)
           (calibrate v12 #o3 #o4 v17 v10)
           (take_image v12 #o3 #o4 v17 v10 v11)
           (calibrate v12 #o3 #o4 v18 v10)
           (take_image v12 #o3 #o4 v18 v10 v11)
           (calibrate v12 #o3 #o4 v19 v10)
           (take_image v12 #o3 #o4 v19 v10 v11)
           (calibrate v12 #o3 #o4 v20 v10)
           (take_image v12 #o3 #o4 v20 v10 v11)
           (move v12 #o3 #o2 #o5)
           (sample_rock v12 #o5 v1 v16)
           (move v12 #o5 #o2 #o0)
           (send_image v12 #o0 #o1 v9 v17 v11)
           (send_image v12 #o0 #o1 v9 v18 v11)
           (send_image v12 #o0 #o1 v9 v19 v11)
           (send_image v12 #o0 #o1 v9 v20 v11)
           (send_analysis v12 #o0 #o1 v9 v1)
           (drop_rock v12 v16)
           (move v12 #o0 #o2 #o5)
           (sample_rock v12 #o5 v3 v16)
           (move v12 #o5 #o2 #o0)
           (send_analysis v12 #o0 #o1 v9 v3)
           (drop_rock v12 v16)
           (move v12 #o0 #o2 #o5)
           (sample_rock v12 #o5 v4 v16)
           (move v12 #o5 #o2 #o0)
           (send_analysis v12 #o0 #o1 v9 v4)
           (drop_rock v12 v16)
           (move v12 #o0 #o2 v13)
           (move v14 v15 #o2 #o5)
           (sample_rock v14 #o5 v5 v16)
           (move v14 #o5 #o2 #o0)
           (send_analysis v14 #o0 #o1 v9 v5)
           (drop_rock v14 v16)
           (move v14 #o0 #o2 #o5)
           (sample_rock v14 #o5 v7 v16)
           (move v14 #o5 #o2 #o0)
           (send_analysis v14 #o0 #o1 v9 v7)
           (drop_rock v14 v16)
           (move v14 #o0 #o2 #o5)
           (sample_rock v14 #o5 v8 v16)
           (move v14 #o5 #o2 #o0)
           (send_analysis v14 #o0 #o1 v9 v8)
           (drop_rock v14 v16)
           (move v14 #o0 #o2 v15)

