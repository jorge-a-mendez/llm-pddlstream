User:      Here is a list of objects present in this scene for this task: 
           
           ```
           #o2: object
           #o3: object
           #o4: object
           #o5: object
           #q0: object
           #q1: object
           #q4: object
           #q5: object
           #q6: object
           #q7: object
           #q8: object
           #t0: object
           #t15: object
           #t16: object
           #t17: object
           #t2: object
           #t4: object
           #t7: object
           #t9: object
           #y0: object
           #y3: object
           #y4: object
           v1: object
           v10: object
           v11: object
           v12: object
           v13: object
           v14: object
           v15: object
           v16: object
           v17: object
           v18: object
           v19: object
           v2: object
           v20: object
           v3: object
           v4: object
           v5: object
           v6: object
           v7: object
           v8: object
           v9: object
           ```
           
           The initial state is given by the following facts: 
           
           ```
           Atom conf(v12, v13)
           Atom type(v3, v2)
           Atom rover(v14)
           Atom type(v1, v2)
           Atom rock(v3)
           Atom type(v4, v2)
           Atom type(v8, v6)
           Atom type(v7, v6)
           Atom conf(v14, v15)
           Atom free(v14, v16)
           Atom objective(v17)
           Atom rock(v4)
           Atom mode(v11)
           Atom lander(v9)
           Atom rock(v5)
           Atom rock(v8)
           Atom onboard(v10, v12)
           Atom rover(v12)
           Atom rock(v1)
           Atom store(v16)
           Atom supports(v10, v11)
           Atom objective(v18)
           Atom onboard(v10, v14)
           Atom rock(v7)
           Atom atconf(v12, v13)
           Atom free(v12, v16)
           Atom type(v5, v6)
           Atom atconf(v14, v15)
           Atom camera(v10)
           Atom above(v12, #o5, v1)
           Atom conf(v12, #o5)
           Atom above(v12, #o5, v7)
           Atom imagevisible(v12, #q4, #y3, v18)
           Atom imagerange(v12, #q4, v18)
           Atom conf(v12, #q4)
           Atom ray(#y3)
           Atom comvisible(v12, #q0, #y0, v9)
           Atom comrange(v12, #q0, v9)
           Atom conf(v12, #q0)
           Atom ray(#y0)
           Atom above(v12, #o5, v8)
           Atom above(v12, #o5, v5)
           Atom above(v12, #q8, v3)
           Atom conf(v12, #q8)
           Atom above(v12, #o5, v4)
           Atom motion(v12, v13, #o2, v13)
           Atom motion(v14, v15, #o2, v15)
           Atom above(v14, #o5, v7)
           Atom conf(v14, #o5)
           Atom above(v14, #q5, v5)
           Atom conf(v14, #q5)
           Atom above(v14, #q6, v3)
           Atom conf(v14, #q6)
           Atom above(v14, #o5, v8)
           Atom above(v14, #o5, v4)
           Atom imagevisible(v14, #o3, #o4, v17)
           Atom imagerange(v14, #o3, v17)
           Atom conf(v14, #o3)
           Atom ray(#o4)
           Atom comvisible(v14, v19, v20, v9)
           Atom comrange(v14, v19, v9)
           Atom conf(v14, v19)
           Atom ray(v20)
           Atom above(v14, #q1, v1)
           Atom conf(v14, #q1)
           Atom imagevisible(v14, #q7, #y4, v18)
           Atom imagerange(v14, #q7, v18)
           Atom conf(v14, #q7)
           Atom ray(#y4)
           Atom motion(v14, v15, #o2, v19)
           Atom motion(v14, v19, #o2, v15)
           Atom motion(v14, v19, #o2, v19)
           Atom motion(v12, #q0, #o2, #q0)
           Atom motion(v12, v13, #o2, #q0)
           Atom motion(v12, #q0, #t2, v13)
           Atom motion(v14, #q6, #o2, #q6)
           Atom motion(v14, v19, #o2, #q6)
           Atom motion(v14, #q6, #o2, v15)
           Atom motion(v14, v15, #t9, #q6)
           Atom motion(v14, #q6, #o2, v19)
           Atom motion(v12, #q0, #t16, #q8)
           Atom motion(v12, #q8, #t15, #q0)
           Atom motion(v12, #q8, #o2, #q8)
           Atom motion(v12, v13, #o2, #q8)
           Atom motion(v12, #q8, #o2, v13)
           Atom motion(v14, #q5, #o2, v19)
           Atom motion(v14, #q6, #o2, #q5)
           Atom motion(v14, v15, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q5)
           Atom motion(v14, #q5, #o2, #q6)
           Atom motion(v14, #q5, #o2, v15)
           Atom motion(v14, v19, #o2, #q5)
           Atom motion(v12, #q4, #o2, v13)
           Atom motion(v12, #q4, #o2, #q4)
           Atom motion(v12, v13, #t4, #q4)
           Atom motion(v12, #q4, #o2, #q8)
           Atom motion(v12, #q4, #t7, #q0)
           Atom motion(v12, #q0, #o2, #q4)
           Atom motion(v12, #q8, #o2, #q4)
           Atom motion(v14, v19, #o2, #q1)
           Atom motion(v14, v15, #t0, #q1)
           Atom motion(v14, #q1, #o2, v19)
           Atom motion(v14, #q5, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q5)
           Atom motion(v14, #q1, #o2, #q6)
           Atom motion(v14, #q6, #o2, #q1)
           Atom motion(v14, #q1, #o2, #q1)
           Atom motion(v14, #q1, #o2, v15)
           Atom motion(v14, #q1, #o2, #q7)
           Atom motion(v14, #q7, #o2, v15)
           Atom motion(v14, #q7, #o2, #q7)
           Atom motion(v14, #q7, #o2, #q1)
           Atom motion(v14, #q7, #o2, #q6)
           Atom motion(v14, #q7, #o2, #q5)
           Atom motion(v14, #q7, #o2, v19)
           Atom motion(v14, v15, #t17, #q7)
           Atom motion(v14, #q5, #o2, #q7)
           Atom motion(v14, v19, #o2, #q7)
           Atom motion(v14, #q6, #o2, #q7)
           Atom motion(v14, #q7, #o2, #o3)
           Atom motion(v14, #o3, #o2, v15)
           Atom motion(v14, #q6, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q5)
           Atom motion(v14, #o3, #o2, v19)
           Atom motion(v14, #o3, #o2, #q1)
           Atom motion(v14, v19, #o2, #o3)
           Atom motion(v14, #q5, #o2, #o3)
           Atom motion(v14, #o3, #o2, #q6)
           Atom motion(v14, #o3, #o2, #q7)
           Atom motion(v14, #q1, #o2, #o3)
           Atom motion(v14, #o3, #o2, #o3)
           Atom motion(v14, v15, #o2, #o3)
           Atom motion(v14, v15, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q7)
           Atom motion(v14, #o5, #o2, v19)
           Atom motion(v14, #q1, #o2, #o5)
           Atom motion(v14, #q5, #o2, #o5)
           Atom motion(v14, #o5, #o2, v15)
           Atom motion(v14, v19, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q6)
           Atom motion(v14, #o3, #o2, #o5)
           Atom motion(v14, #q7, #o2, #o5)
           Atom motion(v14, #o5, #o2, #o3)
           Atom motion(v14, #q6, #o2, #o5)
           Atom motion(v14, #o5, #o2, #q5)
           Atom motion(v14, #o5, #o2, #q1)
           Atom motion(v14, #o5, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q8)
           Atom motion(v12, #o5, #o2, #q0)
           Atom motion(v12, #q8, #o2, #o5)
           Atom motion(v12, #q0, #o2, #o5)
           Atom motion(v12, #q4, #o2, #o5)
           Atom motion(v12, v13, #o2, #o5)
           Atom motion(v12, #o5, #o2, #q4)
           Atom motion(v12, #o5, #o2, v13)
           Atom motion(v12, #o5, #o2, #o5)
           ```
           
           The goal expression is `Atom new-axiom@0()`. Given these elements, the list of available action instances is:
           
           ```
           ((sample_rock v12 #o5 v1 v16))
           ((sample_rock v12 #o5 v4 v16))
           ((sample_rock v12 #o5 v5 v16))
           ((sample_rock v12 #o5 v7 v16))
           ((sample_rock v12 #o5 v8 v16))
           ((sample_rock v12 #q8 v3 v16))
           ((sample_rock v14 #o5 v4 v16))
           ((sample_rock v14 #o5 v7 v16))
           ((sample_rock v14 #o5 v8 v16))
           ((sample_rock v14 #q1 v1 v16))
           ((sample_rock v14 #q5 v5 v16))
           ((sample_rock v14 #q6 v3 v16))
           ((move v12 #o5 #o2 #o5))
           ((move v12 #o5 #o2 #q0))
           ((move v12 #o5 #o2 #q4))
           ((move v12 #o5 #o2 #q8))
           ((move v12 #o5 #o2 v13))
           ((move v12 #q0 #o2 #o5))
           ((move v12 #q0 #o2 #q0))
           ((move v12 #q0 #o2 #q4))
           ((move v12 #q0 #t16 #q8))
           ((move v12 #q0 #t2 v13))
           ((move v12 #q4 #o2 #o5))
           ((move v12 #q4 #o2 #q4))
           ((move v12 #q4 #o2 #q8))
           ((move v12 #q4 #o2 v13))
           ((move v12 #q4 #t7 #q0))
           ((move v12 #q8 #o2 #o5))
           ((move v12 #q8 #o2 #q4))
           ((move v12 #q8 #o2 #q8))
           ((move v12 #q8 #o2 v13))
           ((move v12 #q8 #t15 #q0))
           ((move v12 v13 #o2 #o5))
           ((move v12 v13 #o2 #q0))
           ((move v12 v13 #o2 #q8))
           ((move v12 v13 #o2 v13))
           ((move v12 v13 #t4 #q4))
           ((move v14 #o3 #o2 #o3))
           ((move v14 #o3 #o2 #o5))
           ((move v14 #o3 #o2 #q1))
           ((move v14 #o3 #o2 #q5))
           ((move v14 #o3 #o2 #q6))
           ((move v14 #o3 #o2 #q7))
           ((move v14 #o3 #o2 v15))
           ((move v14 #o3 #o2 v19))
           ((move v14 #o5 #o2 #o3))
           ((move v14 #o5 #o2 #o5))
           ((move v14 #o5 #o2 #q1))
           ((move v14 #o5 #o2 #q5))
           ((move v14 #o5 #o2 #q6))
           ((move v14 #o5 #o2 #q7))
           ((move v14 #o5 #o2 v15))
           ((move v14 #o5 #o2 v19))
           ((move v14 #q1 #o2 #o3))
           ((move v14 #q1 #o2 #o5))
           ((move v14 #q1 #o2 #q1))
           ((move v14 #q1 #o2 #q5))
           ((move v14 #q1 #o2 #q6))
           ((move v14 #q1 #o2 #q7))
           ((move v14 #q1 #o2 v15))
           ((move v14 #q1 #o2 v19))
           ((move v14 #q5 #o2 #o3))
           ((move v14 #q5 #o2 #o5))
           ((move v14 #q5 #o2 #q1))
           ((move v14 #q5 #o2 #q5))
           ((move v14 #q5 #o2 #q6))
           ((move v14 #q5 #o2 #q7))
           ((move v14 #q5 #o2 v15))
           ((move v14 #q5 #o2 v19))
           ((move v14 #q6 #o2 #o3))
           ((move v14 #q6 #o2 #o5))
           ((move v14 #q6 #o2 #q1))
           ((move v14 #q6 #o2 #q5))
           ((move v14 #q6 #o2 #q6))
           ((move v14 #q6 #o2 #q7))
           ((move v14 #q6 #o2 v15))
           ((move v14 #q6 #o2 v19))
           ((move v14 #q7 #o2 #o3))
           ((move v14 #q7 #o2 #o5))
           ((move v14 #q7 #o2 #q1))
           ((move v14 #q7 #o2 #q5))
           ((move v14 #q7 #o2 #q6))
           ((move v14 #q7 #o2 #q7))
           ((move v14 #q7 #o2 v15))
           ((move v14 #q7 #o2 v19))
           ((move v14 v15 #o2 #o3))
           ((move v14 v15 #o2 #o5))
           ((move v14 v15 #o2 #q5))
           ((move v14 v15 #o2 v15))
           ((move v14 v15 #o2 v19))
           ((move v14 v15 #t0 #q1))
           ((move v14 v15 #t17 #q7))
           ((move v14 v15 #t9 #q6))
           ((move v14 v19 #o2 #o3))
           ((move v14 v19 #o2 #o5))
           ((move v14 v19 #o2 #q1))
           ((move v14 v19 #o2 #q5))
           ((move v14 v19 #o2 #q6))
           ((move v14 v19 #o2 #q7))
           ((move v14 v19 #o2 v15))
           ((move v14 v19 #o2 v19))
           ((calibrate v12 #q4 #y3 v18 v10))
           ((calibrate v14 #o3 #o4 v17 v10))
           ((calibrate v14 #q7 #y4 v18 v10))
           ((take_image v12 #q4 #y3 v18 v10 v11))
           ((take_image v14 #o3 #o4 v17 v10 v11))
           ((take_image v14 #q7 #y4 v18 v10 v11))
           ((drop_rock v12 v16))
           ((send_analysis v12 #q0 #y0 v9 v1))
           ((send_analysis v12 #q0 #y0 v9 v4))
           ((send_analysis v12 #q0 #y0 v9 v5))
           ((send_analysis v12 #q0 #y0 v9 v7))
           ((send_analysis v12 #q0 #y0 v9 v8))
           ((send_analysis v12 #q0 #y0 v9 v3))
           ((drop_rock v14 v16))
           ((send_analysis v14 v19 v20 v9 v4))
           ((send_analysis v14 v19 v20 v9 v7))
           ((send_analysis v14 v19 v20 v9 v8))
           ((send_analysis v14 v19 v20 v9 v1))
           ((send_analysis v14 v19 v20 v9 v5))
           ((send_analysis v14 v19 v20 v9 v3))
           ((send_image v12 #q0 #y0 v9 v18 v11))
           ((send_image v14 v19 v20 v9 v17 v11))
           ((send_image v14 v19 v20 v9 v18 v11))
           ```
           
           Please provide a plan that achieves the goal from the initial state.

Model:     The scene describes two rovers, v12 and v14, each with a camera (v10) and a store (v16). There are several rocks (v1, v3, v4, v5, v7, v8) and objectives (v17, v18). The goal is to satisfy `new-axiom@0()`, which states:
             - `atconf(v12, v13)`
             - `atconf(v14, v15)`
             - `free(v12, v16)`
             - `free(v14, v16)`
             - `receivedimage(v17, v11)`
             - `receivedimage(v18, v11)`
             - `type(?stone, v2)` and `receivedanalysis(?stone)` (implies analyzing any rock of type `v2`)
             - `type(?soil, v6)` and `receivedanalysis(?soil)` (implies analyzing any rock of type `v6`)
           
           Let's break down the goal:
           1.  **`atconf(v12, v13)` and `atconf(v14, v15)`**: Both rovers are already at these configurations in the initial state.
           2.  **`free(v12, v16)` and `free(v14, v16)`**: Both rovers' stores are already free in the initial state.
           3.  **`receivedimage(v17, v11)` and `receivedimage(v18, v11)`**: This requires taking images of objective v17 and v18, and then sending them to the lander v9.
           4.  **`receivedanalysis(?stone)` for rocks of type `v2`**: Rocks v1, v3, v4 are of type `v2`. We need to analyze and send analysis for at least one of these.
           5.  **`receivedanalysis(?soil)` for rocks of type `v6`**: Rocks v5, v7, v8 are of type `v6`. We need to analyze and send analysis for at least one of these.
           
           Considering the rovers and their initial positions:
           *   **Rover v12**:
               *   Currently at `v13`.
               *   Can see objective v18 from configuration `#q4` via ray `#y3`.
               *   Can communicate with lander v9 from configuration `#q0` via ray `#y0`.
               *   Can sample rocks v1, v4, v5, v7, v8 from `#o5`, and v3 from `#q8`.
           *   **Rover v14**:
               *   Currently at `v15`.
               *   Can see objective v17 from configuration `#o3` via ray `#o4`.
               *   Can see objective v18 from configuration `#q7` via ray `#y4`.
               *   Can communicate with lander v9 from configuration `v19` via ray `v20`.
               *   Can sample rocks v4, v7, v8 from `#o5`, v5 from `#q5`, v3 from `#q6`, and v1 from `#q1`.
           
           Plan strategy:
           1.  **Handle image goals**:
               *   Rover v12 can handle `receivedimage(v18, v11)`. It needs to move to `#q4`, calibrate, take image of v18, then move to `#q0` and send the image.
               *   Rover v14 can handle `receivedimage(v17, v11)`. It needs to move to `#o3`, calibrate, take image of v17, then move to `v19` and send the image.
           2.  **Handle analysis goals**:
               *   Rover v12 can sample v3 (type v2) from `#q8`, then move to `#q0` and send analysis.
               *   Rover v12 can sample v5 (type v6) from `#o5`, then move to `#q0` and send analysis.
           
           Let's optimize to minimize moves:
           *   **Rover v12:**
               1.  Move to `#o5` to sample a rock of type v6 (e.g., v5).
               2.  Sample v5.
               3.  Move to `#q8` to sample a rock of type v2 (e.g., v3).
               4.  Sample v3.
               5.  Move to `#q4` to take image of v18.
               6.  Calibrate camera.
               7.  Take image of v18.
               8.  Move to `#q0` for communication.
               9.  Send analysis for v3.
               10. Send analysis for v5.
               11. Send image of v18.
           
           *   **Rover v14:**
               1.  Move to `#o3` to take image of v17.
               2.  Calibrate camera.
               3.  Take image of v17.
               4.  Move to `v19` for communication.
               5.  Send image of v17.
           
           We need to make sure the costs are minimal, but the current problem doesn't specify costs for actions. The goal is just to achieve the end state.
           
           Let's refine rover v12's actions to ensure calibration is done before taking image and analysis before sending.
           Initial state for v12: atconf(v12, v13), free(v12, v16)
           Initial state for v14: atconf(v14, v15), free(v14, v16)
           
           **Rover v12:**
           1.  Move to `#o5` to sample a rock of type v6.
               `move v12 v13 #o2 #o5`
           2.  Sample rock v5 (type v6).
               `sample_rock v12 #o5 v5 v16`
           3.  Move to `#q8` to sample a rock of type v2.
               `move v12 #o5 #o2 #q8`
           4.  Sample rock v3 (type v2).
               `sample_rock v12 #q8 v3 v16`
           5.  Move to `#q4` to take image of v18.
               `move v12 #q8 #o2 #q4`
           6.  Calibrate camera.
               `calibrate v12 #q4 #y3 v18 v10`
           7.  Take image of v18.
               `take_image v12 #q4 #y3 v18 v10 v11`
           8.  Move to `#q0` for communication.
               `move v12 #q4 #t7 #q0` (This uses a specific motion that ends at q0)
           9.  Send analysis for v5.
               `send_analysis v12 #q0 #y0 v9 v5`
           10. Send analysis for v3.
               `send_analysis v12 #q0 #y0 v9 v3`
           11. Send image of v18.
               `send_image v12 #q0 #y0 v9 v18 v11`
           
           **Rover v14:**
           1.  Move to `#o3` to take image of v17.
               `move v14 v15 #o2 #o3` (Assuming direct move, or sequence of moves to #o3)
           2.  Calibrate camera.
               `calibrate v14 #o3 #o4 v17 v10`
           3.  Take image of v17.
               `take_image v14 #o3 #o4 v17 v10 v11`
           4.  Move to `v19` for communication.
               `move v14 #o3 #o2 v19`
           5.  Send image of v17.
               `send_image v14 v19 v20 v9 v17 v11`
           
           All initial `atconf` and `free` conditions remain met. All `receivedimage` and `receivedanalysis` goals are met.
           
           --Plan--:
           (move v12 v13 #o2 #o5)
           (sample_rock v12 #o5 v5 v16)
           (move v12 #o5 #o2 #q8)
           (sample_rock v12 #q8 v3 v16)
           (move v12 #q8 #o2 #q4)
           (calibrate v12 #q4 #y3 v18 v10)
           (take_image v12 #q4 #y3 v18 v10 v11)
           (move v12 #q4 #t7 #q0)
           (send_analysis v12 #q0 #y0 v9 v5)
           (send_analysis v12 #q0 #y0 v9 v3)
           (send_image v12 #q0 #y0 v9 v18 v11)
           (move v14 v15 #o2 #o3)
           (calibrate v14 #o3 #o4 v17 v10)
           (take_image v14 #o3 #o4 v17 v10 v11)
           (move v14 #o3 #o2 v19)
           (send_image v14 v19 v20 v9 v17 v11)

